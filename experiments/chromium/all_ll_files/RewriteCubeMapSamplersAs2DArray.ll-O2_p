; ModuleID = '../../third_party/angle/src/compiler/translator/tree_ops/vulkan/RewriteCubeMapSamplersAs2DArray.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/tree_ops/vulkan/RewriteCubeMapSamplersAs2DArray.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.sh::StaticType::Helpers::StaticMangledName" = type { [4 x i8] }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.22" = type opaque
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.23"*, i64, i32, %"class.std::__1::basic_string.24" }
%"class.sh::TVector.23" = type opaque
%"class.std::__1::basic_string.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon.27 }
%union.anon.27 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.sh::TCompiler" = type { %"class.sh::TShHandleBase", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"struct.sh::ValidateASTOptions", %"class.angle::BitSetT", i8, i8, i32, i32, i32, %"class.sh::CallDAG", %"class.std::__1::vector.59", %struct.ShBuiltInResources, %"class.std::__1::basic_string", %"class.sh::TSymbolTable", %"class.std::__1::map.90", %"class.sh::ArrayBoundsClamper", %"class.sh::BuiltInFunctionEmulator", i32, %"class.sh::TInfoSink", %"class.sh::TDiagnostics", i8*, i8, i8, i8, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::map.124", %struct.TPragma, i64 }
%"class.sh::TShHandleBase" = type { i32 (...)**, %"class.angle::PoolAllocator" }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.3" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.117", i8, i8, %"class.std::__1::vector.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { i32*, i32*, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i32* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.sh::ShaderVariable"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.15" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.1" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.sh::InterfaceBlock"* }
%"struct.sh::ValidateASTOptions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.angle::BitSetT" = type { i32 }
%"class.sh::CallDAG" = type { %"class.std::__1::vector.20", %"class.std::__1::map" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.sh::CallDAG::Record"*, %"struct.sh::CallDAG::Record"*, %"class.std::__1::__compressed_pair.46" }
%"struct.sh::CallDAG::Record" = type { %"class.sh::TIntermFunctionDefinition"*, %"class.std::__1::vector.39" }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector" = type opaque
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TConstantUnion" = type { %union.anon.30, i32 }
%union.anon.30 = type { i32 }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { i32*, i32*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i32* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.sh::CallDAG::Record"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i64 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.sh::TCompiler::FunctionMetadata"*, %"struct.sh::TCompiler::FunctionMetadata"*, %"class.std::__1::__compressed_pair.61" }
%"struct.sh::TCompiler::FunctionMetadata" = type { i8 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.sh::TCompiler::FunctionMetadata"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.66", %"class.std::__1::vector.73", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map.81", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.std::__1::unique_ptr.75"*, %"class.std::__1::unique_ptr.75"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::unique_ptr.75" = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::unique_ptr.75"* }
%"class.std::__1::map.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::map.90" = type { %"class.std::__1::__tree.91" }
%"class.std::__1::__tree.91" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.sh::ArrayBoundsClamper" = type <{ i32, i8, [3 x i8] }>
%"class.sh::BuiltInFunctionEmulator" = type { %"class.std::__1::map.101", %"class.std::__1::map", %"class.std::__1::vector.39", %"class.std::__1::vector.110" }
%"class.std::__1::map.101" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { i8* (i32)**, i8* (i32)**, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i8* (i32)** }
%"class.sh::TInfoSink" = type { %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase" }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.117" }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.std::__1::map.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%struct.TPragma = type { i8, i8, i8, %"struct.TPragma::STDGL" }
%"struct.TPragma::STDGL" = type { i8 }
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31", i8, [7 x i8] }>
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector.31" = type { %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.sh::TIntermNode"** }
%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser" = type { %"class.sh::TIntermTraverser", %"class.absl::flat_hash_map", %"class.sh::TFunction"*, %"class.sh::TFunction"*, i8, %"class.sh::TIntermFunctionDefinition"*, %"class.sh::TIntermFunctionDefinition"* }
%"class.sh::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i32, i32, i8, %"class.std::__1::vector.135", %"class.sh::TSymbolTable"*, %"class.std::__1::vector.142", %"class.std::__1::vector.149", %"class.sh::TVector.31", %"class.std::__1::vector.156" }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"*, %"class.std::__1::__compressed_pair.137" }
%"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry" = type { %"class.sh::TIntermAggregateBase"*, %"class.sh::TIntermNode"*, %"class.sh::TVector.31" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.sh::TIntermTraverser::NodeReplaceWithMultipleEntry"* }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"*, %"class.std::__1::__compressed_pair.144" }
%"struct.sh::TIntermTraverser::NodeInsertMultipleEntry" = type { %"class.sh::TIntermBlock"*, i64, %"class.sh::TVector.31", %"class.sh::TVector.31" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.sh::TIntermTraverser::NodeInsertMultipleEntry"* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"struct.sh::TIntermTraverser::NodeUpdateEntry"*, %"class.std::__1::__compressed_pair.151" }
%"struct.sh::TIntermTraverser::NodeUpdateEntry" = type <{ %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.sh::TIntermTraverser::NodeUpdateEntry"* }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.sh::TIntermTraverser::ParentBlock"*, %"struct.sh::TIntermTraverser::ParentBlock"*, %"class.std::__1::__compressed_pair.158" }
%"struct.sh::TIntermTraverser::ParentBlock" = type { %"class.sh::TIntermBlock"*, i64 }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.sh::TIntermTraverser::ParentBlock"* }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.sh::TVariable"*, %"class.sh::TVariable"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.170", i8, [7 x i8] }>
%"class.sh::TVector.170" = type { %"class.std::__1::vector.171" }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { i32*, i32*, %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31", i8, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.31" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.sh::TIntermPreprocessorDirective" = type { %"class.sh::TIntermNode", i32, %"class.sh::ImmutableString" }

$_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE = comdat any

$_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE = comdat any

$_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE = comdat any

$_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE = comdat any

$_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE = comdat any

$_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE = comdat any

$_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE = comdat any

$_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE = comdat any

$_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE = comdat any

$_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE = comdat any

$_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE = comdat any

$_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE = comdat any

$_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE = comdat any

$_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE = comdat any

$_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE = comdat any

$_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE2atIS6_S7_EEDTclsrT0_5valueclL_ZNSC_9addressofISG_EEPT_RSM_EclL_ZNSC_7declvalIRSG_EEDTclsr3std3__1E9__declvalISM_ELi0EEEvEEEEERKSM_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZTVN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"*)* @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserD2Ev to i8*), i8* bitcast (void (%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"*)* @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserD0Ev to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*)* @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*)* @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*)* @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*)* @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*)* @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*)* @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*)* @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*)* @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"*, i32, %"class.sh::TIntermAggregate"*)* @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*)* @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"*, i32, %"class.sh::TIntermDeclaration"*)* @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*)* @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*)* @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*)* @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*)* @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*)* @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*)* @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*)* @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE to i8*), i8* bitcast (void (%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*)* @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE to i8*)] }, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@.str = private unnamed_addr constant [12 x i8] c"textureCube\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"textureGrad\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"textureCubeLod\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"textureLod\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"textureCubeGrad\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"texture\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"exp2\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh2ELh1EEE = internal constant %"struct.sh::StaticType::Helpers::StaticMangledName" { [4 x i8] c"10B\00" }, align 1
@_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh2ELh1EEE = internal global { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* } { i32 1, i32 0, i32 1, i8 0, i8 0, %"struct.sh::TMemoryQualifier" zeroinitializer, { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 } { i32 -1, i32 0, i32 0, i32 0, %"struct.sh::WorkGroupSize" { [3 x i32] [i32 -1, i32 -1, i32 -1] }, i32 -1, i32 -1, i32 0, i32 -1, i8 0, i8 0, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i8 0 }, i8 2, i8 1, %"class.sh::TSpan" zeroinitializer, %"class.sh::TVector.22"* null, %"class.sh::TInterfaceBlock"* null, %"class.sh::TStructure"* null, i8 0, i64 0, i8* getelementptr inbounds (%"struct.sh::StaticType::Helpers::StaticMangledName", %"struct.sh::StaticType::Helpers::StaticMangledName"* @_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh2ELh1EEE, i32 0, i32 0, i32 0) }, align 8
@_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE = internal constant %"struct.sh::StaticType::Helpers::StaticMangledName" { [4 x i8] c"20B\00" }, align 1
@_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE = internal global { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* } { i32 1, i32 0, i32 1, i8 0, i8 0, %"struct.sh::TMemoryQualifier" zeroinitializer, { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 } { i32 -1, i32 0, i32 0, i32 0, %"struct.sh::WorkGroupSize" { [3 x i32] [i32 -1, i32 -1, i32 -1] }, i32 -1, i32 -1, i32 0, i32 -1, i8 0, i8 0, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i8 0 }, i8 3, i8 1, %"class.sh::TSpan" zeroinitializer, %"class.sh::TVector.22"* null, %"class.sh::TInterfaceBlock"* null, %"class.sh::TStructure"* null, i8 0, i64 0, i8* getelementptr inbounds (%"struct.sh::StaticType::Helpers::StaticMangledName", %"struct.sh::StaticType::Helpers::StaticMangledName"* @_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE, i32 0, i32 0, i32 0) }, align 8
@_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE = internal constant %"struct.sh::StaticType::Helpers::StaticMangledName" { [4 x i8] c"00B\00" }, align 1
@_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE = internal global { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* } { i32 1, i32 0, i32 1, i8 0, i8 0, %"struct.sh::TMemoryQualifier" zeroinitializer, { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 } { i32 -1, i32 0, i32 0, i32 0, %"struct.sh::WorkGroupSize" { [3 x i32] [i32 -1, i32 -1, i32 -1] }, i32 -1, i32 -1, i32 0, i32 -1, i8 0, i8 0, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i8 0 }, i8 1, i8 1, %"class.sh::TSpan" zeroinitializer, %"class.sh::TVector.22"* null, %"class.sh::TInterfaceBlock"* null, %"class.sh::TStructure"* null, i8 0, i64 0, i8* getelementptr inbounds (%"struct.sh::StaticType::Helpers::StaticMangledName", %"struct.sh::StaticType::Helpers::StaticMangledName"* @_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE, i32 0, i32 0, i32 0) }, align 8
@.str.11 = private unnamed_addr constant [45 x i8] c"absl::container_internal::raw_hash_map<>::at\00", align 1
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@_ZN2sh12_GLOBAL__N_123kCoordTransformFuncNameE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i32 0, i32 0), i64 26 }, align 8
@_ZN2sh12_GLOBAL__N_131kCoordTransformFuncNameImplicitE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i64 34 }, align 8
@.str.13 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"dPdx\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"dPdy\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"dUVdx\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"dUVdy\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"outerProduct\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@_ZTVN2sh12TIntermBlockE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8
@_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh3EEE = internal constant %"struct.sh::StaticType::Helpers::StaticMangledName" { [4 x i8] c"A0B\00" }, align 1
@_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh3EEE = internal global { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* } { i32 1, i32 0, i32 1, i8 0, i8 0, %"struct.sh::TMemoryQualifier" zeroinitializer, { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 } { i32 -1, i32 0, i32 0, i32 0, %"struct.sh::WorkGroupSize" { [3 x i32] [i32 -1, i32 -1, i32 -1] }, i32 -1, i32 -1, i32 0, i32 -1, i8 0, i8 0, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i8 0 }, i8 3, i8 3, %"class.sh::TSpan" zeroinitializer, %"class.sh::TVector.22"* null, %"class.sh::TInterfaceBlock"* null, %"class.sh::TStructure"* null, i8 0, i64 0, i8* getelementptr inbounds (%"struct.sh::StaticType::Helpers::StaticMangledName", %"struct.sh::StaticType::Helpers::StaticMangledName"* @_ZN2sh10StaticType7HelpersL20kMangledNameInstanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh3EEE, i32 0, i32 0, i32 0) }, align 8
@_ZTVN2sh13TIntermBranchE = external unnamed_addr constant { [29 x i8*] }, align 8
@.str.29 = private unnamed_addr constant [27 x i8] c"ANGLECubeMapCoordTransform\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"ANGLECubeMapCoordTransformImplicit\00", align 1
@_ZTVN2sh18TIntermDeclarationE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh31RewriteCubeMapSamplersAs2DArrayEPNS_9TCompilerEPNS_12TIntermBlockEPNS_12TSymbolTableEb(%"class.sh::TCompiler"*, %"class.sh::TIntermBlock"*, %"class.sh::TSymbolTable"*, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", align 8
  %6 = alloca %"class.sh::TVector.31", align 8
  %7 = alloca %"class.sh::TVector.31", align 8
  %8 = bitcast %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 232, i1 false)
  %9 = zext i1 %3 to i8
  %10 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"* nonnull %10, i1 zeroext true, i1 zeroext false, i1 zeroext false, %"class.sh::TSymbolTable"* %2) #6
  %11 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5, i64 0, i32 4
  %15 = bitcast %"union.absl::container_internal::map_slot_type"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 48, i1 false) #6
  store i8 %9, i8* %14, align 8
  %16 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5, i64 0, i32 5
  %17 = bitcast %"class.sh::TIntermFunctionDefinition"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #6
  call void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermTraverser"* nonnull %10) #6
  %18 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 0
  %19 = call zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"* nonnull %10, %"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %18) #6
  br i1 %19, label %20, label %74

20:                                               ; preds = %4
  %21 = load %"class.sh::TIntermFunctionDefinition"*, %"class.sh::TIntermFunctionDefinition"** %16, align 8
  %22 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5, i64 0, i32 6
  %23 = load %"class.sh::TIntermFunctionDefinition"*, %"class.sh::TIntermFunctionDefinition"** %22, align 8
  %24 = call i64 @_ZN2sh32FindFirstFunctionDefinitionIndexEPNS_12TIntermBlockE(%"class.sh::TIntermBlock"* %1) #6
  %25 = icmp eq %"class.sh::TIntermFunctionDefinition"* %21, null
  br i1 %25, label %48, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.sh::TVector.31"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #6
  %28 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %29 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %28, i64 8) #6
  %30 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.sh::TVector.31"* %6 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.sh::TIntermNode"*** %33 to i8**
  store i8* %32, i8** %34, align 8
  %35 = bitcast i8* %29 to i64*
  %36 = ptrtoint %"class.sh::TIntermFunctionDefinition"* %21 to i64
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %29, i64 8
  %38 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 1
  %39 = bitcast %"class.sh::TIntermNode"*** %30 to i64*
  %40 = ptrtoint i8* %37 to i64
  store i64 %40, i64* %39, align 8
  %41 = call zeroext i1 @_ZN2sh20TIntermAggregateBase16insertChildNodesEmRKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TIntermAggregateBase"* %38, i64 %24, %"class.sh::TVector.31"* nonnull dereferenceable(24) %6) #6
  %42 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %42, align 8
  %44 = icmp eq %"class.sh::TIntermNode"** %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %26
  %46 = ptrtoint %"class.sh::TIntermNode"** %43 to i64
  store i64 %46, i64* %39, align 8
  br label %47

47:                                               ; preds = %26, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #6
  br label %48

48:                                               ; preds = %20, %47
  %49 = icmp eq %"class.sh::TIntermFunctionDefinition"* %23, null
  br i1 %49, label %72, label %50

50:                                               ; preds = %48
  %51 = bitcast %"class.sh::TVector.31"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #6
  %52 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %53 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %52, i64 8) #6
  %54 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.sh::TVector.31"* %7 to i8**
  store i8* %53, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 8
  %57 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.sh::TIntermNode"*** %57 to i8**
  store i8* %56, i8** %58, align 8
  %59 = bitcast i8* %53 to i64*
  %60 = ptrtoint %"class.sh::TIntermFunctionDefinition"* %23 to i64
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds i8, i8* %53, i64 8
  %62 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 1
  %63 = bitcast %"class.sh::TIntermNode"*** %54 to i64*
  %64 = ptrtoint i8* %61 to i64
  store i64 %64, i64* %63, align 8
  %65 = call zeroext i1 @_ZN2sh20TIntermAggregateBase16insertChildNodesEmRKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TIntermAggregateBase"* %62, i64 %24, %"class.sh::TVector.31"* nonnull dereferenceable(24) %7) #6
  %66 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %66, align 8
  %68 = icmp eq %"class.sh::TIntermNode"** %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %50
  %70 = ptrtoint %"class.sh::TIntermNode"** %67 to i64
  store i64 %70, i64* %63, align 8
  br label %71

71:                                               ; preds = %50, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #6
  br label %72

72:                                               ; preds = %48, %71
  %73 = call zeroext i1 @_ZN2sh9TCompiler11validateASTEPNS_11TIntermNodeE(%"class.sh::TCompiler"* %0, %"class.sh::TIntermNode"* %18) #6
  br label %74

74:                                               ; preds = %4, %72
  %75 = phi i1 [ %73, %72 ], [ false, %4 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %76 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %5, i64 0, i32 1, i32 0, i32 0, i32 3
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %80) #13
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %12, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #6
  br label %81

81:                                               ; preds = %74, %79
  call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %8) #6
  ret i1 %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2sh12TIntermBlock8traverseEPNS_16TIntermTraverserE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTraverser"*) unnamed_addr #2

declare zeroext i1 @_ZN2sh16TIntermTraverser10updateTreeEPNS_9TCompilerEPNS_11TIntermNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TCompiler"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare i64 @_ZN2sh32FindFirstFunctionDefinitionIndexEPNS_12TIntermBlockE(%"class.sh::TIntermBlock"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2sh20TIntermAggregateBase16insertChildNodesEmRKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TIntermAggregateBase"*, i64, %"class.sh::TVector.31"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN2sh9TCompiler11validateASTEPNS_11TIntermNodeE(%"class.sh::TCompiler"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserD2Ev(%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %12) #6
  ret void
}

declare void @_ZN2sh16TIntermTraverserC2EbbbPNS_12TSymbolTableE(%"class.sh::TIntermTraverser"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.sh::TSymbolTable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserD0Ev(%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #6
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0
  tail call void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"* %12) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermSymbol"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitSwizzleENS_5VisitEPNS_14TIntermSwizzleE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwizzle"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBinaryENS_5VisitEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBinary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitUnaryENS_5VisitEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermUnary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser12visitTernaryENS_5VisitEPNS_14TIntermTernaryE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermTernary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitIfElseENS_5VisitEPNS_13TIntermIfElseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermIfElse"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitSwitchENS_5VisitEPNS_13TIntermSwitchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitCaseENS_5VisitEPNS_11TIntermCaseE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermCase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser22visitFunctionPrototypeEPNS_24TIntermFunctionPrototypeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser23visitFunctionDefinitionENS_5VisitEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverser14visitAggregateENS_5VisitEPNS_16TIntermAggregateE(%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"*, i32, %"class.sh::TIntermAggregate"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sh::TVariable"*, align 8
  %5 = alloca %"class.sh::TVector.31", align 8
  %6 = alloca %"class.sh::TVector.31", align 8
  %7 = alloca %"class.sh::TVector.31", align 8
  %8 = alloca %"class.sh::TVector.31", align 8
  %9 = alloca %"class.sh::TVector.31", align 8
  %10 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 3
  br i1 %12, label %13, label %2373

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 5
  %15 = bitcast %"class.sh::TFunction"** %14 to %"class.sh::TSymbol"**
  %16 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %15, align 8
  %17 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %16) #6
  %18 = extractvalue { i8*, i64 } %17, 0
  %19 = icmp eq i8* %18, null
  %20 = select i1 %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %18
  %21 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #6
  br i1 %21, label %22, label %2373

22:                                               ; preds = %13
  %23 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %16) #6
  %24 = extractvalue { i8*, i64 } %23, 0
  %25 = icmp eq i8* %24, null
  %26 = select i1 %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %24
  %27 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %26, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #6
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %16) #6
  %30 = extractvalue { i8*, i64 } %29, 0
  %31 = icmp eq i8* %30, null
  %32 = select i1 %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %30
  %33 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #6
  br i1 %33, label %41, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 4
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = xor i1 %37, true
  %39 = zext i1 %38 to i8
  %40 = select i1 %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)
  br label %41

41:                                               ; preds = %34, %28, %22
  %42 = phi i8 [ 0, %22 ], [ 1, %28 ], [ %39, %34 ]
  %43 = phi i1 [ false, %22 ], [ true, %28 ], [ false, %34 ]
  %44 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), %22 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), %28 ], [ %40, %34 ]
  %45 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TVector.31"* (%"class.sh::TIntermAggregate"*)***
  %46 = load %"class.sh::TVector.31"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermAggregate"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermAggregate"*)** %46, i64 32
  %48 = load %"class.sh::TVector.31"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermAggregate"*)** %47, align 8
  %49 = tail call %"class.sh::TVector.31"* %48(%"class.sh::TIntermAggregate"* %2) #6
  %50 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %51 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %50, i64 32) #6
  %52 = bitcast i8* %51 to %"class.sh::TIntermSymbol"*
  %53 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0
  %54 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0, i32 8
  %55 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %54, align 8
  %56 = tail call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %55, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %52, %"class.sh::TVariable"* %56) #6
  %57 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %58 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %57, i64 32) #6
  %59 = bitcast i8* %58 to %"class.sh::TIntermSymbol"*
  %60 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %54, align 8
  %61 = tail call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %60, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh2ELh1EEE to %"class.sh::TType"*)) #6
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %59, %"class.sh::TVariable"* %61) #6
  %62 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %63 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %62, i64 32) #6
  %64 = bitcast i8* %63 to %"class.sh::TIntermSymbol"*
  %65 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %54, align 8
  %66 = tail call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %65, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh2ELh1EEE to %"class.sh::TType"*)) #6
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %64, %"class.sh::TVariable"* %66) #6
  br i1 %43, label %67, label %95

67:                                               ; preds = %41
  %68 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %49, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %68, align 8
  %70 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %69, i64 2
  %71 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %70, align 8
  %72 = bitcast %"class.sh::TIntermNode"* %71 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %73 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %73, i64 4
  %75 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %74, align 8
  %76 = tail call %"class.sh::TIntermTyped"* %75(%"class.sh::TIntermNode"* %71) #6
  %77 = bitcast %"class.sh::TIntermTyped"* %76 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %78 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %78, i64 23
  %80 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %79, align 8
  %81 = tail call %"class.sh::TIntermTyped"* %80(%"class.sh::TIntermTyped"* %76) #6
  %82 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %68, align 8
  %83 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %82, i64 3
  %84 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %83, align 8
  %85 = bitcast %"class.sh::TIntermNode"* %84 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %86 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %86, i64 4
  %88 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %87, align 8
  %89 = tail call %"class.sh::TIntermTyped"* %88(%"class.sh::TIntermNode"* %84) #6
  %90 = bitcast %"class.sh::TIntermTyped"* %89 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %91 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %91, i64 23
  %93 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %92, align 8
  %94 = tail call %"class.sh::TIntermTyped"* %93(%"class.sh::TIntermTyped"* %89) #6
  br label %112

95:                                               ; preds = %41
  %96 = icmp eq i8 %42, 0
  br i1 %96, label %109, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 4
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %49, i64 0, i32 0, i32 0, i32 1
  %103 = bitcast %"class.sh::TIntermNode"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.sh::TVector.31"* %49 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %104, %106
  %108 = icmp eq i64 %107, 24
  br i1 %108, label %119, label %109

109:                                              ; preds = %101, %97, %95
  %110 = tail call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  %111 = tail call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  br label %112

112:                                              ; preds = %109, %67
  %113 = phi %"class.sh::TIntermTyped"* [ %81, %67 ], [ %110, %109 ]
  %114 = phi %"class.sh::TIntermTyped"* [ %94, %67 ], [ %111, %109 ]
  %115 = icmp eq i8 %42, 0
  br i1 %115, label %127, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 4
  %118 = load i8, i8* %117, align 8, !range !2
  br label %119

119:                                              ; preds = %116, %101
  %120 = phi i8 [ %118, %116 ], [ 1, %101 ]
  %121 = phi i1 [ false, %116 ], [ true, %101 ]
  %122 = phi %"class.sh::TIntermTyped"* [ %114, %116 ], [ null, %101 ]
  %123 = phi %"class.sh::TIntermTyped"* [ %113, %116 ], [ null, %101 ]
  %124 = icmp eq i8 %120, 0
  %125 = select i1 %124, i8 0, i8 %42
  %126 = select i1 %124, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* %44
  br label %127

127:                                              ; preds = %119, %112
  %128 = phi i1 [ false, %112 ], [ %121, %119 ]
  %129 = phi %"class.sh::TIntermTyped"* [ %114, %112 ], [ %122, %119 ]
  %130 = phi %"class.sh::TIntermTyped"* [ %113, %112 ], [ %123, %119 ]
  %131 = phi i8 [ 0, %112 ], [ %125, %119 ]
  %132 = phi i8* [ %44, %112 ], [ %126, %119 ]
  %133 = bitcast %"class.sh::TVector.31"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #6
  %134 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 1
  %136 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 24, i1 false) #6
  %137 = getelementptr inbounds i8, i8* %58, i64 24
  %138 = bitcast i8* %137 to %"class.sh::TVariable"**
  %139 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %138, align 8
  %140 = tail call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %139) #6
  %141 = ptrtoint %"class.sh::TIntermDeclaration"* %140 to i64
  %142 = bitcast %"class.sh::TIntermNode"*** %135 to i64*
  %143 = bitcast %"class.sh::TVector.31"* %7 to i64*
  %144 = bitcast %"class.sh::TIntermNode"*** %136 to i64*
  %145 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %146 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %145, i64 8) #6
  %147 = bitcast i8* %146 to %"class.sh::TIntermNode"**
  %148 = getelementptr inbounds i8, i8* %146, i64 8
  %149 = ptrtoint i8* %148 to i64
  %150 = bitcast i8* %146 to i64*
  store i64 %141, i64* %150, align 8
  %151 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %134, align 8
  %152 = ptrtoint %"class.sh::TIntermNode"** %151 to i64
  %153 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %135, align 8
  %154 = bitcast %"class.sh::TIntermNode"** %153 to i8*
  %155 = icmp eq %"class.sh::TIntermNode"** %153, %151
  br i1 %155, label %329, label %156

156:                                              ; preds = %127
  %157 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %153, i64 -1
  %158 = ptrtoint %"class.sh::TIntermNode"** %157 to i64
  %159 = sub i64 %158, %152
  %160 = lshr i64 %159, 3
  %161 = add nuw nsw i64 %160, 1
  %162 = icmp ult i64 %161, 4
  br i1 %162, label %259, label %163

163:                                              ; preds = %156
  %164 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %153, i64 -1
  %165 = ptrtoint %"class.sh::TIntermNode"** %164 to i64
  %166 = sub i64 %165, %152
  %167 = lshr i64 %166, 3
  %168 = and i64 %166, -8
  %169 = xor i64 %168, -8
  %170 = getelementptr i8, i8* %146, i64 %169
  %171 = xor i64 %167, -1
  %172 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %153, i64 %171
  %173 = bitcast %"class.sh::TIntermNode"** %172 to i8*
  %174 = icmp ult i8* %170, %154
  %175 = icmp ugt i8* %146, %173
  %176 = and i1 %174, %175
  br i1 %176, label %259, label %177

177:                                              ; preds = %163
  %178 = and i64 %161, 4611686018427387900
  %179 = sub nsw i64 0, %178
  %180 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %147, i64 %179
  %181 = sub nsw i64 0, %178
  %182 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %153, i64 %181
  %183 = add nsw i64 %178, -4
  %184 = lshr exact i64 %183, 2
  %185 = add nuw nsw i64 %184, 1
  %186 = and i64 %185, 1
  %187 = icmp eq i64 %183, 0
  br i1 %187, label %234, label %188

188:                                              ; preds = %177
  %189 = sub nuw nsw i64 %185, %186
  %190 = getelementptr i8, i8* %146, i64 -8
  %191 = bitcast i8* %190 to %"class.sh::TIntermNode"**
  %192 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %153, i64 -1
  %193 = getelementptr i8, i8* %146, i64 -8
  %194 = bitcast i8* %193 to %"class.sh::TIntermNode"**
  %195 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %153, i64 -1
  br label %196

196:                                              ; preds = %196, %188
  %197 = phi i64 [ 0, %188 ], [ %231, %196 ]
  %198 = phi i64 [ %189, %188 ], [ %232, %196 ]
  %199 = sub i64 0, %197
  %200 = sub i64 0, %197
  %201 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %191, i64 %199
  %202 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %192, i64 %200
  %203 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %202, i64 -1
  %204 = bitcast %"class.sh::TIntermNode"** %203 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8, !alias.scope !3
  %206 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %202, i64 -2
  %207 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %206, i64 -1
  %208 = bitcast %"class.sh::TIntermNode"** %207 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 8, !alias.scope !3
  %210 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %201, i64 -1
  %211 = bitcast %"class.sh::TIntermNode"** %210 to <2 x i64>*
  store <2 x i64> %205, <2 x i64>* %211, align 8, !alias.scope !6, !noalias !3
  %212 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %201, i64 -2
  %213 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %212, i64 -1
  %214 = bitcast %"class.sh::TIntermNode"** %213 to <2 x i64>*
  store <2 x i64> %209, <2 x i64>* %214, align 8, !alias.scope !6, !noalias !3
  %215 = sub nuw nsw i64 -4, %197
  %216 = sub nuw nsw i64 -4, %197
  %217 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %194, i64 %215
  %218 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %195, i64 %216
  %219 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %218, i64 -1
  %220 = bitcast %"class.sh::TIntermNode"** %219 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 8, !alias.scope !3
  %222 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %218, i64 -2
  %223 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %222, i64 -1
  %224 = bitcast %"class.sh::TIntermNode"** %223 to <2 x i64>*
  %225 = load <2 x i64>, <2 x i64>* %224, align 8, !alias.scope !3
  %226 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %217, i64 -1
  %227 = bitcast %"class.sh::TIntermNode"** %226 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %227, align 8, !alias.scope !6, !noalias !3
  %228 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %217, i64 -2
  %229 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %228, i64 -1
  %230 = bitcast %"class.sh::TIntermNode"** %229 to <2 x i64>*
  store <2 x i64> %225, <2 x i64>* %230, align 8, !alias.scope !6, !noalias !3
  %231 = add i64 %197, 8
  %232 = add i64 %198, -2
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %196, !llvm.loop !8

234:                                              ; preds = %196, %177
  %235 = phi i64 [ 0, %177 ], [ %231, %196 ]
  %236 = icmp eq i64 %186, 0
  br i1 %236, label %257, label %237

237:                                              ; preds = %234
  %238 = sub i64 0, %235
  %239 = getelementptr i8, i8* %146, i64 -8
  %240 = bitcast i8* %239 to %"class.sh::TIntermNode"**
  %241 = sub i64 0, %235
  %242 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %153, i64 -1
  %243 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %240, i64 %238
  %244 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %242, i64 %241
  %245 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -1
  %246 = bitcast %"class.sh::TIntermNode"** %245 to <2 x i64>*
  %247 = load <2 x i64>, <2 x i64>* %246, align 8, !alias.scope !3
  %248 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %244, i64 -2
  %249 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %248, i64 -1
  %250 = bitcast %"class.sh::TIntermNode"** %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !3
  %252 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -1
  %253 = bitcast %"class.sh::TIntermNode"** %252 to <2 x i64>*
  store <2 x i64> %247, <2 x i64>* %253, align 8, !alias.scope !6, !noalias !3
  %254 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %243, i64 -2
  %255 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %254, i64 -1
  %256 = bitcast %"class.sh::TIntermNode"** %255 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %256, align 8, !alias.scope !6, !noalias !3
  br label %257

257:                                              ; preds = %234, %237
  %258 = icmp eq i64 %161, %178
  br i1 %258, label %329, label %259

259:                                              ; preds = %257, %163, %156
  %260 = phi %"class.sh::TIntermNode"** [ %147, %163 ], [ %147, %156 ], [ %180, %257 ]
  %261 = phi %"class.sh::TIntermNode"** [ %153, %163 ], [ %153, %156 ], [ %182, %257 ]
  %262 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %261, i64 -1
  %263 = ptrtoint %"class.sh::TIntermNode"** %262 to i64
  %264 = sub i64 %263, %152
  %265 = lshr i64 %264, 3
  %266 = add nuw nsw i64 %265, 1
  %267 = and i64 %266, 7
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %280, label %269

269:                                              ; preds = %259, %269
  %270 = phi %"class.sh::TIntermNode"** [ %273, %269 ], [ %260, %259 ]
  %271 = phi %"class.sh::TIntermNode"** [ %274, %269 ], [ %261, %259 ]
  %272 = phi i64 [ %278, %269 ], [ %267, %259 ]
  %273 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %270, i64 -1
  %274 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %271, i64 -1
  %275 = bitcast %"class.sh::TIntermNode"** %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.sh::TIntermNode"** %273 to i64*
  store i64 %276, i64* %277, align 8
  %278 = add i64 %272, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %269, !llvm.loop !10

280:                                              ; preds = %269, %259
  %281 = phi %"class.sh::TIntermNode"** [ undef, %259 ], [ %273, %269 ]
  %282 = phi %"class.sh::TIntermNode"** [ %260, %259 ], [ %273, %269 ]
  %283 = phi %"class.sh::TIntermNode"** [ %261, %259 ], [ %274, %269 ]
  %284 = icmp ult i64 %264, 56
  br i1 %284, label %329, label %285

285:                                              ; preds = %280, %285
  %286 = phi %"class.sh::TIntermNode"** [ %323, %285 ], [ %282, %280 ]
  %287 = phi %"class.sh::TIntermNode"** [ %324, %285 ], [ %283, %280 ]
  %288 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %286, i64 -1
  %289 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -1
  %290 = bitcast %"class.sh::TIntermNode"** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %"class.sh::TIntermNode"** %288 to i64*
  store i64 %291, i64* %292, align 8
  %293 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %286, i64 -2
  %294 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -2
  %295 = bitcast %"class.sh::TIntermNode"** %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = bitcast %"class.sh::TIntermNode"** %293 to i64*
  store i64 %296, i64* %297, align 8
  %298 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %286, i64 -3
  %299 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -3
  %300 = bitcast %"class.sh::TIntermNode"** %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = bitcast %"class.sh::TIntermNode"** %298 to i64*
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %286, i64 -4
  %304 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -4
  %305 = bitcast %"class.sh::TIntermNode"** %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.sh::TIntermNode"** %303 to i64*
  store i64 %306, i64* %307, align 8
  %308 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %286, i64 -5
  %309 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -5
  %310 = bitcast %"class.sh::TIntermNode"** %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = bitcast %"class.sh::TIntermNode"** %308 to i64*
  store i64 %311, i64* %312, align 8
  %313 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %286, i64 -6
  %314 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -6
  %315 = bitcast %"class.sh::TIntermNode"** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = bitcast %"class.sh::TIntermNode"** %313 to i64*
  store i64 %316, i64* %317, align 8
  %318 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %286, i64 -7
  %319 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -7
  %320 = bitcast %"class.sh::TIntermNode"** %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %"class.sh::TIntermNode"** %318 to i64*
  store i64 %321, i64* %322, align 8
  %323 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %286, i64 -8
  %324 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %287, i64 -8
  %325 = bitcast %"class.sh::TIntermNode"** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = bitcast %"class.sh::TIntermNode"** %323 to i64*
  store i64 %326, i64* %327, align 8
  %328 = icmp eq %"class.sh::TIntermNode"** %324, %151
  br i1 %328, label %329, label %285, !llvm.loop !12

329:                                              ; preds = %280, %285, %257, %127
  %330 = phi %"class.sh::TIntermNode"** [ %147, %127 ], [ %180, %257 ], [ %281, %280 ], [ %323, %285 ]
  %331 = ptrtoint %"class.sh::TIntermNode"** %330 to i64
  store i64 %331, i64* %143, align 8
  store i64 %149, i64* %142, align 8
  store i64 %149, i64* %144, align 8
  %332 = getelementptr inbounds i8, i8* %63, i64 24
  %333 = bitcast i8* %332 to %"class.sh::TVariable"**
  %334 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %333, align 8
  %335 = tail call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %334) #6
  %336 = ptrtoint %"class.sh::TIntermDeclaration"* %335 to i64
  %337 = sub i64 %149, %331
  %338 = ashr exact i64 %337, 3
  %339 = add nsw i64 %338, 1
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %343

341:                                              ; preds = %329
  %342 = bitcast %"class.sh::TVector.31"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %342) #14
  unreachable

343:                                              ; preds = %329
  %344 = icmp ult i64 %338, 1152921504606846975
  br i1 %344, label %345, label %350

345:                                              ; preds = %343
  %346 = ashr exact i64 %337, 2
  %347 = icmp ult i64 %346, %339
  %348 = select i1 %347, i64 %339, i64 %346
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %356, label %350

350:                                              ; preds = %345, %343
  %351 = phi i64 [ %348, %345 ], [ 2305843009213693951, %343 ]
  %352 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %353 = shl i64 %351, 3
  %354 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %352, i64 %353) #6
  %355 = bitcast i8* %354 to %"class.sh::TIntermNode"**
  br label %356

356:                                              ; preds = %350, %345
  %357 = phi i64 [ %351, %350 ], [ 0, %345 ]
  %358 = phi %"class.sh::TIntermNode"** [ %355, %350 ], [ null, %345 ]
  %359 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %358, i64 %338
  %360 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %358, i64 %357
  %361 = ptrtoint %"class.sh::TIntermNode"** %360 to i64
  %362 = bitcast %"class.sh::TIntermNode"** %359 to i64*
  store i64 %336, i64* %362, align 8
  %363 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %359, i64 1
  %364 = ptrtoint %"class.sh::TIntermNode"** %363 to i64
  %365 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %134, align 8
  %366 = ptrtoint %"class.sh::TIntermNode"** %365 to i64
  %367 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %135, align 8
  %368 = icmp eq %"class.sh::TIntermNode"** %367, %365
  br i1 %368, label %538, label %369

369:                                              ; preds = %356
  %370 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %367, i64 -1
  %371 = ptrtoint %"class.sh::TIntermNode"** %370 to i64
  %372 = sub i64 %371, %366
  %373 = lshr i64 %372, 3
  %374 = add nuw nsw i64 %373, 1
  %375 = icmp ult i64 %374, 4
  br i1 %375, label %468, label %376

376:                                              ; preds = %369
  %377 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %367, i64 -1
  %378 = ptrtoint %"class.sh::TIntermNode"** %377 to i64
  %379 = sub i64 %378, %366
  %380 = lshr i64 %379, 3
  %381 = xor i64 %380, -1
  %382 = add nsw i64 %338, %381
  %383 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %358, i64 %382
  %384 = xor i64 %380, -1
  %385 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %367, i64 %384
  %386 = icmp ult %"class.sh::TIntermNode"** %383, %367
  %387 = icmp ult %"class.sh::TIntermNode"** %385, %359
  %388 = and i1 %386, %387
  br i1 %388, label %468, label %389

389:                                              ; preds = %376
  %390 = and i64 %374, 4611686018427387900
  %391 = sub nsw i64 0, %390
  %392 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %359, i64 %391
  %393 = sub nsw i64 0, %390
  %394 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %367, i64 %393
  %395 = add nsw i64 %390, -4
  %396 = lshr exact i64 %395, 2
  %397 = add nuw nsw i64 %396, 1
  %398 = and i64 %397, 1
  %399 = icmp eq i64 %395, 0
  br i1 %399, label %444, label %400

400:                                              ; preds = %389
  %401 = sub nuw nsw i64 %397, %398
  %402 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %359, i64 -1
  %403 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %367, i64 -1
  %404 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %359, i64 -1
  %405 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %367, i64 -1
  br label %406

406:                                              ; preds = %406, %400
  %407 = phi i64 [ 0, %400 ], [ %441, %406 ]
  %408 = phi i64 [ %401, %400 ], [ %442, %406 ]
  %409 = sub i64 0, %407
  %410 = sub i64 0, %407
  %411 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %402, i64 %409
  %412 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %403, i64 %410
  %413 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %412, i64 -1
  %414 = bitcast %"class.sh::TIntermNode"** %413 to <2 x i64>*
  %415 = load <2 x i64>, <2 x i64>* %414, align 8, !alias.scope !13
  %416 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %412, i64 -2
  %417 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %416, i64 -1
  %418 = bitcast %"class.sh::TIntermNode"** %417 to <2 x i64>*
  %419 = load <2 x i64>, <2 x i64>* %418, align 8, !alias.scope !13
  %420 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %411, i64 -1
  %421 = bitcast %"class.sh::TIntermNode"** %420 to <2 x i64>*
  store <2 x i64> %415, <2 x i64>* %421, align 8, !alias.scope !16, !noalias !13
  %422 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %411, i64 -2
  %423 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %422, i64 -1
  %424 = bitcast %"class.sh::TIntermNode"** %423 to <2 x i64>*
  store <2 x i64> %419, <2 x i64>* %424, align 8, !alias.scope !16, !noalias !13
  %425 = sub nuw nsw i64 -4, %407
  %426 = sub nuw nsw i64 -4, %407
  %427 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %404, i64 %425
  %428 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %405, i64 %426
  %429 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %428, i64 -1
  %430 = bitcast %"class.sh::TIntermNode"** %429 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8, !alias.scope !13
  %432 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %428, i64 -2
  %433 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %432, i64 -1
  %434 = bitcast %"class.sh::TIntermNode"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !13
  %436 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %427, i64 -1
  %437 = bitcast %"class.sh::TIntermNode"** %436 to <2 x i64>*
  store <2 x i64> %431, <2 x i64>* %437, align 8, !alias.scope !16, !noalias !13
  %438 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %427, i64 -2
  %439 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %438, i64 -1
  %440 = bitcast %"class.sh::TIntermNode"** %439 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %440, align 8, !alias.scope !16, !noalias !13
  %441 = add i64 %407, 8
  %442 = add i64 %408, -2
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %444, label %406, !llvm.loop !18

444:                                              ; preds = %406, %389
  %445 = phi i64 [ 0, %389 ], [ %441, %406 ]
  %446 = icmp eq i64 %398, 0
  br i1 %446, label %466, label %447

447:                                              ; preds = %444
  %448 = sub i64 0, %445
  %449 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %359, i64 -1
  %450 = sub i64 0, %445
  %451 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %367, i64 -1
  %452 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %449, i64 %448
  %453 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %451, i64 %450
  %454 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %453, i64 -1
  %455 = bitcast %"class.sh::TIntermNode"** %454 to <2 x i64>*
  %456 = load <2 x i64>, <2 x i64>* %455, align 8, !alias.scope !13
  %457 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %453, i64 -2
  %458 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %457, i64 -1
  %459 = bitcast %"class.sh::TIntermNode"** %458 to <2 x i64>*
  %460 = load <2 x i64>, <2 x i64>* %459, align 8, !alias.scope !13
  %461 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %452, i64 -1
  %462 = bitcast %"class.sh::TIntermNode"** %461 to <2 x i64>*
  store <2 x i64> %456, <2 x i64>* %462, align 8, !alias.scope !16, !noalias !13
  %463 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %452, i64 -2
  %464 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %463, i64 -1
  %465 = bitcast %"class.sh::TIntermNode"** %464 to <2 x i64>*
  store <2 x i64> %460, <2 x i64>* %465, align 8, !alias.scope !16, !noalias !13
  br label %466

466:                                              ; preds = %444, %447
  %467 = icmp eq i64 %374, %390
  br i1 %467, label %538, label %468

468:                                              ; preds = %466, %376, %369
  %469 = phi %"class.sh::TIntermNode"** [ %359, %376 ], [ %359, %369 ], [ %392, %466 ]
  %470 = phi %"class.sh::TIntermNode"** [ %367, %376 ], [ %367, %369 ], [ %394, %466 ]
  %471 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %470, i64 -1
  %472 = ptrtoint %"class.sh::TIntermNode"** %471 to i64
  %473 = sub i64 %472, %366
  %474 = lshr i64 %473, 3
  %475 = add nuw nsw i64 %474, 1
  %476 = and i64 %475, 7
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %489, label %478

478:                                              ; preds = %468, %478
  %479 = phi %"class.sh::TIntermNode"** [ %482, %478 ], [ %469, %468 ]
  %480 = phi %"class.sh::TIntermNode"** [ %483, %478 ], [ %470, %468 ]
  %481 = phi i64 [ %487, %478 ], [ %476, %468 ]
  %482 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %479, i64 -1
  %483 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %480, i64 -1
  %484 = bitcast %"class.sh::TIntermNode"** %483 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = bitcast %"class.sh::TIntermNode"** %482 to i64*
  store i64 %485, i64* %486, align 8
  %487 = add i64 %481, -1
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %478, !llvm.loop !19

489:                                              ; preds = %478, %468
  %490 = phi %"class.sh::TIntermNode"** [ undef, %468 ], [ %482, %478 ]
  %491 = phi %"class.sh::TIntermNode"** [ %469, %468 ], [ %482, %478 ]
  %492 = phi %"class.sh::TIntermNode"** [ %470, %468 ], [ %483, %478 ]
  %493 = icmp ult i64 %473, 56
  br i1 %493, label %538, label %494

494:                                              ; preds = %489, %494
  %495 = phi %"class.sh::TIntermNode"** [ %532, %494 ], [ %491, %489 ]
  %496 = phi %"class.sh::TIntermNode"** [ %533, %494 ], [ %492, %489 ]
  %497 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %495, i64 -1
  %498 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %496, i64 -1
  %499 = bitcast %"class.sh::TIntermNode"** %498 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = bitcast %"class.sh::TIntermNode"** %497 to i64*
  store i64 %500, i64* %501, align 8
  %502 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %495, i64 -2
  %503 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %496, i64 -2
  %504 = bitcast %"class.sh::TIntermNode"** %503 to i64*
  %505 = load i64, i64* %504, align 8
  %506 = bitcast %"class.sh::TIntermNode"** %502 to i64*
  store i64 %505, i64* %506, align 8
  %507 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %495, i64 -3
  %508 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %496, i64 -3
  %509 = bitcast %"class.sh::TIntermNode"** %508 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = bitcast %"class.sh::TIntermNode"** %507 to i64*
  store i64 %510, i64* %511, align 8
  %512 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %495, i64 -4
  %513 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %496, i64 -4
  %514 = bitcast %"class.sh::TIntermNode"** %513 to i64*
  %515 = load i64, i64* %514, align 8
  %516 = bitcast %"class.sh::TIntermNode"** %512 to i64*
  store i64 %515, i64* %516, align 8
  %517 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %495, i64 -5
  %518 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %496, i64 -5
  %519 = bitcast %"class.sh::TIntermNode"** %518 to i64*
  %520 = load i64, i64* %519, align 8
  %521 = bitcast %"class.sh::TIntermNode"** %517 to i64*
  store i64 %520, i64* %521, align 8
  %522 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %495, i64 -6
  %523 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %496, i64 -6
  %524 = bitcast %"class.sh::TIntermNode"** %523 to i64*
  %525 = load i64, i64* %524, align 8
  %526 = bitcast %"class.sh::TIntermNode"** %522 to i64*
  store i64 %525, i64* %526, align 8
  %527 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %495, i64 -7
  %528 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %496, i64 -7
  %529 = bitcast %"class.sh::TIntermNode"** %528 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = bitcast %"class.sh::TIntermNode"** %527 to i64*
  store i64 %530, i64* %531, align 8
  %532 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %495, i64 -8
  %533 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %496, i64 -8
  %534 = bitcast %"class.sh::TIntermNode"** %533 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = bitcast %"class.sh::TIntermNode"** %532 to i64*
  store i64 %535, i64* %536, align 8
  %537 = icmp eq %"class.sh::TIntermNode"** %533, %365
  br i1 %537, label %538, label %494, !llvm.loop !20

538:                                              ; preds = %489, %494, %466, %356
  %539 = phi %"class.sh::TIntermNode"** [ %359, %356 ], [ %392, %466 ], [ %490, %489 ], [ %532, %494 ]
  %540 = ptrtoint %"class.sh::TIntermNode"** %539 to i64
  store i64 %540, i64* %143, align 8
  store i64 %364, i64* %142, align 8
  store i64 %361, i64* %144, align 8
  %541 = and i8 %131, 1
  %542 = icmp eq i8 %541, 0
  %543 = or i1 %43, %542
  %544 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %49, i64 0, i32 0, i32 0, i32 0
  %545 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %544, align 8
  %546 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %545, i64 1
  %547 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %546, align 8
  %548 = bitcast %"class.sh::TIntermNode"* %547 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %549 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %548, align 8
  %550 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %549, i64 4
  %551 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %550, align 8
  %552 = tail call %"class.sh::TIntermTyped"* %551(%"class.sh::TIntermNode"* %547) #6
  %553 = bitcast %"class.sh::TIntermTyped"* %552 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %554 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %553, align 8
  %555 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %554, i64 23
  %556 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %555, align 8
  %557 = tail call %"class.sh::TIntermTyped"* %556(%"class.sh::TIntermTyped"* %552) #6
  br i1 %543, label %558, label %591

558:                                              ; preds = %538
  %559 = bitcast %"class.sh::TVector.31"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %559) #6
  %560 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 0
  %561 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 1
  %562 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %563 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %564 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %563, i64 40) #6
  %565 = bitcast %"class.sh::TVector.31"* %6 to i8**
  store i8* %564, i8** %565, align 8
  %566 = getelementptr inbounds i8, i8* %564, i64 40
  %567 = bitcast %"class.sh::TIntermNode"*** %562 to i8**
  store i8* %566, i8** %567, align 8
  %568 = bitcast i8* %564 to i64*
  %569 = ptrtoint %"class.sh::TIntermTyped"* %557 to i64
  store i64 %569, i64* %568, align 8
  %570 = getelementptr inbounds i8, i8* %564, i64 8
  %571 = bitcast i8* %570 to i64*
  %572 = ptrtoint %"class.sh::TIntermTyped"* %130 to i64
  store i64 %572, i64* %571, align 8
  %573 = getelementptr inbounds i8, i8* %564, i64 16
  %574 = bitcast i8* %573 to i64*
  %575 = ptrtoint %"class.sh::TIntermTyped"* %129 to i64
  store i64 %575, i64* %574, align 8
  %576 = getelementptr inbounds i8, i8* %564, i64 24
  %577 = bitcast i8* %576 to i64*
  %578 = ptrtoint i8* %58 to i64
  store i64 %578, i64* %577, align 8
  %579 = getelementptr inbounds i8, i8* %564, i64 32
  %580 = bitcast i8* %579 to i64*
  %581 = ptrtoint i8* %63 to i64
  store i64 %581, i64* %580, align 8
  %582 = bitcast %"class.sh::TIntermNode"*** %561 to i64*
  %583 = ptrtoint i8* %566 to i64
  store i64 %583, i64* %582, align 8
  %584 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 2
  %585 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %584, align 8
  %586 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80) %585, %"class.sh::TVector.31"* nonnull %6) #6
  %587 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %560, align 8
  %588 = icmp eq %"class.sh::TIntermNode"** %587, null
  br i1 %588, label %626, label %589

589:                                              ; preds = %558
  %590 = ptrtoint %"class.sh::TIntermNode"** %587 to i64
  store i64 %590, i64* %582, align 8
  br label %626

591:                                              ; preds = %538
  %592 = tail call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  %593 = tail call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  %594 = bitcast %"class.sh::TVector.31"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %594) #6
  %595 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %5, i64 0, i32 0, i32 0, i32 0
  %596 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %5, i64 0, i32 0, i32 0, i32 1
  %597 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %598 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %599 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %598, i64 40) #6
  %600 = bitcast %"class.sh::TVector.31"* %5 to i8**
  store i8* %599, i8** %600, align 8
  %601 = getelementptr inbounds i8, i8* %599, i64 40
  %602 = bitcast %"class.sh::TIntermNode"*** %597 to i8**
  store i8* %601, i8** %602, align 8
  %603 = bitcast i8* %599 to i64*
  %604 = ptrtoint %"class.sh::TIntermTyped"* %557 to i64
  store i64 %604, i64* %603, align 8
  %605 = getelementptr inbounds i8, i8* %599, i64 8
  %606 = bitcast i8* %605 to i64*
  %607 = ptrtoint %"class.sh::TIntermTyped"* %592 to i64
  store i64 %607, i64* %606, align 8
  %608 = getelementptr inbounds i8, i8* %599, i64 16
  %609 = bitcast i8* %608 to i64*
  %610 = ptrtoint %"class.sh::TIntermTyped"* %593 to i64
  store i64 %610, i64* %609, align 8
  %611 = getelementptr inbounds i8, i8* %599, i64 24
  %612 = bitcast i8* %611 to i64*
  %613 = ptrtoint i8* %58 to i64
  store i64 %613, i64* %612, align 8
  %614 = getelementptr inbounds i8, i8* %599, i64 32
  %615 = bitcast i8* %614 to i64*
  %616 = ptrtoint i8* %63 to i64
  store i64 %616, i64* %615, align 8
  %617 = bitcast %"class.sh::TIntermNode"*** %596 to i64*
  %618 = ptrtoint i8* %601 to i64
  store i64 %618, i64* %617, align 8
  %619 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 3
  %620 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %619, align 8
  %621 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80) %620, %"class.sh::TVector.31"* nonnull %5) #6
  %622 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %595, align 8
  %623 = icmp eq %"class.sh::TIntermNode"** %622, null
  br i1 %623, label %626, label %624

624:                                              ; preds = %591
  %625 = ptrtoint %"class.sh::TIntermNode"** %622 to i64
  store i64 %625, i64* %617, align 8
  br label %626

626:                                              ; preds = %591, %624, %558, %589
  %627 = phi i8* [ %559, %589 ], [ %559, %558 ], [ %594, %624 ], [ %594, %591 ]
  %628 = phi %"class.sh::TIntermAggregate"* [ %586, %589 ], [ %586, %558 ], [ %621, %624 ], [ %621, %591 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %627) #6
  %629 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %628, i64 0, i32 0, i32 0, i32 0
  %630 = getelementptr inbounds i8, i8* %51, i64 24
  %631 = bitcast i8* %630 to %"class.sh::TVariable"**
  %632 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %631, align 8
  %633 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %632, %"class.sh::TIntermTyped"* %629) #6
  %634 = ptrtoint %"class.sh::TIntermDeclaration"* %633 to i64
  %635 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %135, align 8
  %636 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %136, align 8
  %637 = icmp ult %"class.sh::TIntermNode"** %635, %636
  %638 = ptrtoint %"class.sh::TIntermNode"** %636 to i64
  br i1 %637, label %639, label %643

639:                                              ; preds = %626
  %640 = bitcast %"class.sh::TIntermNode"** %635 to i64*
  store i64 %634, i64* %640, align 8
  %641 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %635, i64 1
  %642 = ptrtoint %"class.sh::TIntermNode"** %641 to i64
  store i64 %642, i64* %142, align 8
  br label %852

643:                                              ; preds = %626
  %644 = ptrtoint %"class.sh::TIntermNode"** %635 to i64
  %645 = load i64, i64* %143, align 8
  %646 = sub i64 %644, %645
  %647 = ashr exact i64 %646, 3
  %648 = add nsw i64 %647, 1
  %649 = icmp ugt i64 %648, 2305843009213693951
  br i1 %649, label %650, label %652

650:                                              ; preds = %643
  %651 = bitcast %"class.sh::TVector.31"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %651) #14
  unreachable

652:                                              ; preds = %643
  %653 = sub i64 %638, %645
  %654 = ashr exact i64 %653, 3
  %655 = icmp ult i64 %654, 1152921504606846975
  br i1 %655, label %656, label %661

656:                                              ; preds = %652
  %657 = ashr exact i64 %653, 2
  %658 = icmp ult i64 %657, %648
  %659 = select i1 %658, i64 %648, i64 %657
  %660 = icmp eq i64 %659, 0
  br i1 %660, label %667, label %661

661:                                              ; preds = %656, %652
  %662 = phi i64 [ %659, %656 ], [ 2305843009213693951, %652 ]
  %663 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %664 = shl i64 %662, 3
  %665 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %663, i64 %664) #6
  %666 = bitcast i8* %665 to %"class.sh::TIntermNode"**
  br label %667

667:                                              ; preds = %661, %656
  %668 = phi i64 [ %662, %661 ], [ 0, %656 ]
  %669 = phi %"class.sh::TIntermNode"** [ %666, %661 ], [ null, %656 ]
  %670 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %669, i64 %647
  %671 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %669, i64 %668
  %672 = ptrtoint %"class.sh::TIntermNode"** %671 to i64
  %673 = bitcast %"class.sh::TIntermNode"** %670 to i64*
  store i64 %634, i64* %673, align 8
  %674 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %670, i64 1
  %675 = ptrtoint %"class.sh::TIntermNode"** %674 to i64
  %676 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %134, align 8
  %677 = ptrtoint %"class.sh::TIntermNode"** %676 to i64
  %678 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %135, align 8
  %679 = icmp eq %"class.sh::TIntermNode"** %678, %676
  br i1 %679, label %849, label %680

680:                                              ; preds = %667
  %681 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %678, i64 -1
  %682 = ptrtoint %"class.sh::TIntermNode"** %681 to i64
  %683 = sub i64 %682, %677
  %684 = lshr i64 %683, 3
  %685 = add nuw nsw i64 %684, 1
  %686 = icmp ult i64 %685, 4
  br i1 %686, label %779, label %687

687:                                              ; preds = %680
  %688 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %678, i64 -1
  %689 = ptrtoint %"class.sh::TIntermNode"** %688 to i64
  %690 = sub i64 %689, %677
  %691 = lshr i64 %690, 3
  %692 = xor i64 %691, -1
  %693 = add nsw i64 %647, %692
  %694 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %669, i64 %693
  %695 = xor i64 %691, -1
  %696 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %678, i64 %695
  %697 = icmp ult %"class.sh::TIntermNode"** %694, %678
  %698 = icmp ult %"class.sh::TIntermNode"** %696, %670
  %699 = and i1 %697, %698
  br i1 %699, label %779, label %700

700:                                              ; preds = %687
  %701 = and i64 %685, 4611686018427387900
  %702 = sub nsw i64 0, %701
  %703 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %670, i64 %702
  %704 = sub nsw i64 0, %701
  %705 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %678, i64 %704
  %706 = add nsw i64 %701, -4
  %707 = lshr exact i64 %706, 2
  %708 = add nuw nsw i64 %707, 1
  %709 = and i64 %708, 1
  %710 = icmp eq i64 %706, 0
  br i1 %710, label %755, label %711

711:                                              ; preds = %700
  %712 = sub nuw nsw i64 %708, %709
  %713 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %670, i64 -1
  %714 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %678, i64 -1
  %715 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %670, i64 -1
  %716 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %678, i64 -1
  br label %717

717:                                              ; preds = %717, %711
  %718 = phi i64 [ 0, %711 ], [ %752, %717 ]
  %719 = phi i64 [ %712, %711 ], [ %753, %717 ]
  %720 = sub i64 0, %718
  %721 = sub i64 0, %718
  %722 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %713, i64 %720
  %723 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %714, i64 %721
  %724 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %723, i64 -1
  %725 = bitcast %"class.sh::TIntermNode"** %724 to <2 x i64>*
  %726 = load <2 x i64>, <2 x i64>* %725, align 8, !alias.scope !21
  %727 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %723, i64 -2
  %728 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %727, i64 -1
  %729 = bitcast %"class.sh::TIntermNode"** %728 to <2 x i64>*
  %730 = load <2 x i64>, <2 x i64>* %729, align 8, !alias.scope !21
  %731 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %722, i64 -1
  %732 = bitcast %"class.sh::TIntermNode"** %731 to <2 x i64>*
  store <2 x i64> %726, <2 x i64>* %732, align 8, !alias.scope !24, !noalias !21
  %733 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %722, i64 -2
  %734 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %733, i64 -1
  %735 = bitcast %"class.sh::TIntermNode"** %734 to <2 x i64>*
  store <2 x i64> %730, <2 x i64>* %735, align 8, !alias.scope !24, !noalias !21
  %736 = sub nuw nsw i64 -4, %718
  %737 = sub nuw nsw i64 -4, %718
  %738 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %715, i64 %736
  %739 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %716, i64 %737
  %740 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %739, i64 -1
  %741 = bitcast %"class.sh::TIntermNode"** %740 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 8, !alias.scope !21
  %743 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %739, i64 -2
  %744 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %743, i64 -1
  %745 = bitcast %"class.sh::TIntermNode"** %744 to <2 x i64>*
  %746 = load <2 x i64>, <2 x i64>* %745, align 8, !alias.scope !21
  %747 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %738, i64 -1
  %748 = bitcast %"class.sh::TIntermNode"** %747 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %748, align 8, !alias.scope !24, !noalias !21
  %749 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %738, i64 -2
  %750 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %749, i64 -1
  %751 = bitcast %"class.sh::TIntermNode"** %750 to <2 x i64>*
  store <2 x i64> %746, <2 x i64>* %751, align 8, !alias.scope !24, !noalias !21
  %752 = add i64 %718, 8
  %753 = add i64 %719, -2
  %754 = icmp eq i64 %753, 0
  br i1 %754, label %755, label %717, !llvm.loop !26

755:                                              ; preds = %717, %700
  %756 = phi i64 [ 0, %700 ], [ %752, %717 ]
  %757 = icmp eq i64 %709, 0
  br i1 %757, label %777, label %758

758:                                              ; preds = %755
  %759 = sub i64 0, %756
  %760 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %670, i64 -1
  %761 = sub i64 0, %756
  %762 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %678, i64 -1
  %763 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %760, i64 %759
  %764 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %762, i64 %761
  %765 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %764, i64 -1
  %766 = bitcast %"class.sh::TIntermNode"** %765 to <2 x i64>*
  %767 = load <2 x i64>, <2 x i64>* %766, align 8, !alias.scope !21
  %768 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %764, i64 -2
  %769 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %768, i64 -1
  %770 = bitcast %"class.sh::TIntermNode"** %769 to <2 x i64>*
  %771 = load <2 x i64>, <2 x i64>* %770, align 8, !alias.scope !21
  %772 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %763, i64 -1
  %773 = bitcast %"class.sh::TIntermNode"** %772 to <2 x i64>*
  store <2 x i64> %767, <2 x i64>* %773, align 8, !alias.scope !24, !noalias !21
  %774 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %763, i64 -2
  %775 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %774, i64 -1
  %776 = bitcast %"class.sh::TIntermNode"** %775 to <2 x i64>*
  store <2 x i64> %771, <2 x i64>* %776, align 8, !alias.scope !24, !noalias !21
  br label %777

777:                                              ; preds = %755, %758
  %778 = icmp eq i64 %685, %701
  br i1 %778, label %849, label %779

779:                                              ; preds = %777, %687, %680
  %780 = phi %"class.sh::TIntermNode"** [ %670, %687 ], [ %670, %680 ], [ %703, %777 ]
  %781 = phi %"class.sh::TIntermNode"** [ %678, %687 ], [ %678, %680 ], [ %705, %777 ]
  %782 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %781, i64 -1
  %783 = ptrtoint %"class.sh::TIntermNode"** %782 to i64
  %784 = sub i64 %783, %677
  %785 = lshr i64 %784, 3
  %786 = add nuw nsw i64 %785, 1
  %787 = and i64 %786, 7
  %788 = icmp eq i64 %787, 0
  br i1 %788, label %800, label %789

789:                                              ; preds = %779, %789
  %790 = phi %"class.sh::TIntermNode"** [ %793, %789 ], [ %780, %779 ]
  %791 = phi %"class.sh::TIntermNode"** [ %794, %789 ], [ %781, %779 ]
  %792 = phi i64 [ %798, %789 ], [ %787, %779 ]
  %793 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %790, i64 -1
  %794 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %791, i64 -1
  %795 = bitcast %"class.sh::TIntermNode"** %794 to i64*
  %796 = load i64, i64* %795, align 8
  %797 = bitcast %"class.sh::TIntermNode"** %793 to i64*
  store i64 %796, i64* %797, align 8
  %798 = add i64 %792, -1
  %799 = icmp eq i64 %798, 0
  br i1 %799, label %800, label %789, !llvm.loop !27

800:                                              ; preds = %789, %779
  %801 = phi %"class.sh::TIntermNode"** [ undef, %779 ], [ %793, %789 ]
  %802 = phi %"class.sh::TIntermNode"** [ %780, %779 ], [ %793, %789 ]
  %803 = phi %"class.sh::TIntermNode"** [ %781, %779 ], [ %794, %789 ]
  %804 = icmp ult i64 %784, 56
  br i1 %804, label %849, label %805

805:                                              ; preds = %800, %805
  %806 = phi %"class.sh::TIntermNode"** [ %843, %805 ], [ %802, %800 ]
  %807 = phi %"class.sh::TIntermNode"** [ %844, %805 ], [ %803, %800 ]
  %808 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %806, i64 -1
  %809 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %807, i64 -1
  %810 = bitcast %"class.sh::TIntermNode"** %809 to i64*
  %811 = load i64, i64* %810, align 8
  %812 = bitcast %"class.sh::TIntermNode"** %808 to i64*
  store i64 %811, i64* %812, align 8
  %813 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %806, i64 -2
  %814 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %807, i64 -2
  %815 = bitcast %"class.sh::TIntermNode"** %814 to i64*
  %816 = load i64, i64* %815, align 8
  %817 = bitcast %"class.sh::TIntermNode"** %813 to i64*
  store i64 %816, i64* %817, align 8
  %818 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %806, i64 -3
  %819 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %807, i64 -3
  %820 = bitcast %"class.sh::TIntermNode"** %819 to i64*
  %821 = load i64, i64* %820, align 8
  %822 = bitcast %"class.sh::TIntermNode"** %818 to i64*
  store i64 %821, i64* %822, align 8
  %823 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %806, i64 -4
  %824 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %807, i64 -4
  %825 = bitcast %"class.sh::TIntermNode"** %824 to i64*
  %826 = load i64, i64* %825, align 8
  %827 = bitcast %"class.sh::TIntermNode"** %823 to i64*
  store i64 %826, i64* %827, align 8
  %828 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %806, i64 -5
  %829 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %807, i64 -5
  %830 = bitcast %"class.sh::TIntermNode"** %829 to i64*
  %831 = load i64, i64* %830, align 8
  %832 = bitcast %"class.sh::TIntermNode"** %828 to i64*
  store i64 %831, i64* %832, align 8
  %833 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %806, i64 -6
  %834 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %807, i64 -6
  %835 = bitcast %"class.sh::TIntermNode"** %834 to i64*
  %836 = load i64, i64* %835, align 8
  %837 = bitcast %"class.sh::TIntermNode"** %833 to i64*
  store i64 %836, i64* %837, align 8
  %838 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %806, i64 -7
  %839 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %807, i64 -7
  %840 = bitcast %"class.sh::TIntermNode"** %839 to i64*
  %841 = load i64, i64* %840, align 8
  %842 = bitcast %"class.sh::TIntermNode"** %838 to i64*
  store i64 %841, i64* %842, align 8
  %843 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %806, i64 -8
  %844 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %807, i64 -8
  %845 = bitcast %"class.sh::TIntermNode"** %844 to i64*
  %846 = load i64, i64* %845, align 8
  %847 = bitcast %"class.sh::TIntermNode"** %843 to i64*
  store i64 %846, i64* %847, align 8
  %848 = icmp eq %"class.sh::TIntermNode"** %844, %676
  br i1 %848, label %849, label %805, !llvm.loop !28

849:                                              ; preds = %800, %805, %777, %667
  %850 = phi %"class.sh::TIntermNode"** [ %670, %667 ], [ %703, %777 ], [ %801, %800 ], [ %843, %805 ]
  %851 = ptrtoint %"class.sh::TIntermNode"** %850 to i64
  store i64 %851, i64* %143, align 8
  store i64 %675, i64* %142, align 8
  store i64 %672, i64* %144, align 8
  br label %852

852:                                              ; preds = %849, %639
  br i1 %128, label %853, label %1140

853:                                              ; preds = %852
  %854 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %544, align 8
  %855 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %854, i64 2
  %856 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %855, align 8
  %857 = bitcast %"class.sh::TIntermNode"* %856 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %858 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %857, align 8
  %859 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %858, i64 4
  %860 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %859, align 8
  %861 = call %"class.sh::TIntermTyped"* %860(%"class.sh::TIntermNode"* %856) #6
  %862 = bitcast %"class.sh::TIntermTyped"* %861 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %863 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %862, align 8
  %864 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %863, i64 23
  %865 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %864, align 8
  %866 = call %"class.sh::TIntermTyped"* %865(%"class.sh::TIntermTyped"* %861) #6
  %867 = bitcast %"class.sh::TVector.31"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %867) #6
  %868 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %8, i64 0, i32 0, i32 0, i32 0
  %869 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %8, i64 0, i32 0, i32 0, i32 1
  %870 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %867, i8 0, i64 24, i1 false) #6
  %871 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %872 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %871, i64 8) #6
  %873 = bitcast %"class.sh::TVector.31"* %8 to i8**
  store i8* %872, i8** %873, align 8
  %874 = getelementptr inbounds i8, i8* %872, i64 8
  %875 = bitcast %"class.sh::TIntermNode"*** %870 to i8**
  store i8* %874, i8** %875, align 8
  %876 = bitcast i8* %872 to i64*
  %877 = ptrtoint %"class.sh::TIntermTyped"* %866 to i64
  store i64 %877, i64* %876, align 8
  %878 = bitcast %"class.sh::TIntermNode"*** %869 to i64*
  %879 = ptrtoint i8* %874 to i64
  store i64 %879, i64* %878, align 8
  %880 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %54, align 8
  %881 = call %"class.sh::TIntermTyped"* @_ZN2sh29CreateBuiltInFunctionCallNodeEPKcPNS_7TVectorIPNS_11TIntermNodeEEERKNS_12TSymbolTableEi(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), %"class.sh::TVector.31"* nonnull %8, %"class.sh::TSymbolTable"* dereferenceable(1720) %880, i32 100) #6
  %882 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %883 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %882, i64 32) #6
  %884 = bitcast i8* %883 to %"class.sh::TIntermSymbol"*
  %885 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %54, align 8
  %886 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %885, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %884, %"class.sh::TVariable"* %886) #6
  %887 = getelementptr inbounds i8, i8* %883, i64 24
  %888 = bitcast i8* %887 to %"class.sh::TVariable"**
  %889 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %888, align 8
  %890 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %889, %"class.sh::TIntermTyped"* %881) #6
  %891 = ptrtoint %"class.sh::TIntermDeclaration"* %890 to i64
  %892 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %135, align 8
  %893 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %136, align 8
  %894 = icmp ult %"class.sh::TIntermNode"** %892, %893
  %895 = ptrtoint %"class.sh::TIntermNode"** %893 to i64
  br i1 %894, label %896, label %900

896:                                              ; preds = %853
  %897 = bitcast %"class.sh::TIntermNode"** %892 to i64*
  store i64 %891, i64* %897, align 8
  %898 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %892, i64 1
  %899 = ptrtoint %"class.sh::TIntermNode"** %898 to i64
  store i64 %899, i64* %142, align 8
  br label %1109

900:                                              ; preds = %853
  %901 = ptrtoint %"class.sh::TIntermNode"** %892 to i64
  %902 = load i64, i64* %143, align 8
  %903 = sub i64 %901, %902
  %904 = ashr exact i64 %903, 3
  %905 = add nsw i64 %904, 1
  %906 = icmp ugt i64 %905, 2305843009213693951
  br i1 %906, label %907, label %909

907:                                              ; preds = %900
  %908 = bitcast %"class.sh::TVector.31"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %908) #14
  unreachable

909:                                              ; preds = %900
  %910 = sub i64 %895, %902
  %911 = ashr exact i64 %910, 3
  %912 = icmp ult i64 %911, 1152921504606846975
  br i1 %912, label %913, label %918

913:                                              ; preds = %909
  %914 = ashr exact i64 %910, 2
  %915 = icmp ult i64 %914, %905
  %916 = select i1 %915, i64 %905, i64 %914
  %917 = icmp eq i64 %916, 0
  br i1 %917, label %924, label %918

918:                                              ; preds = %913, %909
  %919 = phi i64 [ %916, %913 ], [ 2305843009213693951, %909 ]
  %920 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %921 = shl i64 %919, 3
  %922 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %920, i64 %921) #6
  %923 = bitcast i8* %922 to %"class.sh::TIntermNode"**
  br label %924

924:                                              ; preds = %918, %913
  %925 = phi i64 [ %919, %918 ], [ 0, %913 ]
  %926 = phi %"class.sh::TIntermNode"** [ %923, %918 ], [ null, %913 ]
  %927 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %926, i64 %904
  %928 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %926, i64 %925
  %929 = ptrtoint %"class.sh::TIntermNode"** %928 to i64
  %930 = bitcast %"class.sh::TIntermNode"** %927 to i64*
  store i64 %891, i64* %930, align 8
  %931 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %927, i64 1
  %932 = ptrtoint %"class.sh::TIntermNode"** %931 to i64
  %933 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %134, align 8
  %934 = ptrtoint %"class.sh::TIntermNode"** %933 to i64
  %935 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %135, align 8
  %936 = icmp eq %"class.sh::TIntermNode"** %935, %933
  br i1 %936, label %1106, label %937

937:                                              ; preds = %924
  %938 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %935, i64 -1
  %939 = ptrtoint %"class.sh::TIntermNode"** %938 to i64
  %940 = sub i64 %939, %934
  %941 = lshr i64 %940, 3
  %942 = add nuw nsw i64 %941, 1
  %943 = icmp ult i64 %942, 4
  br i1 %943, label %1036, label %944

944:                                              ; preds = %937
  %945 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %935, i64 -1
  %946 = ptrtoint %"class.sh::TIntermNode"** %945 to i64
  %947 = sub i64 %946, %934
  %948 = lshr i64 %947, 3
  %949 = xor i64 %948, -1
  %950 = add nsw i64 %904, %949
  %951 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %926, i64 %950
  %952 = xor i64 %948, -1
  %953 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %935, i64 %952
  %954 = icmp ult %"class.sh::TIntermNode"** %951, %935
  %955 = icmp ult %"class.sh::TIntermNode"** %953, %927
  %956 = and i1 %954, %955
  br i1 %956, label %1036, label %957

957:                                              ; preds = %944
  %958 = and i64 %942, 4611686018427387900
  %959 = sub nsw i64 0, %958
  %960 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %927, i64 %959
  %961 = sub nsw i64 0, %958
  %962 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %935, i64 %961
  %963 = add nsw i64 %958, -4
  %964 = lshr exact i64 %963, 2
  %965 = add nuw nsw i64 %964, 1
  %966 = and i64 %965, 1
  %967 = icmp eq i64 %963, 0
  br i1 %967, label %1012, label %968

968:                                              ; preds = %957
  %969 = sub nuw nsw i64 %965, %966
  %970 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %927, i64 -1
  %971 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %935, i64 -1
  %972 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %927, i64 -1
  %973 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %935, i64 -1
  br label %974

974:                                              ; preds = %974, %968
  %975 = phi i64 [ 0, %968 ], [ %1009, %974 ]
  %976 = phi i64 [ %969, %968 ], [ %1010, %974 ]
  %977 = sub i64 0, %975
  %978 = sub i64 0, %975
  %979 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %970, i64 %977
  %980 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %971, i64 %978
  %981 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %980, i64 -1
  %982 = bitcast %"class.sh::TIntermNode"** %981 to <2 x i64>*
  %983 = load <2 x i64>, <2 x i64>* %982, align 8, !alias.scope !29
  %984 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %980, i64 -2
  %985 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %984, i64 -1
  %986 = bitcast %"class.sh::TIntermNode"** %985 to <2 x i64>*
  %987 = load <2 x i64>, <2 x i64>* %986, align 8, !alias.scope !29
  %988 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %979, i64 -1
  %989 = bitcast %"class.sh::TIntermNode"** %988 to <2 x i64>*
  store <2 x i64> %983, <2 x i64>* %989, align 8, !alias.scope !32, !noalias !29
  %990 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %979, i64 -2
  %991 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %990, i64 -1
  %992 = bitcast %"class.sh::TIntermNode"** %991 to <2 x i64>*
  store <2 x i64> %987, <2 x i64>* %992, align 8, !alias.scope !32, !noalias !29
  %993 = sub nuw nsw i64 -4, %975
  %994 = sub nuw nsw i64 -4, %975
  %995 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %972, i64 %993
  %996 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %973, i64 %994
  %997 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %996, i64 -1
  %998 = bitcast %"class.sh::TIntermNode"** %997 to <2 x i64>*
  %999 = load <2 x i64>, <2 x i64>* %998, align 8, !alias.scope !29
  %1000 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %996, i64 -2
  %1001 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1000, i64 -1
  %1002 = bitcast %"class.sh::TIntermNode"** %1001 to <2 x i64>*
  %1003 = load <2 x i64>, <2 x i64>* %1002, align 8, !alias.scope !29
  %1004 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %995, i64 -1
  %1005 = bitcast %"class.sh::TIntermNode"** %1004 to <2 x i64>*
  store <2 x i64> %999, <2 x i64>* %1005, align 8, !alias.scope !32, !noalias !29
  %1006 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %995, i64 -2
  %1007 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1006, i64 -1
  %1008 = bitcast %"class.sh::TIntermNode"** %1007 to <2 x i64>*
  store <2 x i64> %1003, <2 x i64>* %1008, align 8, !alias.scope !32, !noalias !29
  %1009 = add i64 %975, 8
  %1010 = add i64 %976, -2
  %1011 = icmp eq i64 %1010, 0
  br i1 %1011, label %1012, label %974, !llvm.loop !34

1012:                                             ; preds = %974, %957
  %1013 = phi i64 [ 0, %957 ], [ %1009, %974 ]
  %1014 = icmp eq i64 %966, 0
  br i1 %1014, label %1034, label %1015

1015:                                             ; preds = %1012
  %1016 = sub i64 0, %1013
  %1017 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %927, i64 -1
  %1018 = sub i64 0, %1013
  %1019 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %935, i64 -1
  %1020 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1017, i64 %1016
  %1021 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1019, i64 %1018
  %1022 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1021, i64 -1
  %1023 = bitcast %"class.sh::TIntermNode"** %1022 to <2 x i64>*
  %1024 = load <2 x i64>, <2 x i64>* %1023, align 8, !alias.scope !29
  %1025 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1021, i64 -2
  %1026 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1025, i64 -1
  %1027 = bitcast %"class.sh::TIntermNode"** %1026 to <2 x i64>*
  %1028 = load <2 x i64>, <2 x i64>* %1027, align 8, !alias.scope !29
  %1029 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1020, i64 -1
  %1030 = bitcast %"class.sh::TIntermNode"** %1029 to <2 x i64>*
  store <2 x i64> %1024, <2 x i64>* %1030, align 8, !alias.scope !32, !noalias !29
  %1031 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1020, i64 -2
  %1032 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1031, i64 -1
  %1033 = bitcast %"class.sh::TIntermNode"** %1032 to <2 x i64>*
  store <2 x i64> %1028, <2 x i64>* %1033, align 8, !alias.scope !32, !noalias !29
  br label %1034

1034:                                             ; preds = %1012, %1015
  %1035 = icmp eq i64 %942, %958
  br i1 %1035, label %1106, label %1036

1036:                                             ; preds = %1034, %944, %937
  %1037 = phi %"class.sh::TIntermNode"** [ %927, %944 ], [ %927, %937 ], [ %960, %1034 ]
  %1038 = phi %"class.sh::TIntermNode"** [ %935, %944 ], [ %935, %937 ], [ %962, %1034 ]
  %1039 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1038, i64 -1
  %1040 = ptrtoint %"class.sh::TIntermNode"** %1039 to i64
  %1041 = sub i64 %1040, %934
  %1042 = lshr i64 %1041, 3
  %1043 = add nuw nsw i64 %1042, 1
  %1044 = and i64 %1043, 7
  %1045 = icmp eq i64 %1044, 0
  br i1 %1045, label %1057, label %1046

1046:                                             ; preds = %1036, %1046
  %1047 = phi %"class.sh::TIntermNode"** [ %1050, %1046 ], [ %1037, %1036 ]
  %1048 = phi %"class.sh::TIntermNode"** [ %1051, %1046 ], [ %1038, %1036 ]
  %1049 = phi i64 [ %1055, %1046 ], [ %1044, %1036 ]
  %1050 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1047, i64 -1
  %1051 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1048, i64 -1
  %1052 = bitcast %"class.sh::TIntermNode"** %1051 to i64*
  %1053 = load i64, i64* %1052, align 8
  %1054 = bitcast %"class.sh::TIntermNode"** %1050 to i64*
  store i64 %1053, i64* %1054, align 8
  %1055 = add i64 %1049, -1
  %1056 = icmp eq i64 %1055, 0
  br i1 %1056, label %1057, label %1046, !llvm.loop !35

1057:                                             ; preds = %1046, %1036
  %1058 = phi %"class.sh::TIntermNode"** [ undef, %1036 ], [ %1050, %1046 ]
  %1059 = phi %"class.sh::TIntermNode"** [ %1037, %1036 ], [ %1050, %1046 ]
  %1060 = phi %"class.sh::TIntermNode"** [ %1038, %1036 ], [ %1051, %1046 ]
  %1061 = icmp ult i64 %1041, 56
  br i1 %1061, label %1106, label %1062

1062:                                             ; preds = %1057, %1062
  %1063 = phi %"class.sh::TIntermNode"** [ %1100, %1062 ], [ %1059, %1057 ]
  %1064 = phi %"class.sh::TIntermNode"** [ %1101, %1062 ], [ %1060, %1057 ]
  %1065 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1063, i64 -1
  %1066 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1064, i64 -1
  %1067 = bitcast %"class.sh::TIntermNode"** %1066 to i64*
  %1068 = load i64, i64* %1067, align 8
  %1069 = bitcast %"class.sh::TIntermNode"** %1065 to i64*
  store i64 %1068, i64* %1069, align 8
  %1070 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1063, i64 -2
  %1071 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1064, i64 -2
  %1072 = bitcast %"class.sh::TIntermNode"** %1071 to i64*
  %1073 = load i64, i64* %1072, align 8
  %1074 = bitcast %"class.sh::TIntermNode"** %1070 to i64*
  store i64 %1073, i64* %1074, align 8
  %1075 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1063, i64 -3
  %1076 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1064, i64 -3
  %1077 = bitcast %"class.sh::TIntermNode"** %1076 to i64*
  %1078 = load i64, i64* %1077, align 8
  %1079 = bitcast %"class.sh::TIntermNode"** %1075 to i64*
  store i64 %1078, i64* %1079, align 8
  %1080 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1063, i64 -4
  %1081 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1064, i64 -4
  %1082 = bitcast %"class.sh::TIntermNode"** %1081 to i64*
  %1083 = load i64, i64* %1082, align 8
  %1084 = bitcast %"class.sh::TIntermNode"** %1080 to i64*
  store i64 %1083, i64* %1084, align 8
  %1085 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1063, i64 -5
  %1086 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1064, i64 -5
  %1087 = bitcast %"class.sh::TIntermNode"** %1086 to i64*
  %1088 = load i64, i64* %1087, align 8
  %1089 = bitcast %"class.sh::TIntermNode"** %1085 to i64*
  store i64 %1088, i64* %1089, align 8
  %1090 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1063, i64 -6
  %1091 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1064, i64 -6
  %1092 = bitcast %"class.sh::TIntermNode"** %1091 to i64*
  %1093 = load i64, i64* %1092, align 8
  %1094 = bitcast %"class.sh::TIntermNode"** %1090 to i64*
  store i64 %1093, i64* %1094, align 8
  %1095 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1063, i64 -7
  %1096 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1064, i64 -7
  %1097 = bitcast %"class.sh::TIntermNode"** %1096 to i64*
  %1098 = load i64, i64* %1097, align 8
  %1099 = bitcast %"class.sh::TIntermNode"** %1095 to i64*
  store i64 %1098, i64* %1099, align 8
  %1100 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1063, i64 -8
  %1101 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1064, i64 -8
  %1102 = bitcast %"class.sh::TIntermNode"** %1101 to i64*
  %1103 = load i64, i64* %1102, align 8
  %1104 = bitcast %"class.sh::TIntermNode"** %1100 to i64*
  store i64 %1103, i64* %1104, align 8
  %1105 = icmp eq %"class.sh::TIntermNode"** %1101, %933
  br i1 %1105, label %1106, label %1062, !llvm.loop !36

1106:                                             ; preds = %1057, %1062, %1034, %924
  %1107 = phi %"class.sh::TIntermNode"** [ %927, %924 ], [ %960, %1034 ], [ %1058, %1057 ], [ %1100, %1062 ]
  %1108 = ptrtoint %"class.sh::TIntermNode"** %1107 to i64
  store i64 %1108, i64* %143, align 8
  store i64 %932, i64* %142, align 8
  store i64 %929, i64* %144, align 8
  br label %1109

1109:                                             ; preds = %1106, %896
  %1110 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1111 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1110, i64 240) #6
  %1112 = bitcast i8* %1111 to %"class.sh::TIntermBinary"*
  %1113 = bitcast i8* %883 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %1114 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1113, align 8
  %1115 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1114, i64 23
  %1116 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1115, align 8
  %1117 = call %"class.sh::TIntermTyped"* %1116(%"class.sh::TIntermSymbol"* %884) #6
  %1118 = bitcast i8* %58 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %1119 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1118, align 8
  %1120 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1119, i64 23
  %1121 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1120, align 8
  %1122 = call %"class.sh::TIntermTyped"* %1121(%"class.sh::TIntermSymbol"* %59) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1112, i8 zeroext 31, %"class.sh::TIntermTyped"* %1117, %"class.sh::TIntermTyped"* %1122) #6
  %1123 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1124 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1123, i64 240) #6
  %1125 = bitcast i8* %1124 to %"class.sh::TIntermBinary"*
  %1126 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1113, align 8
  %1127 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1126, i64 23
  %1128 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1127, align 8
  %1129 = call %"class.sh::TIntermTyped"* %1128(%"class.sh::TIntermSymbol"* %884) #6
  %1130 = bitcast i8* %63 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %1131 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1130, align 8
  %1132 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1131, i64 23
  %1133 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1132, align 8
  %1134 = call %"class.sh::TIntermTyped"* %1133(%"class.sh::TIntermSymbol"* %64) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1125, i8 zeroext 31, %"class.sh::TIntermTyped"* %1129, %"class.sh::TIntermTyped"* %1134) #6
  %1135 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %868, align 8
  %1136 = icmp eq %"class.sh::TIntermNode"** %1135, null
  br i1 %1136, label %1139, label %1137

1137:                                             ; preds = %1109
  %1138 = ptrtoint %"class.sh::TIntermNode"** %1135 to i64
  store i64 %1138, i64* %878, align 8
  br label %1139

1139:                                             ; preds = %1137, %1109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %867) #6
  br label %1140

1140:                                             ; preds = %1139, %852
  %1141 = phi i8* [ %1111, %1139 ], [ %58, %852 ]
  %1142 = phi i8* [ %1124, %1139 ], [ %63, %852 ]
  call void @_ZN2sh16TIntermTraverser29insertStatementsInParentBlockERKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TIntermTraverser"* %53, %"class.sh::TVector.31"* nonnull dereferenceable(24) %7) #6
  %1143 = bitcast %"class.sh::TVector.31"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1143) #6
  %1144 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %9, i64 0, i32 0, i32 0, i32 0
  %1145 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %9, i64 0, i32 0, i32 0, i32 1
  %1146 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1143, i8 0, i64 24, i1 false) #6
  %1147 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %544, align 8
  %1148 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1147, align 8
  %1149 = bitcast %"class.sh::TIntermNode"* %1148 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %1150 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %1149, align 8
  %1151 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %1150, i64 19
  %1152 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %1151, align 8
  %1153 = call %"class.sh::TIntermSymbol"* %1152(%"class.sh::TIntermNode"* %1148) #6
  %1154 = bitcast %"class.sh::TIntermNode"* %1148 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %1155 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %1154, align 8
  %1156 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %1155, i64 13
  %1157 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %1156, align 8
  %1158 = call %"class.sh::TIntermBinary"* %1157(%"class.sh::TIntermNode"* %1148) #6
  %1159 = icmp ne %"class.sh::TIntermBinary"* %1158, null
  br i1 %1159, label %1160, label %1169

1160:                                             ; preds = %1140
  %1161 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1158, i64 0, i32 2
  %1162 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1161, align 8
  %1163 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1162, i64 0, i32 0
  %1164 = bitcast %"class.sh::TIntermTyped"* %1162 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %1165 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %1164, align 8
  %1166 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %1165, i64 19
  %1167 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %1166, align 8
  %1168 = call %"class.sh::TIntermSymbol"* %1167(%"class.sh::TIntermNode"* %1163) #6
  br label %1169

1169:                                             ; preds = %1160, %1140
  %1170 = phi %"class.sh::TIntermSymbol"* [ %1168, %1160 ], [ %1153, %1140 ]
  %1171 = bitcast %"class.sh::TVariable"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1171) #6
  %1172 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %1170, i64 0, i32 1
  %1173 = bitcast %"class.sh::TVariable"** %1172 to i64*
  %1174 = load i64, i64* %1173, align 8
  %1175 = bitcast %"class.sh::TVariable"** %4 to i64*
  store i64 %1174, i64* %1175, align 8
  %1176 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0
  %1177 = call dereferenceable(8) %"class.sh::TVariable"** @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE2atIS6_S7_EEDTclsrT0_5valueclL_ZNSC_9addressofISG_EEPT_RSM_EclL_ZNSC_7declvalIRSG_EEDTclsr3std3__1E9__declvalISM_ELi0EEEvEEEEERKSM_(%"class.absl::container_internal::raw_hash_map"* %1176, %"class.sh::TVariable"** nonnull dereferenceable(8) %4) #6
  %1178 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %1177, align 8
  %1179 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1180 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1179, i64 32) #6
  %1181 = bitcast i8* %1180 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %1181, %"class.sh::TVariable"* %1178) #6
  %1182 = bitcast i8* %1180 to %"class.sh::TIntermTyped"*
  br i1 %1159, label %1183, label %1192

1183:                                             ; preds = %1169
  %1184 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1185 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1184, i64 240) #6
  %1186 = bitcast i8* %1185 to %"class.sh::TIntermBinary"*
  %1187 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1158, i64 0, i32 0, i32 1
  %1188 = load i8, i8* %1187, align 8
  %1189 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1158, i64 0, i32 3
  %1190 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %1189, align 8
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1186, i8 zeroext %1188, %"class.sh::TIntermTyped"* %1182, %"class.sh::TIntermTyped"* %1190) #6
  %1191 = bitcast i8* %1185 to %"class.sh::TIntermTyped"*
  br label %1192

1192:                                             ; preds = %1183, %1169
  %1193 = phi %"class.sh::TIntermTyped"* [ %1191, %1183 ], [ %1182, %1169 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1171) #6
  %1194 = ptrtoint %"class.sh::TIntermTyped"* %1193 to i64
  %1195 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %1196 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1146, align 8
  %1197 = icmp ult %"class.sh::TIntermNode"** %1195, %1196
  %1198 = ptrtoint %"class.sh::TIntermNode"** %1196 to i64
  br i1 %1197, label %1199, label %1204

1199:                                             ; preds = %1192
  %1200 = bitcast %"class.sh::TIntermNode"** %1195 to i64*
  store i64 %1194, i64* %1200, align 8
  %1201 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1195, i64 1
  %1202 = ptrtoint %"class.sh::TIntermNode"** %1201 to i64
  %1203 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  store i64 %1202, i64* %1203, align 8
  br label %1416

1204:                                             ; preds = %1192
  %1205 = ptrtoint %"class.sh::TIntermNode"** %1195 to i64
  %1206 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  %1207 = bitcast %"class.sh::TVector.31"* %9 to i64*
  %1208 = load i64, i64* %1207, align 8
  %1209 = sub i64 %1205, %1208
  %1210 = ashr exact i64 %1209, 3
  %1211 = add nsw i64 %1210, 1
  %1212 = icmp ugt i64 %1211, 2305843009213693951
  br i1 %1212, label %1213, label %1215

1213:                                             ; preds = %1204
  %1214 = bitcast %"class.sh::TVector.31"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1214) #14
  unreachable

1215:                                             ; preds = %1204
  %1216 = bitcast %"class.sh::TIntermNode"*** %1146 to i64*
  %1217 = sub i64 %1198, %1208
  %1218 = ashr exact i64 %1217, 3
  %1219 = icmp ult i64 %1218, 1152921504606846975
  br i1 %1219, label %1220, label %1225

1220:                                             ; preds = %1215
  %1221 = ashr exact i64 %1217, 2
  %1222 = icmp ult i64 %1221, %1211
  %1223 = select i1 %1222, i64 %1211, i64 %1221
  %1224 = icmp eq i64 %1223, 0
  br i1 %1224, label %1231, label %1225

1225:                                             ; preds = %1220, %1215
  %1226 = phi i64 [ %1223, %1220 ], [ 2305843009213693951, %1215 ]
  %1227 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1228 = shl i64 %1226, 3
  %1229 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1227, i64 %1228) #6
  %1230 = bitcast i8* %1229 to %"class.sh::TIntermNode"**
  br label %1231

1231:                                             ; preds = %1225, %1220
  %1232 = phi i64 [ %1226, %1225 ], [ 0, %1220 ]
  %1233 = phi %"class.sh::TIntermNode"** [ %1230, %1225 ], [ null, %1220 ]
  %1234 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1233, i64 %1210
  %1235 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1233, i64 %1232
  %1236 = ptrtoint %"class.sh::TIntermNode"** %1235 to i64
  %1237 = bitcast %"class.sh::TIntermNode"** %1234 to i64*
  store i64 %1194, i64* %1237, align 8
  %1238 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1234, i64 1
  %1239 = ptrtoint %"class.sh::TIntermNode"** %1238 to i64
  %1240 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1144, align 8
  %1241 = ptrtoint %"class.sh::TIntermNode"** %1240 to i64
  %1242 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %1243 = icmp eq %"class.sh::TIntermNode"** %1242, %1240
  br i1 %1243, label %1413, label %1244

1244:                                             ; preds = %1231
  %1245 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1242, i64 -1
  %1246 = ptrtoint %"class.sh::TIntermNode"** %1245 to i64
  %1247 = sub i64 %1246, %1241
  %1248 = lshr i64 %1247, 3
  %1249 = add nuw nsw i64 %1248, 1
  %1250 = icmp ult i64 %1249, 4
  br i1 %1250, label %1343, label %1251

1251:                                             ; preds = %1244
  %1252 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1242, i64 -1
  %1253 = ptrtoint %"class.sh::TIntermNode"** %1252 to i64
  %1254 = sub i64 %1253, %1241
  %1255 = lshr i64 %1254, 3
  %1256 = xor i64 %1255, -1
  %1257 = add nsw i64 %1210, %1256
  %1258 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1233, i64 %1257
  %1259 = xor i64 %1255, -1
  %1260 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1242, i64 %1259
  %1261 = icmp ult %"class.sh::TIntermNode"** %1258, %1242
  %1262 = icmp ult %"class.sh::TIntermNode"** %1260, %1234
  %1263 = and i1 %1261, %1262
  br i1 %1263, label %1343, label %1264

1264:                                             ; preds = %1251
  %1265 = and i64 %1249, 4611686018427387900
  %1266 = sub nsw i64 0, %1265
  %1267 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1234, i64 %1266
  %1268 = sub nsw i64 0, %1265
  %1269 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1242, i64 %1268
  %1270 = add nsw i64 %1265, -4
  %1271 = lshr exact i64 %1270, 2
  %1272 = add nuw nsw i64 %1271, 1
  %1273 = and i64 %1272, 1
  %1274 = icmp eq i64 %1270, 0
  br i1 %1274, label %1319, label %1275

1275:                                             ; preds = %1264
  %1276 = sub nuw nsw i64 %1272, %1273
  %1277 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1234, i64 -1
  %1278 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1242, i64 -1
  %1279 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1234, i64 -1
  %1280 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1242, i64 -1
  br label %1281

1281:                                             ; preds = %1281, %1275
  %1282 = phi i64 [ 0, %1275 ], [ %1316, %1281 ]
  %1283 = phi i64 [ %1276, %1275 ], [ %1317, %1281 ]
  %1284 = sub i64 0, %1282
  %1285 = sub i64 0, %1282
  %1286 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1277, i64 %1284
  %1287 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1278, i64 %1285
  %1288 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1287, i64 -1
  %1289 = bitcast %"class.sh::TIntermNode"** %1288 to <2 x i64>*
  %1290 = load <2 x i64>, <2 x i64>* %1289, align 8, !alias.scope !37
  %1291 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1287, i64 -2
  %1292 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1291, i64 -1
  %1293 = bitcast %"class.sh::TIntermNode"** %1292 to <2 x i64>*
  %1294 = load <2 x i64>, <2 x i64>* %1293, align 8, !alias.scope !37
  %1295 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1286, i64 -1
  %1296 = bitcast %"class.sh::TIntermNode"** %1295 to <2 x i64>*
  store <2 x i64> %1290, <2 x i64>* %1296, align 8, !alias.scope !40, !noalias !37
  %1297 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1286, i64 -2
  %1298 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1297, i64 -1
  %1299 = bitcast %"class.sh::TIntermNode"** %1298 to <2 x i64>*
  store <2 x i64> %1294, <2 x i64>* %1299, align 8, !alias.scope !40, !noalias !37
  %1300 = sub nuw nsw i64 -4, %1282
  %1301 = sub nuw nsw i64 -4, %1282
  %1302 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1279, i64 %1300
  %1303 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1280, i64 %1301
  %1304 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1303, i64 -1
  %1305 = bitcast %"class.sh::TIntermNode"** %1304 to <2 x i64>*
  %1306 = load <2 x i64>, <2 x i64>* %1305, align 8, !alias.scope !37
  %1307 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1303, i64 -2
  %1308 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1307, i64 -1
  %1309 = bitcast %"class.sh::TIntermNode"** %1308 to <2 x i64>*
  %1310 = load <2 x i64>, <2 x i64>* %1309, align 8, !alias.scope !37
  %1311 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1302, i64 -1
  %1312 = bitcast %"class.sh::TIntermNode"** %1311 to <2 x i64>*
  store <2 x i64> %1306, <2 x i64>* %1312, align 8, !alias.scope !40, !noalias !37
  %1313 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1302, i64 -2
  %1314 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1313, i64 -1
  %1315 = bitcast %"class.sh::TIntermNode"** %1314 to <2 x i64>*
  store <2 x i64> %1310, <2 x i64>* %1315, align 8, !alias.scope !40, !noalias !37
  %1316 = add i64 %1282, 8
  %1317 = add i64 %1283, -2
  %1318 = icmp eq i64 %1317, 0
  br i1 %1318, label %1319, label %1281, !llvm.loop !42

1319:                                             ; preds = %1281, %1264
  %1320 = phi i64 [ 0, %1264 ], [ %1316, %1281 ]
  %1321 = icmp eq i64 %1273, 0
  br i1 %1321, label %1341, label %1322

1322:                                             ; preds = %1319
  %1323 = sub i64 0, %1320
  %1324 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1234, i64 -1
  %1325 = sub i64 0, %1320
  %1326 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1242, i64 -1
  %1327 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1324, i64 %1323
  %1328 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1326, i64 %1325
  %1329 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1328, i64 -1
  %1330 = bitcast %"class.sh::TIntermNode"** %1329 to <2 x i64>*
  %1331 = load <2 x i64>, <2 x i64>* %1330, align 8, !alias.scope !37
  %1332 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1328, i64 -2
  %1333 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1332, i64 -1
  %1334 = bitcast %"class.sh::TIntermNode"** %1333 to <2 x i64>*
  %1335 = load <2 x i64>, <2 x i64>* %1334, align 8, !alias.scope !37
  %1336 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1327, i64 -1
  %1337 = bitcast %"class.sh::TIntermNode"** %1336 to <2 x i64>*
  store <2 x i64> %1331, <2 x i64>* %1337, align 8, !alias.scope !40, !noalias !37
  %1338 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1327, i64 -2
  %1339 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1338, i64 -1
  %1340 = bitcast %"class.sh::TIntermNode"** %1339 to <2 x i64>*
  store <2 x i64> %1335, <2 x i64>* %1340, align 8, !alias.scope !40, !noalias !37
  br label %1341

1341:                                             ; preds = %1319, %1322
  %1342 = icmp eq i64 %1249, %1265
  br i1 %1342, label %1413, label %1343

1343:                                             ; preds = %1341, %1251, %1244
  %1344 = phi %"class.sh::TIntermNode"** [ %1234, %1251 ], [ %1234, %1244 ], [ %1267, %1341 ]
  %1345 = phi %"class.sh::TIntermNode"** [ %1242, %1251 ], [ %1242, %1244 ], [ %1269, %1341 ]
  %1346 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1345, i64 -1
  %1347 = ptrtoint %"class.sh::TIntermNode"** %1346 to i64
  %1348 = sub i64 %1347, %1241
  %1349 = lshr i64 %1348, 3
  %1350 = add nuw nsw i64 %1349, 1
  %1351 = and i64 %1350, 7
  %1352 = icmp eq i64 %1351, 0
  br i1 %1352, label %1364, label %1353

1353:                                             ; preds = %1343, %1353
  %1354 = phi %"class.sh::TIntermNode"** [ %1357, %1353 ], [ %1344, %1343 ]
  %1355 = phi %"class.sh::TIntermNode"** [ %1358, %1353 ], [ %1345, %1343 ]
  %1356 = phi i64 [ %1362, %1353 ], [ %1351, %1343 ]
  %1357 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1354, i64 -1
  %1358 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1355, i64 -1
  %1359 = bitcast %"class.sh::TIntermNode"** %1358 to i64*
  %1360 = load i64, i64* %1359, align 8
  %1361 = bitcast %"class.sh::TIntermNode"** %1357 to i64*
  store i64 %1360, i64* %1361, align 8
  %1362 = add i64 %1356, -1
  %1363 = icmp eq i64 %1362, 0
  br i1 %1363, label %1364, label %1353, !llvm.loop !43

1364:                                             ; preds = %1353, %1343
  %1365 = phi %"class.sh::TIntermNode"** [ undef, %1343 ], [ %1357, %1353 ]
  %1366 = phi %"class.sh::TIntermNode"** [ %1344, %1343 ], [ %1357, %1353 ]
  %1367 = phi %"class.sh::TIntermNode"** [ %1345, %1343 ], [ %1358, %1353 ]
  %1368 = icmp ult i64 %1348, 56
  br i1 %1368, label %1413, label %1369

1369:                                             ; preds = %1364, %1369
  %1370 = phi %"class.sh::TIntermNode"** [ %1407, %1369 ], [ %1366, %1364 ]
  %1371 = phi %"class.sh::TIntermNode"** [ %1408, %1369 ], [ %1367, %1364 ]
  %1372 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1370, i64 -1
  %1373 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1371, i64 -1
  %1374 = bitcast %"class.sh::TIntermNode"** %1373 to i64*
  %1375 = load i64, i64* %1374, align 8
  %1376 = bitcast %"class.sh::TIntermNode"** %1372 to i64*
  store i64 %1375, i64* %1376, align 8
  %1377 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1370, i64 -2
  %1378 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1371, i64 -2
  %1379 = bitcast %"class.sh::TIntermNode"** %1378 to i64*
  %1380 = load i64, i64* %1379, align 8
  %1381 = bitcast %"class.sh::TIntermNode"** %1377 to i64*
  store i64 %1380, i64* %1381, align 8
  %1382 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1370, i64 -3
  %1383 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1371, i64 -3
  %1384 = bitcast %"class.sh::TIntermNode"** %1383 to i64*
  %1385 = load i64, i64* %1384, align 8
  %1386 = bitcast %"class.sh::TIntermNode"** %1382 to i64*
  store i64 %1385, i64* %1386, align 8
  %1387 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1370, i64 -4
  %1388 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1371, i64 -4
  %1389 = bitcast %"class.sh::TIntermNode"** %1388 to i64*
  %1390 = load i64, i64* %1389, align 8
  %1391 = bitcast %"class.sh::TIntermNode"** %1387 to i64*
  store i64 %1390, i64* %1391, align 8
  %1392 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1370, i64 -5
  %1393 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1371, i64 -5
  %1394 = bitcast %"class.sh::TIntermNode"** %1393 to i64*
  %1395 = load i64, i64* %1394, align 8
  %1396 = bitcast %"class.sh::TIntermNode"** %1392 to i64*
  store i64 %1395, i64* %1396, align 8
  %1397 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1370, i64 -6
  %1398 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1371, i64 -6
  %1399 = bitcast %"class.sh::TIntermNode"** %1398 to i64*
  %1400 = load i64, i64* %1399, align 8
  %1401 = bitcast %"class.sh::TIntermNode"** %1397 to i64*
  store i64 %1400, i64* %1401, align 8
  %1402 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1370, i64 -7
  %1403 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1371, i64 -7
  %1404 = bitcast %"class.sh::TIntermNode"** %1403 to i64*
  %1405 = load i64, i64* %1404, align 8
  %1406 = bitcast %"class.sh::TIntermNode"** %1402 to i64*
  store i64 %1405, i64* %1406, align 8
  %1407 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1370, i64 -8
  %1408 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1371, i64 -8
  %1409 = bitcast %"class.sh::TIntermNode"** %1408 to i64*
  %1410 = load i64, i64* %1409, align 8
  %1411 = bitcast %"class.sh::TIntermNode"** %1407 to i64*
  store i64 %1410, i64* %1411, align 8
  %1412 = icmp eq %"class.sh::TIntermNode"** %1408, %1240
  br i1 %1412, label %1413, label %1369, !llvm.loop !44

1413:                                             ; preds = %1364, %1369, %1341, %1231
  %1414 = phi %"class.sh::TIntermNode"** [ %1234, %1231 ], [ %1267, %1341 ], [ %1365, %1364 ], [ %1407, %1369 ]
  %1415 = ptrtoint %"class.sh::TIntermNode"** %1414 to i64
  store i64 %1415, i64* %1207, align 8
  store i64 %1239, i64* %1206, align 8
  store i64 %1236, i64* %1216, align 8
  br label %1416

1416:                                             ; preds = %1413, %1199
  %1417 = bitcast i8* %51 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %1418 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1417, align 8
  %1419 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1418, i64 23
  %1420 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1419, align 8
  %1421 = call %"class.sh::TIntermTyped"* %1420(%"class.sh::TIntermSymbol"* %52) #6
  %1422 = ptrtoint %"class.sh::TIntermTyped"* %1421 to i64
  %1423 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %1424 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1146, align 8
  %1425 = icmp ult %"class.sh::TIntermNode"** %1423, %1424
  %1426 = ptrtoint %"class.sh::TIntermNode"** %1424 to i64
  br i1 %1425, label %1427, label %1432

1427:                                             ; preds = %1416
  %1428 = bitcast %"class.sh::TIntermNode"** %1423 to i64*
  store i64 %1422, i64* %1428, align 8
  %1429 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1423, i64 1
  %1430 = ptrtoint %"class.sh::TIntermNode"** %1429 to i64
  %1431 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  store i64 %1430, i64* %1431, align 8
  br label %1644

1432:                                             ; preds = %1416
  %1433 = ptrtoint %"class.sh::TIntermNode"** %1423 to i64
  %1434 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  %1435 = bitcast %"class.sh::TVector.31"* %9 to i64*
  %1436 = load i64, i64* %1435, align 8
  %1437 = sub i64 %1433, %1436
  %1438 = ashr exact i64 %1437, 3
  %1439 = add nsw i64 %1438, 1
  %1440 = icmp ugt i64 %1439, 2305843009213693951
  br i1 %1440, label %1441, label %1443

1441:                                             ; preds = %1432
  %1442 = bitcast %"class.sh::TVector.31"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1442) #14
  unreachable

1443:                                             ; preds = %1432
  %1444 = bitcast %"class.sh::TIntermNode"*** %1146 to i64*
  %1445 = sub i64 %1426, %1436
  %1446 = ashr exact i64 %1445, 3
  %1447 = icmp ult i64 %1446, 1152921504606846975
  br i1 %1447, label %1448, label %1453

1448:                                             ; preds = %1443
  %1449 = ashr exact i64 %1445, 2
  %1450 = icmp ult i64 %1449, %1439
  %1451 = select i1 %1450, i64 %1439, i64 %1449
  %1452 = icmp eq i64 %1451, 0
  br i1 %1452, label %1459, label %1453

1453:                                             ; preds = %1448, %1443
  %1454 = phi i64 [ %1451, %1448 ], [ 2305843009213693951, %1443 ]
  %1455 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1456 = shl i64 %1454, 3
  %1457 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1455, i64 %1456) #6
  %1458 = bitcast i8* %1457 to %"class.sh::TIntermNode"**
  br label %1459

1459:                                             ; preds = %1453, %1448
  %1460 = phi i64 [ %1454, %1453 ], [ 0, %1448 ]
  %1461 = phi %"class.sh::TIntermNode"** [ %1458, %1453 ], [ null, %1448 ]
  %1462 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1461, i64 %1438
  %1463 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1461, i64 %1460
  %1464 = ptrtoint %"class.sh::TIntermNode"** %1463 to i64
  %1465 = bitcast %"class.sh::TIntermNode"** %1462 to i64*
  store i64 %1422, i64* %1465, align 8
  %1466 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1462, i64 1
  %1467 = ptrtoint %"class.sh::TIntermNode"** %1466 to i64
  %1468 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1144, align 8
  %1469 = ptrtoint %"class.sh::TIntermNode"** %1468 to i64
  %1470 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %1471 = icmp eq %"class.sh::TIntermNode"** %1470, %1468
  br i1 %1471, label %1641, label %1472

1472:                                             ; preds = %1459
  %1473 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1470, i64 -1
  %1474 = ptrtoint %"class.sh::TIntermNode"** %1473 to i64
  %1475 = sub i64 %1474, %1469
  %1476 = lshr i64 %1475, 3
  %1477 = add nuw nsw i64 %1476, 1
  %1478 = icmp ult i64 %1477, 4
  br i1 %1478, label %1571, label %1479

1479:                                             ; preds = %1472
  %1480 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1470, i64 -1
  %1481 = ptrtoint %"class.sh::TIntermNode"** %1480 to i64
  %1482 = sub i64 %1481, %1469
  %1483 = lshr i64 %1482, 3
  %1484 = xor i64 %1483, -1
  %1485 = add nsw i64 %1438, %1484
  %1486 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1461, i64 %1485
  %1487 = xor i64 %1483, -1
  %1488 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1470, i64 %1487
  %1489 = icmp ult %"class.sh::TIntermNode"** %1486, %1470
  %1490 = icmp ult %"class.sh::TIntermNode"** %1488, %1462
  %1491 = and i1 %1489, %1490
  br i1 %1491, label %1571, label %1492

1492:                                             ; preds = %1479
  %1493 = and i64 %1477, 4611686018427387900
  %1494 = sub nsw i64 0, %1493
  %1495 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1462, i64 %1494
  %1496 = sub nsw i64 0, %1493
  %1497 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1470, i64 %1496
  %1498 = add nsw i64 %1493, -4
  %1499 = lshr exact i64 %1498, 2
  %1500 = add nuw nsw i64 %1499, 1
  %1501 = and i64 %1500, 1
  %1502 = icmp eq i64 %1498, 0
  br i1 %1502, label %1547, label %1503

1503:                                             ; preds = %1492
  %1504 = sub nuw nsw i64 %1500, %1501
  %1505 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1462, i64 -1
  %1506 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1470, i64 -1
  %1507 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1462, i64 -1
  %1508 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1470, i64 -1
  br label %1509

1509:                                             ; preds = %1509, %1503
  %1510 = phi i64 [ 0, %1503 ], [ %1544, %1509 ]
  %1511 = phi i64 [ %1504, %1503 ], [ %1545, %1509 ]
  %1512 = sub i64 0, %1510
  %1513 = sub i64 0, %1510
  %1514 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1505, i64 %1512
  %1515 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1506, i64 %1513
  %1516 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1515, i64 -1
  %1517 = bitcast %"class.sh::TIntermNode"** %1516 to <2 x i64>*
  %1518 = load <2 x i64>, <2 x i64>* %1517, align 8, !alias.scope !45
  %1519 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1515, i64 -2
  %1520 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1519, i64 -1
  %1521 = bitcast %"class.sh::TIntermNode"** %1520 to <2 x i64>*
  %1522 = load <2 x i64>, <2 x i64>* %1521, align 8, !alias.scope !45
  %1523 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1514, i64 -1
  %1524 = bitcast %"class.sh::TIntermNode"** %1523 to <2 x i64>*
  store <2 x i64> %1518, <2 x i64>* %1524, align 8, !alias.scope !48, !noalias !45
  %1525 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1514, i64 -2
  %1526 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1525, i64 -1
  %1527 = bitcast %"class.sh::TIntermNode"** %1526 to <2 x i64>*
  store <2 x i64> %1522, <2 x i64>* %1527, align 8, !alias.scope !48, !noalias !45
  %1528 = sub nuw nsw i64 -4, %1510
  %1529 = sub nuw nsw i64 -4, %1510
  %1530 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1507, i64 %1528
  %1531 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1508, i64 %1529
  %1532 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1531, i64 -1
  %1533 = bitcast %"class.sh::TIntermNode"** %1532 to <2 x i64>*
  %1534 = load <2 x i64>, <2 x i64>* %1533, align 8, !alias.scope !45
  %1535 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1531, i64 -2
  %1536 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1535, i64 -1
  %1537 = bitcast %"class.sh::TIntermNode"** %1536 to <2 x i64>*
  %1538 = load <2 x i64>, <2 x i64>* %1537, align 8, !alias.scope !45
  %1539 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1530, i64 -1
  %1540 = bitcast %"class.sh::TIntermNode"** %1539 to <2 x i64>*
  store <2 x i64> %1534, <2 x i64>* %1540, align 8, !alias.scope !48, !noalias !45
  %1541 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1530, i64 -2
  %1542 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1541, i64 -1
  %1543 = bitcast %"class.sh::TIntermNode"** %1542 to <2 x i64>*
  store <2 x i64> %1538, <2 x i64>* %1543, align 8, !alias.scope !48, !noalias !45
  %1544 = add i64 %1510, 8
  %1545 = add i64 %1511, -2
  %1546 = icmp eq i64 %1545, 0
  br i1 %1546, label %1547, label %1509, !llvm.loop !50

1547:                                             ; preds = %1509, %1492
  %1548 = phi i64 [ 0, %1492 ], [ %1544, %1509 ]
  %1549 = icmp eq i64 %1501, 0
  br i1 %1549, label %1569, label %1550

1550:                                             ; preds = %1547
  %1551 = sub i64 0, %1548
  %1552 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1462, i64 -1
  %1553 = sub i64 0, %1548
  %1554 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1470, i64 -1
  %1555 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1552, i64 %1551
  %1556 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1554, i64 %1553
  %1557 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1556, i64 -1
  %1558 = bitcast %"class.sh::TIntermNode"** %1557 to <2 x i64>*
  %1559 = load <2 x i64>, <2 x i64>* %1558, align 8, !alias.scope !45
  %1560 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1556, i64 -2
  %1561 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1560, i64 -1
  %1562 = bitcast %"class.sh::TIntermNode"** %1561 to <2 x i64>*
  %1563 = load <2 x i64>, <2 x i64>* %1562, align 8, !alias.scope !45
  %1564 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1555, i64 -1
  %1565 = bitcast %"class.sh::TIntermNode"** %1564 to <2 x i64>*
  store <2 x i64> %1559, <2 x i64>* %1565, align 8, !alias.scope !48, !noalias !45
  %1566 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1555, i64 -2
  %1567 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1566, i64 -1
  %1568 = bitcast %"class.sh::TIntermNode"** %1567 to <2 x i64>*
  store <2 x i64> %1563, <2 x i64>* %1568, align 8, !alias.scope !48, !noalias !45
  br label %1569

1569:                                             ; preds = %1547, %1550
  %1570 = icmp eq i64 %1477, %1493
  br i1 %1570, label %1641, label %1571

1571:                                             ; preds = %1569, %1479, %1472
  %1572 = phi %"class.sh::TIntermNode"** [ %1462, %1479 ], [ %1462, %1472 ], [ %1495, %1569 ]
  %1573 = phi %"class.sh::TIntermNode"** [ %1470, %1479 ], [ %1470, %1472 ], [ %1497, %1569 ]
  %1574 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1573, i64 -1
  %1575 = ptrtoint %"class.sh::TIntermNode"** %1574 to i64
  %1576 = sub i64 %1575, %1469
  %1577 = lshr i64 %1576, 3
  %1578 = add nuw nsw i64 %1577, 1
  %1579 = and i64 %1578, 7
  %1580 = icmp eq i64 %1579, 0
  br i1 %1580, label %1592, label %1581

1581:                                             ; preds = %1571, %1581
  %1582 = phi %"class.sh::TIntermNode"** [ %1585, %1581 ], [ %1572, %1571 ]
  %1583 = phi %"class.sh::TIntermNode"** [ %1586, %1581 ], [ %1573, %1571 ]
  %1584 = phi i64 [ %1590, %1581 ], [ %1579, %1571 ]
  %1585 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1582, i64 -1
  %1586 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1583, i64 -1
  %1587 = bitcast %"class.sh::TIntermNode"** %1586 to i64*
  %1588 = load i64, i64* %1587, align 8
  %1589 = bitcast %"class.sh::TIntermNode"** %1585 to i64*
  store i64 %1588, i64* %1589, align 8
  %1590 = add i64 %1584, -1
  %1591 = icmp eq i64 %1590, 0
  br i1 %1591, label %1592, label %1581, !llvm.loop !51

1592:                                             ; preds = %1581, %1571
  %1593 = phi %"class.sh::TIntermNode"** [ undef, %1571 ], [ %1585, %1581 ]
  %1594 = phi %"class.sh::TIntermNode"** [ %1572, %1571 ], [ %1585, %1581 ]
  %1595 = phi %"class.sh::TIntermNode"** [ %1573, %1571 ], [ %1586, %1581 ]
  %1596 = icmp ult i64 %1576, 56
  br i1 %1596, label %1641, label %1597

1597:                                             ; preds = %1592, %1597
  %1598 = phi %"class.sh::TIntermNode"** [ %1635, %1597 ], [ %1594, %1592 ]
  %1599 = phi %"class.sh::TIntermNode"** [ %1636, %1597 ], [ %1595, %1592 ]
  %1600 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1598, i64 -1
  %1601 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -1
  %1602 = bitcast %"class.sh::TIntermNode"** %1601 to i64*
  %1603 = load i64, i64* %1602, align 8
  %1604 = bitcast %"class.sh::TIntermNode"** %1600 to i64*
  store i64 %1603, i64* %1604, align 8
  %1605 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1598, i64 -2
  %1606 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -2
  %1607 = bitcast %"class.sh::TIntermNode"** %1606 to i64*
  %1608 = load i64, i64* %1607, align 8
  %1609 = bitcast %"class.sh::TIntermNode"** %1605 to i64*
  store i64 %1608, i64* %1609, align 8
  %1610 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1598, i64 -3
  %1611 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -3
  %1612 = bitcast %"class.sh::TIntermNode"** %1611 to i64*
  %1613 = load i64, i64* %1612, align 8
  %1614 = bitcast %"class.sh::TIntermNode"** %1610 to i64*
  store i64 %1613, i64* %1614, align 8
  %1615 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1598, i64 -4
  %1616 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -4
  %1617 = bitcast %"class.sh::TIntermNode"** %1616 to i64*
  %1618 = load i64, i64* %1617, align 8
  %1619 = bitcast %"class.sh::TIntermNode"** %1615 to i64*
  store i64 %1618, i64* %1619, align 8
  %1620 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1598, i64 -5
  %1621 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -5
  %1622 = bitcast %"class.sh::TIntermNode"** %1621 to i64*
  %1623 = load i64, i64* %1622, align 8
  %1624 = bitcast %"class.sh::TIntermNode"** %1620 to i64*
  store i64 %1623, i64* %1624, align 8
  %1625 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1598, i64 -6
  %1626 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -6
  %1627 = bitcast %"class.sh::TIntermNode"** %1626 to i64*
  %1628 = load i64, i64* %1627, align 8
  %1629 = bitcast %"class.sh::TIntermNode"** %1625 to i64*
  store i64 %1628, i64* %1629, align 8
  %1630 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1598, i64 -7
  %1631 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -7
  %1632 = bitcast %"class.sh::TIntermNode"** %1631 to i64*
  %1633 = load i64, i64* %1632, align 8
  %1634 = bitcast %"class.sh::TIntermNode"** %1630 to i64*
  store i64 %1633, i64* %1634, align 8
  %1635 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1598, i64 -8
  %1636 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1599, i64 -8
  %1637 = bitcast %"class.sh::TIntermNode"** %1636 to i64*
  %1638 = load i64, i64* %1637, align 8
  %1639 = bitcast %"class.sh::TIntermNode"** %1635 to i64*
  store i64 %1638, i64* %1639, align 8
  %1640 = icmp eq %"class.sh::TIntermNode"** %1636, %1468
  br i1 %1640, label %1641, label %1597, !llvm.loop !52

1641:                                             ; preds = %1592, %1597, %1569, %1459
  %1642 = phi %"class.sh::TIntermNode"** [ %1462, %1459 ], [ %1495, %1569 ], [ %1593, %1592 ], [ %1635, %1597 ]
  %1643 = ptrtoint %"class.sh::TIntermNode"** %1642 to i64
  store i64 %1643, i64* %1435, align 8
  store i64 %1467, i64* %1434, align 8
  store i64 %1464, i64* %1444, align 8
  br label %1644

1644:                                             ; preds = %1641, %1427
  br i1 %542, label %1645, label %1658

1645:                                             ; preds = %1644
  %1646 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %49, i64 0, i32 0, i32 0, i32 1
  %1647 = bitcast %"class.sh::TIntermNode"*** %1646 to i64*
  %1648 = load i64, i64* %1647, align 8
  %1649 = bitcast %"class.sh::TVector.31"* %49 to i64*
  %1650 = load i64, i64* %1649, align 8
  %1651 = sub i64 %1648, %1650
  %1652 = ashr exact i64 %1651, 3
  %1653 = icmp ugt i64 %1652, 2
  br i1 %1653, label %1654, label %2358

1654:                                             ; preds = %1645
  %1655 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  %1656 = bitcast %"class.sh::TVector.31"* %9 to i64*
  %1657 = bitcast %"class.sh::TIntermNode"*** %1146 to i64*
  br label %2116

1658:                                             ; preds = %1644
  %1659 = bitcast i8* %1142 to %"class.sh::TIntermTyped"*
  %1660 = bitcast i8* %1141 to %"class.sh::TIntermTyped"*
  %1661 = bitcast i8* %1141 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %1662 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %1661, align 8
  %1663 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1662, i64 23
  %1664 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1663, align 8
  %1665 = call %"class.sh::TIntermTyped"* %1664(%"class.sh::TIntermTyped"* %1660) #6
  %1666 = ptrtoint %"class.sh::TIntermTyped"* %1665 to i64
  %1667 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %1668 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1146, align 8
  %1669 = icmp ult %"class.sh::TIntermNode"** %1667, %1668
  %1670 = ptrtoint %"class.sh::TIntermNode"** %1668 to i64
  br i1 %1669, label %1671, label %1676

1671:                                             ; preds = %1658
  %1672 = bitcast %"class.sh::TIntermNode"** %1667 to i64*
  store i64 %1666, i64* %1672, align 8
  %1673 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1667, i64 1
  %1674 = ptrtoint %"class.sh::TIntermNode"** %1673 to i64
  %1675 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  store i64 %1674, i64* %1675, align 8
  br label %1888

1676:                                             ; preds = %1658
  %1677 = ptrtoint %"class.sh::TIntermNode"** %1667 to i64
  %1678 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  %1679 = bitcast %"class.sh::TVector.31"* %9 to i64*
  %1680 = load i64, i64* %1679, align 8
  %1681 = sub i64 %1677, %1680
  %1682 = ashr exact i64 %1681, 3
  %1683 = add nsw i64 %1682, 1
  %1684 = icmp ugt i64 %1683, 2305843009213693951
  br i1 %1684, label %1685, label %1687

1685:                                             ; preds = %1676
  %1686 = bitcast %"class.sh::TVector.31"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1686) #14
  unreachable

1687:                                             ; preds = %1676
  %1688 = bitcast %"class.sh::TIntermNode"*** %1146 to i64*
  %1689 = sub i64 %1670, %1680
  %1690 = ashr exact i64 %1689, 3
  %1691 = icmp ult i64 %1690, 1152921504606846975
  br i1 %1691, label %1692, label %1697

1692:                                             ; preds = %1687
  %1693 = ashr exact i64 %1689, 2
  %1694 = icmp ult i64 %1693, %1683
  %1695 = select i1 %1694, i64 %1683, i64 %1693
  %1696 = icmp eq i64 %1695, 0
  br i1 %1696, label %1703, label %1697

1697:                                             ; preds = %1692, %1687
  %1698 = phi i64 [ %1695, %1692 ], [ 2305843009213693951, %1687 ]
  %1699 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1700 = shl i64 %1698, 3
  %1701 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1699, i64 %1700) #6
  %1702 = bitcast i8* %1701 to %"class.sh::TIntermNode"**
  br label %1703

1703:                                             ; preds = %1697, %1692
  %1704 = phi i64 [ %1698, %1697 ], [ 0, %1692 ]
  %1705 = phi %"class.sh::TIntermNode"** [ %1702, %1697 ], [ null, %1692 ]
  %1706 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1705, i64 %1682
  %1707 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1705, i64 %1704
  %1708 = ptrtoint %"class.sh::TIntermNode"** %1707 to i64
  %1709 = bitcast %"class.sh::TIntermNode"** %1706 to i64*
  store i64 %1666, i64* %1709, align 8
  %1710 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1706, i64 1
  %1711 = ptrtoint %"class.sh::TIntermNode"** %1710 to i64
  %1712 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1144, align 8
  %1713 = ptrtoint %"class.sh::TIntermNode"** %1712 to i64
  %1714 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %1715 = icmp eq %"class.sh::TIntermNode"** %1714, %1712
  br i1 %1715, label %1885, label %1716

1716:                                             ; preds = %1703
  %1717 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 -1
  %1718 = ptrtoint %"class.sh::TIntermNode"** %1717 to i64
  %1719 = sub i64 %1718, %1713
  %1720 = lshr i64 %1719, 3
  %1721 = add nuw nsw i64 %1720, 1
  %1722 = icmp ult i64 %1721, 4
  br i1 %1722, label %1815, label %1723

1723:                                             ; preds = %1716
  %1724 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 -1
  %1725 = ptrtoint %"class.sh::TIntermNode"** %1724 to i64
  %1726 = sub i64 %1725, %1713
  %1727 = lshr i64 %1726, 3
  %1728 = xor i64 %1727, -1
  %1729 = add nsw i64 %1682, %1728
  %1730 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1705, i64 %1729
  %1731 = xor i64 %1727, -1
  %1732 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 %1731
  %1733 = icmp ult %"class.sh::TIntermNode"** %1730, %1714
  %1734 = icmp ult %"class.sh::TIntermNode"** %1732, %1706
  %1735 = and i1 %1733, %1734
  br i1 %1735, label %1815, label %1736

1736:                                             ; preds = %1723
  %1737 = and i64 %1721, 4611686018427387900
  %1738 = sub nsw i64 0, %1737
  %1739 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1706, i64 %1738
  %1740 = sub nsw i64 0, %1737
  %1741 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 %1740
  %1742 = add nsw i64 %1737, -4
  %1743 = lshr exact i64 %1742, 2
  %1744 = add nuw nsw i64 %1743, 1
  %1745 = and i64 %1744, 1
  %1746 = icmp eq i64 %1742, 0
  br i1 %1746, label %1791, label %1747

1747:                                             ; preds = %1736
  %1748 = sub nuw nsw i64 %1744, %1745
  %1749 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1706, i64 -1
  %1750 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 -1
  %1751 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1706, i64 -1
  %1752 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 -1
  br label %1753

1753:                                             ; preds = %1753, %1747
  %1754 = phi i64 [ 0, %1747 ], [ %1788, %1753 ]
  %1755 = phi i64 [ %1748, %1747 ], [ %1789, %1753 ]
  %1756 = sub i64 0, %1754
  %1757 = sub i64 0, %1754
  %1758 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1749, i64 %1756
  %1759 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1750, i64 %1757
  %1760 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1759, i64 -1
  %1761 = bitcast %"class.sh::TIntermNode"** %1760 to <2 x i64>*
  %1762 = load <2 x i64>, <2 x i64>* %1761, align 8, !alias.scope !53
  %1763 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1759, i64 -2
  %1764 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1763, i64 -1
  %1765 = bitcast %"class.sh::TIntermNode"** %1764 to <2 x i64>*
  %1766 = load <2 x i64>, <2 x i64>* %1765, align 8, !alias.scope !53
  %1767 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -1
  %1768 = bitcast %"class.sh::TIntermNode"** %1767 to <2 x i64>*
  store <2 x i64> %1762, <2 x i64>* %1768, align 8, !alias.scope !56, !noalias !53
  %1769 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1758, i64 -2
  %1770 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1769, i64 -1
  %1771 = bitcast %"class.sh::TIntermNode"** %1770 to <2 x i64>*
  store <2 x i64> %1766, <2 x i64>* %1771, align 8, !alias.scope !56, !noalias !53
  %1772 = sub nuw nsw i64 -4, %1754
  %1773 = sub nuw nsw i64 -4, %1754
  %1774 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1751, i64 %1772
  %1775 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1752, i64 %1773
  %1776 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1775, i64 -1
  %1777 = bitcast %"class.sh::TIntermNode"** %1776 to <2 x i64>*
  %1778 = load <2 x i64>, <2 x i64>* %1777, align 8, !alias.scope !53
  %1779 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1775, i64 -2
  %1780 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1779, i64 -1
  %1781 = bitcast %"class.sh::TIntermNode"** %1780 to <2 x i64>*
  %1782 = load <2 x i64>, <2 x i64>* %1781, align 8, !alias.scope !53
  %1783 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1774, i64 -1
  %1784 = bitcast %"class.sh::TIntermNode"** %1783 to <2 x i64>*
  store <2 x i64> %1778, <2 x i64>* %1784, align 8, !alias.scope !56, !noalias !53
  %1785 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1774, i64 -2
  %1786 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1785, i64 -1
  %1787 = bitcast %"class.sh::TIntermNode"** %1786 to <2 x i64>*
  store <2 x i64> %1782, <2 x i64>* %1787, align 8, !alias.scope !56, !noalias !53
  %1788 = add i64 %1754, 8
  %1789 = add i64 %1755, -2
  %1790 = icmp eq i64 %1789, 0
  br i1 %1790, label %1791, label %1753, !llvm.loop !58

1791:                                             ; preds = %1753, %1736
  %1792 = phi i64 [ 0, %1736 ], [ %1788, %1753 ]
  %1793 = icmp eq i64 %1745, 0
  br i1 %1793, label %1813, label %1794

1794:                                             ; preds = %1791
  %1795 = sub i64 0, %1792
  %1796 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1706, i64 -1
  %1797 = sub i64 0, %1792
  %1798 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1714, i64 -1
  %1799 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1796, i64 %1795
  %1800 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1798, i64 %1797
  %1801 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1800, i64 -1
  %1802 = bitcast %"class.sh::TIntermNode"** %1801 to <2 x i64>*
  %1803 = load <2 x i64>, <2 x i64>* %1802, align 8, !alias.scope !53
  %1804 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1800, i64 -2
  %1805 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1804, i64 -1
  %1806 = bitcast %"class.sh::TIntermNode"** %1805 to <2 x i64>*
  %1807 = load <2 x i64>, <2 x i64>* %1806, align 8, !alias.scope !53
  %1808 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1799, i64 -1
  %1809 = bitcast %"class.sh::TIntermNode"** %1808 to <2 x i64>*
  store <2 x i64> %1803, <2 x i64>* %1809, align 8, !alias.scope !56, !noalias !53
  %1810 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1799, i64 -2
  %1811 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1810, i64 -1
  %1812 = bitcast %"class.sh::TIntermNode"** %1811 to <2 x i64>*
  store <2 x i64> %1807, <2 x i64>* %1812, align 8, !alias.scope !56, !noalias !53
  br label %1813

1813:                                             ; preds = %1791, %1794
  %1814 = icmp eq i64 %1721, %1737
  br i1 %1814, label %1885, label %1815

1815:                                             ; preds = %1813, %1723, %1716
  %1816 = phi %"class.sh::TIntermNode"** [ %1706, %1723 ], [ %1706, %1716 ], [ %1739, %1813 ]
  %1817 = phi %"class.sh::TIntermNode"** [ %1714, %1723 ], [ %1714, %1716 ], [ %1741, %1813 ]
  %1818 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1817, i64 -1
  %1819 = ptrtoint %"class.sh::TIntermNode"** %1818 to i64
  %1820 = sub i64 %1819, %1713
  %1821 = lshr i64 %1820, 3
  %1822 = add nuw nsw i64 %1821, 1
  %1823 = and i64 %1822, 7
  %1824 = icmp eq i64 %1823, 0
  br i1 %1824, label %1836, label %1825

1825:                                             ; preds = %1815, %1825
  %1826 = phi %"class.sh::TIntermNode"** [ %1829, %1825 ], [ %1816, %1815 ]
  %1827 = phi %"class.sh::TIntermNode"** [ %1830, %1825 ], [ %1817, %1815 ]
  %1828 = phi i64 [ %1834, %1825 ], [ %1823, %1815 ]
  %1829 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1826, i64 -1
  %1830 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1827, i64 -1
  %1831 = bitcast %"class.sh::TIntermNode"** %1830 to i64*
  %1832 = load i64, i64* %1831, align 8
  %1833 = bitcast %"class.sh::TIntermNode"** %1829 to i64*
  store i64 %1832, i64* %1833, align 8
  %1834 = add i64 %1828, -1
  %1835 = icmp eq i64 %1834, 0
  br i1 %1835, label %1836, label %1825, !llvm.loop !59

1836:                                             ; preds = %1825, %1815
  %1837 = phi %"class.sh::TIntermNode"** [ undef, %1815 ], [ %1829, %1825 ]
  %1838 = phi %"class.sh::TIntermNode"** [ %1816, %1815 ], [ %1829, %1825 ]
  %1839 = phi %"class.sh::TIntermNode"** [ %1817, %1815 ], [ %1830, %1825 ]
  %1840 = icmp ult i64 %1820, 56
  br i1 %1840, label %1885, label %1841

1841:                                             ; preds = %1836, %1841
  %1842 = phi %"class.sh::TIntermNode"** [ %1879, %1841 ], [ %1838, %1836 ]
  %1843 = phi %"class.sh::TIntermNode"** [ %1880, %1841 ], [ %1839, %1836 ]
  %1844 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -1
  %1845 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1843, i64 -1
  %1846 = bitcast %"class.sh::TIntermNode"** %1845 to i64*
  %1847 = load i64, i64* %1846, align 8
  %1848 = bitcast %"class.sh::TIntermNode"** %1844 to i64*
  store i64 %1847, i64* %1848, align 8
  %1849 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -2
  %1850 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1843, i64 -2
  %1851 = bitcast %"class.sh::TIntermNode"** %1850 to i64*
  %1852 = load i64, i64* %1851, align 8
  %1853 = bitcast %"class.sh::TIntermNode"** %1849 to i64*
  store i64 %1852, i64* %1853, align 8
  %1854 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -3
  %1855 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1843, i64 -3
  %1856 = bitcast %"class.sh::TIntermNode"** %1855 to i64*
  %1857 = load i64, i64* %1856, align 8
  %1858 = bitcast %"class.sh::TIntermNode"** %1854 to i64*
  store i64 %1857, i64* %1858, align 8
  %1859 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -4
  %1860 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1843, i64 -4
  %1861 = bitcast %"class.sh::TIntermNode"** %1860 to i64*
  %1862 = load i64, i64* %1861, align 8
  %1863 = bitcast %"class.sh::TIntermNode"** %1859 to i64*
  store i64 %1862, i64* %1863, align 8
  %1864 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -5
  %1865 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1843, i64 -5
  %1866 = bitcast %"class.sh::TIntermNode"** %1865 to i64*
  %1867 = load i64, i64* %1866, align 8
  %1868 = bitcast %"class.sh::TIntermNode"** %1864 to i64*
  store i64 %1867, i64* %1868, align 8
  %1869 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -6
  %1870 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1843, i64 -6
  %1871 = bitcast %"class.sh::TIntermNode"** %1870 to i64*
  %1872 = load i64, i64* %1871, align 8
  %1873 = bitcast %"class.sh::TIntermNode"** %1869 to i64*
  store i64 %1872, i64* %1873, align 8
  %1874 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -7
  %1875 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1843, i64 -7
  %1876 = bitcast %"class.sh::TIntermNode"** %1875 to i64*
  %1877 = load i64, i64* %1876, align 8
  %1878 = bitcast %"class.sh::TIntermNode"** %1874 to i64*
  store i64 %1877, i64* %1878, align 8
  %1879 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1842, i64 -8
  %1880 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1843, i64 -8
  %1881 = bitcast %"class.sh::TIntermNode"** %1880 to i64*
  %1882 = load i64, i64* %1881, align 8
  %1883 = bitcast %"class.sh::TIntermNode"** %1879 to i64*
  store i64 %1882, i64* %1883, align 8
  %1884 = icmp eq %"class.sh::TIntermNode"** %1880, %1712
  br i1 %1884, label %1885, label %1841, !llvm.loop !60

1885:                                             ; preds = %1836, %1841, %1813, %1703
  %1886 = phi %"class.sh::TIntermNode"** [ %1706, %1703 ], [ %1739, %1813 ], [ %1837, %1836 ], [ %1879, %1841 ]
  %1887 = ptrtoint %"class.sh::TIntermNode"** %1886 to i64
  store i64 %1887, i64* %1679, align 8
  store i64 %1711, i64* %1678, align 8
  store i64 %1708, i64* %1688, align 8
  br label %1888

1888:                                             ; preds = %1885, %1671
  %1889 = bitcast i8* %1142 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %1890 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %1889, align 8
  %1891 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1890, i64 23
  %1892 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1891, align 8
  %1893 = call %"class.sh::TIntermTyped"* %1892(%"class.sh::TIntermTyped"* %1659) #6
  %1894 = ptrtoint %"class.sh::TIntermTyped"* %1893 to i64
  %1895 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %1896 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1146, align 8
  %1897 = icmp ult %"class.sh::TIntermNode"** %1895, %1896
  %1898 = ptrtoint %"class.sh::TIntermNode"** %1896 to i64
  br i1 %1897, label %1899, label %1904

1899:                                             ; preds = %1888
  %1900 = bitcast %"class.sh::TIntermNode"** %1895 to i64*
  store i64 %1894, i64* %1900, align 8
  %1901 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1895, i64 1
  %1902 = ptrtoint %"class.sh::TIntermNode"** %1901 to i64
  %1903 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  store i64 %1902, i64* %1903, align 8
  br label %2358

1904:                                             ; preds = %1888
  %1905 = ptrtoint %"class.sh::TIntermNode"** %1895 to i64
  %1906 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  %1907 = bitcast %"class.sh::TVector.31"* %9 to i64*
  %1908 = load i64, i64* %1907, align 8
  %1909 = sub i64 %1905, %1908
  %1910 = ashr exact i64 %1909, 3
  %1911 = add nsw i64 %1910, 1
  %1912 = icmp ugt i64 %1911, 2305843009213693951
  br i1 %1912, label %1913, label %1915

1913:                                             ; preds = %1904
  %1914 = bitcast %"class.sh::TVector.31"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1914) #14
  unreachable

1915:                                             ; preds = %1904
  %1916 = bitcast %"class.sh::TIntermNode"*** %1146 to i64*
  %1917 = sub i64 %1898, %1908
  %1918 = ashr exact i64 %1917, 3
  %1919 = icmp ult i64 %1918, 1152921504606846975
  br i1 %1919, label %1920, label %1925

1920:                                             ; preds = %1915
  %1921 = ashr exact i64 %1917, 2
  %1922 = icmp ult i64 %1921, %1911
  %1923 = select i1 %1922, i64 %1911, i64 %1921
  %1924 = icmp eq i64 %1923, 0
  br i1 %1924, label %1931, label %1925

1925:                                             ; preds = %1920, %1915
  %1926 = phi i64 [ %1923, %1920 ], [ 2305843009213693951, %1915 ]
  %1927 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1928 = shl i64 %1926, 3
  %1929 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1927, i64 %1928) #6
  %1930 = bitcast i8* %1929 to %"class.sh::TIntermNode"**
  br label %1931

1931:                                             ; preds = %1925, %1920
  %1932 = phi i64 [ %1926, %1925 ], [ 0, %1920 ]
  %1933 = phi %"class.sh::TIntermNode"** [ %1930, %1925 ], [ null, %1920 ]
  %1934 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1933, i64 %1910
  %1935 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1933, i64 %1932
  %1936 = ptrtoint %"class.sh::TIntermNode"** %1935 to i64
  %1937 = bitcast %"class.sh::TIntermNode"** %1934 to i64*
  store i64 %1894, i64* %1937, align 8
  %1938 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1934, i64 1
  %1939 = ptrtoint %"class.sh::TIntermNode"** %1938 to i64
  %1940 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1144, align 8
  %1941 = ptrtoint %"class.sh::TIntermNode"** %1940 to i64
  %1942 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %1943 = icmp eq %"class.sh::TIntermNode"** %1942, %1940
  br i1 %1943, label %2113, label %1944

1944:                                             ; preds = %1931
  %1945 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1942, i64 -1
  %1946 = ptrtoint %"class.sh::TIntermNode"** %1945 to i64
  %1947 = sub i64 %1946, %1941
  %1948 = lshr i64 %1947, 3
  %1949 = add nuw nsw i64 %1948, 1
  %1950 = icmp ult i64 %1949, 4
  br i1 %1950, label %2043, label %1951

1951:                                             ; preds = %1944
  %1952 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1942, i64 -1
  %1953 = ptrtoint %"class.sh::TIntermNode"** %1952 to i64
  %1954 = sub i64 %1953, %1941
  %1955 = lshr i64 %1954, 3
  %1956 = xor i64 %1955, -1
  %1957 = add nsw i64 %1910, %1956
  %1958 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1933, i64 %1957
  %1959 = xor i64 %1955, -1
  %1960 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1942, i64 %1959
  %1961 = icmp ult %"class.sh::TIntermNode"** %1958, %1942
  %1962 = icmp ult %"class.sh::TIntermNode"** %1960, %1934
  %1963 = and i1 %1961, %1962
  br i1 %1963, label %2043, label %1964

1964:                                             ; preds = %1951
  %1965 = and i64 %1949, 4611686018427387900
  %1966 = sub nsw i64 0, %1965
  %1967 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1934, i64 %1966
  %1968 = sub nsw i64 0, %1965
  %1969 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1942, i64 %1968
  %1970 = add nsw i64 %1965, -4
  %1971 = lshr exact i64 %1970, 2
  %1972 = add nuw nsw i64 %1971, 1
  %1973 = and i64 %1972, 1
  %1974 = icmp eq i64 %1970, 0
  br i1 %1974, label %2021, label %1975

1975:                                             ; preds = %1964
  %1976 = sub nuw nsw i64 %1972, %1973
  %1977 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1934, i64 -1
  %1978 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1942, i64 -1
  %1979 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1934, i64 -1
  %1980 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1942, i64 -1
  br label %1981

1981:                                             ; preds = %1981, %1975
  %1982 = phi i64 [ 0, %1975 ], [ %2016, %1981 ]
  %1983 = phi i64 [ %1976, %1975 ], [ %2017, %1981 ]
  %1984 = sub i64 0, %1982
  %1985 = sub i64 0, %1982
  %1986 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1977, i64 %1984
  %1987 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1978, i64 %1985
  %1988 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1987, i64 -1
  %1989 = bitcast %"class.sh::TIntermNode"** %1988 to <2 x i64>*
  %1990 = load <2 x i64>, <2 x i64>* %1989, align 8, !alias.scope !61
  %1991 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1987, i64 -2
  %1992 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1991, i64 -1
  %1993 = bitcast %"class.sh::TIntermNode"** %1992 to <2 x i64>*
  %1994 = load <2 x i64>, <2 x i64>* %1993, align 8, !alias.scope !61
  %1995 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1986, i64 -1
  %1996 = bitcast %"class.sh::TIntermNode"** %1995 to <2 x i64>*
  store <2 x i64> %1990, <2 x i64>* %1996, align 8, !alias.scope !64, !noalias !61
  %1997 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1986, i64 -2
  %1998 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1997, i64 -1
  %1999 = bitcast %"class.sh::TIntermNode"** %1998 to <2 x i64>*
  store <2 x i64> %1994, <2 x i64>* %1999, align 8, !alias.scope !64, !noalias !61
  %2000 = sub nuw nsw i64 -4, %1982
  %2001 = sub nuw nsw i64 -4, %1982
  %2002 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1979, i64 %2000
  %2003 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1980, i64 %2001
  %2004 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2003, i64 -1
  %2005 = bitcast %"class.sh::TIntermNode"** %2004 to <2 x i64>*
  %2006 = load <2 x i64>, <2 x i64>* %2005, align 8, !alias.scope !61
  %2007 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2003, i64 -2
  %2008 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2007, i64 -1
  %2009 = bitcast %"class.sh::TIntermNode"** %2008 to <2 x i64>*
  %2010 = load <2 x i64>, <2 x i64>* %2009, align 8, !alias.scope !61
  %2011 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -1
  %2012 = bitcast %"class.sh::TIntermNode"** %2011 to <2 x i64>*
  store <2 x i64> %2006, <2 x i64>* %2012, align 8, !alias.scope !64, !noalias !61
  %2013 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2002, i64 -2
  %2014 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2013, i64 -1
  %2015 = bitcast %"class.sh::TIntermNode"** %2014 to <2 x i64>*
  store <2 x i64> %2010, <2 x i64>* %2015, align 8, !alias.scope !64, !noalias !61
  %2016 = add i64 %1982, 8
  %2017 = add i64 %1983, -2
  %2018 = icmp eq i64 %2017, 0
  br i1 %2018, label %2019, label %1981, !llvm.loop !66

2019:                                             ; preds = %1981
  %2020 = sub nuw nsw i64 -8, %1982
  br label %2021

2021:                                             ; preds = %2019, %1964
  %2022 = phi i64 [ 0, %1964 ], [ %2020, %2019 ]
  %2023 = icmp eq i64 %1973, 0
  br i1 %2023, label %2041, label %2024

2024:                                             ; preds = %2021
  %2025 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1934, i64 -1
  %2026 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %1942, i64 -1
  %2027 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2025, i64 %2022
  %2028 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2026, i64 %2022
  %2029 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2028, i64 -1
  %2030 = bitcast %"class.sh::TIntermNode"** %2029 to <2 x i64>*
  %2031 = load <2 x i64>, <2 x i64>* %2030, align 8, !alias.scope !61
  %2032 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2028, i64 -2
  %2033 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2032, i64 -1
  %2034 = bitcast %"class.sh::TIntermNode"** %2033 to <2 x i64>*
  %2035 = load <2 x i64>, <2 x i64>* %2034, align 8, !alias.scope !61
  %2036 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2027, i64 -1
  %2037 = bitcast %"class.sh::TIntermNode"** %2036 to <2 x i64>*
  store <2 x i64> %2031, <2 x i64>* %2037, align 8, !alias.scope !64, !noalias !61
  %2038 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2027, i64 -2
  %2039 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2038, i64 -1
  %2040 = bitcast %"class.sh::TIntermNode"** %2039 to <2 x i64>*
  store <2 x i64> %2035, <2 x i64>* %2040, align 8, !alias.scope !64, !noalias !61
  br label %2041

2041:                                             ; preds = %2021, %2024
  %2042 = icmp eq i64 %1949, %1965
  br i1 %2042, label %2113, label %2043

2043:                                             ; preds = %2041, %1951, %1944
  %2044 = phi %"class.sh::TIntermNode"** [ %1934, %1951 ], [ %1934, %1944 ], [ %1967, %2041 ]
  %2045 = phi %"class.sh::TIntermNode"** [ %1942, %1951 ], [ %1942, %1944 ], [ %1969, %2041 ]
  %2046 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2045, i64 -1
  %2047 = ptrtoint %"class.sh::TIntermNode"** %2046 to i64
  %2048 = sub i64 %2047, %1941
  %2049 = lshr i64 %2048, 3
  %2050 = add nuw nsw i64 %2049, 1
  %2051 = and i64 %2050, 7
  %2052 = icmp eq i64 %2051, 0
  br i1 %2052, label %2064, label %2053

2053:                                             ; preds = %2043, %2053
  %2054 = phi %"class.sh::TIntermNode"** [ %2057, %2053 ], [ %2044, %2043 ]
  %2055 = phi %"class.sh::TIntermNode"** [ %2058, %2053 ], [ %2045, %2043 ]
  %2056 = phi i64 [ %2062, %2053 ], [ %2051, %2043 ]
  %2057 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2054, i64 -1
  %2058 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2055, i64 -1
  %2059 = bitcast %"class.sh::TIntermNode"** %2058 to i64*
  %2060 = load i64, i64* %2059, align 8
  %2061 = bitcast %"class.sh::TIntermNode"** %2057 to i64*
  store i64 %2060, i64* %2061, align 8
  %2062 = add i64 %2056, -1
  %2063 = icmp eq i64 %2062, 0
  br i1 %2063, label %2064, label %2053, !llvm.loop !67

2064:                                             ; preds = %2053, %2043
  %2065 = phi %"class.sh::TIntermNode"** [ undef, %2043 ], [ %2057, %2053 ]
  %2066 = phi %"class.sh::TIntermNode"** [ %2044, %2043 ], [ %2057, %2053 ]
  %2067 = phi %"class.sh::TIntermNode"** [ %2045, %2043 ], [ %2058, %2053 ]
  %2068 = icmp ult i64 %2048, 56
  br i1 %2068, label %2113, label %2069

2069:                                             ; preds = %2064, %2069
  %2070 = phi %"class.sh::TIntermNode"** [ %2107, %2069 ], [ %2066, %2064 ]
  %2071 = phi %"class.sh::TIntermNode"** [ %2108, %2069 ], [ %2067, %2064 ]
  %2072 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2070, i64 -1
  %2073 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2071, i64 -1
  %2074 = bitcast %"class.sh::TIntermNode"** %2073 to i64*
  %2075 = load i64, i64* %2074, align 8
  %2076 = bitcast %"class.sh::TIntermNode"** %2072 to i64*
  store i64 %2075, i64* %2076, align 8
  %2077 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2070, i64 -2
  %2078 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2071, i64 -2
  %2079 = bitcast %"class.sh::TIntermNode"** %2078 to i64*
  %2080 = load i64, i64* %2079, align 8
  %2081 = bitcast %"class.sh::TIntermNode"** %2077 to i64*
  store i64 %2080, i64* %2081, align 8
  %2082 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2070, i64 -3
  %2083 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2071, i64 -3
  %2084 = bitcast %"class.sh::TIntermNode"** %2083 to i64*
  %2085 = load i64, i64* %2084, align 8
  %2086 = bitcast %"class.sh::TIntermNode"** %2082 to i64*
  store i64 %2085, i64* %2086, align 8
  %2087 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2070, i64 -4
  %2088 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2071, i64 -4
  %2089 = bitcast %"class.sh::TIntermNode"** %2088 to i64*
  %2090 = load i64, i64* %2089, align 8
  %2091 = bitcast %"class.sh::TIntermNode"** %2087 to i64*
  store i64 %2090, i64* %2091, align 8
  %2092 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2070, i64 -5
  %2093 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2071, i64 -5
  %2094 = bitcast %"class.sh::TIntermNode"** %2093 to i64*
  %2095 = load i64, i64* %2094, align 8
  %2096 = bitcast %"class.sh::TIntermNode"** %2092 to i64*
  store i64 %2095, i64* %2096, align 8
  %2097 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2070, i64 -6
  %2098 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2071, i64 -6
  %2099 = bitcast %"class.sh::TIntermNode"** %2098 to i64*
  %2100 = load i64, i64* %2099, align 8
  %2101 = bitcast %"class.sh::TIntermNode"** %2097 to i64*
  store i64 %2100, i64* %2101, align 8
  %2102 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2070, i64 -7
  %2103 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2071, i64 -7
  %2104 = bitcast %"class.sh::TIntermNode"** %2103 to i64*
  %2105 = load i64, i64* %2104, align 8
  %2106 = bitcast %"class.sh::TIntermNode"** %2102 to i64*
  store i64 %2105, i64* %2106, align 8
  %2107 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2070, i64 -8
  %2108 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2071, i64 -8
  %2109 = bitcast %"class.sh::TIntermNode"** %2108 to i64*
  %2110 = load i64, i64* %2109, align 8
  %2111 = bitcast %"class.sh::TIntermNode"** %2107 to i64*
  store i64 %2110, i64* %2111, align 8
  %2112 = icmp eq %"class.sh::TIntermNode"** %2108, %1940
  br i1 %2112, label %2113, label %2069, !llvm.loop !68

2113:                                             ; preds = %2064, %2069, %2041, %1931
  %2114 = phi %"class.sh::TIntermNode"** [ %1934, %1931 ], [ %1967, %2041 ], [ %2065, %2064 ], [ %2107, %2069 ]
  %2115 = ptrtoint %"class.sh::TIntermNode"** %2114 to i64
  store i64 %2115, i64* %1907, align 8
  store i64 %1939, i64* %1906, align 8
  store i64 %1936, i64* %1916, align 8
  br label %2358

2116:                                             ; preds = %2351, %1654
  %2117 = phi i64 [ %1650, %1654 ], [ %2354, %2351 ]
  %2118 = phi i64 [ 2, %1654 ], [ %2352, %2351 ]
  %2119 = inttoptr i64 %2117 to %"class.sh::TIntermNode"**
  %2120 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2119, i64 %2118
  %2121 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2120, align 8
  %2122 = bitcast %"class.sh::TIntermNode"* %2121 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %2123 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %2122, align 8
  %2124 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %2123, i64 4
  %2125 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %2124, align 8
  %2126 = call %"class.sh::TIntermTyped"* %2125(%"class.sh::TIntermNode"* %2121) #6
  %2127 = bitcast %"class.sh::TIntermTyped"* %2126 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %2128 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %2127, align 8
  %2129 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %2128, i64 23
  %2130 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %2129, align 8
  %2131 = call %"class.sh::TIntermTyped"* %2130(%"class.sh::TIntermTyped"* %2126) #6
  %2132 = ptrtoint %"class.sh::TIntermTyped"* %2131 to i64
  %2133 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %2134 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1146, align 8
  %2135 = icmp ult %"class.sh::TIntermNode"** %2133, %2134
  %2136 = ptrtoint %"class.sh::TIntermNode"** %2134 to i64
  br i1 %2135, label %2137, label %2141

2137:                                             ; preds = %2116
  %2138 = bitcast %"class.sh::TIntermNode"** %2133 to i64*
  store i64 %2132, i64* %2138, align 8
  %2139 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2133, i64 1
  %2140 = ptrtoint %"class.sh::TIntermNode"** %2139 to i64
  store i64 %2140, i64* %1655, align 8
  br label %2351

2141:                                             ; preds = %2116
  %2142 = ptrtoint %"class.sh::TIntermNode"** %2133 to i64
  %2143 = load i64, i64* %1656, align 8
  %2144 = sub i64 %2142, %2143
  %2145 = ashr exact i64 %2144, 3
  %2146 = add nsw i64 %2145, 1
  %2147 = icmp ugt i64 %2146, 2305843009213693951
  br i1 %2147, label %2148, label %2150

2148:                                             ; preds = %2141
  %2149 = bitcast %"class.sh::TVector.31"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2149) #14
  unreachable

2150:                                             ; preds = %2141
  %2151 = sub i64 %2136, %2143
  %2152 = ashr exact i64 %2151, 3
  %2153 = icmp ult i64 %2152, 1152921504606846975
  br i1 %2153, label %2154, label %2159

2154:                                             ; preds = %2150
  %2155 = ashr exact i64 %2151, 2
  %2156 = icmp ult i64 %2155, %2146
  %2157 = select i1 %2156, i64 %2146, i64 %2155
  %2158 = icmp eq i64 %2157, 0
  br i1 %2158, label %2165, label %2159

2159:                                             ; preds = %2154, %2150
  %2160 = phi i64 [ %2157, %2154 ], [ 2305843009213693951, %2150 ]
  %2161 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %2162 = shl i64 %2160, 3
  %2163 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %2161, i64 %2162) #6
  %2164 = bitcast i8* %2163 to %"class.sh::TIntermNode"**
  br label %2165

2165:                                             ; preds = %2159, %2154
  %2166 = phi i64 [ %2160, %2159 ], [ 0, %2154 ]
  %2167 = phi %"class.sh::TIntermNode"** [ %2164, %2159 ], [ null, %2154 ]
  %2168 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2167, i64 %2145
  %2169 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2167, i64 %2166
  %2170 = ptrtoint %"class.sh::TIntermNode"** %2169 to i64
  %2171 = bitcast %"class.sh::TIntermNode"** %2168 to i64*
  store i64 %2132, i64* %2171, align 8
  %2172 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2168, i64 1
  %2173 = ptrtoint %"class.sh::TIntermNode"** %2172 to i64
  %2174 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1144, align 8
  %2175 = ptrtoint %"class.sh::TIntermNode"** %2174 to i64
  %2176 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1145, align 8
  %2177 = icmp eq %"class.sh::TIntermNode"** %2176, %2174
  br i1 %2177, label %2348, label %2178

2178:                                             ; preds = %2165
  %2179 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2176, i64 -1
  %2180 = ptrtoint %"class.sh::TIntermNode"** %2179 to i64
  %2181 = sub i64 %2180, %2175
  %2182 = lshr i64 %2181, 3
  %2183 = add nuw nsw i64 %2182, 1
  %2184 = icmp ult i64 %2183, 4
  br i1 %2184, label %2278, label %2185

2185:                                             ; preds = %2178
  %2186 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2167, i64 -1
  %2187 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2176, i64 -1
  %2188 = ptrtoint %"class.sh::TIntermNode"** %2187 to i64
  %2189 = sub i64 %2188, %2175
  %2190 = lshr i64 %2189, 3
  %2191 = sub nsw i64 %2145, %2190
  %2192 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2186, i64 %2191
  %2193 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2176, i64 -1
  %2194 = sub nsw i64 0, %2190
  %2195 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2193, i64 %2194
  %2196 = icmp ult %"class.sh::TIntermNode"** %2192, %2176
  %2197 = icmp ult %"class.sh::TIntermNode"** %2195, %2168
  %2198 = and i1 %2196, %2197
  br i1 %2198, label %2278, label %2199

2199:                                             ; preds = %2185
  %2200 = and i64 %2183, 4611686018427387900
  %2201 = sub nsw i64 0, %2200
  %2202 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2168, i64 %2201
  %2203 = sub nsw i64 0, %2200
  %2204 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2176, i64 %2203
  %2205 = add nsw i64 %2200, -4
  %2206 = lshr exact i64 %2205, 2
  %2207 = add nuw nsw i64 %2206, 1
  %2208 = and i64 %2207, 1
  %2209 = icmp eq i64 %2205, 0
  br i1 %2209, label %2254, label %2210

2210:                                             ; preds = %2199
  %2211 = sub nuw nsw i64 %2207, %2208
  %2212 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2168, i64 -1
  %2213 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2176, i64 -1
  %2214 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2168, i64 -1
  %2215 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2176, i64 -1
  br label %2216

2216:                                             ; preds = %2216, %2210
  %2217 = phi i64 [ 0, %2210 ], [ %2251, %2216 ]
  %2218 = phi i64 [ %2211, %2210 ], [ %2252, %2216 ]
  %2219 = sub i64 0, %2217
  %2220 = sub i64 0, %2217
  %2221 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2212, i64 %2219
  %2222 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2213, i64 %2220
  %2223 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2222, i64 -1
  %2224 = bitcast %"class.sh::TIntermNode"** %2223 to <2 x i64>*
  %2225 = load <2 x i64>, <2 x i64>* %2224, align 8, !alias.scope !69
  %2226 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2222, i64 -2
  %2227 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2226, i64 -1
  %2228 = bitcast %"class.sh::TIntermNode"** %2227 to <2 x i64>*
  %2229 = load <2 x i64>, <2 x i64>* %2228, align 8, !alias.scope !69
  %2230 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2221, i64 -1
  %2231 = bitcast %"class.sh::TIntermNode"** %2230 to <2 x i64>*
  store <2 x i64> %2225, <2 x i64>* %2231, align 8, !alias.scope !72, !noalias !69
  %2232 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2221, i64 -2
  %2233 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2232, i64 -1
  %2234 = bitcast %"class.sh::TIntermNode"** %2233 to <2 x i64>*
  store <2 x i64> %2229, <2 x i64>* %2234, align 8, !alias.scope !72, !noalias !69
  %2235 = sub nuw nsw i64 -4, %2217
  %2236 = sub nuw nsw i64 -4, %2217
  %2237 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2214, i64 %2235
  %2238 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2215, i64 %2236
  %2239 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -1
  %2240 = bitcast %"class.sh::TIntermNode"** %2239 to <2 x i64>*
  %2241 = load <2 x i64>, <2 x i64>* %2240, align 8, !alias.scope !69
  %2242 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2238, i64 -2
  %2243 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2242, i64 -1
  %2244 = bitcast %"class.sh::TIntermNode"** %2243 to <2 x i64>*
  %2245 = load <2 x i64>, <2 x i64>* %2244, align 8, !alias.scope !69
  %2246 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2237, i64 -1
  %2247 = bitcast %"class.sh::TIntermNode"** %2246 to <2 x i64>*
  store <2 x i64> %2241, <2 x i64>* %2247, align 8, !alias.scope !72, !noalias !69
  %2248 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2237, i64 -2
  %2249 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2248, i64 -1
  %2250 = bitcast %"class.sh::TIntermNode"** %2249 to <2 x i64>*
  store <2 x i64> %2245, <2 x i64>* %2250, align 8, !alias.scope !72, !noalias !69
  %2251 = add i64 %2217, 8
  %2252 = add i64 %2218, -2
  %2253 = icmp eq i64 %2252, 0
  br i1 %2253, label %2254, label %2216, !llvm.loop !74

2254:                                             ; preds = %2216, %2199
  %2255 = phi i64 [ 0, %2199 ], [ %2251, %2216 ]
  %2256 = icmp eq i64 %2208, 0
  br i1 %2256, label %2276, label %2257

2257:                                             ; preds = %2254
  %2258 = sub i64 0, %2255
  %2259 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2168, i64 -1
  %2260 = sub i64 0, %2255
  %2261 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2176, i64 -1
  %2262 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2259, i64 %2258
  %2263 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2261, i64 %2260
  %2264 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2263, i64 -1
  %2265 = bitcast %"class.sh::TIntermNode"** %2264 to <2 x i64>*
  %2266 = load <2 x i64>, <2 x i64>* %2265, align 8, !alias.scope !69
  %2267 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2263, i64 -2
  %2268 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2267, i64 -1
  %2269 = bitcast %"class.sh::TIntermNode"** %2268 to <2 x i64>*
  %2270 = load <2 x i64>, <2 x i64>* %2269, align 8, !alias.scope !69
  %2271 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2262, i64 -1
  %2272 = bitcast %"class.sh::TIntermNode"** %2271 to <2 x i64>*
  store <2 x i64> %2266, <2 x i64>* %2272, align 8, !alias.scope !72, !noalias !69
  %2273 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2262, i64 -2
  %2274 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2273, i64 -1
  %2275 = bitcast %"class.sh::TIntermNode"** %2274 to <2 x i64>*
  store <2 x i64> %2270, <2 x i64>* %2275, align 8, !alias.scope !72, !noalias !69
  br label %2276

2276:                                             ; preds = %2254, %2257
  %2277 = icmp eq i64 %2183, %2200
  br i1 %2277, label %2348, label %2278

2278:                                             ; preds = %2276, %2185, %2178
  %2279 = phi %"class.sh::TIntermNode"** [ %2168, %2185 ], [ %2168, %2178 ], [ %2202, %2276 ]
  %2280 = phi %"class.sh::TIntermNode"** [ %2176, %2185 ], [ %2176, %2178 ], [ %2204, %2276 ]
  %2281 = getelementptr %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2280, i64 -1
  %2282 = ptrtoint %"class.sh::TIntermNode"** %2281 to i64
  %2283 = sub i64 %2282, %2175
  %2284 = lshr i64 %2283, 3
  %2285 = add nuw nsw i64 %2284, 1
  %2286 = and i64 %2285, 7
  %2287 = icmp eq i64 %2286, 0
  br i1 %2287, label %2299, label %2288

2288:                                             ; preds = %2278, %2288
  %2289 = phi %"class.sh::TIntermNode"** [ %2292, %2288 ], [ %2279, %2278 ]
  %2290 = phi %"class.sh::TIntermNode"** [ %2293, %2288 ], [ %2280, %2278 ]
  %2291 = phi i64 [ %2297, %2288 ], [ %2286, %2278 ]
  %2292 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2289, i64 -1
  %2293 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2290, i64 -1
  %2294 = bitcast %"class.sh::TIntermNode"** %2293 to i64*
  %2295 = load i64, i64* %2294, align 8
  %2296 = bitcast %"class.sh::TIntermNode"** %2292 to i64*
  store i64 %2295, i64* %2296, align 8
  %2297 = add i64 %2291, -1
  %2298 = icmp eq i64 %2297, 0
  br i1 %2298, label %2299, label %2288, !llvm.loop !75

2299:                                             ; preds = %2288, %2278
  %2300 = phi %"class.sh::TIntermNode"** [ undef, %2278 ], [ %2292, %2288 ]
  %2301 = phi %"class.sh::TIntermNode"** [ %2279, %2278 ], [ %2292, %2288 ]
  %2302 = phi %"class.sh::TIntermNode"** [ %2280, %2278 ], [ %2293, %2288 ]
  %2303 = icmp ult i64 %2283, 56
  br i1 %2303, label %2348, label %2304

2304:                                             ; preds = %2299, %2304
  %2305 = phi %"class.sh::TIntermNode"** [ %2342, %2304 ], [ %2301, %2299 ]
  %2306 = phi %"class.sh::TIntermNode"** [ %2343, %2304 ], [ %2302, %2299 ]
  %2307 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -1
  %2308 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2306, i64 -1
  %2309 = bitcast %"class.sh::TIntermNode"** %2308 to i64*
  %2310 = load i64, i64* %2309, align 8
  %2311 = bitcast %"class.sh::TIntermNode"** %2307 to i64*
  store i64 %2310, i64* %2311, align 8
  %2312 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -2
  %2313 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2306, i64 -2
  %2314 = bitcast %"class.sh::TIntermNode"** %2313 to i64*
  %2315 = load i64, i64* %2314, align 8
  %2316 = bitcast %"class.sh::TIntermNode"** %2312 to i64*
  store i64 %2315, i64* %2316, align 8
  %2317 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -3
  %2318 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2306, i64 -3
  %2319 = bitcast %"class.sh::TIntermNode"** %2318 to i64*
  %2320 = load i64, i64* %2319, align 8
  %2321 = bitcast %"class.sh::TIntermNode"** %2317 to i64*
  store i64 %2320, i64* %2321, align 8
  %2322 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -4
  %2323 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2306, i64 -4
  %2324 = bitcast %"class.sh::TIntermNode"** %2323 to i64*
  %2325 = load i64, i64* %2324, align 8
  %2326 = bitcast %"class.sh::TIntermNode"** %2322 to i64*
  store i64 %2325, i64* %2326, align 8
  %2327 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -5
  %2328 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2306, i64 -5
  %2329 = bitcast %"class.sh::TIntermNode"** %2328 to i64*
  %2330 = load i64, i64* %2329, align 8
  %2331 = bitcast %"class.sh::TIntermNode"** %2327 to i64*
  store i64 %2330, i64* %2331, align 8
  %2332 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -6
  %2333 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2306, i64 -6
  %2334 = bitcast %"class.sh::TIntermNode"** %2333 to i64*
  %2335 = load i64, i64* %2334, align 8
  %2336 = bitcast %"class.sh::TIntermNode"** %2332 to i64*
  store i64 %2335, i64* %2336, align 8
  %2337 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -7
  %2338 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2306, i64 -7
  %2339 = bitcast %"class.sh::TIntermNode"** %2338 to i64*
  %2340 = load i64, i64* %2339, align 8
  %2341 = bitcast %"class.sh::TIntermNode"** %2337 to i64*
  store i64 %2340, i64* %2341, align 8
  %2342 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2305, i64 -8
  %2343 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %2306, i64 -8
  %2344 = bitcast %"class.sh::TIntermNode"** %2343 to i64*
  %2345 = load i64, i64* %2344, align 8
  %2346 = bitcast %"class.sh::TIntermNode"** %2342 to i64*
  store i64 %2345, i64* %2346, align 8
  %2347 = icmp eq %"class.sh::TIntermNode"** %2343, %2174
  br i1 %2347, label %2348, label %2304, !llvm.loop !76

2348:                                             ; preds = %2299, %2304, %2276, %2165
  %2349 = phi %"class.sh::TIntermNode"** [ %2168, %2165 ], [ %2202, %2276 ], [ %2300, %2299 ], [ %2342, %2304 ]
  %2350 = ptrtoint %"class.sh::TIntermNode"** %2349 to i64
  store i64 %2350, i64* %1656, align 8
  store i64 %2173, i64* %1655, align 8
  store i64 %2170, i64* %1657, align 8
  br label %2351

2351:                                             ; preds = %2348, %2137
  %2352 = add nuw i64 %2118, 1
  %2353 = load i64, i64* %1647, align 8
  %2354 = load i64, i64* %1649, align 8
  %2355 = sub i64 %2353, %2354
  %2356 = ashr exact i64 %2355, 3
  %2357 = icmp ult i64 %2352, %2356
  br i1 %2357, label %2116, label %2358

2358:                                             ; preds = %2351, %2113, %1899, %1645
  %2359 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %54, align 8
  %2360 = call %"class.sh::TIntermTyped"* @_ZN2sh29CreateBuiltInFunctionCallNodeEPKcPNS_7TVectorIPNS_11TIntermNodeEEERKNS_12TSymbolTableEi(i8* %132, %"class.sh::TVector.31"* nonnull %9, %"class.sh::TSymbolTable"* dereferenceable(1720) %2359, i32 300) #6
  %2361 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %2360, i64 0, i32 0
  call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %53, %"class.sh::TIntermNode"* %2361, i32 1) #6
  %2362 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1144, align 8
  %2363 = icmp eq %"class.sh::TIntermNode"** %2362, null
  br i1 %2363, label %2367, label %2364

2364:                                             ; preds = %2358
  %2365 = ptrtoint %"class.sh::TIntermNode"** %2362 to i64
  %2366 = bitcast %"class.sh::TIntermNode"*** %1145 to i64*
  store i64 %2365, i64* %2366, align 8
  br label %2367

2367:                                             ; preds = %2364, %2358
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1143) #6
  %2368 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %134, align 8
  %2369 = icmp eq %"class.sh::TIntermNode"** %2368, null
  br i1 %2369, label %2372, label %2370

2370:                                             ; preds = %2367
  %2371 = ptrtoint %"class.sh::TIntermNode"** %2368 to i64
  store i64 %2371, i64* %142, align 8
  br label %2372

2372:                                             ; preds = %2370, %2367
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #6
  br label %2373

2373:                                             ; preds = %2372, %13, %3
  %2374 = phi i1 [ true, %3 ], [ false, %2372 ], [ true, %13 ]
  ret i1 %2374
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser10visitBlockENS_5VisitEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser31visitGlobalQualifierDeclarationENS_5VisitEPNS_33TIntermGlobalQualifierDeclarationE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermGlobalQualifierDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverser16visitDeclarationENS_5VisitEPNS_18TIntermDeclarationE(%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"*, i32, %"class.sh::TIntermDeclaration"*) unnamed_addr #4 align 2 {
  %4 = alloca %"class.sh::ImmutableString", align 8
  %5 = bitcast %"class.sh::TIntermDeclaration"* %2 to %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)***
  %6 = load %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)** %6, i64 27
  %8 = load %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.31"* (%"class.sh::TIntermDeclaration"*)** %7, align 8
  %9 = tail call %"class.sh::TVector.31"* %8(%"class.sh::TIntermDeclaration"* %2) #6
  %10 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %10, align 8
  %12 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %11, align 8
  %13 = bitcast %"class.sh::TIntermNode"* %12 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %14 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %14, i64 4
  %16 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %15, align 8
  %17 = tail call %"class.sh::TIntermTyped"* %16(%"class.sh::TIntermNode"* %12) #6
  %18 = bitcast %"class.sh::TIntermTyped"* %17 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %19 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, i64 31
  %21 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.sh::TType"* %21(%"class.sh::TIntermTyped"* %17) #6
  %23 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 6
  br i1 %25, label %26, label %170

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %22, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %170

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %17, i64 0, i32 0
  %32 = bitcast %"class.sh::TIntermTyped"* %17 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %33 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %33, i64 19
  %35 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %34, align 8
  %36 = tail call %"class.sh::TIntermSymbol"* %35(%"class.sh::TIntermNode"* %31) #6
  %37 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %36, i64 0, i32 1
  %38 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %37, align 8
  %39 = ptrtoint %"class.sh::TVariable"* %38 to i64
  %40 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 2
  %41 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %40, align 8
  %42 = icmp eq %"class.sh::TFunction"* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 5
  tail call fastcc void @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverser31declareCoordTranslationFunctionEbRKNS_15ImmutableStringEPPNS_9TFunctionEPPNS_25TIntermFunctionDefinitionE(%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i1 zeroext false, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_123kCoordTransformFuncNameE, %"class.sh::TFunction"** %40, %"class.sh::TIntermFunctionDefinition"** %44) #6
  br label %45

45:                                               ; preds = %43, %30
  %46 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 3
  %47 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %46, align 8
  %48 = icmp eq %"class.sh::TFunction"* %47, null
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 4
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 6
  tail call fastcc void @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverser31declareCoordTranslationFunctionEbRKNS_15ImmutableStringEPPNS_9TFunctionEPPNS_25TIntermFunctionDefinitionE(%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i1 zeroext true, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2sh12_GLOBAL__N_131kCoordTransformFuncNameImplicitE, %"class.sh::TFunction"** %46, %"class.sh::TIntermFunctionDefinition"** %54) #6
  br label %55

55:                                               ; preds = %53, %49, %45
  %56 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %57 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %56, i64 184) #6
  %58 = bitcast i8* %57 to %"class.sh::TType"*
  %59 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %38, i64 0, i32 1
  %60 = load %"class.sh::TType"*, %"class.sh::TType"** %59, align 8
  tail call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %58, %"class.sh::TType"* dereferenceable(184) %60) #6
  tail call void @_ZN2sh5TType12setBasicTypeENS_10TBasicTypeE(%"class.sh::TType"* %58, i32 11) #6
  %61 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %62 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %61, i64 40) #6
  %63 = bitcast i8* %62 to %"class.sh::TVariable"*
  %64 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0
  %65 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0, i32 8
  %66 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %65, align 8
  %67 = bitcast %"class.sh::ImmutableString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #6
  %68 = bitcast %"class.sh::TVariable"* %38 to %"class.sh::TSymbol"*
  %69 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %68) #6
  %70 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 0
  %71 = extractvalue { i8*, i64 } %69, 0
  store i8* %71, i8** %70, align 8
  %72 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 1
  %73 = extractvalue { i8*, i64 } %69, 1
  store i64 %73, i64* %72, align 8
  %74 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %38, i64 0, i32 0, i32 2
  %75 = load i8, i8* %74, align 4
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %63, %"class.sh::TSymbolTable"* %66, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %4, %"class.sh::TType"* %58, i8 zeroext %75, i8 zeroext 0) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #6
  %76 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %77 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %76, i64 56) #6
  %78 = bitcast i8* %77 to %"class.sh::TIntermDeclaration"*
  %79 = bitcast i8* %77 to i32 (...)***
  %80 = getelementptr inbounds i8, i8* %77, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #6
  %81 = getelementptr inbounds i8, i8* %77, i64 24
  %82 = bitcast i8* %81 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %77, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #6
  %84 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %85 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %84, i64 32) #6
  %86 = bitcast i8* %85 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %86, %"class.sh::TVariable"* %63) #6
  %87 = bitcast i8* %85 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %78, %"class.sh::TIntermTyped"* %87) #6
  %88 = bitcast i8* %77 to %"class.sh::TIntermNode"*
  call void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"* %64, %"class.sh::TIntermNode"* %88, i32 1) #6
  %89 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0
  %90 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %89, i64 0, i32 0
  %91 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %92 = add i64 %91, %39
  %93 = zext i64 %92 to i128
  %94 = mul nuw i128 %93, 11376068507788127593
  %95 = lshr i128 %94, 64
  %96 = xor i128 %95, %94
  %97 = trunc i128 %96 to i64
  %98 = add i64 %97, %39
  %99 = zext i64 %98 to i128
  %100 = mul nuw i128 %99, 11376068507788127593
  %101 = lshr i128 %100, 64
  %102 = xor i128 %101, %100
  %103 = trunc i128 %102 to i64
  %104 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %89, i64 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %107 = load i64, i64* %106, align 8
  %108 = lshr i64 %103, 7
  %109 = ptrtoint i8* %105 to i64
  %110 = lshr i64 %109, 12
  %111 = xor i64 %108, %110
  %112 = trunc i128 %102 to i8
  %113 = and i8 %112, 127
  %114 = insertelement <16 x i8> undef, i8 %113, i32 0
  %115 = shufflevector <16 x i8> %114, <16 x i8> undef, <16 x i32> zeroinitializer
  %116 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %117

117:                                              ; preds = %147, %55
  %118 = phi i64 [ %111, %55 ], [ %149, %147 ]
  %119 = phi i64 [ 0, %55 ], [ %148, %147 ]
  %120 = and i64 %118, %107
  %121 = getelementptr inbounds i8, i8* %105, i64 %120
  %122 = bitcast i8* %121 to <16 x i8>*
  %123 = load <16 x i8>, <16 x i8>* %122, align 1
  %124 = icmp eq <16 x i8> %115, %123
  %125 = bitcast <16 x i1> %124 to i16
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %117
  %128 = zext i16 %125 to i32
  %129 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %116, align 8
  br label %130

130:                                              ; preds = %139, %127
  %131 = phi i32 [ %128, %127 ], [ %141, %139 ]
  %132 = call i32 @llvm.cttz.i32(i32 %131, i1 false) #6, !range !77
  %133 = zext i32 %132 to i64
  %134 = add i64 %120, %133
  %135 = and i64 %134, %107
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %129, i64 %135, i32 0, i32 0
  %137 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %136, align 8
  %138 = icmp eq %"class.sh::TVariable"* %137, %38
  br i1 %138, label %158, label %139, !prof !78

139:                                              ; preds = %130
  %140 = add i32 %131, -1
  %141 = and i32 %140, %131
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %130

143:                                              ; preds = %139, %117
  %144 = icmp eq <16 x i8> %123, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %145 = bitcast <16 x i1> %144 to i16
  %146 = icmp eq i16 %145, 0
  br i1 %146, label %147, label %150, !prof !79

147:                                              ; preds = %143
  %148 = add i64 %119, 16
  %149 = add i64 %148, %120
  br label %117

150:                                              ; preds = %143
  %151 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %90, i64 %103) #6
  %152 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %116, align 8, !noalias !80
  %153 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %152, i64 %151
  %154 = bitcast %"union.absl::container_internal::map_slot_type"* %153 to i64*
  store i64 %39, i64* %154, align 8, !noalias !80
  %155 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %152, i64 %151, i32 0, i32 1
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %155, align 8, !noalias !80
  %156 = load i8*, i8** %104, align 8, !noalias !80
  %157 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %116, align 8, !noalias !80
  br label %158

158:                                              ; preds = %130, %150
  %159 = phi %"union.absl::container_internal::map_slot_type"* [ %157, %150 ], [ %129, %130 ]
  %160 = phi i8* [ %156, %150 ], [ %105, %130 ]
  %161 = phi i64 [ %151, %150 ], [ %135, %130 ]
  %162 = getelementptr inbounds i8, i8* %160, i64 %161
  %163 = icmp ne i8* %162, null
  call void @llvm.assume(i1 %163) #6, !noalias !80
  %164 = load i8, i8* %162, align 1
  %165 = icmp sgt i8 %164, -1
  br i1 %165, label %167, label %166, !prof !78

166:                                              ; preds = %158
  call void @llvm.trap() #6
  unreachable

167:                                              ; preds = %158
  %168 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %159, i64 %161, i32 0, i32 1
  %169 = bitcast %"class.sh::TVariable"** %168 to i8**
  store i8* %62, i8** %169, align 8
  br label %170

170:                                              ; preds = %26, %3, %167
  %171 = phi i1 [ false, %167 ], [ true, %3 ], [ true, %26 ]
  ret i1 %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser9visitLoopENS_5VisitEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh16TIntermTraverser11visitBranchENS_5VisitEPNS_13TIntermBranchE(%"class.sh::TIntermTraverser"*, i32, %"class.sh::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16TIntermTraverser26visitPreprocessorDirectiveEPNS_28TIntermPreprocessorDirectiveE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermPreprocessorDirective"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2sh16TIntermTraverser14traverseBinaryEPNS_13TIntermBinaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBinary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseUnaryEPNS_12TIntermUnaryE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermUnary"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser26traverseFunctionDefinitionEPNS_25TIntermFunctionDefinitionE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermFunctionDefinition"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser17traverseAggregateEPNS_16TIntermAggregateE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermAggregate"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser13traverseBlockEPNS_12TIntermBlockE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser12traverseLoopEPNS_11TIntermLoopE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermLoop"*) unnamed_addr #2

declare { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"*) local_unnamed_addr #2

declare %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"*, %"class.sh::TType"*) local_unnamed_addr #2

declare void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"*, %"class.sh::TVariable"*) unnamed_addr #2

declare %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #2

declare %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"*) local_unnamed_addr #2

declare %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #2

declare %"class.sh::TIntermTyped"* @_ZN2sh29CreateBuiltInFunctionCallNodeEPKcPNS_7TVectorIPNS_11TIntermNodeEEERKNS_12TSymbolTableEi(i8*, %"class.sh::TVector.31"*, %"class.sh::TSymbolTable"* dereferenceable(1720), i32) local_unnamed_addr #2

declare void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser29insertStatementsInParentBlockERKNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TIntermTraverser"*, %"class.sh::TVector.31"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2sh16TIntermTraverser16queueReplacementEPNS_11TIntermNodeENS0_12OriginalNodeE(%"class.sh::TIntermTraverser"*, %"class.sh::TIntermNode"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8*, i8*) local_unnamed_addr #2

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #2

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80), %"class.sh::TVector.31"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.sh::TVariable"** @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE2atIS6_S7_EEDTclsrT0_5valueclL_ZNSC_9addressofISG_EEPT_RSM_EclL_ZNSC_7declvalIRSG_EEDTclsr3std3__1E9__declvalISM_ELi0EEEvEEEEERKSM_(%"class.absl::container_internal::raw_hash_map"*, %"class.sh::TVariable"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.sh::TVariable"** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %6 = add i64 %5, %4
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = add i64 %4, %11
  %13 = zext i64 %12 to i128
  %14 = mul nuw i128 %13, 11376068507788127593
  %15 = lshr i128 %14, 64
  %16 = xor i128 %15, %14
  %17 = trunc i128 %16 to i64
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %0, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %0, i64 0, i32 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = lshr i64 %17, 7
  %23 = ptrtoint i8* %19 to i64
  %24 = lshr i64 %23, 12
  %25 = xor i64 %22, %24
  %26 = trunc i128 %16 to i8
  %27 = and i8 %26, 127
  %28 = insertelement <16 x i8> undef, i8 %27, i32 0
  %29 = shufflevector <16 x i8> %28, <16 x i8> undef, <16 x i32> zeroinitializer
  %30 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %0, i64 0, i32 0, i32 1
  %31 = inttoptr i64 %4 to %"class.sh::TVariable"*
  br label %32

32:                                               ; preds = %62, %2
  %33 = phi i64 [ %25, %2 ], [ %64, %62 ]
  %34 = phi i64 [ 0, %2 ], [ %63, %62 ]
  %35 = and i64 %33, %21
  %36 = getelementptr inbounds i8, i8* %19, i64 %35
  %37 = bitcast i8* %36 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = icmp eq <16 x i8> %29, %38
  %40 = bitcast <16 x i1> %39 to i16
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %32
  %43 = zext i16 %40 to i32
  %44 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %30, align 8
  br label %45

45:                                               ; preds = %54, %42
  %46 = phi i32 [ %43, %42 ], [ %56, %54 ]
  %47 = tail call i32 @llvm.cttz.i32(i32 %46, i1 false) #6, !range !77
  %48 = zext i32 %47 to i64
  %49 = add i64 %35, %48
  %50 = and i64 %49, %21
  %51 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %44, i64 %50, i32 0, i32 0
  %52 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %51, align 8
  %53 = icmp eq %"class.sh::TVariable"* %52, %31
  br i1 %53, label %65, label %54, !prof !78

54:                                               ; preds = %45
  %55 = add i32 %46, -1
  %56 = and i32 %55, %46
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %45

58:                                               ; preds = %54, %32
  %59 = icmp eq <16 x i8> %38, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %60 = bitcast <16 x i1> %59 to i16
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %62, label %71, !prof !79

62:                                               ; preds = %58
  %63 = add i64 %34, 16
  %64 = add i64 %63, %35
  br label %32

65:                                               ; preds = %45
  %66 = getelementptr inbounds i8, i8* %19, i64 %50
  %67 = icmp ne i8* %66, null
  tail call void @llvm.assume(i1 %67) #6
  %68 = load i8, i8* %66, align 1
  %69 = icmp sgt i8 %68, -1
  br i1 %69, label %72, label %70, !prof !78

70:                                               ; preds = %65
  tail call void @llvm.trap() #6
  unreachable

71:                                               ; preds = %58
  tail call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0)) #14
  unreachable

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %44, i64 %50, i32 0, i32 1
  ret %"class.sh::TVariable"** %73
}

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_140RewriteCubeMapSamplersAs2DArrayTraverser31declareCoordTranslationFunctionEbRKNS_15ImmutableStringEPPNS_9TFunctionEPPNS_25TIntermFunctionDefinitionE(%"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* readonly, i1 zeroext, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TFunction"** nocapture, %"class.sh::TIntermFunctionDefinition"** nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.sh::TVector.170", align 8
  %7 = alloca %"class.sh::TVector.170", align 8
  %8 = alloca %"class.sh::TVector.170", align 8
  %9 = alloca %"class.sh::TVector.170", align 8
  %10 = alloca %"class.sh::TVector.170", align 8
  %11 = alloca %"class.sh::TVector.170", align 8
  %12 = alloca %"class.sh::ImmutableString", align 8
  %13 = alloca %"class.sh::ImmutableString", align 8
  %14 = alloca %"class.sh::ImmutableString", align 8
  %15 = alloca %"class.sh::ImmutableString", align 8
  %16 = alloca %"class.sh::ImmutableString", align 8
  %17 = alloca %"class.sh::TVector.170", align 8
  %18 = alloca %"class.sh::TVector.170", align 8
  %19 = alloca %"class.sh::TVector.170", align 8
  %20 = alloca %"class.sh::TVector.31", align 8
  %21 = alloca %"class.sh::TVector.31", align 8
  %22 = alloca %"class.sh::TVector.31", align 8
  %23 = alloca %"class.sh::TVector.31", align 8
  %24 = alloca %"class.sh::TVector.31", align 8
  %25 = alloca %"class.sh::TVector.31", align 8
  %26 = alloca %"class.sh::TVector.170", align 8
  %27 = alloca %"class.sh::TVector.170", align 8
  %28 = alloca %"class.sh::TVector.170", align 8
  %29 = alloca %"class.sh::TVector.170", align 8
  %30 = alloca %"class.sh::TVector.170", align 8
  %31 = alloca %"class.sh::TVector.170", align 8
  %32 = alloca %"class.sh::TVector.31", align 8
  %33 = alloca %"class.sh::TVector.31", align 8
  %34 = alloca %"class.sh::TVector.31", align 8
  %35 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %36 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %35, i64 40) #6
  %37 = getelementptr inbounds %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser", %"class.sh::(anonymous namespace)::RewriteCubeMapSamplersAs2DArrayTraverser"* %0, i64 0, i32 0, i32 8
  %38 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %39 = bitcast %"class.sh::ImmutableString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #6
  %40 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %12, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8** %40, align 8
  %41 = bitcast i8* %36 to %"class.sh::TVariable"*
  %42 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %12, i64 0, i32 1
  store i64 1, i64* %42, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %41, %"class.sh::TSymbolTable"* %38, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %12, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*), i8 zeroext 2, i8 zeroext 0) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #6
  %43 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %44 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %43, i64 40) #6
  %45 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %46 = bitcast %"class.sh::ImmutableString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #6
  %47 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %13, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %47, align 8
  %48 = bitcast i8* %44 to %"class.sh::TVariable"*
  %49 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %13, i64 0, i32 1
  store i64 4, i64* %49, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %48, %"class.sh::TSymbolTable"* %45, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %13, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*), i8 zeroext 2, i8 zeroext 0) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #6
  %50 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %51 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %50, i64 40) #6
  %52 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %53 = bitcast %"class.sh::ImmutableString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #6
  %54 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %14, i64 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i8** %54, align 8
  %55 = bitcast i8* %51 to %"class.sh::TVariable"*
  %56 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %14, i64 0, i32 1
  store i64 4, i64* %56, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %55, %"class.sh::TSymbolTable"* %52, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %14, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*), i8 zeroext 2, i8 zeroext 0) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #6
  %57 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %58 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %57, i64 184) #6
  %59 = bitcast i8* %58 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %59, %"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh2ELh1EEE to %"class.sh::TType"*)) #6
  %60 = getelementptr inbounds i8, i8* %58, i64 8
  %61 = bitcast i8* %60 to i32*
  store i32 15, i32* %61, align 8
  %62 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %63 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %62, i64 40) #6
  %64 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %65 = bitcast %"class.sh::ImmutableString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #6
  %66 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i8** %66, align 8
  %67 = bitcast i8* %63 to %"class.sh::TVariable"*
  %68 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %15, i64 0, i32 1
  store i64 5, i64* %68, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %67, %"class.sh::TSymbolTable"* %64, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %15, %"class.sh::TType"* %59, i8 zeroext 2, i8 zeroext 0) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #6
  %69 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %70 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %69, i64 40) #6
  %71 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %72 = bitcast %"class.sh::ImmutableString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #6
  %73 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %16, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i8** %73, align 8
  %74 = bitcast i8* %70 to %"class.sh::TVariable"*
  %75 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %16, i64 0, i32 1
  store i64 5, i64* %75, align 8
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %74, %"class.sh::TSymbolTable"* %71, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %16, %"class.sh::TType"* %59, i8 zeroext 2, i8 zeroext 0) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #6
  %76 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %77 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %76, i64 32) #6
  %78 = bitcast i8* %77 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %78, %"class.sh::TVariable"* %41) #6
  %79 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %80 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %79, i64 32) #6
  %81 = bitcast i8* %80 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %81, %"class.sh::TVariable"* %48) #6
  %82 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %83 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %82, i64 32) #6
  %84 = bitcast i8* %83 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %84, %"class.sh::TVariable"* %55) #6
  %85 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %86 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %85, i64 32) #6
  %87 = bitcast i8* %86 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %87, %"class.sh::TVariable"* %67) #6
  %88 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %89 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %88, i64 32) #6
  %90 = bitcast i8* %89 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %90, %"class.sh::TVariable"* %74) #6
  %91 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %92 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %91, i64 64) #6
  %93 = bitcast i8* %92 to i32 (...)***
  %94 = getelementptr inbounds i8, i8* %92, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #6
  %95 = getelementptr inbounds i8, i8* %92, i64 24
  %96 = bitcast i8* %95 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds i8, i8* %92, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 25, i1 false) #6
  %98 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %99 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %98, i64 248) #6
  %100 = bitcast i8* %77 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %101 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %100, align 8
  %102 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %101, i64 23
  %103 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %102, align 8
  %104 = call %"class.sh::TIntermTyped"* %103(%"class.sh::TIntermSymbol"* %78) #6
  %105 = bitcast %"class.sh::TVector.170"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #6
  %106 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %107 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %106, i64 4) #6
  %108 = bitcast i8* %107 to i32*
  %109 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %17, i64 0, i32 0, i32 0, i32 1
  %110 = bitcast %"class.sh::TVector.170"* %17 to i8**
  store i8* %107, i8** %110, align 8
  %111 = getelementptr inbounds i8, i8* %107, i64 4
  %112 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %17, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast i32** %112 to i8**
  store i8* %111, i8** %113, align 8
  store i32 0, i32* %108, align 4
  %114 = getelementptr inbounds i8, i8* %107, i64 4
  %115 = bitcast i8* %92 to %"class.sh::TIntermBlock"*
  %116 = bitcast i8* %99 to %"class.sh::TIntermSwizzle"*
  %117 = bitcast i32** %109 to i64*
  %118 = ptrtoint i8* %114 to i64
  store i64 %118, i64* %117, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %116, %"class.sh::TIntermTyped"* %104, %"class.sh::TVector.170"* nonnull dereferenceable(24) %17) #6
  %119 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %17, i64 0, i32 0, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %5
  %123 = ptrtoint i32* %120 to i64
  store i64 %123, i64* %117, align 8
  br label %124

124:                                              ; preds = %5, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #6
  %125 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %126 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %125, i64 248) #6
  %127 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %100, align 8
  %128 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %127, i64 23
  %129 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %128, align 8
  %130 = call %"class.sh::TIntermTyped"* %129(%"class.sh::TIntermSymbol"* %78) #6
  %131 = bitcast %"class.sh::TVector.170"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 0, i64 24, i1 false) #6
  %132 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %133 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %132, i64 4) #6
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %18, i64 0, i32 0, i32 0, i32 1
  %136 = bitcast %"class.sh::TVector.170"* %18 to i8**
  store i8* %133, i8** %136, align 8
  %137 = getelementptr inbounds i8, i8* %133, i64 4
  %138 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %18, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast i32** %138 to i8**
  store i8* %137, i8** %139, align 8
  store i32 1, i32* %134, align 4
  %140 = getelementptr inbounds i8, i8* %133, i64 4
  %141 = bitcast i8* %126 to %"class.sh::TIntermSwizzle"*
  %142 = bitcast i32** %135 to i64*
  %143 = ptrtoint i8* %140 to i64
  store i64 %143, i64* %142, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %141, %"class.sh::TIntermTyped"* %130, %"class.sh::TVector.170"* nonnull dereferenceable(24) %18) #6
  %144 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %18, i64 0, i32 0, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = icmp eq i32* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %124
  %148 = ptrtoint i32* %145 to i64
  store i64 %148, i64* %142, align 8
  br label %149

149:                                              ; preds = %124, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #6
  %150 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %151 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %150, i64 248) #6
  %152 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %100, align 8
  %153 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %152, i64 23
  %154 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %153, align 8
  %155 = call %"class.sh::TIntermTyped"* %154(%"class.sh::TIntermSymbol"* %78) #6
  %156 = bitcast %"class.sh::TVector.170"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 0, i64 24, i1 false) #6
  %157 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %158 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %157, i64 4) #6
  %159 = bitcast i8* %158 to i32*
  %160 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %19, i64 0, i32 0, i32 0, i32 1
  %161 = bitcast %"class.sh::TVector.170"* %19 to i8**
  store i8* %158, i8** %161, align 8
  %162 = getelementptr inbounds i8, i8* %158, i64 4
  %163 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %19, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %164 = bitcast i32** %163 to i8**
  store i8* %162, i8** %164, align 8
  store i32 2, i32* %159, align 4
  %165 = getelementptr inbounds i8, i8* %158, i64 4
  %166 = bitcast i8* %151 to %"class.sh::TIntermSwizzle"*
  %167 = bitcast i32** %160 to i64*
  %168 = ptrtoint i8* %165 to i64
  store i64 %168, i64* %167, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %166, %"class.sh::TIntermTyped"* %155, %"class.sh::TVector.170"* nonnull dereferenceable(24) %19) #6
  %169 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %19, i64 0, i32 0, i32 0, i32 0
  %170 = load i32*, i32** %169, align 8
  %171 = icmp eq i32* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %149
  %173 = ptrtoint i32* %170 to i64
  store i64 %173, i64* %167, align 8
  br label %174

174:                                              ; preds = %149, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #6
  %175 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %176 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %175, i64 240) #6
  %177 = bitcast i8* %176 to %"class.sh::TIntermBinary"*
  %178 = bitcast i8* %99 to %"class.sh::TIntermTyped"*
  %179 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %177, i8 zeroext 20, %"class.sh::TIntermTyped"* %178, %"class.sh::TIntermTyped"* %179) #6
  %180 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %181 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %180, i64 240) #6
  %182 = bitcast i8* %181 to %"class.sh::TIntermBinary"*
  %183 = bitcast i8* %126 to %"class.sh::TIntermTyped"*
  %184 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %182, i8 zeroext 20, %"class.sh::TIntermTyped"* %183, %"class.sh::TIntermTyped"* %184) #6
  %185 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %186 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %185, i64 240) #6
  %187 = bitcast i8* %186 to %"class.sh::TIntermBinary"*
  %188 = bitcast i8* %151 to %"class.sh::TIntermTyped"*
  %189 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %187, i8 zeroext 20, %"class.sh::TIntermTyped"* %188, %"class.sh::TIntermTyped"* %189) #6
  %190 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %191 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %190, i64 32) #6
  %192 = bitcast i8* %191 to %"class.sh::TIntermSymbol"*
  %193 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %194 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %193, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %192, %"class.sh::TVariable"* %194) #6
  %195 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %196 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %195, i64 32) #6
  %197 = bitcast i8* %196 to %"class.sh::TIntermSymbol"*
  %198 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %199 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %198, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %197, %"class.sh::TVariable"* %199) #6
  %200 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %201 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %200, i64 32) #6
  %202 = bitcast i8* %201 to %"class.sh::TIntermSymbol"*
  %203 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %204 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %203, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %202, %"class.sh::TVariable"* %204) #6
  %205 = getelementptr inbounds i8, i8* %191, i64 24
  %206 = bitcast i8* %205 to %"class.sh::TVariable"**
  %207 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %206, align 8
  %208 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %209 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %208, i64 240) #6
  %210 = bitcast i8* %209 to %"class.sh::TIntermUnary"*
  %211 = bitcast i8* %99 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)***
  %212 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*** %211, align 8
  %213 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)** %212, i64 23
  %214 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)** %213, align 8
  %215 = call %"class.sh::TIntermTyped"* %214(%"class.sh::TIntermSwizzle"* %116) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %210, i8 zeroext 69, %"class.sh::TIntermTyped"* %215, %"class.sh::TFunction"* null) #6
  %216 = bitcast i8* %209 to %"class.sh::TIntermTyped"*
  %217 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %207, %"class.sh::TIntermTyped"* %216) #6
  %218 = getelementptr inbounds i8, i8* %196, i64 24
  %219 = bitcast i8* %218 to %"class.sh::TVariable"**
  %220 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %219, align 8
  %221 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %222 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %221, i64 240) #6
  %223 = bitcast i8* %222 to %"class.sh::TIntermUnary"*
  %224 = bitcast i8* %126 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)***
  %225 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*** %224, align 8
  %226 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)** %225, i64 23
  %227 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)** %226, align 8
  %228 = call %"class.sh::TIntermTyped"* %227(%"class.sh::TIntermSwizzle"* %141) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %223, i8 zeroext 69, %"class.sh::TIntermTyped"* %228, %"class.sh::TFunction"* null) #6
  %229 = bitcast i8* %222 to %"class.sh::TIntermTyped"*
  %230 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %220, %"class.sh::TIntermTyped"* %229) #6
  %231 = getelementptr inbounds i8, i8* %201, i64 24
  %232 = bitcast i8* %231 to %"class.sh::TVariable"**
  %233 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %232, align 8
  %234 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %235 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %234, i64 240) #6
  %236 = bitcast i8* %235 to %"class.sh::TIntermUnary"*
  %237 = bitcast i8* %151 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)***
  %238 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*** %237, align 8
  %239 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)** %238, i64 23
  %240 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*)** %239, align 8
  %241 = call %"class.sh::TIntermTyped"* %240(%"class.sh::TIntermSwizzle"* %166) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %236, i8 zeroext 69, %"class.sh::TIntermTyped"* %241, %"class.sh::TFunction"* null) #6
  %242 = bitcast i8* %235 to %"class.sh::TIntermTyped"*
  %243 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %233, %"class.sh::TIntermTyped"* %242) #6
  %244 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %217, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %244) #6
  %245 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %230, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %245) #6
  %246 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %243, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %246) #6
  %247 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %248 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %247, i64 32) #6
  %249 = bitcast i8* %248 to %"class.sh::TIntermSymbol"*
  %250 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %251 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %250, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh3EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %249, %"class.sh::TVariable"* %251) #6
  %252 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %253 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %252, i64 240) #6
  %254 = bitcast i8* %253 to %"class.sh::TIntermBinary"*
  %255 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 1.000000e+00) #6
  %256 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %255, i64 0, i32 0, i32 0
  %257 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %100, align 8
  %258 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %257, i64 23
  %259 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %258, align 8
  %260 = call %"class.sh::TIntermTyped"* %259(%"class.sh::TIntermSymbol"* %78) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %254, i8 zeroext 16, %"class.sh::TIntermTyped"* %256, %"class.sh::TIntermTyped"* %260) #6
  %261 = bitcast i8* %253 to %"class.sh::TIntermTyped"*
  %262 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %263 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %262, i64 32) #6
  %264 = bitcast i8* %263 to %"class.sh::TIntermSymbol"*
  %265 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %266 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %265, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %264, %"class.sh::TVariable"* %266) #6
  %267 = getelementptr inbounds i8, i8* %263, i64 24
  %268 = bitcast i8* %267 to %"class.sh::TVariable"**
  %269 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %268, align 8
  %270 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %269, %"class.sh::TIntermTyped"* %261) #6
  %271 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %270, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %271) #6
  %272 = bitcast %"class.sh::TVector.31"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #6
  %273 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %20, i64 0, i32 0, i32 0, i32 0
  %274 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %20, i64 0, i32 0, i32 0, i32 1
  %275 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %20, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %276 = bitcast %"class.sh::TVector.31"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %276, i8 -86, i64 24, i1 false)
  %277 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %100, align 8
  %278 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %277, i64 23
  %279 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %278, align 8
  %280 = call %"class.sh::TIntermTyped"* %279(%"class.sh::TIntermSymbol"* %78) #6
  %281 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %282 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %281, i64 240) #6
  %283 = bitcast i8* %282 to %"class.sh::TIntermBinary"*
  %284 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %285 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %284, i64 0, i32 0, i32 0
  %286 = bitcast i8* %263 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %287 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %286, align 8
  %288 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %287, i64 23
  %289 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %288, align 8
  %290 = call %"class.sh::TIntermTyped"* %289(%"class.sh::TIntermSymbol"* %264) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %283, i8 zeroext 31, %"class.sh::TIntermTyped"* %285, %"class.sh::TIntermTyped"* %290) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %272, i8 0, i64 24, i1 false) #6
  %291 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %292 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %291, i64 16) #6
  %293 = bitcast %"class.sh::TVector.31"* %20 to i8**
  store i8* %292, i8** %293, align 8
  %294 = getelementptr inbounds i8, i8* %292, i64 16
  %295 = bitcast %"class.sh::TIntermNode"*** %275 to i8**
  store i8* %294, i8** %295, align 8
  %296 = bitcast i8* %292 to i64*
  %297 = ptrtoint %"class.sh::TIntermTyped"* %280 to i64
  store i64 %297, i64* %296, align 8
  %298 = getelementptr inbounds i8, i8* %292, i64 8
  %299 = bitcast i8* %298 to i64*
  %300 = ptrtoint i8* %282 to i64
  store i64 %300, i64* %299, align 8
  %301 = getelementptr inbounds i8, i8* %292, i64 16
  %302 = bitcast %"class.sh::TIntermNode"*** %274 to i64*
  %303 = ptrtoint i8* %301 to i64
  store i64 %303, i64* %302, align 8
  %304 = getelementptr inbounds i8, i8* %248, i64 24
  %305 = bitcast i8* %304 to %"class.sh::TVariable"**
  %306 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %305, align 8
  %307 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %308 = call %"class.sh::TIntermTyped"* @_ZN2sh29CreateBuiltInFunctionCallNodeEPKcPNS_7TVectorIPNS_11TIntermNodeEEERKNS_12TSymbolTableEi(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), %"class.sh::TVector.31"* nonnull %20, %"class.sh::TSymbolTable"* dereferenceable(1720) %307, i32 300) #6
  %309 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %306, %"class.sh::TIntermTyped"* %308) #6
  %310 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %309, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %310) #6
  br i1 %1, label %311, label %463

311:                                              ; preds = %174
  %312 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %313 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %312, i64 32) #6
  %314 = bitcast i8* %313 to %"class.sh::TIntermSymbol"*
  %315 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %316 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %315, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %314, %"class.sh::TVariable"* %316) #6
  %317 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %318 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %317, i64 32) #6
  %319 = bitcast i8* %318 to %"class.sh::TIntermSymbol"*
  %320 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %321 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %320, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %319, %"class.sh::TVariable"* %321) #6
  %322 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %323 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %322, i64 32) #6
  %324 = bitcast i8* %323 to %"class.sh::TIntermSymbol"*
  %325 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %326 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %325, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %324, %"class.sh::TVariable"* %326) #6
  %327 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %328 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %327, i64 32) #6
  %329 = bitcast i8* %328 to %"class.sh::TIntermSymbol"*
  %330 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %331 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %330, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %329, %"class.sh::TVariable"* %331) #6
  %332 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %333 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %332, i64 32) #6
  %334 = bitcast i8* %333 to %"class.sh::TIntermSymbol"*
  %335 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %336 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %335, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %334, %"class.sh::TVariable"* %336) #6
  %337 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %338 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %337, i64 32) #6
  %339 = bitcast i8* %338 to %"class.sh::TIntermSymbol"*
  %340 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %341 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %340, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %339, %"class.sh::TVariable"* %341) #6
  %342 = getelementptr inbounds i8, i8* %313, i64 24
  %343 = bitcast i8* %342 to %"class.sh::TVariable"**
  %344 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %343, align 8
  %345 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %346 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %345, i64 240) #6
  %347 = bitcast i8* %346 to %"class.sh::TIntermUnary"*
  %348 = bitcast i8* %248 to %"class.sh::TIntermTyped"*
  %349 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %350 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %349, i64 240) #6
  %351 = bitcast i8* %350 to %"class.sh::TIntermBinary"*
  %352 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 0) #6
  %353 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %352, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %351, i8 zeroext 44, %"class.sh::TIntermTyped"* %348, %"class.sh::TIntermTyped"* %353) #6
  %354 = bitcast i8* %350 to %"class.sh::TIntermTyped"*
  %355 = bitcast i8* %350 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %356 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %355, align 8
  %357 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %356, i64 23
  %358 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %357, align 8
  %359 = call %"class.sh::TIntermTyped"* %358(%"class.sh::TIntermTyped"* %354) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %347, i8 zeroext 112, %"class.sh::TIntermTyped"* %359, %"class.sh::TFunction"* null) #6
  %360 = bitcast i8* %346 to %"class.sh::TIntermTyped"*
  %361 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %344, %"class.sh::TIntermTyped"* %360) #6
  %362 = getelementptr inbounds i8, i8* %318, i64 24
  %363 = bitcast i8* %362 to %"class.sh::TVariable"**
  %364 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %363, align 8
  %365 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %366 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %365, i64 240) #6
  %367 = bitcast i8* %366 to %"class.sh::TIntermUnary"*
  %368 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %369 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %368, i64 240) #6
  %370 = bitcast i8* %369 to %"class.sh::TIntermBinary"*
  %371 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 1) #6
  %372 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %371, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %370, i8 zeroext 44, %"class.sh::TIntermTyped"* %348, %"class.sh::TIntermTyped"* %372) #6
  %373 = bitcast i8* %369 to %"class.sh::TIntermTyped"*
  %374 = bitcast i8* %369 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %375 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %374, align 8
  %376 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %375, i64 23
  %377 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %376, align 8
  %378 = call %"class.sh::TIntermTyped"* %377(%"class.sh::TIntermTyped"* %373) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %367, i8 zeroext 112, %"class.sh::TIntermTyped"* %378, %"class.sh::TFunction"* null) #6
  %379 = bitcast i8* %366 to %"class.sh::TIntermTyped"*
  %380 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %364, %"class.sh::TIntermTyped"* %379) #6
  %381 = getelementptr inbounds i8, i8* %323, i64 24
  %382 = bitcast i8* %381 to %"class.sh::TVariable"**
  %383 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %382, align 8
  %384 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %385 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %384, i64 240) #6
  %386 = bitcast i8* %385 to %"class.sh::TIntermUnary"*
  %387 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %388 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %387, i64 240) #6
  %389 = bitcast i8* %388 to %"class.sh::TIntermBinary"*
  %390 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 2) #6
  %391 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %390, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %389, i8 zeroext 44, %"class.sh::TIntermTyped"* %348, %"class.sh::TIntermTyped"* %391) #6
  %392 = bitcast i8* %388 to %"class.sh::TIntermTyped"*
  %393 = bitcast i8* %388 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %394 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %393, align 8
  %395 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %394, i64 23
  %396 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %395, align 8
  %397 = call %"class.sh::TIntermTyped"* %396(%"class.sh::TIntermTyped"* %392) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %386, i8 zeroext 112, %"class.sh::TIntermTyped"* %397, %"class.sh::TFunction"* null) #6
  %398 = bitcast i8* %385 to %"class.sh::TIntermTyped"*
  %399 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %383, %"class.sh::TIntermTyped"* %398) #6
  %400 = getelementptr inbounds i8, i8* %328, i64 24
  %401 = bitcast i8* %400 to %"class.sh::TVariable"**
  %402 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %401, align 8
  %403 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %404 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %403, i64 240) #6
  %405 = bitcast i8* %404 to %"class.sh::TIntermUnary"*
  %406 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %407 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %406, i64 240) #6
  %408 = bitcast i8* %407 to %"class.sh::TIntermBinary"*
  %409 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 0) #6
  %410 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %409, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %408, i8 zeroext 44, %"class.sh::TIntermTyped"* %348, %"class.sh::TIntermTyped"* %410) #6
  %411 = bitcast i8* %407 to %"class.sh::TIntermTyped"*
  %412 = bitcast i8* %407 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %413 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %412, align 8
  %414 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %413, i64 23
  %415 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %414, align 8
  %416 = call %"class.sh::TIntermTyped"* %415(%"class.sh::TIntermTyped"* %411) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %405, i8 zeroext 113, %"class.sh::TIntermTyped"* %416, %"class.sh::TFunction"* null) #6
  %417 = bitcast i8* %404 to %"class.sh::TIntermTyped"*
  %418 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %402, %"class.sh::TIntermTyped"* %417) #6
  %419 = getelementptr inbounds i8, i8* %333, i64 24
  %420 = bitcast i8* %419 to %"class.sh::TVariable"**
  %421 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %420, align 8
  %422 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %423 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %422, i64 240) #6
  %424 = bitcast i8* %423 to %"class.sh::TIntermUnary"*
  %425 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %426 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %425, i64 240) #6
  %427 = bitcast i8* %426 to %"class.sh::TIntermBinary"*
  %428 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 1) #6
  %429 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %428, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %427, i8 zeroext 44, %"class.sh::TIntermTyped"* %348, %"class.sh::TIntermTyped"* %429) #6
  %430 = bitcast i8* %426 to %"class.sh::TIntermTyped"*
  %431 = bitcast i8* %426 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %432 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %431, align 8
  %433 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %432, i64 23
  %434 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %433, align 8
  %435 = call %"class.sh::TIntermTyped"* %434(%"class.sh::TIntermTyped"* %430) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %424, i8 zeroext 113, %"class.sh::TIntermTyped"* %435, %"class.sh::TFunction"* null) #6
  %436 = bitcast i8* %423 to %"class.sh::TIntermTyped"*
  %437 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %421, %"class.sh::TIntermTyped"* %436) #6
  %438 = getelementptr inbounds i8, i8* %338, i64 24
  %439 = bitcast i8* %438 to %"class.sh::TVariable"**
  %440 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %439, align 8
  %441 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %442 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %441, i64 240) #6
  %443 = bitcast i8* %442 to %"class.sh::TIntermUnary"*
  %444 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %445 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %444, i64 240) #6
  %446 = bitcast i8* %445 to %"class.sh::TIntermBinary"*
  %447 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 2) #6
  %448 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %447, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %446, i8 zeroext 44, %"class.sh::TIntermTyped"* %348, %"class.sh::TIntermTyped"* %448) #6
  %449 = bitcast i8* %445 to %"class.sh::TIntermTyped"*
  %450 = bitcast i8* %445 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %451 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %450, align 8
  %452 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %451, i64 23
  %453 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %452, align 8
  %454 = call %"class.sh::TIntermTyped"* %453(%"class.sh::TIntermTyped"* %449) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %443, i8 zeroext 113, %"class.sh::TIntermTyped"* %454, %"class.sh::TFunction"* null) #6
  %455 = bitcast i8* %442 to %"class.sh::TIntermTyped"*
  %456 = call %"class.sh::TIntermDeclaration"* @_ZN2sh29CreateTempInitDeclarationNodeEPKNS_9TVariableEPNS_12TIntermTypedE(%"class.sh::TVariable"* %440, %"class.sh::TIntermTyped"* %455) #6
  %457 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %361, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %457) #6
  %458 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %380, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %458) #6
  %459 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %399, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %459) #6
  %460 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %418, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %460) #6
  %461 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %437, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %461) #6
  %462 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %456, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %462) #6
  br label %463

463:                                              ; preds = %311, %174
  %464 = phi %"class.sh::TIntermSymbol"* [ %339, %311 ], [ null, %174 ]
  %465 = phi %"class.sh::TIntermSymbol"* [ %334, %311 ], [ null, %174 ]
  %466 = phi %"class.sh::TIntermSymbol"* [ %329, %311 ], [ null, %174 ]
  %467 = phi %"class.sh::TIntermSymbol"* [ %324, %311 ], [ null, %174 ]
  %468 = phi %"class.sh::TIntermSymbol"* [ %319, %311 ], [ null, %174 ]
  %469 = phi %"class.sh::TIntermSymbol"* [ %314, %311 ], [ null, %174 ]
  %470 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %471 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %470, i64 32) #6
  %472 = bitcast i8* %471 to %"class.sh::TIntermSymbol"*
  %473 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %474 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %473, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %472, %"class.sh::TVariable"* %474) #6
  %475 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %476 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %475, i64 32) #6
  %477 = bitcast i8* %476 to %"class.sh::TIntermSymbol"*
  %478 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %479 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %478, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %477, %"class.sh::TVariable"* %479) #6
  %480 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %481 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %480, i64 32) #6
  %482 = bitcast i8* %481 to %"class.sh::TIntermSymbol"*
  %483 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %484 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %483, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %482, %"class.sh::TVariable"* %484) #6
  %485 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %486 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %485, i64 32) #6
  %487 = bitcast i8* %486 to %"class.sh::TIntermSymbol"*
  %488 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %489 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %488, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %487, %"class.sh::TVariable"* %489) #6
  %490 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %491 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %490, i64 32) #6
  %492 = bitcast i8* %491 to %"class.sh::TIntermSymbol"*
  %493 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %494 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %493, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %492, %"class.sh::TVariable"* %494) #6
  %495 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %496 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %495, i64 32) #6
  %497 = bitcast i8* %496 to %"class.sh::TIntermSymbol"*
  %498 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %499 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %498, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %497, %"class.sh::TVariable"* %499) #6
  %500 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %501 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %500, i64 32) #6
  %502 = bitcast i8* %501 to %"class.sh::TIntermSymbol"*
  %503 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %504 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %503, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %502, %"class.sh::TVariable"* %504) #6
  %505 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %506 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %505, i64 32) #6
  %507 = bitcast i8* %506 to %"class.sh::TIntermSymbol"*
  %508 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %509 = call %"class.sh::TVariable"* @_ZN2sh18CreateTempVariableEPNS_12TSymbolTableEPKNS_5TTypeE(%"class.sh::TSymbolTable"* %508, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*)) #6
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %507, %"class.sh::TVariable"* %509) #6
  %510 = getelementptr inbounds i8, i8* %471, i64 24
  %511 = bitcast i8* %510 to %"class.sh::TVariable"**
  %512 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %511, align 8
  %513 = call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %512) #6
  %514 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %513, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %514) #6
  %515 = getelementptr inbounds i8, i8* %476, i64 24
  %516 = bitcast i8* %515 to %"class.sh::TVariable"**
  %517 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %516, align 8
  %518 = call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %517) #6
  %519 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %518, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %519) #6
  %520 = getelementptr inbounds i8, i8* %481, i64 24
  %521 = bitcast i8* %520 to %"class.sh::TVariable"**
  %522 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %521, align 8
  %523 = call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %522) #6
  %524 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %523, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %524) #6
  %525 = getelementptr inbounds i8, i8* %486, i64 24
  %526 = bitcast i8* %525 to %"class.sh::TVariable"**
  %527 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %526, align 8
  %528 = call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %527) #6
  %529 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %528, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %529) #6
  %530 = getelementptr inbounds i8, i8* %491, i64 24
  %531 = bitcast i8* %530 to %"class.sh::TVariable"**
  %532 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %531, align 8
  %533 = call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %532) #6
  %534 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %533, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %534) #6
  %535 = getelementptr inbounds i8, i8* %496, i64 24
  %536 = bitcast i8* %535 to %"class.sh::TVariable"**
  %537 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %536, align 8
  %538 = call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %537) #6
  %539 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %538, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %539) #6
  %540 = getelementptr inbounds i8, i8* %501, i64 24
  %541 = bitcast i8* %540 to %"class.sh::TVariable"**
  %542 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %541, align 8
  %543 = call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %542) #6
  %544 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %543, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %544) #6
  %545 = getelementptr inbounds i8, i8* %506, i64 24
  %546 = bitcast i8* %545 to %"class.sh::TVariable"**
  %547 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %546, align 8
  %548 = call %"class.sh::TIntermDeclaration"* @_ZN2sh25CreateTempDeclarationNodeEPKNS_9TVariableE(%"class.sh::TVariable"* %547) #6
  %549 = getelementptr inbounds %"class.sh::TIntermDeclaration", %"class.sh::TIntermDeclaration"* %548, i64 0, i32 0
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %549) #6
  %550 = bitcast %"class.sh::TVector.31"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %550) #6
  %551 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %21, i64 0, i32 0, i32 0, i32 0
  %552 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %21, i64 0, i32 0, i32 0, i32 1
  %553 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %21, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %554 = bitcast %"class.sh::TVector.31"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %554, i8 -86, i64 24, i1 false)
  %555 = bitcast i8* %196 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %556 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %555, align 8
  %557 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %556, i64 23
  %558 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %557, align 8
  %559 = call %"class.sh::TIntermTyped"* %558(%"class.sh::TIntermSymbol"* %197) #6
  %560 = bitcast i8* %201 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %561 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %560, align 8
  %562 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %561, i64 23
  %563 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %562, align 8
  %564 = call %"class.sh::TIntermTyped"* %563(%"class.sh::TIntermSymbol"* %202) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %550, i8 0, i64 24, i1 false) #6
  %565 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %566 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %565, i64 16) #6
  %567 = bitcast %"class.sh::TVector.31"* %21 to i8**
  store i8* %566, i8** %567, align 8
  %568 = getelementptr inbounds i8, i8* %566, i64 16
  %569 = bitcast %"class.sh::TIntermNode"*** %553 to i8**
  store i8* %568, i8** %569, align 8
  %570 = bitcast i8* %566 to i64*
  %571 = ptrtoint %"class.sh::TIntermTyped"* %559 to i64
  store i64 %571, i64* %570, align 8
  %572 = getelementptr inbounds i8, i8* %566, i64 8
  %573 = bitcast i8* %572 to i64*
  %574 = ptrtoint %"class.sh::TIntermTyped"* %564 to i64
  store i64 %574, i64* %573, align 8
  %575 = getelementptr inbounds i8, i8* %566, i64 16
  %576 = bitcast %"class.sh::TIntermNode"*** %552 to i64*
  %577 = ptrtoint i8* %575 to i64
  store i64 %577, i64* %576, align 8
  %578 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %579 = call %"class.sh::TIntermTyped"* @_ZN2sh29CreateBuiltInFunctionCallNodeEPKcPNS_7TVectorIPNS_11TIntermNodeEEERKNS_12TSymbolTableEi(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), %"class.sh::TVector.31"* nonnull %21, %"class.sh::TSymbolTable"* dereferenceable(1720) %578, i32 100) #6
  %580 = bitcast %"class.sh::TVector.31"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %580) #6
  %581 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %22, i64 0, i32 0, i32 0, i32 0
  %582 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %22, i64 0, i32 0, i32 0, i32 1
  %583 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %22, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %584 = bitcast %"class.sh::TVector.31"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %584, i8 -86, i64 24, i1 false)
  %585 = bitcast i8* %191 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %586 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %585, align 8
  %587 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %586, i64 23
  %588 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %587, align 8
  %589 = call %"class.sh::TIntermTyped"* %588(%"class.sh::TIntermSymbol"* %192) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %580, i8 0, i64 24, i1 false) #6
  %590 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %591 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %590, i64 16) #6
  %592 = bitcast %"class.sh::TVector.31"* %22 to i8**
  store i8* %591, i8** %592, align 8
  %593 = getelementptr inbounds i8, i8* %591, i64 16
  %594 = bitcast %"class.sh::TIntermNode"*** %583 to i8**
  store i8* %593, i8** %594, align 8
  %595 = bitcast i8* %591 to i64*
  %596 = ptrtoint %"class.sh::TIntermTyped"* %589 to i64
  store i64 %596, i64* %595, align 8
  %597 = getelementptr inbounds i8, i8* %591, i64 8
  %598 = bitcast i8* %597 to i64*
  %599 = ptrtoint %"class.sh::TIntermTyped"* %579 to i64
  store i64 %599, i64* %598, align 8
  %600 = getelementptr inbounds i8, i8* %591, i64 16
  %601 = bitcast %"class.sh::TIntermNode"*** %582 to i64*
  %602 = ptrtoint i8* %600 to i64
  store i64 %602, i64* %601, align 8
  %603 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  %604 = call %"class.sh::TIntermTyped"* @_ZN2sh29CreateBuiltInFunctionCallNodeEPKcPNS_7TVectorIPNS_11TIntermNodeEEERKNS_12TSymbolTableEi(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), %"class.sh::TVector.31"* nonnull %22, %"class.sh::TSymbolTable"* dereferenceable(1720) %603, i32 100) #6
  %605 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %606 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %605, i64 240) #6
  %607 = bitcast i8* %606 to %"class.sh::TIntermBinary"*
  %608 = bitcast i8* %471 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %607, i8 zeroext -118, %"class.sh::TIntermTyped"* %608, %"class.sh::TIntermTyped"* %604) #6
  %609 = bitcast i8* %606 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %609) #6
  %610 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %611 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %610, i64 240) #6
  %612 = bitcast i8* %611 to %"class.sh::TIntermBinary"*
  %613 = bitcast i8* %471 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %614 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %615 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %614, i64 23
  %616 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %615, align 8
  %617 = call %"class.sh::TIntermTyped"* %616(%"class.sh::TIntermSymbol"* %472) #6
  %618 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %585, align 8
  %619 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %618, i64 23
  %620 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %619, align 8
  %621 = call %"class.sh::TIntermTyped"* %620(%"class.sh::TIntermSymbol"* %192) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %612, i8 zeroext 18, %"class.sh::TIntermTyped"* %617, %"class.sh::TIntermTyped"* %621) #6
  %622 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %623 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %622, i64 240) #6
  %624 = bitcast i8* %623 to %"class.sh::TIntermBinary"*
  %625 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %626 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %625, i64 23
  %627 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %626, align 8
  %628 = call %"class.sh::TIntermTyped"* %627(%"class.sh::TIntermSymbol"* %472) #6
  %629 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %555, align 8
  %630 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %629, i64 23
  %631 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %630, align 8
  %632 = call %"class.sh::TIntermTyped"* %631(%"class.sh::TIntermSymbol"* %197) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %624, i8 zeroext 18, %"class.sh::TIntermTyped"* %628, %"class.sh::TIntermTyped"* %632) #6
  %633 = bitcast %"class.sh::TVector.31"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %633) #6
  %634 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %23, i64 0, i32 0, i32 0, i32 0
  %635 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %23, i64 0, i32 0, i32 0, i32 1
  %636 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %23, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %633, i8 0, i64 24, i1 false) #6
  %637 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %638 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %637, i64 8) #6
  %639 = bitcast %"class.sh::TVector.31"* %23 to i8**
  store i8* %638, i8** %639, align 8
  %640 = getelementptr inbounds i8, i8* %638, i64 8
  %641 = bitcast %"class.sh::TIntermNode"*** %636 to i8**
  store i8* %640, i8** %641, align 8
  %642 = bitcast i8* %638 to i64*
  %643 = ptrtoint i8* %176 to i64
  store i64 %643, i64* %642, align 8
  %644 = getelementptr inbounds i8, i8* %638, i64 8
  %645 = bitcast i8* %611 to %"class.sh::TIntermTyped"*
  %646 = bitcast i8* %623 to %"class.sh::TIntermTyped"*
  %647 = bitcast %"class.sh::TIntermNode"*** %635 to i64*
  %648 = ptrtoint i8* %644 to i64
  store i64 %648, i64* %647, align 8
  %649 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*), %"class.sh::TVector.31"* nonnull %23) #6
  %650 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %649, i64 0, i32 0, i32 0, i32 0
  %651 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %652 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %651, i64 64) #6
  %653 = bitcast i8* %652 to %"class.sh::TIntermBlock"*
  %654 = bitcast i8* %652 to i32 (...)***
  %655 = getelementptr inbounds i8, i8* %652, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %655, i8 0, i64 16, i1 false) #6
  %656 = getelementptr inbounds i8, i8* %652, i64 24
  %657 = bitcast i8* %656 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %654, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %657, align 8
  %658 = getelementptr inbounds i8, i8* %652, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %658, i8 0, i64 25, i1 false) #6
  %659 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %660 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %659, i64 240) #6
  %661 = bitcast i8* %660 to %"class.sh::TIntermBinary"*
  %662 = bitcast i8* %476 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %663 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %662, align 8
  %664 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %663, i64 23
  %665 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %664, align 8
  %666 = call %"class.sh::TIntermTyped"* %665(%"class.sh::TIntermSymbol"* %477) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %661, i8 zeroext -118, %"class.sh::TIntermTyped"* %666, %"class.sh::TIntermTyped"* %650) #6
  %667 = bitcast i8* %660 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %653, %"class.sh::TIntermNode"* %667) #6
  %668 = bitcast %"class.sh::TVector.31"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %668) #6
  %669 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %24, i64 0, i32 0, i32 0, i32 0
  %670 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %24, i64 0, i32 0, i32 0, i32 1
  %671 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %24, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %668, i8 0, i64 24, i1 false) #6
  %672 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %673 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %672, i64 8) #6
  %674 = bitcast %"class.sh::TVector.31"* %24 to i8**
  store i8* %673, i8** %674, align 8
  %675 = getelementptr inbounds i8, i8* %673, i64 8
  %676 = bitcast %"class.sh::TIntermNode"*** %671 to i8**
  store i8* %675, i8** %676, align 8
  %677 = bitcast i8* %673 to i64*
  %678 = ptrtoint i8* %181 to i64
  store i64 %678, i64* %677, align 8
  %679 = getelementptr inbounds i8, i8* %673, i64 8
  %680 = bitcast %"class.sh::TIntermNode"*** %670 to i64*
  %681 = ptrtoint i8* %679 to i64
  store i64 %681, i64* %680, align 8
  %682 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %683 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %682, i64 240) #6
  %684 = bitcast i8* %683 to %"class.sh::TIntermBinary"*
  %685 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 2.000000e+00) #6
  %686 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %685, i64 0, i32 0, i32 0
  %687 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*), %"class.sh::TVector.31"* nonnull %24) #6
  %688 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %687, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %684, i8 zeroext 13, %"class.sh::TIntermTyped"* %686, %"class.sh::TIntermTyped"* %688) #6
  %689 = bitcast i8* %683 to %"class.sh::TIntermTyped"*
  %690 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %691 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %690, i64 64) #6
  %692 = bitcast i8* %691 to %"class.sh::TIntermBlock"*
  %693 = bitcast i8* %691 to i32 (...)***
  %694 = getelementptr inbounds i8, i8* %691, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %694, i8 0, i64 16, i1 false) #6
  %695 = getelementptr inbounds i8, i8* %691, i64 24
  %696 = bitcast i8* %695 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %693, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %696, align 8
  %697 = getelementptr inbounds i8, i8* %691, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %697, i8 0, i64 25, i1 false) #6
  %698 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %699 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %698, i64 240) #6
  %700 = bitcast i8* %699 to %"class.sh::TIntermBinary"*
  %701 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %662, align 8
  %702 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %701, i64 23
  %703 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %702, align 8
  %704 = call %"class.sh::TIntermTyped"* %703(%"class.sh::TIntermSymbol"* %477) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %700, i8 zeroext -118, %"class.sh::TIntermTyped"* %704, %"class.sh::TIntermTyped"* %689) #6
  %705 = bitcast i8* %699 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %692, %"class.sh::TIntermNode"* %705) #6
  %706 = bitcast %"class.sh::TVector.31"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %706) #6
  %707 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %25, i64 0, i32 0, i32 0, i32 0
  %708 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %25, i64 0, i32 0, i32 0, i32 1
  %709 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %25, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %706, i8 0, i64 24, i1 false) #6
  %710 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %711 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %710, i64 8) #6
  %712 = bitcast %"class.sh::TVector.31"* %25 to i8**
  store i8* %711, i8** %712, align 8
  %713 = getelementptr inbounds i8, i8* %711, i64 8
  %714 = bitcast %"class.sh::TIntermNode"*** %709 to i8**
  store i8* %713, i8** %714, align 8
  %715 = bitcast i8* %711 to i64*
  %716 = ptrtoint i8* %186 to i64
  store i64 %716, i64* %715, align 8
  %717 = getelementptr inbounds i8, i8* %711, i64 8
  %718 = bitcast %"class.sh::TIntermNode"*** %708 to i64*
  %719 = ptrtoint i8* %717 to i64
  store i64 %719, i64* %718, align 8
  %720 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %721 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %720, i64 240) #6
  %722 = bitcast i8* %721 to %"class.sh::TIntermBinary"*
  %723 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 4.000000e+00) #6
  %724 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %723, i64 0, i32 0, i32 0
  %725 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh1ELh1EEE to %"class.sh::TType"*), %"class.sh::TVector.31"* nonnull %25) #6
  %726 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %725, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %722, i8 zeroext 13, %"class.sh::TIntermTyped"* %724, %"class.sh::TIntermTyped"* %726) #6
  %727 = bitcast i8* %721 to %"class.sh::TIntermTyped"*
  %728 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %729 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %728, i64 64) #6
  %730 = bitcast i8* %729 to %"class.sh::TIntermBlock"*
  %731 = bitcast i8* %729 to i32 (...)***
  %732 = getelementptr inbounds i8, i8* %729, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %732, i8 0, i64 16, i1 false) #6
  %733 = getelementptr inbounds i8, i8* %729, i64 24
  %734 = bitcast i8* %733 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %731, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %734, align 8
  %735 = getelementptr inbounds i8, i8* %729, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %735, i8 0, i64 25, i1 false) #6
  %736 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %737 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %736, i64 240) #6
  %738 = bitcast i8* %737 to %"class.sh::TIntermBinary"*
  %739 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %662, align 8
  %740 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %739, i64 23
  %741 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %740, align 8
  %742 = call %"class.sh::TIntermTyped"* %741(%"class.sh::TIntermSymbol"* %477) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %738, i8 zeroext -118, %"class.sh::TIntermTyped"* %742, %"class.sh::TIntermTyped"* %727) #6
  %743 = bitcast i8* %737 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %730, %"class.sh::TIntermNode"* %743) #6
  %744 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %745 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %744, i64 48) #6
  %746 = bitcast i8* %745 to %"class.sh::TIntermIfElse"*
  call void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"* %746, %"class.sh::TIntermTyped"* %646, %"class.sh::TIntermBlock"* %692, %"class.sh::TIntermBlock"* %730) #6
  %747 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %748 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %747, i64 64) #6
  %749 = bitcast i8* %748 to %"class.sh::TIntermBlock"*
  %750 = bitcast i8* %748 to i32 (...)***
  %751 = getelementptr inbounds i8, i8* %748, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %751, i8 0, i64 16, i1 false) #6
  %752 = getelementptr inbounds i8, i8* %748, i64 24
  %753 = bitcast i8* %752 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %750, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %753, align 8
  %754 = getelementptr inbounds i8, i8* %748, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %754, i8 0, i64 25, i1 false) #6
  %755 = bitcast i8* %745 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %749, %"class.sh::TIntermNode"* %755) #6
  %756 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %757 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %756, i64 48) #6
  %758 = bitcast i8* %757 to %"class.sh::TIntermIfElse"*
  call void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"* %758, %"class.sh::TIntermTyped"* %645, %"class.sh::TIntermBlock"* %653, %"class.sh::TIntermBlock"* %749) #6
  %759 = bitcast i8* %757 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %759) #6
  %760 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %761 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %760, i64 240) #6
  %762 = bitcast i8* %761 to %"class.sh::TIntermBinary"*
  %763 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %662, align 8
  %764 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %763, i64 23
  %765 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %764, align 8
  %766 = call %"class.sh::TIntermTyped"* %765(%"class.sh::TIntermSymbol"* %477) #6
  %767 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 1.500000e+00) #6
  %768 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %767, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %762, i8 zeroext 20, %"class.sh::TIntermTyped"* %766, %"class.sh::TIntermTyped"* %768) #6
  %769 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %770 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %769, i64 240) #6
  %771 = bitcast i8* %770 to %"class.sh::TIntermBinary"*
  %772 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %662, align 8
  %773 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %772, i64 23
  %774 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %773, align 8
  %775 = call %"class.sh::TIntermTyped"* %774(%"class.sh::TIntermSymbol"* %477) #6
  %776 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 3.500000e+00) #6
  %777 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %776, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %771, i8 zeroext 20, %"class.sh::TIntermTyped"* %775, %"class.sh::TIntermTyped"* %777) #6
  %778 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %779 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %778, i64 248) #6
  %780 = bitcast i8* %80 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %781 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %780, align 8
  %782 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %781, i64 23
  %783 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %782, align 8
  %784 = call %"class.sh::TIntermTyped"* %783(%"class.sh::TIntermSymbol"* %81) #6
  %785 = bitcast %"class.sh::TVector.170"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %785) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %785, i8 0, i64 24, i1 false) #6
  %786 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %787 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %786, i64 4) #6
  %788 = bitcast i8* %787 to i32*
  %789 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %26, i64 0, i32 0, i32 0, i32 1
  %790 = bitcast %"class.sh::TVector.170"* %26 to i8**
  store i8* %787, i8** %790, align 8
  %791 = getelementptr inbounds i8, i8* %787, i64 4
  %792 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %26, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %793 = bitcast i32** %792 to i8**
  store i8* %791, i8** %793, align 8
  store i32 0, i32* %788, align 4
  %794 = getelementptr inbounds i8, i8* %787, i64 4
  %795 = bitcast i8* %761 to %"class.sh::TIntermTyped"*
  %796 = bitcast i8* %770 to %"class.sh::TIntermTyped"*
  %797 = bitcast i8* %779 to %"class.sh::TIntermSwizzle"*
  %798 = bitcast i32** %789 to i64*
  %799 = ptrtoint i8* %794 to i64
  store i64 %799, i64* %798, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %797, %"class.sh::TIntermTyped"* %784, %"class.sh::TVector.170"* nonnull dereferenceable(24) %26) #6
  %800 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %26, i64 0, i32 0, i32 0, i32 0
  %801 = load i32*, i32** %800, align 8
  %802 = icmp eq i32* %801, null
  br i1 %802, label %805, label %803

803:                                              ; preds = %463
  %804 = ptrtoint i32* %801 to i64
  store i64 %804, i64* %798, align 8
  br label %805

805:                                              ; preds = %463, %803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %785) #6
  %806 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %807 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %806, i64 248) #6
  %808 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %780, align 8
  %809 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %808, i64 23
  %810 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %809, align 8
  %811 = call %"class.sh::TIntermTyped"* %810(%"class.sh::TIntermSymbol"* %81) #6
  %812 = bitcast %"class.sh::TVector.170"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %812) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %812, i8 0, i64 24, i1 false) #6
  %813 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %814 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %813, i64 4) #6
  %815 = bitcast i8* %814 to i32*
  %816 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %27, i64 0, i32 0, i32 0, i32 1
  %817 = bitcast %"class.sh::TVector.170"* %27 to i8**
  store i8* %814, i8** %817, align 8
  %818 = getelementptr inbounds i8, i8* %814, i64 4
  %819 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %27, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %820 = bitcast i32** %819 to i8**
  store i8* %818, i8** %820, align 8
  store i32 1, i32* %815, align 4
  %821 = getelementptr inbounds i8, i8* %814, i64 4
  %822 = bitcast i8* %807 to %"class.sh::TIntermSwizzle"*
  %823 = bitcast i32** %816 to i64*
  %824 = ptrtoint i8* %821 to i64
  store i64 %824, i64* %823, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %822, %"class.sh::TIntermTyped"* %811, %"class.sh::TVector.170"* nonnull dereferenceable(24) %27) #6
  %825 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %27, i64 0, i32 0, i32 0, i32 0
  %826 = load i32*, i32** %825, align 8
  %827 = icmp eq i32* %826, null
  br i1 %827, label %830, label %828

828:                                              ; preds = %805
  %829 = ptrtoint i32* %826 to i64
  store i64 %829, i64* %823, align 8
  br label %830

830:                                              ; preds = %805, %828
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %812) #6
  %831 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %832 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %831, i64 248) #6
  %833 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %780, align 8
  %834 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %833, i64 23
  %835 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %834, align 8
  %836 = call %"class.sh::TIntermTyped"* %835(%"class.sh::TIntermSymbol"* %81) #6
  %837 = bitcast %"class.sh::TVector.170"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %837) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %837, i8 0, i64 24, i1 false) #6
  %838 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %839 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %838, i64 4) #6
  %840 = bitcast i8* %839 to i32*
  %841 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %28, i64 0, i32 0, i32 0, i32 1
  %842 = bitcast %"class.sh::TVector.170"* %28 to i8**
  store i8* %839, i8** %842, align 8
  %843 = getelementptr inbounds i8, i8* %839, i64 4
  %844 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %28, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %845 = bitcast i32** %844 to i8**
  store i8* %843, i8** %845, align 8
  store i32 2, i32* %840, align 4
  %846 = getelementptr inbounds i8, i8* %839, i64 4
  %847 = bitcast i8* %832 to %"class.sh::TIntermSwizzle"*
  %848 = bitcast i32** %841 to i64*
  %849 = ptrtoint i8* %846 to i64
  store i64 %849, i64* %848, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %847, %"class.sh::TIntermTyped"* %836, %"class.sh::TVector.170"* nonnull dereferenceable(24) %28) #6
  %850 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %28, i64 0, i32 0, i32 0, i32 0
  %851 = load i32*, i32** %850, align 8
  %852 = icmp eq i32* %851, null
  br i1 %852, label %855, label %853

853:                                              ; preds = %830
  %854 = ptrtoint i32* %851 to i64
  store i64 %854, i64* %848, align 8
  br label %855

855:                                              ; preds = %830, %853
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %837) #6
  %856 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %857 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %856, i64 248) #6
  %858 = bitcast i8* %83 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %859 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %858, align 8
  %860 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %859, i64 23
  %861 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %860, align 8
  %862 = call %"class.sh::TIntermTyped"* %861(%"class.sh::TIntermSymbol"* %84) #6
  %863 = bitcast %"class.sh::TVector.170"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %863) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %863, i8 0, i64 24, i1 false) #6
  %864 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %865 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %864, i64 4) #6
  %866 = bitcast i8* %865 to i32*
  %867 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %29, i64 0, i32 0, i32 0, i32 1
  %868 = bitcast %"class.sh::TVector.170"* %29 to i8**
  store i8* %865, i8** %868, align 8
  %869 = getelementptr inbounds i8, i8* %865, i64 4
  %870 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %29, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %871 = bitcast i32** %870 to i8**
  store i8* %869, i8** %871, align 8
  store i32 0, i32* %866, align 4
  %872 = getelementptr inbounds i8, i8* %865, i64 4
  %873 = bitcast i8* %857 to %"class.sh::TIntermSwizzle"*
  %874 = bitcast i32** %867 to i64*
  %875 = ptrtoint i8* %872 to i64
  store i64 %875, i64* %874, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %873, %"class.sh::TIntermTyped"* %862, %"class.sh::TVector.170"* nonnull dereferenceable(24) %29) #6
  %876 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %29, i64 0, i32 0, i32 0, i32 0
  %877 = load i32*, i32** %876, align 8
  %878 = icmp eq i32* %877, null
  br i1 %878, label %881, label %879

879:                                              ; preds = %855
  %880 = ptrtoint i32* %877 to i64
  store i64 %880, i64* %874, align 8
  br label %881

881:                                              ; preds = %855, %879
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %863) #6
  %882 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %883 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %882, i64 248) #6
  %884 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %858, align 8
  %885 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %884, i64 23
  %886 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %885, align 8
  %887 = call %"class.sh::TIntermTyped"* %886(%"class.sh::TIntermSymbol"* %84) #6
  %888 = bitcast %"class.sh::TVector.170"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %888) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %888, i8 0, i64 24, i1 false) #6
  %889 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %890 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %889, i64 4) #6
  %891 = bitcast i8* %890 to i32*
  %892 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %30, i64 0, i32 0, i32 0, i32 1
  %893 = bitcast %"class.sh::TVector.170"* %30 to i8**
  store i8* %890, i8** %893, align 8
  %894 = getelementptr inbounds i8, i8* %890, i64 4
  %895 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %30, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %896 = bitcast i32** %895 to i8**
  store i8* %894, i8** %896, align 8
  store i32 1, i32* %891, align 4
  %897 = getelementptr inbounds i8, i8* %890, i64 4
  %898 = bitcast i8* %883 to %"class.sh::TIntermSwizzle"*
  %899 = bitcast i32** %892 to i64*
  %900 = ptrtoint i8* %897 to i64
  store i64 %900, i64* %899, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %898, %"class.sh::TIntermTyped"* %887, %"class.sh::TVector.170"* nonnull dereferenceable(24) %30) #6
  %901 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %30, i64 0, i32 0, i32 0, i32 0
  %902 = load i32*, i32** %901, align 8
  %903 = icmp eq i32* %902, null
  br i1 %903, label %906, label %904

904:                                              ; preds = %881
  %905 = ptrtoint i32* %902 to i64
  store i64 %905, i64* %899, align 8
  br label %906

906:                                              ; preds = %881, %904
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %888) #6
  %907 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %908 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %907, i64 248) #6
  %909 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %858, align 8
  %910 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %909, i64 23
  %911 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %910, align 8
  %912 = call %"class.sh::TIntermTyped"* %911(%"class.sh::TIntermSymbol"* %84) #6
  %913 = bitcast %"class.sh::TVector.170"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %913) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %913, i8 0, i64 24, i1 false) #6
  %914 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %915 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %914, i64 4) #6
  %916 = bitcast i8* %915 to i32*
  %917 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %31, i64 0, i32 0, i32 0, i32 1
  %918 = bitcast %"class.sh::TVector.170"* %31 to i8**
  store i8* %915, i8** %918, align 8
  %919 = getelementptr inbounds i8, i8* %915, i64 4
  %920 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %31, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %921 = bitcast i32** %920 to i8**
  store i8* %919, i8** %921, align 8
  store i32 2, i32* %916, align 4
  %922 = getelementptr inbounds i8, i8* %915, i64 4
  %923 = bitcast i8* %908 to %"class.sh::TIntermSwizzle"*
  %924 = bitcast i32** %917 to i64*
  %925 = ptrtoint i8* %922 to i64
  store i64 %925, i64* %924, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %923, %"class.sh::TIntermTyped"* %912, %"class.sh::TVector.170"* nonnull dereferenceable(24) %31) #6
  %926 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %31, i64 0, i32 0, i32 0, i32 0
  %927 = load i32*, i32** %926, align 8
  %928 = icmp eq i32* %927, null
  br i1 %928, label %931, label %929

929:                                              ; preds = %906
  %930 = ptrtoint i32* %927 to i64
  store i64 %930, i64* %924, align 8
  br label %931

931:                                              ; preds = %906, %929
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %913) #6
  %932 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %933 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %932, i64 64) #6
  %934 = bitcast i8* %933 to %"class.sh::TIntermBlock"*
  %935 = bitcast i8* %933 to i32 (...)***
  %936 = getelementptr inbounds i8, i8* %933, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %936, i8 0, i64 16, i1 false) #6
  %937 = getelementptr inbounds i8, i8* %933, i64 24
  %938 = bitcast i8* %937 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %935, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %938, align 8
  %939 = getelementptr inbounds i8, i8* %933, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %939, i8 0, i64 25, i1 false) #6
  %940 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %941 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %940, i64 240) #6
  %942 = bitcast i8* %941 to %"class.sh::TIntermBinary"*
  %943 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %944 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %943, i64 23
  %945 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %944, align 8
  %946 = call %"class.sh::TIntermTyped"* %945(%"class.sh::TIntermSymbol"* %472) #6
  %947 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %585, align 8
  %948 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %947, i64 23
  %949 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %948, align 8
  %950 = call %"class.sh::TIntermTyped"* %949(%"class.sh::TIntermSymbol"* %192) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %942, i8 zeroext -118, %"class.sh::TIntermTyped"* %946, %"class.sh::TIntermTyped"* %950) #6
  %951 = bitcast i8* %941 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %934, %"class.sh::TIntermNode"* %951) #6
  %952 = bitcast i8* %481 to %"class.sh::TIntermTyped"*
  %953 = bitcast i8* %486 to %"class.sh::TIntermTyped"*
  %954 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %955 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %954, i64 240) #6
  %956 = bitcast i8* %955 to %"class.sh::TIntermUnary"*
  %957 = bitcast i8* %99 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %958 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %957, align 8
  %959 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %958, i64 23
  %960 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %959, align 8
  %961 = call %"class.sh::TIntermTyped"* %960(%"class.sh::TIntermTyped"* %178) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %956, i8 zeroext 70, %"class.sh::TIntermTyped"* %961, %"class.sh::TFunction"* null) #6
  %962 = bitcast i8* %955 to %"class.sh::TIntermTyped"*
  %963 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %964 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %963, i64 240) #6
  %965 = bitcast i8* %964 to %"class.sh::TIntermUnary"*
  %966 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %967 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %966, i64 240) #6
  %968 = bitcast i8* %967 to %"class.sh::TIntermBinary"*
  %969 = bitcast i8* %151 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %970 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %969, align 8
  %971 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %970, i64 23
  %972 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %971, align 8
  %973 = call %"class.sh::TIntermTyped"* %972(%"class.sh::TIntermTyped"* %188) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %968, i8 zeroext 15, %"class.sh::TIntermTyped"* %962, %"class.sh::TIntermTyped"* %973) #6
  %974 = bitcast i8* %967 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %965, i8 zeroext 4, %"class.sh::TIntermTyped"* %974, %"class.sh::TFunction"* null) #6
  %975 = bitcast i8* %964 to %"class.sh::TIntermTyped"*
  %976 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %977 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %976, i64 240) #6
  %978 = bitcast i8* %977 to %"class.sh::TIntermUnary"*
  %979 = bitcast i8* %126 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %980 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %979, align 8
  %981 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %980, i64 23
  %982 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %981, align 8
  %983 = call %"class.sh::TIntermTyped"* %982(%"class.sh::TIntermTyped"* %183) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %978, i8 zeroext 4, %"class.sh::TIntermTyped"* %983, %"class.sh::TFunction"* null) #6
  %984 = bitcast i8* %977 to %"class.sh::TIntermTyped"*
  %985 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %986 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %985, i64 240) #6
  %987 = bitcast i8* %986 to %"class.sh::TIntermBinary"*
  %988 = bitcast i8* %481 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %989 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %988, align 8
  %990 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %989, i64 23
  %991 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %990, align 8
  %992 = call %"class.sh::TIntermTyped"* %991(%"class.sh::TIntermTyped"* %952) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %987, i8 zeroext -118, %"class.sh::TIntermTyped"* %992, %"class.sh::TIntermTyped"* %975) #6
  %993 = bitcast i8* %986 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %934, %"class.sh::TIntermNode"* %993) #6
  %994 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %995 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %994, i64 240) #6
  %996 = bitcast i8* %995 to %"class.sh::TIntermBinary"*
  %997 = bitcast i8* %486 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %998 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %997, align 8
  %999 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %998, i64 23
  %1000 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %999, align 8
  %1001 = call %"class.sh::TIntermTyped"* %1000(%"class.sh::TIntermTyped"* %953) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %996, i8 zeroext -118, %"class.sh::TIntermTyped"* %1001, %"class.sh::TIntermTyped"* %984) #6
  %1002 = bitcast i8* %995 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %934, %"class.sh::TIntermNode"* %1002) #6
  %1003 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1004 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1003, i64 64) #6
  %1005 = bitcast i8* %1004 to %"class.sh::TIntermBlock"*
  %1006 = bitcast i8* %1004 to i32 (...)***
  %1007 = getelementptr inbounds i8, i8* %1004, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1007, i8 0, i64 16, i1 false) #6
  %1008 = getelementptr inbounds i8, i8* %1004, i64 24
  %1009 = bitcast i8* %1008 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1006, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %1009, align 8
  %1010 = getelementptr inbounds i8, i8* %1004, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %1010, i8 0, i64 25, i1 false) #6
  %1011 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1012 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1011, i64 240) #6
  %1013 = bitcast i8* %1012 to %"class.sh::TIntermBinary"*
  %1014 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %1015 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1014, i64 23
  %1016 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1015, align 8
  %1017 = call %"class.sh::TIntermTyped"* %1016(%"class.sh::TIntermSymbol"* %472) #6
  %1018 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %555, align 8
  %1019 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1018, i64 23
  %1020 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1019, align 8
  %1021 = call %"class.sh::TIntermTyped"* %1020(%"class.sh::TIntermSymbol"* %197) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1013, i8 zeroext -118, %"class.sh::TIntermTyped"* %1017, %"class.sh::TIntermTyped"* %1021) #6
  %1022 = bitcast i8* %1012 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %1005, %"class.sh::TIntermNode"* %1022) #6
  %1023 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1024 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1023, i64 240) #6
  %1025 = bitcast i8* %1024 to %"class.sh::TIntermUnary"*
  %1026 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %979, align 8
  %1027 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1026, i64 23
  %1028 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1027, align 8
  %1029 = call %"class.sh::TIntermTyped"* %1028(%"class.sh::TIntermTyped"* %183) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %1025, i8 zeroext 70, %"class.sh::TIntermTyped"* %1029, %"class.sh::TFunction"* null) #6
  %1030 = bitcast i8* %1024 to %"class.sh::TIntermTyped"*
  %1031 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %957, align 8
  %1032 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1031, i64 23
  %1033 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1032, align 8
  %1034 = call %"class.sh::TIntermTyped"* %1033(%"class.sh::TIntermTyped"* %178) #6
  %1035 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1036 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1035, i64 240) #6
  %1037 = bitcast i8* %1036 to %"class.sh::TIntermBinary"*
  %1038 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %969, align 8
  %1039 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1038, i64 23
  %1040 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1039, align 8
  %1041 = call %"class.sh::TIntermTyped"* %1040(%"class.sh::TIntermTyped"* %188) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1037, i8 zeroext 15, %"class.sh::TIntermTyped"* %1030, %"class.sh::TIntermTyped"* %1041) #6
  %1042 = bitcast i8* %1036 to %"class.sh::TIntermTyped"*
  %1043 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1044 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1043, i64 240) #6
  %1045 = bitcast i8* %1044 to %"class.sh::TIntermBinary"*
  %1046 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %988, align 8
  %1047 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1046, i64 23
  %1048 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1047, align 8
  %1049 = call %"class.sh::TIntermTyped"* %1048(%"class.sh::TIntermTyped"* %952) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1045, i8 zeroext -118, %"class.sh::TIntermTyped"* %1049, %"class.sh::TIntermTyped"* %1034) #6
  %1050 = bitcast i8* %1044 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %1005, %"class.sh::TIntermNode"* %1050) #6
  %1051 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1052 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1051, i64 240) #6
  %1053 = bitcast i8* %1052 to %"class.sh::TIntermBinary"*
  %1054 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %997, align 8
  %1055 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1054, i64 23
  %1056 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1055, align 8
  %1057 = call %"class.sh::TIntermTyped"* %1056(%"class.sh::TIntermTyped"* %953) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1053, i8 zeroext -118, %"class.sh::TIntermTyped"* %1057, %"class.sh::TIntermTyped"* %1042) #6
  %1058 = bitcast i8* %1052 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %1005, %"class.sh::TIntermNode"* %1058) #6
  %1059 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1060 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1059, i64 64) #6
  %1061 = bitcast i8* %1060 to %"class.sh::TIntermBlock"*
  %1062 = bitcast i8* %1060 to i32 (...)***
  %1063 = getelementptr inbounds i8, i8* %1060, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1063, i8 0, i64 16, i1 false) #6
  %1064 = getelementptr inbounds i8, i8* %1060, i64 24
  %1065 = bitcast i8* %1064 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1062, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %1065, align 8
  %1066 = getelementptr inbounds i8, i8* %1060, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %1066, i8 0, i64 25, i1 false) #6
  %1067 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1068 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1067, i64 240) #6
  %1069 = bitcast i8* %1068 to %"class.sh::TIntermBinary"*
  %1070 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %1071 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1070, i64 23
  %1072 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1071, align 8
  %1073 = call %"class.sh::TIntermTyped"* %1072(%"class.sh::TIntermSymbol"* %472) #6
  %1074 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %560, align 8
  %1075 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1074, i64 23
  %1076 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1075, align 8
  %1077 = call %"class.sh::TIntermTyped"* %1076(%"class.sh::TIntermSymbol"* %202) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1069, i8 zeroext -118, %"class.sh::TIntermTyped"* %1073, %"class.sh::TIntermTyped"* %1077) #6
  %1078 = bitcast i8* %1068 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %1061, %"class.sh::TIntermNode"* %1078) #6
  %1079 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1080 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1079, i64 240) #6
  %1081 = bitcast i8* %1080 to %"class.sh::TIntermUnary"*
  %1082 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %969, align 8
  %1083 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1082, i64 23
  %1084 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1083, align 8
  %1085 = call %"class.sh::TIntermTyped"* %1084(%"class.sh::TIntermTyped"* %188) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %1081, i8 zeroext 70, %"class.sh::TIntermTyped"* %1085, %"class.sh::TFunction"* null) #6
  %1086 = bitcast i8* %1080 to %"class.sh::TIntermTyped"*
  %1087 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1088 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1087, i64 240) #6
  %1089 = bitcast i8* %1088 to %"class.sh::TIntermBinary"*
  %1090 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %957, align 8
  %1091 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1090, i64 23
  %1092 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1091, align 8
  %1093 = call %"class.sh::TIntermTyped"* %1092(%"class.sh::TIntermTyped"* %178) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1089, i8 zeroext 15, %"class.sh::TIntermTyped"* %1086, %"class.sh::TIntermTyped"* %1093) #6
  %1094 = bitcast i8* %1088 to %"class.sh::TIntermTyped"*
  %1095 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1096 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1095, i64 240) #6
  %1097 = bitcast i8* %1096 to %"class.sh::TIntermUnary"*
  %1098 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %979, align 8
  %1099 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1098, i64 23
  %1100 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1099, align 8
  %1101 = call %"class.sh::TIntermTyped"* %1100(%"class.sh::TIntermTyped"* %183) #6
  call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %1097, i8 zeroext 4, %"class.sh::TIntermTyped"* %1101, %"class.sh::TFunction"* null) #6
  %1102 = bitcast i8* %1096 to %"class.sh::TIntermTyped"*
  %1103 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1104 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1103, i64 240) #6
  %1105 = bitcast i8* %1104 to %"class.sh::TIntermBinary"*
  %1106 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %988, align 8
  %1107 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1106, i64 23
  %1108 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1107, align 8
  %1109 = call %"class.sh::TIntermTyped"* %1108(%"class.sh::TIntermTyped"* %952) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1105, i8 zeroext -118, %"class.sh::TIntermTyped"* %1109, %"class.sh::TIntermTyped"* %1094) #6
  %1110 = bitcast i8* %1104 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %1061, %"class.sh::TIntermNode"* %1110) #6
  %1111 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1112 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1111, i64 240) #6
  %1113 = bitcast i8* %1112 to %"class.sh::TIntermBinary"*
  %1114 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %997, align 8
  %1115 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1114, i64 23
  %1116 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %1115, align 8
  %1117 = call %"class.sh::TIntermTyped"* %1116(%"class.sh::TIntermTyped"* %953) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1113, i8 zeroext -118, %"class.sh::TIntermTyped"* %1117, %"class.sh::TIntermTyped"* %1102) #6
  %1118 = bitcast i8* %1112 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %1061, %"class.sh::TIntermNode"* %1118) #6
  br i1 %1, label %1119, label %1130

1119:                                             ; preds = %931
  %1120 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %469, i64 0, i32 0
  %1121 = bitcast i8* %491 to %"class.sh::TIntermTyped"*
  %1122 = bitcast i8* %496 to %"class.sh::TIntermTyped"*
  call fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeXMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"* %934, %"class.sh::TIntermTyped"* %1120, %"class.sh::TIntermTyped"* %1121, %"class.sh::TIntermTyped"* %1122)
  %1123 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %466, i64 0, i32 0
  %1124 = bitcast i8* %501 to %"class.sh::TIntermTyped"*
  %1125 = bitcast i8* %506 to %"class.sh::TIntermTyped"*
  call fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeXMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"* %934, %"class.sh::TIntermTyped"* %1123, %"class.sh::TIntermTyped"* %1124, %"class.sh::TIntermTyped"* %1125)
  %1126 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %468, i64 0, i32 0
  call fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeYMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"* %1005, %"class.sh::TIntermTyped"* %1126, %"class.sh::TIntermTyped"* %1121, %"class.sh::TIntermTyped"* %1122)
  %1127 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %465, i64 0, i32 0
  call fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeYMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"* %1005, %"class.sh::TIntermTyped"* %1127, %"class.sh::TIntermTyped"* %1124, %"class.sh::TIntermTyped"* %1125)
  %1128 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %467, i64 0, i32 0
  call fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeZMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"* %1061, %"class.sh::TIntermTyped"* %1128, %"class.sh::TIntermTyped"* %1121, %"class.sh::TIntermTyped"* %1122)
  %1129 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %464, i64 0, i32 0
  call fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeZMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"* %1061, %"class.sh::TIntermTyped"* %1129, %"class.sh::TIntermTyped"* %1124, %"class.sh::TIntermTyped"* %1125)
  br label %1291

1130:                                             ; preds = %931
  %1131 = bitcast i8* %779 to %"class.sh::TIntermTyped"*
  %1132 = bitcast i8* %807 to %"class.sh::TIntermTyped"*
  %1133 = bitcast i8* %832 to %"class.sh::TIntermTyped"*
  %1134 = bitcast i8* %491 to %"class.sh::TIntermTyped"*
  %1135 = bitcast i8* %496 to %"class.sh::TIntermTyped"*
  %1136 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %286, align 8
  %1137 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1136, i64 23
  %1138 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1137, align 8
  %1139 = call %"class.sh::TIntermTyped"* %1138(%"class.sh::TIntermSymbol"* %264) #6
  %1140 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1141 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1140, i64 248) #6
  %1142 = bitcast %"class.sh::TVector.170"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1142) #6
  %1143 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1144 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1143, i64 4) #6
  %1145 = bitcast i8* %1144 to i32*
  %1146 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %11, i64 0, i32 0, i32 0, i32 1
  %1147 = bitcast %"class.sh::TVector.170"* %11 to i8**
  store i8* %1144, i8** %1147, align 8
  %1148 = getelementptr inbounds i8, i8* %1144, i64 4
  %1149 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1150 = bitcast i32** %1149 to i8**
  store i8* %1148, i8** %1150, align 8
  store i32 0, i32* %1145, align 4
  %1151 = bitcast i8* %1141 to %"class.sh::TIntermSwizzle"*
  %1152 = bitcast i32** %1146 to i64*
  %1153 = ptrtoint i8* %1148 to i64
  store i64 %1153, i64* %1152, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %1151, %"class.sh::TIntermTyped"* %1139, %"class.sh::TVector.170"* nonnull dereferenceable(24) %11) #6
  %1154 = bitcast i8* %1141 to %"class.sh::TIntermTyped"*
  %1155 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %11, i64 0, i32 0, i32 0, i32 0
  %1156 = load i32*, i32** %1155, align 8
  %1157 = icmp eq i32* %1156, null
  br i1 %1157, label %1160, label %1158

1158:                                             ; preds = %1130
  %1159 = ptrtoint i32* %1156 to i64
  store i64 %1159, i64* %1152, align 8
  br label %1160

1160:                                             ; preds = %1130, %1158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1142) #6
  call fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeXMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"* %934, %"class.sh::TIntermTyped"* %178, %"class.sh::TIntermTyped"* %183, %"class.sh::TIntermTyped"* %188, %"class.sh::TIntermTyped"* %1131, %"class.sh::TIntermTyped"* %1132, %"class.sh::TIntermTyped"* %1133, %"class.sh::TIntermTyped"* %1134, %"class.sh::TIntermTyped"* %1135, %"class.sh::TIntermTyped"* %1154)
  %1161 = bitcast i8* %857 to %"class.sh::TIntermTyped"*
  %1162 = bitcast i8* %883 to %"class.sh::TIntermTyped"*
  %1163 = bitcast i8* %908 to %"class.sh::TIntermTyped"*
  %1164 = bitcast i8* %501 to %"class.sh::TIntermTyped"*
  %1165 = bitcast i8* %506 to %"class.sh::TIntermTyped"*
  %1166 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %286, align 8
  %1167 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1166, i64 23
  %1168 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1167, align 8
  %1169 = call %"class.sh::TIntermTyped"* %1168(%"class.sh::TIntermSymbol"* %264) #6
  %1170 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1171 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1170, i64 248) #6
  %1172 = bitcast %"class.sh::TVector.170"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1172) #6
  %1173 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1174 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1173, i64 4) #6
  %1175 = bitcast i8* %1174 to i32*
  %1176 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %10, i64 0, i32 0, i32 0, i32 1
  %1177 = bitcast %"class.sh::TVector.170"* %10 to i8**
  store i8* %1174, i8** %1177, align 8
  %1178 = getelementptr inbounds i8, i8* %1174, i64 4
  %1179 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1180 = bitcast i32** %1179 to i8**
  store i8* %1178, i8** %1180, align 8
  store i32 0, i32* %1175, align 4
  %1181 = bitcast i8* %1171 to %"class.sh::TIntermSwizzle"*
  %1182 = bitcast i32** %1176 to i64*
  %1183 = ptrtoint i8* %1178 to i64
  store i64 %1183, i64* %1182, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %1181, %"class.sh::TIntermTyped"* %1169, %"class.sh::TVector.170"* nonnull dereferenceable(24) %10) #6
  %1184 = bitcast i8* %1171 to %"class.sh::TIntermTyped"*
  %1185 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %10, i64 0, i32 0, i32 0, i32 0
  %1186 = load i32*, i32** %1185, align 8
  %1187 = icmp eq i32* %1186, null
  br i1 %1187, label %1190, label %1188

1188:                                             ; preds = %1160
  %1189 = ptrtoint i32* %1186 to i64
  store i64 %1189, i64* %1182, align 8
  br label %1190

1190:                                             ; preds = %1160, %1188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1172) #6
  call fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeXMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"* %934, %"class.sh::TIntermTyped"* %178, %"class.sh::TIntermTyped"* %183, %"class.sh::TIntermTyped"* %188, %"class.sh::TIntermTyped"* %1161, %"class.sh::TIntermTyped"* %1162, %"class.sh::TIntermTyped"* %1163, %"class.sh::TIntermTyped"* %1164, %"class.sh::TIntermTyped"* %1165, %"class.sh::TIntermTyped"* %1184)
  %1191 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %286, align 8
  %1192 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1191, i64 23
  %1193 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1192, align 8
  %1194 = call %"class.sh::TIntermTyped"* %1193(%"class.sh::TIntermSymbol"* %264) #6
  %1195 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1196 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1195, i64 248) #6
  %1197 = bitcast %"class.sh::TVector.170"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1197) #6
  %1198 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1199 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1198, i64 4) #6
  %1200 = bitcast i8* %1199 to i32*
  %1201 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %9, i64 0, i32 0, i32 0, i32 1
  %1202 = bitcast %"class.sh::TVector.170"* %9 to i8**
  store i8* %1199, i8** %1202, align 8
  %1203 = getelementptr inbounds i8, i8* %1199, i64 4
  %1204 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1205 = bitcast i32** %1204 to i8**
  store i8* %1203, i8** %1205, align 8
  store i32 1, i32* %1200, align 4
  %1206 = bitcast i8* %1196 to %"class.sh::TIntermSwizzle"*
  %1207 = bitcast i32** %1201 to i64*
  %1208 = ptrtoint i8* %1203 to i64
  store i64 %1208, i64* %1207, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %1206, %"class.sh::TIntermTyped"* %1194, %"class.sh::TVector.170"* nonnull dereferenceable(24) %9) #6
  %1209 = bitcast i8* %1196 to %"class.sh::TIntermTyped"*
  %1210 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %9, i64 0, i32 0, i32 0, i32 0
  %1211 = load i32*, i32** %1210, align 8
  %1212 = icmp eq i32* %1211, null
  br i1 %1212, label %1215, label %1213

1213:                                             ; preds = %1190
  %1214 = ptrtoint i32* %1211 to i64
  store i64 %1214, i64* %1207, align 8
  br label %1215

1215:                                             ; preds = %1190, %1213
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1197) #6
  call fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeYMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"* %1005, %"class.sh::TIntermTyped"* %178, %"class.sh::TIntermTyped"* %183, %"class.sh::TIntermTyped"* %188, %"class.sh::TIntermTyped"* %1131, %"class.sh::TIntermTyped"* %1132, %"class.sh::TIntermTyped"* %1133, %"class.sh::TIntermTyped"* %1134, %"class.sh::TIntermTyped"* %1135, %"class.sh::TIntermTyped"* %1209)
  %1216 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %286, align 8
  %1217 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1216, i64 23
  %1218 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1217, align 8
  %1219 = call %"class.sh::TIntermTyped"* %1218(%"class.sh::TIntermSymbol"* %264) #6
  %1220 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1221 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1220, i64 248) #6
  %1222 = bitcast %"class.sh::TVector.170"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1222) #6
  %1223 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1224 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1223, i64 4) #6
  %1225 = bitcast i8* %1224 to i32*
  %1226 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %8, i64 0, i32 0, i32 0, i32 1
  %1227 = bitcast %"class.sh::TVector.170"* %8 to i8**
  store i8* %1224, i8** %1227, align 8
  %1228 = getelementptr inbounds i8, i8* %1224, i64 4
  %1229 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1230 = bitcast i32** %1229 to i8**
  store i8* %1228, i8** %1230, align 8
  store i32 1, i32* %1225, align 4
  %1231 = bitcast i8* %1221 to %"class.sh::TIntermSwizzle"*
  %1232 = bitcast i32** %1226 to i64*
  %1233 = ptrtoint i8* %1228 to i64
  store i64 %1233, i64* %1232, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %1231, %"class.sh::TIntermTyped"* %1219, %"class.sh::TVector.170"* nonnull dereferenceable(24) %8) #6
  %1234 = bitcast i8* %1221 to %"class.sh::TIntermTyped"*
  %1235 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %8, i64 0, i32 0, i32 0, i32 0
  %1236 = load i32*, i32** %1235, align 8
  %1237 = icmp eq i32* %1236, null
  br i1 %1237, label %1240, label %1238

1238:                                             ; preds = %1215
  %1239 = ptrtoint i32* %1236 to i64
  store i64 %1239, i64* %1232, align 8
  br label %1240

1240:                                             ; preds = %1215, %1238
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1222) #6
  call fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeYMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"* %1005, %"class.sh::TIntermTyped"* %178, %"class.sh::TIntermTyped"* %183, %"class.sh::TIntermTyped"* %188, %"class.sh::TIntermTyped"* %1161, %"class.sh::TIntermTyped"* %1162, %"class.sh::TIntermTyped"* %1163, %"class.sh::TIntermTyped"* %1164, %"class.sh::TIntermTyped"* %1165, %"class.sh::TIntermTyped"* %1234)
  %1241 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %286, align 8
  %1242 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1241, i64 23
  %1243 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1242, align 8
  %1244 = call %"class.sh::TIntermTyped"* %1243(%"class.sh::TIntermSymbol"* %264) #6
  %1245 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1246 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1245, i64 248) #6
  %1247 = bitcast %"class.sh::TVector.170"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1247) #6
  %1248 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1249 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1248, i64 4) #6
  %1250 = bitcast i8* %1249 to i32*
  %1251 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %7, i64 0, i32 0, i32 0, i32 1
  %1252 = bitcast %"class.sh::TVector.170"* %7 to i8**
  store i8* %1249, i8** %1252, align 8
  %1253 = getelementptr inbounds i8, i8* %1249, i64 4
  %1254 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1255 = bitcast i32** %1254 to i8**
  store i8* %1253, i8** %1255, align 8
  store i32 2, i32* %1250, align 4
  %1256 = bitcast i8* %1246 to %"class.sh::TIntermSwizzle"*
  %1257 = bitcast i32** %1251 to i64*
  %1258 = ptrtoint i8* %1253 to i64
  store i64 %1258, i64* %1257, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %1256, %"class.sh::TIntermTyped"* %1244, %"class.sh::TVector.170"* nonnull dereferenceable(24) %7) #6
  %1259 = bitcast i8* %1246 to %"class.sh::TIntermTyped"*
  %1260 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %7, i64 0, i32 0, i32 0, i32 0
  %1261 = load i32*, i32** %1260, align 8
  %1262 = icmp eq i32* %1261, null
  br i1 %1262, label %1265, label %1263

1263:                                             ; preds = %1240
  %1264 = ptrtoint i32* %1261 to i64
  store i64 %1264, i64* %1257, align 8
  br label %1265

1265:                                             ; preds = %1240, %1263
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1247) #6
  call fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeZMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"* %1061, %"class.sh::TIntermTyped"* %178, %"class.sh::TIntermTyped"* %183, %"class.sh::TIntermTyped"* %188, %"class.sh::TIntermTyped"* %1131, %"class.sh::TIntermTyped"* %1132, %"class.sh::TIntermTyped"* %1133, %"class.sh::TIntermTyped"* %1134, %"class.sh::TIntermTyped"* %1135, %"class.sh::TIntermTyped"* %1259)
  %1266 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %286, align 8
  %1267 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1266, i64 23
  %1268 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1267, align 8
  %1269 = call %"class.sh::TIntermTyped"* %1268(%"class.sh::TIntermSymbol"* %264) #6
  %1270 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1271 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1270, i64 248) #6
  %1272 = bitcast %"class.sh::TVector.170"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1272) #6
  %1273 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1274 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1273, i64 4) #6
  %1275 = bitcast i8* %1274 to i32*
  %1276 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 1
  %1277 = bitcast %"class.sh::TVector.170"* %6 to i8**
  store i8* %1274, i8** %1277, align 8
  %1278 = getelementptr inbounds i8, i8* %1274, i64 4
  %1279 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1280 = bitcast i32** %1279 to i8**
  store i8* %1278, i8** %1280, align 8
  store i32 2, i32* %1275, align 4
  %1281 = bitcast i8* %1271 to %"class.sh::TIntermSwizzle"*
  %1282 = bitcast i32** %1276 to i64*
  %1283 = ptrtoint i8* %1278 to i64
  store i64 %1283, i64* %1282, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %1281, %"class.sh::TIntermTyped"* %1269, %"class.sh::TVector.170"* nonnull dereferenceable(24) %6) #6
  %1284 = bitcast i8* %1271 to %"class.sh::TIntermTyped"*
  %1285 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 0
  %1286 = load i32*, i32** %1285, align 8
  %1287 = icmp eq i32* %1286, null
  br i1 %1287, label %1290, label %1288

1288:                                             ; preds = %1265
  %1289 = ptrtoint i32* %1286 to i64
  store i64 %1289, i64* %1282, align 8
  br label %1290

1290:                                             ; preds = %1265, %1288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1272) #6
  call fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeZMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"* %1061, %"class.sh::TIntermTyped"* %178, %"class.sh::TIntermTyped"* %183, %"class.sh::TIntermTyped"* %188, %"class.sh::TIntermTyped"* %1161, %"class.sh::TIntermTyped"* %1162, %"class.sh::TIntermTyped"* %1163, %"class.sh::TIntermTyped"* %1164, %"class.sh::TIntermTyped"* %1165, %"class.sh::TIntermTyped"* %1284)
  br label %1291

1291:                                             ; preds = %1290, %1119
  %1292 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1293 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1292, i64 48) #6
  %1294 = bitcast i8* %1293 to %"class.sh::TIntermIfElse"*
  call void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"* %1294, %"class.sh::TIntermTyped"* %796, %"class.sh::TIntermBlock"* %1005, %"class.sh::TIntermBlock"* %1061) #6
  %1295 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1296 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1295, i64 64) #6
  %1297 = bitcast i8* %1296 to %"class.sh::TIntermBlock"*
  %1298 = bitcast i8* %1296 to i32 (...)***
  %1299 = getelementptr inbounds i8, i8* %1296, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1299, i8 0, i64 16, i1 false) #6
  %1300 = getelementptr inbounds i8, i8* %1296, i64 24
  %1301 = bitcast i8* %1300 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1298, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %1301, align 8
  %1302 = getelementptr inbounds i8, i8* %1296, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %1302, i8 0, i64 25, i1 false) #6
  %1303 = bitcast i8* %1293 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %1297, %"class.sh::TIntermNode"* %1303) #6
  %1304 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1305 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1304, i64 48) #6
  %1306 = bitcast i8* %1305 to %"class.sh::TIntermIfElse"*
  call void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"* %1306, %"class.sh::TIntermTyped"* %795, %"class.sh::TIntermBlock"* %934, %"class.sh::TIntermBlock"* %1297) #6
  %1307 = bitcast i8* %1305 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %1307) #6
  %1308 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1309 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1308, i64 240) #6
  %1310 = bitcast i8* %1309 to %"class.sh::TIntermBinary"*
  %1311 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %1312 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1311, i64 23
  %1313 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1312, align 8
  %1314 = call %"class.sh::TIntermTyped"* %1313(%"class.sh::TIntermSymbol"* %472) #6
  %1315 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1316 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1315, i64 240) #6
  %1317 = bitcast i8* %1316 to %"class.sh::TIntermBinary"*
  %1318 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %1319 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %1318, i64 0, i32 0, i32 0
  %1320 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %1321 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1320, i64 23
  %1322 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1321, align 8
  %1323 = call %"class.sh::TIntermTyped"* %1322(%"class.sh::TIntermSymbol"* %472) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1317, i8 zeroext 16, %"class.sh::TIntermTyped"* %1319, %"class.sh::TIntermTyped"* %1323) #6
  %1324 = bitcast i8* %1316 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1310, i8 zeroext -118, %"class.sh::TIntermTyped"* %1314, %"class.sh::TIntermTyped"* %1324) #6
  %1325 = bitcast i8* %1309 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %1325) #6
  %1326 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1327 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1326, i64 240) #6
  %1328 = bitcast i8* %1327 to %"class.sh::TIntermBinary"*
  %1329 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %1330 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1329, i64 23
  %1331 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1330, align 8
  %1332 = call %"class.sh::TIntermTyped"* %1331(%"class.sh::TIntermSymbol"* %472) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1328, i8 zeroext 15, %"class.sh::TIntermTyped"* %952, %"class.sh::TIntermTyped"* %1332) #6
  %1333 = bitcast i8* %1327 to %"class.sh::TIntermTyped"*
  %1334 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1335 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1334, i64 240) #6
  %1336 = bitcast i8* %1335 to %"class.sh::TIntermBinary"*
  %1337 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %613, align 8
  %1338 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1337, i64 23
  %1339 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1338, align 8
  %1340 = call %"class.sh::TIntermTyped"* %1339(%"class.sh::TIntermSymbol"* %472) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1336, i8 zeroext 15, %"class.sh::TIntermTyped"* %953, %"class.sh::TIntermTyped"* %1340) #6
  %1341 = bitcast i8* %1335 to %"class.sh::TIntermTyped"*
  %1342 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1343 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1342, i64 240) #6
  %1344 = bitcast i8* %1343 to %"class.sh::TIntermBinary"*
  %1345 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %1346 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %1345, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1344, i8 zeroext 13, %"class.sh::TIntermTyped"* %1346, %"class.sh::TIntermTyped"* %1333) #6
  %1347 = bitcast i8* %1343 to %"class.sh::TIntermTyped"*
  %1348 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1349 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1348, i64 240) #6
  %1350 = bitcast i8* %1349 to %"class.sh::TIntermBinary"*
  %1351 = call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %1352 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %1351, i64 0, i32 0, i32 0
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1350, i8 zeroext 13, %"class.sh::TIntermTyped"* %1352, %"class.sh::TIntermTyped"* %1341) #6
  %1353 = bitcast i8* %1349 to %"class.sh::TIntermTyped"*
  %1354 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1355 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1354, i64 240) #6
  %1356 = bitcast i8* %1355 to %"class.sh::TIntermBinary"*
  %1357 = bitcast i8* %481 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %1358 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1357, align 8
  %1359 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1358, i64 23
  %1360 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1359, align 8
  %1361 = call %"class.sh::TIntermTyped"* %1360(%"class.sh::TIntermSymbol"* %482) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1356, i8 zeroext -118, %"class.sh::TIntermTyped"* %1361, %"class.sh::TIntermTyped"* %1347) #6
  %1362 = bitcast i8* %1355 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %1362) #6
  %1363 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1364 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1363, i64 240) #6
  %1365 = bitcast i8* %1364 to %"class.sh::TIntermBinary"*
  %1366 = bitcast i8* %486 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)***
  %1367 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1366, align 8
  %1368 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1367, i64 23
  %1369 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1368, align 8
  %1370 = call %"class.sh::TIntermTyped"* %1369(%"class.sh::TIntermSymbol"* %487) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1365, i8 zeroext -118, %"class.sh::TIntermTyped"* %1370, %"class.sh::TIntermTyped"* %1353) #6
  %1371 = bitcast i8* %1364 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %1371) #6
  %1372 = bitcast %"class.sh::TVector.31"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1372) #6
  %1373 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %32, i64 0, i32 0, i32 0, i32 0
  %1374 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %32, i64 0, i32 0, i32 0, i32 1
  %1375 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %32, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1376 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1377 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1376, i64 16) #6
  %1378 = bitcast %"class.sh::TVector.31"* %32 to i8**
  store i8* %1377, i8** %1378, align 8
  %1379 = getelementptr inbounds i8, i8* %1377, i64 16
  %1380 = bitcast %"class.sh::TIntermNode"*** %1375 to i8**
  store i8* %1379, i8** %1380, align 8
  %1381 = bitcast i8* %1377 to i64*
  %1382 = ptrtoint i8* %491 to i64
  store i64 %1382, i64* %1381, align 8
  %1383 = getelementptr inbounds i8, i8* %1377, i64 8
  %1384 = bitcast i8* %1383 to i64*
  %1385 = ptrtoint i8* %496 to i64
  store i64 %1385, i64* %1384, align 8
  %1386 = getelementptr inbounds i8, i8* %1377, i64 16
  %1387 = bitcast %"class.sh::TIntermNode"*** %1374 to i64*
  %1388 = ptrtoint i8* %1386 to i64
  store i64 %1388, i64* %1387, align 8
  %1389 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh2ELh1EEE to %"class.sh::TType"*), %"class.sh::TVector.31"* nonnull %32) #6
  %1390 = bitcast %"class.sh::TVector.31"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1390) #6
  %1391 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %33, i64 0, i32 0, i32 0, i32 0
  %1392 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %33, i64 0, i32 0, i32 0, i32 1
  %1393 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %33, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1394 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1395 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1394, i64 16) #6
  %1396 = bitcast %"class.sh::TVector.31"* %33 to i8**
  store i8* %1395, i8** %1396, align 8
  %1397 = getelementptr inbounds i8, i8* %1395, i64 16
  %1398 = bitcast %"class.sh::TIntermNode"*** %1393 to i8**
  store i8* %1397, i8** %1398, align 8
  %1399 = bitcast i8* %1395 to i64*
  %1400 = ptrtoint i8* %501 to i64
  store i64 %1400, i64* %1399, align 8
  %1401 = getelementptr inbounds i8, i8* %1395, i64 8
  %1402 = bitcast i8* %1401 to i64*
  %1403 = ptrtoint i8* %506 to i64
  store i64 %1403, i64* %1402, align 8
  %1404 = getelementptr inbounds i8, i8* %1395, i64 16
  %1405 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1389, i64 0, i32 0, i32 0, i32 0
  %1406 = bitcast %"class.sh::TIntermNode"*** %1392 to i64*
  %1407 = ptrtoint i8* %1404 to i64
  store i64 %1407, i64* %1406, align 8
  %1408 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh2ELh1EEE to %"class.sh::TType"*), %"class.sh::TVector.31"* nonnull %33) #6
  %1409 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1408, i64 0, i32 0, i32 0, i32 0
  %1410 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1411 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1410, i64 240) #6
  %1412 = bitcast i8* %1411 to %"class.sh::TIntermBinary"*
  %1413 = bitcast i8* %86 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1412, i8 zeroext -118, %"class.sh::TIntermTyped"* %1413, %"class.sh::TIntermTyped"* %1405) #6
  %1414 = bitcast i8* %1411 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %1414) #6
  %1415 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1416 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1415, i64 240) #6
  %1417 = bitcast i8* %1416 to %"class.sh::TIntermBinary"*
  %1418 = bitcast i8* %89 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %1417, i8 zeroext -118, %"class.sh::TIntermTyped"* %1418, %"class.sh::TIntermTyped"* %1409) #6
  %1419 = bitcast i8* %1416 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %1419) #6
  %1420 = bitcast %"class.sh::TVector.31"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1420) #6
  %1421 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %34, i64 0, i32 0, i32 0, i32 0
  %1422 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %34, i64 0, i32 0, i32 0, i32 1
  %1423 = getelementptr inbounds %"class.sh::TVector.31", %"class.sh::TVector.31"* %34, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1424 = bitcast %"class.sh::TVector.31"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1424, i8 -86, i64 24, i1 false)
  %1425 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1357, align 8
  %1426 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1425, i64 23
  %1427 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1426, align 8
  %1428 = call %"class.sh::TIntermTyped"* %1427(%"class.sh::TIntermSymbol"* %482) #6
  %1429 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*** %1366, align 8
  %1430 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1429, i64 23
  %1431 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSymbol"*)** %1430, align 8
  %1432 = call %"class.sh::TIntermTyped"* %1431(%"class.sh::TIntermSymbol"* %487) #6
  %1433 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1434 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1433, i64 24) #6
  %1435 = bitcast %"class.sh::TVector.31"* %34 to i8**
  store i8* %1434, i8** %1435, align 8
  %1436 = getelementptr inbounds i8, i8* %1434, i64 24
  %1437 = bitcast %"class.sh::TIntermNode"*** %1423 to i8**
  store i8* %1436, i8** %1437, align 8
  %1438 = bitcast i8* %1434 to i64*
  %1439 = ptrtoint %"class.sh::TIntermTyped"* %1428 to i64
  store i64 %1439, i64* %1438, align 8
  %1440 = getelementptr inbounds i8, i8* %1434, i64 8
  %1441 = bitcast i8* %1440 to i64*
  %1442 = ptrtoint %"class.sh::TIntermTyped"* %1432 to i64
  store i64 %1442, i64* %1441, align 8
  %1443 = getelementptr inbounds i8, i8* %1434, i64 16
  %1444 = bitcast i8* %1443 to i64*
  %1445 = ptrtoint i8* %476 to i64
  store i64 %1445, i64* %1444, align 8
  %1446 = getelementptr inbounds i8, i8* %1434, i64 24
  %1447 = bitcast %"class.sh::TIntermNode"*** %1422 to i64*
  %1448 = ptrtoint i8* %1446 to i64
  store i64 %1448, i64* %1447, align 8
  %1449 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1450 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1449, i64 40) #6
  %1451 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184) bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*), %"class.sh::TVector.31"* nonnull %34) #6
  %1452 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1451, i64 0, i32 0, i32 0, i32 0
  %1453 = bitcast i8* %1450 to i32 (...)***
  %1454 = getelementptr inbounds i8, i8* %1450, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1454, i8 0, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1453, align 8
  %1455 = getelementptr inbounds i8, i8* %1450, i64 24
  store i8 -122, i8* %1455, align 8
  %1456 = getelementptr inbounds i8, i8* %1450, i64 32
  %1457 = bitcast i8* %1456 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* %1452, %"class.sh::TIntermTyped"** %1457, align 8
  %1458 = bitcast i8* %1450 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %115, %"class.sh::TIntermNode"* %1458) #6
  %1459 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %1460 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %1459, i64 80) #6
  %1461 = bitcast i8* %1460 to %"class.sh::TFunction"*
  %1462 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %37, align 8
  call void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"* %1461, %"class.sh::TSymbolTable"* %1462, %"class.sh::ImmutableString"* dereferenceable(16) %2, i8 zeroext 2, %"class.sh::TType"* bitcast ({ i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }, i8, i8, %"class.sh::TSpan", %"class.sh::TVector.22"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }* @_ZN2sh10StaticType7HelpersL8instanceILNS_10TBasicTypeE1ELNS_10TPrecisionE0ELNS_10TQualifierE1ELh3ELh1EEE to %"class.sh::TType"*), i1 zeroext true) #6
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %1461, %"class.sh::TVariable"* %41) #6
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %1461, %"class.sh::TVariable"* %48) #6
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %1461, %"class.sh::TVariable"* %55) #6
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %1461, %"class.sh::TVariable"* %67) #6
  call void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"* %1461, %"class.sh::TVariable"* %74) #6
  %1463 = bitcast %"class.sh::TFunction"** %3 to i8**
  store i8* %1460, i8** %1463, align 8
  %1464 = call %"class.sh::TIntermFunctionDefinition"* @_ZN2sh36CreateInternalFunctionDefinitionNodeERKNS_9TFunctionEPNS_12TIntermBlockE(%"class.sh::TFunction"* dereferenceable(80) %1461, %"class.sh::TIntermBlock"* %115) #6
  store %"class.sh::TIntermFunctionDefinition"* %1464, %"class.sh::TIntermFunctionDefinition"** %4, align 8
  %1465 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1421, align 8
  %1466 = icmp eq %"class.sh::TIntermNode"** %1465, null
  br i1 %1466, label %1469, label %1467

1467:                                             ; preds = %1291
  %1468 = ptrtoint %"class.sh::TIntermNode"** %1465 to i64
  store i64 %1468, i64* %1447, align 8
  br label %1469

1469:                                             ; preds = %1291, %1467
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1420) #6
  %1470 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1391, align 8
  %1471 = icmp eq %"class.sh::TIntermNode"** %1470, null
  br i1 %1471, label %1474, label %1472

1472:                                             ; preds = %1469
  %1473 = ptrtoint %"class.sh::TIntermNode"** %1470 to i64
  store i64 %1473, i64* %1406, align 8
  br label %1474

1474:                                             ; preds = %1469, %1472
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1390) #6
  %1475 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %1373, align 8
  %1476 = icmp eq %"class.sh::TIntermNode"** %1475, null
  br i1 %1476, label %1479, label %1477

1477:                                             ; preds = %1474
  %1478 = ptrtoint %"class.sh::TIntermNode"** %1475 to i64
  store i64 %1478, i64* %1387, align 8
  br label %1479

1479:                                             ; preds = %1474, %1477
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1372) #6
  %1480 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %707, align 8
  %1481 = icmp eq %"class.sh::TIntermNode"** %1480, null
  br i1 %1481, label %1484, label %1482

1482:                                             ; preds = %1479
  %1483 = ptrtoint %"class.sh::TIntermNode"** %1480 to i64
  store i64 %1483, i64* %718, align 8
  br label %1484

1484:                                             ; preds = %1479, %1482
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %706) #6
  %1485 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %669, align 8
  %1486 = icmp eq %"class.sh::TIntermNode"** %1485, null
  br i1 %1486, label %1489, label %1487

1487:                                             ; preds = %1484
  %1488 = ptrtoint %"class.sh::TIntermNode"** %1485 to i64
  store i64 %1488, i64* %680, align 8
  br label %1489

1489:                                             ; preds = %1484, %1487
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %668) #6
  %1490 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %634, align 8
  %1491 = icmp eq %"class.sh::TIntermNode"** %1490, null
  br i1 %1491, label %1494, label %1492

1492:                                             ; preds = %1489
  %1493 = ptrtoint %"class.sh::TIntermNode"** %1490 to i64
  store i64 %1493, i64* %647, align 8
  br label %1494

1494:                                             ; preds = %1489, %1492
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %633) #6
  %1495 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %581, align 8
  %1496 = icmp eq %"class.sh::TIntermNode"** %1495, null
  br i1 %1496, label %1499, label %1497

1497:                                             ; preds = %1494
  %1498 = ptrtoint %"class.sh::TIntermNode"** %1495 to i64
  store i64 %1498, i64* %601, align 8
  br label %1499

1499:                                             ; preds = %1494, %1497
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %580) #6
  %1500 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %551, align 8
  %1501 = icmp eq %"class.sh::TIntermNode"** %1500, null
  br i1 %1501, label %1504, label %1502

1502:                                             ; preds = %1499
  %1503 = ptrtoint %"class.sh::TIntermNode"** %1500 to i64
  store i64 %1503, i64* %576, align 8
  br label %1504

1504:                                             ; preds = %1499, %1502
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %550) #6
  %1505 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %273, align 8
  %1506 = icmp eq %"class.sh::TIntermNode"** %1505, null
  br i1 %1506, label %1509, label %1507

1507:                                             ; preds = %1504
  %1508 = ptrtoint %"class.sh::TIntermNode"** %1505 to i64
  store i64 %1508, i64* %302, align 8
  br label %1509

1509:                                             ; preds = %1504, %1507
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %272) #6
  ret void
}

declare void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"*, %"class.sh::TType"* dereferenceable(184)) unnamed_addr #2

declare void @_ZN2sh5TType12setBasicTypeENS_10TBasicTypeE(%"class.sh::TType"*, i32) local_unnamed_addr #2

declare void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #2

declare void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #2

declare void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"*, %"class.sh::TIntermTyped"*, %"class.sh::TVector.170"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TFunction"*) unnamed_addr #2

declare void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float) local_unnamed_addr #2

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184), %"class.sh::TVector.31"*) local_unnamed_addr #2

declare void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeXMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #0 {
  %5 = alloca %"class.sh::TVector.170", align 8
  %6 = alloca %"class.sh::TVector.170", align 8
  %7 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %8 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %7, i64 240) #6
  %9 = bitcast i8* %8 to %"class.sh::TIntermBinary"*
  %10 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %11, i64 23
  %13 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call %"class.sh::TIntermTyped"* %13(%"class.sh::TIntermTyped"* %2) #6
  %15 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %16 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %16, i64 23
  %18 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %17, align 8
  %19 = tail call %"class.sh::TIntermTyped"* %18(%"class.sh::TIntermTyped"* %1) #6
  %20 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %21 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %20, i64 248) #6
  %22 = bitcast %"class.sh::TVector.170"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #6
  %23 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %24 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %23, i64 4) #6
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.sh::TVector.170"* %6 to i8**
  store i8* %24, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 4
  %29 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast i32** %29 to i8**
  store i8* %28, i8** %30, align 8
  store i32 2, i32* %25, align 4
  %31 = bitcast i8* %21 to %"class.sh::TIntermSwizzle"*
  %32 = bitcast i32** %26 to i64*
  %33 = ptrtoint i8* %28 to i64
  store i64 %33, i64* %32, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %31, %"class.sh::TIntermTyped"* %19, %"class.sh::TVector.170"* nonnull dereferenceable(24) %6) #6
  %34 = bitcast i8* %21 to %"class.sh::TIntermTyped"*
  %35 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %4
  %39 = ptrtoint i32* %36 to i64
  store i64 %39, i64* %32, align 8
  br label %40

40:                                               ; preds = %4, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %9, i8 zeroext -118, %"class.sh::TIntermTyped"* %14, %"class.sh::TIntermTyped"* %34) #6
  %41 = bitcast i8* %8 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %41) #6
  %42 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %43 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %42, i64 240) #6
  %44 = bitcast i8* %43 to %"class.sh::TIntermBinary"*
  %45 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %46 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %46, i64 23
  %48 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %47, align 8
  %49 = call %"class.sh::TIntermTyped"* %48(%"class.sh::TIntermTyped"* %3) #6
  %50 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %51 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %50, i64 23
  %52 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %51, align 8
  %53 = call %"class.sh::TIntermTyped"* %52(%"class.sh::TIntermTyped"* %1) #6
  %54 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %55 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %54, i64 248) #6
  %56 = bitcast %"class.sh::TVector.170"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #6
  %57 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %58 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %57, i64 4) #6
  %59 = bitcast i8* %58 to i32*
  %60 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.sh::TVector.170"* %5 to i8**
  store i8* %58, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 4
  %63 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast i32** %63 to i8**
  store i8* %62, i8** %64, align 8
  store i32 1, i32* %59, align 4
  %65 = bitcast i8* %55 to %"class.sh::TIntermSwizzle"*
  %66 = bitcast i32** %60 to i64*
  %67 = ptrtoint i8* %62 to i64
  store i64 %67, i64* %66, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %65, %"class.sh::TIntermTyped"* %53, %"class.sh::TVector.170"* nonnull dereferenceable(24) %5) #6
  %68 = bitcast i8* %55 to %"class.sh::TIntermTyped"*
  %69 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %40
  %73 = ptrtoint i32* %70 to i64
  store i64 %73, i64* %66, align 8
  br label %74

74:                                               ; preds = %40, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %44, i8 zeroext -118, %"class.sh::TIntermTyped"* %49, %"class.sh::TIntermTyped"* %68) #6
  %75 = bitcast i8* %43 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %75) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeYMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #0 {
  %5 = alloca %"class.sh::TVector.170", align 8
  %6 = alloca %"class.sh::TVector.170", align 8
  %7 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %8 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %7, i64 240) #6
  %9 = bitcast i8* %8 to %"class.sh::TIntermBinary"*
  %10 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %11, i64 23
  %13 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call %"class.sh::TIntermTyped"* %13(%"class.sh::TIntermTyped"* %2) #6
  %15 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %16 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %16, i64 23
  %18 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %17, align 8
  %19 = tail call %"class.sh::TIntermTyped"* %18(%"class.sh::TIntermTyped"* %1) #6
  %20 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %21 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %20, i64 248) #6
  %22 = bitcast %"class.sh::TVector.170"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #6
  %23 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %24 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %23, i64 4) #6
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.sh::TVector.170"* %6 to i8**
  store i8* %24, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 4
  %29 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast i32** %29 to i8**
  store i8* %28, i8** %30, align 8
  store i32 0, i32* %25, align 4
  %31 = bitcast i8* %21 to %"class.sh::TIntermSwizzle"*
  %32 = bitcast i32** %26 to i64*
  %33 = ptrtoint i8* %28 to i64
  store i64 %33, i64* %32, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %31, %"class.sh::TIntermTyped"* %19, %"class.sh::TVector.170"* nonnull dereferenceable(24) %6) #6
  %34 = bitcast i8* %21 to %"class.sh::TIntermTyped"*
  %35 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %4
  %39 = ptrtoint i32* %36 to i64
  store i64 %39, i64* %32, align 8
  br label %40

40:                                               ; preds = %4, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %9, i8 zeroext -118, %"class.sh::TIntermTyped"* %14, %"class.sh::TIntermTyped"* %34) #6
  %41 = bitcast i8* %8 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %41) #6
  %42 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %43 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %42, i64 240) #6
  %44 = bitcast i8* %43 to %"class.sh::TIntermBinary"*
  %45 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %46 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %46, i64 23
  %48 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %47, align 8
  %49 = call %"class.sh::TIntermTyped"* %48(%"class.sh::TIntermTyped"* %3) #6
  %50 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %51 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %50, i64 23
  %52 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %51, align 8
  %53 = call %"class.sh::TIntermTyped"* %52(%"class.sh::TIntermTyped"* %1) #6
  %54 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %55 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %54, i64 248) #6
  %56 = bitcast %"class.sh::TVector.170"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #6
  %57 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %58 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %57, i64 4) #6
  %59 = bitcast i8* %58 to i32*
  %60 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.sh::TVector.170"* %5 to i8**
  store i8* %58, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 4
  %63 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast i32** %63 to i8**
  store i8* %62, i8** %64, align 8
  store i32 2, i32* %59, align 4
  %65 = bitcast i8* %55 to %"class.sh::TIntermSwizzle"*
  %66 = bitcast i32** %60 to i64*
  %67 = ptrtoint i8* %62 to i64
  store i64 %67, i64* %66, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %65, %"class.sh::TIntermTyped"* %53, %"class.sh::TVector.170"* nonnull dereferenceable(24) %5) #6
  %68 = bitcast i8* %55 to %"class.sh::TIntermTyped"*
  %69 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %40
  %73 = ptrtoint i32* %70 to i64
  store i64 %73, i64* %66, align 8
  br label %74

74:                                               ; preds = %40, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %44, i8 zeroext -118, %"class.sh::TIntermTyped"* %49, %"class.sh::TIntermTyped"* %68) #6
  %75 = bitcast i8* %43 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %75) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_133TransformImplicitDerivativeZMajorEPNS_12TIntermBlockEPNS_12TIntermTypedES4_S4_(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #0 {
  %5 = alloca %"class.sh::TVector.170", align 8
  %6 = alloca %"class.sh::TVector.170", align 8
  %7 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %8 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %7, i64 240) #6
  %9 = bitcast i8* %8 to %"class.sh::TIntermBinary"*
  %10 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %11, i64 23
  %13 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call %"class.sh::TIntermTyped"* %13(%"class.sh::TIntermTyped"* %2) #6
  %15 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %16 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %16, i64 23
  %18 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %17, align 8
  %19 = tail call %"class.sh::TIntermTyped"* %18(%"class.sh::TIntermTyped"* %1) #6
  %20 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %21 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %20, i64 248) #6
  %22 = bitcast %"class.sh::TVector.170"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #6
  %23 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %24 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %23, i64 4) #6
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.sh::TVector.170"* %6 to i8**
  store i8* %24, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 4
  %29 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast i32** %29 to i8**
  store i8* %28, i8** %30, align 8
  store i32 0, i32* %25, align 4
  %31 = bitcast i8* %21 to %"class.sh::TIntermSwizzle"*
  %32 = bitcast i32** %26 to i64*
  %33 = ptrtoint i8* %28 to i64
  store i64 %33, i64* %32, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %31, %"class.sh::TIntermTyped"* %19, %"class.sh::TVector.170"* nonnull dereferenceable(24) %6) #6
  %34 = bitcast i8* %21 to %"class.sh::TIntermTyped"*
  %35 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %4
  %39 = ptrtoint i32* %36 to i64
  store i64 %39, i64* %32, align 8
  br label %40

40:                                               ; preds = %4, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %9, i8 zeroext -118, %"class.sh::TIntermTyped"* %14, %"class.sh::TIntermTyped"* %34) #6
  %41 = bitcast i8* %8 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %41) #6
  %42 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %43 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %42, i64 240) #6
  %44 = bitcast i8* %43 to %"class.sh::TIntermBinary"*
  %45 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %46 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %46, i64 23
  %48 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %47, align 8
  %49 = call %"class.sh::TIntermTyped"* %48(%"class.sh::TIntermTyped"* %3) #6
  %50 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %51 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %50, i64 23
  %52 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %51, align 8
  %53 = call %"class.sh::TIntermTyped"* %52(%"class.sh::TIntermTyped"* %1) #6
  %54 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %55 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %54, i64 248) #6
  %56 = bitcast %"class.sh::TVector.170"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #6
  %57 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %58 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %57, i64 4) #6
  %59 = bitcast i8* %58 to i32*
  %60 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.sh::TVector.170"* %5 to i8**
  store i8* %58, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 4
  %63 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast i32** %63 to i8**
  store i8* %62, i8** %64, align 8
  store i32 1, i32* %59, align 4
  %65 = bitcast i8* %55 to %"class.sh::TIntermSwizzle"*
  %66 = bitcast i32** %60 to i64*
  %67 = ptrtoint i8* %62 to i64
  store i64 %67, i64* %66, align 8
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %65, %"class.sh::TIntermTyped"* %53, %"class.sh::TVector.170"* nonnull dereferenceable(24) %5) #6
  %68 = bitcast i8* %55 to %"class.sh::TIntermTyped"*
  %69 = getelementptr inbounds %"class.sh::TVector.170", %"class.sh::TVector.170"* %5, i64 0, i32 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %40
  %73 = ptrtoint i32* %70 to i64
  store i64 %73, i64* %66, align 8
  br label %74

74:                                               ; preds = %40, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #6
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %44, i8 zeroext -118, %"class.sh::TIntermTyped"* %49, %"class.sh::TIntermTyped"* %68) #6
  %75 = bitcast i8* %43 to %"class.sh::TIntermNode"*
  call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %75) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeXMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #0 {
  %11 = tail call fastcc %"class.sh::TIntermTyped"* @_ZN2sh12_GLOBAL__N_118DerivativeQuotientEPNS_12TIntermTypedES2_S2_S2_S2_(%"class.sh::TIntermTyped"* %3, %"class.sh::TIntermTyped"* %6, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %4, %"class.sh::TIntermTyped"* %9)
  %12 = tail call fastcc %"class.sh::TIntermTyped"* @_ZN2sh12_GLOBAL__N_118DerivativeQuotientEPNS_12TIntermTypedES2_S2_S2_S2_(%"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %5, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %4, %"class.sh::TIntermTyped"* %9)
  %13 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %14 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %13, i64 240) #6
  %15 = bitcast i8* %14 to %"class.sh::TIntermBinary"*
  %16 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %17 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %16, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %15, i8 zeroext 15, %"class.sh::TIntermTyped"* %11, %"class.sh::TIntermTyped"* %17) #6
  %18 = bitcast i8* %14 to %"class.sh::TIntermTyped"*
  %19 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %20 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %19, i64 240) #6
  %21 = bitcast i8* %20 to %"class.sh::TIntermBinary"*
  %22 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %23 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %22, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %21, i8 zeroext 15, %"class.sh::TIntermTyped"* %12, %"class.sh::TIntermTyped"* %23) #6
  %24 = bitcast i8* %20 to %"class.sh::TIntermTyped"*
  %25 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %26 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %25, i64 240) #6
  %27 = bitcast i8* %26 to %"class.sh::TIntermBinary"*
  %28 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %29 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %29, i64 23
  %31 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %30, align 8
  %32 = tail call %"class.sh::TIntermTyped"* %31(%"class.sh::TIntermTyped"* %7) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %27, i8 zeroext -118, %"class.sh::TIntermTyped"* %32, %"class.sh::TIntermTyped"* %18) #6
  %33 = bitcast i8* %26 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %33) #6
  %34 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %35 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %34, i64 240) #6
  %36 = bitcast i8* %35 to %"class.sh::TIntermBinary"*
  %37 = bitcast %"class.sh::TIntermTyped"* %8 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %38 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %38, i64 23
  %40 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %39, align 8
  %41 = tail call %"class.sh::TIntermTyped"* %40(%"class.sh::TIntermTyped"* %8) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %36, i8 zeroext -118, %"class.sh::TIntermTyped"* %41, %"class.sh::TIntermTyped"* %24) #6
  %42 = bitcast i8* %35 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %42) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeYMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #0 {
  %11 = tail call fastcc %"class.sh::TIntermTyped"* @_ZN2sh12_GLOBAL__N_118DerivativeQuotientEPNS_12TIntermTypedES2_S2_S2_S2_(%"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %4, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %5, %"class.sh::TIntermTyped"* %9)
  %12 = tail call fastcc %"class.sh::TIntermTyped"* @_ZN2sh12_GLOBAL__N_118DerivativeQuotientEPNS_12TIntermTypedES2_S2_S2_S2_(%"class.sh::TIntermTyped"* %3, %"class.sh::TIntermTyped"* %6, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %5, %"class.sh::TIntermTyped"* %9)
  %13 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %14 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %13, i64 240) #6
  %15 = bitcast i8* %14 to %"class.sh::TIntermBinary"*
  %16 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %17 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %16, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %15, i8 zeroext 15, %"class.sh::TIntermTyped"* %11, %"class.sh::TIntermTyped"* %17) #6
  %18 = bitcast i8* %14 to %"class.sh::TIntermTyped"*
  %19 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %20 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %19, i64 240) #6
  %21 = bitcast i8* %20 to %"class.sh::TIntermBinary"*
  %22 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %23 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %22, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %21, i8 zeroext 15, %"class.sh::TIntermTyped"* %12, %"class.sh::TIntermTyped"* %23) #6
  %24 = bitcast i8* %20 to %"class.sh::TIntermTyped"*
  %25 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %26 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %25, i64 240) #6
  %27 = bitcast i8* %26 to %"class.sh::TIntermBinary"*
  %28 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %29 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %29, i64 23
  %31 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %30, align 8
  %32 = tail call %"class.sh::TIntermTyped"* %31(%"class.sh::TIntermTyped"* %7) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %27, i8 zeroext -118, %"class.sh::TIntermTyped"* %32, %"class.sh::TIntermTyped"* %18) #6
  %33 = bitcast i8* %26 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %33) #6
  %34 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %35 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %34, i64 240) #6
  %36 = bitcast i8* %35 to %"class.sh::TIntermBinary"*
  %37 = bitcast %"class.sh::TIntermTyped"* %8 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %38 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %38, i64 23
  %40 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %39, align 8
  %41 = tail call %"class.sh::TIntermTyped"* %40(%"class.sh::TIntermTyped"* %8) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %36, i8 zeroext -118, %"class.sh::TIntermTyped"* %41, %"class.sh::TIntermTyped"* %24) #6
  %42 = bitcast i8* %35 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %42) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2sh12_GLOBAL__N_125TransformDerivativeZMajorEPNS_12TIntermBlockEPNS_12TSymbolTableEPNS_12TIntermTypedES6_S6_S6_S6_S6_S6_S6_S6_(%"class.sh::TIntermBlock"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #0 {
  %11 = tail call fastcc %"class.sh::TIntermTyped"* @_ZN2sh12_GLOBAL__N_118DerivativeQuotientEPNS_12TIntermTypedES2_S2_S2_S2_(%"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %4, %"class.sh::TIntermTyped"* %3, %"class.sh::TIntermTyped"* %6, %"class.sh::TIntermTyped"* %9)
  %12 = tail call fastcc %"class.sh::TIntermTyped"* @_ZN2sh12_GLOBAL__N_118DerivativeQuotientEPNS_12TIntermTypedES2_S2_S2_S2_(%"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %5, %"class.sh::TIntermTyped"* %3, %"class.sh::TIntermTyped"* %6, %"class.sh::TIntermTyped"* %9)
  %13 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %14 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %13, i64 240) #6
  %15 = bitcast i8* %14 to %"class.sh::TIntermBinary"*
  %16 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %17 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %16, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %15, i8 zeroext 15, %"class.sh::TIntermTyped"* %11, %"class.sh::TIntermTyped"* %17) #6
  %18 = bitcast i8* %14 to %"class.sh::TIntermTyped"*
  %19 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %20 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %19, i64 240) #6
  %21 = bitcast i8* %20 to %"class.sh::TIntermBinary"*
  %22 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateFloatNodeEf(float 5.000000e-01) #6
  %23 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %22, i64 0, i32 0, i32 0
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %21, i8 zeroext 15, %"class.sh::TIntermTyped"* %12, %"class.sh::TIntermTyped"* %23) #6
  %24 = bitcast i8* %20 to %"class.sh::TIntermTyped"*
  %25 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %26 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %25, i64 240) #6
  %27 = bitcast i8* %26 to %"class.sh::TIntermBinary"*
  %28 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %29 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %29, i64 23
  %31 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %30, align 8
  %32 = tail call %"class.sh::TIntermTyped"* %31(%"class.sh::TIntermTyped"* %7) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %27, i8 zeroext -118, %"class.sh::TIntermTyped"* %32, %"class.sh::TIntermTyped"* %18) #6
  %33 = bitcast i8* %26 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %33) #6
  %34 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %35 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %34, i64 240) #6
  %36 = bitcast i8* %35 to %"class.sh::TIntermBinary"*
  %37 = bitcast %"class.sh::TIntermTyped"* %8 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %38 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %38, i64 23
  %40 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %39, align 8
  %41 = tail call %"class.sh::TIntermTyped"* %40(%"class.sh::TIntermTyped"* %8) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %36, i8 zeroext -118, %"class.sh::TIntermTyped"* %41, %"class.sh::TIntermTyped"* %24) #6
  %42 = bitcast i8* %35 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %0, %"class.sh::TIntermNode"* %42) #6
  ret void
}

declare void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i8 zeroext, %"class.sh::TType"*, i1 zeroext) unnamed_addr #2

declare void @_ZN2sh9TFunction12addParameterEPKNS_9TVariableE(%"class.sh::TFunction"*, %"class.sh::TVariable"*) local_unnamed_addr #2

declare %"class.sh::TIntermFunctionDefinition"* @_ZN2sh36CreateInternalFunctionDefinitionNodeERKNS_9TFunctionEPNS_12TIntermBlockE(%"class.sh::TFunction"* dereferenceable(80), %"class.sh::TIntermBlock"*) local_unnamed_addr #2

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.sh::TIntermTyped"* @_ZN2sh12_GLOBAL__N_118DerivativeQuotientEPNS_12TIntermTypedES2_S2_S2_S2_(%"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #0 {
  %6 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %7 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %6, i64 240) #6
  %8 = bitcast i8* %7 to %"class.sh::TIntermBinary"*
  %9 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %10 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %9, i64 240) #6
  %11 = bitcast i8* %10 to %"class.sh::TIntermBinary"*
  %12 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %13 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %12, i64 240) #6
  %14 = bitcast i8* %13 to %"class.sh::TIntermBinary"*
  %15 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %16 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %16, i64 23
  %18 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %17, align 8
  %19 = tail call %"class.sh::TIntermTyped"* %18(%"class.sh::TIntermTyped"* %1) #6
  %20 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %21 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %21, i64 23
  %23 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %22, align 8
  %24 = tail call %"class.sh::TIntermTyped"* %23(%"class.sh::TIntermTyped"* %2) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %14, i8 zeroext 15, %"class.sh::TIntermTyped"* %19, %"class.sh::TIntermTyped"* %24) #6
  %25 = bitcast i8* %13 to %"class.sh::TIntermTyped"*
  %26 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %27 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %26, i64 240) #6
  %28 = bitcast i8* %27 to %"class.sh::TIntermBinary"*
  %29 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %30 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %30, i64 23
  %32 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %31, align 8
  %33 = tail call %"class.sh::TIntermTyped"* %32(%"class.sh::TIntermTyped"* %3) #6
  %34 = bitcast %"class.sh::TIntermTyped"* %0 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %35 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %35, i64 23
  %37 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %36, align 8
  %38 = tail call %"class.sh::TIntermTyped"* %37(%"class.sh::TIntermTyped"* %0) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %28, i8 zeroext 15, %"class.sh::TIntermTyped"* %33, %"class.sh::TIntermTyped"* %38) #6
  %39 = bitcast i8* %27 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %11, i8 zeroext 14, %"class.sh::TIntermTyped"* %25, %"class.sh::TIntermTyped"* %39) #6
  %40 = bitcast i8* %10 to %"class.sh::TIntermTyped"*
  %41 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #6
  %42 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %41, i64 240) #6
  %43 = bitcast i8* %42 to %"class.sh::TIntermBinary"*
  %44 = bitcast %"class.sh::TIntermTyped"* %4 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %45 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %45, i64 23
  %47 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %46, align 8
  %48 = tail call %"class.sh::TIntermTyped"* %47(%"class.sh::TIntermTyped"* %4) #6
  %49 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %44, align 8
  %50 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %49, i64 23
  %51 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %50, align 8
  %52 = tail call %"class.sh::TIntermTyped"* %51(%"class.sh::TIntermTyped"* %4) #6
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %43, i8 zeroext 15, %"class.sh::TIntermTyped"* %48, %"class.sh::TIntermTyped"* %52) #6
  %53 = bitcast i8* %42 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %8, i8 zeroext 15, %"class.sh::TIntermTyped"* %40, %"class.sh::TIntermTyped"* %53) #6
  %54 = bitcast i8* %7 to %"class.sh::TIntermTyped"*
  ret %"class.sh::TIntermTyped"* %54
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #6, !range !77
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !78

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #6
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #6
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #6
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #6, !range !77
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #13
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #6
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %100, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %96
  br i1 %24, label %100, label %99

28:                                               ; preds = %25, %96
  %29 = phi i64 [ 0, %25 ], [ %97, %96 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %96

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29
  %35 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %26, %36
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = add i64 %36, %42
  %44 = zext i64 %43 to i128
  %45 = mul nuw i128 %44, 11376068507788127593
  %46 = lshr i128 %45, 64
  %47 = xor i128 %46, %45
  %48 = trunc i128 %47 to i64
  %49 = load i8*, i8** %3, align 8
  %50 = load i64, i64* %7, align 8
  %51 = lshr i64 %48, 7
  %52 = ptrtoint i8* %49 to i64
  %53 = lshr i64 %52, 12
  %54 = xor i64 %51, %53
  %55 = and i64 %54, %50
  %56 = getelementptr inbounds i8, i8* %49, i64 %55
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1
  %59 = icmp slt <16 x i8> %58, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %60 = bitcast <16 x i1> %59 to i16
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %33, %62
  %63 = phi i64 [ %67, %62 ], [ %55, %33 ]
  %64 = phi i64 [ %65, %62 ], [ 0, %33 ]
  %65 = add i64 %64, 16
  %66 = add i64 %65, %63
  %67 = and i64 %66, %50
  %68 = getelementptr inbounds i8, i8* %49, i64 %67
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1
  %71 = icmp slt <16 x i8> %70, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %72 = bitcast <16 x i1> %71 to i16
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %33
  %75 = phi i64 [ %55, %33 ], [ %67, %62 ]
  %76 = phi i16 [ %60, %33 ], [ %72, %62 ]
  %77 = zext i16 %76 to i32
  %78 = tail call i32 @llvm.cttz.i32(i32 %77, i1 false) #6, !range !77
  %79 = zext i32 %78 to i64
  %80 = add i64 %75, %79
  %81 = and i64 %80, %50
  %82 = trunc i128 %47 to i8
  %83 = and i8 %82, 127
  %84 = getelementptr inbounds i8, i8* %49, i64 %81
  store i8 %83, i8* %84, align 1
  %85 = load i8*, i8** %3, align 8
  %86 = add i64 %81, -15
  %87 = load i64, i64* %7, align 8
  %88 = and i64 %86, %87
  %89 = and i64 %87, 15
  %90 = add i64 %88, %89
  %91 = getelementptr inbounds i8, i8* %85, i64 %90
  store i8 %83, i8* %91, align 1
  %92 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %93 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %92, i64 %81
  %94 = bitcast %"union.absl::container_internal::map_slot_type"* %93 to i8*
  %95 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #6
  br label %96

96:                                               ; preds = %28, %74
  %97 = add nuw i64 %29, 1
  %98 = icmp eq i64 %97, %8
  br i1 %98, label %27, label %28

99:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #13
  br label %100

100:                                              ; preds = %2, %27, %99
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #6
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %128, %1
  %12 = phi i64 [ 0, %1 ], [ %130, %128 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %128
  %20 = phi i64 [ %6, %8 ], [ %131, %128 ]
  %21 = phi i64 [ 0, %8 ], [ %130, %128 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %128

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %28, i64 %21, i32 0
  %30 = bitcast %"struct.std::__1::pair"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = add i64 %31, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = lshr i64 %43, 7
  %45 = lshr i64 %27, 12
  %46 = xor i64 %44, %45
  %47 = and i64 %46, %20
  %48 = getelementptr inbounds i8, i8* %22, i64 %47
  %49 = bitcast i8* %48 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 1
  %51 = icmp slt <16 x i8> %50, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %52 = bitcast <16 x i1> %51 to i16
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %26, %54
  %55 = phi i64 [ %59, %54 ], [ %47, %26 ]
  %56 = phi i64 [ %57, %54 ], [ 0, %26 ]
  %57 = add i64 %56, 16
  %58 = add i64 %57, %55
  %59 = and i64 %58, %20
  %60 = getelementptr inbounds i8, i8* %22, i64 %59
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1
  %63 = icmp slt <16 x i8> %62, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %54, label %66

66:                                               ; preds = %54, %26
  %67 = phi i64 [ %47, %26 ], [ %59, %54 ]
  %68 = phi i16 [ %52, %26 ], [ %64, %54 ]
  %69 = zext i16 %68 to i32
  %70 = tail call i32 @llvm.cttz.i32(i32 %69, i1 false) #6, !range !77
  %71 = zext i32 %70 to i64
  %72 = add i64 %67, %71
  %73 = and i64 %72, %20
  %74 = sub i64 %73, %47
  %75 = sub i64 %21, %47
  %76 = xor i64 %74, %75
  %77 = and i64 %76, %20
  %78 = icmp ult i64 %77, 16
  br i1 %78, label %79, label %89, !prof !78

79:                                               ; preds = %66
  %80 = trunc i128 %42 to i8
  %81 = and i8 %80, 127
  store i8 %81, i8* %23, align 1
  %82 = load i8*, i8** %2, align 8
  %83 = add i64 %21, -15
  %84 = load i64, i64* %4, align 8
  %85 = and i64 %84, %83
  %86 = and i64 %84, 15
  %87 = add i64 %85, %86
  %88 = getelementptr inbounds i8, i8* %82, i64 %87
  store i8 %81, i8* %88, align 1
  br label %128

89:                                               ; preds = %66
  %90 = getelementptr inbounds i8, i8* %22, i64 %73
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, -128
  %93 = trunc i128 %42 to i8
  %94 = and i8 %93, 127
  store i8 %94, i8* %90, align 1
  %95 = load i8*, i8** %2, align 8
  %96 = add i64 %73, -15
  %97 = load i64, i64* %4, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %94, i8* %101, align 1
  %102 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  br i1 %92, label %103, label %117

103:                                              ; preds = %89
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %102, i64 %73
  %105 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %102, i64 %21
  %106 = bitcast %"union.absl::container_internal::map_slot_type"* %104 to i8*
  %107 = bitcast %"union.absl::container_internal::map_slot_type"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #6
  %108 = load i8*, i8** %2, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 %21
  store i8 -128, i8* %109, align 1
  %110 = load i8*, i8** %2, align 8
  %111 = add i64 %21, -15
  %112 = load i64, i64* %4, align 8
  %113 = and i64 %112, %111
  %114 = and i64 %112, 15
  %115 = add i64 %113, %114
  %116 = getelementptr inbounds i8, i8* %110, i64 %115
  store i8 -128, i8* %116, align 1
  br label %128

117:                                              ; preds = %89
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %102, i64 %21
  %119 = bitcast %"union.absl::container_internal::map_slot_type"* %118 to i8*
  %120 = bitcast %"union.absl::container_internal::map_slot_type"* %118 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 8
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %102, i64 %73
  %123 = bitcast %"union.absl::container_internal::map_slot_type"* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %123, i64 16, i1 false) #6
  %124 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %125 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %124, i64 %73
  %126 = bitcast %"union.absl::container_internal::map_slot_type"* %125 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %126, align 8
  %127 = add i64 %21, -1
  br label %128

128:                                              ; preds = %79, %117, %103, %19
  %129 = phi i64 [ %21, %19 ], [ %21, %79 ], [ %21, %103 ], [ %127, %117 ]
  %130 = add i64 %129, 1
  %131 = load i64, i64* %4, align 8
  %132 = icmp eq i64 %130, %131
  br i1 %132, label %11, label %19
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2sh16TIntermTraverserD2Ev(%"class.sh::TIntermTraverser"*) unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !9}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !9}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !9}
!59 = distinct !{!59, !11}
!60 = distinct !{!60, !9}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !9}
!67 = distinct !{!67, !11}
!68 = distinct !{!68, !9}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !9}
!75 = distinct !{!75, !11}
!76 = distinct !{!76, !9}
!77 = !{i32 0, i32 33}
!78 = !{!"branch_weights", i32 2000, i32 1}
!79 = !{!"branch_weights", i32 1, i32 2000}
!80 = !{!81, !83}
!81 = distinct !{!81, !82, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS7_SA_SB_SH_E8iteratorEbEEOT_DpOT0_: argument 0"}
!82 = distinct !{!82, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE16try_emplace_implIRSF_JEEENSE_INS0_12raw_hash_setIS7_SA_SB_SH_E8iteratorEbEEOT_DpOT0_"}
!83 = distinct !{!83, !84, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE11try_emplaceIS6_JELi0EEENSE_INS0_12raw_hash_setIS7_SA_SB_SH_E8iteratorEbEERKT_DpOT0_: argument 0"}
!84 = distinct !{!84, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIPKN2sh9TVariableES6_EENS0_6HashEqIS6_vE4HashENS9_2EqENSt3__19allocatorINSC_4pairIKS6_S6_EEEEE11try_emplaceIS6_JELi0EEENSE_INS0_12raw_hash_setIS7_SA_SB_SH_E8iteratorEbEERKT_DpOT0_"}
