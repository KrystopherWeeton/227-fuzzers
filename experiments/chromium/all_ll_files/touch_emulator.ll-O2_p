; ModuleID = '../../content/browser/renderer_host/input/touch_emulator.cc'
source_filename = "../../content/browser/renderer_host/input/touch_emulator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.scoped_refptr = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::Point" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.34 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.27, i32, i32 }
%class.sk_sp.27 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.29" }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.34 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%union.anon.41 = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon.46 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"struct.ui::GestureDetector::Config" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", float, float, float, float, i8, [3 x i8], float, float, i8, [3 x i8], float, [4 x i8], %"class.base::TimeDelta", i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"struct.ui::ScaleGestureDetector::Config" = type <{ float, float, float, i8, [3 x i8] }>
%"class.content::TouchEmulator" = type { %"class.ui::GestureProviderClient", %"class.content::TouchEmulatorClient"*, %"class.std::__1::unique_ptr", i32, i32, i8, i8, %"class.content::WebCursor", %"class.content::WebCursor", %"class.content::WebCursor", %"class.gfx::SizeF", i8, %"class.base::TimeTicks", i8, i8, i8, %"class.blink::WebTouchEvent", i32, i32, %"class.content::RenderWidgetHostViewBase"*, i32, i8, %"class.gfx::PointF", float, i8, %"class.std::__1::queue.102" }
%"class.ui::GestureProviderClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::FilteredGestureProvider"* }
%"class.ui::FilteredGestureProvider" = type { %"class.ui::TouchDispositionGestureFilterClient", %"class.ui::GestureProviderClient", %"class.ui::GestureProviderClient"*, %"class.std::__1::unique_ptr.0", %"class.ui::TouchDispositionGestureFilter", i8, i8, [6 x i8], %"class.ui::GestureEventDataPacket" }
%"class.ui::TouchDispositionGestureFilterClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.ui::GestureProvider"* }
%"class.ui::GestureProvider" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.ui::GestureTouchUMAHistogram", i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.ui::GestureProvider::GestureListenerImpl"* }
%"class.ui::GestureProvider::GestureListenerImpl" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.ui::MotionEvent"* }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.ui::GestureTouchUMAHistogram" = type <{ i32, %"class.gfx::Point", float, i8, [3 x i8] }>
%"class.ui::TouchDispositionGestureFilter" = type { %"class.ui::TouchDispositionGestureFilterClient"*, %"class.std::__1::queue", %"class.ui::TouchDispositionGestureFilter::GestureHandlingState", i32, i32, i8, i8, i8, i8 }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::queue.16"*, i64 }
%"class.std::__1::queue.16" = type opaque
%"class.ui::TouchDispositionGestureFilter::GestureHandlingState" = type { i8, i8, %"struct.ui::BitSet32", %"struct.ui::BitSet32" }
%"struct.ui::BitSet32" = type { i32 }
%"class.ui::GestureEventDataPacket" = type <{ %"class.base::TimeTicks", %"class.base::StackVector", %"class.gfx::PointF", %"class.gfx::PointF", i32, i32, i32, [4 x i8] }>
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<ui::GestureEventData, 5>::Source" = type { [440 x i8], i8, [7 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"*, %"class.std::__1::__compressed_pair.21" }
%"struct.ui::GestureEventData" = type { %"struct.ui::GestureEventDetails", i32, i32, %"class.base::TimeTicks", float, float, float, float, i32, i32 }
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.ui::GestureEventData"* }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.base::StackAllocator" }
%"class.content::WebCursor" = type { %"class.ui::Cursor", float, i32, %"class.gfx::Size", %"class.absl::optional" }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr, float, %"class.gfx::Point", %class.SkBitmap }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.ui::Cursor" }
%"class.gfx::SizeF" = type { float, float }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.content::RenderWidgetHostViewBase" = type { %"class.content::RenderWidgetHostView", %"class.content::RenderWidgetHostImpl"*, i32, %"class.display::DisplayList", i8, i8, %"class.content::TextInputManager"*, %"class.absl::optional.60", %"class.absl::optional.60", i8, %"class.content::RenderWidgetHostViewBase::TooltipObserver"*, %"class.base::ObserverList.65", %"class.absl::optional.76", %"class.mojo::StructPtr", i8, i8, %"class.base::WeakPtrFactory" }
%"class.content::RenderWidgetHostView" = type { i32 (...)** }
%"class.content::RenderWidgetHostImpl" = type opaque
%"class.display::DisplayList" = type { %"class.std::__1::vector.35", i64, i64, %"class.base::ObserverList" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair.47" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional.37", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.42" }
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, %union.anon.46 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.display::Display"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.52", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.55" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.29" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.content::TextInputManager" = type opaque
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { i32 }
%"class.content::RenderWidgetHostViewBase::TooltipObserver" = type { i32 (...)** }
%"class.base::ObserverList.65" = type <{ %"class.std::__1::vector.66", %"class.base::LinkedList.73", i64, i32, [4 x i8] }>
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.68" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.73" = type { %"class.base::LinkNode.74" }
%"class.base::LinkNode.74" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.76" = type { %"class.absl::optional_internal::optional_data.77" }
%"class.absl::optional_internal::optional_data.77" = type { %"class.absl::optional_internal::optional_data_base.78" }
%"class.absl::optional_internal::optional_data_base.78" = type { %"class.absl::optional_internal::optional_data_dtor_base.79" }
%"class.absl::optional_internal::optional_data_dtor_base.79" = type { i8, [7 x i8], %union.anon.80 }
%union.anon.80 = type { %"class.blink::WebGestureEvent" }
%"class.blink::WebGestureEvent" = type <{ %"class.blink::WebInputEvent", i8, [3 x i8], i32, i32, [4 x i8], %union.anon.81, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>
%union.anon.81 = type { %struct.anon.87 }
%struct.anon.87 = type { i64, float, float, i32, i8, i32, i8, i8, i8, i8 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::mojom::RecordContentToVisibleTimeRequest"* }
%"class.blink::mojom::RecordContentToVisibleTimeRequest" = type <{ %"class.base::TimeTicks", i8, i8, i8, i8, [4 x i8] }>
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.101 }
%class.scoped_refptr.101 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::queue.102" = type { %"class.base::circular_deque.103" }
%"class.base::circular_deque.103" = type { %"class.base::internal::VectorBuffer.104", i64, i64 }
%"class.base::internal::VectorBuffer.104" = type { %"class.base::OnceCallback"*, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.106", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::TouchEmulatorClient" = type { i32 (...)** }
%"struct.ui::GestureProvider::Config" = type <{ %"class.display::Display", %"struct.ui::GestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config", i8, i8, [2 x i8], float, float, [4 x i8] }>
%"class.content::ContentClient" = type { i32 (...)**, %"class.content::ContentBrowserClient"*, %"class.content::ContentGpuClient"*, %"class.content::ContentRendererClient"*, %"class.content::ContentUtilityClient"* }
%"class.content::ContentBrowserClient" = type opaque
%"class.content::ContentGpuClient" = type opaque
%"class.content::ContentRendererClient" = type opaque
%"class.content::ContentUtilityClient" = type opaque
%"class.gfx::Image" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.blink::WebMouseEvent" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32, [4 x i8] }>
%"class.content::MotionEventWeb" = type <{ %"class.ui::MotionEvent", %"class.blink::WebTouchEvent", i32, i32, i32, [4 x i8] }>
%"class.blink::WebMouseWheelEvent" = type <{ %"class.blink::WebMouseEvent.base", float, float, float, float, float, float, i32, i32, i32, i32, i32, i8, i8, [6 x i8] }>
%"class.blink::WebMouseEvent.base" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32 }>
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%struct.anon.92 = type { i8, i8, float }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.110 }
%union.anon.110 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink13WebTouchEventC2Ev = comdat any

$_ZN7content9WebCursoraSERKS0_ = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_ = comdat any

$_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_ = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm = comdat any

$_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv = comdat any

@_ZTVN7content13TouchEmulatorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::TouchEmulator"*)* @_ZN7content13TouchEmulatorD2Ev to i8*), i8* bitcast (void (%"class.content::TouchEmulator"*)* @_ZN7content13TouchEmulatorD0Ev to i8*), i8* bitcast (void (%"class.content::TouchEmulator"*, %"struct.ui::GestureEventData"*)* @_ZN7content13TouchEmulator14OnGestureEventERKN2ui16GestureEventDataE to i8*), i8* bitcast (i1 (%"class.content::TouchEmulator"*)* @_ZNK7content13TouchEmulator30RequiresDoubleTapGestureEventsEv to i8*)] }, align 8
@__const._ZN7content13TouchEmulator22InitCursorFromResourceEPNS_9WebCursorEfi.cursor_info = private unnamed_addr constant { i32, [4 x i8], %class.scoped_refptr, float, %"class.gfx::Point", [4 x i8], %class.SkBitmap } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr { %"class.ui::PlatformCursor"* inttoptr (i64 -6148914691236517206 to %"class.ui::PlatformCursor"*) }, float 0xFFFFFFFFE0000000, %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.27 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.34 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } } }, align 8
@__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event = private unnamed_addr constant <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }> <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } } { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } { i64 -6148914691236517206, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86 } }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5blink13WebTouchEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@.str = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@__const._ZN7content12_GLOBAL__N_132GetEmulatorGestureProviderConfigEN2ui25GestureProviderConfigTypeENS_13TouchEmulator4ModeE.config = private unnamed_addr constant <{ { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.41 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.46 } } } } }, i32, i32, i8, [3 x i8], i32 }, %"struct.ui::GestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config", i8, i8, [2 x i8], float, float, [4 x i8] }> <{ { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.41 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.46 } } } } }, i32, i32, i8, [3 x i8], i32 } { i64 -6148914691236517206, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.41 } } } } { { { { i8, [3 x i8], %union.anon.41 } } } { { { i8, [3 x i8], %union.anon.41 } } { { i8, [3 x i8], %union.anon.41 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.41 { i32 -1431655766 } } } } }, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.46 } } } } } { [6 x %"class.gfx::ColorSpace"] [%"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }], [6 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.46 } } } } { { { { i8, [7 x i8], %union.anon.46 } } } { { { i8, [7 x i8], %union.anon.46 } } { { i8, [7 x i8], %union.anon.46 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.46 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, %"struct.ui::GestureDetector::Config" <{ %"class.base::TimeDelta" { i64 -6148914691236517206 }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeDelta" { i64 -6148914691236517206 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"struct.ui::ScaleGestureDetector::Config" <{ float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5blink15WebGestureEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@.str.5 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@switch.table._ZN7content13TouchEmulator22FillTouchEventAndPointERKN5blink13WebMouseEventERKN3gfx6PointFE = private unnamed_addr constant [3 x i32] [i32 28, i32 30, i32 29], align 4

@_ZN7content13TouchEmulatorC1EPNS_19TouchEmulatorClientEf = hidden unnamed_addr alias void (%"class.content::TouchEmulator"*, %"class.content::TouchEmulatorClient"*, float), void (%"class.content::TouchEmulator"*, %"class.content::TouchEmulatorClient"*, float)* @_ZN7content13TouchEmulatorC2EPNS_19TouchEmulatorClientEf
@_ZN7content13TouchEmulatorD1Ev = hidden unnamed_addr alias void (%"class.content::TouchEmulator"*), void (%"class.content::TouchEmulator"*)* @_ZN7content13TouchEmulatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulatorC2EPNS_19TouchEmulatorClientEf(%"class.content::TouchEmulator"*, %"class.content::TouchEmulatorClient"*, float) unnamed_addr #0 align 2 {
  %4 = alloca %"class.content::WebCursor", align 8
  %5 = alloca %"class.ui::Cursor", align 8
  %6 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content13TouchEmulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  store %"class.content::TouchEmulatorClient"* %1, %"class.content::TouchEmulatorClient"** %7, align 8
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 3
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 5
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 6
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 7
  tail call void @_ZN7content9WebCursorC1Ev(%"class.content::WebCursor"* %13) #15
  %14 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  tail call void @_ZN7content9WebCursorC1Ev(%"class.content::WebCursor"* %14) #15
  %15 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  tail call void @_ZN7content9WebCursorC1Ev(%"class.content::WebCursor"* %15) #15
  %16 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 10
  %17 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %16, i64 0, i32 0
  store float 0.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 10, i32 1
  store float 0.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  store i8 0, i8* %20, align 2
  %21 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16
  tail call void @_ZN5blink13WebTouchEventC2Ev(%"class.blink::WebTouchEvent"* %21)
  %22 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 17
  %23 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22, i32 1
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25
  %26 = bitcast %"class.std::__1::queue.102"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #15
  %27 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 11
  store i8 0, i8* %27, align 8
  store i64 0, i64* %19, align 8
  %28 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 13
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 23
  %31 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 21, i1 false)
  store float 1.000000e+00, float* %30, align 8
  %32 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  store i8 0, i8* %32, align 4
  %33 = fcmp ogt float %2, 1.500000e+00
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %12, align 1
  %35 = select i1 %33, float 2.000000e+00, float 1.000000e+00
  %36 = select i1 %33, i32 21933, i32 21932
  %37 = tail call <2 x float> @_ZN7content13TouchEmulator22InitCursorFromResourceEPNS_9WebCursorEfi(%"class.content::TouchEmulator"* undef, %"class.content::WebCursor"* %14, float %35, i32 %36) #15
  %38 = bitcast %"class.gfx::SizeF"* %16 to <2 x float>*
  store <2 x float> %37, <2 x float>* %38, align 8
  %39 = select i1 %33, i32 21931, i32 21930
  %40 = tail call <2 x float> @_ZN7content13TouchEmulator22InitCursorFromResourceEPNS_9WebCursorEfi(%"class.content::TouchEmulator"* undef, %"class.content::WebCursor"* %15, float %35, i32 %39) #15
  %41 = bitcast %"class.content::WebCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %41) #15
  %42 = bitcast %"class.ui::Cursor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %42) #15
  call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* nonnull %5, i32 0) #15
  call void @_ZN7content9WebCursorC1ERKN2ui6CursorE(%"class.content::WebCursor"* nonnull %4, %"class.ui::Cursor"* nonnull dereferenceable(88) %5) #15
  %43 = call dereferenceable(200) %"class.content::WebCursor"* @_ZN7content9WebCursoraSERKS0_(%"class.content::WebCursor"* %13, %"class.content::WebCursor"* nonnull dereferenceable(200) %4) #15
  call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* nonnull %4) #15
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %41) #15
  ret void
}

declare void @_ZN7content9WebCursorC1Ev(%"class.content::WebCursor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebTouchEventC2Ev(%"class.blink::WebTouchEvent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %3, align 8
  %4 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 0, i32 4
  store i64 0, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, <4 x i32>* %8, align 8
  %9 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 1
  store float 0x7FF8000000000000, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 2
  %11 = bitcast i32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 16, i1 false) #15
  %12 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 6
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 7
  %14 = bitcast i32* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 13, i1 false) #15
  %15 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 0, i32 0, i32 11
  %16 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 1
  %17 = bitcast %"class.gfx::PointF"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %16, align 4
  %18 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 2
  %19 = bitcast i32* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false) #15
  %20 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 6
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 7
  %22 = bitcast i32* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 13, i1 false) #15
  %23 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 1, i32 0, i32 11
  %24 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 1
  %25 = bitcast %"class.gfx::PointF"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %24, align 4
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 2
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 16, i1 false) #15
  %28 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 6
  store i32 -1, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 7
  %30 = bitcast i32* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 13, i1 false) #15
  %31 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 2, i32 0, i32 11
  %32 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 1
  %33 = bitcast %"class.gfx::PointF"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %32, align 4
  %34 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 2
  %35 = bitcast i32* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 16, i1 false) #15
  %36 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 6
  store i32 -1, i32* %36, align 4
  %37 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 7
  %38 = bitcast i32* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 13, i1 false) #15
  %39 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 3, i32 0, i32 11
  %40 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 1
  %41 = bitcast %"class.gfx::PointF"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %40, align 4
  %42 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 2
  %43 = bitcast i32* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 16, i1 false) #15
  %44 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 6
  store i32 -1, i32* %44, align 4
  %45 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 7
  %46 = bitcast i32* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 13, i1 false) #15
  %47 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 4, i32 0, i32 11
  %48 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 1
  %49 = bitcast %"class.gfx::PointF"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %48, align 4
  %50 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 2
  %51 = bitcast i32* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 16, i1 false) #15
  %52 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 6
  store i32 -1, i32* %52, align 4
  %53 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 7
  %54 = bitcast i32* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 13, i1 false) #15
  %55 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 5, i32 0, i32 11
  %56 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 1
  %57 = bitcast %"class.gfx::PointF"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %56, align 4
  %58 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 2
  %59 = bitcast i32* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 16, i1 false) #15
  %60 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 6
  store i32 -1, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 7
  %62 = bitcast i32* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 13, i1 false) #15
  %63 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 6, i32 0, i32 11
  %64 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 1
  %65 = bitcast %"class.gfx::PointF"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %64, align 4
  %66 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 2
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 16, i1 false) #15
  %68 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 6
  store i32 -1, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 7
  %70 = bitcast i32* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 13, i1 false) #15
  %71 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 7, i32 0, i32 11
  %72 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 1
  %73 = bitcast %"class.gfx::PointF"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %72, align 4
  %74 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 2
  %75 = bitcast i32* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 16, i1 false) #15
  %76 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 6
  store i32 -1, i32* %76, align 4
  %77 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 7
  %78 = bitcast i32* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 13, i1 false) #15
  %79 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 8, i32 0, i32 11
  %80 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 1
  %81 = bitcast %"class.gfx::PointF"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %80, align 4
  %82 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 2
  %83 = bitcast i32* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 16, i1 false) #15
  %84 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 6
  store i32 -1, i32* %84, align 4
  %85 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 7
  %86 = bitcast i32* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 13, i1 false) #15
  %87 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 9, i32 0, i32 11
  %88 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 1
  %89 = bitcast %"class.gfx::PointF"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 2
  %91 = bitcast i32* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 16, i1 false) #15
  %92 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 6
  store i32 -1, i32* %92, align 4
  %93 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 7
  %94 = bitcast i32* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 13, i1 false) #15
  %95 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 10, i32 0, i32 11
  %96 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 1
  %97 = bitcast %"class.gfx::PointF"* %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %96, align 4
  %98 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 2
  %99 = bitcast i32* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %99, i8 0, i64 16, i1 false) #15
  %100 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 6
  store i32 -1, i32* %100, align 4
  %101 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 7
  %102 = bitcast i32* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 13, i1 false) #15
  %103 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 11, i32 0, i32 11
  %104 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 1
  %105 = bitcast %"class.gfx::PointF"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %104, align 4
  %106 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 2
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 16, i1 false) #15
  %108 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 6
  store i32 -1, i32* %108, align 4
  %109 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 7
  %110 = bitcast i32* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %110, i8 0, i64 13, i1 false) #15
  %111 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 12, i32 0, i32 11
  %112 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 1
  %113 = bitcast %"class.gfx::PointF"* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %113, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %112, align 4
  %114 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 2
  %115 = bitcast i32* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %115, i8 0, i64 16, i1 false) #15
  %116 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 6
  store i32 -1, i32* %116, align 4
  %117 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 7
  %118 = bitcast i32* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 13, i1 false) #15
  %119 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 13, i32 0, i32 11
  %120 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 1
  %121 = bitcast %"class.gfx::PointF"* %119 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %120, align 4
  %122 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 2
  %123 = bitcast i32* %122 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %123, i8 0, i64 16, i1 false) #15
  %124 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 6
  store i32 -1, i32* %124, align 4
  %125 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 7
  %126 = bitcast i32* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 13, i1 false) #15
  %127 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 14, i32 0, i32 11
  %128 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 1
  %129 = bitcast %"class.gfx::PointF"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %129, i8 0, i64 36, i1 false)
  store float 0x7FF8000000000000, float* %128, align 4
  %130 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 2
  %131 = bitcast i32* %130 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %131, i8 0, i64 16, i1 false) #15
  %132 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 6
  store i32 -1, i32* %132, align 4
  %133 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 7
  %134 = bitcast i32* %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %134, i8 0, i64 13, i1 false) #15
  %135 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 2, i64 15, i32 0, i32 11
  %136 = bitcast %"class.gfx::PointF"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %136, i8 0, i64 32, i1 false) #15
  %137 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 3
  %138 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %0, i64 0, i32 7
  store i32 0, i32* %138, align 4
  %139 = bitcast i32* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %139, i8 0, i64 7, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN7content13TouchEmulator10ResetStateEv(%"class.content::TouchEmulator"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 11
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 13
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 21
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 23
  store float 1.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  store i8 0, i8* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13TouchEmulator11InitCursorsEfb(%"class.content::TouchEmulator"*, float, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.content::WebCursor", align 8
  %5 = alloca %"class.ui::Cursor", align 8
  %6 = fcmp ogt float %1, 1.500000e+00
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = zext i8 %9 to i32
  %11 = icmp ne i32 %7, %10
  %12 = or i1 %11, %2
  br i1 %12, label %13, label %28

13:                                               ; preds = %3
  %14 = zext i1 %6 to i8
  store i8 %14, i8* %8, align 1
  %15 = select i1 %6, float 2.000000e+00, float 1.000000e+00
  %16 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  %17 = select i1 %6, i32 21933, i32 21932
  %18 = tail call <2 x float> @_ZN7content13TouchEmulator22InitCursorFromResourceEPNS_9WebCursorEfi(%"class.content::TouchEmulator"* undef, %"class.content::WebCursor"* %16, float %15, i32 %17)
  %19 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 10
  %20 = bitcast %"class.gfx::SizeF"* %19 to <2 x float>*
  store <2 x float> %18, <2 x float>* %20, align 8
  %21 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  %22 = select i1 %6, i32 21931, i32 21930
  %23 = tail call <2 x float> @_ZN7content13TouchEmulator22InitCursorFromResourceEPNS_9WebCursorEfi(%"class.content::TouchEmulator"* undef, %"class.content::WebCursor"* %21, float %15, i32 %22)
  %24 = bitcast %"class.content::WebCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %24) #15
  %25 = bitcast %"class.ui::Cursor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %25) #15
  call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* nonnull %5, i32 0) #15
  call void @_ZN7content9WebCursorC1ERKN2ui6CursorE(%"class.content::WebCursor"* nonnull %4, %"class.ui::Cursor"* nonnull dereferenceable(88) %5) #15
  %26 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 7
  %27 = call dereferenceable(200) %"class.content::WebCursor"* @_ZN7content9WebCursoraSERKS0_(%"class.content::WebCursor"* %26, %"class.content::WebCursor"* nonnull dereferenceable(200) %4)
  call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* nonnull %4) #15
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %24) #15
  br label %28

28:                                               ; preds = %3, %13
  %29 = phi i1 [ true, %13 ], [ false, %3 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulatorD2Ev(%"class.content::TouchEmulator"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content13TouchEmulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25
  %4 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque.103"* %4, i64 %6, i64 %8) #15
  %9 = bitcast %"class.std::__1::queue.102"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @free(i8* %10) #15
  %11 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  tail call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* %11) #15
  %12 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  tail call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* %12) #15
  %13 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 7
  tail call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* %13) #15
  %14 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %14, align 8
  store %"class.ui::FilteredGestureProvider"* null, %"class.ui::FilteredGestureProvider"** %14, align 8
  %16 = icmp eq %"class.ui::FilteredGestureProvider"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.ui::FilteredGestureProvider"* %15 to void (%"class.ui::FilteredGestureProvider"*)***
  %19 = load void (%"class.ui::FilteredGestureProvider"*)**, void (%"class.ui::FilteredGestureProvider"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.ui::FilteredGestureProvider"*)*, void (%"class.ui::FilteredGestureProvider"*)** %19, i64 2
  %21 = load void (%"class.ui::FilteredGestureProvider"*)*, void (%"class.ui::FilteredGestureProvider"*)** %20, align 8
  tail call void %21(%"class.ui::FilteredGestureProvider"* nonnull %15) #15
  br label %22

22:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulatorD0Ev(%"class.content::TouchEmulator"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content13TouchEmulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25
  %4 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque.103"* %4, i64 %6, i64 %8) #15
  %9 = bitcast %"class.std::__1::queue.102"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @free(i8* %10) #15
  %11 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  tail call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* %11) #15
  %12 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  tail call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* %12) #15
  %13 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 7
  tail call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* %13) #15
  %14 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %14, align 8
  store %"class.ui::FilteredGestureProvider"* null, %"class.ui::FilteredGestureProvider"** %14, align 8
  %16 = icmp eq %"class.ui::FilteredGestureProvider"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.ui::FilteredGestureProvider"* %15 to void (%"class.ui::FilteredGestureProvider"*)***
  %19 = load void (%"class.ui::FilteredGestureProvider"*)**, void (%"class.ui::FilteredGestureProvider"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.ui::FilteredGestureProvider"*)*, void (%"class.ui::FilteredGestureProvider"*)** %19, i64 2
  %21 = load void (%"class.ui::FilteredGestureProvider"*)*, void (%"class.ui::FilteredGestureProvider"*)** %20, align 8
  tail call void %21(%"class.ui::FilteredGestureProvider"* nonnull %15) #15
  br label %22

22:                                               ; preds = %1, %17
  %23 = bitcast %"class.content::TouchEmulator"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator6EnableENS0_4ModeEN2ui25GestureProviderConfigTypeE(%"class.content::TouchEmulator"*, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = alloca %"struct.ui::GestureProvider::Config", align 8
  %5 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %6, align 8
  %8 = icmp eq %"class.ui::FilteredGestureProvider"* %7, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %15 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %14, align 8
  %16 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 7
  %17 = bitcast %"class.content::TouchEmulatorClient"* %15 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %18 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %18, i64 4
  %20 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %19, align 8
  tail call void %20(%"class.content::TouchEmulatorClient"* %15, %"class.content::WebCursor"* dereferenceable(200) %16) #15
  %21 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %6, align 8
  %22 = icmp eq %"class.ui::FilteredGestureProvider"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %9, %13
  %24 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, %2
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = load i32, i32* %10, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %62, label %30

30:                                               ; preds = %13, %3, %27, %23
  %31 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  store i32 %1, i32* %31, align 4
  %32 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 3
  store i32 %2, i32* %32, align 8
  %33 = bitcast %"struct.ui::GestureProvider::Config"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 696, i8* nonnull %33) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 bitcast (<{ { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon.41 } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.46 } } } } }, i32, i32, i8, [3 x i8], i32 }, %"struct.ui::GestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config", i8, i8, [2 x i8], float, float, [4 x i8] }>* @__const._ZN7content12_GLOBAL__N_132GetEmulatorGestureProviderConfigEN2ui25GestureProviderConfigTypeENS_13TouchEmulator4ModeE.config to i8*), i64 696, i1 false) #15
  call void @_ZN2ui24GetGestureProviderConfigENS_25GestureProviderConfigTypeE(%"struct.ui::GestureProvider::Config"* nonnull sret %4, i32 %2) #15
  %34 = getelementptr inbounds %"struct.ui::GestureProvider::Config", %"struct.ui::GestureProvider::Config"* %4, i64 0, i32 4
  store i8 0, i8* %34, align 1, !alias.scope !3
  %35 = getelementptr inbounds %"struct.ui::GestureProvider::Config", %"struct.ui::GestureProvider::Config"* %4, i64 0, i32 1, i32 8
  store i8 0, i8* %35, align 8, !alias.scope !3
  %36 = getelementptr inbounds %"struct.ui::GestureProvider::Config", %"struct.ui::GestureProvider::Config"* %4, i64 0, i32 1, i32 12
  store i8 0, i8* %36, align 4, !alias.scope !3
  %37 = icmp eq i32 %1, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.ui::GestureProvider::Config", %"struct.ui::GestureProvider::Config"* %4, i64 0, i32 1, i32 0, i32 0
  %40 = bitcast i64* %39 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 9223372036854775807>, <2 x i64>* %40, align 8, !alias.scope !3
  br label %41

41:                                               ; preds = %30, %38
  %42 = call i8* @_Znwm(i64 632) #16
  %43 = bitcast i8* %42 to %"class.ui::FilteredGestureProvider"*
  %44 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 0
  call void @_ZN2ui23FilteredGestureProviderC1ERKNS_15GestureProvider6ConfigEPNS_21GestureProviderClientE(%"class.ui::FilteredGestureProvider"* nonnull %43, %"struct.ui::GestureProvider::Config"* nonnull dereferenceable(696) %4, %"class.ui::GestureProviderClient"* %44) #15
  %45 = ptrtoint i8* %42 to i64
  %46 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %6, align 8
  %47 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %45, i64* %47, align 8
  %48 = icmp eq %"class.ui::FilteredGestureProvider"* %46, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %41
  %50 = bitcast %"class.ui::FilteredGestureProvider"* %46 to void (%"class.ui::FilteredGestureProvider"*)***
  %51 = load void (%"class.ui::FilteredGestureProvider"*)**, void (%"class.ui::FilteredGestureProvider"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.ui::FilteredGestureProvider"*)*, void (%"class.ui::FilteredGestureProvider"*)** %51, i64 2
  %53 = load void (%"class.ui::FilteredGestureProvider"*)*, void (%"class.ui::FilteredGestureProvider"*)** %52, align 8
  call void %53(%"class.ui::FilteredGestureProvider"* nonnull %46) #15
  br label %54

54:                                               ; preds = %49, %41
  call void @_ZN2ui15GestureProvider6ConfigD1Ev(%"struct.ui::GestureProvider::Config"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 696, i8* nonnull %33) #15
  %55 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %6, align 8
  %56 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 5
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp ne i8 %57, 0
  call void @_ZN2ui23FilteredGestureProvider33SetDoubleTapSupportForPageEnabledEb(%"class.ui::FilteredGestureProvider"* %55, i1 zeroext %58) #15
  %59 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %6, align 8
  %60 = icmp ne i32 %1, 0
  call void @_ZN2ui23FilteredGestureProvider31SetMultiTouchZoomSupportEnabledEb(%"class.ui::FilteredGestureProvider"* %59, i1 zeroext %60) #15
  %61 = load i32, i32* %31, align 4
  br label %62

62:                                               ; preds = %27, %54
  %63 = phi i32 [ %1, %27 ], [ %61, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %84

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %67 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %66, align 8
  %68 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %73 = load i8, i8* %72, align 2, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  br i1 %74, label %78, label %76

76:                                               ; preds = %71, %65
  %77 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi %"class.content::WebCursor"* [ %77, %76 ], [ %75, %71 ]
  %80 = bitcast %"class.content::TouchEmulatorClient"* %67 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %81 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %81, i64 4
  %83 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %82, align 8
  call void %83(%"class.content::TouchEmulatorClient"* %67, %"class.content::WebCursor"* dereferenceable(200) %79) #15
  br label %84

84:                                               ; preds = %62, %78
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui15GestureProvider6ConfigD1Ev(%"struct.ui::GestureProvider::Config"*) unnamed_addr #4

declare void @_ZN2ui23FilteredGestureProvider33SetDoubleTapSupportForPageEnabledEb(%"class.ui::FilteredGestureProvider"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2ui23FilteredGestureProvider31SetMultiTouchZoomSupportEnabledEb(%"class.ui::FilteredGestureProvider"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator12UpdateCursorEv(%"class.content::TouchEmulator"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %24

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %7 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %6, align 8
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %13 = load i8, i8* %12, align 2, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  br i1 %14, label %18, label %16

16:                                               ; preds = %5, %11
  %17 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  br label %18

18:                                               ; preds = %11, %16
  %19 = phi %"class.content::WebCursor"* [ %17, %16 ], [ %15, %11 ]
  %20 = bitcast %"class.content::TouchEmulatorClient"* %7 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %21 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %21, i64 4
  %23 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %22, align 8
  tail call void %23(%"class.content::TouchEmulatorClient"* %7, %"class.content::WebCursor"* dereferenceable(200) %19) #15
  br label %24

24:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator7DisableEv(%"class.content::TouchEmulator"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.blink::WebTouchEvent", align 8
  %3 = alloca %"class.std::__1::queue.102", align 16
  %4 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %4, align 8
  %6 = icmp eq %"class.ui::FilteredGestureProvider"* %5, null
  br i1 %6, label %71, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 4
  %9 = bitcast %"class.blink::WebTouchEvent"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1272, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 17
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %32, label %13

13:                                               ; preds = %7
  %14 = tail call i64 @_ZN2ui15EventTimeForNowEv() #15
  %15 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16
  tail call void @_ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32 31, i64 %14, %"class.blink::WebTouchEvent"* %15) #15
  %16 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %4, align 8
  %17 = tail call %"class.ui::MotionEvent"* @_ZNK2ui23FilteredGestureProvider19GetCurrentDownEventEv(%"class.ui::FilteredGestureProvider"* %16) #15
  %18 = icmp eq %"class.ui::MotionEvent"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 0, i32 1
  %23 = bitcast float* %21 to i8*
  %24 = bitcast float* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %25 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 1
  %26 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 1
  %27 = bitcast i32* %25 to i8*
  %28 = bitcast i32* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 1232, i1 false) #15
  %29 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 19
  %30 = load %"class.content::RenderWidgetHostViewBase"*, %"class.content::RenderWidgetHostViewBase"** %29, align 8
  %31 = call zeroext i1 @_ZN7content13TouchEmulator24HandleEmulatedTouchEventEN5blink13WebTouchEventEPNS_24RenderWidgetHostViewBaseE(%"class.content::TouchEmulator"* %0, %"class.blink::WebTouchEvent"* nonnull %2, %"class.content::RenderWidgetHostViewBase"* %30) #15
  br label %32

32:                                               ; preds = %7, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 1272, i8* nonnull %9)
  %33 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %4, align 8
  store %"class.ui::FilteredGestureProvider"* null, %"class.ui::FilteredGestureProvider"** %4, align 8
  %34 = icmp eq %"class.ui::FilteredGestureProvider"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.ui::FilteredGestureProvider"* %33 to void (%"class.ui::FilteredGestureProvider"*)***
  %37 = load void (%"class.ui::FilteredGestureProvider"*)**, void (%"class.ui::FilteredGestureProvider"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.ui::FilteredGestureProvider"*)*, void (%"class.ui::FilteredGestureProvider"*)** %37, i64 2
  %39 = load void (%"class.ui::FilteredGestureProvider"*)*, void (%"class.ui::FilteredGestureProvider"*)** %38, align 8
  call void %39(%"class.ui::FilteredGestureProvider"* nonnull %33) #15
  br label %40

40:                                               ; preds = %32, %35
  %41 = bitcast %"class.std::__1::queue.102"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #15
  %42 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %3, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %3, i64 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25
  %45 = bitcast %"class.std::__1::queue.102"* %44 to <2 x i64>*
  %46 = load <2 x i64>, <2 x i64>* %45, align 8
  %47 = bitcast %"class.std::__1::queue.102"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false)
  %48 = bitcast %"class.std::__1::queue.102"* %3 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %48, align 16
  %49 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %42, align 16
  %51 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i64* %49 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %53, align 8
  store i64 %52, i64* %43, align 8
  %54 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %55 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %54, align 8
  %56 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 7
  %57 = bitcast %"class.content::TouchEmulatorClient"* %55 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %58 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %58, i64 4
  %60 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %59, align 8
  call void %60(%"class.content::TouchEmulatorClient"* %55, %"class.content::WebCursor"* dereferenceable(200) %56) #15
  %61 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 11
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 13
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 21
  store i8 0, i8* %65, align 4
  %66 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 23
  store float 1.000000e+00, float* %66, align 8
  %67 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  store i8 0, i8* %67, align 4
  %68 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %3, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque.103"* nonnull %68, i64 %50, i64 %52) #15
  %69 = bitcast %"class.std::__1::queue.102"* %3 to i8**
  %70 = load i8*, i8** %69, align 16
  call void @free(i8* %70) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #15
  br label %71

71:                                               ; preds = %1, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator11CancelTouchEv(%"class.content::TouchEmulator"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.blink::WebTouchEvent", align 8
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 17
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %7, align 8
  %9 = icmp eq %"class.ui::FilteredGestureProvider"* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %33

14:                                               ; preds = %10
  %15 = tail call i64 @_ZN2ui15EventTimeForNowEv() #15
  %16 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16
  tail call void @_ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32 31, i64 %15, %"class.blink::WebTouchEvent"* %16) #15
  %17 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %7, align 8
  %18 = tail call %"class.ui::MotionEvent"* @_ZNK2ui23FilteredGestureProvider19GetCurrentDownEventEv(%"class.ui::FilteredGestureProvider"* %17) #15
  %19 = icmp eq %"class.ui::MotionEvent"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 0, i32 1
  %24 = bitcast float* %22 to i8*
  %25 = bitcast float* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %2, i64 0, i32 1
  %27 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 1
  %28 = bitcast i32* %26 to i8*
  %29 = bitcast i32* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 1232, i1 false) #15
  %30 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 19
  %31 = load %"class.content::RenderWidgetHostViewBase"*, %"class.content::RenderWidgetHostViewBase"** %30, align 8
  %32 = call zeroext i1 @_ZN7content13TouchEmulator24HandleEmulatedTouchEventEN5blink13WebTouchEventEPNS_24RenderWidgetHostViewBaseE(%"class.content::TouchEmulator"* %0, %"class.blink::WebTouchEvent"* nonnull %2, %"class.content::RenderWidgetHostViewBase"* %31)
  br label %33

33:                                               ; preds = %6, %14, %10, %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator20SetDeviceScaleFactorEf(%"class.content::TouchEmulator"*, float) local_unnamed_addr #3 align 2 {
  %3 = tail call zeroext i1 @_ZN7content13TouchEmulator11InitCursorsEfb(%"class.content::TouchEmulator"* %0, float %1, i1 zeroext false)
  br i1 %3, label %4, label %31

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %5, align 8
  %7 = icmp eq %"class.ui::FilteredGestureProvider"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %31

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %14 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %13, align 8
  %15 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  br i1 %21, label %25, label %23

23:                                               ; preds = %18, %12
  %24 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi %"class.content::WebCursor"* [ %24, %23 ], [ %22, %18 ]
  %27 = bitcast %"class.content::TouchEmulatorClient"* %14 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %28 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %28, i64 4
  %30 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %29, align 8
  tail call void %30(%"class.content::TouchEmulatorClient"* %14, %"class.content::WebCursor"* dereferenceable(200) %26) #15
  br label %31

31:                                               ; preds = %4, %25, %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator33SetDoubleTapSupportForPageEnabledEb(%"class.content::TouchEmulator"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 5
  store i8 %3, i8* %4, align 8
  %5 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %5, align 8
  %7 = icmp eq %"class.ui::FilteredGestureProvider"* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN2ui23FilteredGestureProvider33SetDoubleTapSupportForPageEnabledEb(%"class.ui::FilteredGestureProvider"* nonnull %6, i1 zeroext %1) #15
  br label %9

9:                                                ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN7content13TouchEmulator22InitCursorFromResourceEPNS_9WebCursorEfi(%"class.content::TouchEmulator"* nocapture readnone, %"class.content::WebCursor"*, float, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.ui::Cursor", align 8
  %6 = alloca %class.SkBitmap, align 8
  %7 = alloca %"class.content::WebCursor", align 8
  %8 = alloca %"class.gfx::SizeF", align 4
  %9 = tail call %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() #15
  %10 = bitcast %"class.content::ContentClient"* %9 to %"class.gfx::Image"* (%"class.content::ContentClient"*, i32)***
  %11 = load %"class.gfx::Image"* (%"class.content::ContentClient"*, i32)**, %"class.gfx::Image"* (%"class.content::ContentClient"*, i32)*** %10, align 8
  %12 = getelementptr inbounds %"class.gfx::Image"* (%"class.content::ContentClient"*, i32)*, %"class.gfx::Image"* (%"class.content::ContentClient"*, i32)** %11, i64 11
  %13 = load %"class.gfx::Image"* (%"class.content::ContentClient"*, i32)*, %"class.gfx::Image"* (%"class.content::ContentClient"*, i32)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.gfx::Image"* %13(%"class.content::ContentClient"* %9, i32 %3) #15
  %15 = bitcast %"class.ui::Cursor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %15) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 bitcast ({ i32, [4 x i8], %class.scoped_refptr, float, %"class.gfx::Point", [4 x i8], %class.SkBitmap }* @__const._ZN7content13TouchEmulator22InitCursorFromResourceEPNS_9WebCursorEfi.cursor_info to i8*), i64 88, i1 false)
  call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* nonnull %5, i32 45) #15
  %16 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %5, i64 0, i32 2
  store float %2, float* %16, align 8
  %17 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #15
  call void @_ZNK3gfx5Image8AsBitmapEv(%class.SkBitmap* nonnull sret %6, %"class.gfx::Image"* %14) #15
  %18 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %5, i64 0, i32 4
  %19 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %18, %class.SkBitmap* nonnull dereferenceable(56) %6) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #15
  %20 = call i32 @_ZNK3gfx5Image5WidthEv(%"class.gfx::Image"* %14) #15
  %21 = sdiv i32 %20, 2
  %22 = call i32 @_ZNK3gfx5Image6HeightEv(%"class.gfx::Image"* %14) #15
  %23 = sdiv i32 %22, 2
  %24 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %5, i64 0, i32 3
  %25 = bitcast %"class.gfx::Point"* %24 to i64*
  %26 = zext i32 %23 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %21 to i64
  %29 = or i64 %27, %28
  store i64 %29, i64* %25, align 4
  %30 = bitcast %"class.content::WebCursor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %30) #15
  call void @_ZN7content9WebCursorC1ERKN2ui6CursorE(%"class.content::WebCursor"* nonnull %7, %"class.ui::Cursor"* nonnull dereferenceable(88) %5) #15
  %31 = call dereferenceable(200) %"class.content::WebCursor"* @_ZN7content9WebCursoraSERKS0_(%"class.content::WebCursor"* %1, %"class.content::WebCursor"* nonnull dereferenceable(200) %7)
  call void @_ZN7content9WebCursorD1Ev(%"class.content::WebCursor"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %30) #15
  %32 = bitcast %"class.gfx::SizeF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  %33 = call i64 @_ZNK3gfx5Image4SizeEv(%"class.gfx::Image"* %14) #15
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %8, i64 0, i32 0
  %38 = icmp sgt i32 %34, 0
  %39 = select i1 %38, i32 %34, i32 0
  %40 = sitofp i32 %39 to float
  store float %40, float* %37, align 4
  %41 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %8, i64 0, i32 1
  %42 = icmp sgt i32 %36, 0
  %43 = select i1 %42, i32 %36, i32 0
  %44 = sitofp i32 %43 to float
  store float %44, float* %41, align 4
  %45 = fdiv float 1.000000e+00, %2
  %46 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nonnull dereferenceable(8) %8, float %45, float %45) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %15) #15
  ret <2 x float> %46
}

declare void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"*, i32) unnamed_addr #1

declare void @_ZN7content9WebCursorC1ERKN2ui6CursorE(%"class.content::WebCursor"*, %"class.ui::Cursor"* dereferenceable(88)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(200) %"class.content::WebCursor"* @_ZN7content9WebCursoraSERKS0_(%"class.content::WebCursor"*, %"class.content::WebCursor"* dereferenceable(200)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 0, i32 1, i32 0
  %8 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %7, align 8
  %9 = icmp eq %"class.ui::PlatformCursor"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %8, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %11) #15
  br label %12

12:                                               ; preds = %10, %2
  %13 = ptrtoint %"class.ui::PlatformCursor"* %8 to i64
  %14 = bitcast %class.scoped_refptr* %6 to i64*
  %15 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %6, i64 0, i32 0
  %16 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %15, align 8
  store i64 %13, i64* %14, align 8
  %17 = icmp eq %"class.ui::PlatformCursor"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #15
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 -2
  %26 = bitcast %"class.base::RefCounted"* %25 to %"class.ui::PlatformCursor"*
  %27 = bitcast %"class.base::RefCounted"* %25 to void (%"class.ui::PlatformCursor"*)***
  %28 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %28, i64 1
  %30 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %29, align 8
  tail call void %30(%"class.ui::PlatformCursor"* nonnull %26) #15
  br label %31

31:                                               ; preds = %12, %18, %24
  %32 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 0, i32 2
  %34 = bitcast float* %32 to i8*
  %35 = bitcast float* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 12, i1 false) #15
  %36 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 0, i32 4
  %37 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 0, i32 4
  %38 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %36, %class.SkBitmap* dereferenceable(56) %37) #15
  %39 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 1
  %41 = bitcast float* %39 to i8*
  %42 = bitcast float* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false)
  %43 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 4
  %44 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %91, label %47

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %51, label %90, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %48, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %52, i64 0, i32 0
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %58 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %59 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %58, align 8
  %60 = icmp eq %"class.ui::PlatformCursor"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %59, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %62) #15
  br label %63

63:                                               ; preds = %61, %53
  %64 = ptrtoint %"class.ui::PlatformCursor"* %59 to i64
  %65 = bitcast %class.scoped_refptr* %57 to i64*
  %66 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %57, i64 0, i32 0
  %67 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %66, align 8
  store i64 %64, i64* %65, align 8
  %68 = icmp eq %"class.ui::PlatformCursor"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %67, i64 0, i32 1
  %71 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %70, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #15
  %72 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %70, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %70, i64 -2
  %77 = bitcast %"class.base::RefCounted"* %76 to %"class.ui::PlatformCursor"*
  %78 = bitcast %"class.base::RefCounted"* %76 to void (%"class.ui::PlatformCursor"*)***
  %79 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %79, i64 1
  %81 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %80, align 8
  tail call void %81(%"class.ui::PlatformCursor"* nonnull %77) #15
  br label %82

82:                                               ; preds = %75, %69, %63
  %83 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %84 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %85 = bitcast float* %83 to i8*
  %86 = bitcast float* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 12, i1 false) #15
  %87 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %88 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %89 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %87, %class.SkBitmap* dereferenceable(56) %88) #15
  br label %97

90:                                               ; preds = %47
  tail call void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"* %52, %"class.ui::Cursor"* dereferenceable(88) %48) #15
  store i8 1, i8* %49, align 8
  br label %97

91:                                               ; preds = %31
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* %96) #15
  store i8 0, i8* %92, align 8
  br label %97

97:                                               ; preds = %90, %82, %91, %95
  ret %"class.content::WebCursor"* %0
}

; Function Attrs: nounwind
declare void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"*) unnamed_addr #4

declare %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() local_unnamed_addr #1

declare void @_ZNK3gfx5Image8AsBitmapEv(%class.SkBitmap* sret, %"class.gfx::Image"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

declare i32 @_ZNK3gfx5Image5WidthEv(%"class.gfx::Image"*) local_unnamed_addr #1

declare i32 @_ZNK3gfx5Image6HeightEv(%"class.gfx::Image"*) local_unnamed_addr #1

declare i64 @_ZNK3gfx5Image4SizeEv(%"class.gfx::Image"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13TouchEmulator16HandleMouseEventERKN5blink13WebMouseEventEPNS_24RenderWidgetHostViewBaseE(%"class.content::TouchEmulator"*, %"class.blink::WebMouseEvent"* nocapture readonly dereferenceable(112), %"class.content::RenderWidgetHostViewBase"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Point", align 4
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::PointF"*
  %7 = alloca %"class.blink::WebTouchEvent", align 8
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %8, align 8
  %10 = icmp eq %"class.ui::FilteredGestureProvider"* %9, null
  br i1 %10, label %187, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %187

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %17 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %16, align 8
  %18 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  br i1 %24, label %28, label %26

26:                                               ; preds = %21, %15
  %27 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  br label %28

28:                                               ; preds = %21, %26
  %29 = phi %"class.content::WebCursor"* [ %27, %26 ], [ %25, %21 ]
  %30 = bitcast %"class.content::TouchEmulatorClient"* %17 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %31 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %31, i64 4
  %33 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %32, align 8
  tail call void %33(%"class.content::TouchEmulatorClient"* %17, %"class.content::WebCursor"* dereferenceable(200) %29) #15
  %34 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 1, i32 6
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %57

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %187

41:                                               ; preds = %37
  %42 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %16, align 8
  %43 = bitcast %"class.gfx::Point"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #15
  %44 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 1, i32 11, i32 0
  %45 = load float, float* %44, align 4
  %46 = fptosi float %45 to i32
  %47 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 1, i32 11, i32 1
  %48 = load float, float* %47, align 4
  %49 = fptosi float %48 to i32
  %50 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 0
  store i32 %46, i32* %50, align 4
  %51 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 1
  store i32 %49, i32* %51, align 4
  %52 = bitcast %"class.content::TouchEmulatorClient"* %42 to void (%"class.content::TouchEmulatorClient"*, %"class.gfx::Point"*, i32, %"class.content::RenderWidgetHostViewBase"*)***
  %53 = load void (%"class.content::TouchEmulatorClient"*, %"class.gfx::Point"*, i32, %"class.content::RenderWidgetHostViewBase"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.gfx::Point"*, i32, %"class.content::RenderWidgetHostViewBase"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.gfx::Point"*, i32, %"class.content::RenderWidgetHostViewBase"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.gfx::Point"*, i32, %"class.content::RenderWidgetHostViewBase"*)** %53, i64 5
  %55 = load void (%"class.content::TouchEmulatorClient"*, %"class.gfx::Point"*, i32, %"class.content::RenderWidgetHostViewBase"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.gfx::Point"*, i32, %"class.content::RenderWidgetHostViewBase"*)** %54, align 8
  call void %55(%"class.content::TouchEmulatorClient"* %42, %"class.gfx::Point"* nonnull dereferenceable(8) %4, i32 1, %"class.content::RenderWidgetHostViewBase"* %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #15
  %56 = load i32, i32* %34, align 8
  br label %57

57:                                               ; preds = %41, %28
  %58 = phi i32 [ %35, %28 ], [ %56, %41 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %187

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 4
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 2
  %64 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 11
  br i1 %63, label %65, label %82

65:                                               ; preds = %60
  %66 = load i8, i8* %64, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 12, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %72, i64 5000) #15
  %74 = extractvalue { i64, i1 } %73, 1
  %75 = extractvalue { i64, i1 } %73, 0
  %76 = select i1 %74, i64 9223372036854775807, i64 %75, !prof !6
  %77 = icmp slt i64 %70, %76
  br i1 %77, label %187, label %78

78:                                               ; preds = %65, %68
  store i8 1, i8* %64, align 8
  %79 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 %80, i64* %81, align 8
  br label %83

82:                                               ; preds = %60
  store i8 0, i8* %64, align 8
  br label %83

83:                                               ; preds = %82, %78
  %84 = load i32, i32* %61, align 8
  switch i32 %84, label %89 [
    i32 0, label %86
    i32 1, label %85
  ]

85:                                               ; preds = %83
  br label %86

86:                                               ; preds = %83, %85
  %87 = phi i8 [ 0, %85 ], [ 1, %83 ]
  %88 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 13
  store i8 %87, i8* %88, align 8
  br label %89

89:                                               ; preds = %86, %83
  %90 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 5
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = load i8, i8* %18, align 1, !range !2
  %95 = zext i8 %94 to i32
  %96 = icmp eq i32 %92, %95
  br i1 %96, label %116, label %97

97:                                               ; preds = %89
  %98 = trunc i32 %92 to i8
  store i8 %98, i8* %18, align 1
  %99 = load i32, i32* %12, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %116

101:                                              ; preds = %97
  %102 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %16, align 8
  br i1 %93, label %103, label %108

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %105 = load i8, i8* %104, align 2, !range !2
  %106 = icmp eq i8 %105, 0
  %107 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  br i1 %106, label %110, label %108

108:                                              ; preds = %101, %103
  %109 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  br label %110

110:                                              ; preds = %108, %103
  %111 = phi %"class.content::WebCursor"* [ %109, %108 ], [ %107, %103 ]
  %112 = bitcast %"class.content::TouchEmulatorClient"* %102 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %113 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %113, i64 4
  %115 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %114, align 8
  call void %115(%"class.content::TouchEmulatorClient"* %102, %"class.content::WebCursor"* dereferenceable(200) %111) #15
  br label %116

116:                                              ; preds = %89, %97, %110
  %117 = load i32, i32* %61, align 8
  %118 = icmp ult i32 %117, 3
  br i1 %118, label %119, label %187

119:                                              ; preds = %116
  %120 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #15
  %121 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 1, i32 11
  %122 = bitcast %"class.gfx::PointF"* %121 to i64*
  %123 = load i64, i64* %122, align 4
  store i64 %123, i64* %5, align 8
  %124 = icmp eq %"class.content::RenderWidgetHostViewBase"* %2, null
  br i1 %124, label %133, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.content::RenderWidgetHostViewBase"* %2 to <2 x float> (%"class.content::RenderWidgetHostViewBase"*, %"class.gfx::PointF"*)***
  %127 = load <2 x float> (%"class.content::RenderWidgetHostViewBase"*, %"class.gfx::PointF"*)**, <2 x float> (%"class.content::RenderWidgetHostViewBase"*, %"class.gfx::PointF"*)*** %126, align 8
  %128 = getelementptr inbounds <2 x float> (%"class.content::RenderWidgetHostViewBase"*, %"class.gfx::PointF"*)*, <2 x float> (%"class.content::RenderWidgetHostViewBase"*, %"class.gfx::PointF"*)** %127, i64 9
  %129 = load <2 x float> (%"class.content::RenderWidgetHostViewBase"*, %"class.gfx::PointF"*)*, <2 x float> (%"class.content::RenderWidgetHostViewBase"*, %"class.gfx::PointF"*)** %128, align 8
  %130 = call <2 x float> %129(%"class.content::RenderWidgetHostViewBase"* nonnull %2, %"class.gfx::PointF"* nonnull dereferenceable(8) %6) #15
  %131 = bitcast i64* %5 to <2 x float>*
  store <2 x float> %130, <2 x float>* %131, align 8
  %132 = load i32, i32* %61, align 8
  br label %133

133:                                              ; preds = %119, %125
  %134 = phi i32 [ %117, %119 ], [ %132, %125 ]
  %135 = icmp ult i32 %134, 3
  br i1 %135, label %136, label %140

136:                                              ; preds = %133
  %137 = sext i32 %134 to i64
  %138 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN7content13TouchEmulator22FillTouchEventAndPointERKN5blink13WebMouseEventERKN3gfx6PointFE, i64 0, i64 %137
  %139 = load i32, i32* %138, align 4
  br label %140

140:                                              ; preds = %133, %136
  %141 = phi i32 [ %139, %136 ], [ -1, %133 ]
  %142 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16
  %143 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 1
  store i32 1, i32* %143, align 8
  %144 = load i32, i32* %90, align 4
  %145 = and i32 %144, -449
  %146 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 0, i32 5
  store i32 %145, i32* %146, align 4
  %147 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  call void @_ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32 %141, i64 %148, %"class.blink::WebTouchEvent"* %142) #15
  %149 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 0
  store i32 0, i32* %149, align 4
  %150 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 10, i32 0
  %151 = load float, float* %150, align 4
  %152 = fmul float %151, 5.000000e-01
  %153 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 2
  store float %152, float* %153, align 4
  %154 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 10, i32 1
  %155 = load float, float* %154, align 4
  %156 = fmul float %155, 5.000000e-01
  %157 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 3
  store float %156, float* %157, align 4
  %158 = icmp eq i32 %141, 30
  %159 = select i1 %158, float 0.000000e+00, float 1.000000e+00
  %160 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 1
  store float %159, float* %160, align 4
  %161 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 4
  store float 0.000000e+00, float* %161, align 4
  %162 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 11
  %163 = bitcast %"class.gfx::PointF"* %162 to i64*
  %164 = load i64, i64* %5, align 8
  store i64 %164, i64* %163, align 4
  %165 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 1, i32 12
  %166 = bitcast %"class.gfx::PointF"* %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 1, i32 12, i32 1
  %169 = bitcast float* %168 to i32*
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 12, i32 0
  %172 = bitcast float* %171 to i32*
  store i32 %167, i32* %172, align 4
  %173 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 12, i32 1
  %174 = bitcast float* %173 to i32*
  store i32 %170, i32* %174, align 4
  %175 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 2
  store i32 0, i32* %175, align 4
  %176 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 3
  store i32 0, i32* %176, align 4
  %177 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 7
  store i32 3, i32* %177, align 4
  %178 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %7, i64 0, i32 0, i32 0
  %179 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %7, i64 0, i32 0, i32 1
  %180 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 0, i32 1
  %181 = bitcast float* %179 to i8*
  %182 = bitcast float* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 32, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %178, align 8
  %183 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %7, i64 0, i32 1
  %184 = bitcast i32* %183 to i8*
  %185 = bitcast i32* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 1232, i1 false) #15
  %186 = call zeroext i1 @_ZN7content13TouchEmulator24HandleEmulatedTouchEventEN5blink13WebTouchEventEPNS_24RenderWidgetHostViewBaseE(%"class.content::TouchEmulator"* %0, %"class.blink::WebTouchEvent"* nonnull %7, %"class.content::RenderWidgetHostViewBase"* %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #15
  br label %187

187:                                              ; preds = %37, %3, %116, %68, %57, %11, %140
  %188 = phi i1 [ true, %140 ], [ false, %11 ], [ false, %3 ], [ true, %57 ], [ true, %68 ], [ true, %116 ], [ true, %37 ]
  ret i1 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13TouchEmulator18UpdateShiftPressedEb(%"class.content::TouchEmulator"*, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 1
  %10 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %15 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %14, align 8
  br i1 %1, label %21, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  br i1 %19, label %23, label %21

21:                                               ; preds = %13, %16
  %22 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi %"class.content::WebCursor"* [ %22, %21 ], [ %20, %16 ]
  %25 = bitcast %"class.content::TouchEmulatorClient"* %15 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %26 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %26, i64 4
  %28 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %27, align 8
  tail call void %28(%"class.content::TouchEmulatorClient"* %15, %"class.content::WebCursor"* dereferenceable(200) %24) #15
  br label %29

29:                                               ; preds = %23, %8, %2
  %30 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %23 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator22FillTouchEventAndPointERKN5blink13WebMouseEventERKN3gfx6PointFE(%"class.content::TouchEmulator"*, %"class.blink::WebMouseEvent"* nocapture readonly dereferenceable(112), %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN7content13TouchEmulator22FillTouchEventAndPointERKN5blink13WebMouseEventERKN3gfx6PointFE, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i32 [ %10, %7 ], [ -1, %3 ]
  %13 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16
  %14 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 1
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, -449
  %18 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 0, i32 5
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  tail call void @_ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32 %12, i64 %20, %"class.blink::WebTouchEvent"* %13) #15
  %21 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 10, i32 0
  %23 = load float, float* %22, align 4
  %24 = fmul float %23, 5.000000e-01
  %25 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 2
  store float %24, float* %25, align 4
  %26 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 10, i32 1
  %27 = load float, float* %26, align 4
  %28 = fmul float %27, 5.000000e-01
  %29 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 3
  store float %28, float* %29, align 4
  %30 = icmp eq i32 %12, 30
  %31 = select i1 %30, float 0.000000e+00, float 1.000000e+00
  %32 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 1
  store float %31, float* %32, align 4
  %33 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 4
  store float 0.000000e+00, float* %33, align 4
  %34 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 11
  %35 = bitcast %"class.gfx::PointF"* %2 to i64*
  %36 = bitcast %"class.gfx::PointF"* %34 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 4
  %38 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 1, i32 12
  %39 = bitcast %"class.gfx::PointF"* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::WebMouseEvent", %"class.blink::WebMouseEvent"* %1, i64 0, i32 1, i32 12, i32 1
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 12, i32 0
  %45 = bitcast float* %44 to i32*
  store i32 %40, i32* %45, align 4
  %46 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 12, i32 1
  %47 = bitcast float* %46 to i32*
  store i32 %43, i32* %47, align 4
  %48 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 2
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 3
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 2, i64 0, i32 0, i32 7
  store i32 3, i32* %50, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13TouchEmulator24HandleEmulatedTouchEventEN5blink13WebTouchEventEPNS_24RenderWidgetHostViewBaseE(%"class.content::TouchEmulator"* nocapture, %"class.blink::WebTouchEvent"*, %"class.content::RenderWidgetHostViewBase"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.content::MotionEventWeb", align 8
  %5 = tail call i32 @_ZN2ui19GetNextTouchEventIdEv() #15
  %6 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 7
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %7, align 8
  %9 = bitcast %"class.content::MotionEventWeb"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1296, i8* nonnull %9) #15
  call void @_ZN7content14MotionEventWebC1ERKN5blink13WebTouchEventE(%"class.content::MotionEventWeb"* nonnull %4, %"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #15
  %10 = getelementptr inbounds %"class.content::MotionEventWeb", %"class.content::MotionEventWeb"* %4, i64 0, i32 0
  %11 = call i16 @_ZN2ui23FilteredGestureProvider12OnTouchEventERKNS_11MotionEventE(%"class.ui::FilteredGestureProvider"* %8, %"class.ui::MotionEvent"* nonnull dereferenceable(8) %10) #15
  call void @_ZN7content14MotionEventWebD1Ev(%"class.content::MotionEventWeb"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 1296, i8* nonnull %9) #15
  %12 = and i16 %11, 1
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %45, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 18
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %7, align 8
  %20 = load i32, i32* %6, align 4
  call void @_ZN2ui23FilteredGestureProvider15OnTouchEventAckEjbb(%"class.ui::FilteredGestureProvider"* %19, i32 %20, i1 zeroext true, i1 zeroext false) #15
  br label %45

21:                                               ; preds = %14
  %22 = call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #15
  %23 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 17
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  %26 = or i1 %22, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %7, align 8
  %29 = load i32, i32* %6, align 4
  call void @_ZN2ui23FilteredGestureProvider15OnTouchEventAckEjbb(%"class.ui::FilteredGestureProvider"* %28, i32 %29, i1 zeroext true, i1 zeroext false) #15
  br label %45

30:                                               ; preds = %21
  br i1 %22, label %31, label %34

31:                                               ; preds = %30
  %32 = add nsw i32 %24, 1
  store i32 %32, i32* %23, align 8
  %33 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 19
  store %"class.content::RenderWidgetHostViewBase"* %2, %"class.content::RenderWidgetHostViewBase"** %33, align 8
  br label %34

34:                                               ; preds = %31, %30
  %35 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 4
  %36 = lshr i16 %11, 8
  %37 = trunc i16 %36 to i8
  %38 = and i8 %37, 1
  store i8 %38, i8* %35, align 8
  %39 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %40 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %39, align 8
  %41 = bitcast %"class.content::TouchEmulatorClient"* %40 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebTouchEvent"*, %"class.content::RenderWidgetHostViewBase"*)***
  %42 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebTouchEvent"*, %"class.content::RenderWidgetHostViewBase"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebTouchEvent"*, %"class.content::RenderWidgetHostViewBase"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebTouchEvent"*, %"class.content::RenderWidgetHostViewBase"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebTouchEvent"*, %"class.content::RenderWidgetHostViewBase"*)** %42, i64 3
  %44 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebTouchEvent"*, %"class.content::RenderWidgetHostViewBase"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebTouchEvent"*, %"class.content::RenderWidgetHostViewBase"*)** %43, align 8
  call void %44(%"class.content::TouchEmulatorClient"* %40, %"class.blink::WebTouchEvent"* dereferenceable(1272) %1, %"class.content::RenderWidgetHostViewBase"* %2) #15
  br label %45

45:                                               ; preds = %18, %34, %27, %3
  %46 = phi i1 [ true, %3 ], [ true, %18 ], [ false, %34 ], [ true, %27 ]
  ret i1 %46
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7content13TouchEmulator21HandleMouseWheelEventERKN5blink18WebMouseWheelEventE(%"class.content::TouchEmulator"* nocapture readonly, %"class.blink::WebMouseWheelEvent"* nocapture readnone dereferenceable(160)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %3, align 8
  %5 = icmp eq %"class.ui::FilteredGestureProvider"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br label %14

14:                                               ; preds = %2, %6, %10
  %15 = phi i1 [ %13, %10 ], [ false, %6 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13TouchEmulator19HandleKeyboardEventERKN5blink16WebKeyboardEventE(%"class.content::TouchEmulator"*, %"class.blink::WebKeyboardEvent"* nocapture readonly dereferenceable(80)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %3, align 8
  %5 = icmp eq %"class.ui::FilteredGestureProvider"* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %36

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %1, i64 0, i32 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %36, label %18

18:                                               ; preds = %10
  %19 = icmp eq i32 %13, 0
  %20 = trunc i32 %13 to i8
  store i8 %20, i8* %14, align 1
  %21 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %22 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %21, align 8
  br i1 %19, label %23, label %28

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 8
  br i1 %26, label %30, label %28

28:                                               ; preds = %18, %23
  %29 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 9
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi %"class.content::WebCursor"* [ %29, %28 ], [ %27, %23 ]
  %32 = bitcast %"class.content::TouchEmulatorClient"* %22 to void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)***
  %33 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %33, i64 4
  %35 = load void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.content::WebCursor"*)** %34, align 8
  tail call void %35(%"class.content::TouchEmulatorClient"* %22, %"class.content::WebCursor"* dereferenceable(200) %31) #15
  br label %36

36:                                               ; preds = %2, %30, %10, %6
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13TouchEmulator16HandleTouchEventERKN5blink13WebTouchEventE(%"class.content::TouchEmulator"* nocapture, %"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 17
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #15
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 18
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 0
  %11 = or i1 %7, %10
  %12 = xor i1 %11, true
  %13 = xor i1 %7, true
  %14 = or i1 %13, %12
  br i1 %14, label %17, label %15

15:                                               ; preds = %6
  %16 = add nsw i32 %9, 1
  store i32 %16, i32* %8, align 4
  br label %17

17:                                               ; preds = %6, %15, %2
  %18 = phi i1 [ true, %2 ], [ %12, %6 ], [ false, %15 ]
  ret i1 %18
}

declare zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #1

declare i32 @_ZN2ui19GetNextTouchEventIdEv() local_unnamed_addr #1

declare i16 @_ZN2ui23FilteredGestureProvider12OnTouchEventERKNS_11MotionEventE(%"class.ui::FilteredGestureProvider"*, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN7content14MotionEventWebC1ERKN5blink13WebTouchEventE(%"class.content::MotionEventWeb"*, %"class.blink::WebTouchEvent"* dereferenceable(1272)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7content14MotionEventWebD1Ev(%"class.content::MotionEventWeb"*) unnamed_addr #4

declare void @_ZN2ui23FilteredGestureProvider15OnTouchEventAckEjbb(%"class.ui::FilteredGestureProvider"*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content13TouchEmulator19HandleTouchEventAckERKN5blink13WebTouchEventENS1_5mojom21InputEventResultStateE(%"class.content::TouchEmulator"*, %"class.blink::WebTouchEvent"* dereferenceable(1272), i32) local_unnamed_addr #3 align 2 {
  %4 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits18IsTouchSequenceEndERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #15
  %5 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 17
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  br i1 %4, label %9, label %11

9:                                                ; preds = %8
  %10 = add nsw i32 %6, -1
  store i32 %10, i32* %5, align 8
  br label %11

11:                                               ; preds = %9, %8
  %12 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 20
  %13 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %13, align 8
  %15 = icmp eq %"class.ui::FilteredGestureProvider"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = load i32, i32* %12, align 8
  %18 = icmp eq i32 %2, 1
  %19 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 7
  %20 = load i32, i32* %19, align 4
  %21 = tail call zeroext i1 @_ZN7content37InputEventResultStateIsSetNonBlockingEN5blink5mojom21InputEventResultStateE(i32 %2) #15
  tail call void @_ZN2ui23FilteredGestureProvider15OnTouchEventAckEjbb(%"class.ui::FilteredGestureProvider"* nonnull %14, i32 %20, i1 zeroext %18, i1 zeroext %21) #15
  %22 = load i32, i32* %12, align 8
  %23 = icmp eq i32 %22, %17
  br i1 %23, label %24, label %32

24:                                               ; preds = %11, %16
  tail call void @_ZN7content13TouchEmulator24OnInjectedTouchCompletedEv(%"class.content::TouchEmulator"* %0)
  br label %32

25:                                               ; preds = %3
  br i1 %4, label %26, label %32

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 18
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = add nsw i32 %28, -1
  store i32 %31, i32* %27, align 4
  br label %32

32:                                               ; preds = %25, %30, %26, %16, %24
  %33 = phi i1 [ true, %24 ], [ true, %16 ], [ false, %26 ], [ false, %30 ], [ false, %25 ]
  ret i1 %33
}

declare zeroext i1 @_ZN7content19WebTouchEventTraits18IsTouchSequenceEndERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #1

declare zeroext i1 @_ZN7content37InputEventResultStateIsSetNonBlockingEN5blink5mojom21InputEventResultStateE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator24OnInjectedTouchCompletedEv(%"class.content::TouchEmulator"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25
  %4 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %41, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %3, i64 0, i32 0, i32 0
  %11 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %10, i64 %5) #15
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = icmp eq %"class.base::internal::BindStateBase"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %9
  %16 = load i64, i64* %4, align 8
  %17 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %10, i64 %16) #15
  %18 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %17, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %24 = inttoptr i64 %21 to %"class.base::internal::BindStateBase"*
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %26 = bitcast void ()** %25 to void (%"class.base::internal::BindStateBase"*)**
  %27 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %26, align 8
  tail call void %27(%"class.base::internal::BindStateBase"* %24) #15
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %28

28:                                               ; preds = %15, %9
  %29 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %3, i64 0, i32 0
  %30 = load i64, i64* %4, align 8
  %31 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %10, i64 %30) #15
  %32 = load i64, i64* %4, align 8
  %33 = add i64 %32, 1
  %34 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %10, i64 %33) #15
  call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer.104"* %10, %"class.base::OnceCallback"* %31, %"class.base::OnceCallback"* %34) #15
  %35 = load i64, i64* %4, align 8
  %36 = add i64 %35, 1
  %37 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  %40 = select i1 %39, i64 0, i64 %36
  store i64 %40, i64* %4, align 8
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.103"* %29) #15
  br label %41

41:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator17OnGestureEventAckERKN5blink15WebGestureEventEPNS_24RenderWidgetHostViewBaseE(%"class.content::TouchEmulator"*, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112), %"class.content::RenderWidgetHostViewBase"* nocapture readnone) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 21
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 20
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = add nsw i32 %9, -1
  store i32 %12, i32* %8, align 8
  tail call void @_ZN7content13TouchEmulator24OnInjectedTouchCompletedEv(%"class.content::TouchEmulator"* %0)
  br label %13

13:                                               ; preds = %7, %3, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator15OnViewDestroyedEPNS_24RenderWidgetHostViewBaseE(%"class.content::TouchEmulator"*, %"class.content::RenderWidgetHostViewBase"* readnone) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 19
  %4 = load %"class.content::RenderWidgetHostViewBase"*, %"class.content::RenderWidgetHostViewBase"** %3, align 8
  %5 = icmp eq %"class.content::RenderWidgetHostViewBase"* %4, %1
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 17
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.ui::FilteredGestureProvider"*, %"class.ui::FilteredGestureProvider"** %8, align 8
  %10 = icmp eq %"class.ui::FilteredGestureProvider"* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  store %"class.content::RenderWidgetHostViewBase"* null, %"class.content::RenderWidgetHostViewBase"** %3, align 8
  br label %17

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  tail call void @_ZN7content13TouchEmulator7DisableEv(%"class.content::TouchEmulator"* %0)
  tail call void @_ZN7content13TouchEmulator6EnableENS0_4ModeEN2ui25GestureProviderConfigTypeE(%"class.content::TouchEmulator"* %0, i32 %16, i32 %14)
  br label %17

17:                                               ; preds = %2, %12, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator14OnGestureEventERKN2ui16GestureEventDataE(%"class.content::TouchEmulator"*, %"struct.ui::GestureEventData"* dereferenceable(88)) unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::WebGestureEvent", align 8
  %4 = alloca %"class.blink::WebGestureEvent", align 8
  %5 = alloca %"class.blink::WebGestureEvent", align 8
  %6 = alloca %"class.blink::WebGestureEvent", align 8
  %7 = alloca %"class.blink::WebGestureEvent", align 8
  %8 = alloca %"class.blink::WebGestureEvent", align 8
  %9 = alloca %"class.blink::WebGestureEvent", align 8
  %10 = alloca %"class.blink::WebGestureEvent", align 8
  %11 = bitcast %"class.blink::WebGestureEvent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false)
  call void @_ZN2ui41CreateWebGestureEventFromGestureEventDataERKNS_16GestureEventDataE(%"class.blink::WebGestureEvent"* nonnull sret %10, %"struct.ui::GestureEventData"* dereferenceable(88) %1) #15
  %12 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %373 [
    i32 -1, label %380
    i32 11, label %14
    i32 13, label %67
    i32 12, label %215
    i32 14, label %262
    i32 15, label %351
    i32 21, label %363
  ]

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %16 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %15, align 8
  %17 = bitcast %"class.content::TouchEmulatorClient"* %16 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %18 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %18, i64 2
  %20 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %19, align 8
  call void %20(%"class.content::TouchEmulatorClient"* %16, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %10) #15
  %21 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %26 = load i8, i8* %25, align 2, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %380, label %28

28:                                               ; preds = %24, %14
  %29 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  store i8 1, i8* %29, align 4
  %30 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 7
  %31 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %32 = bitcast %"class.gfx::PointF"* %30 to i64*
  %33 = bitcast %"class.gfx::PointF"* %31 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 23
  store float 1.000000e+00, float* %35, align 8
  %36 = bitcast %"class.blink::WebGestureEvent"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %36) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %37 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 5
  %38 = load i32, i32* %37, align 4, !noalias !7
  %39 = and i32 %38, -449
  %40 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %41 = load i64, i64* %40, align 8, !noalias !7
  %42 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %43, align 8, !alias.scope !7
  %44 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %44, align 4, !alias.scope !7
  %45 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %45, align 4, !alias.scope !7
  %46 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %41, i64* %46, align 8, !alias.scope !7
  %47 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 0, i32 4
  store i32 16, i32* %47, align 8, !alias.scope !7
  %48 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 0, i32 5
  store i32 %39, i32* %48, align 4, !alias.scope !7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8, !alias.scope !7
  %49 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 1
  store i8 0, i8* %49, align 8, !alias.scope !7
  %50 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 3
  store i32 0, i32* %50, align 4, !alias.scope !7
  %51 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 4
  %52 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 7, i32 0
  %53 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 9
  %54 = getelementptr inbounds float, float* %52, i64 2
  %55 = bitcast float* %54 to i64*
  store i64 0, i64* %55, align 8, !alias.scope !7
  store i32 2, i32* %53, align 8, !alias.scope !7
  %56 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 6
  %57 = bitcast %union.anon.81* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #15, !alias.scope !7
  %58 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %9, i64 0, i32 7
  %59 = bitcast %"class.gfx::PointF"* %58 to i64*
  store i64 %34, i64* %59, align 8, !alias.scope !7
  %60 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 4
  %61 = load i32, i32* %60, align 8, !noalias !7
  store i32 %61, i32* %51, align 8, !alias.scope !7
  %62 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %15, align 8
  %63 = bitcast %"class.content::TouchEmulatorClient"* %62 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %64 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %64, i64 2
  %66 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %65, align 8
  call void %66(%"class.content::TouchEmulatorClient"* %62, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %36) #15
  br label %380

67:                                               ; preds = %2
  %68 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %83, label %123

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %77 = load i8, i8* %76, align 2, !range !2
  %78 = icmp eq i8 %77, 0
  %79 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  %80 = load i8, i8* %79, align 4, !range !2
  %81 = icmp ne i8 %80, 0
  br i1 %78, label %171, label %82

82:                                               ; preds = %75
  br i1 %81, label %123, label %83

83:                                               ; preds = %71, %82
  %84 = phi i8* [ %72, %71 ], [ %79, %82 ]
  store i8 1, i8* %84, align 4
  %85 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 7
  %86 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %87 = bitcast %"class.gfx::PointF"* %85 to i64*
  %88 = bitcast %"class.gfx::PointF"* %86 to i64*
  %89 = load i64, i64* %87, align 8
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 23
  store float 1.000000e+00, float* %90, align 8
  %91 = bitcast %"class.blink::WebGestureEvent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %91) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %92 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 5
  %93 = load i32, i32* %92, align 4, !noalias !10
  %94 = and i32 %93, -449
  %95 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %96 = load i64, i64* %95, align 8, !noalias !10
  %97 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %98, align 8, !alias.scope !10
  %99 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %99, align 4, !alias.scope !10
  %100 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %100, align 4, !alias.scope !10
  %101 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %96, i64* %101, align 8, !alias.scope !10
  %102 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 0, i32 4
  store i32 16, i32* %102, align 8, !alias.scope !10
  %103 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 0, i32 5
  store i32 %94, i32* %103, align 4, !alias.scope !10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8, !alias.scope !10
  %104 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 1
  store i8 0, i8* %104, align 8, !alias.scope !10
  %105 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 3
  store i32 0, i32* %105, align 4, !alias.scope !10
  %106 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 4
  %107 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 7, i32 0
  %108 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 9
  %109 = getelementptr inbounds float, float* %107, i64 2
  %110 = bitcast float* %109 to i64*
  store i64 0, i64* %110, align 8, !alias.scope !10
  store i32 2, i32* %108, align 8, !alias.scope !10
  %111 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 6
  %112 = bitcast %union.anon.81* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 32, i1 false) #15, !alias.scope !10
  %113 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %8, i64 0, i32 7
  %114 = bitcast %"class.gfx::PointF"* %113 to i64*
  store i64 %89, i64* %114, align 8, !alias.scope !10
  %115 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 4
  %116 = load i32, i32* %115, align 8, !noalias !10
  store i32 %116, i32* %106, align 8, !alias.scope !10
  %117 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %118 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %117, align 8
  %119 = bitcast %"class.content::TouchEmulatorClient"* %118 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %120 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %120, i64 2
  %122 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %121, align 8
  call void %122(%"class.content::TouchEmulatorClient"* %118, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %91) #15
  br label %380

123:                                              ; preds = %71, %82
  %124 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %125 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22, i32 1
  %126 = load float, float* %125, align 4
  %127 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 7, i32 1
  %128 = load float, float* %127, align 4
  %129 = fsub float %126, %128
  %130 = fmul float %129, 0x3F60624DE0000000
  %131 = call float @expf(float %130) #15
  %132 = bitcast %"class.blink::WebGestureEvent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %132) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %132, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %133 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 5
  %134 = load i32, i32* %133, align 4, !noalias !13
  %135 = and i32 %134, -449
  %136 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %137 = load i64, i64* %136, align 8, !noalias !13
  %138 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %139, align 8, !alias.scope !13
  %140 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %140, align 4, !alias.scope !13
  %141 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %141, align 4, !alias.scope !13
  %142 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %137, i64* %142, align 8, !alias.scope !13
  %143 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 0, i32 4
  store i32 18, i32* %143, align 8, !alias.scope !13
  %144 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 0, i32 5
  store i32 %135, i32* %144, align 4, !alias.scope !13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8, !alias.scope !13
  %145 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 1
  store i8 0, i8* %145, align 8, !alias.scope !13
  %146 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 3
  store i32 0, i32* %146, align 4, !alias.scope !13
  %147 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 4
  %148 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 7, i32 0
  %149 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 9
  %150 = getelementptr inbounds float, float* %148, i64 2
  %151 = bitcast float* %150 to i64*
  store i64 0, i64* %151, align 8, !alias.scope !13
  store i32 2, i32* %149, align 8, !alias.scope !13
  %152 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 6
  %153 = bitcast %union.anon.81* %152 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 32, i1 false) #15, !alias.scope !13
  %154 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 7
  %155 = bitcast %"class.gfx::PointF"* %124 to i64*
  %156 = bitcast %"class.gfx::PointF"* %154 to i64*
  %157 = load i64, i64* %155, align 4, !noalias !13
  store i64 %157, i64* %156, align 8, !alias.scope !13
  %158 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 4
  %159 = load i32, i32* %158, align 8, !noalias !13
  store i32 %159, i32* %147, align 8, !alias.scope !13
  %160 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 23
  %161 = load float, float* %160, align 8
  %162 = fdiv float %131, %161
  %163 = bitcast %union.anon.81* %152 to %struct.anon.92*
  %164 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %163, i64 0, i32 2
  store float %162, float* %164, align 4
  %165 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %166 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %165, align 8
  %167 = bitcast %"class.content::TouchEmulatorClient"* %166 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %168 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %168, i64 2
  %170 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %169, align 8
  call void %170(%"class.content::TouchEmulatorClient"* %166, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %7) #15
  store float %131, float* %160, align 8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %132) #15
  br label %380

171:                                              ; preds = %75
  br i1 %81, label %172, label %208

172:                                              ; preds = %171
  store i8 0, i8* %79, align 4
  %173 = bitcast %"class.blink::WebGestureEvent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %173) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %173, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %174 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 5
  %175 = load i32, i32* %174, align 4, !noalias !16
  %176 = and i32 %175, -449
  %177 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %178 = load i64, i64* %177, align 8, !noalias !16
  %179 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %180, align 8, !alias.scope !16
  %181 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %181, align 4, !alias.scope !16
  %182 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %182, align 4, !alias.scope !16
  %183 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %178, i64* %183, align 8, !alias.scope !16
  %184 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 0, i32 4
  store i32 17, i32* %184, align 8, !alias.scope !16
  %185 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 0, i32 5
  store i32 %176, i32* %185, align 4, !alias.scope !16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %179, align 8, !alias.scope !16
  %186 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 1
  store i8 0, i8* %186, align 8, !alias.scope !16
  %187 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 3
  store i32 0, i32* %187, align 4, !alias.scope !16
  %188 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 4
  %189 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 7, i32 0
  %190 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 9
  %191 = getelementptr inbounds float, float* %189, i64 2
  %192 = bitcast float* %191 to i64*
  store i64 0, i64* %192, align 8, !alias.scope !16
  store i32 2, i32* %190, align 8, !alias.scope !16
  %193 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 6
  %194 = bitcast %union.anon.81* %193 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 32, i1 false) #15, !alias.scope !16
  %195 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %196 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 7
  %197 = bitcast %"class.gfx::PointF"* %195 to i64*
  %198 = bitcast %"class.gfx::PointF"* %196 to i64*
  %199 = load i64, i64* %197, align 4, !noalias !16
  store i64 %199, i64* %198, align 8, !alias.scope !16
  %200 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 4
  %201 = load i32, i32* %200, align 8, !noalias !16
  store i32 %201, i32* %188, align 8, !alias.scope !16
  %202 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %203 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %202, align 8
  %204 = bitcast %"class.content::TouchEmulatorClient"* %203 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %205 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %205, i64 2
  %207 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %206, align 8
  call void %207(%"class.content::TouchEmulatorClient"* %203, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %173) #15
  br label %208

208:                                              ; preds = %172, %171
  %209 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %210 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %209, align 8
  %211 = bitcast %"class.content::TouchEmulatorClient"* %210 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %212 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %212, i64 2
  %214 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %213, align 8
  call void %214(%"class.content::TouchEmulatorClient"* %210, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %10) #15
  br label %380

215:                                              ; preds = %2
  %216 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  %217 = load i8, i8* %216, align 4, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %255, label %219

219:                                              ; preds = %215
  store i8 0, i8* %216, align 4
  %220 = bitcast %"class.blink::WebGestureEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %220) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %220, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %221 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 5
  %222 = load i32, i32* %221, align 4, !noalias !19
  %223 = and i32 %222, -449
  %224 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %225 = load i64, i64* %224, align 8, !noalias !19
  %226 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 0, i32 0
  %227 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %227, align 8, !alias.scope !19
  %228 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %228, align 4, !alias.scope !19
  %229 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %229, align 4, !alias.scope !19
  %230 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %225, i64* %230, align 8, !alias.scope !19
  %231 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 0, i32 4
  store i32 17, i32* %231, align 8, !alias.scope !19
  %232 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 0, i32 5
  store i32 %223, i32* %232, align 4, !alias.scope !19
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %226, align 8, !alias.scope !19
  %233 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 1
  store i8 0, i8* %233, align 8, !alias.scope !19
  %234 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 3
  store i32 0, i32* %234, align 4, !alias.scope !19
  %235 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 4
  %236 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 7, i32 0
  %237 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 9
  %238 = getelementptr inbounds float, float* %236, i64 2
  %239 = bitcast float* %238 to i64*
  store i64 0, i64* %239, align 8, !alias.scope !19
  store i32 2, i32* %237, align 8, !alias.scope !19
  %240 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 6
  %241 = bitcast %union.anon.81* %240 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 32, i1 false) #15, !alias.scope !19
  %242 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %243 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 7
  %244 = bitcast %"class.gfx::PointF"* %242 to i64*
  %245 = bitcast %"class.gfx::PointF"* %243 to i64*
  %246 = load i64, i64* %244, align 4, !noalias !19
  store i64 %246, i64* %245, align 8, !alias.scope !19
  %247 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 4
  %248 = load i32, i32* %247, align 8, !noalias !19
  store i32 %248, i32* %235, align 8, !alias.scope !19
  %249 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %250 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %249, align 8
  %251 = bitcast %"class.content::TouchEmulatorClient"* %250 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %252 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %252, i64 2
  %254 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %253, align 8
  call void %254(%"class.content::TouchEmulatorClient"* %250, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %220) #15
  br label %255

255:                                              ; preds = %215, %219
  %256 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %257 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %256, align 8
  %258 = bitcast %"class.content::TouchEmulatorClient"* %257 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %259 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %259, i64 2
  %261 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %260, align 8
  call void %261(%"class.content::TouchEmulatorClient"* %257, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %10) #15
  br label %380

262:                                              ; preds = %2
  %263 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  %264 = load i8, i8* %263, align 4, !range !2
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %302, label %266

266:                                              ; preds = %262
  store i8 0, i8* %263, align 4
  %267 = bitcast %"class.blink::WebGestureEvent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %267) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %267, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %268 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 5
  %269 = load i32, i32* %268, align 4, !noalias !22
  %270 = and i32 %269, -449
  %271 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %272 = load i64, i64* %271, align 8, !noalias !22
  %273 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 0, i32 0
  %274 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %274, align 8, !alias.scope !22
  %275 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %275, align 4, !alias.scope !22
  %276 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %276, align 4, !alias.scope !22
  %277 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %272, i64* %277, align 8, !alias.scope !22
  %278 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 0, i32 4
  store i32 17, i32* %278, align 8, !alias.scope !22
  %279 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 0, i32 5
  store i32 %270, i32* %279, align 4, !alias.scope !22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %273, align 8, !alias.scope !22
  %280 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 1
  store i8 0, i8* %280, align 8, !alias.scope !22
  %281 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 3
  store i32 0, i32* %281, align 4, !alias.scope !22
  %282 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 4
  %283 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 7, i32 0
  %284 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 9
  %285 = getelementptr inbounds float, float* %283, i64 2
  %286 = bitcast float* %285 to i64*
  store i64 0, i64* %286, align 8, !alias.scope !22
  store i32 2, i32* %284, align 8, !alias.scope !22
  %287 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 6
  %288 = bitcast %union.anon.81* %287 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 32, i1 false) #15, !alias.scope !22
  %289 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %290 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %4, i64 0, i32 7
  %291 = bitcast %"class.gfx::PointF"* %289 to i64*
  %292 = bitcast %"class.gfx::PointF"* %290 to i64*
  %293 = load i64, i64* %291, align 4, !noalias !22
  store i64 %293, i64* %292, align 8, !alias.scope !22
  %294 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 4
  %295 = load i32, i32* %294, align 8, !noalias !22
  store i32 %295, i32* %282, align 8, !alias.scope !22
  %296 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %297 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %296, align 8
  %298 = bitcast %"class.content::TouchEmulatorClient"* %297 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %299 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %298, align 8
  %300 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %299, i64 2
  %301 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %300, align 8
  call void %301(%"class.content::TouchEmulatorClient"* %297, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %267) #15
  br label %302

302:                                              ; preds = %262, %266
  %303 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %304 = load i8, i8* %303, align 1, !range !2
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %308, label %306

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 21
  br label %313

308:                                              ; preds = %302
  %309 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %310 = load i8, i8* %309, align 2, !range !2
  %311 = icmp eq i8 %310, 0
  %312 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 21
  br i1 %311, label %344, label %313

313:                                              ; preds = %308, %306
  %314 = phi i8* [ %307, %306 ], [ %312, %308 ]
  store i8 1, i8* %314, align 4
  %315 = bitcast %"class.blink::WebGestureEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %315) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %315, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %316 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 5
  %317 = load i32, i32* %316, align 4
  %318 = and i32 %317, -449
  %319 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %320 = load i64, i64* %319, align 8
  %321 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 0
  %322 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %322, align 8
  %323 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %323, align 4
  %324 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %324, align 4
  %325 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %320, i64* %325, align 8
  %326 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 4
  store i32 12, i32* %326, align 8
  %327 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 5
  store i32 %318, i32* %327, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %321, align 8
  %328 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 1
  store i8 0, i8* %328, align 8
  %329 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 3
  store i32 0, i32* %329, align 4
  %330 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 4
  %331 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 7, i32 0
  %332 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 9
  %333 = bitcast float* %331 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %333, i8 0, i64 16, i1 false) #15
  store i32 2, i32* %332, align 8
  %334 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 6
  %335 = bitcast %union.anon.81* %334 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %335, i8 0, i64 32, i1 false) #15
  %336 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %10, i64 0, i32 4
  %337 = load i32, i32* %336, align 8
  store i32 %337, i32* %330, align 8
  %338 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %339 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %338, align 8
  %340 = bitcast %"class.content::TouchEmulatorClient"* %339 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %341 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %341, i64 2
  %343 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %342, align 8
  call void %343(%"class.content::TouchEmulatorClient"* %339, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %315) #15
  br label %380

344:                                              ; preds = %308
  store i8 0, i8* %312, align 4
  %345 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %346 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %345, align 8
  %347 = bitcast %"class.content::TouchEmulatorClient"* %346 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %348 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %347, align 8
  %349 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %348, i64 2
  %350 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %349, align 8
  call void %350(%"class.content::TouchEmulatorClient"* %346, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %10) #15
  br label %380

351:                                              ; preds = %2
  %352 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 21
  %353 = load i8, i8* %352, align 4, !range !2
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %355, label %362

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %357 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %356, align 8
  %358 = bitcast %"class.content::TouchEmulatorClient"* %357 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %359 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %358, align 8
  %360 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %359, i64 2
  %361 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %360, align 8
  call void %361(%"class.content::TouchEmulatorClient"* %357, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %10) #15
  br label %362

362:                                              ; preds = %351, %355
  store i8 0, i8* %352, align 4
  br label %380

363:                                              ; preds = %2
  %364 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 20
  %365 = load i32, i32* %364, align 8
  %366 = add nsw i32 %365, 1
  store i32 %366, i32* %364, align 8
  %367 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %368 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %367, align 8
  %369 = bitcast %"class.content::TouchEmulatorClient"* %368 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %370 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %369, align 8
  %371 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %370, i64 2
  %372 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %371, align 8
  call void %372(%"class.content::TouchEmulatorClient"* %368, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %10) #15
  br label %380

373:                                              ; preds = %2
  %374 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %375 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %374, align 8
  %376 = bitcast %"class.content::TouchEmulatorClient"* %375 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %377 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %376, align 8
  %378 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %377, i64 2
  %379 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %378, align 8
  call void %379(%"class.content::TouchEmulatorClient"* %375, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %10) #15
  br label %380

380:                                              ; preds = %24, %255, %362, %363, %373, %28, %83, %123, %208, %344, %313, %2
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #15
  ret void
}

declare void @_ZN2ui41CreateWebGestureEventFromGestureEventDataERKNS_16GestureEventDataE(%"class.blink::WebGestureEvent"* sret, %"struct.ui::GestureEventData"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content13TouchEmulator18InPinchGestureModeEv(%"class.content::TouchEmulator"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator10PinchBeginERKN5blink15WebGestureEventE(%"class.content::TouchEmulator"* nocapture, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::WebGestureEvent", align 8
  %4 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  store i8 1, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 7
  %6 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %7 = bitcast %"class.gfx::PointF"* %5 to i64*
  %8 = bitcast %"class.gfx::PointF"* %6 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 23
  store float 1.000000e+00, float* %10, align 8
  %11 = bitcast %"class.blink::WebGestureEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %12 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 5
  %13 = load i32, i32* %12, align 4, !noalias !25
  %14 = and i32 %13, -449
  %15 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !noalias !25
  %17 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %18, align 8, !alias.scope !25
  %19 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %19, align 4, !alias.scope !25
  %20 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %20, align 4, !alias.scope !25
  %21 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %16, i64* %21, align 8, !alias.scope !25
  %22 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 4
  store i32 16, i32* %22, align 8, !alias.scope !25
  %23 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 5
  store i32 %14, i32* %23, align 4, !alias.scope !25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8, !alias.scope !25
  %24 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 1
  store i8 0, i8* %24, align 8, !alias.scope !25
  %25 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 3
  store i32 0, i32* %25, align 4, !alias.scope !25
  %26 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 4
  %27 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 7, i32 0
  %28 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 9
  %29 = getelementptr inbounds float, float* %27, i64 2
  %30 = bitcast float* %29 to i64*
  store i64 0, i64* %30, align 8, !alias.scope !25
  store i32 2, i32* %28, align 8, !alias.scope !25
  %31 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 6
  %32 = bitcast %union.anon.81* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #15, !alias.scope !25
  %33 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 7
  %34 = bitcast %"class.gfx::PointF"* %33 to i64*
  store i64 %9, i64* %34, align 8, !alias.scope !25
  %35 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 4
  %36 = load i32, i32* %35, align 8, !noalias !25
  store i32 %36, i32* %26, align 8, !alias.scope !25
  %37 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %38 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %37, align 8
  %39 = bitcast %"class.content::TouchEmulatorClient"* %38 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %40 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %40, i64 2
  %42 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %41, align 8
  call void %42(%"class.content::TouchEmulatorClient"* %38, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator11PinchUpdateERKN5blink15WebGestureEventE(%"class.content::TouchEmulator"* nocapture, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::WebGestureEvent", align 8
  %4 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %5 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 7, i32 1
  %8 = load float, float* %7, align 4
  %9 = fsub float %6, %8
  %10 = fmul float %9, 0x3F60624DE0000000
  %11 = tail call float @expf(float %10) #15
  %12 = bitcast %"class.blink::WebGestureEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %13 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 5
  %14 = load i32, i32* %13, align 4, !noalias !28
  %15 = and i32 %14, -449
  %16 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load i64, i64* %16, align 8, !noalias !28
  %18 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %19, align 8, !alias.scope !28
  %20 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %20, align 4, !alias.scope !28
  %21 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %21, align 4, !alias.scope !28
  %22 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %17, i64* %22, align 8, !alias.scope !28
  %23 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 4
  store i32 18, i32* %23, align 8, !alias.scope !28
  %24 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 5
  store i32 %15, i32* %24, align 4, !alias.scope !28
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8, !alias.scope !28
  %25 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 1
  store i8 0, i8* %25, align 8, !alias.scope !28
  %26 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 3
  store i32 0, i32* %26, align 4, !alias.scope !28
  %27 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 4
  %28 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 7, i32 0
  %29 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 9
  %30 = getelementptr inbounds float, float* %28, i64 2
  %31 = bitcast float* %30 to i64*
  store i64 0, i64* %31, align 8, !alias.scope !28
  store i32 2, i32* %29, align 8, !alias.scope !28
  %32 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 6
  %33 = bitcast %union.anon.81* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #15, !alias.scope !28
  %34 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 7
  %35 = bitcast %"class.gfx::PointF"* %4 to i64*
  %36 = bitcast %"class.gfx::PointF"* %34 to i64*
  %37 = load i64, i64* %35, align 4, !noalias !28
  store i64 %37, i64* %36, align 8, !alias.scope !28
  %38 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 4
  %39 = load i32, i32* %38, align 8, !noalias !28
  store i32 %39, i32* %27, align 8, !alias.scope !28
  %40 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 23
  %41 = load float, float* %40, align 8
  %42 = fdiv float %11, %41
  %43 = bitcast %union.anon.81* %32 to %struct.anon.92*
  %44 = getelementptr inbounds %struct.anon.92, %struct.anon.92* %43, i64 0, i32 2
  store float %42, float* %44, align 4
  %45 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %46 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %45, align 8
  %47 = bitcast %"class.content::TouchEmulatorClient"* %46 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %48 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %48, i64 2
  %50 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %49, align 8
  call void %50(%"class.content::TouchEmulatorClient"* %46, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %3) #15
  store float %11, float* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator8PinchEndERKN5blink15WebGestureEventE(%"class.content::TouchEmulator"* nocapture, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::WebGestureEvent", align 8
  %4 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 24
  store i8 0, i8* %4, align 4
  %5 = bitcast %"class.blink::WebGestureEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false) #15
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 5
  %7 = load i32, i32* %6, align 4, !noalias !31
  %8 = and i32 %7, -449
  %9 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !noalias !31
  %11 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %12, align 8, !alias.scope !31
  %13 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %13, align 4, !alias.scope !31
  %14 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %14, align 4, !alias.scope !31
  %15 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %10, i64* %15, align 8, !alias.scope !31
  %16 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 4
  store i32 17, i32* %16, align 8, !alias.scope !31
  %17 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 5
  store i32 %8, i32* %17, align 4, !alias.scope !31
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !alias.scope !31
  %18 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 1
  store i8 0, i8* %18, align 8, !alias.scope !31
  %19 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 3
  store i32 0, i32* %19, align 4, !alias.scope !31
  %20 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 4
  %21 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 7, i32 0
  %22 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 9
  %23 = getelementptr inbounds float, float* %21, i64 2
  %24 = bitcast float* %23 to i64*
  store i64 0, i64* %24, align 8, !alias.scope !31
  store i32 2, i32* %22, align 8, !alias.scope !31
  %25 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 6
  %26 = bitcast %union.anon.81* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #15, !alias.scope !31
  %27 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 22
  %28 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 7
  %29 = bitcast %"class.gfx::PointF"* %27 to i64*
  %30 = bitcast %"class.gfx::PointF"* %28 to i64*
  %31 = load i64, i64* %29, align 4, !noalias !31
  store i64 %31, i64* %30, align 8, !alias.scope !31
  %32 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 4
  %33 = load i32, i32* %32, align 8, !noalias !31
  store i32 %33, i32* %20, align 8, !alias.scope !31
  %34 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %35 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %34, align 8
  %36 = bitcast %"class.content::TouchEmulatorClient"* %35 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %37 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %37, i64 2
  %39 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %38, align 8
  call void %39(%"class.content::TouchEmulatorClient"* %35, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator9ScrollEndERKN5blink15WebGestureEventE(%"class.content::TouchEmulator"* nocapture readonly, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::WebGestureEvent", align 8
  %4 = bitcast %"class.blink::WebGestureEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %4) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false)
  %5 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, -449
  %8 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %9, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 4
  store i32 12, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 5
  store i32 %7, i32* %16, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 1
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 3
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 7, i32 0
  %21 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 9
  %22 = bitcast float* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #15
  store i32 2, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 6
  %24 = bitcast %union.anon.81* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #15
  %25 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %1, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %19, align 8
  %27 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 1
  %28 = load %"class.content::TouchEmulatorClient"*, %"class.content::TouchEmulatorClient"** %27, align 8
  %29 = bitcast %"class.content::TouchEmulatorClient"* %28 to void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)***
  %30 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)**, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %30, i64 2
  %32 = load void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)*, void (%"class.content::TouchEmulatorClient"*, %"class.blink::WebGestureEvent"*)** %31, align 8
  call void %32(%"class.content::TouchEmulatorClient"* %28, %"class.blink::WebGestureEvent"* nonnull dereferenceable(112) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK7content13TouchEmulator30RequiresDoubleTapGestureEventsEv(%"class.content::TouchEmulator"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator16InjectTouchEventERKN5blink13WebTouchEventEPNS_24RenderWidgetHostViewBaseEN4base12OnceCallbackIFvvEEE(%"class.content::TouchEmulator"*, %"class.blink::WebTouchEvent"* nocapture readonly dereferenceable(1272), %"class.content::RenderWidgetHostViewBase"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.blink::WebTouchEvent", align 8
  %6 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 1
  %8 = bitcast float* %6 to i8*
  %9 = bitcast float* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false) #15
  %10 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 16, i32 1
  %11 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 1
  %12 = bitcast i32* %10 to i8*
  %13 = bitcast i32* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 1232, i1 false) #15
  %14 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25
  %15 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %14, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.103"* %15, i64 1) #15
  %16 = getelementptr inbounds %"class.std::__1::queue.102", %"class.std::__1::queue.102"* %14, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %16, i64 %18) #15
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback"* %19 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = load i64, i64* %17, align 8
  %25 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, -1
  %28 = icmp eq i64 %24, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %4
  store i64 0, i64* %17, align 8
  br label %33

30:                                               ; preds = %4
  %31 = add i64 %24, 1
  store i64 %31, i64* %17, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30, %29
  br label %34

34:                                               ; preds = %30, %33
  %35 = phi i64 [ %27, %33 ], [ %24, %30 ]
  %36 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %16, i64 %35) #15
  %37 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %5, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %5, i64 0, i32 0, i32 1
  %39 = bitcast float* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %8, i64 32, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %40 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %5, i64 0, i32 1
  %41 = bitcast i32* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %12, i64 1232, i1 false) #15
  %42 = call zeroext i1 @_ZN7content13TouchEmulator24HandleEmulatedTouchEventEN5blink13WebTouchEventEPNS_24RenderWidgetHostViewBaseE(%"class.content::TouchEmulator"* %0, %"class.blink::WebTouchEvent"* nonnull %5, %"class.content::RenderWidgetHostViewBase"* %2)
  br i1 %42, label %43, label %44

43:                                               ; preds = %34
  call void @_ZN7content13TouchEmulator24OnInjectedTouchCompletedEv(%"class.content::TouchEmulator"* %0)
  br label %44

44:                                               ; preds = %43, %34
  ret void
}

declare void @_ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32, i64, %"class.blink::WebTouchEvent"*) local_unnamed_addr #1

declare i64 @_ZN2ui15EventTimeForNowEv() local_unnamed_addr #1

declare %"class.ui::MotionEvent"* @_ZNK2ui23FilteredGestureProvider19GetCurrentDownEventEv(%"class.ui::FilteredGestureProvider"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE(%"class.blink::WebGestureEvent"* noalias nocapture sret, %"class.content::TouchEmulator"* nocapture readonly, i32, %"class.blink::WebGestureEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #3 align 2 {
  %5 = bitcast %"class.blink::WebGestureEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i8, [3 x i8], i32, i32, [4 x i8], { { i64, float, float, i32, i8, [3 x i8], i32, i8, i8, i8, i8 } }, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>* @__const._ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE.event to i8*), i64 112, i1 false)
  %6 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -449
  %9 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %12, align 8
  %13 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %14, align 4
  %15 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %10, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 4
  store i32 %2, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 0, i32 5
  store i32 %8, i32* %17, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink15WebGestureEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %18 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 1
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 3
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 7, i32 0
  %22 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 9
  %23 = getelementptr inbounds float, float* %21, i64 2
  %24 = bitcast float* %23 to i64*
  store i64 0, i64* %24, align 4
  store i32 2, i32* %22, align 8
  %25 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 6
  %26 = bitcast %union.anon.81* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #15
  %27 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %1, i64 0, i32 22
  %28 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %0, i64 0, i32 7
  %29 = bitcast %"class.gfx::PointF"* %27 to i64*
  %30 = bitcast %"class.gfx::PointF"* %28 to i64*
  %31 = load i64, i64* %29, align 4
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %3, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %20, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content13TouchEmulator29SetPinchGestureModeForTestingEb(%"class.content::TouchEmulator"* nocapture, i1 zeroext) local_unnamed_addr #10 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.content::TouchEmulator", %"class.content::TouchEmulator"* %0, i64 0, i32 15
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE13DestructRangeEmm(%"class.base::circular_deque.103"*, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer.104"* %7, %"class.base::OnceCallback"* %8, %"class.base::OnceCallback"* %12)
  %13 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.base::OnceCallback"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer.104"* %7, %"class.base::OnceCallback"* %15, %"class.base::OnceCallback"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEE13DestructRangeIS4_Li0EEEvPS4_S7_(%"class.base::internal::VectorBuffer.104"*, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.base::OnceCallback"*, align 8
  %6 = alloca %"class.base::OnceCallback"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.base::OnceCallback"* %1, %"class.base::OnceCallback"** %5, align 8
  store %"class.base::OnceCallback"* %2, %"class.base::OnceCallback"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.base::OnceCallback"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.base::OnceCallback"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #15
  %17 = bitcast %"class.base::OnceCallback"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %26 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %27 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %28 = icmp eq %"class.base::OnceCallback"* %26, %27
  br i1 %28, label %36, label %29

29:                                               ; preds = %25, %29
  %30 = phi %"class.base::OnceCallback"* [ %33, %29 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %30, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %31) #15
  %32 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %32, i64 1
  store %"class.base::OnceCallback"* %33, %"class.base::OnceCallback"** %5, align 8
  %34 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %35 = icmp eq %"class.base::OnceCallback"* %33, %34
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %0, i64 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 %1
  ret %"class.base::OnceCallback"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN4base12OnceCallbackIFvvEEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #15
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN2ui24GetGestureProviderConfigENS_25GestureProviderConfigTypeE(%"struct.ui::GestureProvider::Config"* sret, i32) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"*, %"class.ui::Cursor"* dereferenceable(88)) unnamed_addr #1

declare <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8), float, float) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nofree nounwind
declare float @expf(float) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZN2ui23FilteredGestureProviderC1ERKNS_15GestureProvider6ConfigEPNS_21GestureProviderClientE(%"class.ui::FilteredGestureProvider"*, %"struct.ui::GestureProvider::Config"* dereferenceable(696), %"class.ui::GestureProviderClient"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.103"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer.104"*
  %5 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #15
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #15
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #15
  br i1 %37, label %38, label %39, !prof !6

38:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #15
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer.104"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer.104"* nonnull %4, i64* %5, i64* %7) #15
  %45 = bitcast %"class.base::circular_deque.103"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #15
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque.103"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #15
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer.104"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer.104"*, i64*, i64*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %51

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %0, i64 %1)
  %15 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %3, i64 0, i32 0
  %17 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %16, align 8
  %18 = ptrtoint %"class.base::OnceCallback"* %14 to i64
  %19 = icmp ult %"class.base::OnceCallback"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.base::OnceCallback"* %17 to i64
  %22 = ptrtoint %"class.base::OnceCallback"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #15
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #15
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !6

29:                                               ; preds = %20
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #15
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.base::OnceCallback"* %14, %15
  br i1 %37, label %49, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"class.base::OnceCallback"* [ %47, %38 ], [ %17, %36 ]
  %40 = phi %"class.base::OnceCallback"* [ %46, %38 ], [ %14, %36 ]
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::OnceCallback"* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %45) #15
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 1
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %39, i64 1
  %48 = icmp eq %"class.base::OnceCallback"* %46, %15
  br i1 %48, label %49, label %38

49:                                               ; preds = %38, %36
  %50 = sub i64 %2, %1
  br label %127

51:                                               ; preds = %6
  %52 = icmp ult i64 %2, %1
  br i1 %52, label %53, label %127

53:                                               ; preds = %51
  %54 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %0, i64 %1)
  %55 = tail call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %0, i64 %11)
  %56 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %3, i64 0, i32 0
  %57 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %56, align 8
  %58 = ptrtoint %"class.base::OnceCallback"* %54 to i64
  %59 = icmp ult %"class.base::OnceCallback"* %57, %55
  br i1 %59, label %60, label %76

60:                                               ; preds = %53
  %61 = ptrtoint %"class.base::OnceCallback"* %57 to i64
  %62 = ptrtoint %"class.base::OnceCallback"* %55 to i64
  %63 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %62, i64 %58) #15
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = extractvalue { i64, i1 } %63, 0
  %66 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %61, i64 %65) #15
  %67 = extractvalue { i64, i1 } %66, 1
  %68 = or i1 %64, %67
  br i1 %68, label %69, label %70, !prof !6

69:                                               ; preds = %60
  tail call void @llvm.trap() #15
  unreachable

70:                                               ; preds = %60
  %71 = extractvalue { i64, i1 } %66, 0
  %72 = icmp ugt i64 %71, %58
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #15
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #15
  br label %76

76:                                               ; preds = %73, %70, %53
  %77 = icmp eq %"class.base::OnceCallback"* %54, %55
  br i1 %77, label %89, label %78

78:                                               ; preds = %76, %78
  %79 = phi %"class.base::OnceCallback"* [ %87, %78 ], [ %57, %76 ]
  %80 = phi %"class.base::OnceCallback"* [ %86, %78 ], [ %54, %76 ]
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %85) #15
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 1
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %79, i64 1
  %88 = icmp eq %"class.base::OnceCallback"* %86, %55
  br i1 %88, label %89, label %78

89:                                               ; preds = %78, %76
  %90 = sub i64 %11, %1
  %91 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %0, i64 0)
  %92 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %0, i64 %2)
  %93 = call dereferenceable(8) %"class.base::OnceCallback"* @_ZN4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"* %3, i64 %90)
  %94 = ptrtoint %"class.base::OnceCallback"* %91 to i64
  %95 = icmp ult %"class.base::OnceCallback"* %93, %92
  br i1 %95, label %96, label %112

96:                                               ; preds = %89
  %97 = ptrtoint %"class.base::OnceCallback"* %93 to i64
  %98 = ptrtoint %"class.base::OnceCallback"* %92 to i64
  %99 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %98, i64 %94) #15
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  %102 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %97, i64 %101) #15
  %103 = extractvalue { i64, i1 } %102, 1
  %104 = or i1 %100, %103
  br i1 %104, label %105, label %106, !prof !6

105:                                              ; preds = %96
  call void @llvm.trap() #15
  unreachable

106:                                              ; preds = %96
  %107 = extractvalue { i64, i1 } %102, 0
  %108 = icmp ugt i64 %107, %94
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #15
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #15
  br label %112

112:                                              ; preds = %109, %106, %89
  %113 = icmp eq %"class.base::OnceCallback"* %91, %92
  br i1 %113, label %125, label %114

114:                                              ; preds = %112, %114
  %115 = phi %"class.base::OnceCallback"* [ %123, %114 ], [ %93, %112 ]
  %116 = phi %"class.base::OnceCallback"* [ %122, %114 ], [ %91, %112 ]
  %117 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %121) #15
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 1
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %115, i64 1
  %124 = icmp eq %"class.base::OnceCallback"* %122, %92
  br i1 %124, label %125, label %114

125:                                              ; preds = %114, %112
  %126 = add i64 %90, %2
  br label %127

127:                                              ; preds = %51, %125, %49
  %128 = phi i64 [ %126, %125 ], [ %50, %49 ], [ 0, %51 ]
  store i64 %128, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::OnceCallback"* @_ZNK4base8internal12VectorBufferINS_12OnceCallbackIFvvEEEEixEm(%"class.base::internal::VectorBuffer.104"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %0, i64 0, i32 0
  %24 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %23, align 8
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 %1
  ret %"class.base::OnceCallback"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.103"*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer.104"*
  %4 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #15
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #15
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #15
  br i1 %31, label %32, label %33, !prof !6

32:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer.104", %"class.base::internal::VectorBuffer.104"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #15
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque.103", %"class.base::circular_deque.103"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_12OnceCallbackIFvvEEEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer.104"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer.104"* nonnull %3, i64* %11, i64* %13) #15
  %39 = bitcast %"class.base::circular_deque.103"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #15
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque.103"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #15
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN7content12_GLOBAL__N_132GetEmulatorGestureProviderConfigEN2ui25GestureProviderConfigTypeENS_13TouchEmulator4ModeE: argument 0"}
!5 = distinct !{!5, !"_ZN7content12_GLOBAL__N_132GetEmulatorGestureProviderConfigEN2ui25GestureProviderConfigTypeENS_13TouchEmulator4ModeE"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!9 = distinct !{!9, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!12 = distinct !{!12, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!15 = distinct !{!15, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!18 = distinct !{!18, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!21 = distinct !{!21, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!24 = distinct !{!24, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!27 = distinct !{!27, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!30 = distinct !{!30, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE: argument 0"}
!33 = distinct !{!33, !"_ZN7content13TouchEmulator20GetPinchGestureEventEN5blink5mojom9EventTypeERKNS1_15WebGestureEventE"}
