; ModuleID = '../../third_party/webrtc/api/rtp_receiver_interface.cc'
source_filename = "../../third_party/webrtc/api/rtp_receiver_interface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.webrtc::RtpReceiverInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.rtc::scoped_refptr"*, %"class.rtc::scoped_refptr"*, %"class.std::__1::__compressed_pair.8" }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::MediaStreamInterface"* }
%"class.webrtc::MediaStreamInterface" = type { %"class.rtc::RefCountInterface", %"class.webrtc::NotifierInterface" }
%"class.webrtc::NotifierInterface" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.rtc::scoped_refptr"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.webrtc::RtpSource"*, %"class.webrtc::RtpSource"*, %"class.std::__1::__compressed_pair.26" }
%"class.webrtc::RtpSource" = type <{ i64, i32, i32, %"struct.webrtc::RtpSource::Extensions", i32, [4 x i8] }>
%"struct.webrtc::RtpSource::Extensions" = type { %"class.absl::optional", %"class.absl::optional.16" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.15 }
%union.anon.15 = type { i8 }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.21" }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.webrtc::RtpSource"* }
%"class.rtc::scoped_refptr.31" = type { %"class.webrtc::FrameDecryptorInterface"* }
%"class.webrtc::FrameDecryptorInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::scoped_refptr.32" = type { %"class.webrtc::DtlsTransportInterface"* }
%"class.webrtc::DtlsTransportInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::scoped_refptr.33" = type { %"class.webrtc::FrameTransformerInterface"* }
%"class.webrtc::FrameTransformerInterface" = type { %"class.rtc::RefCountInterface" }
%"struct.webrtc::RtpParameters" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.34", %"class.std::__1::vector.66", %"class.std::__1::vector.73", %"struct.webrtc::RtcpParameters", %"class.absl::optional.95" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.webrtc::RtpCodecParameters"*, %"struct.webrtc::RtpCodecParameters"*, %"class.std::__1::__compressed_pair.61" }
%"struct.webrtc::RtpCodecParameters" = type { %"class.std::__1::basic_string", i32, i32, %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.36", %"class.std::__1::vector.41", %"class.std::__1::map" }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { i32 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.webrtc::RtcpFeedback"*, %"struct.webrtc::RtcpFeedback"*, %"class.std::__1::__compressed_pair.48" }
%"struct.webrtc::RtcpFeedback" = type { i32, %"class.absl::optional.43" }
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { i32 }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.webrtc::RtcpFeedback"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.webrtc::RtpCodecParameters"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.webrtc::RtpExtension"*, %"struct.webrtc::RtpExtension"*, %"class.std::__1::__compressed_pair.68" }
%"struct.webrtc::RtpExtension" = type <{ %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.webrtc::RtpExtension"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.webrtc::RtpEncodingParameters"*, %"struct.webrtc::RtpEncodingParameters"*, %"class.std::__1::__compressed_pair.90" }
%"struct.webrtc::RtpEncodingParameters" = type <{ %"class.absl::optional.75", double, i32, %"class.absl::optional.36", %"class.absl::optional.36", [4 x i8], %"class.absl::optional.80", %"class.absl::optional.36", %"class.absl::optional.80", %"class.absl::optional.85", i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.absl::optional.75" = type { %"class.absl::optional_internal::optional_data.76" }
%"class.absl::optional_internal::optional_data.76" = type { %"class.absl::optional_internal::optional_data_base.77" }
%"class.absl::optional_internal::optional_data_base.77" = type { %"class.absl::optional_internal::optional_data_dtor_base.78" }
%"class.absl::optional_internal::optional_data_dtor_base.78" = type { i8, %union.anon.79 }
%union.anon.79 = type { i32 }
%"class.absl::optional.80" = type { %"class.absl::optional_internal::optional_data.81" }
%"class.absl::optional_internal::optional_data.81" = type { %"class.absl::optional_internal::optional_data_base.82" }
%"class.absl::optional_internal::optional_data_base.82" = type { %"class.absl::optional_internal::optional_data_dtor_base.83" }
%"class.absl::optional_internal::optional_data_dtor_base.83" = type { i8, %union.anon.84 }
%union.anon.84 = type { double }
%"class.absl::optional.85" = type { %"class.absl::optional_internal::optional_data.86" }
%"class.absl::optional_internal::optional_data.86" = type { %"class.absl::optional_internal::optional_data_base.87" }
%"class.absl::optional_internal::optional_data_base.87" = type { %"class.absl::optional_internal::optional_data_dtor_base.88" }
%"class.absl::optional_internal::optional_data_dtor_base.88" = type { i8, %union.anon.89 }
%union.anon.89 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.webrtc::RtpEncodingParameters"* }
%"struct.webrtc::RtcpParameters" = type <{ %"class.absl::optional.75", %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { i32 }

$_ZN3rtc17RefCountInterfaceD2Ev = comdat any

$_ZN6webrtc20RtpReceiverInterfaceD0Ev = comdat any

$_ZN6webrtc20RtpReceiverInterface13SetParametersERKNS_13RtpParametersE = comdat any

@_ZTVN6webrtc20RtpReceiverInterfaceE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.rtc::RefCountInterface"*)* @_ZN3rtc17RefCountInterfaceD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RtpReceiverInterface"*)* @_ZN6webrtc20RtpReceiverInterfaceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.rtc::scoped_refptr.32"*, %"class.webrtc::RtpReceiverInterface"*)* @_ZNK6webrtc20RtpReceiverInterface14dtls_transportEv to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.webrtc::RtpReceiverInterface"*)* @_ZNK6webrtc20RtpReceiverInterface10stream_idsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.6"*, %"class.webrtc::RtpReceiverInterface"*)* @_ZNK6webrtc20RtpReceiverInterface7streamsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.webrtc::RtpReceiverInterface"*, %"struct.webrtc::RtpParameters"*)* @_ZN6webrtc20RtpReceiverInterface13SetParametersERKNS_13RtpParametersE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.std::__1::vector.13"*, %"class.webrtc::RtpReceiverInterface"*)* @_ZNK6webrtc20RtpReceiverInterface10GetSourcesEv to i8*), i8* bitcast (void (%"class.webrtc::RtpReceiverInterface"*, %"class.rtc::scoped_refptr.31"*)* @_ZN6webrtc20RtpReceiverInterface17SetFrameDecryptorEN3rtc13scoped_refptrINS_23FrameDecryptorInterfaceEEE to i8*), i8* bitcast (void (%"class.rtc::scoped_refptr.31"*, %"class.webrtc::RtpReceiverInterface"*)* @_ZNK6webrtc20RtpReceiverInterface17GetFrameDecryptorEv to i8*), i8* bitcast (void (%"class.webrtc::RtpReceiverInterface"*, %"class.rtc::scoped_refptr.33"*)* @_ZN6webrtc20RtpReceiverInterface40SetDepacketizerToDecoderFrameTransformerEN3rtc13scoped_refptrINS_25FrameTransformerInterfaceEEE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc20RtpReceiverInterface10stream_idsEv(%"class.std::__1::vector"* noalias nocapture sret, %"class.webrtc::RtpReceiverInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc20RtpReceiverInterface7streamsEv(%"class.std::__1::vector.6"* noalias nocapture sret, %"class.webrtc::RtpReceiverInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc20RtpReceiverInterface10GetSourcesEv(%"class.std::__1::vector.13"* noalias nocapture sret, %"class.webrtc::RtpReceiverInterface"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector.13"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc20RtpReceiverInterface17SetFrameDecryptorEN3rtc13scoped_refptrINS_23FrameDecryptorInterfaceEEE(%"class.webrtc::RtpReceiverInterface"* nocapture, %"class.rtc::scoped_refptr.31"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK6webrtc20RtpReceiverInterface17GetFrameDecryptorEv(%"class.rtc::scoped_refptr.31"* noalias nocapture sret, %"class.webrtc::RtpReceiverInterface"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rtc::scoped_refptr.31", %"class.rtc::scoped_refptr.31"* %0, i64 0, i32 0
  store %"class.webrtc::FrameDecryptorInterface"* null, %"class.webrtc::FrameDecryptorInterface"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK6webrtc20RtpReceiverInterface14dtls_transportEv(%"class.rtc::scoped_refptr.32"* noalias nocapture sret, %"class.webrtc::RtpReceiverInterface"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rtc::scoped_refptr.32", %"class.rtc::scoped_refptr.32"* %0, i64 0, i32 0
  store %"class.webrtc::DtlsTransportInterface"* null, %"class.webrtc::DtlsTransportInterface"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc20RtpReceiverInterface40SetDepacketizerToDecoderFrameTransformerEN3rtc13scoped_refptrINS_25FrameTransformerInterfaceEEE(%"class.webrtc::RtpReceiverInterface"* nocapture, %"class.rtc::scoped_refptr.33"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc17RefCountInterfaceD2Ev(%"class.rtc::RefCountInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc20RtpReceiverInterfaceD0Ev(%"class.webrtc::RtpReceiverInterface"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc20RtpReceiverInterface13SetParametersERKNS_13RtpParametersE(%"class.webrtc::RtpReceiverInterface"*, %"struct.webrtc::RtpParameters"* dereferenceable(168)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
