; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/video_rtp_depacketizer_av1.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/video_rtp_depacketizer_av1.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rtc::scoped_refptr" = type { %"class.webrtc::EncodedImageBuffer"* }
%"class.webrtc::EncodedImageBuffer" = type { %"class.webrtc::EncodedImageBufferInterface", i64, i8* }
%"class.webrtc::EncodedImageBufferInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.webrtc::VideoRtpDepacketizerAv1" = type { %"class.webrtc::VideoRtpDepacketizer" }
%"class.webrtc::VideoRtpDepacketizer" = type { i32 (...)** }
%"class.rtc::ArrayView.0" = type { %"class.rtc::impl::ArrayViewBase.1" }
%"class.rtc::impl::ArrayViewBase.1" = type { i8*, i64 }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.2" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.2" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Allocated", [336 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Allocated" = type { %"struct.webrtc::(anonymous namespace)::ObuInfo"*, i64 }
%"struct.webrtc::(anonymous namespace)::ObuInfo" = type { i64, %"struct.std::__1::array", i64, %"class.webrtc::(anonymous namespace)::ArrayOfArrayViews::const_iterator", %"class.webrtc::(anonymous namespace)::ArrayOfArrayViews" }
%"struct.std::__1::array" = type { [7 x i8] }
%"class.webrtc::(anonymous namespace)::ArrayOfArrayViews::const_iterator" = type { %"class.rtc::ArrayView.0"*, i64 }
%"class.webrtc::(anonymous namespace)::ArrayOfArrayViews" = type { i64, %"class.absl::InlinedVector.3" }
%"class.absl::InlinedVector.3" = type { %"class.absl::inlined_vector_internal::Storage.4" }
%"class.absl::inlined_vector_internal::Storage.4" = type { %"class.absl::container_internal::CompressedTuple.5", %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data" }
%"class.absl::container_internal::CompressedTuple.5" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.6" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.6" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.2" }
%"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Allocated", [16 x i8] }
%"struct.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Allocated" = type { %"class.rtc::ArrayView.0"*, i64 }
%"class.rtc::ByteBufferReader" = type { i8*, i64, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::VideoRtpDepacketizer::ParsedRtpPayload" }
%"struct.webrtc::VideoRtpDepacketizer::ParsedRtpPayload" = type { %"struct.webrtc::RTPVideoHeader", %"class.rtc::CopyOnWriteBuffer" }
%"struct.webrtc::RTPVideoHeader" = type { %"class.absl::optional.13", i32, i16, i16, i32, i8, i8, i8, i8, i8, i32, %"struct.webrtc::VideoPlayoutDelay", %"struct.webrtc::VideoSendTiming", %"class.absl::optional.39", %"class.absl::optional.49", %"class.absl::variant" }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"struct.webrtc::RTPVideoHeader::GenericDescriptorInfo" }
%"struct.webrtc::RTPVideoHeader::GenericDescriptorInfo" = type { i64, i32, i32, %"class.absl::InlinedVector.18", %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.32", %"class.std::__1::bitset" }
%"class.absl::InlinedVector.18" = type { %"class.absl::inlined_vector_internal::Storage.19" }
%"class.absl::inlined_vector_internal::Storage.19" = type { %"class.absl::container_internal::CompressedTuple.20", %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" }
%"class.absl::container_internal::CompressedTuple.20" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.21" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.21" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.2" }
%"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.25" = type { %"class.absl::inlined_vector_internal::Storage.26" }
%"class.absl::inlined_vector_internal::Storage.26" = type { %"class.absl::container_internal::CompressedTuple.27", %"union.absl::inlined_vector_internal::Storage<long, 5, std::__1::allocator<long> >::Data" }
%"class.absl::container_internal::CompressedTuple.27" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.28" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.28" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.2" }
%"union.absl::inlined_vector_internal::Storage<long, 5, std::__1::allocator<long> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<long, 5, std::__1::allocator<long> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<long, 5, std::__1::allocator<long> >::Allocated" = type { i64*, i64 }
%"class.absl::InlinedVector.32" = type { %"class.absl::inlined_vector_internal::Storage.33" }
%"class.absl::inlined_vector_internal::Storage.33" = type { %"class.absl::container_internal::CompressedTuple.34", %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" }
%"class.absl::container_internal::CompressedTuple.34" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.35" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.35" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.2" }
%"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.webrtc::VideoPlayoutDelay" = type { i32, i32 }
%"struct.webrtc::VideoSendTiming" = type { i16, i16, i16, i16, i16, i16, i8 }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %"class.webrtc::ColorSpace" }
%"class.webrtc::ColorSpace" = type { i8, i8, i8, i32, i32, i32, %"class.absl::optional.44" }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"struct.webrtc::HdrMetadata" }
%"struct.webrtc::HdrMetadata" = type { %"struct.webrtc::HdrMasteringMetadata", i32, i32 }
%"struct.webrtc::HdrMasteringMetadata" = type { %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", float, float }
%"struct.webrtc::HdrMasteringMetadata::Chromaticity" = type { float, float }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { i16 }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { %"union.absl::variant_internal::Union.54" }
%"union.absl::variant_internal::Union.54" = type { %"union.absl::variant_internal::Union.55" }
%"union.absl::variant_internal::Union.55" = type { %"struct.webrtc::RTPVideoHeaderVP9" }
%"struct.webrtc::RTPVideoHeaderVP9" = type { i8, i8, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8, i8, i8, [3 x i8], [3 x i16], i64, i64, i8, [8 x i16], [8 x i16], %"struct.webrtc::GofInfoVP9", i8 }
%"struct.webrtc::GofInfoVP9" = type { i64, [255 x i8], [255 x i8], [255 x i8], [255 x [3 x i8]], i16 }
%"class.rtc::CopyOnWriteBuffer" = type { %"class.rtc::scoped_refptr.59", i64, i64 }
%"class.rtc::scoped_refptr.59" = type { %"class.rtc::FinalRefCountedObject"* }
%"class.rtc::FinalRefCountedObject" = type <{ %"class.rtc::BufferT", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

$_ZN6webrtc20VideoRtpDepacketizerD2Ev = comdat any

$_ZN6webrtc23VideoRtpDepacketizerAv1D0Ev = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE8InitFromERKS9_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE15EmplaceBackSlowIJRPS4_RmEEERS5_DpOT_ = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE2ElEENS4_ILS5_5EmEEEEEvPKciS9_DpRKT_E1t = comdat any

@.str = private unnamed_addr constant [79 x i8] c"../../third_party/webrtc/modules/rtp_rtcp/source/video_rtp_depacketizer_av1.cc\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"write_at - bitstream->data() == bitstream->size()\00", align 1
@_ZTVN6webrtc23VideoRtpDepacketizerAv1E = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::VideoRtpDepacketizer"*)* @_ZN6webrtc20VideoRtpDepacketizerD2Ev to i8*), i8* bitcast (void (%"class.webrtc::VideoRtpDepacketizerAv1"*)* @_ZN6webrtc23VideoRtpDepacketizerAv1D0Ev to i8*), i8* bitcast (void (%"class.absl::optional"*, %"class.webrtc::VideoRtpDepacketizerAv1"*, %"class.rtc::CopyOnWriteBuffer"*)* @_ZN6webrtc23VideoRtpDepacketizerAv15ParseEN3rtc17CopyOnWriteBufferE to i8*), i8* bitcast (void (%"class.rtc::scoped_refptr"*, %"class.webrtc::VideoRtpDepacketizerAv1"*, %"class.rtc::ArrayView.0"*, i64)* @_ZN6webrtc23VideoRtpDepacketizerAv113AssembleFrameEN3rtc9ArrayViewIKNS2_IKhLln4711EEELln4711EEE to i8*)] }, align 8
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE2ElEENS4_ILS5_5EmEEEEEvPKciS9_DpRKT_E1t = linkonce_odr hidden constant [4 x i8] c"\0D\02\05\00", comdat, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc23VideoRtpDepacketizerAv113AssembleFrameEN3rtc9ArrayViewIKNS2_IKhLln4711EEELln4711EEE(%"class.rtc::scoped_refptr"* noalias nocapture sret, %"class.webrtc::VideoRtpDepacketizerAv1"* nocapture readnone, %"class.rtc::ArrayView.0"*, i64) unnamed_addr #0 align 2 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.absl::InlinedVector", align 8
  %8 = alloca %"class.rtc::ByteBufferReader", align 8
  %9 = alloca i8, align 1
  %10 = alloca i64, align 8
  %11 = alloca %"class.absl::InlinedVector", align 8
  %12 = alloca %"class.rtc::scoped_refptr", align 8
  %13 = bitcast %"class.absl::InlinedVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 360, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 360, i1 false)
  %14 = icmp eq i64 %3, 0
  %15 = select i1 %14, %"class.rtc::ArrayView.0"* null, %"class.rtc::ArrayView.0"* %2
  %16 = bitcast %"class.absl::InlinedVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 360, i8* nonnull %16) #10, !noalias !2
  %17 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0, i32 1
  %18 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 352, i1 false) #10, !noalias !2
  %19 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %19, align 8, !noalias !2
  %20 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %15, i64 %3
  br i1 %14, label %21, label %23

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %22, align 8, !alias.scope !2
  br label %246

23:                                               ; preds = %4
  %24 = bitcast %"class.rtc::ByteBufferReader"* %8 to i8*
  %25 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %8, i64 0, i32 0
  %26 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %8, i64 0, i32 2
  %27 = getelementptr inbounds %"class.rtc::ByteBufferReader", %"class.rtc::ByteBufferReader"* %8, i64 0, i32 3
  %28 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data"* %17 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  %30 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0, i32 1, i32 0, i32 1
  %31 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data"* %17 to i64
  %32 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"** %28 to i64*
  %33 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0
  %34 = bitcast i64* %10 to i8*
  %35 = bitcast i8** %5 to i8*
  %36 = bitcast i64* %6 to i8*
  br label %37

37:                                               ; preds = %186, %23
  %38 = phi i8 [ 0, %23 ], [ %189, %186 ]
  %39 = phi %"class.rtc::ArrayView.0"* [ %2, %23 ], [ %190, %186 ]
  %40 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %39, i64 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8, !noalias !2
  %42 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %39, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false) #10, !noalias !2
  call void @_ZN3rtc16ByteBufferReaderC1EPKcm(%"class.rtc::ByteBufferReader"* nonnull %8, i8* %41, i64 %43) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #10, !noalias !2
  store i8 -86, i8* %9, align 1, !noalias !2
  %44 = call zeroext i1 @_ZN3rtc16ByteBufferReader9ReadUInt8EPh(%"class.rtc::ByteBufferReader"* nonnull %8, i8* nonnull %9) #10
  br i1 %44, label %47, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %46, align 8, !alias.scope !2
  br label %192

47:                                               ; preds = %37
  %48 = load i8, i8* %9, align 1, !noalias !2
  %49 = icmp slt i8 %48, 0
  %50 = lshr i8 %48, 7
  %51 = icmp eq i8 %50, %38
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %53, align 8, !alias.scope !2
  br label %192

54:                                               ; preds = %47
  %55 = lshr i8 %48, 4
  %56 = and i8 %55, 3
  %57 = zext i8 %56 to i32
  %58 = load i64, i64* %27, align 8, !noalias !2
  %59 = load i64, i64* %26, align 8, !noalias !2
  %60 = icmp eq i64 %58, %59
  br i1 %60, label %63, label %61

61:                                               ; preds = %54
  %62 = xor i1 %49, true
  br label %86

63:                                               ; preds = %54
  %64 = icmp eq i8 %56, 1
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %66, align 8, !alias.scope !2
  br label %192

67:                                               ; preds = %63
  br i1 %49, label %186, label %68

68:                                               ; preds = %67
  %69 = load i64, i64* %19, align 8, !noalias !5
  %70 = and i64 %69, 1
  %71 = icmp eq i64 %70, 0
  %72 = load i64, i64* %30, align 8, !noalias !2
  %73 = select i1 %71, i64 4, i64 %72
  %74 = lshr i64 %69, 1
  %75 = icmp eq i64 %74, %73
  br i1 %75, label %84, label %76, !prof !8

76:                                               ; preds = %68
  %77 = load i64, i64* %32, align 8, !noalias !2
  %78 = select i1 %71, i64 %31, i64 %77
  %79 = inttoptr i64 %78 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  %80 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %79, i64 %74
  %81 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 88, i1 false) #10
  %82 = load i64, i64* %19, align 8, !noalias !2
  %83 = add i64 %82, 2
  store i64 %83, i64* %19, align 8, !noalias !2
  br label %186

84:                                               ; preds = %68
  %85 = call fastcc dereferenceable(88) %"struct.webrtc::(anonymous namespace)::ObuInfo"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJEEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* nonnull %33) #10
  br label %186

86:                                               ; preds = %179, %61
  %87 = phi i32 [ 1, %61 ], [ %182, %179 ]
  %88 = icmp ne i32 %87, 1
  %89 = or i1 %88, %62
  %90 = load i64, i64* %19, align 8, !noalias !2
  br i1 %89, label %102, label %91

91:                                               ; preds = %86
  %92 = icmp ult i64 %90, 2
  br i1 %92, label %93, label %94, !prof !8

93:                                               ; preds = %91
  call void @llvm.trap() #10
  unreachable

94:                                               ; preds = %91
  %95 = and i64 %90, 1
  %96 = icmp eq i64 %95, 0
  %97 = load %"struct.webrtc::(anonymous namespace)::ObuInfo"*, %"struct.webrtc::(anonymous namespace)::ObuInfo"** %28, align 8, !noalias !2
  %98 = select i1 %96, %"struct.webrtc::(anonymous namespace)::ObuInfo"* %29, %"struct.webrtc::(anonymous namespace)::ObuInfo"* %97
  %99 = lshr i64 %90, 1
  %100 = add nsw i64 %99, -1
  %101 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %98, i64 %100
  br label %119

102:                                              ; preds = %86
  %103 = and i64 %90, 1
  %104 = icmp eq i64 %103, 0
  %105 = load i64, i64* %30, align 8, !noalias !2
  %106 = select i1 %104, i64 4, i64 %105
  %107 = lshr i64 %90, 1
  %108 = icmp eq i64 %107, %106
  br i1 %108, label %117, label %109, !prof !8

109:                                              ; preds = %102
  %110 = load i64, i64* %32, align 8, !noalias !2
  %111 = select i1 %104, i64 %31, i64 %110
  %112 = inttoptr i64 %111 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  %113 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %112, i64 %107
  %114 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 88, i1 false) #10
  %115 = load i64, i64* %19, align 8, !noalias !2
  %116 = add i64 %115, 2
  store i64 %116, i64* %19, align 8, !noalias !2
  br label %119

117:                                              ; preds = %102
  %118 = call fastcc dereferenceable(88) %"struct.webrtc::(anonymous namespace)::ObuInfo"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJEEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"* nonnull %33) #10
  br label %119

119:                                              ; preds = %117, %109, %94
  %120 = phi %"struct.webrtc::(anonymous namespace)::ObuInfo"* [ %101, %94 ], [ %113, %109 ], [ %118, %117 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10, !noalias !2
  store i64 -6148914691236517206, i64* %10, align 8, !noalias !2
  %121 = icmp eq i32 %87, %57
  br i1 %121, label %130, label %122

122:                                              ; preds = %119
  %123 = call zeroext i1 @_ZN3rtc16ByteBufferReader11ReadUVarintEPm(%"class.rtc::ByteBufferReader"* nonnull %8, i64* nonnull %10) #10
  br i1 %123, label %124, label %184

124:                                              ; preds = %122
  %125 = load i64, i64* %10, align 8, !noalias !2
  %126 = load i64, i64* %27, align 8, !noalias !2
  %127 = load i64, i64* %26, align 8, !noalias !2
  %128 = sub i64 %126, %127
  %129 = icmp ugt i64 %125, %128
  br i1 %129, label %184, label %134

130:                                              ; preds = %119
  %131 = load i64, i64* %27, align 8, !noalias !2
  %132 = load i64, i64* %26, align 8, !noalias !2
  %133 = sub i64 %131, %132
  store i64 %133, i64* %10, align 8, !noalias !2
  br label %134

134:                                              ; preds = %130, %124
  %135 = phi i64 [ %126, %124 ], [ %131, %130 ]
  %136 = phi i64 [ %127, %124 ], [ %132, %130 ]
  %137 = phi i64 [ %125, %124 ], [ %133, %130 ]
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %179, label %139

139:                                              ; preds = %134
  %140 = load i8*, i8** %25, align 8, !noalias !2
  %141 = getelementptr inbounds i8, i8* %140, i64 %136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10, !noalias !2
  store i8* %141, i8** %5, align 8, !noalias !2
  store i64 %137, i64* %6, align 8, !noalias !2
  %142 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %120, i64 0, i32 4, i32 1
  %143 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %142, i64 0, i32 0
  %144 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i64, i64* %144, align 8, !noalias !9
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %154, label %148

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %120, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %150 = bitcast %"class.rtc::ArrayView.0"** %149 to i64*
  %151 = load i64, i64* %150, align 8, !noalias !9
  %152 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %120, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 1
  %153 = load i64, i64* %152, align 8, !noalias !9
  br label %157

154:                                              ; preds = %139
  %155 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %120, i64 0, i32 4, i32 1, i32 0, i32 1
  %156 = ptrtoint %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %155 to i64
  br label %157

157:                                              ; preds = %154, %148
  %158 = phi i64 [ %156, %154 ], [ %151, %148 ]
  %159 = phi i64 [ 2, %154 ], [ %153, %148 ]
  %160 = lshr i64 %145, 1
  %161 = icmp eq i64 %160, %159
  br i1 %161, label %168, label %162, !prof !8

162:                                              ; preds = %157
  %163 = inttoptr i64 %158 to %"class.rtc::ArrayView.0"*
  %164 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %163, i64 %160, i32 0, i32 0
  store i8* %141, i8** %164, align 8
  %165 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %163, i64 %160, i32 0, i32 1
  store i64 %137, i64* %165, align 8
  %166 = load i64, i64* %144, align 8
  %167 = add i64 %166, 2
  store i64 %167, i64* %144, align 8
  br label %170

168:                                              ; preds = %157
  %169 = call dereferenceable(16) %"class.rtc::ArrayView.0"* @_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE15EmplaceBackSlowIJRPS4_RmEEERS5_DpOT_(%"class.absl::inlined_vector_internal::Storage.4"* %143, i8** nonnull dereferenceable(8) %5, i64* nonnull dereferenceable(8) %6) #10
  br label %170

170:                                              ; preds = %168, %162
  %171 = load i64, i64* %6, align 8, !noalias !2
  %172 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %120, i64 0, i32 4, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = add i64 %173, %171
  store i64 %174, i64* %172, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10, !noalias !2
  %175 = load i64, i64* %10, align 8, !noalias !2
  %176 = call zeroext i1 @_ZN3rtc16ByteBufferReader7ConsumeEm(%"class.rtc::ByteBufferReader"* nonnull %8, i64 %175) #10
  %177 = load i64, i64* %27, align 8, !noalias !2
  %178 = load i64, i64* %26, align 8, !noalias !2
  br label %179

179:                                              ; preds = %170, %134
  %180 = phi i64 [ %136, %134 ], [ %178, %170 ]
  %181 = phi i64 [ %135, %134 ], [ %177, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10, !noalias !2
  %182 = add nuw nsw i32 %87, 1
  %183 = icmp eq i64 %181, %180
  br i1 %183, label %186, label %86

184:                                              ; preds = %124, %122
  %185 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %185, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10, !noalias !2
  br label %192

186:                                              ; preds = %179, %84, %76, %67
  %187 = load i8, i8* %9, align 1, !noalias !2
  %188 = lshr i8 %187, 6
  %189 = and i8 %188, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10, !noalias !2
  %190 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %39, i64 1
  %191 = icmp eq %"class.rtc::ArrayView.0"* %190, %20
  br i1 %191, label %193, label %37

192:                                              ; preds = %184, %65, %52, %45
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10, !noalias !2
  br label %250

193:                                              ; preds = %186
  %194 = icmp eq i8 %189, 0
  %195 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %195, align 8, !alias.scope !2
  br i1 %194, label %196, label %250

196:                                              ; preds = %193
  %197 = load i64, i64* %19, align 8, !noalias !2
  %198 = and i64 %197, 1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %207, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %202 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"** %201 to <2 x i64>*
  %203 = load <2 x i64>, <2 x i64>* %202, align 8, !noalias !2
  %204 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %205 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"** %204 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %205, align 8, !alias.scope !2
  %206 = or i64 %197, 1
  store i64 %206, i64* %195, align 8, !alias.scope !2
  store i64 0, i64* %19, align 8, !noalias !2
  br label %258

207:                                              ; preds = %196
  %208 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 1
  %209 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data"* %208 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  %210 = lshr i64 %197, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %246, label %212

212:                                              ; preds = %207
  %213 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data"* %17 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  br label %214

214:                                              ; preds = %240, %212
  %215 = phi %"struct.webrtc::(anonymous namespace)::ObuInfo"* [ %241, %240 ], [ %213, %212 ]
  %216 = phi i64 [ %242, %240 ], [ 0, %212 ]
  %217 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %209, i64 %216
  %218 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"* %217 to i8*
  %219 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 40, i1 false) #10
  %220 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %209, i64 %216, i32 4, i32 0
  %221 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %215, i64 0, i32 4, i32 0
  %222 = load i64, i64* %221, align 8, !noalias !2
  store i64 %222, i64* %220, align 8, !alias.scope !2
  %223 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %209, i64 %216, i32 4, i32 1
  %224 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %215, i64 0, i32 4, i32 1
  %225 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %224, i64 0, i32 0
  %226 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %223, i64 0, i32 0
  %227 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %227, align 8, !alias.scope !2
  %228 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i64, i64* %228, align 8, !noalias !2
  %230 = icmp ult i64 %229, 2
  br i1 %230, label %240, label %231

231:                                              ; preds = %214
  %232 = and i64 %229, 1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %239

234:                                              ; preds = %231
  store i64 %229, i64* %227, align 8, !alias.scope !2
  %235 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %215, i64 0, i32 4, i32 1, i32 0, i32 1
  %236 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %209, i64 %216, i32 4, i32 1, i32 0, i32 1
  %237 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %236 to i8*
  %238 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %238, i64 32, i1 false) #10
  br label %240

239:                                              ; preds = %231
  call void @_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE8InitFromERKS9_(%"class.absl::inlined_vector_internal::Storage.4"* %226, %"class.absl::inlined_vector_internal::Storage.4"* dereferenceable(40) %225) #10
  br label %240

240:                                              ; preds = %239, %234, %214
  %241 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %215, i64 1
  %242 = add nuw nsw i64 %216, 1
  %243 = icmp eq i64 %242, %210
  br i1 %243, label %244, label %214

244:                                              ; preds = %240
  %245 = load i64, i64* %19, align 8, !noalias !2
  br label %246

246:                                              ; preds = %21, %244, %207
  %247 = phi i64* [ %195, %244 ], [ %195, %207 ], [ %22, %21 ]
  %248 = phi i64 [ %245, %244 ], [ %197, %207 ], [ 0, %21 ]
  %249 = and i64 %248, -2
  store i64 %249, i64* %247, align 8, !alias.scope !2
  br label %250

250:                                              ; preds = %246, %193, %192
  %251 = phi i64 [ %249, %246 ], [ 0, %193 ], [ 0, %192 ]
  %252 = load i64, i64* %19, align 8, !noalias !2
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0
  call fastcc void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15DestroyContentsEv(%"class.absl::inlined_vector_internal::Storage"* nonnull %255) #10
  %256 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load i64, i64* %256, align 8
  br label %258

258:                                              ; preds = %200, %250, %254
  %259 = phi i64 [ %206, %200 ], [ %251, %250 ], [ %257, %254 ]
  call void @llvm.lifetime.end.p0i8(i64 360, i8* nonnull %16) #10, !noalias !2
  %260 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = icmp ult i64 %259, 2
  br i1 %261, label %262, label %264

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %0, i64 0, i32 0
  store %"class.webrtc::EncodedImageBuffer"* null, %"class.webrtc::EncodedImageBuffer"** %263, align 8
  br label %559

264:                                              ; preds = %258
  %265 = and i64 %259, 1
  %266 = icmp eq i64 %265, 0
  %267 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %268 = load %"struct.webrtc::(anonymous namespace)::ObuInfo"*, %"struct.webrtc::(anonymous namespace)::ObuInfo"** %267, align 8
  %269 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0, i32 1
  %270 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data"* %269 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  %271 = select i1 %266, %"struct.webrtc::(anonymous namespace)::ObuInfo"* %270, %"struct.webrtc::(anonymous namespace)::ObuInfo"* %268
  %272 = lshr i64 %259, 1
  %273 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %271, i64 %272
  %274 = icmp eq i64 %272, 0
  br i1 %274, label %433, label %275

275:                                              ; preds = %264, %417
  %276 = phi i64 [ %428, %417 ], [ 0, %264 ]
  %277 = phi %"struct.webrtc::(anonymous namespace)::ObuInfo"* [ %429, %417 ], [ %271, %264 ]
  %278 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 4
  %279 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load i64, i64* %279, align 8
  %281 = icmp ult i64 %280, 2
  br i1 %281, label %431, label %282

282:                                              ; preds = %275
  %283 = and i64 %280, 1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %288, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %287 = load %"class.rtc::ArrayView.0"*, %"class.rtc::ArrayView.0"** %286, align 8
  br label %291

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 4, i32 1, i32 0, i32 1
  %290 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %289 to %"class.rtc::ArrayView.0"*
  br label %291

291:                                              ; preds = %288, %285
  %292 = phi %"class.rtc::ArrayView.0"* [ %287, %285 ], [ %290, %288 ]
  %293 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %292, i64 0, i32 0, i32 0
  %294 = load i8*, i8** %293, align 8
  %295 = load i8, i8* %294, align 1
  %296 = or i8 %295, 2
  %297 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 1, i32 0, i64 0
  store i8 %296, i8* %297, align 1
  %298 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 0
  store i64 1, i64* %298, align 8
  %299 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %292, i64 0, i32 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = icmp eq i64 %300, 1
  %302 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %292, i64 1, i32 0
  %303 = bitcast %"class.rtc::impl::ArrayViewBase.1"* %302 to %"class.rtc::ArrayView.0"*
  %304 = select i1 %301, %"class.rtc::ArrayView.0"* %303, %"class.rtc::ArrayView.0"* %292
  %305 = xor i1 %301, true
  %306 = zext i1 %305 to i64
  %307 = and i8 %295, 4
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %335, label %309

309:                                              ; preds = %291
  br i1 %284, label %313, label %310

310:                                              ; preds = %309
  %311 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %312 = load %"class.rtc::ArrayView.0"*, %"class.rtc::ArrayView.0"** %311, align 8
  br label %316

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 4, i32 1, i32 0, i32 1
  %315 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %314 to %"class.rtc::ArrayView.0"*
  br label %316

316:                                              ; preds = %313, %310
  %317 = phi %"class.rtc::ArrayView.0"* [ %312, %310 ], [ %315, %313 ]
  %318 = lshr i64 %280, 1
  %319 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %317, i64 %318
  %320 = icmp eq %"class.rtc::ArrayView.0"* %304, %319
  %321 = and i1 %301, %320
  br i1 %321, label %431, label %322

322:                                              ; preds = %316
  %323 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %304, i64 0, i32 0, i32 0
  %324 = load i8*, i8** %323, align 8
  %325 = getelementptr inbounds i8, i8* %324, i64 %306
  %326 = load i8, i8* %325, align 1
  %327 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 1, i32 0, i64 1
  store i8 %326, i8* %327, align 1
  store i64 2, i64* %298, align 8
  %328 = select i1 %301, i64 1, i64 2
  %329 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %304, i64 0, i32 0, i32 1
  %330 = load i64, i64* %329, align 8
  %331 = icmp eq i64 %328, %330
  br i1 %331, label %332, label %335

332:                                              ; preds = %322
  %333 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %304, i64 1, i32 0
  %334 = bitcast %"class.rtc::impl::ArrayViewBase.1"* %333 to %"class.rtc::ArrayView.0"*
  br label %335

335:                                              ; preds = %332, %322, %291
  %336 = phi i64 [ 1, %291 ], [ 2, %332 ], [ 2, %322 ]
  %337 = phi %"class.rtc::ArrayView.0"* [ %304, %291 ], [ %334, %332 ], [ %304, %322 ]
  %338 = phi i64 [ %306, %291 ], [ 0, %332 ], [ %328, %322 ]
  %339 = and i8 %295, 2
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %346, label %341

341:                                              ; preds = %335
  %342 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 4, i32 1, i32 0, i32 1
  %344 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %343 to %"class.rtc::ArrayView.0"*
  %345 = lshr i64 %280, 1
  br label %351

346:                                              ; preds = %335
  %347 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::ArrayOfArrayViews", %"class.webrtc::(anonymous namespace)::ArrayOfArrayViews"* %278, i64 0, i32 0
  %348 = load i64, i64* %347, align 8
  %349 = sub i64 %348, %336
  %350 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 2
  store i64 %349, i64* %350, align 8
  br label %394

351:                                              ; preds = %366, %341
  %352 = phi i64 [ 0, %341 ], [ %376, %366 ]
  %353 = phi %"class.rtc::ArrayView.0"* [ %337, %341 ], [ %383, %366 ]
  %354 = phi i64 [ %338, %341 ], [ %384, %366 ]
  %355 = phi i64 [ 0, %341 ], [ %375, %366 ]
  br i1 %284, label %358, label %356

356:                                              ; preds = %351
  %357 = load %"class.rtc::ArrayView.0"*, %"class.rtc::ArrayView.0"** %342, align 8
  br label %358

358:                                              ; preds = %356, %351
  %359 = phi %"class.rtc::ArrayView.0"* [ %357, %356 ], [ %344, %351 ]
  %360 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %359, i64 %345
  %361 = icmp eq %"class.rtc::ArrayView.0"* %353, %360
  %362 = icmp eq i64 %354, 0
  %363 = and i1 %362, %361
  %364 = icmp ugt i64 %352, 7
  %365 = or i1 %364, %363
  br i1 %365, label %431, label %366

366:                                              ; preds = %358
  %367 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %353, i64 0, i32 0, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = getelementptr inbounds i8, i8* %368, i64 %354
  %370 = load i8, i8* %369, align 1
  %371 = and i8 %370, 127
  %372 = zext i8 %371 to i64
  %373 = mul nuw nsw i64 %352, 7
  %374 = shl i64 %372, %373
  %375 = or i64 %374, %355
  %376 = add nuw nsw i64 %352, 1
  %377 = add i64 %354, 1
  %378 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %353, i64 0, i32 0, i32 1
  %379 = load i64, i64* %378, align 8
  %380 = icmp eq i64 %377, %379
  %381 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %353, i64 1, i32 0
  %382 = bitcast %"class.rtc::impl::ArrayViewBase.1"* %381 to %"class.rtc::ArrayView.0"*
  %383 = select i1 %380, %"class.rtc::ArrayView.0"* %382, %"class.rtc::ArrayView.0"* %353
  %384 = select i1 %380, i64 0, i64 %377
  %385 = icmp slt i8 %370, 0
  br i1 %385, label %351, label %386

386:                                              ; preds = %366
  %387 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::ArrayOfArrayViews", %"class.webrtc::(anonymous namespace)::ArrayOfArrayViews"* %278, i64 0, i32 0
  %388 = load i64, i64* %387, align 8
  %389 = sub i64 %388, %336
  %390 = and i64 %376, 4294967295
  %391 = sub i64 %389, %390
  %392 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 2
  store i64 %391, i64* %392, align 8
  %393 = icmp eq i64 %375, %391
  br i1 %393, label %394, label %431

394:                                              ; preds = %386, %346
  %395 = phi i64 [ %375, %386 ], [ %349, %346 ]
  %396 = phi %"class.rtc::ArrayView.0"* [ %383, %386 ], [ %337, %346 ]
  %397 = phi i64 [ %384, %386 ], [ %338, %346 ]
  %398 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 3, i32 0
  store %"class.rtc::ArrayView.0"* %396, %"class.rtc::ArrayView.0"** %398, align 8
  %399 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 3, i32 1
  store i64 %397, i64* %399, align 8
  %400 = trunc i64 %395 to i32
  %401 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 1, i32 0, i64 %336
  %402 = icmp ugt i32 %400, 127
  %403 = trunc i64 %395 to i8
  br i1 %402, label %404, label %417

404:                                              ; preds = %394, %404
  %405 = phi i64 [ %410, %404 ], [ 0, %394 ]
  %406 = phi i8 [ %413, %404 ], [ %403, %394 ]
  %407 = phi i32 [ %411, %404 ], [ %400, %394 ]
  %408 = or i8 %406, -128
  %409 = getelementptr inbounds i8, i8* %401, i64 %405
  store i8 %408, i8* %409, align 1
  %410 = add nuw nsw i64 %405, 1
  %411 = lshr i32 %407, 7
  %412 = icmp ugt i32 %407, 16383
  %413 = trunc i32 %411 to i8
  br i1 %412, label %404, label %414

414:                                              ; preds = %404
  %415 = trunc i32 %411 to i8
  %416 = trunc i64 %410 to i32
  br label %417

417:                                              ; preds = %394, %414
  %418 = phi i32 [ %416, %414 ], [ 0, %394 ]
  %419 = phi i8 [ %415, %414 ], [ %403, %394 ]
  %420 = zext i32 %418 to i64
  %421 = getelementptr inbounds i8, i8* %401, i64 %420
  store i8 %419, i8* %421, align 1
  %422 = add nuw nsw i32 %418, 1
  %423 = sext i32 %422 to i64
  %424 = add nsw i64 %336, %423
  store i64 %424, i64* %298, align 8
  %425 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 0, i32 2
  %426 = load i64, i64* %425, align 8
  %427 = add i64 %424, %276
  %428 = add i64 %427, %426
  %429 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %277, i64 1
  %430 = icmp eq %"struct.webrtc::(anonymous namespace)::ObuInfo"* %429, %273
  br i1 %430, label %433, label %275

431:                                              ; preds = %275, %386, %316, %358
  %432 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %0, i64 0, i32 0
  store %"class.webrtc::EncodedImageBuffer"* null, %"class.webrtc::EncodedImageBuffer"** %432, align 8
  br label %557

433:                                              ; preds = %417, %264
  %434 = phi i64 [ 0, %264 ], [ %428, %417 ]
  %435 = bitcast %"class.rtc::scoped_refptr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %435) #10
  %436 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %12, i64 0, i32 0
  store %"class.webrtc::EncodedImageBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::EncodedImageBuffer"*), %"class.webrtc::EncodedImageBuffer"** %436, align 8
  call void @_ZN6webrtc18EncodedImageBuffer6CreateEm(%"class.rtc::scoped_refptr"* nonnull sret %12, i64 %434) #10
  %437 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %436, align 8
  %438 = bitcast %"class.webrtc::EncodedImageBuffer"* %437 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %439 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %438, align 8
  %440 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %439, i64 5
  %441 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %440, align 8
  %442 = call i8* %441(%"class.webrtc::EncodedImageBuffer"* %437) #10
  %443 = load i64, i64* %260, align 8
  %444 = and i64 %443, 1
  %445 = icmp eq i64 %444, 0
  %446 = load %"struct.webrtc::(anonymous namespace)::ObuInfo"*, %"struct.webrtc::(anonymous namespace)::ObuInfo"** %267, align 8
  %447 = select i1 %445, %"struct.webrtc::(anonymous namespace)::ObuInfo"* %270, %"struct.webrtc::(anonymous namespace)::ObuInfo"* %446
  %448 = lshr i64 %443, 1
  %449 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %447, i64 %448
  %450 = icmp eq i64 %448, 0
  br i1 %450, label %451, label %471

451:                                              ; preds = %532, %433
  %452 = phi i8* [ %442, %433 ], [ %535, %532 ]
  %453 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %436, align 8
  %454 = bitcast %"class.webrtc::EncodedImageBuffer"* %453 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %455 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %454, align 8
  %456 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %455, i64 5
  %457 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %456, align 8
  %458 = call i8* %457(%"class.webrtc::EncodedImageBuffer"* %453) #10
  %459 = ptrtoint i8* %452 to i64
  %460 = ptrtoint i8* %458 to i64
  %461 = sub i64 %459, %460
  %462 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %436, align 8
  %463 = bitcast %"class.webrtc::EncodedImageBuffer"* %462 to i64 (%"class.webrtc::EncodedImageBuffer"*)***
  %464 = load i64 (%"class.webrtc::EncodedImageBuffer"*)**, i64 (%"class.webrtc::EncodedImageBuffer"*)*** %463, align 8
  %465 = getelementptr inbounds i64 (%"class.webrtc::EncodedImageBuffer"*)*, i64 (%"class.webrtc::EncodedImageBuffer"*)** %464, i64 6
  %466 = load i64 (%"class.webrtc::EncodedImageBuffer"*)*, i64 (%"class.webrtc::EncodedImageBuffer"*)** %465, align 8
  %467 = call i64 %466(%"class.webrtc::EncodedImageBuffer"* %462) #10
  %468 = icmp sgt i64 %461, -1
  %469 = icmp eq i64 %461, %467
  %470 = and i1 %468, %469
  br i1 %470, label %553, label %538

471:                                              ; preds = %433, %532
  %472 = phi %"struct.webrtc::(anonymous namespace)::ObuInfo"* [ %536, %532 ], [ %447, %433 ]
  %473 = phi i8* [ %535, %532 ], [ %442, %433 ]
  %474 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 1, i32 0, i64 0
  %475 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 0
  %476 = load i64, i64* %475, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %473, i8* align 1 %474, i64 %476, i1 false)
  %477 = load i64, i64* %475, align 8
  %478 = getelementptr inbounds i8, i8* %473, i64 %477
  %479 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 3, i32 0
  %480 = load %"class.rtc::ArrayView.0"*, %"class.rtc::ArrayView.0"** %479, align 8
  %481 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 3, i32 1
  %482 = load i64, i64* %481, align 8
  %483 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load i64, i64* %483, align 8
  %485 = and i64 %484, 1
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %490, label %487

487:                                              ; preds = %471
  %488 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %489 = load %"class.rtc::ArrayView.0"*, %"class.rtc::ArrayView.0"** %488, align 8
  br label %493

490:                                              ; preds = %471
  %491 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 4, i32 1, i32 0, i32 1
  %492 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %491 to %"class.rtc::ArrayView.0"*
  br label %493

493:                                              ; preds = %490, %487
  %494 = phi %"class.rtc::ArrayView.0"* [ %489, %487 ], [ %492, %490 ]
  %495 = lshr i64 %484, 1
  %496 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %494, i64 %495
  %497 = icmp eq %"class.rtc::ArrayView.0"* %496, %480
  %498 = icmp eq i64 %482, 0
  %499 = and i1 %498, %497
  br i1 %499, label %532, label %500

500:                                              ; preds = %493
  %501 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %480, i64 0, i32 0, i32 1
  %502 = load i64, i64* %501, align 8
  %503 = sub i64 %502, %482
  %504 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %480, i64 0, i32 0, i32 0
  %505 = load i8*, i8** %504, align 8
  %506 = getelementptr inbounds i8, i8* %505, i64 %482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %478, i8* align 1 %506, i64 %503, i1 false) #10
  %507 = getelementptr inbounds i8, i8* %478, i64 %503
  %508 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %509 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 4, i32 1, i32 0, i32 1
  %510 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %509 to %"class.rtc::ArrayView.0"*
  br label %511

511:                                              ; preds = %525, %500
  %512 = phi i8* [ %507, %500 ], [ %531, %525 ]
  %513 = phi %"class.rtc::ArrayView.0"* [ %480, %500 ], [ %514, %525 ]
  %514 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %513, i64 1
  %515 = load i64, i64* %483, align 8
  %516 = and i64 %515, 1
  %517 = icmp eq i64 %516, 0
  br i1 %517, label %520, label %518

518:                                              ; preds = %511
  %519 = load %"class.rtc::ArrayView.0"*, %"class.rtc::ArrayView.0"** %508, align 8
  br label %520

520:                                              ; preds = %518, %511
  %521 = phi %"class.rtc::ArrayView.0"* [ %519, %518 ], [ %510, %511 ]
  %522 = lshr i64 %515, 1
  %523 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %521, i64 %522
  %524 = icmp eq %"class.rtc::ArrayView.0"* %514, %523
  br i1 %524, label %532, label %525

525:                                              ; preds = %520
  %526 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %514, i64 0, i32 0, i32 0
  %527 = load i8*, i8** %526, align 8
  %528 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %513, i64 1, i32 0, i32 1
  %529 = load i64, i64* %528, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %512, i8* align 1 %527, i64 %529, i1 false) #10
  %530 = load i64, i64* %528, align 8
  %531 = getelementptr inbounds i8, i8* %512, i64 %530
  br label %511

532:                                              ; preds = %520, %493
  %533 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 0, i32 2
  %534 = load i64, i64* %533, align 8
  %535 = getelementptr inbounds i8, i8* %478, i64 %534
  %536 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %472, i64 1
  %537 = icmp eq %"struct.webrtc::(anonymous namespace)::ObuInfo"* %536, %449
  br i1 %537, label %451, label %471

538:                                              ; preds = %451
  %539 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %436, align 8
  %540 = bitcast %"class.webrtc::EncodedImageBuffer"* %539 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %541 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %540, align 8
  %542 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %541, i64 5
  %543 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %542, align 8
  %544 = call i8* %543(%"class.webrtc::EncodedImageBuffer"* %539) #10
  %545 = ptrtoint i8* %544 to i64
  %546 = sub i64 %459, %545
  %547 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %436, align 8
  %548 = bitcast %"class.webrtc::EncodedImageBuffer"* %547 to i64 (%"class.webrtc::EncodedImageBuffer"*)***
  %549 = load i64 (%"class.webrtc::EncodedImageBuffer"*)**, i64 (%"class.webrtc::EncodedImageBuffer"*)*** %548, align 8
  %550 = getelementptr inbounds i64 (%"class.webrtc::EncodedImageBuffer"*)*, i64 (%"class.webrtc::EncodedImageBuffer"*)** %549, i64 6
  %551 = load i64 (%"class.webrtc::EncodedImageBuffer"*)*, i64 (%"class.webrtc::EncodedImageBuffer"*)** %550, align 8
  %552 = call i64 %551(%"class.webrtc::EncodedImageBuffer"* %547) #10
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 364, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE2ElEENS4_ILS5_5EmEEEEEvPKciS9_DpRKT_E1t, i64 0, i64 0), i64 %546, i64 %552) #11
  unreachable

553:                                              ; preds = %451
  %554 = bitcast %"class.rtc::scoped_refptr"* %12 to i64*
  %555 = load i64, i64* %554, align 8
  %556 = bitcast %"class.rtc::scoped_refptr"* %0 to i64*
  store i64 %555, i64* %556, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %435) #10
  br label %557

557:                                              ; preds = %553, %431
  %558 = load i64, i64* %260, align 8
  br label %559

559:                                              ; preds = %557, %262
  %560 = phi i64 [ %558, %557 ], [ %259, %262 ]
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %564, label %562

562:                                              ; preds = %559
  %563 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %11, i64 0, i32 0
  call fastcc void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15DestroyContentsEv(%"class.absl::inlined_vector_internal::Storage"* nonnull %563) #10
  br label %564

564:                                              ; preds = %559, %562
  call void @llvm.lifetime.end.p0i8(i64 360, i8* nonnull %13) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc18EncodedImageBuffer6CreateEm(%"class.rtc::scoped_refptr"* sret, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc23VideoRtpDepacketizerAv15ParseEN3rtc17CopyOnWriteBufferE(%"class.absl::optional"* noalias sret, %"class.webrtc::VideoRtpDepacketizerAv1"* nocapture readnone, %"class.rtc::CopyOnWriteBuffer"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %2, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 1952, i1 false) #10
  br label %91

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %12, align 8
  %14 = icmp eq %"class.rtc::FinalRefCountedObject"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %13, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %2, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  br label %21

21:                                               ; preds = %11, %15
  %22 = phi i8* [ %20, %15 ], [ null, %11 ]
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, 8
  %25 = icmp eq i8 %24, 0
  %26 = xor i1 %25, true
  %27 = icmp slt i8 %23, 0
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 1952, i1 false) #10
  br label %91

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1960, i8* nonnull %33) #10
  %34 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %34, align 8
  store i8 1, i8* %33, align 8
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = getelementptr inbounds %"struct.webrtc::VideoRtpDepacketizer::ParsedRtpPayload", %"struct.webrtc::VideoRtpDepacketizer::ParsedRtpPayload"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 1952, i1 false) #10
  %37 = getelementptr inbounds %"struct.webrtc::VideoRtpDepacketizer::ParsedRtpPayload", %"struct.webrtc::VideoRtpDepacketizer::ParsedRtpPayload"* %35, i64 0, i32 0
  call void @_ZN6webrtc14RTPVideoHeaderC1Ev(%"struct.webrtc::RTPVideoHeader"* %37) #10
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZN3rtc17CopyOnWriteBufferC1Ev(%"class.rtc::CopyOnWriteBuffer"* %38) #10
  %39 = load i8, i8* %33, align 8, !range !12
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42, !prof !8

41:                                               ; preds = %32
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %32
  %43 = bitcast %"class.rtc::CopyOnWriteBuffer"* %2 to i64*
  %44 = load i64, i64* %43, align 8
  store %"class.rtc::FinalRefCountedObject"* null, %"class.rtc::FinalRefCountedObject"** %12, align 8
  %45 = bitcast %"class.rtc::CopyOnWriteBuffer"* %38 to i64*
  %46 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %38, i64 0, i32 0, i32 0
  %47 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %46, align 8
  store i64 %44, i64* %45, align 8
  %48 = icmp eq %"class.rtc::FinalRefCountedObject"* %47, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %47, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %47, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  store i8* null, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  call void @_ZdaPv(i8* nonnull %55) #12
  br label %58

58:                                               ; preds = %57, %53
  %59 = bitcast %"class.rtc::FinalRefCountedObject"* %47 to i8*
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %42, %49, %58
  %61 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %2, i64 0, i32 1
  %62 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %63 = bitcast i64* %61 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8
  %65 = bitcast i64* %62 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8
  %66 = bitcast i64* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #10
  %67 = load i8, i8* %33, align 8, !range !12
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %70, !prof !8

69:                                               ; preds = %60
  call void @llvm.trap() #10
  unreachable

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 10
  store i32 3, i32* %71, align 4
  %72 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 6
  %73 = lshr i8 %23, 7
  %74 = xor i8 %73, 1
  store i8 %74, i8* %72, align 1
  %75 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 7
  %76 = lshr i8 %23, 6
  %77 = and i8 %76, 1
  %78 = xor i8 %77, 1
  store i8 %78, i8* %75, align 2
  %79 = select i1 %25, i32 4, i32 3
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 1960, i1 false) #10
  %83 = bitcast i8* %82 to %"struct.webrtc::RTPVideoHeader"*
  %84 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN6webrtc14RTPVideoHeaderC1ERKS0_(%"struct.webrtc::RTPVideoHeader"* %83, %"struct.webrtc::RTPVideoHeader"* dereferenceable(1928) %84) #10
  %85 = getelementptr inbounds i8, i8* %82, i64 1928
  %86 = bitcast i8* %85 to %"class.rtc::CopyOnWriteBuffer"*
  call void @_ZN3rtc17CopyOnWriteBufferC1EOS0_(%"class.rtc::CopyOnWriteBuffer"* %86, %"class.rtc::CopyOnWriteBuffer"* dereferenceable(24) %38) #10
  store i8 1, i8* %81, align 8
  %87 = load i8, i8* %33, align 8, !range !12
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %90, label %89

89:                                               ; preds = %70
  call void @_ZN3rtc17CopyOnWriteBufferD1Ev(%"class.rtc::CopyOnWriteBuffer"* %38) #10
  call void @_ZN6webrtc14RTPVideoHeaderD1Ev(%"struct.webrtc::RTPVideoHeader"* %84) #10
  store i8 0, i8* %33, align 8
  br label %90

90:                                               ; preds = %70, %89
  call void @llvm.lifetime.end.p0i8(i64 1960, i8* nonnull %33) #10
  br label %91

91:                                               ; preds = %29, %90, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc20VideoRtpDepacketizerD2Ev(%"class.webrtc::VideoRtpDepacketizer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc23VideoRtpDepacketizerAv1D0Ev(%"class.webrtc::VideoRtpDepacketizerAv1"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.webrtc::VideoRtpDepacketizerAv1"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

declare void @_ZN3rtc16ByteBufferReaderC1EPKcm(%"class.rtc::ByteBufferReader"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN3rtc16ByteBufferReader9ReadUInt8EPh(%"class.rtc::ByteBufferReader"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN3rtc16ByteBufferReader11ReadUVarintEPm(%"class.rtc::ByteBufferReader"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN3rtc16ByteBufferReader7ConsumeEm(%"class.rtc::ByteBufferReader"*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc nonnull dereferenceable(88) %"struct.webrtc::(anonymous namespace)::ObuInfo"* @_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15EmplaceBackSlowIJEEERS4_DpOT_(%"class.absl::inlined_vector_internal::Storage"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8, !noalias !13
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %8 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data"* %7 to i64
  br label %18

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"** %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !13
  %13 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !13
  %15 = shl i64 %14, 1
  %16 = icmp ugt i64 %15, 209622091746699450
  br i1 %16, label %17, label %18

17:                                               ; preds = %9
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %6, %9
  %19 = phi i64 [ 8, %6 ], [ %15, %9 ]
  %20 = phi i64 [ %8, %6 ], [ %12, %9 ]
  %21 = inttoptr i64 %20 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  %22 = lshr i64 %3, 1
  %23 = mul i64 %19, 88
  %24 = tail call i8* @_Znwm(i64 %23) #12
  %25 = bitcast i8* %24 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %25, i64 %22
  %28 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 88, i1 false) #10
  %29 = icmp eq i64 %22, 0
  br i1 %29, label %75, label %30

30:                                               ; preds = %18, %56
  %31 = phi %"struct.webrtc::(anonymous namespace)::ObuInfo"* [ %57, %56 ], [ %21, %18 ]
  %32 = phi i64 [ %58, %56 ], [ 0, %18 ]
  %33 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %25, i64 %32
  %34 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"* %33 to i8*
  %35 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 40, i1 false) #10
  %36 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %25, i64 %32, i32 4, i32 0
  %37 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %31, i64 0, i32 4, i32 0
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %36, align 8
  %39 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %25, i64 %32, i32 4, i32 1
  %40 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %31, i64 0, i32 4, i32 1
  %41 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %40, i64 0, i32 0
  %42 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %39, i64 0, i32 0
  %43 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.absl::InlinedVector.3", %"class.absl::InlinedVector.3"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, 2
  br i1 %46, label %56, label %47

47:                                               ; preds = %30
  %48 = and i64 %45, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  store i64 %45, i64* %43, align 8
  %51 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %31, i64 0, i32 4, i32 1, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %25, i64 %32, i32 4, i32 1, i32 0, i32 1
  %53 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %52 to i8*
  %54 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 32, i1 false) #10
  br label %56

55:                                               ; preds = %47
  tail call void @_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE8InitFromERKS9_(%"class.absl::inlined_vector_internal::Storage.4"* %42, %"class.absl::inlined_vector_internal::Storage.4"* dereferenceable(40) %41) #10
  br label %56

56:                                               ; preds = %55, %50, %30
  %57 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %31, i64 1
  %58 = add nuw nsw i64 %32, 1
  %59 = icmp eq i64 %58, %22
  br i1 %59, label %60, label %30

60:                                               ; preds = %56
  %61 = icmp eq i64 %20, 0
  br i1 %61, label %75, label %62

62:                                               ; preds = %60, %73
  %63 = phi i64 [ %64, %73 ], [ %22, %60 ]
  %64 = add nsw i64 %63, -1
  %65 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %21, i64 %64, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %21, i64 %64, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %71 = bitcast %"class.rtc::ArrayView.0"** %70 to i8**
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %69, %62
  %74 = icmp eq i64 %64, 0
  br i1 %74, label %75, label %62

75:                                               ; preds = %73, %18, %60
  %76 = load i64, i64* %2, align 8
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %81 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"** %80 to i8**
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #12
  %83 = load i64, i64* %2, align 8
  br label %84

84:                                               ; preds = %79, %75
  %85 = phi i64 [ %83, %79 ], [ %76, %75 ]
  %86 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %87 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"** %86 to i64*
  store i64 %26, i64* %87, align 8
  %88 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %19, i64* %88, align 8
  %89 = or i64 %85, 1
  %90 = add i64 %89, 2
  store i64 %90, i64* %2, align 8
  ret %"struct.webrtc::(anonymous namespace)::ObuInfo"* %27
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE8InitFromERKS9_(%"class.absl::inlined_vector_internal::Storage.4"*, %"class.absl::inlined_vector_internal::Storage.4"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %9 to %"class.rtc::ArrayView.0"*
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %1, i64 0, i32 1
  %12 = bitcast %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %11 to %"class.rtc::ArrayView.0"*
  br label %27

13:                                               ; preds = %2
  %14 = icmp ugt i64 %5, 4
  %15 = select i1 %14, i64 %5, i64 4
  %16 = icmp ugt i64 %15, 1152921504606846975
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %13
  %19 = shl i64 %15, 4
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to %"class.rtc::ArrayView.0"*
  %22 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.rtc::ArrayView.0"** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.rtc::ArrayView.0"*, %"class.rtc::ArrayView.0"** %25, align 8
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi %"class.rtc::ArrayView.0"* [ %26, %18 ], [ %12, %8 ]
  %29 = phi %"class.rtc::ArrayView.0"* [ %21, %18 ], [ %10, %8 ]
  %30 = bitcast %"class.rtc::ArrayView.0"* %29 to i8*
  %31 = bitcast %"class.rtc::ArrayView.0"* %28 to i8*
  %32 = shl i64 %5, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false) #10
  %33 = load i64, i64* %3, align 8
  %34 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.rtc::ArrayView.0"* @_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE15EmplaceBackSlowIJRPS4_RmEEERS5_DpOT_(%"class.absl::inlined_vector_internal::Storage.4"*, i8** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !16
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1
  %10 = ptrtoint %"union.absl::inlined_vector_internal::Storage<rtc::ArrayView<const unsigned char, -4711>, 2, std::__1::allocator<rtc::ArrayView<const unsigned char, -4711> > >::Data"* %9 to i64
  br label %20

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.rtc::ArrayView.0"** %12 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !16
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !16
  %17 = shl i64 %16, 1
  %18 = icmp ugt i64 %17, 1152921504606846975
  br i1 %18, label %19, label %20

19:                                               ; preds = %11
  tail call void @abort() #11
  unreachable

20:                                               ; preds = %8, %11
  %21 = phi i64 [ 4, %8 ], [ %17, %11 ]
  %22 = phi i64 [ %10, %8 ], [ %14, %11 ]
  %23 = lshr i64 %5, 1
  %24 = shl i64 %21, 4
  %25 = tail call i8* @_Znwm(i64 %24) #12
  %26 = bitcast i8* %25 to %"class.rtc::ArrayView.0"*
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %26, i64 %23
  %29 = load i8*, i8** %1, align 8
  %30 = load i64, i64* %2, align 8
  %31 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %28, i64 0, i32 0, i32 0
  %32 = icmp eq i64 %30, 0
  %33 = select i1 %32, i8* null, i8* %29
  store i8* %33, i8** %31, align 8
  %34 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %26, i64 %23, i32 0, i32 1
  store i64 %30, i64* %34, align 8
  %35 = icmp eq i64 %23, 0
  br i1 %35, label %90, label %36

36:                                               ; preds = %20
  %37 = inttoptr i64 %22 to %"class.rtc::ArrayView.0"*
  %38 = inttoptr i64 %22 to i8*
  %39 = add nsw i64 %23, -1
  %40 = and i64 %23, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %73, label %42

42:                                               ; preds = %36
  %43 = sub nsw i64 %23, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi %"class.rtc::ArrayView.0"* [ %37, %42 ], [ %66, %44 ]
  %46 = phi i8* [ %38, %42 ], [ %68, %44 ]
  %47 = phi i64 [ 0, %42 ], [ %67, %44 ]
  %48 = phi i64 [ %43, %42 ], [ %69, %44 ]
  %49 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %26, i64 %47
  %50 = bitcast %"class.rtc::ArrayView.0"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %46, i64 16, i1 false) #10
  %51 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %45, i64 1
  %52 = or i64 %47, 1
  %53 = bitcast %"class.rtc::ArrayView.0"* %51 to i8*
  %54 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %26, i64 %52
  %55 = bitcast %"class.rtc::ArrayView.0"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %53, i64 16, i1 false) #10
  %56 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %45, i64 2
  %57 = or i64 %47, 2
  %58 = bitcast %"class.rtc::ArrayView.0"* %56 to i8*
  %59 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %26, i64 %57
  %60 = bitcast %"class.rtc::ArrayView.0"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %58, i64 16, i1 false) #10
  %61 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %45, i64 3
  %62 = or i64 %47, 3
  %63 = bitcast %"class.rtc::ArrayView.0"* %61 to i8*
  %64 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %26, i64 %62
  %65 = bitcast %"class.rtc::ArrayView.0"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %63, i64 16, i1 false) #10
  %66 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %45, i64 4
  %67 = add nuw nsw i64 %47, 4
  %68 = bitcast %"class.rtc::ArrayView.0"* %66 to i8*
  %69 = add i64 %48, -4
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %44

71:                                               ; preds = %44
  %72 = bitcast %"class.rtc::ArrayView.0"* %66 to i8*
  br label %73

73:                                               ; preds = %71, %36
  %74 = phi %"class.rtc::ArrayView.0"* [ %37, %36 ], [ %66, %71 ]
  %75 = phi i8* [ %38, %36 ], [ %72, %71 ]
  %76 = phi i64 [ 0, %36 ], [ %67, %71 ]
  %77 = icmp eq i64 %40, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"class.rtc::ArrayView.0"* [ %85, %78 ], [ %74, %73 ]
  %80 = phi i8* [ %87, %78 ], [ %75, %73 ]
  %81 = phi i64 [ %86, %78 ], [ %76, %73 ]
  %82 = phi i64 [ %88, %78 ], [ %40, %73 ]
  %83 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %26, i64 %81
  %84 = bitcast %"class.rtc::ArrayView.0"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %80, i64 16, i1 false) #10
  %85 = getelementptr inbounds %"class.rtc::ArrayView.0", %"class.rtc::ArrayView.0"* %79, i64 1
  %86 = add nuw nsw i64 %81, 1
  %87 = bitcast %"class.rtc::ArrayView.0"* %85 to i8*
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %78, !llvm.loop !19

90:                                               ; preds = %73, %78, %20
  br i1 %7, label %96, label %91

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1, i32 0, i32 0
  %93 = bitcast %"class.rtc::ArrayView.0"** %92 to i8**
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #12
  %95 = load i64, i64* %4, align 8
  br label %96

96:                                               ; preds = %91, %90
  %97 = phi i64 [ %95, %91 ], [ %5, %90 ]
  %98 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.rtc::ArrayView.0"** %98 to i64*
  store i64 %27, i64* %99, align 8
  %100 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.4", %"class.absl::inlined_vector_internal::Storage.4"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %21, i64* %100, align 8
  %101 = or i64 %97, 1
  %102 = add i64 %101, 2
  store i64 %102, i64* %4, align 8
  ret %"class.rtc::ArrayView.0"* %28
}

declare void @_ZN6webrtc14RTPVideoHeaderC1Ev(%"struct.webrtc::RTPVideoHeader"*) unnamed_addr #2

declare void @_ZN3rtc17CopyOnWriteBufferC1Ev(%"class.rtc::CopyOnWriteBuffer"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

declare void @_ZN6webrtc14RTPVideoHeaderC1ERKS0_(%"struct.webrtc::RTPVideoHeader"*, %"struct.webrtc::RTPVideoHeader"* dereferenceable(1928)) unnamed_addr #2

declare void @_ZN3rtc17CopyOnWriteBufferC1EOS0_(%"class.rtc::CopyOnWriteBuffer"*, %"class.rtc::CopyOnWriteBuffer"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc17CopyOnWriteBufferD1Ev(%"class.rtc::CopyOnWriteBuffer"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6webrtc14RTPVideoHeaderD1Ev(%"struct.webrtc::RTPVideoHeader"*) unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15DestroyContentsEv(%"class.absl::inlined_vector_internal::Storage"* readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.webrtc::(anonymous namespace)::ObuInfo"*, %"struct.webrtc::(anonymous namespace)::ObuInfo"** %7, align 8
  br label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %11 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::(anonymous namespace)::ObuInfo, 4, std::__1::allocator<webrtc::(anonymous namespace)::ObuInfo> >::Data"* %10 to %"struct.webrtc::(anonymous namespace)::ObuInfo"*
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi %"struct.webrtc::(anonymous namespace)::ObuInfo"* [ %8, %6 ], [ %11, %9 ]
  %14 = lshr i64 %3, 1
  %15 = icmp eq %"struct.webrtc::(anonymous namespace)::ObuInfo"* %13, null
  %16 = icmp eq i64 %14, 0
  %17 = or i1 %16, %15
  br i1 %17, label %34, label %18

18:                                               ; preds = %12, %29
  %19 = phi i64 [ %20, %29 ], [ %14, %12 ]
  %20 = add nsw i64 %19, -1
  %21 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %13, i64 %20, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.webrtc::(anonymous namespace)::ObuInfo", %"struct.webrtc::(anonymous namespace)::ObuInfo"* %13, i64 %20, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.rtc::ArrayView.0"** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %25, %18
  %30 = icmp eq i64 %20, 0
  br i1 %30, label %31, label %18

31:                                               ; preds = %29
  %32 = load i64, i64* %2, align 8
  %33 = and i64 %32, 1
  br label %34

34:                                               ; preds = %31, %12
  %35 = phi i64 [ %33, %31 ], [ %4, %12 ]
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = bitcast %"struct.webrtc::(anonymous namespace)::ObuInfo"** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %34, %37
  ret void
}

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6webrtc12_GLOBAL__N_19ParseObusEN3rtc9ArrayViewIKNS2_IKhLln4711EEELln4711EEE: argument 0"}
!4 = distinct !{!4, !"_ZN6webrtc12_GLOBAL__N_19ParseObusEN3rtc9ArrayViewIKNS2_IKhLln4711EEELln4711EEE"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!7 = distinct !{!7, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE15MakeStorageViewEv: argument 0"}
!11 = distinct !{!11, !"_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE15MakeStorageViewEv"}
!12 = !{i8 0, i8 2}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!15 = distinct !{!15, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc12_GLOBAL__N_17ObuInfoELm4ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE15MakeStorageViewEv: argument 0"}
!18 = distinct !{!18, !"_ZN4absl23inlined_vector_internal7StorageIN3rtc9ArrayViewIKhLln4711EEELm2ENSt3__19allocatorIS5_EEE15MakeStorageViewEv"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
