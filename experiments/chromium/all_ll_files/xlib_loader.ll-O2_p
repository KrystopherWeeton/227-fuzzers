; ModuleID = 'gen/library_loaders/xlib_loader.cc'
source_filename = "gen/library_loaders/xlib_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.XlibLoader = type <{ i32 ()*, %struct._XDisplay* (i8*)*, i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*, i32)*, i32 (i32 (i8*, i8*)*)*, void (i8*)*, i32 (%struct._XDisplay*)*, i8*, i8, [7 x i8] }>
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [13 x i8] c"XInitThreads\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"XOpenDisplay\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"XCloseDisplay\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"XFlush\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"XSynchronize\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"XSetErrorHandler\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"XFree\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"XPending\00", align 1

@_ZN10XlibLoaderC1Ev = hidden unnamed_addr alias void (%class.XlibLoader*), void (%class.XlibLoader*)* @_ZN10XlibLoaderC2Ev
@_ZN10XlibLoaderD1Ev = hidden unnamed_addr alias void (%class.XlibLoader*), void (%class.XlibLoader*)* @_ZN10XlibLoaderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10XlibLoaderC2Ev(%class.XlibLoader* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 9
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10XlibLoaderD2Ev(%class.XlibLoader* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 8
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i32 @dlclose(i8* %7) #4
  store i8* null, i8** %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  store i8 0, i8* %2, align 8
  %10 = bitcast %class.XlibLoader* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 64, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10XlibLoader7CleanUpEb(%class.XlibLoader* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  br i1 %1, label %3, label %7

3:                                                ; preds = %2
  %4 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 8
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i32 @dlclose(i8* %5) #4
  store i8* null, i8** %4, align 8
  br label %7

7:                                                ; preds = %3, %2
  %8 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 9
  store i8 0, i8* %8, align 8
  %9 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10XlibLoader4LoadERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.XlibLoader*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %90

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = tail call i8* @dlopen(i8* %14, i32 1) #4
  %16 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 8
  store i8* %15, i8** %16, align 8
  %17 = icmp eq i8* %15, null
  br i1 %17, label %90, label %18

18:                                               ; preds = %6
  %19 = tail call i8* @dlsym(i8* nonnull %15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #4
  %20 = bitcast %class.XlibLoader* %0 to i8**
  store i8* %19, i8** %20, align 8
  %21 = icmp eq i8* %19, null
  %22 = load i8*, i8** %16, align 8
  br i1 %21, label %23, label %26

23:                                               ; preds = %18
  %24 = tail call i32 @dlclose(i8* %22) #4
  %25 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 73, i1 false)
  br label %90

26:                                               ; preds = %18
  %27 = tail call i8* @dlsym(i8* %22, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #4
  %28 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 1
  %29 = bitcast %struct._XDisplay* (i8*)** %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = icmp eq i8* %27, null
  %31 = load i8*, i8** %16, align 8
  br i1 %30, label %32, label %35

32:                                               ; preds = %26
  %33 = tail call i32 @dlclose(i8* %31) #4
  %34 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 73, i1 false)
  br label %90

35:                                               ; preds = %26
  %36 = tail call i8* @dlsym(i8* %31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #4
  %37 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 2
  %38 = bitcast i32 (%struct._XDisplay*)** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = icmp eq i8* %36, null
  %40 = load i8*, i8** %16, align 8
  br i1 %39, label %41, label %44

41:                                               ; preds = %35
  %42 = tail call i32 @dlclose(i8* %40) #4
  %43 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 73, i1 false)
  br label %90

44:                                               ; preds = %35
  %45 = tail call i8* @dlsym(i8* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #4
  %46 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 3
  %47 = bitcast i32 (%struct._XDisplay*)** %46 to i8**
  store i8* %45, i8** %47, align 8
  %48 = icmp eq i8* %45, null
  %49 = load i8*, i8** %16, align 8
  br i1 %48, label %50, label %53

50:                                               ; preds = %44
  %51 = tail call i32 @dlclose(i8* %49) #4
  %52 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 73, i1 false)
  br label %90

53:                                               ; preds = %44
  %54 = tail call i8* @dlsym(i8* %49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #4
  %55 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 4
  %56 = bitcast i32 (%struct._XDisplay*, i32)** %55 to i8**
  store i8* %54, i8** %56, align 8
  %57 = icmp eq i8* %54, null
  %58 = load i8*, i8** %16, align 8
  br i1 %57, label %59, label %62

59:                                               ; preds = %53
  %60 = tail call i32 @dlclose(i8* %58) #4
  %61 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 73, i1 false)
  br label %90

62:                                               ; preds = %53
  %63 = tail call i8* @dlsym(i8* %58, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #4
  %64 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 5
  %65 = bitcast i32 (i32 (i8*, i8*)*)** %64 to i8**
  store i8* %63, i8** %65, align 8
  %66 = icmp eq i8* %63, null
  %67 = load i8*, i8** %16, align 8
  br i1 %66, label %68, label %71

68:                                               ; preds = %62
  %69 = tail call i32 @dlclose(i8* %67) #4
  %70 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 73, i1 false)
  br label %90

71:                                               ; preds = %62
  %72 = tail call i8* @dlsym(i8* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #4
  %73 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 6
  %74 = bitcast void (i8*)** %73 to i8**
  store i8* %72, i8** %74, align 8
  %75 = icmp eq i8* %72, null
  %76 = load i8*, i8** %16, align 8
  br i1 %75, label %77, label %80

77:                                               ; preds = %71
  %78 = tail call i32 @dlclose(i8* %76) #4
  %79 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 73, i1 false)
  br label %90

80:                                               ; preds = %71
  %81 = tail call i8* @dlsym(i8* %76, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)) #4
  %82 = getelementptr inbounds %class.XlibLoader, %class.XlibLoader* %0, i64 0, i32 7
  %83 = bitcast i32 (%struct._XDisplay*)** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = icmp eq i8* %81, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %80
  %86 = load i8*, i8** %16, align 8
  %87 = tail call i32 @dlclose(i8* %86) #4
  %88 = bitcast %class.XlibLoader* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 73, i1 false)
  br label %90

89:                                               ; preds = %80
  store i8 1, i8* %3, align 8
  br label %90

90:                                               ; preds = %6, %2, %89, %85, %77, %68, %59, %50, %41, %32, %23
  %91 = phi i1 [ true, %89 ], [ false, %85 ], [ false, %77 ], [ false, %68 ], [ false, %59 ], [ false, %50 ], [ false, %41 ], [ false, %32 ], [ false, %23 ], [ false, %2 ], [ false, %6 ]
  ret i1 %91
}

; Function Attrs: nounwind
declare i8* @dlopen(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @dlsym(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @dlclose(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
