; ModuleID = '../../v8/src/objects/objects.cc'
source_filename = "../../v8/src/objects/objects.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.866", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.879", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.889", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.900", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.975", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1024"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1035", i32, i8, i8, i32, i32, %"class.std::__1::vector.1041", %"class.std::__1::vector.1041", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1048", i64, %"class.std::__1::unordered_map.1049", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1105", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1143", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1177", %"class.std::__1::vector.1181", %"class.std::__1::vector.1181", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type { %"class.v8::internal::Isolate"*, i64, %"class.v8::internal::ExternalCallbackScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1595" }
%"class.std::__1::__compressed_pair.1595" = type { %"struct.std::__1::__compressed_pair_elem.1596" }
%"struct.std::__1::__compressed_pair_elem.1596" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type { %"class.v8::internal::StringAllocator"*, i32, i32, i32, i8* }
%"class.v8::internal::StringAllocator" = type { i32 (...)** }
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.776", %"class.std::__1::unique_ptr.783" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.739", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.763", %"class.v8::internal::Handle.775", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.739" = type { %"class.std::__1::__vector_base.740" }
%"class.std::__1::__vector_base.740" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.758" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.741", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.753", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.741" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.749" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.744" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.742", %union.anon.743 }
%"class.v8::internal::Handle.742" = type { %"class.v8::internal::HandleBase" }
%union.anon.743 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::base::Optional.753" = type { %"class.v8::base::internal::OptionalBase.754" }
%"class.v8::base::internal::OptionalBase.754" = type { %"struct.v8::base::internal::OptionalStorage.755" }
%"struct.v8::base::internal::OptionalStorage.755" = type { %"struct.v8::base::internal::OptionalStorageBase.756" }
%"struct.v8::base::internal::OptionalStorageBase.756" = type { i8, %union.anon.757 }
%union.anon.757 = type { i8 }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.763" = type { %"class.std::__1::__deque_base.764" }
%"class.std::__1::__deque_base.764" = type { %"struct.std::__1::__split_buffer.765", i64, %"class.std::__1::__compressed_pair.771" }
%"struct.std::__1::__split_buffer.765" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.766" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::Handle.775" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.778" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.795", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.802", %"class.v8::internal::DetachableVector.801", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.802" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.803", %"class.std::__1::vector.809", %"class.std::__1::unique_ptr.816", %"class.std::__1::vector.823", %"class.std::__1::unique_ptr.830", i64, %"class.std::__1::vector.836", %"class.std::__1::vector.844", %"class.std::__1::vector.852", i8, i8, i32 }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.811" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.v8::internal::GlobalHandles::NodeSpace.819"* }
%"class.v8::internal::GlobalHandles::NodeSpace.819" = type opaque
%"class.std::__1::vector.823" = type { %"class.std::__1::__vector_base.824" }
%"class.std::__1::__vector_base.824" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.825" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.std::__1::pair.838"*, %"struct.std::__1::pair.838"*, %"class.std::__1::__compressed_pair.839" }
%"struct.std::__1::pair.838" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::pair.838"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"struct.std::__1::pair.846"*, %"struct.std::__1::pair.846"*, %"class.std::__1::__compressed_pair.847" }
%"struct.std::__1::pair.846" = type opaque
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::pair.846"* }
%"class.std::__1::vector.852" = type { %"class.std::__1::__vector_base.853" }
%"class.std::__1::__vector_base.853" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.854" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.859", %"class.std::__1::vector.866" }
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { i64**, i64**, %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.873" }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.866" = type { %"class.std::__1::__vector_base.867" }
%"class.std::__1::__vector_base.867" = type { i32*, i32*, %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { i32* }
%"class.v8::internal::DateCache" = type { i32 (...)**, %"class.v8::internal::Smi", [32 x %"struct.v8::internal::DateCache::DST"], i32, %"struct.v8::internal::DateCache::DST"*, %"struct.v8::internal::DateCache::DST"*, i32, i8, i32, i32, i32, i32, i8*, i8*, %"class.v8::base::TimezoneCache"* }
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"struct.v8::internal::DateCache::DST" = type { i32, i32, i32, i32 }
%"class.v8::base::TimezoneCache" = type { i32 (...)** }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.879" = type { %"struct.std::__1::__atomic_base.880" }
%"struct.std::__1::__atomic_base.880" = type { %"struct.std::__1::__cxx_atomic_impl.881" }
%"struct.std::__1::__cxx_atomic_impl.881" = type { %"struct.std::__1::__cxx_atomic_base_impl.882" }
%"struct.std::__1::__cxx_atomic_base_impl.882" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.889" = type { %"struct.std::__1::__atomic_base.890" }
%"struct.std::__1::__atomic_base.890" = type { %"struct.std::__1::__cxx_atomic_impl.891" }
%"struct.std::__1::__cxx_atomic_impl.891" = type { %"struct.std::__1::__cxx_atomic_base_impl.892" }
%"struct.std::__1::__cxx_atomic_base_impl.892" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.896 }
%union.anon.896 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.900" = type { %"class.std::__1::__hash_table.901" }
%"class.std::__1::__hash_table.901" = type <{ %"class.std::__1::unique_ptr.902", %"class.std::__1::__compressed_pair.912", %"class.std::__1::__compressed_pair.917", %"class.std::__1::__compressed_pair.920", [4 x i8] }>
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904", %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"struct.std::__1::__hash_node_base.905"** }
%"struct.std::__1::__hash_node_base.905" = type { %"struct.std::__1::__hash_node_base.905"* }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.std::__1::__bucket_list_deallocator.907" }
%"class.std::__1::__bucket_list_deallocator.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"struct.std::__1::__hash_node_base.905" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::Handle.932", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.933", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.933" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.934", %"class.std::__1::vector.940", %"class.std::__1::unique_ptr.948", %"class.std::__1::unique_ptr.954", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.960", %"class.std::__1::vector.966", %"struct.std::__1::pair.974" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.940" = type { %"class.std::__1::__vector_base.941" }
%"class.std::__1::__vector_base.941" = type { %"class.std::__1::unique_ptr.942"*, %"class.std::__1::unique_ptr.942"*, %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::unique_ptr.942" = type opaque
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.std::__1::unique_ptr.942"* }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.966" = type { %"class.std::__1::__vector_base.967" }
%"class.std::__1::__vector_base.967" = type { %"struct.std::__1::pair.968"*, %"struct.std::__1::pair.968"*, %"class.std::__1::__compressed_pair.969" }
%"struct.std::__1::pair.968" = type opaque
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.std::__1::pair.968"* }
%"struct.std::__1::pair.974" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.978", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.978" = type { %"class.std::__1::__hash_table.979" }
%"class.std::__1::__hash_table.979" = type <{ %"class.std::__1::unique_ptr.980", %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.995", %"class.std::__1::__compressed_pair.999", [4 x i8] }>
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982", %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::__hash_node_base.983"** }
%"struct.std::__1::__hash_node_base.983" = type { %"struct.std::__1::__hash_node_base.983"* }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.std::__1::__bucket_list_deallocator.985" }
%"class.std::__1::__bucket_list_deallocator.985" = type { %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"struct.std::__1::__hash_node_base.983" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1600, i32, [4 x i8] }>
%union.anon.1600 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.1007, %"class.v8::internal::Vector.1009", i32, i8, [3 x i8] }>
%union.anon.1007 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector.1009" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1010" }
%"class.std::__1::deque.1010" = type { %"class.std::__1::__deque_base.1011" }
%"class.std::__1::__deque_base.1011" = type { %"struct.std::__1::__split_buffer.1012", i64, %"class.std::__1::__compressed_pair.1019" }
%"struct.std::__1::__split_buffer.1012" = type { %"struct.std::__1::pair.1013"**, %"struct.std::__1::pair.1013"**, %"struct.std::__1::pair.1013"**, %"class.std::__1::__compressed_pair.1014" }
%"struct.std::__1::pair.1013" = type opaque
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"struct.std::__1::pair.1013"** }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1024" = type { %"class.std::__1::__vector_base.1025" }
%"class.std::__1::__vector_base.1025" = type { %"class.v8::internal::Handle.742"*, %"class.v8::internal::Handle.742"*, %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.v8::internal::Handle.742"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1031" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1031" = type { %"class.std::__1::__vector_base.1032" }
%"class.std::__1::__vector_base.1032" = type { %"struct.std::__1::pair.1013"*, %"struct.std::__1::pair.1013"*, %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::pair.1013"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.884", i32, %"class.v8::Local.1" }
%"class.v8::Local.884" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.859", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1041" = type { %"class.std::__1::__vector_base.1042" }
%"class.std::__1::__vector_base.1042" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1048" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1049" = type { %"class.std::__1::__hash_table.1050" }
%"class.std::__1::__hash_table.1050" = type <{ %"class.std::__1::unique_ptr.1051", %"class.std::__1::__compressed_pair.1061", %"class.std::__1::__compressed_pair.1066", %"class.std::__1::__compressed_pair.1069", [4 x i8] }>
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053", %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"struct.std::__1::__hash_node_base.1054"** }
%"struct.std::__1::__hash_node_base.1054" = type { %"struct.std::__1::__hash_node_base.1054"* }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.std::__1::__bucket_list_deallocator.1056" }
%"class.std::__1::__bucket_list_deallocator.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"struct.std::__1::__hash_node_base.1054" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1073", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1102", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1103", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1073" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1098, %union.anon.1100, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1098 = type { i64 }
%union.anon.1100 = type { i64 }
%"class.std::__1::weak_ptr.1102" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1103" = type { %"class.v8::PersistentBase.1104" }
%"class.v8::PersistentBase.1104" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1074", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1074" = type { %"class.std::__1::__hash_table.1075" }
%"class.std::__1::__hash_table.1075" = type <{ %"class.std::__1::unique_ptr.1076", %"class.std::__1::__compressed_pair.1086", %"class.std::__1::__compressed_pair.1091", %"class.std::__1::__compressed_pair.1094", [4 x i8] }>
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078", %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"struct.std::__1::__hash_node_base.1079"** }
%"struct.std::__1::__hash_node_base.1079" = type { %"struct.std::__1::__hash_node_base.1079"* }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.std::__1::__bucket_list_deallocator.1081" }
%"class.std::__1::__bucket_list_deallocator.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"struct.std::__1::__hash_node_base.1079" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1134", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1110", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1114", %"class.std::__1::unique_ptr.1120", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1126", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1110" = type { %"struct.std::__1::__atomic_base.1111" }
%"struct.std::__1::__atomic_base.1111" = type { %"struct.std::__1::__cxx_atomic_impl.1112" }
%"struct.std::__1::__cxx_atomic_impl.1112" = type { %"struct.std::__1::__cxx_atomic_base_impl.1113" }
%"struct.std::__1::__cxx_atomic_base_impl.1113" = type { i32 }
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.859" }
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1126" = type { %"class.std::__1::__vector_base.1127" }
%"class.std::__1::__vector_base.1127" = type { %"struct.std::__1::pair.1128"*, %"struct.std::__1::pair.1128"*, %"class.std::__1::__compressed_pair.1129" }
%"struct.std::__1::pair.1128" = type opaque
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"struct.std::__1::pair.1128"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1134" = type { %"class.std::__1::__compressed_pair.1135" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.885", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.885" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1151" }
%"class.std::__1::unordered_map.1151" = type { %"class.std::__1::__hash_table.1152" }
%"class.std::__1::__hash_table.1152" = type <{ %"class.std::__1::unique_ptr.1153", %"class.std::__1::__compressed_pair.1163", %"class.std::__1::__compressed_pair.1168", %"class.std::__1::__compressed_pair.1171", [4 x i8] }>
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155", %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"struct.std::__1::__hash_node_base.1156"** }
%"struct.std::__1::__hash_node_base.1156" = type { %"struct.std::__1::__hash_node_base.1156"* }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.std::__1::__bucket_list_deallocator.1158" }
%"class.std::__1::__bucket_list_deallocator.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::__hash_node_base.1156" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.1177" = type { %"struct.std::__1::__atomic_base.1178" }
%"struct.std::__1::__atomic_base.1178" = type { %"struct.std::__1::__cxx_atomic_impl.1179" }
%"struct.std::__1::__cxx_atomic_impl.1179" = type { %"struct.std::__1::__cxx_atomic_base_impl.1180" }
%"struct.std::__1::__cxx_atomic_base_impl.1180" = type { %"class.std::__1::vector.1181"* }
%"class.std::__1::vector.1181" = type { %"class.std::__1::__vector_base.1182" }
%"class.std::__1::__vector_base.1182" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1183" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"struct.std::__1::atomic.1619" = type { %"struct.std::__1::__atomic_base.1620" }
%"struct.std::__1::__atomic_base.1620" = type { %"struct.std::__1::__atomic_base.1621" }
%"struct.std::__1::__atomic_base.1621" = type { %"struct.std::__1::__cxx_atomic_impl.1622" }
%"struct.std::__1::__cxx_atomic_impl.1622" = type { %"struct.std::__1::__cxx_atomic_base_impl.1623" }
%"struct.std::__1::__cxx_atomic_base_impl.1623" = type { i32 }
%"class.v8::internal::ElementsAccessor" = type { i32 (...)** }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::HashTable.1217" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTable.1219" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTable.1222" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::ObjectHashTableBase" = type { %"class.v8::internal::HashTable.1222" }
%"class.v8::internal::HashTable.1224" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::ObjectHashTableBase.1225" = type { %"class.v8::internal::HashTable.1224" }
%"class.v8::internal::HashTable.1227" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::Dictionary" = type { %"class.v8::internal::HashTable.1227" }
%"class.v8::internal::HashTable.1230" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::Dictionary.1231" = type { %"class.v8::internal::HashTable.1230" }
%"class.v8::internal::HashTable.1233" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::Dictionary.1235" = type { %"class.v8::internal::HashTable.1233" }
%"class.v8::internal::BaseNameDictionary" = type { %"class.v8::internal::Dictionary.1235" }
%"class.v8::internal::HashTable.1238" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::Dictionary.1240" = type { %"class.v8::internal::HashTable.1238" }
%"class.v8::internal::BaseNameDictionary.1239" = type { %"class.v8::internal::Dictionary.1240" }
%"class.v8::internal::Script::Iterator" = type { %"class.v8::internal::WeakArrayList::Iterator" }
%"class.v8::internal::WeakArrayList::Iterator" = type { i32, %"class.v8::internal::WeakArrayList" }
%"class.v8::internal::WeakArrayList" = type { %"class.v8::internal::TorqueGeneratedWeakArrayList" }
%"class.v8::internal::TorqueGeneratedWeakArrayList" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::FactoryBase.1108" = type { i8 }
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList.1210", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle.1008", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::DeclarationScope" = type <{ %"class.v8::internal::Scope.base", i16, i8, [2 x i8], i32, [4 x i8], %"class.v8::internal::ZoneList", %"class.v8::base::ThreadedListBase.1196", %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::PreparseDataBuilder"*, %"struct.v8::internal::DeclarationScope::RareData"* }>
%"class.v8::internal::Scope.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.1192", %"class.v8::base::ThreadedListBase.1194", %"class.v8::internal::Handle.1195", i32, i32, i32, i32, i8, i16 }>
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.1192", %"class.v8::base::ThreadedListBase.1194", %"class.v8::internal::Handle.1195", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.1190" }
%"class.v8::base::TemplateHashMapImpl.1190" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1191"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry.1191" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::base::ThreadedListBase.1192" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon.1193, %"class.v8::internal::VariableProxy"* }
%union.anon.1193 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::base::ThreadedListBase.1194" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.1195" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Variable"**, i32, i32 }
%"class.v8::base::ThreadedListBase.1196" = type { %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** }
%"class.v8::internal::SloppyBlockFunctionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::SloppyBlockFunctionStatement"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::internal::PreparseDataBuilder" = type <{ %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder::ByteData", %union.anon.1207, %"class.v8::internal::DeclarationScope"*, i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::PreparseDataBuilder::ByteData" = type <{ %union.anon.1197, i8, [7 x i8] }>
%union.anon.1197 = type { %struct.anon.1198 }
%struct.anon.1198 = type { %"class.std::__1::vector.1199"*, i32 }
%"class.std::__1::vector.1199" = type { %"class.std::__1::__vector_base.1200" }
%"class.std::__1::__vector_base.1200" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { i8* }
%union.anon.1207 = type { %"class.v8::internal::ScopedList" }
%"class.v8::internal::ScopedList" = type { %"class.std::__1::vector.1208"*, i64, i64 }
%"class.std::__1::vector.1208" = type { %"class.std::__1::__vector_base.1602" }
%"class.std::__1::__vector_base.1602" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1603" }
%"class.std::__1::__compressed_pair.1603" = type { %"struct.std::__1::__compressed_pair_elem.1604" }
%"struct.std::__1::__compressed_pair_elem.1604" = type { i8** }
%"struct.v8::internal::DeclarationScope::RareData" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::ZoneList.1210" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle.1008", %"struct.v8::internal::AstConsString::Segment" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::Handle.1008" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::ObjectVisitor" = type { i32 (...)** }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef" = type { %"class.v8::internal::StringSet" }
%"class.v8::internal::StringSet" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTableKey" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef" = type { %"class.v8::internal::CompilationCacheTable" }
%"class.v8::internal::CompilationCacheTable" = type { %"class.v8::internal::HashTable.1217" }
%"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef" = type { %"class.v8::internal::ObjectHashSet" }
%"class.v8::internal::ObjectHashSet" = type { %"class.v8::internal::HashTable.1219" }
%"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef" = type { %"class.v8::internal::ObjectHashTable" }
%"class.v8::internal::ObjectHashTable" = type { %"class.v8::internal::ObjectHashTableBase" }
%"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef" = type { %"class.v8::internal::EphemeronHashTable" }
%"class.v8::internal::EphemeronHashTable" = type { %"class.v8::internal::ObjectHashTableBase.1225" }
%"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef" = type { %"class.v8::internal::SimpleNumberDictionary" }
%"class.v8::internal::SimpleNumberDictionary" = type { %"class.v8::internal::Dictionary" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef" = type { %"class.v8::internal::NumberDictionary" }
%"class.v8::internal::NumberDictionary" = type { %"class.v8::internal::Dictionary.1231" }
%"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef" = type { %"class.v8::internal::NameDictionary" }
%"class.v8::internal::NameDictionary" = type { %"class.v8::internal::BaseNameDictionary" }
%"struct.v8::internal::EnumIndexComparator" = type { %"class.v8::internal::NameDictionary" }
%"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef" = type { %"class.v8::internal::GlobalDictionary" }
%"class.v8::internal::GlobalDictionary" = type { %"class.v8::internal::BaseNameDictionary.1239" }
%"class.v8::internal::DependentCode" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::WeakFixedArray" = type { %"class.v8::internal::TorqueGeneratedWeakFixedArray" }
%"class.v8::internal::TorqueGeneratedWeakFixedArray" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::EnumIndexComparator.1242" = type { %"class.v8::internal::GlobalDictionary" }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::StackFrameIterator" = type { %"class.v8::internal::StackFrameIteratorBase.base", [7 x i8] }
%"class.v8::internal::StackFrameIteratorBase.base" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8 }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"class.std::__1::vector.1243" = type { %"class.std::__1::__vector_base.1244" }
%"class.std::__1::__vector_base.1244" = type { %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"*, %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"class.v8::internal::SharedFunctionInfo"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1188", i32, i32, i32, %"class.v8::internal::Handle.741" }
%"class.v8::internal::Handle.1188" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::IncrementalStringBuilder" = type { %"class.v8::internal::Isolate"*, i32, i8, i32, i32, %"class.v8::internal::Handle.1008", %"class.v8::internal::Handle.1008" }
%"class.v8::internal::PerIsolateAssertScope" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1220", %"class.v8::internal::Handle.1220", %"class.v8::internal::Handle.1257", %"class.v8::internal::Handle.1220", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1234" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1257" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1220" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1234", i64 }
%"class.v8::internal::StackLimitCheck" = type { %"class.v8::internal::Isolate"* }
%"class.v8::internal::FunctionTemplateInfo" = type { %"class.v8::internal::TorqueGeneratedFunctionTemplateInfo" }
%"class.v8::internal::TorqueGeneratedFunctionTemplateInfo" = type { %"class.v8::internal::TemplateInfo" }
%"class.v8::internal::TemplateInfo" = type { %"class.v8::internal::TorqueGeneratedTemplateInfo" }
%"class.v8::internal::TorqueGeneratedTemplateInfo" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PropertyCallbackArguments" = type { %"class.v8::internal::CustomArguments" }
%"class.v8::internal::CustomArguments" = type { %"class.v8::internal::CustomArgumentsBase", [7 x i64] }
%"class.v8::internal::CustomArgumentsBase" = type { %"class.v8::internal::Relocatable" }
%"class.v8::internal::SaveAndSwitchContext" = type { %"class.v8::internal::SaveContext" }
%"class.v8::internal::SaveContext" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1253", i64 }
%"class.v8::internal::Handle.1253" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::PropertyDescriptor" = type { i8, %"class.v8::internal::Handle.1220", %"class.v8::internal::Handle.1220", %"class.v8::internal::Handle.1220", %"class.v8::internal::Handle.1220" }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::PrototypeIterator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Object", %"class.v8::internal::Handle.742", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::Name" = type { i8 }
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.v8::ApiFunction" = type { i64 }
%"class.v8::internal::AccessorInfo" = type { %"class.v8::internal::TorqueGeneratedAccessorInfo" }
%"class.v8::internal::TorqueGeneratedAccessorInfo" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::CallHandlerInfo" = type { %"class.v8::internal::TorqueGeneratedCallHandlerInfo" }
%"class.v8::internal::TorqueGeneratedCallHandlerInfo" = type { %"class.v8::internal::Struct" }
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::PropertyCallbackInfo.1631" = type { i64* }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"struct.v8::internal::Brief" = type { i64 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::internal::StringStream::FmtElm" = type { %union.anon.1634 }
%union.anon.1634 = type { double }
%"struct.v8::internal::AsHex" = type <{ i64, i8, i8, [6 x i8] }>
%"class.v8::internal::HeapStringAllocator" = type { %"class.v8::internal::StringAllocator", i8* }
%"class.v8::internal::ArrayBoilerplateDescription" = type { %"class.v8::internal::TorqueGeneratedArrayBoilerplateDescription" }
%"class.v8::internal::TorqueGeneratedArrayBoilerplateDescription" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::RegExpBoilerplateDescription" = type { %"class.v8::internal::TorqueGeneratedRegExpBoilerplateDescription" }
%"class.v8::internal::TorqueGeneratedRegExpBoilerplateDescription" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Symbol" = type { %"class.v8::internal::TorqueGeneratedSymbol" }
%"class.v8::internal::TorqueGeneratedSymbol" = type { %"class.v8::internal::Name" }
%"class.v8::internal::HeapNumber" = type { %"class.v8::internal::TorqueGeneratedHeapNumber" }
%"class.v8::internal::TorqueGeneratedHeapNumber" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::BigInt" = type { %"class.v8::internal::BigIntBase" }
%"class.v8::internal::BigIntBase" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::CallableTask" = type { %"class.v8::internal::TorqueGeneratedCallableTask" }
%"class.v8::internal::TorqueGeneratedCallableTask" = type { %"class.v8::internal::Microtask" }
%"class.v8::internal::Microtask" = type { %"class.v8::internal::TorqueGeneratedMicrotask" }
%"class.v8::internal::TorqueGeneratedMicrotask" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::ClassPositions" = type { %"class.v8::internal::TorqueGeneratedClassPositions" }
%"class.v8::internal::TorqueGeneratedClassPositions" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Tuple2" = type { %"class.v8::internal::TorqueGeneratedTuple2" }
%"class.v8::internal::TorqueGeneratedTuple2" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::MegaDomHandler" = type { %"class.v8::internal::TorqueGeneratedMegaDomHandler" }
%"class.v8::internal::TorqueGeneratedMegaDomHandler" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::wasm::StructType" = type { i32, i32*, %"class.v8::internal::wasm::ValueType"*, i8* }
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::ArrayType" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8] }>
%"class.v8::internal::SwissNameDictionary" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::TransitionArray" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::JSMap" = type { %"class.v8::internal::TorqueGeneratedJSMap" }
%"class.v8::internal::TorqueGeneratedJSMap" = type { %"class.v8::internal::JSCollection" }
%"class.v8::internal::JSCollection" = type { %"class.v8::internal::TorqueGeneratedJSCollection" }
%"class.v8::internal::TorqueGeneratedJSCollection" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSSet" = type { %"class.v8::internal::TorqueGeneratedJSSet" }
%"class.v8::internal::TorqueGeneratedJSSet" = type { %"class.v8::internal::JSCollection" }
%"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef" = type { %"class.v8::internal::PropertyCell" }
%"class.v8::internal::PropertyCell" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef" = type { %"class.v8::internal::JSTypedArray" }
%"class.v8::internal::JSTypedArray" = type { %"class.v8::internal::TorqueGeneratedJSTypedArray" }
%"class.v8::internal::TorqueGeneratedJSTypedArray" = type { %"class.v8::internal::JSArrayBufferView" }
%"class.v8::internal::JSArrayBufferView" = type { %"class.v8::internal::TorqueGeneratedJSArrayBufferView" }
%"class.v8::internal::TorqueGeneratedJSArrayBufferView" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef" = type { %"class.v8::internal::JSArray" }
%"class.v8::internal::JSArray" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::Handle<v8::internal::JSProxy>::ObjectRef" = type { %"class.v8::internal::JSProxy" }
%"class.v8::internal::JSProxy" = type { %"class.v8::internal::TorqueGeneratedJSProxy" }
%"class.v8::internal::TorqueGeneratedJSProxy" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef" = type { %"class.v8::internal::DescriptorArray" }
%"class.v8::internal::Handle<v8::internal::ArrayList>::ObjectRef" = type { %"class.v8::internal::ArrayList" }
%"class.v8::internal::ArrayList" = type { %"class.v8::internal::TorqueGeneratedArrayList" }
%"class.v8::internal::TorqueGeneratedArrayList" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle.1259" }
%"class.v8::internal::MaybeHandle.1259" = type { i64* }
%"class.v8::internal::Handle<v8::internal::WeakArrayList>::ObjectRef" = type { %"class.v8::internal::WeakArrayList" }
%"class.v8::internal::Descriptor" = type <{ %"class.v8::internal::Handle.1234", %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::PropertyDetails", [4 x i8] }>
%"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef" = type { %"class.v8::internal::AccessorPair" }
%"class.v8::internal::AccessorPair" = type { %"class.v8::internal::TorqueGeneratedAccessorPair" }
%"class.v8::internal::TorqueGeneratedAccessorPair" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::TransitionsAccessor" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1212", %"class.v8::internal::Map", %"class.v8::internal::MaybeObject", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1212" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::MaybeObject" = type { %"class.v8::internal::TaggedImpl.1211" }
%"class.v8::internal::TaggedImpl.1211" = type { i64 }
%"class.v8::internal::Vector.1632" = type { i8*, i64 }
%"class.v8::internal::AbstractCode" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef" = type { %"class.v8::internal::SharedFunctionInfo" }
%"struct.v8::internal::Script::PositionInfo" = type { i32, i32, i32, i32 }
%"class.v8::internal::Handle<v8::internal::Script>::ObjectRef" = type { %"class.v8::internal::Script" }
%"class.v8::internal::Script" = type { %"class.v8::internal::TorqueGeneratedScript" }
%"class.v8::internal::TorqueGeneratedScript" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::String::FlatContent" = type { %union.anon.1643, i32, i32, %"class.v8::internal::CombinationAssertScope"* }
%union.anon.1643 = type { i8* }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::StringShape" = type { i32 }
%"class.std::__1::shared_ptr.1642" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.1319", %"class.std::__1::unique_ptr.1496", %"class.std::__1::shared_ptr.1509", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.1515", %"class.std::__1::unique_ptr.1521", %"class.std::__1::unique_ptr.1527", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.1532", %"class.std::__1::vector.1541", %"class.std::__1::unique_ptr.1549", %"class.std::__1::vector.1555", %"class.std::__1::unique_ptr.1562", i8, %"class.std::__1::unique_ptr.1568", i8, i8, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20" }
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector.1313", i32, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::shared_ptr.677" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1297" }
%"class.std::__1::__tree.1297" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1298", %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set.1305" }
%"class.std::__1::set.1305" = type { %"class.std::__1::__tree.1306" }
%"class.std::__1::__tree.1306" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1307", %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.1313" = type { %"class.std::__1::__vector_base.1314" }
%"class.std::__1::__vector_base.1314" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.1319" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.1320", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.1326", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.1340", %"class.std::__1::vector.1199", %"class.std::__1::vector.1348", %"class.std::__1::vector.1355", %"class.std::__1::vector.1362", %"class.std::__1::vector.1369", %"class.std::__1::vector.1376", %"class.std::__1::vector.1383", %"class.std::__1::vector.1390", %"class.std::__1::vector.1397", %"class.std::__1::vector.1410", %"class.std::__1::unordered_map.1417", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.1478" }
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1326" = type { %"class.std::__1::__vector_base.1327" }
%"class.std::__1::__vector_base.1327" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.1335" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.1334, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1328" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.1334 = type { i32 }
%"class.std::__1::__compressed_pair.1335" = type { %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.1340" = type { %"class.std::__1::__vector_base.1341" }
%"class.std::__1::__vector_base.1341" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.1343" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.1342 }
%union.anon.1342 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.1344" }
%"struct.std::__1::__compressed_pair_elem.1344" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.1348" = type { %"class.std::__1::__vector_base.1349" }
%"class.std::__1::__vector_base.1349" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1350" }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1351" = type { i32* }
%"class.std::__1::vector.1355" = type { %"class.std::__1::__vector_base.1356" }
%"class.std::__1::__vector_base.1356" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.1357" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.1362" = type { %"class.std::__1::__vector_base.1363" }
%"class.std::__1::__vector_base.1363" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1364" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.1369" = type { %"class.std::__1::__vector_base.1370" }
%"class.std::__1::__vector_base.1370" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.1371" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.1376" = type { %"class.std::__1::__vector_base.1377" }
%"class.std::__1::__vector_base.1377" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.1378" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.1383" = type { %"class.std::__1::__vector_base.1384" }
%"class.std::__1::__vector_base.1384" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.1385" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1385" = type { %"struct.std::__1::__compressed_pair_elem.1386" }
%"struct.std::__1::__compressed_pair_elem.1386" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.1390" = type { %"class.std::__1::__vector_base.1391" }
%"class.std::__1::__vector_base.1391" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.1392" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.1397" = type { %"class.std::__1::__vector_base.1398" }
%"class.std::__1::__vector_base.1398" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.1405" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.1399", i32, [4 x i8] }>
%"class.std::__1::vector.1399" = type { %"class.std::__1::__vector_base.1400" }
%"class.std::__1::__vector_base.1400" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"class.std::__1::__compressed_pair.1405" = type { %"struct.std::__1::__compressed_pair_elem.1406" }
%"struct.std::__1::__compressed_pair_elem.1406" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.1410" = type { %"class.std::__1::__vector_base.1411" }
%"class.std::__1::__vector_base.1411" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.1412" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.1417" = type { %"class.std::__1::__hash_table.1418" }
%"class.std::__1::__hash_table.1418" = type <{ %"class.std::__1::unique_ptr.1419", %"class.std::__1::__compressed_pair.1429", %"class.std::__1::__compressed_pair.1434", %"class.std::__1::__compressed_pair.1439", [4 x i8] }>
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421", %"struct.std::__1::__compressed_pair_elem.1423" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"struct.std::__1::__hash_node_base.1422"** }
%"struct.std::__1::__hash_node_base.1422" = type { %"struct.std::__1::__hash_node_base.1422"* }
%"struct.std::__1::__compressed_pair_elem.1423" = type { %"class.std::__1::__bucket_list_deallocator.1424" }
%"class.std::__1::__bucket_list_deallocator.1424" = type { %"class.std::__1::__compressed_pair.1425" }
%"class.std::__1::__compressed_pair.1425" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1429" = type { %"struct.std::__1::__compressed_pair_elem.1430" }
%"struct.std::__1::__compressed_pair_elem.1430" = type { %"struct.std::__1::__hash_node_base.1422" }
%"class.std::__1::__compressed_pair.1434" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.1445" }
%"class.std::__1::unordered_map.1445" = type { %"class.std::__1::__hash_table.1446" }
%"class.std::__1::__hash_table.1446" = type <{ %"class.std::__1::unique_ptr.1447", %"class.std::__1::__compressed_pair.1457", %"class.std::__1::__compressed_pair.1462", %"class.std::__1::__compressed_pair.1465", [4 x i8] }>
%"class.std::__1::unique_ptr.1447" = type { %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449", %"struct.std::__1::__compressed_pair_elem.1451" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"struct.std::__1::__hash_node_base.1450"** }
%"struct.std::__1::__hash_node_base.1450" = type { %"struct.std::__1::__hash_node_base.1450"* }
%"struct.std::__1::__compressed_pair_elem.1451" = type { %"class.std::__1::__bucket_list_deallocator.1452" }
%"class.std::__1::__bucket_list_deallocator.1452" = type { %"class.std::__1::__compressed_pair.1453" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"struct.std::__1::__hash_node_base.1450" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1465" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1471" }
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.std::__1::unordered_map.1474"* }
%"class.std::__1::unordered_map.1474" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.1478" = type { %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.1487" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.1481", i64 }
%"class.std::__1::unique_ptr.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { i8* }
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type opaque
%"class.std::__1::unique_ptr.1496" = type { %"class.std::__1::__compressed_pair.1497" }
%"class.std::__1::__compressed_pair.1497" = type { %"struct.std::__1::__compressed_pair_elem.1498" }
%"struct.std::__1::__compressed_pair_elem.1498" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.91", %"class.std::__1::vector.1499", %"class.std::__1::vector.91", %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.1499" = type { %"class.std::__1::__vector_base.1500" }
%"class.std::__1::__vector_base.1500" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.1502" }
%"struct.std::__1::__compressed_pair_elem.1502" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.1509" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.1481", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.1510" }
%"struct.std::__1::atomic.1510" = type { %"struct.std::__1::__atomic_base.1511" }
%"struct.std::__1::__atomic_base.1511" = type { %"struct.std::__1::__atomic_base.1512" }
%"struct.std::__1::__atomic_base.1512" = type { %"struct.std::__1::__cxx_atomic_impl.1513" }
%"struct.std::__1::__cxx_atomic_impl.1513" = type { %"struct.std::__1::__cxx_atomic_base_impl.1514" }
%"struct.std::__1::__cxx_atomic_base_impl.1514" = type { i32 }
%"class.std::__1::unique_ptr.1515" = type { %"class.std::__1::__compressed_pair.1516" }
%"class.std::__1::__compressed_pair.1516" = type { %"struct.std::__1::__compressed_pair_elem.1517" }
%"struct.std::__1::__compressed_pair_elem.1517" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.1521" = type { %"class.std::__1::__compressed_pair.1522" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.1523" }
%"struct.std::__1::__compressed_pair_elem.1523" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type opaque
%"class.std::__1::unique_ptr.1527" = type { %"class.std::__1::__compressed_pair.1528" }
%"class.std::__1::__compressed_pair.1528" = type { %"struct.std::__1::__compressed_pair_elem.1351" }
%"class.std::__1::map.1532" = type { %"class.std::__1::__tree.1533" }
%"class.std::__1::__tree.1533" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1534", %"class.std::__1::__compressed_pair.1538" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.1538" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.1541" = type { %"class.std::__1::__vector_base.1542" }
%"class.std::__1::__vector_base.1542" = type { %"class.std::__1::unique_ptr.1543"*, %"class.std::__1::unique_ptr.1543"*, %"class.std::__1::__compressed_pair.1544" }
%"class.std::__1::unique_ptr.1543" = type opaque
%"class.std::__1::__compressed_pair.1544" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"struct.std::__1::__compressed_pair_elem.1545" = type { %"class.std::__1::unique_ptr.1543"* }
%"class.std::__1::unique_ptr.1549" = type { %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.1555" = type { %"class.std::__1::__vector_base.1556" }
%"class.std::__1::__vector_base.1556" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.1557" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1557" = type { %"struct.std::__1::__compressed_pair_elem.1558" }
%"struct.std::__1::__compressed_pair_elem.1558" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.1562" = type { %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type opaque
%"class.std::__1::unique_ptr.1568" = type { %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.1570" }
%"struct.std::__1::__compressed_pair_elem.1570" = type { %"class.std::__1::map.1571"* }
%"class.std::__1::map.1571" = type opaque
%"class.v8::internal::SharedFunctionInfo::ScriptIterator" = type <{ %"class.v8::internal::Handle.1296", i32, [4 x i8] }>
%"class.v8::internal::Handle.1296" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::AllocationSite" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::JSPromise" = type { %"class.v8::internal::TorqueGeneratedJSPromise" }
%"class.v8::internal::TorqueGeneratedJSPromise" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSGeneratorObject" = type { %"class.v8::internal::TorqueGeneratedJSGeneratorObject" }
%"class.v8::internal::TorqueGeneratedJSGeneratorObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::CFunctionInfo" = type opaque
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }
%"class.v8::internal::SlicedString" = type { %"class.v8::internal::TorqueGeneratedSlicedString" }
%"class.v8::internal::TorqueGeneratedSlicedString" = type { %"class.v8::internal::String" }
%"class.v8::internal::ThinString" = type { %"class.v8::internal::TorqueGeneratedThinString" }
%"class.v8::internal::TorqueGeneratedThinString" = type { %"class.v8::internal::String" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }

$_ZN2v88internal15DescriptorArray8AllocateINS0_7IsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal15DescriptorArray8AllocateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE = comdat any

$_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE = comdat any

$_ZN2v88internal6Script12InitLineEndsINS0_12LocalIsolateEEEvPT_NS0_6HandleIS1_EE = comdat any

$_ZN2v88internal6Script22FindSharedFunctionInfoINS0_7IsolateEEENS0_11MaybeHandleINS0_18SharedFunctionInfoEEENS0_6HandleIS1_EEPT_PNS0_15FunctionLiteralE = comdat any

$_ZN2v88internal6Script22FindSharedFunctionInfoINS0_12LocalIsolateEEENS0_11MaybeHandleINS0_18SharedFunctionInfoEEENS0_6HandleIS1_EEPT_PNS0_15FunctionLiteralE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6StringEi = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEPNS0_12HashTableKeyEi = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal21CompilationCacheShape13HashForObjectENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_6ObjectEEEi = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_6ObjectEEEi = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEEi = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE7ValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE17EntryToValueIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE20FillEntriesWithHolesENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_ = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEESA_i = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE8AddEntryENS0_13InternalIndexENS0_6ObjectES6_ = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPb = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPbi = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC5Ev = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_6ObjectEEEi = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEEi = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE7ValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE17EntryToValueIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE20FillEntriesWithHolesENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_ = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3PutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEESA_i = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE8AddEntryENS0_13InternalIndexENS0_6ObjectES6_ = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPb = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPbi = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC5Ev = comdat any

$_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEji = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE7ValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE7ValueAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE10ValueAtPutENS0_13InternalIndexENS0_6ObjectE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE9DetailsAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE12DetailsAtPutENS0_13InternalIndexENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE10ClearEntryENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE28NumberOfEnumerablePropertiesEv = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE17RawFieldOfValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11ShallowCopyEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EEjNS7_INS0_6ObjectEEENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEji = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE7ValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE7ValueAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE10ValueAtPutENS0_13InternalIndexENS0_6ObjectE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE9DetailsAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE12DetailsAtPutENS0_13InternalIndexENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE10ClearEntryENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE28NumberOfEnumerablePropertiesEv = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE17RawFieldOfValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE11ShallowCopyEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EEjNS7_INS0_6ObjectEEENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_4NameEEEi = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7ValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7ValueAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE10ValueAtPutENS0_13InternalIndexENS0_6ObjectE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE9DetailsAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE12DetailsAtPutENS0_13InternalIndexENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE10ClearEntryENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE28NumberOfEnumerablePropertiesEv = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE17RawFieldOfValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11ShallowCopyEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7SetHashEi = comdat any

$_ZNK2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE4HashEv = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE20NextEnumerationIndexEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE22next_enumeration_indexEv = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE26set_next_enumeration_indexEi = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6GetMapENS0_13ReadOnlyRootsE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE13IteratePrefixEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE15IterateElementsEPNS0_13ObjectVisitorE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_4NameEEEi = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE12EntryToIndexENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5KeyAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE12IndexToEntryEi = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11SlotToIndexEmm = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE26HasSufficientCapacityToAddEi = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE26HasSufficientCapacityToAddEiiii = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE18FindInsertionEntryEPNS0_7IsolateEj = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE25ComputeCapacityWithShrinkEii = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_ = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7set_keyEiNS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11SetCapacityEi = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7ValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7ValueAtENS0_16PtrComprCageBaseENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE10ValueAtPutENS0_13InternalIndexENS0_6ObjectE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE9DetailsAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE12DetailsAtPutENS0_13InternalIndexENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE28NumberOfEnumerablePropertiesEv = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE10ClearEntryENS0_13InternalIndexE = comdat any

$_ZN2v88internal16GlobalDictionary8SetEntryENS0_13InternalIndexENS0_6ObjectES3_NS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE17RawFieldOfValueAtENS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11ShallowCopyEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7SetHashEi = comdat any

$_ZNK2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE4HashEv = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE20NextEnumerationIndexEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE22next_enumeration_indexEv = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE26set_next_enumeration_indexEi = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Ev = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Em = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE = comdat any

$_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE = comdat any

$_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal10JSReceiver11GetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE = comdat any

$_ZN2v88internal25PropertyCallbackArguments18CallAccessorGetterENS0_6HandleINS0_12AccessorInfoEEENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal25PropertyCallbackArguments18CallAccessorSetterENS0_6HandleINS0_12AccessorInfoEEENS2_INS0_4NameEEENS2_INS0_6ObjectEEE = comdat any

$_ZN2v88internal6Object13GetSimpleHashES1_ = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_9ScopeTypeE = comdat any

$_ZN2v88internal19BodyDescriptorApplyINS0_15CallIsValidSlotEbNS0_3MapENS0_10HeapObjectEiiEET0_NS0_12InstanceTypeET1_T2_T3_T4_ = comdat any

$_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE = comdat any

$_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE = comdat any

$_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE9FindEntryINS0_7IsolateEEENS0_13InternalIndexEPT_NS0_6StringE = comdat any

$_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_ = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

$_ZN2v88internal17PrototypeIterator7AdvanceEv = comdat any

$_ZNK2v88internal17PrototypeIterator9HasAccessEv = comdat any

$_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv = comdat any

$_ZN2v88internal25PropertyCallbackArguments28BasicCallNamedGetterCallbackEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEENS0_6HandleINS0_4NameEEENSC_INS0_6ObjectEEESG_ = comdat any

$_ZN2v88internal11Relocatable21PostGarbageCollectionEv = comdat any

$_ZN2v88internal11RelocatableD2Ev = comdat any

$_ZN2v88internal11RelocatableD0Ev = comdat any

$_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_13ObjectVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_ = comdat any

$_ZN2v88internal15CallIterateBody5applyINS0_13JSArrayBuffer14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_ = comdat any

$_ZN2v88internal15CallIterateBody5applyINS0_10JSDataView14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_ = comdat any

$_ZN2v88internal15CallIterateBody5applyINS0_9JSWeakRef14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_ = comdat any

$_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_ = comdat any

$_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_ = comdat any

$_ZN2v88internal12JSTypedArray14BodyDescriptor11IterateBodyINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_ = comdat any

$_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_ = comdat any

$_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_ = comdat any

$_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 = comdat any

$_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 = comdat any

$_ZTVN2v88internal11RelocatableE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"function_literal_id != kFunctionLiteralIdInvalid\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"function_literal_id < script->shared_function_info_count()\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"invalid table size\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"INTERNALIZED_STRING_TYPE\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"EXTERNAL_INTERNALIZED_STRING_TYPE\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"UNCACHED_EXTERNAL_INTERNALIZED_STRING_TYPE\00", align 1
@.str.10 = private unnamed_addr constant [52 x i8] c"UNCACHED_EXTERNAL_ONE_BYTE_INTERNALIZED_STRING_TYPE\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"STRING_TYPE\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"CONS_STRING_TYPE\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"EXTERNAL_STRING_TYPE\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"SLICED_STRING_TYPE\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"THIN_STRING_TYPE\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"ONE_BYTE_STRING_TYPE\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"CONS_ONE_BYTE_STRING_TYPE\00", align 1
@.str.18 = private unnamed_addr constant [30 x i8] c"EXTERNAL_ONE_BYTE_STRING_TYPE\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"SLICED_ONE_BYTE_STRING_TYPE\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"THIN_ONE_BYTE_STRING_TYPE\00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"UNCACHED_EXTERNAL_STRING_TYPE\00", align 1
@.str.22 = private unnamed_addr constant [39 x i8] c"UNCACHED_EXTERNAL_ONE_BYTE_STRING_TYPE\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"SYMBOL_TYPE\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"BIG_INT_BASE_TYPE\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"HEAP_NUMBER_TYPE\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"ODDBALL_TYPE\00", align 1
@.str.27 = private unnamed_addr constant [39 x i8] c"ABSTRACT_INTERNAL_CLASS_SUBCLASS1_TYPE\00", align 1
@.str.28 = private unnamed_addr constant [39 x i8] c"ABSTRACT_INTERNAL_CLASS_SUBCLASS2_TYPE\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"FOREIGN_TYPE\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"WASM_FUNCTION_DATA_TYPE\00", align 1
@.str.31 = private unnamed_addr constant [29 x i8] c"WASM_CAPI_FUNCTION_DATA_TYPE\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"WASM_EXPORTED_FUNCTION_DATA_TYPE\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"WASM_JS_FUNCTION_DATA_TYPE\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"WASM_TYPE_INFO_TYPE\00", align 1
@.str.35 = private unnamed_addr constant [39 x i8] c"PROMISE_FULFILL_REACTION_JOB_TASK_TYPE\00", align 1
@.str.36 = private unnamed_addr constant [38 x i8] c"PROMISE_REJECT_REACTION_JOB_TASK_TYPE\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"CALLABLE_TASK_TYPE\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"CALLBACK_TASK_TYPE\00", align 1
@.str.39 = private unnamed_addr constant [39 x i8] c"PROMISE_RESOLVE_THENABLE_JOB_TASK_TYPE\00", align 1
@.str.40 = private unnamed_addr constant [18 x i8] c"LOAD_HANDLER_TYPE\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"STORE_HANDLER_TYPE\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"FUNCTION_TEMPLATE_INFO_TYPE\00", align 1
@.str.43 = private unnamed_addr constant [26 x i8] c"OBJECT_TEMPLATE_INFO_TYPE\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"ACCESS_CHECK_INFO_TYPE\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"ACCESSOR_INFO_TYPE\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"ACCESSOR_PAIR_TYPE\00", align 1
@.str.47 = private unnamed_addr constant [29 x i8] c"ALIASED_ARGUMENTS_ENTRY_TYPE\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"ALLOCATION_MEMENTO_TYPE\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"ALLOCATION_SITE_TYPE\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"ARRAY_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.51 = private unnamed_addr constant [19 x i8] c"ASM_WASM_DATA_TYPE\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"ASYNC_GENERATOR_REQUEST_TYPE\00", align 1
@.str.53 = private unnamed_addr constant [19 x i8] c"BASELINE_DATA_TYPE\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"BREAK_POINT_TYPE\00", align 1
@.str.55 = private unnamed_addr constant [22 x i8] c"BREAK_POINT_INFO_TYPE\00", align 1
@.str.56 = private unnamed_addr constant [28 x i8] c"CACHED_TEMPLATE_OBJECT_TYPE\00", align 1
@.str.57 = private unnamed_addr constant [23 x i8] c"CALL_HANDLER_INFO_TYPE\00", align 1
@.str.58 = private unnamed_addr constant [21 x i8] c"CLASS_POSITIONS_TYPE\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"DEBUG_INFO_TYPE\00", align 1
@.str.60 = private unnamed_addr constant [16 x i8] c"ENUM_CACHE_TYPE\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"FEEDBACK_CELL_TYPE\00", align 1
@.str.62 = private unnamed_addr constant [33 x i8] c"FUNCTION_TEMPLATE_RARE_DATA_TYPE\00", align 1
@.str.63 = private unnamed_addr constant [22 x i8] c"INTERCEPTOR_INFO_TYPE\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"INTERPRETER_DATA_TYPE\00", align 1
@.str.65 = private unnamed_addr constant [20 x i8] c"MODULE_REQUEST_TYPE\00", align 1
@.str.66 = private unnamed_addr constant [24 x i8] c"PROMISE_CAPABILITY_TYPE\00", align 1
@.str.67 = private unnamed_addr constant [22 x i8] c"PROMISE_REACTION_TYPE\00", align 1
@.str.68 = private unnamed_addr constant [32 x i8] c"PROPERTY_DESCRIPTOR_OBJECT_TYPE\00", align 1
@.str.69 = private unnamed_addr constant [20 x i8] c"PROTOTYPE_INFO_TYPE\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"REG_EXP_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"SCRIPT_TYPE\00", align 1
@.str.72 = private unnamed_addr constant [35 x i8] c"SOURCE_TEXT_MODULE_INFO_ENTRY_TYPE\00", align 1
@.str.73 = private unnamed_addr constant [22 x i8] c"STACK_FRAME_INFO_TYPE\00", align 1
@.str.74 = private unnamed_addr constant [33 x i8] c"TEMPLATE_OBJECT_DESCRIPTION_TYPE\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"TUPLE2_TYPE\00", align 1
@.str.76 = private unnamed_addr constant [24 x i8] c"WASM_EXCEPTION_TAG_TYPE\00", align 1
@.str.77 = private unnamed_addr constant [34 x i8] c"WASM_INDIRECT_FUNCTION_TABLE_TYPE\00", align 1
@.str.78 = private unnamed_addr constant [17 x i8] c"FIXED_ARRAY_TYPE\00", align 1
@.str.79 = private unnamed_addr constant [16 x i8] c"HASH_TABLE_TYPE\00", align 1
@.str.80 = private unnamed_addr constant [26 x i8] c"EPHEMERON_HASH_TABLE_TYPE\00", align 1
@.str.81 = private unnamed_addr constant [23 x i8] c"GLOBAL_DICTIONARY_TYPE\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"NAME_DICTIONARY_TYPE\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"NUMBER_DICTIONARY_TYPE\00", align 1
@.str.84 = private unnamed_addr constant [22 x i8] c"ORDERED_HASH_MAP_TYPE\00", align 1
@.str.85 = private unnamed_addr constant [22 x i8] c"ORDERED_HASH_SET_TYPE\00", align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"ORDERED_NAME_DICTIONARY_TYPE\00", align 1
@.str.87 = private unnamed_addr constant [30 x i8] c"SIMPLE_NUMBER_DICTIONARY_TYPE\00", align 1
@.str.88 = private unnamed_addr constant [33 x i8] c"CLOSURE_FEEDBACK_CELL_ARRAY_TYPE\00", align 1
@.str.89 = private unnamed_addr constant [36 x i8] c"OBJECT_BOILERPLATE_DESCRIPTION_TYPE\00", align 1
@.str.90 = private unnamed_addr constant [26 x i8] c"SCRIPT_CONTEXT_TABLE_TYPE\00", align 1
@.str.91 = private unnamed_addr constant [16 x i8] c"BYTE_ARRAY_TYPE\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"BYTECODE_ARRAY_TYPE\00", align 1
@.str.93 = private unnamed_addr constant [24 x i8] c"FIXED_DOUBLE_ARRAY_TYPE\00", align 1
@.str.94 = private unnamed_addr constant [38 x i8] c"INTERNAL_CLASS_WITH_SMI_ELEMENTS_TYPE\00", align 1
@.str.95 = private unnamed_addr constant [31 x i8] c"SLOPPY_ARGUMENTS_ELEMENTS_TYPE\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"AWAIT_CONTEXT_TYPE\00", align 1
@.str.97 = private unnamed_addr constant [19 x i8] c"BLOCK_CONTEXT_TYPE\00", align 1
@.str.98 = private unnamed_addr constant [19 x i8] c"CATCH_CONTEXT_TYPE\00", align 1
@.str.99 = private unnamed_addr constant [28 x i8] c"DEBUG_EVALUATE_CONTEXT_TYPE\00", align 1
@.str.100 = private unnamed_addr constant [18 x i8] c"EVAL_CONTEXT_TYPE\00", align 1
@.str.101 = private unnamed_addr constant [22 x i8] c"FUNCTION_CONTEXT_TYPE\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"MODULE_CONTEXT_TYPE\00", align 1
@.str.103 = private unnamed_addr constant [20 x i8] c"NATIVE_CONTEXT_TYPE\00", align 1
@.str.104 = private unnamed_addr constant [20 x i8] c"SCRIPT_CONTEXT_TYPE\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"WITH_CONTEXT_TYPE\00", align 1
@.str.106 = private unnamed_addr constant [29 x i8] c"EXPORTED_SUB_CLASS_BASE_TYPE\00", align 1
@.str.107 = private unnamed_addr constant [24 x i8] c"EXPORTED_SUB_CLASS_TYPE\00", align 1
@.str.108 = private unnamed_addr constant [25 x i8] c"EXPORTED_SUB_CLASS2_TYPE\00", align 1
@.str.109 = private unnamed_addr constant [28 x i8] c"SMALL_ORDERED_HASH_MAP_TYPE\00", align 1
@.str.110 = private unnamed_addr constant [28 x i8] c"SMALL_ORDERED_HASH_SET_TYPE\00", align 1
@.str.111 = private unnamed_addr constant [35 x i8] c"SMALL_ORDERED_NAME_DICTIONARY_TYPE\00", align 1
@.str.112 = private unnamed_addr constant [22 x i8] c"DESCRIPTOR_ARRAY_TYPE\00", align 1
@.str.113 = private unnamed_addr constant [29 x i8] c"STRONG_DESCRIPTOR_ARRAY_TYPE\00", align 1
@.str.114 = private unnamed_addr constant [24 x i8] c"SOURCE_TEXT_MODULE_TYPE\00", align 1
@.str.115 = private unnamed_addr constant [22 x i8] c"SYNTHETIC_MODULE_TYPE\00", align 1
@.str.116 = private unnamed_addr constant [40 x i8] c"UNCOMPILED_DATA_WITH_PREPARSE_DATA_TYPE\00", align 1
@.str.117 = private unnamed_addr constant [43 x i8] c"UNCOMPILED_DATA_WITHOUT_PREPARSE_DATA_TYPE\00", align 1
@.str.118 = private unnamed_addr constant [22 x i8] c"WEAK_FIXED_ARRAY_TYPE\00", align 1
@.str.119 = private unnamed_addr constant [22 x i8] c"TRANSITION_ARRAY_TYPE\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"CELL_TYPE\00", align 1
@.str.121 = private unnamed_addr constant [10 x i8] c"CODE_TYPE\00", align 1
@.str.122 = private unnamed_addr constant [25 x i8] c"CODE_DATA_CONTAINER_TYPE\00", align 1
@.str.123 = private unnamed_addr constant [19 x i8] c"COVERAGE_INFO_TYPE\00", align 1
@.str.124 = private unnamed_addr constant [25 x i8] c"EMBEDDER_DATA_ARRAY_TYPE\00", align 1
@.str.125 = private unnamed_addr constant [23 x i8] c"FEEDBACK_METADATA_TYPE\00", align 1
@.str.126 = private unnamed_addr constant [21 x i8] c"FEEDBACK_VECTOR_TYPE\00", align 1
@.str.127 = private unnamed_addr constant [12 x i8] c"FILLER_TYPE\00", align 1
@.str.128 = private unnamed_addr constant [16 x i8] c"FREE_SPACE_TYPE\00", align 1
@.str.129 = private unnamed_addr constant [20 x i8] c"INTERNAL_CLASS_TYPE\00", align 1
@.str.130 = private unnamed_addr constant [41 x i8] c"INTERNAL_CLASS_WITH_STRUCT_ELEMENTS_TYPE\00", align 1
@.str.131 = private unnamed_addr constant [9 x i8] c"MAP_TYPE\00", align 1
@.str.132 = private unnamed_addr constant [22 x i8] c"MEGA_DOM_HANDLER_TYPE\00", align 1
@.str.133 = private unnamed_addr constant [39 x i8] c"ON_HEAP_BASIC_BLOCK_PROFILER_DATA_TYPE\00", align 1
@.str.134 = private unnamed_addr constant [19 x i8] c"PREPARSE_DATA_TYPE\00", align 1
@.str.135 = private unnamed_addr constant [20 x i8] c"PROPERTY_ARRAY_TYPE\00", align 1
@.str.136 = private unnamed_addr constant [19 x i8] c"PROPERTY_CELL_TYPE\00", align 1
@.str.137 = private unnamed_addr constant [16 x i8] c"SCOPE_INFO_TYPE\00", align 1
@.str.138 = private unnamed_addr constant [26 x i8] c"SHARED_FUNCTION_INFO_TYPE\00", align 1
@.str.139 = private unnamed_addr constant [13 x i8] c"SMI_BOX_TYPE\00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"SMI_PAIR_TYPE\00", align 1
@.str.141 = private unnamed_addr constant [16 x i8] c"SORT_STATE_TYPE\00", align 1
@.str.142 = private unnamed_addr constant [27 x i8] c"SWISS_NAME_DICTIONARY_TYPE\00", align 1
@.str.143 = private unnamed_addr constant [21 x i8] c"WEAK_ARRAY_LIST_TYPE\00", align 1
@.str.144 = private unnamed_addr constant [15 x i8] c"WEAK_CELL_TYPE\00", align 1
@.str.145 = private unnamed_addr constant [16 x i8] c"WASM_ARRAY_TYPE\00", align 1
@.str.146 = private unnamed_addr constant [17 x i8] c"WASM_STRUCT_TYPE\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"JS_PROXY_TYPE\00", align 1
@.str.148 = private unnamed_addr constant [15 x i8] c"JS_OBJECT_TYPE\00", align 1
@.str.149 = private unnamed_addr constant [22 x i8] c"JS_GLOBAL_OBJECT_TYPE\00", align 1
@.str.150 = private unnamed_addr constant [21 x i8] c"JS_GLOBAL_PROXY_TYPE\00", align 1
@.str.151 = private unnamed_addr constant [25 x i8] c"JS_MODULE_NAMESPACE_TYPE\00", align 1
@.str.152 = private unnamed_addr constant [27 x i8] c"JS_SPECIAL_API_OBJECT_TYPE\00", align 1
@.str.153 = private unnamed_addr constant [26 x i8] c"JS_PRIMITIVE_WRAPPER_TYPE\00", align 1
@.str.154 = private unnamed_addr constant [33 x i8] c"JS_ARRAY_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.155 = private unnamed_addr constant [27 x i8] c"JS_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.156 = private unnamed_addr constant [31 x i8] c"JS_MAP_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.157 = private unnamed_addr constant [25 x i8] c"JS_OBJECT_PROTOTYPE_TYPE\00", align 1
@.str.158 = private unnamed_addr constant [26 x i8] c"JS_PROMISE_PROTOTYPE_TYPE\00", align 1
@.str.159 = private unnamed_addr constant [26 x i8] c"JS_REG_EXP_PROTOTYPE_TYPE\00", align 1
@.str.160 = private unnamed_addr constant [31 x i8] c"JS_SET_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.161 = private unnamed_addr constant [22 x i8] c"JS_SET_PROTOTYPE_TYPE\00", align 1
@.str.162 = private unnamed_addr constant [34 x i8] c"JS_STRING_ITERATOR_PROTOTYPE_TYPE\00", align 1
@.str.163 = private unnamed_addr constant [30 x i8] c"JS_TYPED_ARRAY_PROTOTYPE_TYPE\00", align 1
@.str.164 = private unnamed_addr constant [25 x i8] c"JS_GENERATOR_OBJECT_TYPE\00", align 1
@.str.165 = private unnamed_addr constant [30 x i8] c"JS_ASYNC_FUNCTION_OBJECT_TYPE\00", align 1
@.str.166 = private unnamed_addr constant [31 x i8] c"JS_ASYNC_GENERATOR_OBJECT_TYPE\00", align 1
@.str.167 = private unnamed_addr constant [25 x i8] c"JS_ARGUMENTS_OBJECT_TYPE\00", align 1
@.str.168 = private unnamed_addr constant [19 x i8] c"JS_API_OBJECT_TYPE\00", align 1
@.str.169 = private unnamed_addr constant [23 x i8] c"JS_BOUND_FUNCTION_TYPE\00", align 1
@.str.170 = private unnamed_addr constant [17 x i8] c"JS_FUNCTION_TYPE\00", align 1
@.str.171 = private unnamed_addr constant [38 x i8] c"BIGINT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.172 = private unnamed_addr constant [39 x i8] c"BIGUINT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.173 = private unnamed_addr constant [37 x i8] c"FLOAT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.174 = private unnamed_addr constant [37 x i8] c"FLOAT64_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.175 = private unnamed_addr constant [35 x i8] c"INT16_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.176 = private unnamed_addr constant [35 x i8] c"INT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.177 = private unnamed_addr constant [34 x i8] c"INT8_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.178 = private unnamed_addr constant [36 x i8] c"UINT16_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.179 = private unnamed_addr constant [36 x i8] c"UINT32_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.180 = private unnamed_addr constant [43 x i8] c"UINT8_CLAMPED_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.181 = private unnamed_addr constant [35 x i8] c"UINT8_TYPED_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.182 = private unnamed_addr constant [26 x i8] c"JS_ARRAY_CONSTRUCTOR_TYPE\00", align 1
@.str.183 = private unnamed_addr constant [28 x i8] c"JS_PROMISE_CONSTRUCTOR_TYPE\00", align 1
@.str.184 = private unnamed_addr constant [28 x i8] c"JS_REG_EXP_CONSTRUCTOR_TYPE\00", align 1
@.str.185 = private unnamed_addr constant [25 x i8] c"JS_MAP_KEY_ITERATOR_TYPE\00", align 1
@.str.186 = private unnamed_addr constant [31 x i8] c"JS_MAP_KEY_VALUE_ITERATOR_TYPE\00", align 1
@.str.187 = private unnamed_addr constant [27 x i8] c"JS_MAP_VALUE_ITERATOR_TYPE\00", align 1
@.str.188 = private unnamed_addr constant [31 x i8] c"JS_SET_KEY_VALUE_ITERATOR_TYPE\00", align 1
@.str.189 = private unnamed_addr constant [27 x i8] c"JS_SET_VALUE_ITERATOR_TYPE\00", align 1
@.str.190 = private unnamed_addr constant [18 x i8] c"JS_DATA_VIEW_TYPE\00", align 1
@.str.191 = private unnamed_addr constant [20 x i8] c"JS_TYPED_ARRAY_TYPE\00", align 1
@.str.192 = private unnamed_addr constant [12 x i8] c"JS_MAP_TYPE\00", align 1
@.str.193 = private unnamed_addr constant [12 x i8] c"JS_SET_TYPE\00", align 1
@.str.194 = private unnamed_addr constant [17 x i8] c"JS_WEAK_MAP_TYPE\00", align 1
@.str.195 = private unnamed_addr constant [17 x i8] c"JS_WEAK_SET_TYPE\00", align 1
@.str.196 = private unnamed_addr constant [14 x i8] c"JS_ARRAY_TYPE\00", align 1
@.str.197 = private unnamed_addr constant [21 x i8] c"JS_ARRAY_BUFFER_TYPE\00", align 1
@.str.198 = private unnamed_addr constant [23 x i8] c"JS_ARRAY_ITERATOR_TYPE\00", align 1
@.str.199 = private unnamed_addr constant [33 x i8] c"JS_ASYNC_FROM_SYNC_ITERATOR_TYPE\00", align 1
@.str.200 = private unnamed_addr constant [17 x i8] c"JS_COLLATOR_TYPE\00", align 1
@.str.201 = private unnamed_addr constant [33 x i8] c"JS_CONTEXT_EXTENSION_OBJECT_TYPE\00", align 1
@.str.202 = private unnamed_addr constant [13 x i8] c"JS_DATE_TYPE\00", align 1
@.str.203 = private unnamed_addr constant [25 x i8] c"JS_DATE_TIME_FORMAT_TYPE\00", align 1
@.str.204 = private unnamed_addr constant [22 x i8] c"JS_DISPLAY_NAMES_TYPE\00", align 1
@.str.205 = private unnamed_addr constant [14 x i8] c"JS_ERROR_TYPE\00", align 1
@.str.206 = private unnamed_addr constant [30 x i8] c"JS_FINALIZATION_REGISTRY_TYPE\00", align 1
@.str.207 = private unnamed_addr constant [20 x i8] c"JS_LIST_FORMAT_TYPE\00", align 1
@.str.208 = private unnamed_addr constant [15 x i8] c"JS_LOCALE_TYPE\00", align 1
@.str.209 = private unnamed_addr constant [23 x i8] c"JS_MESSAGE_OBJECT_TYPE\00", align 1
@.str.210 = private unnamed_addr constant [22 x i8] c"JS_NUMBER_FORMAT_TYPE\00", align 1
@.str.211 = private unnamed_addr constant [21 x i8] c"JS_PLURAL_RULES_TYPE\00", align 1
@.str.212 = private unnamed_addr constant [16 x i8] c"JS_PROMISE_TYPE\00", align 1
@.str.213 = private unnamed_addr constant [16 x i8] c"JS_REG_EXP_TYPE\00", align 1
@.str.214 = private unnamed_addr constant [32 x i8] c"JS_REG_EXP_STRING_ITERATOR_TYPE\00", align 1
@.str.215 = private unnamed_addr constant [29 x i8] c"JS_RELATIVE_TIME_FORMAT_TYPE\00", align 1
@.str.216 = private unnamed_addr constant [25 x i8] c"JS_SEGMENT_ITERATOR_TYPE\00", align 1
@.str.217 = private unnamed_addr constant [18 x i8] c"JS_SEGMENTER_TYPE\00", align 1
@.str.218 = private unnamed_addr constant [17 x i8] c"JS_SEGMENTS_TYPE\00", align 1
@.str.219 = private unnamed_addr constant [24 x i8] c"JS_STRING_ITERATOR_TYPE\00", align 1
@.str.220 = private unnamed_addr constant [26 x i8] c"JS_V8_BREAK_ITERATOR_TYPE\00", align 1
@.str.221 = private unnamed_addr constant [17 x i8] c"JS_WEAK_REF_TYPE\00", align 1
@.str.222 = private unnamed_addr constant [27 x i8] c"WASM_EXCEPTION_OBJECT_TYPE\00", align 1
@.str.223 = private unnamed_addr constant [24 x i8] c"WASM_GLOBAL_OBJECT_TYPE\00", align 1
@.str.224 = private unnamed_addr constant [26 x i8] c"WASM_INSTANCE_OBJECT_TYPE\00", align 1
@.str.225 = private unnamed_addr constant [24 x i8] c"WASM_MEMORY_OBJECT_TYPE\00", align 1
@.str.226 = private unnamed_addr constant [24 x i8] c"WASM_MODULE_OBJECT_TYPE\00", align 1
@.str.227 = private unnamed_addr constant [23 x i8] c"WASM_TABLE_OBJECT_TYPE\00", align 1
@.str.228 = private unnamed_addr constant [23 x i8] c"WASM_VALUE_OBJECT_TYPE\00", align 1
@.str.229 = private unnamed_addr constant [10 x i8] c"Undefined\00", align 1
@.str.230 = private unnamed_addr constant [9 x i8] c"Constant\00", align 1
@.str.231 = private unnamed_addr constant [13 x i8] c"ConstantType\00", align 1
@.str.232 = private unnamed_addr constant [8 x i8] c"Mutable\00", align 1
@_ZN2v88internal22FLAG_track_field_typesE = external local_unnamed_addr global i8, align 1
@.str.233 = private unnamed_addr constant [22 x i8] c"<a very large BigInt>\00", align 1
@.str.237 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.238 = private unnamed_addr constant [17 x i8] c"[object Unknown]\00", align 1
@.str.240 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.241 = private unnamed_addr constant [24 x i8] c"CreateListFromArrayLike\00", align 1
@_ZN2v88internal24FLAG_builtin_subclassingE = external local_unnamed_addr global i8, align 1
@.str.242 = private unnamed_addr constant [10 x i8] c"[cleared]\00", align 1
@.str.243 = private unnamed_addr constant [8 x i8] c"[weak] \00", align 1
@.str.244 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.245 = private unnamed_addr constant [5 x i8] c"<Map\00", align 1
@.str.246 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.247 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.248 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.249 = private unnamed_addr constant [26 x i8] c"<AwaitContext generator= \00", align 1
@.str.250 = private unnamed_addr constant [15 x i8] c"<BlockContext[\00", align 1
@.str.251 = private unnamed_addr constant [3 x i8] c"]>\00", align 1
@.str.252 = private unnamed_addr constant [15 x i8] c"<CatchContext[\00", align 1
@.str.253 = private unnamed_addr constant [23 x i8] c"<DebugEvaluateContext[\00", align 1
@.str.254 = private unnamed_addr constant [14 x i8] c"<EvalContext[\00", align 1
@.str.255 = private unnamed_addr constant [18 x i8] c"<FunctionContext[\00", align 1
@.str.256 = private unnamed_addr constant [16 x i8] c"<ModuleContext[\00", align 1
@.str.257 = private unnamed_addr constant [16 x i8] c"<NativeContext[\00", align 1
@.str.258 = private unnamed_addr constant [16 x i8] c"<ScriptContext[\00", align 1
@.str.259 = private unnamed_addr constant [14 x i8] c"<WithContext[\00", align 1
@.str.260 = private unnamed_addr constant [21 x i8] c"<ScriptContextTable[\00", align 1
@.str.261 = private unnamed_addr constant [12 x i8] c"<HashTable[\00", align 1
@.str.262 = private unnamed_addr constant [17 x i8] c"<OrderedHashMap[\00", align 1
@.str.263 = private unnamed_addr constant [17 x i8] c"<OrderedHashSet[\00", align 1
@.str.264 = private unnamed_addr constant [24 x i8] c"<OrderedNameDictionary[\00", align 1
@.str.265 = private unnamed_addr constant [17 x i8] c"<NameDictionary[\00", align 1
@.str.266 = private unnamed_addr constant [22 x i8] c"<SwissNameDictionary[\00", align 1
@.str.267 = private unnamed_addr constant [19 x i8] c"<GlobalDictionary[\00", align 1
@.str.268 = private unnamed_addr constant [19 x i8] c"<NumberDictionary[\00", align 1
@.str.269 = private unnamed_addr constant [25 x i8] c"<SimpleNumberDictionary[\00", align 1
@.str.270 = private unnamed_addr constant [13 x i8] c"<FixedArray[\00", align 1
@.str.271 = private unnamed_addr constant [31 x i8] c"<ObjectBoilerplateDescription[\00", align 1
@.str.272 = private unnamed_addr constant [19 x i8] c"<FixedDoubleArray[\00", align 1
@.str.273 = private unnamed_addr constant [12 x i8] c"<ByteArray[\00", align 1
@.str.274 = private unnamed_addr constant [16 x i8] c"<BytecodeArray[\00", align 1
@.str.275 = private unnamed_addr constant [18 x i8] c"<DescriptorArray[\00", align 1
@.str.276 = private unnamed_addr constant [18 x i8] c"<TransitionArray[\00", align 1
@.str.277 = private unnamed_addr constant [16 x i8] c"<PropertyArray[\00", align 1
@.str.278 = private unnamed_addr constant [15 x i8] c"<FeedbackCell[\00", align 1
@.str.279 = private unnamed_addr constant [12 x i8] c"no feedback\00", align 1
@.str.280 = private unnamed_addr constant [12 x i8] c"no closures\00", align 1
@.str.281 = private unnamed_addr constant [12 x i8] c"one closure\00", align 1
@.str.282 = private unnamed_addr constant [14 x i8] c"many closures\00", align 1
@.str.283 = private unnamed_addr constant [18 x i8] c"!!!INVALID MAP!!!\00", align 1
@.str.284 = private unnamed_addr constant [27 x i8] c"<ClosureFeedbackCellArray[\00", align 1
@.str.285 = private unnamed_addr constant [17 x i8] c"<FeedbackVector[\00", align 1
@.str.286 = private unnamed_addr constant [12 x i8] c"<FreeSpace[\00", align 1
@.str.287 = private unnamed_addr constant [20 x i8] c"<PreparseData[data=\00", align 1
@.str.288 = private unnamed_addr constant [11 x i8] c" children=\00", align 1
@.str.289 = private unnamed_addr constant [37 x i8] c"<UncompiledDataWithoutPreparseData (\00", align 1
@.str.290 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.291 = private unnamed_addr constant [4 x i8] c")]>\00", align 1
@.str.292 = private unnamed_addr constant [34 x i8] c"<UncompiledDataWithPreparseData (\00", align 1
@.str.293 = private unnamed_addr constant [13 x i8] c") preparsed=\00", align 1
@.str.294 = private unnamed_addr constant [21 x i8] c"<SharedFunctionInfo \00", align 1
@.str.295 = private unnamed_addr constant [21 x i8] c"<SharedFunctionInfo>\00", align 1
@.str.296 = private unnamed_addr constant [18 x i8] c"<JSMessageObject>\00", align 1
@.str.297 = private unnamed_addr constant [31 x i8] c"<PromiseFulfillReactionJobTask\00", align 1
@.str.298 = private unnamed_addr constant [30 x i8] c"<PromiseRejectReactionJobTask\00", align 1
@.str.299 = private unnamed_addr constant [14 x i8] c"<CallableTask\00", align 1
@.str.300 = private unnamed_addr constant [14 x i8] c"<CallbackTask\00", align 1
@.str.301 = private unnamed_addr constant [31 x i8] c"<PromiseResolveThenableJobTask\00", align 1
@.str.302 = private unnamed_addr constant [22 x i8] c"<FunctionTemplateInfo\00", align 1
@.str.303 = private unnamed_addr constant [20 x i8] c"<ObjectTemplateInfo\00", align 1
@.str.304 = private unnamed_addr constant [17 x i8] c"<AccessCheckInfo\00", align 1
@.str.305 = private unnamed_addr constant [14 x i8] c"<AccessorInfo\00", align 1
@.str.306 = private unnamed_addr constant [14 x i8] c"<AccessorPair\00", align 1
@.str.307 = private unnamed_addr constant [23 x i8] c"<AliasedArgumentsEntry\00", align 1
@.str.308 = private unnamed_addr constant [19 x i8] c"<AllocationMemento\00", align 1
@.str.309 = private unnamed_addr constant [29 x i8] c"<ArrayBoilerplateDescription\00", align 1
@.str.310 = private unnamed_addr constant [13 x i8] c"<AsmWasmData\00", align 1
@.str.311 = private unnamed_addr constant [23 x i8] c"<AsyncGeneratorRequest\00", align 1
@.str.312 = private unnamed_addr constant [14 x i8] c"<BaselineData\00", align 1
@.str.313 = private unnamed_addr constant [12 x i8] c"<BreakPoint\00", align 1
@.str.314 = private unnamed_addr constant [16 x i8] c"<BreakPointInfo\00", align 1
@.str.315 = private unnamed_addr constant [22 x i8] c"<CachedTemplateObject\00", align 1
@.str.316 = private unnamed_addr constant [16 x i8] c"<ClassPositions\00", align 1
@.str.317 = private unnamed_addr constant [11 x i8] c"<DebugInfo\00", align 1
@.str.318 = private unnamed_addr constant [11 x i8] c"<EnumCache\00", align 1
@.str.319 = private unnamed_addr constant [26 x i8] c"<FunctionTemplateRareData\00", align 1
@.str.320 = private unnamed_addr constant [17 x i8] c"<InterceptorInfo\00", align 1
@.str.321 = private unnamed_addr constant [17 x i8] c"<InterpreterData\00", align 1
@.str.322 = private unnamed_addr constant [15 x i8] c"<ModuleRequest\00", align 1
@.str.323 = private unnamed_addr constant [19 x i8] c"<PromiseCapability\00", align 1
@.str.324 = private unnamed_addr constant [17 x i8] c"<PromiseReaction\00", align 1
@.str.325 = private unnamed_addr constant [26 x i8] c"<PropertyDescriptorObject\00", align 1
@.str.326 = private unnamed_addr constant [15 x i8] c"<PrototypeInfo\00", align 1
@.str.327 = private unnamed_addr constant [30 x i8] c"<RegExpBoilerplateDescription\00", align 1
@.str.328 = private unnamed_addr constant [8 x i8] c"<Script\00", align 1
@.str.329 = private unnamed_addr constant [27 x i8] c"<SourceTextModuleInfoEntry\00", align 1
@.str.330 = private unnamed_addr constant [16 x i8] c"<StackFrameInfo\00", align 1
@.str.331 = private unnamed_addr constant [27 x i8] c"<TemplateObjectDescription\00", align 1
@.str.332 = private unnamed_addr constant [8 x i8] c"<Tuple2\00", align 1
@.str.333 = private unnamed_addr constant [18 x i8] c"<WasmExceptionTag\00", align 1
@.str.334 = private unnamed_addr constant [27 x i8] c"<WasmIndirectFunctionTable\00", align 1
@.str.335 = private unnamed_addr constant [16 x i8] c"<AllocationSite\00", align 1
@.str.336 = private unnamed_addr constant [11 x i8] c"<ScopeInfo\00", align 1
@.str.337 = private unnamed_addr constant [7 x i8] c"<Code \00", align 1
@.str.338 = private unnamed_addr constant [12 x i8] c"<undefined>\00", align 1
@.str.339 = private unnamed_addr constant [11 x i8] c"<the_hole>\00", align 1
@.str.340 = private unnamed_addr constant [7 x i8] c"<null>\00", align 1
@.str.341 = private unnamed_addr constant [7 x i8] c"<true>\00", align 1
@.str.342 = private unnamed_addr constant [8 x i8] c"<false>\00", align 1
@.str.343 = private unnamed_addr constant [15 x i8] c"<Odd Oddball: \00", align 1
@.str.344 = private unnamed_addr constant [13 x i8] c"<HeapNumber \00", align 1
@.str.345 = private unnamed_addr constant [9 x i8] c"<BigInt \00", align 1
@.str.346 = private unnamed_addr constant [10 x i8] c"<JSProxy>\00", align 1
@.str.347 = private unnamed_addr constant [10 x i8] c"<Foreign>\00", align 1
@.str.348 = private unnamed_addr constant [14 x i8] c"<Cell value= \00", align 1
@.str.349 = private unnamed_addr constant [20 x i8] c"<PropertyCell name=\00", align 1
@.str.350 = private unnamed_addr constant [8 x i8] c" value=\00", align 1
@.str.351 = private unnamed_addr constant [18 x i8] c"<CallHandlerInfo \00", align 1
@.str.352 = private unnamed_addr constant [11 x i8] c"callback= \00", align 1
@.str.353 = private unnamed_addr constant [16 x i8] c", js_callback= \00", align 1
@.str.354 = private unnamed_addr constant [9 x i8] c", data= \00", align 1
@.str.355 = private unnamed_addr constant [26 x i8] c", side_effect_free= true>\00", align 1
@.str.356 = private unnamed_addr constant [27 x i8] c", side_effect_free= false>\00", align 1
@.str.357 = private unnamed_addr constant [21 x i8] c"<Other heap object (\00", align 1
@.str.358 = private unnamed_addr constant [3 x i8] c")>\00", align 1
@.str.359 = private unnamed_addr constant [11 x i8] c" callable=\00", align 1
@.str.360 = private unnamed_addr constant [8 x i8] c"IsArray\00", align 1
@.str.361 = private unnamed_addr constant [46 x i8] c"old_len_desc.value()->ToArrayLength(&old_len)\00", align 1
@.str.362 = private unnamed_addr constant [32 x i8] c"uint32_v->ToArrayLength(output)\00", align 1
@.str.363 = private unnamed_addr constant [43 x i8] c"a->length().ToArrayLength(&actual_new_len)\00", align 1
@.str.364 = private unnamed_addr constant [29 x i8] c"empty_slot < array->length()\00", align 1
@_ZN2v88internal14AllocationSite15kPretenureRatioE = hidden local_unnamed_addr constant double 8.500000e-01, align 8
@.str.365 = private unnamed_addr constant [10 x i8] c"undecided\00", align 1
@.str.366 = private unnamed_addr constant [13 x i8] c"don't tenure\00", align 1
@.str.367 = private unnamed_addr constant [13 x i8] c"maybe tenure\00", align 1
@.str.368 = private unnamed_addr constant [7 x i8] c"tenure\00", align 1
@.str.369 = private unnamed_addr constant [7 x i8] c"zombie\00", align 1
@.str.370 = private unnamed_addr constant [39 x i8] c"LookupIterator::ACCESSOR == it.state()\00", align 1
@.str.371 = private unnamed_addr constant [39 x i8] c"array->length().ToArrayLength(&length)\00", align 1
@.str.372 = private unnamed_addr constant [32 x i8] c"array_buffer_wasm_memory_symbol\00", align 1
@.str.373 = private unnamed_addr constant [28 x i8] c"call_site_frame_info_symbol\00", align 1
@.str.374 = private unnamed_addr constant [26 x i8] c"console_context_id_symbol\00", align 1
@.str.375 = private unnamed_addr constant [28 x i8] c"console_context_name_symbol\00", align 1
@.str.376 = private unnamed_addr constant [20 x i8] c"class_fields_symbol\00", align 1
@.str.377 = private unnamed_addr constant [23 x i8] c"class_positions_symbol\00", align 1
@.str.378 = private unnamed_addr constant [28 x i8] c"detailed_stack_trace_symbol\00", align 1
@.str.379 = private unnamed_addr constant [27 x i8] c"elements_transition_symbol\00", align 1
@.str.380 = private unnamed_addr constant [21 x i8] c"error_end_pos_symbol\00", align 1
@.str.381 = private unnamed_addr constant [20 x i8] c"error_script_symbol\00", align 1
@.str.382 = private unnamed_addr constant [23 x i8] c"error_start_pos_symbol\00", align 1
@.str.383 = private unnamed_addr constant [14 x i8] c"frozen_symbol\00", align 1
@.str.384 = private unnamed_addr constant [30 x i8] c"interpreter_trampoline_symbol\00", align 1
@.str.385 = private unnamed_addr constant [16 x i8] c"mega_dom_symbol\00", align 1
@.str.386 = private unnamed_addr constant [19 x i8] c"megamorphic_symbol\00", align 1
@.str.387 = private unnamed_addr constant [28 x i8] c"native_context_index_symbol\00", align 1
@.str.388 = private unnamed_addr constant [21 x i8] c"nonextensible_symbol\00", align 1
@.str.389 = private unnamed_addr constant [18 x i8] c"not_mapped_symbol\00", align 1
@.str.390 = private unnamed_addr constant [28 x i8] c"promise_debug_marker_symbol\00", align 1
@.str.391 = private unnamed_addr constant [29 x i8] c"promise_debug_message_symbol\00", align 1
@.str.392 = private unnamed_addr constant [34 x i8] c"promise_forwarding_handler_symbol\00", align 1
@.str.393 = private unnamed_addr constant [26 x i8] c"promise_handled_by_symbol\00", align 1
@.str.394 = private unnamed_addr constant [27 x i8] c"regexp_result_names_symbol\00", align 1
@.str.395 = private unnamed_addr constant [34 x i8] c"regexp_result_regexp_input_symbol\00", align 1
@.str.396 = private unnamed_addr constant [39 x i8] c"regexp_result_regexp_last_index_symbol\00", align 1
@.str.397 = private unnamed_addr constant [14 x i8] c"sealed_symbol\00", align 1
@.str.398 = private unnamed_addr constant [19 x i8] c"stack_trace_symbol\00", align 1
@.str.399 = private unnamed_addr constant [34 x i8] c"strict_function_transition_symbol\00", align 1
@.str.400 = private unnamed_addr constant [26 x i8] c"wasm_exception_tag_symbol\00", align 1
@.str.401 = private unnamed_addr constant [29 x i8] c"wasm_exception_values_symbol\00", align 1
@.str.402 = private unnamed_addr constant [24 x i8] c"wasm_uncatchable_symbol\00", align 1
@.str.403 = private unnamed_addr constant [27 x i8] c"wasm_wrapped_object_symbol\00", align 1
@.str.404 = private unnamed_addr constant [30 x i8] c"wasm_debug_proxy_cache_symbol\00", align 1
@.str.405 = private unnamed_addr constant [30 x i8] c"wasm_debug_proxy_names_symbol\00", align 1
@.str.406 = private unnamed_addr constant [21 x i8] c"uninitialized_symbol\00", align 1
@.str.407 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.408 = private unnamed_addr constant [9 x i8] c"<Symbol:\00", align 1
@.str.409 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.410 = private unnamed_addr constant [10 x i8] c"fulfilled\00", align 1
@.str.411 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.412 = private unnamed_addr constant [9 x i8] c"rejected\00", align 1
@.str.413 = private unnamed_addr constant [39 x i8] c"Promise::kPending == promise->status()\00", align 1
@.str.414 = private unnamed_addr constant [53 x i8] c"reactions->IsSmi() || reactions->IsPromiseReaction()\00", align 1
@.str.415 = private unnamed_addr constant [34 x i8] c"!cell->value().IsTheHole(isolate)\00", align 1
@.str.416 = private unnamed_addr constant [41 x i8] c"cell_type == PropertyCellType::kConstant\00", align 1
@.str.417 = private unnamed_addr constant [80 x i8] c"value.IsAccessorInfo() || value.IsAccessorPair() == details.kind() == kAccessor\00", align 1
@.str.418 = private unnamed_addr constant [15 x i8] c"is_suspended()\00", align 1
@_ZZN2v88internal3Smi20LexicographicCompareEPNS0_7IsolateES1_S1_E11kPowersOf10 = internal unnamed_addr constant [10 x i32] [i32 1, i32 10, i32 100, i32 1000, i32 10000, i32 100000, i32 1000000, i32 10000000, i32 100000000, i32 1000000000], align 16
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.420 = private unnamed_addr constant [22 x i8] c"<a very large string>\00", align 1
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1619", align 4
@.str.421 = private unnamed_addr constant [19 x i8] c"!handle_.is_null()\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str.422 = private unnamed_addr constant [16 x i8] c"accessor-getter\00", align 1
@_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.423 = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.424 = private unnamed_addr constant [20 x i8] c"V8.ExternalCallback\00", align 1
@_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 = linkonce_odr hidden global i64 0, comdat, align 8
@_ZTVN2v88internal11RelocatableE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11Relocatable21PostGarbageCollectionEv to i8*)] }, comdat, align 8
@.str.425 = private unnamed_addr constant [16 x i8] c"accessor-setter\00", align 1
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVN2v88internal19HeapStringAllocatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.426 = private unnamed_addr constant [11 x i8] c"EVAL_SCOPE\00", align 1
@.str.427 = private unnamed_addr constant [15 x i8] c"FUNCTION_SCOPE\00", align 1
@.str.428 = private unnamed_addr constant [13 x i8] c"MODULE_SCOPE\00", align 1
@.str.429 = private unnamed_addr constant [13 x i8] c"SCRIPT_SCOPE\00", align 1
@.str.430 = private unnamed_addr constant [12 x i8] c"CATCH_SCOPE\00", align 1
@.str.431 = private unnamed_addr constant [12 x i8] c"BLOCK_SCOPE\00", align 1
@.str.432 = private unnamed_addr constant [12 x i8] c"CLASS_SCOPE\00", align 1
@.str.433 = private unnamed_addr constant [11 x i8] c"WITH_SCOPE\00", align 1
@_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize = internal unnamed_addr constant [13 x i8] c"\FF\04\08\04\08\10\01\02\04\04\04\04\FF", align 1
@_ZN2v88internal16ElementsAccessor19elements_accessors_E = external local_unnamed_addr global %"class.v8::internal::ElementsAccessor"**, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.435 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@.str.436 = private unnamed_addr constant [18 x i8] c"Unknown type: %d\0A\00", align 1
@_ZN2v88internal18WasmInstanceObject19kTaggedFieldOffsetsE = external constant [15 x i16], align 16
@.str.437 = private unnamed_addr constant [11 x i8] c"length > 0\00", align 1
@.str.438 = private unnamed_addr constant [31 x i8] c"length <= fixed_array.length()\00", align 1
@.str.439 = private unnamed_addr constant [45 x i8] c"StringShape(separator).IsSequentialOneByte()\00", align 1
@.str.440 = private unnamed_addr constant [24 x i8] c"separator.length() == 1\00", align 1
@.str.441 = private unnamed_addr constant [34 x i8] c"element.ToUint32(&num_separators)\00", align 1
@.str.442 = private unnamed_addr constant [47 x i8] c"old_details.cell_type() == details.cell_type()\00", align 1
@switch.table._ZN2v88internal14AllocationSite21PretenureDecisionNameENS1_17PretenureDecisionE = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.365, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.366, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.367, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.368, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.369, i64 0, i64 0)], align 8
@switch.table._ZN2v88internal9JSPromise6StatusENS_7Promise12PromiseStateE = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.411, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.410, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.412, i64 0, i64 0)], align 8

@_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable"*), void (%"class.v8::internal::HashTable"*)* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable"*, i64), void (%"class.v8::internal::HashTable"*, i64)* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC2Em
@_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1217"*), void (%"class.v8::internal::HashTable.1217"*)* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1217"*, i64), void (%"class.v8::internal::HashTable.1217"*, i64)* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC2Em
@_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1219"*), void (%"class.v8::internal::HashTable.1219"*)* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1219"*, i64), void (%"class.v8::internal::HashTable.1219"*, i64)* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC2Em
@_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1222"*), void (%"class.v8::internal::HashTable.1222"*)* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1222"*, i64), void (%"class.v8::internal::HashTable.1222"*, i64)* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC2Em
@_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::ObjectHashTableBase"*), void (%"class.v8::internal::ObjectHashTableBase"*)* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC2Ev
@_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::ObjectHashTableBase"*, i64), void (%"class.v8::internal::ObjectHashTableBase"*, i64)* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC2Em
@_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1224"*), void (%"class.v8::internal::HashTable.1224"*)* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1224"*, i64), void (%"class.v8::internal::HashTable.1224"*, i64)* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC2Em
@_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::ObjectHashTableBase.1225"*), void (%"class.v8::internal::ObjectHashTableBase.1225"*)* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC2Ev
@_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::ObjectHashTableBase.1225"*, i64), void (%"class.v8::internal::ObjectHashTableBase.1225"*, i64)* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC2Em
@_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1227"*), void (%"class.v8::internal::HashTable.1227"*)* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1227"*, i64), void (%"class.v8::internal::HashTable.1227"*, i64)* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC2Em
@_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::Dictionary"*), void (%"class.v8::internal::Dictionary"*)* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC2Ev
@_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::Dictionary"*, i64), void (%"class.v8::internal::Dictionary"*, i64)* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC2Em
@_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1230"*), void (%"class.v8::internal::HashTable.1230"*)* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1230"*, i64), void (%"class.v8::internal::HashTable.1230"*, i64)* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC2Em
@_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::Dictionary.1231"*), void (%"class.v8::internal::Dictionary.1231"*)* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC2Ev
@_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::Dictionary.1231"*, i64), void (%"class.v8::internal::Dictionary.1231"*, i64)* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC2Em
@_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1233"*), void (%"class.v8::internal::HashTable.1233"*)* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1233"*, i64), void (%"class.v8::internal::HashTable.1233"*, i64)* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Em
@_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::Dictionary.1235"*), void (%"class.v8::internal::Dictionary.1235"*)* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Ev
@_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::Dictionary.1235"*, i64), void (%"class.v8::internal::Dictionary.1235"*, i64)* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Em
@_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::BaseNameDictionary"*), void (%"class.v8::internal::BaseNameDictionary"*)* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Ev
@_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::BaseNameDictionary"*, i64), void (%"class.v8::internal::BaseNameDictionary"*, i64)* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Em
@_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1238"*), void (%"class.v8::internal::HashTable.1238"*)* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Ev
@_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::HashTable.1238"*, i64), void (%"class.v8::internal::HashTable.1238"*, i64)* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Em
@_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::Dictionary.1240"*), void (%"class.v8::internal::Dictionary.1240"*)* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Ev
@_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::Dictionary.1240"*, i64), void (%"class.v8::internal::Dictionary.1240"*, i64)* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Em
@_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::BaseNameDictionary.1239"*), void (%"class.v8::internal::BaseNameDictionary.1239"*)* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Ev
@_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC1Em = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::BaseNameDictionary.1239"*, i64), void (%"class.v8::internal::BaseNameDictionary.1239"*, i64)* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Em
@_ZN2v88internal6Script8IteratorC1EPNS0_7IsolateE = hidden unnamed_addr alias void (%"class.v8::internal::Script::Iterator"*, %"class.v8::internal::Isolate"*), void (%"class.v8::internal::Script::Iterator"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal6Script8IteratorC2EPNS0_7IsolateE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_7IsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i32, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = sub i32 0, %2
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 30
  br label %12

9:                                                ; preds = %4
  %10 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %11 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %10, i32 %1, i32 %2, i8 zeroext %3) #11
  br label %12

12:                                               ; preds = %9, %7
  %13 = phi i64* [ %8, %7 ], [ %11, %9 ]
  ret i64* %13
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_12LocalIsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i32, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = sub i32 0, %2
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 30
  br label %14

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %13 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %12, i32 %1, i32 %2, i8 zeroext %3) #11
  br label %14

14:                                               ; preds = %11, %7
  %15 = phi i64* [ %10, %7 ], [ %13, %11 ]
  ret i64* %15
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"*, i32, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 27
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %7, %10
  br i1 %11, label %12, label %117

12:                                               ; preds = %2
  %13 = add i64 %3, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %4, %16
  %18 = and i64 %16, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %30, label %20

20:                                               ; preds = %12
  %21 = add i64 %17, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %4, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp ult i16 %28, 64
  br i1 %29, label %62, label %30

30:                                               ; preds = %12, %20
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  store atomic volatile i32 %33, i32* %6 monotonic, align 4
  %34 = and i64 %32, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %30
  %37 = and i64 %3, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 262144
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = or i64 %37, 16
  %45 = inttoptr i64 %44 to %"class.v8::internal::Heap"**
  %46 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %45, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %46, i64 %3, i64 %5, i64 %32) #11
  br label %47

47:                                               ; preds = %43, %36, %30
  %48 = and i64 %32, -262144
  %49 = or i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, 24
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %117, label %54

54:                                               ; preds = %47
  %55 = and i64 %3, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 24
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %117

61:                                               ; preds = %54
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3, i64 %5, i64 %32) #11
  br label %117

62:                                               ; preds = %20
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %64 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %63, align 8
  %65 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  %67 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %64, i64 %17) #11
  br label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi i64* [ %75, %74 ], [ %70, %68 ]
  %78 = ptrtoint i64* %77 to i64
  %79 = add i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  store i64* %80, i64** %69, align 8
  store i64 %17, i64* %77, align 8
  br label %81

81:                                               ; preds = %66, %76
  %82 = phi i64* [ %67, %66 ], [ %77, %76 ]
  %83 = tail call i64* @_ZN2v88internal6String17CalculateLineEndsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::Isolate"* %0, i64* %82, i1 zeroext true) #11
  %84 = load i64, i64* %1, align 8
  %85 = load i64, i64* %83, align 8
  %86 = add i64 %84, 27
  %87 = inttoptr i64 %86 to i32*
  %88 = trunc i64 %85 to i32
  store atomic volatile i32 %88, i32* %87 monotonic, align 4
  %89 = and i64 %85, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %81
  %92 = and i64 %84, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %91
  %99 = or i64 %92, 16
  %100 = inttoptr i64 %99 to %"class.v8::internal::Heap"**
  %101 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %100, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %101, i64 %84, i64 %86, i64 %85) #11
  br label %102

102:                                              ; preds = %98, %91, %81
  %103 = and i64 %85, -262144
  %104 = or i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 24
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %102
  %110 = and i64 %84, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 24
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %86, i64 %85) #11
  br label %117

117:                                              ; preds = %47, %54, %61, %102, %109, %116, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i64* @_ZN2v88internal6String17CalculateLineEndsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::Isolate"*, i64*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal6Script12InitLineEndsINS0_12LocalIsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::LocalIsolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 27
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 4
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %7, %12
  br i1 %13, label %14, label %122

14:                                               ; preds = %2
  %15 = add i64 %3, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  %20 = and i64 %18, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %14
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %4, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp ult i16 %30, 64
  br i1 %31, label %64, label %32

32:                                               ; preds = %14, %22
  %33 = getelementptr inbounds i64, i64* %9, i64 29
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  store atomic volatile i32 %35, i32* %6 monotonic, align 4
  %36 = and i64 %34, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %49, label %38

38:                                               ; preds = %32
  %39 = and i64 %3, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 262144
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %38
  %46 = or i64 %39, 16
  %47 = inttoptr i64 %46 to %"class.v8::internal::Heap"**
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %47, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %48, i64 %3, i64 %5, i64 %34) #11
  br label %49

49:                                               ; preds = %45, %38, %32
  %50 = and i64 %34, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 24
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %122, label %56

56:                                               ; preds = %49
  %57 = and i64 %3, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 24
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %122

63:                                               ; preds = %56
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3, i64 %5, i64 %34) #11
  br label %122

64:                                               ; preds = %22
  %65 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 1
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1
  %70 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %69, i64 %19) #11
  br label %86

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %73 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %73, i64 0, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %73, i64 0, i32 0, i32 1
  %77 = load i64*, i64** %76, align 8
  %78 = icmp eq i64* %75, %77
  br i1 %78, label %79, label %82

79:                                               ; preds = %71
  %80 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %73) #11
  %81 = load i64*, i64** %74, align 8
  br label %82

82:                                               ; preds = %79, %71
  %83 = phi i64* [ %81, %79 ], [ %75, %71 ]
  %84 = phi i64* [ %80, %79 ], [ %75, %71 ]
  %85 = getelementptr inbounds i64, i64* %83, i64 1
  store i64* %85, i64** %74, align 8
  store i64 %19, i64* %84, align 8
  br label %86

86:                                               ; preds = %68, %82
  %87 = phi i64* [ %70, %68 ], [ %84, %82 ]
  %88 = tail call i64* @_ZN2v88internal6String17CalculateLineEndsINS0_12LocalIsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::LocalIsolate"* %0, i64* %87, i1 zeroext true) #11
  %89 = load i64, i64* %1, align 8
  %90 = load i64, i64* %88, align 8
  %91 = add i64 %89, 27
  %92 = inttoptr i64 %91 to i32*
  %93 = trunc i64 %90 to i32
  store atomic volatile i32 %93, i32* %92 monotonic, align 4
  %94 = and i64 %90, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %86
  %97 = and i64 %89, -262144
  %98 = or i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 262144
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %96
  %104 = or i64 %97, 16
  %105 = inttoptr i64 %104 to %"class.v8::internal::Heap"**
  %106 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %105, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %106, i64 %89, i64 %91, i64 %90) #11
  br label %107

107:                                              ; preds = %103, %96, %86
  %108 = and i64 %90, -262144
  %109 = or i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 24
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %107
  %115 = and i64 %89, -262144
  %116 = or i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 24
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %89, i64 %91, i64 %90) #11
  br label %122

122:                                              ; preds = %49, %56, %63, %107, %114, %121, %2
  ret void
}

declare i64* @_ZN2v88internal6String17CalculateLineEndsINS0_12LocalIsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::LocalIsolate"*, i64*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal6Script22FindSharedFunctionInfoINS0_7IsolateEEENS0_11MaybeHandleINS0_18SharedFunctionInfoEEENS0_6HandleIS1_EEPT_PNS0_15FunctionLiteralE(i64*, %"class.v8::internal::Isolate"*, %"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = load i64, i64* %0, align 8
  %7 = add i64 %6, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 10
  br i1 %11, label %12, label %27

12:                                               ; preds = %3
  %13 = and i64 %6, -4294967296
  %14 = add i64 %6, 35
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = ashr i32 %21, 1
  %23 = icmp sgt i32 %5, %22
  br i1 %23, label %24, label %27, !prof !3

24:                                               ; preds = %12
  %25 = tail call i64* @_ZN2v88internal6Script33FindWebSnapshotSharedFunctionInfoENS0_6HandleIS1_EEPNS0_7IsolateEPNS0_15FunctionLiteralE(i64* %0, %"class.v8::internal::Isolate"* %1, %"class.v8::internal::FunctionLiteral"* %2)
  %26 = ptrtoint i64* %25 to i64
  br label %129

27:                                               ; preds = %12, %3
  %28 = icmp eq i32 %5, -1
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %27
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %27
  switch i32 %10, label %52 [
    i32 10, label %31
    i32 6, label %43
  ], !prof !4

31:                                               ; preds = %30
  %32 = and i64 %6, -4294967296
  %33 = add i64 %6, 35
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = ashr i32 %40, 1
  %42 = add nsw i32 %41, 1
  br label %65

43:                                               ; preds = %30
  %44 = and i64 %6, -262144
  %45 = or i64 %44, 16
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 16
  %48 = add i64 %47, -41416
  %49 = inttoptr i64 %48 to %"class.v8::internal::Isolate"*
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 0, i32 7, i32 0, i64 119
  %51 = load i64, i64* %50, align 8
  br label %59

52:                                               ; preds = %30
  %53 = add i64 %6, 43
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i64 %6, -4294967296
  %57 = zext i32 %55 to i64
  %58 = or i64 %56, %57
  br label %59

59:                                               ; preds = %52, %43
  %60 = phi i64 [ %51, %43 ], [ %58, %52 ]
  %61 = add i64 %60, 3
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = ashr i32 %63, 1
  br label %65

65:                                               ; preds = %31, %59
  %66 = phi i32 [ %42, %31 ], [ %64, %59 ]
  %67 = icmp slt i32 %5, %66
  br i1 %67, label %69, label %68, !prof !5

68:                                               ; preds = %65
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

69:                                               ; preds = %65
  %70 = icmp eq i32 %10, 6
  br i1 %70, label %71, label %80

71:                                               ; preds = %69
  %72 = and i64 %6, -262144
  %73 = or i64 %72, 16
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 16
  %76 = add i64 %75, -41416
  %77 = inttoptr i64 %76 to %"class.v8::internal::Isolate"*
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 7, i32 0, i64 119
  %79 = load i64, i64* %78, align 8
  br label %87

80:                                               ; preds = %69
  %81 = add i64 %6, 43
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i64 %6, -4294967296
  %85 = zext i32 %83 to i64
  %86 = or i64 %84, %85
  br label %87

87:                                               ; preds = %71, %80
  %88 = phi i64 [ %79, %71 ], [ %86, %80 ]
  %89 = shl i32 %5, 2
  %90 = sext i32 %89 to i64
  %91 = add nsw i64 %90, 7
  %92 = add i64 %91, %88
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = and i64 %95, 1
  %97 = icmp ne i64 %96, 0
  %98 = icmp ne i32 %94, 3
  %99 = and i1 %98, %97
  br i1 %99, label %100, label %129

100:                                              ; preds = %87
  %101 = and i64 %88, -4294967296
  %102 = and i64 %95, 4294967293
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %105 = load i64, i64* %104, align 8
  %106 = trunc i64 %102 to i32
  %107 = trunc i64 %105 to i32
  %108 = icmp eq i32 %106, %107
  br i1 %108, label %129, label %109

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %111 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %110, align 8
  %112 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %111, i64 %103) #11
  %115 = ptrtoint i64* %114 to i64
  br label %129

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %118 = load i64*, i64** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %120 = load i64*, i64** %119, align 8
  %121 = icmp eq i64* %118, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %116
  %123 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %124

124:                                              ; preds = %122, %116
  %125 = phi i64* [ %123, %122 ], [ %118, %116 ]
  %126 = ptrtoint i64* %125 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to i64*
  store i64* %128, i64** %117, align 8
  store i64 %103, i64* %125, align 8
  br label %129

129:                                              ; preds = %124, %113, %87, %100, %24
  %130 = phi i64 [ %26, %24 ], [ 0, %87 ], [ 0, %100 ], [ %115, %113 ], [ %126, %124 ]
  %131 = inttoptr i64 %130 to i64*
  ret i64* %131
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Script33FindWebSnapshotSharedFunctionInfoENS0_6HandleIS1_EEPNS0_7IsolateEPNS0_15FunctionLiteralE(i64*, %"class.v8::internal::Isolate"*, %"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::JSReceiver", align 8
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 35
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %15 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %16 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %15, i64 %13) #11
  %19 = load i64, i64* %18, align 8
  br label %33

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %22, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %28

28:                                               ; preds = %26, %20
  %29 = phi i64* [ %27, %26 ], [ %22, %20 ]
  %30 = ptrtoint i64* %29 to i64
  %31 = add i64 %30, 8
  %32 = inttoptr i64 %31 to i64*
  store i64* %32, i64** %21, align 8
  store i64 %13, i64* %29, align 8
  br label %33

33:                                               ; preds = %17, %28
  %34 = phi i64 [ %19, %17 ], [ %13, %28 ]
  %35 = phi i64* [ %18, %17 ], [ %29, %28 ]
  %36 = tail call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %2) #11
  %37 = sext i32 %36 to i64
  %38 = shl nsw i64 %37, 1
  %39 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %40 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %39, i64 %38) #11
  br label %56

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8
  store i64 %38, i64* %52, align 8
  br label %56

56:                                               ; preds = %41, %51
  %57 = phi i64* [ %42, %41 ], [ %52, %51 ]
  %58 = and i64 %34, -4294967296
  %59 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %60 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %59, i64 0, i32 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %59, i64 0, i32 1, i64 0
  br label %75

67:                                               ; preds = %61, %56
  %68 = and i64 %34, -262144
  %69 = or i64 %68, 16
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 16
  %72 = add i64 %71, -41416
  %73 = inttoptr i64 %72 to %"class.v8::internal::Isolate"*
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %73, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %75

75:                                               ; preds = %67, %65
  %76 = phi i64* [ %74, %67 ], [ %66, %65 ]
  %77 = load i64, i64* %57, align 8
  %78 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %77) #11
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.v8::internal::JSReceiver"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %77, i64* %83, align 8
  %84 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  br label %85

85:                                               ; preds = %81, %75
  %86 = phi i64 [ %84, %81 ], [ %78, %75 ]
  %87 = getelementptr inbounds i64, i64* %76, i64 4
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %86 to i32
  %90 = trunc i64 %88 to i32
  %91 = icmp eq i32 %89, %90
  br i1 %91, label %92, label %95

92:                                               ; preds = %85
  %93 = getelementptr inbounds i64, i64* %76, i64 5
  %94 = load i64, i64* %93, align 8
  br label %168

95:                                               ; preds = %85
  %96 = ashr i32 %89, 1
  %97 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %98 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %97, i64 0, i32 0, i32 1
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %97, i64 0, i32 1, i64 0
  br label %113

105:                                              ; preds = %99, %95
  %106 = and i64 %34, -262144
  %107 = or i64 %106, 16
  %108 = inttoptr i64 %107 to i64*
  %109 = load i64, i64* %108, align 16
  %110 = add i64 %109, -41416
  %111 = inttoptr i64 %110 to %"class.v8::internal::Isolate"*
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %111, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %113

113:                                              ; preds = %105, %103
  %114 = phi i64* [ %112, %105 ], [ %104, %103 ]
  %115 = add i64 %34, 15
  %116 = inttoptr i64 %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = ashr i32 %117, 1
  %119 = getelementptr inbounds i64, i64* %114, i64 4
  %120 = load i64, i64* %119, align 8
  %121 = add nsw i32 %118, -1
  %122 = and i32 %121, %96
  %123 = shl i32 %122, 3
  %124 = add i32 %123, 12
  %125 = sext i32 %124 to i64
  %126 = add i64 %34, 7
  %127 = add i64 %126, %125
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = trunc i64 %120 to i32
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %155, label %132

132:                                              ; preds = %113
  %133 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5 to i8*
  %134 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0
  br label %136

136:                                              ; preds = %144, %132
  %137 = phi i32 [ %129, %132 ], [ %153, %144 ]
  %138 = phi i32 [ %122, %132 ], [ %147, %144 ]
  %139 = phi i32 [ 1, %132 ], [ %145, %144 ]
  %140 = zext i32 %137 to i64
  %141 = or i64 %58, %140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #11
  %142 = load i64, i64* %57, align 8
  store i64 %142, i64* %134, align 8
  %143 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %135, i64 %141) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #11
  br i1 %143, label %158, label %144

144:                                              ; preds = %136
  %145 = add i32 %139, 1
  %146 = add i32 %139, %138
  %147 = and i32 %146, %121
  %148 = shl i32 %147, 3
  %149 = add i32 %148, 12
  %150 = sext i32 %149 to i64
  %151 = add i64 %126, %150
  %152 = inttoptr i64 %151 to i32*
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = icmp eq i32 %153, %130
  br i1 %154, label %155, label %136

155:                                              ; preds = %144, %113
  %156 = getelementptr inbounds i64, i64* %114, i64 5
  %157 = load i64, i64* %156, align 8
  br label %168

158:                                              ; preds = %136
  %159 = shl i32 %138, 3
  %160 = add i32 %159, 16
  %161 = or i32 %160, 7
  %162 = sext i32 %161 to i64
  %163 = add i64 %34, %162
  %164 = inttoptr i64 %163 to i32*
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = zext i32 %165 to i64
  %167 = or i64 %58, %166
  br label %168

168:                                              ; preds = %158, %155, %92
  %169 = phi i64 [ %94, %92 ], [ %157, %155 ], [ %167, %158 ]
  %170 = and i64 %169, 1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = trunc i64 %169 to i32
  br label %198

174:                                              ; preds = %168
  %175 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %176 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %175, i64 0, i32 0, i32 1
  %179 = load i8, i8* %178, align 8, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %175, i64 0, i32 1, i64 0
  br label %191

183:                                              ; preds = %177, %174
  %184 = and i64 %169, -262144
  %185 = or i64 %184, 16
  %186 = inttoptr i64 %185 to i64*
  %187 = load i64, i64* %186, align 16
  %188 = add i64 %187, -41416
  %189 = inttoptr i64 %188 to %"class.v8::internal::Isolate"*
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %189, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %191

191:                                              ; preds = %181, %183
  %192 = phi i64* [ %190, %183 ], [ %182, %181 ]
  %193 = getelementptr inbounds i64, i64* %192, i64 5
  %194 = load i64, i64* %193, align 8
  %195 = trunc i64 %169 to i32
  %196 = trunc i64 %194 to i32
  %197 = icmp eq i32 %195, %196
  br i1 %197, label %259, label %198

198:                                              ; preds = %172, %191
  %199 = phi i32 [ %173, %172 ], [ %195, %191 ]
  %200 = ashr i32 %199, 1
  %201 = load i64, i64* %0, align 8
  %202 = add i64 %201, 23
  %203 = inttoptr i64 %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = and i32 %204, -2
  %206 = icmp eq i32 %205, 6
  br i1 %206, label %207, label %216

207:                                              ; preds = %198
  %208 = and i64 %201, -262144
  %209 = or i64 %208, 16
  %210 = inttoptr i64 %209 to i64*
  %211 = load i64, i64* %210, align 16
  %212 = add i64 %211, -41416
  %213 = inttoptr i64 %212 to %"class.v8::internal::Isolate"*
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %213, i64 0, i32 0, i32 7, i32 0, i64 119
  %215 = load i64, i64* %214, align 8
  br label %223

216:                                              ; preds = %198
  %217 = add i64 %201, 43
  %218 = inttoptr i64 %217 to i32*
  %219 = load i32, i32* %218, align 4
  %220 = and i64 %201, -4294967296
  %221 = zext i32 %219 to i64
  %222 = or i64 %220, %221
  br label %223

223:                                              ; preds = %207, %216
  %224 = phi i64 [ %215, %207 ], [ %222, %216 ]
  %225 = shl i32 %200, 2
  %226 = sext i32 %225 to i64
  %227 = add nsw i64 %226, 7
  %228 = add i64 %227, %224
  %229 = inttoptr i64 %228 to i32*
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = zext i32 %230 to i64
  %232 = and i64 %231, 1
  %233 = icmp ne i64 %232, 0
  %234 = icmp ne i32 %230, 3
  %235 = and i1 %234, %233
  br i1 %235, label %238, label %236

236:                                              ; preds = %223
  %237 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2, i64 0, i32 6
  store i32 %200, i32* %237, align 4
  br label %497

238:                                              ; preds = %223
  %239 = and i64 %224, -4294967296
  %240 = and i64 %231, 4294967293
  %241 = or i64 %240, %239
  %242 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %243 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %238
  %245 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %242, i64 %241) #11
  br label %497

246:                                              ; preds = %238
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %248 = load i64*, i64** %247, align 8
  %249 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %250 = load i64*, i64** %249, align 8
  %251 = icmp eq i64* %248, %250
  br i1 %251, label %252, label %254

252:                                              ; preds = %246
  %253 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %254

254:                                              ; preds = %252, %246
  %255 = phi i64* [ %253, %252 ], [ %248, %246 ]
  %256 = ptrtoint i64* %255 to i64
  %257 = add i64 %256, 8
  %258 = inttoptr i64 %257 to i64*
  store i64* %258, i64** %247, align 8
  store i64 %241, i64* %255, align 8
  br label %497

259:                                              ; preds = %191
  %260 = load i64, i64* %0, align 8
  %261 = add i64 %260, 23
  %262 = inttoptr i64 %261 to i32*
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %263, -2
  switch i32 %264, label %286 [
    i32 10, label %265
    i32 6, label %277
  ], !prof !4

265:                                              ; preds = %259
  %266 = and i64 %260, -4294967296
  %267 = add i64 %260, 35
  %268 = inttoptr i64 %267 to i32*
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i64
  %271 = or i64 %266, %270
  %272 = add i64 %271, 7
  %273 = inttoptr i64 %272 to i32*
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = ashr i32 %274, 1
  %276 = add nsw i32 %275, 1
  br label %299

277:                                              ; preds = %259
  %278 = and i64 %260, -262144
  %279 = or i64 %278, 16
  %280 = inttoptr i64 %279 to i64*
  %281 = load i64, i64* %280, align 16
  %282 = add i64 %281, -41416
  %283 = inttoptr i64 %282 to %"class.v8::internal::Isolate"*
  %284 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %283, i64 0, i32 0, i32 7, i32 0, i64 119
  %285 = load i64, i64* %284, align 8
  br label %293

286:                                              ; preds = %259
  %287 = add i64 %260, 43
  %288 = inttoptr i64 %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = and i64 %260, -4294967296
  %291 = zext i32 %289 to i64
  %292 = or i64 %290, %291
  br label %293

293:                                              ; preds = %286, %277
  %294 = phi i64 [ %285, %277 ], [ %292, %286 ]
  %295 = add i64 %294, 3
  %296 = inttoptr i64 %295 to i32*
  %297 = load i32, i32* %296, align 4
  %298 = ashr i32 %297, 1
  br label %299

299:                                              ; preds = %265, %293
  %300 = phi i32 [ %276, %265 ], [ %298, %293 ]
  %301 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2, i64 0, i32 6
  store i32 %300, i32* %301, align 4
  %302 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %2) #11
  %303 = sext i32 %302 to i64
  %304 = shl nsw i64 %303, 1
  %305 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %306 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %305, null
  br i1 %306, label %309, label %307

307:                                              ; preds = %299
  %308 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %305, i64 %304) #11
  br label %322

309:                                              ; preds = %299
  %310 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %311 = load i64*, i64** %310, align 8
  %312 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %313 = load i64*, i64** %312, align 8
  %314 = icmp eq i64* %311, %313
  br i1 %314, label %315, label %317

315:                                              ; preds = %309
  %316 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %317

317:                                              ; preds = %315, %309
  %318 = phi i64* [ %316, %315 ], [ %311, %309 ]
  %319 = ptrtoint i64* %318 to i64
  %320 = add i64 %319, 8
  %321 = inttoptr i64 %320 to i64*
  store i64* %321, i64** %310, align 8
  store i64 %304, i64* %318, align 8
  br label %322

322:                                              ; preds = %307, %317
  %323 = phi i64* [ %308, %307 ], [ %318, %317 ]
  %324 = sext i32 %300 to i64
  %325 = shl nsw i64 %324, 1
  %326 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %327 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %326, null
  br i1 %327, label %330, label %328

328:                                              ; preds = %322
  %329 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %326, i64 %325) #11
  br label %343

330:                                              ; preds = %322
  %331 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %332 = load i64*, i64** %331, align 8
  %333 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %334 = load i64*, i64** %333, align 8
  %335 = icmp eq i64* %332, %334
  br i1 %335, label %336, label %338

336:                                              ; preds = %330
  %337 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %338

338:                                              ; preds = %336, %330
  %339 = phi i64* [ %337, %336 ], [ %332, %330 ]
  %340 = ptrtoint i64* %339 to i64
  %341 = add i64 %340, 8
  %342 = inttoptr i64 %341 to i64*
  store i64* %342, i64** %331, align 8
  store i64 %325, i64* %339, align 8
  br label %343

343:                                              ; preds = %328, %338
  %344 = phi i64* [ %329, %328 ], [ %339, %338 ]
  %345 = load i64, i64* %35, align 8
  %346 = and i64 %345, -262144
  %347 = inttoptr i64 %346 to %"class.v8::internal::BasicMemoryChunk"*
  %348 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %347, i64 0, i32 2
  %349 = bitcast %"class.v8::internal::Heap"** %348 to i64*
  %350 = load i64, i64* %349, align 16
  %351 = add i64 %350, -41416
  %352 = inttoptr i64 %351 to %"class.v8::internal::Isolate"*
  %353 = load i64, i64* %323, align 8
  %354 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %353) #11
  %355 = and i64 %354, 1
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %361, label %357

357:                                              ; preds = %343
  %358 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #11
  %359 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %353, i64* %359, align 8
  %360 = call i64 @_ZN2v88internal10JSReceiver23GetOrCreateIdentityHashEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nonnull %4, %"class.v8::internal::Isolate"* %352) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #11
  br label %361

361:                                              ; preds = %343, %357
  %362 = phi i64 [ %360, %357 ], [ %354, %343 ]
  %363 = trunc i64 %362 to i32
  %364 = ashr i32 %363, 1
  %365 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEESA_i(%"class.v8::internal::Isolate"* %352, i64* %35, i64* %323, i64* %344, i32 %364) #11
  %366 = load i64, i64* %0, align 8
  %367 = load i64, i64* %365, align 8
  %368 = add i64 %366, 35
  %369 = inttoptr i64 %368 to i32*
  %370 = trunc i64 %367 to i32
  store atomic volatile i32 %370, i32* %369 monotonic, align 4
  %371 = and i64 %367, 1
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %396, label %373

373:                                              ; preds = %361
  %374 = and i64 %366, -262144
  %375 = or i64 %374, 8
  %376 = inttoptr i64 %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = and i64 %377, 262144
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %384, label %380

380:                                              ; preds = %373
  %381 = or i64 %374, 16
  %382 = inttoptr i64 %381 to %"class.v8::internal::Heap"**
  %383 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %382, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %383, i64 %366, i64 %368, i64 %367) #11
  br label %384

384:                                              ; preds = %380, %373
  %385 = and i64 %367, -262144
  %386 = or i64 %385, 8
  %387 = inttoptr i64 %386 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = and i64 %388, 24
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %396, label %391

391:                                              ; preds = %384
  %392 = load i64, i64* %376, align 8
  %393 = and i64 %392, 24
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %391
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %366, i64 %368, i64 %367) #11
  br label %396

396:                                              ; preds = %361, %384, %391, %395
  %397 = load i64, i64* %0, align 8
  %398 = add i64 %397, 23
  %399 = inttoptr i64 %398 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = and i32 %400, -2
  %402 = icmp eq i32 %401, 6
  br i1 %402, label %403, label %412

403:                                              ; preds = %396
  %404 = and i64 %397, -262144
  %405 = or i64 %404, 16
  %406 = inttoptr i64 %405 to i64*
  %407 = load i64, i64* %406, align 16
  %408 = add i64 %407, -41416
  %409 = inttoptr i64 %408 to %"class.v8::internal::Isolate"*
  %410 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %409, i64 0, i32 0, i32 7, i32 0, i64 119
  %411 = load i64, i64* %410, align 8
  br label %419

412:                                              ; preds = %396
  %413 = add i64 %397, 43
  %414 = inttoptr i64 %413 to i32*
  %415 = load i32, i32* %414, align 4
  %416 = and i64 %397, -4294967296
  %417 = zext i32 %415 to i64
  %418 = or i64 %416, %417
  br label %419

419:                                              ; preds = %403, %412
  %420 = phi i64 [ %411, %403 ], [ %418, %412 ]
  %421 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %422 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %421, null
  br i1 %422, label %426, label %423

423:                                              ; preds = %419
  %424 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %421, i64 %420) #11
  %425 = load i64, i64* %424, align 8
  br label %439

426:                                              ; preds = %419
  %427 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %428 = load i64*, i64** %427, align 8
  %429 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %430 = load i64*, i64** %429, align 8
  %431 = icmp eq i64* %428, %430
  br i1 %431, label %432, label %434

432:                                              ; preds = %426
  %433 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %434

434:                                              ; preds = %432, %426
  %435 = phi i64* [ %433, %432 ], [ %428, %426 ]
  %436 = ptrtoint i64* %435 to i64
  %437 = add i64 %436, 8
  %438 = inttoptr i64 %437 to i64*
  store i64* %438, i64** %427, align 8
  store i64 %420, i64* %435, align 8
  br label %439

439:                                              ; preds = %423, %434
  %440 = phi i64 [ %425, %423 ], [ %420, %434 ]
  %441 = phi i64* [ %424, %423 ], [ %435, %434 ]
  %442 = add i64 %440, 3
  %443 = inttoptr i64 %442 to i32*
  %444 = load i32, i32* %443, align 4
  %445 = ashr i32 %444, 1
  %446 = icmp slt i32 %300, %445
  br i1 %446, label %497, label %447

447:                                              ; preds = %439
  %448 = add nsw i32 %300, 1
  %449 = sdiv i32 %448, 2
  %450 = icmp sgt i32 %449, 2
  %451 = select i1 %450, i32 %449, i32 2
  %452 = add nsw i32 %451, %448
  %453 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %454 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %453, i32 %452, i8 zeroext 1) #11
  %455 = load i64, i64* %454, align 8
  %456 = icmp eq i32 %300, 0
  br i1 %456, label %463, label %457

457:                                              ; preds = %447
  %458 = load i64, i64* %441, align 8
  %459 = add i64 %455, 7
  %460 = add i64 %458, 7
  %461 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  call void @_ZN2v88internal4Heap9CopyRangeINS0_25CompressedMaybeObjectSlotEEEvNS0_10HeapObjectET_S5_iNS0_16WriteBarrierModeE(%"class.v8::internal::Heap"* %461, i64 %455, i64 %459, i64 %460, i32 %300, i32 4) #11
  %462 = load i64, i64* %454, align 8
  br label %463

463:                                              ; preds = %447, %457
  %464 = phi i64 [ %455, %447 ], [ %462, %457 ]
  %465 = load i64, i64* %0, align 8
  %466 = add i64 %465, 43
  %467 = inttoptr i64 %466 to i32*
  %468 = trunc i64 %464 to i32
  store atomic volatile i32 %468, i32* %467 monotonic, align 4
  %469 = and i64 %464, 1
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %482, label %471

471:                                              ; preds = %463
  %472 = and i64 %465, -262144
  %473 = or i64 %472, 8
  %474 = inttoptr i64 %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = and i64 %475, 262144
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %482, label %478

478:                                              ; preds = %471
  %479 = or i64 %472, 16
  %480 = inttoptr i64 %479 to %"class.v8::internal::Heap"**
  %481 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %480, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %481, i64 %465, i64 %466, i64 %464) #11
  br label %482

482:                                              ; preds = %478, %471, %463
  %483 = and i64 %464, -262144
  %484 = or i64 %483, 8
  %485 = inttoptr i64 %484 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = and i64 %486, 24
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %497, label %489

489:                                              ; preds = %482
  %490 = and i64 %465, -262144
  %491 = or i64 %490, 8
  %492 = inttoptr i64 %491 to i64*
  %493 = load i64, i64* %492, align 8
  %494 = and i64 %493, 24
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %496, label %497

496:                                              ; preds = %489
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %465, i64 %466, i64 %464) #11
  br label %497

497:                                              ; preds = %254, %244, %439, %482, %489, %496, %236
  %498 = phi i64* [ null, %236 ], [ null, %496 ], [ null, %489 ], [ null, %482 ], [ null, %439 ], [ %245, %244 ], [ %255, %254 ]
  ret i64* %498
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal6Script22FindSharedFunctionInfoINS0_12LocalIsolateEEENS0_11MaybeHandleINS0_18SharedFunctionInfoEEENS0_6HandleIS1_EEPT_PNS0_15FunctionLiteralE(i64*, %"class.v8::internal::LocalIsolate"*, %"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = load i64, i64* %0, align 8
  %7 = add i64 %6, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 10
  br i1 %11, label %12, label %25

12:                                               ; preds = %3
  %13 = and i64 %6, -4294967296
  %14 = add i64 %6, 35
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = ashr i32 %21, 1
  %23 = icmp sgt i32 %5, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

25:                                               ; preds = %12, %3
  %26 = icmp eq i32 %5, -1
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %25
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable

28:                                               ; preds = %25
  switch i32 %10, label %50 [
    i32 10, label %29
    i32 6, label %41
  ], !prof !4

29:                                               ; preds = %28
  %30 = and i64 %6, -4294967296
  %31 = add i64 %6, 35
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = ashr i32 %38, 1
  %40 = add nsw i32 %39, 1
  br label %63

41:                                               ; preds = %28
  %42 = and i64 %6, -262144
  %43 = or i64 %42, 16
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 119
  %49 = load i64, i64* %48, align 8
  br label %57

50:                                               ; preds = %28
  %51 = add i64 %6, 43
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %6, -4294967296
  %55 = zext i32 %53 to i64
  %56 = or i64 %54, %55
  br label %57

57:                                               ; preds = %50, %41
  %58 = phi i64 [ %49, %41 ], [ %56, %50 ]
  %59 = add i64 %58, 3
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = ashr i32 %61, 1
  br label %63

63:                                               ; preds = %29, %57
  %64 = phi i32 [ %40, %29 ], [ %62, %57 ]
  %65 = icmp slt i32 %5, %64
  br i1 %65, label %67, label %66, !prof !5

66:                                               ; preds = %63
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

67:                                               ; preds = %63
  %68 = icmp eq i32 %10, 6
  br i1 %68, label %69, label %78

69:                                               ; preds = %67
  %70 = and i64 %6, -262144
  %71 = or i64 %70, 16
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 16
  %74 = add i64 %73, -41416
  %75 = inttoptr i64 %74 to %"class.v8::internal::Isolate"*
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 0, i32 7, i32 0, i64 119
  %77 = load i64, i64* %76, align 8
  br label %85

78:                                               ; preds = %67
  %79 = add i64 %6, 43
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = and i64 %6, -4294967296
  %83 = zext i32 %81 to i64
  %84 = or i64 %82, %83
  br label %85

85:                                               ; preds = %69, %78
  %86 = phi i64 [ %77, %69 ], [ %84, %78 ]
  %87 = shl i32 %5, 2
  %88 = sext i32 %87 to i64
  %89 = add nsw i64 %88, 7
  %90 = add i64 %89, %86
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = and i64 %93, 1
  %95 = icmp ne i64 %94, 0
  %96 = icmp ne i32 %92, 3
  %97 = and i1 %96, %95
  br i1 %97, label %98, label %131

98:                                               ; preds = %85
  %99 = and i64 %86, -4294967296
  %100 = and i64 %93, 4294967293
  %101 = or i64 %100, %99
  %102 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = getelementptr inbounds i64, i64* %103, i64 4
  %105 = load i64, i64* %104, align 8
  %106 = trunc i64 %100 to i32
  %107 = trunc i64 %105 to i32
  %108 = icmp eq i32 %106, %107
  br i1 %108, label %131, label %109

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %115 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %114, i64 %101) #11
  br label %131

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %118 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %118, i64 0, i32 0, i32 0
  %120 = load i64*, i64** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %118, i64 0, i32 0, i32 1
  %122 = load i64*, i64** %121, align 8
  %123 = icmp eq i64* %120, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %116
  %125 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %118) #11
  %126 = load i64*, i64** %119, align 8
  br label %127

127:                                              ; preds = %124, %116
  %128 = phi i64* [ %126, %124 ], [ %120, %116 ]
  %129 = phi i64* [ %125, %124 ], [ %120, %116 ]
  %130 = getelementptr inbounds i64, i64* %128, i64 1
  store i64* %130, i64** %119, align 8
  store i64 %101, i64* %129, align 8
  br label %131

131:                                              ; preds = %127, %113, %85, %98
  %132 = phi i64* [ null, %85 ], [ null, %98 ], [ %115, %113 ], [ %129, %127 ]
  ret i64* %132
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden noalias nonnull i64* @_ZN2v88internal6Script33FindWebSnapshotSharedFunctionInfoENS0_6HandleIS1_EEPNS0_12LocalIsolateEPNS0_15FunctionLiteralE(i64* nocapture readnone, %"class.v8::internal::LocalIsolate"* nocapture readnone, %"class.v8::internal::FunctionLiteral"* nocapture readnone) local_unnamed_addr #4 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 19
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 19
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6StringEi(%"class.v8::internal::HashTable"*, i64, i64*, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 15
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = getelementptr inbounds i64, i64* %2, i64 4
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i64, i64* %2, i64 5
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i32 %12, -1
  %18 = and i32 %17, %4
  %19 = shl i32 %18, 2
  %20 = add i32 %19, 12
  %21 = sext i32 %20 to i64
  %22 = add i64 %8, 7
  %23 = add i64 %22, %21
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = trunc i64 %14 to i32
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %86, label %28

28:                                               ; preds = %5
  %29 = trunc i64 %16 to i32
  %30 = bitcast %"class.v8::internal::String"* %6 to i8*
  %31 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = trunc i64 %3 to i32
  %33 = and i64 %3, -4294967296
  %34 = add i64 %3, -1
  %35 = inttoptr i64 %34 to i32*
  br label %36

36:                                               ; preds = %28, %71
  %37 = phi i64 [ %8, %28 ], [ %72, %71 ]
  %38 = phi i32 [ %25, %28 ], [ %82, %71 ]
  %39 = phi i32 [ %18, %28 ], [ %75, %71 ]
  %40 = phi i32 [ 1, %28 ], [ %73, %71 ]
  %41 = zext i32 %38 to i64
  %42 = or i64 %41, %1
  %43 = icmp eq i32 %38, %29
  br i1 %43, label %71, label %44

44:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  store i64 %3, i64* %31, align 8
  %45 = icmp eq i32 %38, %32
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = zext i32 %39 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  br label %86

48:                                               ; preds = %44
  %49 = load atomic i32, i32* %35 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %33, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = icmp ult i16 %54, 32
  br i1 %55, label %56, label %67

56:                                               ; preds = %48
  %57 = add i64 %42, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %60, %1
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp ult i16 %64, 32
  br i1 %65, label %66, label %67

66:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  br label %71

67:                                               ; preds = %48, %56
  %68 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %6, i64 %42) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  br i1 %68, label %84, label %69

69:                                               ; preds = %67
  %70 = load i64, i64* %7, align 8
  br label %71

71:                                               ; preds = %69, %66, %36
  %72 = phi i64 [ %70, %69 ], [ %37, %66 ], [ %37, %36 ]
  %73 = add i32 %40, 1
  %74 = add i32 %39, %40
  %75 = and i32 %74, %17
  %76 = shl i32 %75, 2
  %77 = add i32 %76, 12
  %78 = sext i32 %77 to i64
  %79 = add i64 %72, 7
  %80 = add i64 %79, %78
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = icmp eq i32 %82, %26
  br i1 %83, label %86, label %36

84:                                               ; preds = %67
  %85 = zext i32 %39 to i64
  br label %86

86:                                               ; preds = %71, %84, %5, %46
  %87 = phi i64 [ %47, %46 ], [ -1, %5 ], [ %85, %84 ], [ -1, %71 ]
  ret i64 %87
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = shl i32 %4, 2
  %8 = add i32 %7, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %6
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 8
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 262144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = and i64 %10, 24
  %15 = icmp eq i64 %14, 0
  %16 = select i1 %15, i32 4, i32 0
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ 4, %2 ], [ %16, %13 ]
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %34

27:                                               ; preds = %21, %17
  %28 = or i64 %7, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %25, %27
  %35 = phi i64* [ %33, %27 ], [ %26, %25 ]
  %36 = add i64 %6, 15
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = ashr i32 %38, 1
  %40 = zext i32 %39 to i64
  %41 = icmp eq i32 %39, 0
  %42 = and i64 %1, 4294967295
  %43 = icmp eq i64 %42, 0
  %44 = getelementptr inbounds i64, i64* %35, i64 4
  %45 = getelementptr inbounds i64, i64* %35, i64 5
  %46 = bitcast %"class.v8::internal::String"* %3 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.v8::internal::String"* %4 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %34, %64
  %51 = phi i32 [ 1, %34 ], [ %65, %64 ]
  br i1 %41, label %208, label %52

52:                                               ; preds = %50
  call void @llvm.assume(i1 %43) #11
  %53 = icmp ugt i32 %51, 1
  br label %68

54:                                               ; preds = %64
  br i1 %41, label %208, label %55

55:                                               ; preds = %54
  %56 = load i64, i64* %44, align 8
  %57 = load i64, i64* %45, align 8
  %58 = trunc i64 %57 to i32
  %59 = trunc i64 %56 to i32
  %60 = and i64 %40, 1
  %61 = icmp eq i32 %39, 1
  br i1 %61, label %197, label %62

62:                                               ; preds = %55
  %63 = sub nsw i64 %40, %60
  br label %212

64:                                               ; preds = %188
  %65 = add nuw nsw i32 %51, 1
  %66 = and i8 %190, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %50, label %54

68:                                               ; preds = %52, %188
  %69 = phi i8 [ 1, %52 ], [ %190, %188 ]
  %70 = phi i64 [ 0, %52 ], [ %189, %188 ]
  %71 = trunc i64 %70 to i32
  %72 = load i64, i64* %5, align 8
  %73 = shl i32 %71, 2
  %74 = add i32 %73, 12
  %75 = sext i32 %74 to i64
  %76 = add nsw i64 %75, 7
  %77 = add i64 %76, %72
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = load i64, i64* %44, align 8
  %83 = trunc i64 %82 to i32
  %84 = icmp eq i32 %79, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %68
  %86 = load i64, i64* %45, align 8
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %79, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %85, %68
  %90 = add nuw i64 %70, 1
  br label %188

91:                                               ; preds = %85
  %92 = add i64 %81, 3
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  %98 = lshr i32 %94, 2
  br label %102

99:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  store i64 %81, i64* %47, align 8
  %100 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  %101 = load i64, i64* %5, align 8
  br label %102

102:                                              ; preds = %99, %97
  %103 = phi i64 [ %72, %97 ], [ %101, %99 ]
  %104 = phi i32 [ %98, %97 ], [ %100, %99 ]
  %105 = add i64 %103, 15
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = ashr i32 %107, 1
  %109 = add nsw i32 %108, -1
  %110 = and i32 %109, %104
  %111 = zext i32 %110 to i64
  br i1 %53, label %112, label %125

112:                                              ; preds = %102, %117
  %113 = phi i64 [ %121, %117 ], [ %111, %102 ]
  %114 = phi i32 [ %120, %117 ], [ %110, %102 ]
  %115 = phi i32 [ %119, %117 ], [ 1, %102 ]
  %116 = icmp eq i64 %113, %70
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = add i32 %115, %114
  %119 = add nuw nsw i32 %115, 1
  %120 = and i32 %118, %109
  %121 = zext i32 %120 to i64
  %122 = icmp eq i32 %119, %51
  br i1 %122, label %123, label %112

123:                                              ; preds = %117
  %124 = zext i32 %120 to i64
  br label %125

125:                                              ; preds = %112, %123, %102
  %126 = phi i64 [ %111, %102 ], [ %124, %123 ], [ %70, %112 ]
  %127 = icmp eq i64 %70, %126
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  %129 = add i64 %70, 1
  br label %188

130:                                              ; preds = %125
  %131 = trunc i64 %126 to i32
  %132 = shl i32 %131, 2
  %133 = add i32 %132, 12
  %134 = sext i32 %133 to i64
  %135 = add i64 %103, 7
  %136 = add i64 %135, %134
  %137 = inttoptr i64 %136 to i32*
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %139, %1
  %141 = load i64, i64* %44, align 8
  %142 = trunc i64 %141 to i32
  %143 = icmp eq i32 %138, %142
  br i1 %143, label %185, label %144

144:                                              ; preds = %130
  %145 = load i64, i64* %45, align 8
  %146 = trunc i64 %145 to i32
  %147 = icmp eq i32 %138, %146
  br i1 %147, label %185, label %148

148:                                              ; preds = %144
  %149 = add i64 %140, 3
  %150 = inttoptr i64 %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %148
  %155 = lshr i32 %151, 2
  br label %161

156:                                              ; preds = %148
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  store i64 %140, i64* %49, align 8
  %157 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  %158 = load i64, i64* %5, align 8
  %159 = add i64 %158, 15
  %160 = inttoptr i64 %159 to i32*
  br label %161

161:                                              ; preds = %156, %154
  %162 = phi i32* [ %160, %156 ], [ %106, %154 ]
  %163 = phi i32 [ %157, %156 ], [ %155, %154 ]
  %164 = load atomic i32, i32* %162 monotonic, align 4
  %165 = ashr i32 %164, 1
  %166 = add nsw i32 %165, -1
  %167 = and i32 %166, %163
  %168 = zext i32 %167 to i64
  br i1 %53, label %169, label %182

169:                                              ; preds = %161, %174
  %170 = phi i64 [ %178, %174 ], [ %168, %161 ]
  %171 = phi i32 [ %177, %174 ], [ %167, %161 ]
  %172 = phi i32 [ %176, %174 ], [ 1, %161 ]
  %173 = icmp eq i64 %170, %126
  br i1 %173, label %186, label %174

174:                                              ; preds = %169
  %175 = add i32 %172, %171
  %176 = add nuw nsw i32 %172, 1
  %177 = and i32 %175, %166
  %178 = zext i32 %177 to i64
  %179 = icmp eq i32 %176, %51
  br i1 %179, label %180, label %169

180:                                              ; preds = %174
  %181 = zext i32 %177 to i64
  br label %182

182:                                              ; preds = %180, %161
  %183 = phi i64 [ %168, %161 ], [ %181, %180 ]
  %184 = icmp eq i64 %183, %126
  br i1 %184, label %186, label %185

185:                                              ; preds = %182, %144, %130
  call void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable"* %0, i64 %70, i64 %126, i32 %18)
  br label %188

186:                                              ; preds = %169, %182
  %187 = add i64 %70, 1
  br label %188

188:                                              ; preds = %128, %186, %185, %89
  %189 = phi i64 [ %90, %89 ], [ %129, %128 ], [ %70, %185 ], [ %187, %186 ]
  %190 = phi i8 [ %69, %89 ], [ %69, %128 ], [ %69, %185 ], [ 0, %186 ]
  %191 = icmp ult i64 %189, %40
  br i1 %191, label %68, label %64

192:                                              ; preds = %239
  %193 = trunc i64 %240 to i32
  %194 = shl i32 %193, 2
  %195 = add i32 %194, 12
  %196 = sext i32 %195 to i64
  br label %197

197:                                              ; preds = %192, %55
  %198 = phi i64 [ 12, %55 ], [ %196, %192 ]
  %199 = icmp eq i64 %60, 0
  br i1 %199, label %208, label %200

200:                                              ; preds = %197
  %201 = load i64, i64* %5, align 8
  %202 = add i64 %201, 7
  %203 = add i64 %202, %198
  %204 = inttoptr i64 %203 to i32*
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = icmp eq i32 %205, %58
  br i1 %206, label %207, label %208

207:                                              ; preds = %200
  store atomic volatile i32 %59, i32* %204 monotonic, align 4
  br label %208

208:                                              ; preds = %50, %197, %200, %207, %54
  %209 = load i64, i64* %5, align 8
  %210 = add i64 %209, 11
  %211 = inttoptr i64 %210 to i32*
  store atomic volatile i32 0, i32* %211 monotonic, align 4
  ret void

212:                                              ; preds = %239, %62
  %213 = phi i64 [ 0, %62 ], [ %240, %239 ]
  %214 = phi i64 [ %63, %62 ], [ %241, %239 ]
  %215 = trunc i64 %213 to i32
  %216 = load i64, i64* %5, align 8
  %217 = shl i32 %215, 2
  %218 = add i32 %217, 12
  %219 = sext i32 %218 to i64
  %220 = add i64 %216, 7
  %221 = add i64 %220, %219
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = icmp eq i32 %223, %58
  br i1 %224, label %225, label %226

225:                                              ; preds = %212
  store atomic volatile i32 %59, i32* %222 monotonic, align 4
  br label %226

226:                                              ; preds = %225, %212
  %227 = trunc i64 %213 to i32
  %228 = load i64, i64* %5, align 8
  %229 = shl i32 %227, 2
  %230 = or i32 %229, 4
  %231 = add i32 %230, 12
  %232 = sext i32 %231 to i64
  %233 = add i64 %228, 7
  %234 = add i64 %233, %232
  %235 = inttoptr i64 %234 to i32*
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = icmp eq i32 %236, %58
  br i1 %237, label %238, label %239

238:                                              ; preds = %226
  store atomic volatile i32 %59, i32* %235 monotonic, align 4
  br label %239

239:                                              ; preds = %238, %226
  %240 = add nuw nsw i64 %213, 2
  %241 = add i64 %214, -2
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %192, label %212
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = add i64 %2, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %5
  %13 = lshr i32 %9, 2
  br label %18

14:                                               ; preds = %5
  %15 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %16, align 8
  %17 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %18

18:                                               ; preds = %12, %14
  %19 = phi i32 [ %13, %12 ], [ %17, %14 ]
  %20 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 15
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = ashr i32 %24, 1
  %26 = add nsw i32 %25, -1
  %27 = and i32 %19, %26
  %28 = zext i32 %27 to i64
  %29 = icmp sgt i32 %3, 1
  br i1 %29, label %30, label %43

30:                                               ; preds = %18, %35
  %31 = phi i64 [ %39, %35 ], [ %28, %18 ]
  %32 = phi i32 [ %38, %35 ], [ %27, %18 ]
  %33 = phi i32 [ %37, %35 ], [ 1, %18 ]
  %34 = icmp eq i64 %31, %4
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = add i32 %32, %33
  %37 = add nuw nsw i32 %33, 1
  %38 = and i32 %36, %26
  %39 = zext i32 %38 to i64
  %40 = icmp eq i32 %37, %3
  br i1 %40, label %41, label %30

41:                                               ; preds = %35
  %42 = zext i32 %38 to i64
  br label %43

43:                                               ; preds = %30, %41, %18
  %44 = phi i64 [ %28, %18 ], [ %42, %41 ], [ %4, %30 ]
  ret i64 %44
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [1 x %"class.v8::internal::Object"], align 8
  %6 = trunc i64 %1 to i32
  %7 = bitcast [1 x %"class.v8::internal::Object"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds [1 x %"class.v8::internal::Object"], [1 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = trunc i64 %2 to i32
  %10 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds [1 x %"class.v8::internal::Object"], [1 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  %12 = load i64, i64* %10, align 8
  %13 = and i64 %12, -4294967296
  %14 = shl i32 %6, 2
  %15 = add i32 %14, 12
  %16 = sext i32 %15 to i64
  %17 = add nsw i64 %16, 7
  %18 = add i64 %17, %12
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %13, %21
  store i64 %22, i64* %11, align 8
  %23 = shl i32 %9, 2
  %24 = add i32 %23, 12
  %25 = sext i32 %24 to i64
  %26 = add nsw i64 %25, 7
  %27 = add i64 %12, %26
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %13, %30
  store atomic volatile i32 %29, i32* %19 monotonic, align 4
  switch i32 %3, label %59 [
    i32 0, label %32
    i32 4, label %38
  ]

32:                                               ; preds = %4
  %33 = load i64, i64* %11, align 8
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, %26
  %36 = inttoptr i64 %35 to i32*
  %37 = trunc i64 %33 to i32
  store atomic volatile i32 %37, i32* %36 monotonic, align 4
  br label %123

38:                                               ; preds = %4
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, %17
  %41 = and i64 %30, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = load i64, i64* %11, align 8
  %45 = add i64 %39, %26
  %46 = inttoptr i64 %45 to i32*
  %47 = trunc i64 %44 to i32
  store atomic volatile i32 %47, i32* %46 monotonic, align 4
  br label %85

48:                                               ; preds = %38
  %49 = and i64 %39, -262144
  %50 = or i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 262144
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %48
  %56 = or i64 %49, 16
  %57 = inttoptr i64 %56 to %"class.v8::internal::Heap"**
  %58 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %57, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %58, i64 %39, i64 %40, i64 %31) #11
  br label %62

59:                                               ; preds = %4
  %60 = and i64 %30, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %59, %55, %48
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, %17
  %65 = and i64 %31, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %62
  %72 = and i64 %63, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 24
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %71
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %63, i64 %64, i64 %31) #11
  br label %79

79:                                               ; preds = %59, %62, %71, %78
  %80 = load i64, i64* %11, align 8
  %81 = load i64, i64* %10, align 8
  %82 = add i64 %81, %26
  %83 = inttoptr i64 %82 to i32*
  %84 = trunc i64 %80 to i32
  store atomic volatile i32 %84, i32* %83 monotonic, align 4
  switch i32 %3, label %102 [
    i32 0, label %123
    i32 4, label %85
  ]

85:                                               ; preds = %43, %79
  %86 = phi i64 [ %44, %43 ], [ %80, %79 ]
  %87 = load i64, i64* %10, align 8
  %88 = add i64 %87, %26
  %89 = and i64 %86, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %123, label %91

91:                                               ; preds = %85
  %92 = and i64 %87, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %105, label %98

98:                                               ; preds = %91
  %99 = or i64 %92, 16
  %100 = inttoptr i64 %99 to %"class.v8::internal::Heap"**
  %101 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %100, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %101, i64 %87, i64 %88, i64 %86) #11
  br label %105

102:                                              ; preds = %79
  %103 = and i64 %80, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %123, label %105

105:                                              ; preds = %102, %98, %91
  %106 = phi i64 [ %80, %102 ], [ %86, %98 ], [ %86, %91 ]
  %107 = load i64, i64* %10, align 8
  %108 = add i64 %107, %26
  %109 = and i64 %106, -262144
  %110 = or i64 %109, 8
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 24
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %105
  %116 = and i64 %107, -262144
  %117 = or i64 %116, 8
  %118 = inttoptr i64 %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = and i64 %119, 24
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %107, i64 %108, i64 %106) #11
  br label %123

123:                                              ; preds = %32, %79, %85, %102, %105, %115, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = add nsw i32 %2, 3
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = trunc i64 %2 to i32
  %9 = shl i32 %8, 2
  %10 = add i32 %9, 12
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 7
  %13 = add i64 %12, %6
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = getelementptr inbounds i64, i64* %1, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %15, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds i64, i64* %1, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %15, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %17, i64* %28, align 8
  br label %29

29:                                               ; preds = %22, %4, %27
  %30 = phi i1 [ true, %27 ], [ false, %22 ], [ false, %4 ]
  ret i1 %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 2
  %8 = add i32 %7, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %4
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = trunc i64 %2 to i32
  %6 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i32 %5, 2
  %9 = add i32 %8, 12
  %10 = sext i32 %9 to i64
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %7
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = zext i32 %14 to i64
  %18 = or i64 %17, %1
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %4
  %28 = and i64 %7, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = getelementptr inbounds i64, i64* %36, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %14, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %36, i64 5
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %14, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %18, i64* %47, align 8
  br label %48

48:                                               ; preds = %41, %35, %46
  %49 = phi i1 [ true, %46 ], [ false, %41 ], [ false, %35 ]
  ret i1 %49
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -3
  %3 = sext i32 %2 to i64
  ret i64 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = shl i32 %12, 2
  %15 = add i32 %14, 12
  %16 = sext i32 %15 to i64
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %49, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %25, %35, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %36, %35 ], [ %13, %25 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = shl i32 %43, 2
  %45 = add i32 %44, 12
  %46 = sext i32 %45 to i64
  %47 = add i64 %17, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %23
  br i1 %50, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = shl i32 %11, 2
  %14 = add i32 %13, 12
  %15 = sext i32 %14 to i64
  %16 = add i64 %5, 7
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %48, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %48, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %42, %27
  br i1 %31, label %46, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = shl i32 %36, 2
  %38 = add i32 %37, 12
  %39 = sext i32 %38 to i64
  %40 = add i64 %16, %39
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %22
  br i1 %43, label %44, label %29

44:                                               ; preds = %32
  %45 = zext i32 %36 to i64
  br label %48

46:                                               ; preds = %29
  %47 = zext i32 %36 to i64
  br label %48

48:                                               ; preds = %46, %24, %44, %3
  %49 = phi i64 [ %12, %3 ], [ %45, %44 ], [ %12, %24 ], [ %47, %46 ]
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %71, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 134217722
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = add nsw i32 %31, 3
  %51 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %53 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %51, i64* %52, i32 %50, i8 zeroext %49) #11
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i32*
  store atomic volatile i32 0, i32* %56 monotonic, align 4
  %57 = load i64, i64* %53, align 8
  %58 = add i64 %57, 11
  %59 = inttoptr i64 %58 to i32*
  store atomic volatile i32 0, i32* %59 monotonic, align 4
  %60 = load i64, i64* %53, align 8
  %61 = shl i32 %31, 1
  %62 = add i64 %60, 15
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 %61, i32* %63 monotonic, align 4
  %64 = bitcast %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = load i64, i64* %1, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %4, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %53, align 8
  call void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable"* nonnull %67, i64 %69, i64 %70)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %71

71:                                               ; preds = %28, %48
  %72 = phi i64* [ %53, %48 ], [ %1, %28 ]
  ret i64* %72
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 134217722
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = add nsw i32 %17, 3
  %19 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %21 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %19, i64* %20, i32 %18, i8 zeroext %2) #11
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i32*
  store atomic volatile i32 0, i32* %24 monotonic, align 4
  %25 = load i64, i64* %21, align 8
  %26 = add i64 %25, 11
  %27 = inttoptr i64 %26 to i32*
  store atomic volatile i32 0, i32* %27 monotonic, align 4
  %28 = load i64, i64* %21, align 8
  %29 = shl i32 %17, 1
  %30 = add i64 %28, 15
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %29, i32* %31 monotonic, align 4
  ret i64* %21
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = and i64 %2, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %3, %11
  %16 = phi i32 [ 4, %3 ], [ %14, %11 ]
  %17 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %15
  %28 = and i64 %18, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = add i64 %18, 15
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = ashr i32 %39, 1
  %41 = sext i32 %40 to i64
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  %44 = add i64 %2, 7
  br label %142

45:                                               ; preds = %35
  %46 = and i64 %1, 4294967295
  %47 = icmp eq i64 %46, 0
  call void @llvm.assume(i1 %47) #11
  %48 = getelementptr inbounds i64, i64* %36, i64 4
  %49 = getelementptr inbounds i64, i64* %36, i64 5
  %50 = bitcast %"class.v8::internal::String"* %4 to i8*
  %51 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = add i64 %2, 15
  %53 = inttoptr i64 %52 to i32*
  %54 = add i64 %2, 7
  %55 = icmp eq i32 %16, 0
  %56 = or i64 %5, 16
  %57 = inttoptr i64 %56 to %"class.v8::internal::Heap"**
  br i1 %55, label %58, label %152

58:                                               ; preds = %45, %140
  %59 = phi i64 [ %141, %140 ], [ %18, %45 ]
  %60 = phi i64 [ %138, %140 ], [ 0, %45 ]
  %61 = trunc i64 %60 to i32
  %62 = shl i32 %61, 2
  %63 = add i32 %62, 12
  %64 = sext i32 %63 to i64
  %65 = add nsw i64 %64, 7
  %66 = add i64 %59, %65
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %69, %1
  %71 = load i64, i64* %48, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %68, %72
  br i1 %73, label %137, label %74

74:                                               ; preds = %58
  %75 = load i64, i64* %49, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %68, %76
  br i1 %77, label %137, label %78

78:                                               ; preds = %74
  %79 = add i64 %70, 3
  %80 = inttoptr i64 %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store i64 %70, i64* %51, align 8
  %85 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %86 = load i64, i64* %48, align 8
  %87 = trunc i64 %86 to i32
  br label %90

88:                                               ; preds = %78
  %89 = lshr i32 %81, 2
  br label %90

90:                                               ; preds = %88, %84
  %91 = phi i32 [ %72, %88 ], [ %87, %84 ]
  %92 = phi i32 [ %89, %88 ], [ %85, %84 ]
  %93 = load atomic i32, i32* %53 monotonic, align 4
  %94 = ashr i32 %93, 1
  %95 = add nsw i32 %94, -1
  %96 = and i32 %95, %92
  %97 = shl i32 %96, 2
  %98 = add i32 %97, 12
  %99 = sext i32 %98 to i64
  %100 = add i64 %54, %99
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = icmp eq i32 %102, %91
  br i1 %103, label %131, label %104

104:                                              ; preds = %90
  %105 = load i64, i64* %49, align 8
  %106 = trunc i64 %105 to i32
  br label %107

107:                                              ; preds = %118, %104
  %108 = phi i32 [ %102, %104 ], [ %127, %118 ]
  %109 = phi i32 [ %96, %104 ], [ %121, %118 ]
  %110 = phi i32 [ 1, %104 ], [ %119, %118 ]
  %111 = icmp eq i32 %108, %106
  br i1 %111, label %112, label %118

112:                                              ; preds = %107
  %113 = shl i32 %109, 2
  %114 = add i32 %113, 12
  %115 = sext i32 %114 to i64
  %116 = add i64 %54, %115
  %117 = inttoptr i64 %116 to i32*
  br label %131

118:                                              ; preds = %107
  %119 = add i32 %110, 1
  %120 = add i32 %110, %109
  %121 = and i32 %120, %95
  %122 = shl i32 %121, 2
  %123 = add i32 %122, 12
  %124 = sext i32 %123 to i64
  %125 = add i64 %54, %124
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = icmp eq i32 %127, %91
  br i1 %128, label %129, label %107

129:                                              ; preds = %118
  %130 = inttoptr i64 %125 to i32*
  br label %131

131:                                              ; preds = %129, %112, %90
  %132 = phi i32* [ %101, %90 ], [ %117, %112 ], [ %130, %129 ]
  %133 = load i64, i64* %17, align 8
  %134 = add i64 %133, %65
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  store atomic volatile i32 %136, i32* %132 monotonic, align 4
  br label %137

137:                                              ; preds = %131, %74, %58
  %138 = add i64 %60, 1
  %139 = icmp eq i64 %138, %41
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = load i64, i64* %17, align 8
  br label %58

142:                                              ; preds = %254, %137, %43
  %143 = phi i64 [ %44, %43 ], [ %54, %137 ], [ %54, %254 ]
  %144 = load i64, i64* %17, align 8
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i32*
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, -2
  %149 = inttoptr i64 %143 to i32*
  store atomic volatile i32 %148, i32* %149 monotonic, align 4
  %150 = add i64 %2, 11
  %151 = inttoptr i64 %150 to i32*
  store atomic volatile i32 0, i32* %151 monotonic, align 4
  ret void

152:                                              ; preds = %45, %257
  %153 = phi i64 [ %258, %257 ], [ %18, %45 ]
  %154 = phi i64 [ %255, %257 ], [ 0, %45 ]
  %155 = trunc i64 %154 to i32
  %156 = shl i32 %155, 2
  %157 = add i32 %156, 12
  %158 = sext i32 %157 to i64
  %159 = add nsw i64 %158, 7
  %160 = add i64 %153, %159
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = zext i32 %162 to i64
  %164 = or i64 %163, %1
  %165 = load i64, i64* %48, align 8
  %166 = trunc i64 %165 to i32
  %167 = icmp eq i32 %162, %166
  br i1 %167, label %254, label %168

168:                                              ; preds = %152
  %169 = load i64, i64* %49, align 8
  %170 = trunc i64 %169 to i32
  %171 = icmp eq i32 %162, %170
  br i1 %171, label %254, label %172

172:                                              ; preds = %168
  %173 = add i64 %164, 3
  %174 = inttoptr i64 %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %172
  %179 = lshr i32 %175, 2
  br label %184

180:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store i64 %164, i64* %51, align 8
  %181 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  %182 = load i64, i64* %48, align 8
  %183 = trunc i64 %182 to i32
  br label %184

184:                                              ; preds = %178, %180
  %185 = phi i32 [ %166, %178 ], [ %183, %180 ]
  %186 = phi i32 [ %179, %178 ], [ %181, %180 ]
  %187 = load atomic i32, i32* %53 monotonic, align 4
  %188 = ashr i32 %187, 1
  %189 = add nsw i32 %188, -1
  %190 = and i32 %189, %186
  %191 = shl i32 %190, 2
  %192 = add i32 %191, 12
  %193 = sext i32 %192 to i64
  %194 = add i64 %54, %193
  %195 = inttoptr i64 %194 to i32*
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = icmp eq i32 %196, %185
  br i1 %197, label %225, label %198

198:                                              ; preds = %184
  %199 = load i64, i64* %49, align 8
  %200 = trunc i64 %199 to i32
  br label %201

201:                                              ; preds = %212, %198
  %202 = phi i32 [ %196, %198 ], [ %221, %212 ]
  %203 = phi i32 [ %190, %198 ], [ %215, %212 ]
  %204 = phi i32 [ 1, %198 ], [ %213, %212 ]
  %205 = icmp eq i32 %202, %200
  br i1 %205, label %206, label %212

206:                                              ; preds = %201
  %207 = shl i32 %203, 2
  %208 = add i32 %207, 12
  %209 = sext i32 %208 to i64
  %210 = add i64 %54, %209
  %211 = inttoptr i64 %210 to i32*
  br label %225

212:                                              ; preds = %201
  %213 = add i32 %204, 1
  %214 = add i32 %204, %203
  %215 = and i32 %214, %189
  %216 = shl i32 %215, 2
  %217 = add i32 %216, 12
  %218 = sext i32 %217 to i64
  %219 = add i64 %54, %218
  %220 = inttoptr i64 %219 to i32*
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = icmp eq i32 %221, %185
  br i1 %222, label %223, label %201

223:                                              ; preds = %212
  %224 = inttoptr i64 %219 to i32*
  br label %225

225:                                              ; preds = %223, %206, %184
  %226 = phi i32* [ %195, %184 ], [ %211, %206 ], [ %224, %223 ]
  %227 = phi i64 [ %194, %184 ], [ %210, %206 ], [ %219, %223 ]
  %228 = load i64, i64* %17, align 8
  %229 = add i64 %228, %159
  %230 = inttoptr i64 %229 to i32*
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %232, %1
  store atomic volatile i32 %231, i32* %226 monotonic, align 4
  %234 = and i64 %232, 1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %254, label %236

236:                                              ; preds = %225
  %237 = load i64, i64* %7, align 8
  %238 = and i64 %237, 262144
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %236
  %241 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %57, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %241, i64 %2, i64 %227, i64 %233) #11
  br label %242

242:                                              ; preds = %240, %236
  %243 = and i64 %233, -262144
  %244 = or i64 %243, 8
  %245 = inttoptr i64 %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = and i64 %246, 24
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %254, label %249

249:                                              ; preds = %242
  %250 = load i64, i64* %7, align 8
  %251 = and i64 %250, 24
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %249
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %227, i64 %233) #11
  br label %254

254:                                              ; preds = %168, %225, %152, %253, %249, %242
  %255 = add i64 %154, 1
  %256 = icmp eq i64 %255, %41
  br i1 %256, label %142, label %257

257:                                              ; preds = %254
  %258 = load i64, i64* %17, align 8
  br label %152
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE11SetCapacityEi(%"class.v8::internal::HashTable"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC2Ev(%"class.v8::internal::HashTable"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC2Em(%"class.v8::internal::HashTable"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 134217722
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = add nsw i32 %16, 3
  %18 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %19 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 14
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %18, i64* %21, i32 %17, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = shl i32 %16, 1
  %31 = add i64 %29, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %30, i32* %32 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %78

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 134217722
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = add nuw nsw i32 %56, 3
  %58 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %60 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %58, i64* %59, i32 %57, i8 zeroext %46) #11
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 0, i32* %63 monotonic, align 4
  %64 = load i64, i64* %60, align 8
  %65 = add i64 %64, 11
  %66 = inttoptr i64 %65 to i32*
  store atomic volatile i32 0, i32* %66 monotonic, align 4
  %67 = load i64, i64* %60, align 8
  %68 = shl i32 %56, 1
  %69 = add i64 %67, 15
  %70 = inttoptr i64 %69 to i32*
  store atomic volatile i32 %68, i32* %70 monotonic, align 4
  %71 = bitcast %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = load i64, i64* %1, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %5, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %60, align 8
  call void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable"* nonnull %74, i64 %76, i64 %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %78

78:                                               ; preds = %25, %55
  %79 = phi i64* [ %60, %55 ], [ %1, %25 ]
  ret i64* %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %81

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 134217722
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = add nuw nsw i32 %55, 3
  %57 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %58 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 14
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %57, i64* %60, i32 %56, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = shl i32 %55, 1
  %70 = add i64 %68, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %69, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::StringSet>::ObjectRef"* %5, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable"* nonnull %75, i64 %79, i64 %80)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %81

81:                                               ; preds = %25, %54
  %82 = phi i64* [ %61, %54 ], [ %1, %25 ]
  ret i64* %82
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1217"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 19
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1217"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 19
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEPNS0_12HashTableKeyEi(%"class.v8::internal::HashTable.1217"*, i64, i64*, %"class.v8::internal::HashTableKey"*, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 15
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds i64, i64* %2, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i64, i64* %2, i64 5
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i32 %11, -1
  %17 = and i32 %16, %4
  %18 = zext i32 %17 to i64
  %19 = mul i64 %18, 51539607552
  %20 = add i64 %19, 51539607552
  %21 = ashr exact i64 %20, 32
  %22 = add i64 %7, 7
  %23 = add i64 %22, %21
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = trunc i64 %13 to i32
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %60, label %28

28:                                               ; preds = %5
  %29 = trunc i64 %15 to i32
  %30 = bitcast %"class.v8::internal::HashTableKey"* %3 to i1 (%"class.v8::internal::HashTableKey"*, i64)***
  br label %31

31:                                               ; preds = %28, %46
  %32 = phi i64 [ %7, %28 ], [ %47, %46 ]
  %33 = phi i32 [ %25, %28 ], [ %58, %46 ]
  %34 = phi i64 [ %18, %28 ], [ %51, %46 ]
  %35 = phi i32 [ %17, %28 ], [ %50, %46 ]
  %36 = phi i32 [ 1, %28 ], [ %48, %46 ]
  %37 = icmp eq i32 %33, %29
  br i1 %37, label %46, label %38

38:                                               ; preds = %31
  %39 = zext i32 %33 to i64
  %40 = or i64 %39, %1
  %41 = load i1 (%"class.v8::internal::HashTableKey"*, i64)**, i1 (%"class.v8::internal::HashTableKey"*, i64)*** %30, align 8
  %42 = load i1 (%"class.v8::internal::HashTableKey"*, i64)*, i1 (%"class.v8::internal::HashTableKey"*, i64)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.v8::internal::HashTableKey"* %3, i64 %40) #11
  br i1 %43, label %60, label %44

44:                                               ; preds = %38
  %45 = load i64, i64* %6, align 8
  br label %46

46:                                               ; preds = %44, %31
  %47 = phi i64 [ %45, %44 ], [ %32, %31 ]
  %48 = add i32 %36, 1
  %49 = add i32 %35, %36
  %50 = and i32 %49, %16
  %51 = zext i32 %50 to i64
  %52 = mul i64 %51, 51539607552
  %53 = add i64 %52, 51539607552
  %54 = ashr exact i64 %53, 32
  %55 = add i64 %47, 7
  %56 = add i64 %55, %54
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = icmp eq i32 %58, %26
  br i1 %59, label %60, label %31

60:                                               ; preds = %46, %38, %5
  %61 = phi i64 [ -1, %5 ], [ %34, %38 ], [ -1, %46 ]
  ret i64 %61
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable.1217"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %2, 51539607552
  %7 = add i64 %6, 51539607552
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %5
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %1, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #11
  %15 = zext i32 %12 to i64
  %16 = or i64 %15, %1
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1217"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ 4, %2 ], [ %14, %11 ]
  %17 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %18 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 1, i64 0
  br label %32

25:                                               ; preds = %19, %15
  %26 = or i64 %5, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %32

32:                                               ; preds = %23, %25
  %33 = phi i64* [ %31, %25 ], [ %24, %23 ]
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = ashr i32 %36, 1
  %38 = zext i32 %37 to i64
  %39 = icmp eq i32 %37, 0
  %40 = and i64 %1, 4294967295
  %41 = icmp eq i64 %40, 0
  %42 = getelementptr inbounds i64, i64* %33, i64 4
  %43 = getelementptr inbounds i64, i64* %33, i64 5
  br label %44

44:                                               ; preds = %32, %152
  %45 = phi i32 [ 1, %32 ], [ %154, %152 ]
  br i1 %39, label %241, label %46

46:                                               ; preds = %44
  tail call void @llvm.assume(i1 %41) #11
  %47 = icmp ugt i32 %45, 1
  br i1 %47, label %48, label %157

48:                                               ; preds = %46, %130
  %49 = phi i8 [ %132, %130 ], [ 1, %46 ]
  %50 = phi i64 [ %131, %130 ], [ 0, %46 ]
  %51 = load i64, i64* %3, align 8
  %52 = mul i64 %50, 51539607552
  %53 = add i64 %52, 51539607552
  %54 = ashr exact i64 %53, 32
  %55 = add nsw i64 %54, 7
  %56 = add i64 %55, %51
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %59, %1
  %61 = load i64, i64* %42, align 8
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %58, %62
  br i1 %63, label %128, label %64

64:                                               ; preds = %48
  %65 = load i64, i64* %43, align 8
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i32 %58, %66
  br i1 %67, label %128, label %68

68:                                               ; preds = %64
  %69 = tail call i32 @_ZN2v88internal21CompilationCacheShape13HashForObjectENS0_13ReadOnlyRootsENS0_6ObjectE(i64* %33, i64 %60) #11
  %70 = load i64, i64* %3, align 8
  %71 = add i64 %70, 15
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = ashr i32 %73, 1
  %75 = add nsw i32 %74, -1
  %76 = and i32 %75, %69
  br label %77

77:                                               ; preds = %68, %82
  %78 = phi i32 [ %85, %82 ], [ %76, %68 ]
  %79 = phi i32 [ %84, %82 ], [ 1, %68 ]
  %80 = zext i32 %78 to i64
  %81 = icmp eq i64 %50, %80
  br i1 %81, label %137, label %82

82:                                               ; preds = %77
  %83 = add i32 %79, %78
  %84 = add nuw nsw i32 %79, 1
  %85 = and i32 %83, %75
  %86 = icmp eq i32 %84, %45
  br i1 %86, label %140, label %77

87:                                               ; preds = %137
  %88 = mul i64 %138, 51539607552
  %89 = add i64 %88, 51539607552
  %90 = ashr exact i64 %89, 32
  %91 = add i64 %70, 7
  %92 = add i64 %91, %90
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %95, %1
  %97 = load i64, i64* %42, align 8
  %98 = trunc i64 %97 to i32
  %99 = icmp eq i32 %94, %98
  br i1 %99, label %125, label %100

100:                                              ; preds = %87
  %101 = load i64, i64* %43, align 8
  %102 = trunc i64 %101 to i32
  %103 = icmp eq i32 %94, %102
  br i1 %103, label %125, label %104

104:                                              ; preds = %100
  %105 = tail call i32 @_ZN2v88internal21CompilationCacheShape13HashForObjectENS0_13ReadOnlyRootsENS0_6ObjectE(i64* %33, i64 %96) #11
  %106 = load i64, i64* %3, align 8
  %107 = add i64 %106, 15
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = ashr i32 %109, 1
  %111 = add nsw i32 %110, -1
  %112 = and i32 %111, %105
  br label %113

113:                                              ; preds = %104, %118
  %114 = phi i32 [ %121, %118 ], [ %112, %104 ]
  %115 = phi i32 [ %120, %118 ], [ 1, %104 ]
  %116 = zext i32 %114 to i64
  %117 = icmp eq i64 %138, %116
  br i1 %117, label %123, label %118

118:                                              ; preds = %113
  %119 = add i32 %115, %114
  %120 = add nuw nsw i32 %115, 1
  %121 = and i32 %119, %111
  %122 = icmp eq i32 %120, %45
  br i1 %122, label %134, label %113

123:                                              ; preds = %113, %134
  %124 = add i64 %50, 1
  br label %130

125:                                              ; preds = %134, %100, %87
  tail call void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1217"* %0, i64 %50, i64 %138, i32 %16)
  br label %130

126:                                              ; preds = %137
  %127 = add i64 %50, 1
  br label %130

128:                                              ; preds = %64, %48
  %129 = add nuw i64 %50, 1
  br label %130

130:                                              ; preds = %128, %126, %125, %123
  %131 = phi i64 [ %129, %128 ], [ %127, %126 ], [ %50, %125 ], [ %124, %123 ]
  %132 = phi i8 [ %49, %128 ], [ %49, %126 ], [ %49, %125 ], [ 0, %123 ]
  %133 = icmp ult i64 %131, %38
  br i1 %133, label %48, label %152

134:                                              ; preds = %118
  %135 = zext i32 %121 to i64
  %136 = icmp eq i64 %138, %135
  br i1 %136, label %123, label %125

137:                                              ; preds = %77, %140
  %138 = phi i64 [ %141, %140 ], [ %50, %77 ]
  %139 = icmp eq i64 %50, %138
  br i1 %139, label %126, label %87

140:                                              ; preds = %82
  %141 = zext i32 %85 to i64
  br label %137

142:                                              ; preds = %152
  br i1 %39, label %241, label %143

143:                                              ; preds = %142
  %144 = load i64, i64* %42, align 8
  %145 = load i64, i64* %43, align 8
  %146 = trunc i64 %145 to i32
  %147 = trunc i64 %144 to i32
  %148 = and i64 %38, 1
  %149 = icmp eq i32 %37, 1
  br i1 %149, label %231, label %150

150:                                              ; preds = %143
  %151 = sub nsw i64 %38, %148
  br label %245

152:                                              ; preds = %222, %130
  %153 = phi i8 [ %132, %130 ], [ %224, %222 ]
  %154 = add nuw nsw i32 %45, 1
  %155 = and i8 %153, 1
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %44, label %142

157:                                              ; preds = %46, %222
  %158 = phi i8 [ %224, %222 ], [ 1, %46 ]
  %159 = phi i64 [ %223, %222 ], [ 0, %46 ]
  %160 = load i64, i64* %3, align 8
  %161 = mul i64 %159, 51539607552
  %162 = add i64 %161, 51539607552
  %163 = ashr exact i64 %162, 32
  %164 = add nsw i64 %163, 7
  %165 = add i64 %164, %160
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = zext i32 %167 to i64
  %169 = or i64 %168, %1
  %170 = load i64, i64* %42, align 8
  %171 = trunc i64 %170 to i32
  %172 = icmp eq i32 %167, %171
  br i1 %172, label %177, label %173

173:                                              ; preds = %157
  %174 = load i64, i64* %43, align 8
  %175 = trunc i64 %174 to i32
  %176 = icmp eq i32 %167, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %173, %157
  %178 = add nuw i64 %159, 1
  br label %222

179:                                              ; preds = %173
  %180 = tail call i32 @_ZN2v88internal21CompilationCacheShape13HashForObjectENS0_13ReadOnlyRootsENS0_6ObjectE(i64* %33, i64 %169) #11
  %181 = load i64, i64* %3, align 8
  %182 = add i64 %181, 15
  %183 = inttoptr i64 %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = ashr i32 %184, 1
  %186 = add nsw i32 %185, -1
  %187 = and i32 %186, %180
  %188 = zext i32 %187 to i64
  %189 = icmp eq i64 %159, %188
  br i1 %189, label %190, label %192

190:                                              ; preds = %179
  %191 = add nuw i64 %159, 1
  br label %222

192:                                              ; preds = %179
  %193 = mul i64 %188, 51539607552
  %194 = add i64 %193, 51539607552
  %195 = ashr exact i64 %194, 32
  %196 = add i64 %181, 7
  %197 = add i64 %196, %195
  %198 = inttoptr i64 %197 to i32*
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = zext i32 %199 to i64
  %201 = or i64 %200, %1
  %202 = load i64, i64* %42, align 8
  %203 = trunc i64 %202 to i32
  %204 = icmp eq i32 %199, %203
  br i1 %204, label %219, label %205

205:                                              ; preds = %192
  %206 = load i64, i64* %43, align 8
  %207 = trunc i64 %206 to i32
  %208 = icmp eq i32 %199, %207
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = tail call i32 @_ZN2v88internal21CompilationCacheShape13HashForObjectENS0_13ReadOnlyRootsENS0_6ObjectE(i64* %33, i64 %201) #11
  %211 = load i64, i64* %3, align 8
  %212 = add i64 %211, 15
  %213 = inttoptr i64 %212 to i32*
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = ashr i32 %214, 1
  %216 = add nsw i32 %215, -1
  %217 = and i32 %216, %210
  %218 = icmp eq i32 %217, %187
  br i1 %218, label %220, label %219

219:                                              ; preds = %209, %205, %192
  tail call void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1217"* %0, i64 %159, i64 %188, i32 %16)
  br label %222

220:                                              ; preds = %209
  %221 = add nuw i64 %159, 1
  br label %222

222:                                              ; preds = %190, %220, %219, %177
  %223 = phi i64 [ %178, %177 ], [ %191, %190 ], [ %159, %219 ], [ %221, %220 ]
  %224 = phi i8 [ %158, %177 ], [ %158, %190 ], [ %158, %219 ], [ 0, %220 ]
  %225 = icmp ult i64 %223, %38
  br i1 %225, label %157, label %152

226:                                              ; preds = %270
  %227 = mul i64 %271, 51539607552
  %228 = add i64 %227, 51539607552
  %229 = ashr exact i64 %228, 32
  %230 = add nsw i64 %229, 7
  br label %231

231:                                              ; preds = %226, %143
  %232 = phi i64 [ 19, %143 ], [ %230, %226 ]
  %233 = icmp eq i64 %148, 0
  br i1 %233, label %241, label %234

234:                                              ; preds = %231
  %235 = load i64, i64* %3, align 8
  %236 = add i64 %235, %232
  %237 = inttoptr i64 %236 to i32*
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = icmp eq i32 %238, %146
  br i1 %239, label %240, label %241

240:                                              ; preds = %234
  store atomic volatile i32 %147, i32* %237 monotonic, align 4
  br label %241

241:                                              ; preds = %44, %231, %234, %240, %142
  %242 = load i64, i64* %3, align 8
  %243 = add i64 %242, 11
  %244 = inttoptr i64 %243 to i32*
  store atomic volatile i32 0, i32* %244 monotonic, align 4
  ret void

245:                                              ; preds = %270, %150
  %246 = phi i64 [ 0, %150 ], [ %271, %270 ]
  %247 = phi i64 [ %151, %150 ], [ %272, %270 ]
  %248 = load i64, i64* %3, align 8
  %249 = mul i64 %246, 51539607552
  %250 = add i64 %249, 51539607552
  %251 = ashr exact i64 %250, 32
  %252 = add nsw i64 %251, 7
  %253 = add i64 %248, %252
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = icmp eq i32 %255, %146
  br i1 %256, label %257, label %258

257:                                              ; preds = %245
  store atomic volatile i32 %147, i32* %254 monotonic, align 4
  br label %258

258:                                              ; preds = %257, %245
  %259 = or i64 %246, 1
  %260 = load i64, i64* %3, align 8
  %261 = mul i64 %259, 51539607552
  %262 = add i64 %261, 51539607552
  %263 = ashr exact i64 %262, 32
  %264 = or i64 %263, 7
  %265 = add i64 %260, %264
  %266 = inttoptr i64 %265 to i32*
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = icmp eq i32 %267, %146
  br i1 %268, label %269, label %270

269:                                              ; preds = %258
  store atomic volatile i32 %147, i32* %266 monotonic, align 4
  br label %270

270:                                              ; preds = %269, %258
  %271 = add nuw nsw i64 %246, 2
  %272 = add i64 %247, -2
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %226, label %245
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable.1217"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = tail call i32 @_ZN2v88internal21CompilationCacheShape13HashForObjectENS0_13ReadOnlyRootsENS0_6ObjectE(i64* %1, i64 %2)
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 15
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add nsw i32 %12, -1
  %14 = and i32 %6, %13
  %15 = zext i32 %14 to i64
  %16 = icmp sgt i32 %3, 1
  br i1 %16, label %17, label %30

17:                                               ; preds = %5, %22
  %18 = phi i64 [ %26, %22 ], [ %15, %5 ]
  %19 = phi i32 [ %25, %22 ], [ %14, %5 ]
  %20 = phi i32 [ %24, %22 ], [ 1, %5 ]
  %21 = icmp eq i64 %18, %4
  br i1 %21, label %30, label %22

22:                                               ; preds = %17
  %23 = add i32 %19, %20
  %24 = add nuw nsw i32 %20, 1
  %25 = and i32 %23, %13
  %26 = zext i32 %25 to i64
  %27 = icmp eq i32 %24, %3
  br i1 %27, label %28, label %17

28:                                               ; preds = %22
  %29 = zext i32 %25 to i64
  br label %30

30:                                               ; preds = %17, %28, %5
  %31 = phi i64 [ %15, %5 ], [ %29, %28 ], [ %4, %17 ]
  ret i64 %31
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1217"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [3 x %"class.v8::internal::Object"], align 16
  %6 = bitcast [3 x %"class.v8::internal::Object"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false)
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = mul i64 %1, 51539607552
  %11 = add i64 %10, 51539607552
  %12 = ashr exact i64 %11, 32
  %13 = add nsw i64 %12, 7
  %14 = add i64 %13, %8
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %9, %17
  %19 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 %18, i64* %19, align 16
  %20 = mul i64 %1, 51539607552
  %21 = add i64 %20, 68719476736
  %22 = ashr exact i64 %21, 32
  %23 = add nsw i64 %22, 7
  %24 = add i64 %23, %8
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %9, %27
  %29 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 1, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = mul i64 %1, 51539607552
  %31 = add i64 %30, 85899345920
  %32 = ashr exact i64 %31, 32
  %33 = add nsw i64 %32, 7
  %34 = add i64 %33, %8
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %9, %37
  %39 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 2, i32 0, i32 0
  store i64 %38, i64* %39, align 16
  %40 = mul i64 %2, 51539607552
  %41 = add i64 %40, 51539607552
  %42 = ashr exact i64 %41, 32
  %43 = add nsw i64 %42, 7
  %44 = add i64 %8, %43
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %9, %47
  store atomic volatile i32 %46, i32* %15 monotonic, align 4
  switch i32 %3, label %65 [
    i32 4, label %49
    i32 0, label %100
  ]

49:                                               ; preds = %4
  %50 = load i64, i64* %7, align 8
  %51 = add i64 %50, %13
  %52 = and i64 %47, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %85, label %54

54:                                               ; preds = %49
  %55 = and i64 %50, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 262144
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %54
  %62 = or i64 %55, 16
  %63 = inttoptr i64 %62 to %"class.v8::internal::Heap"**
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %64, i64 %50, i64 %51, i64 %48) #11
  br label %68

65:                                               ; preds = %4
  %66 = and i64 %47, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %65, %61, %54
  %69 = load i64, i64* %7, align 8
  %70 = add i64 %69, %13
  %71 = and i64 %48, -262144
  %72 = or i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 24
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %68
  %78 = and i64 %69, -262144
  %79 = or i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 24
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %77
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %69, i64 %70, i64 %48) #11
  br label %85

85:                                               ; preds = %84, %77, %68, %65, %49
  %86 = load i64, i64* %7, align 8
  %87 = and i64 %86, -4294967296
  %88 = mul i64 %2, 51539607552
  %89 = add i64 %88, 68719476736
  %90 = ashr exact i64 %89, 32
  %91 = add nsw i64 %90, 7
  %92 = add i64 %91, %86
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %87, %95
  %97 = add i64 %86, %23
  %98 = inttoptr i64 %97 to i32*
  store atomic volatile i32 %94, i32* %98 monotonic, align 4
  %99 = icmp eq i32 %3, 4
  br i1 %99, label %210, label %226

100:                                              ; preds = %4
  %101 = load i64, i64* %7, align 8
  %102 = mul i64 %2, 51539607552
  %103 = add i64 %102, 68719476736
  %104 = ashr exact i64 %103, 32
  %105 = add nsw i64 %104, 7
  %106 = add i64 %105, %101
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = add i64 %101, %23
  %110 = inttoptr i64 %109 to i32*
  store atomic volatile i32 %108, i32* %110 monotonic, align 4
  %111 = load i64, i64* %7, align 8
  %112 = mul i64 %2, 51539607552
  %113 = add i64 %112, 85899345920
  %114 = ashr exact i64 %113, 32
  %115 = add nsw i64 %114, 7
  %116 = add i64 %115, %111
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = add i64 %111, %33
  %120 = inttoptr i64 %119 to i32*
  store atomic volatile i32 %118, i32* %120 monotonic, align 4
  %121 = load i64, i64* %19, align 16
  %122 = load i64, i64* %7, align 8
  %123 = add i64 %122, %43
  %124 = inttoptr i64 %123 to i32*
  %125 = trunc i64 %121 to i32
  store atomic volatile i32 %125, i32* %124 monotonic, align 4
  br label %191

126:                                              ; preds = %385, %388, %397, %404
  %127 = load i64, i64* %19, align 16
  %128 = load i64, i64* %7, align 8
  %129 = add i64 %128, %43
  %130 = inttoptr i64 %129 to i32*
  %131 = trunc i64 %127 to i32
  store atomic volatile i32 %131, i32* %130 monotonic, align 4
  switch i32 %3, label %159 [
    i32 4, label %132
    i32 0, label %191
  ]

132:                                              ; preds = %368, %126
  %133 = phi i64 [ %369, %368 ], [ %127, %126 ]
  %134 = load i64, i64* %7, align 8
  %135 = add i64 %134, %43
  %136 = and i64 %133, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %148

138:                                              ; preds = %132
  %139 = load i64, i64* %29, align 8
  %140 = load i64, i64* %7, align 8
  %141 = mul i64 %2, 51539607552
  %142 = add i64 %141, 68719476736
  %143 = ashr exact i64 %142, 32
  %144 = add nsw i64 %143, 7
  %145 = add i64 %140, %144
  %146 = inttoptr i64 %145 to i32*
  %147 = trunc i64 %139 to i32
  store atomic volatile i32 %147, i32* %146 monotonic, align 4
  br label %262

148:                                              ; preds = %132
  %149 = and i64 %134, -262144
  %150 = or i64 %149, 8
  %151 = inttoptr i64 %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = and i64 %152, 262144
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %148
  %156 = or i64 %149, 16
  %157 = inttoptr i64 %156 to %"class.v8::internal::Heap"**
  %158 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %157, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %158, i64 %134, i64 %135, i64 %133) #11
  br label %162

159:                                              ; preds = %126
  %160 = and i64 %127, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %159, %155, %148
  %163 = phi i64 [ %127, %159 ], [ %133, %155 ], [ %133, %148 ]
  %164 = load i64, i64* %7, align 8
  %165 = add i64 %164, %43
  %166 = and i64 %163, -262144
  %167 = or i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, 24
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %162
  %173 = and i64 %164, -262144
  %174 = or i64 %173, 8
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = and i64 %176, 24
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %164, i64 %165, i64 %163) #11
  br label %180

180:                                              ; preds = %179, %172, %162, %159
  %181 = load i64, i64* %29, align 8
  %182 = load i64, i64* %7, align 8
  %183 = mul i64 %2, 51539607552
  %184 = add i64 %183, 68719476736
  %185 = ashr exact i64 %184, 32
  %186 = add nsw i64 %185, 7
  %187 = add i64 %182, %186
  %188 = inttoptr i64 %187 to i32*
  %189 = trunc i64 %181 to i32
  store atomic volatile i32 %189, i32* %188 monotonic, align 4
  %190 = icmp eq i32 %3, 4
  br i1 %190, label %262, label %290

191:                                              ; preds = %100, %126
  %192 = load i64, i64* %29, align 8
  %193 = load i64, i64* %7, align 8
  %194 = mul i64 %2, 51539607552
  %195 = add i64 %194, 68719476736
  %196 = ashr exact i64 %195, 32
  %197 = add nsw i64 %196, 7
  %198 = add i64 %193, %197
  %199 = inttoptr i64 %198 to i32*
  %200 = trunc i64 %192 to i32
  store atomic volatile i32 %200, i32* %199 monotonic, align 4
  %201 = load i64, i64* %39, align 16
  %202 = load i64, i64* %7, align 8
  %203 = mul i64 %2, 51539607552
  %204 = add i64 %203, 85899345920
  %205 = ashr exact i64 %204, 32
  %206 = add nsw i64 %205, 7
  %207 = add i64 %202, %206
  %208 = inttoptr i64 %207 to i32*
  %209 = trunc i64 %201 to i32
  store atomic volatile i32 %209, i32* %208 monotonic, align 4
  br label %261

210:                                              ; preds = %85
  %211 = load i64, i64* %7, align 8
  %212 = add i64 %211, %23
  %213 = and i64 %95, 1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %246, label %215

215:                                              ; preds = %210
  %216 = and i64 %211, -262144
  %217 = or i64 %216, 8
  %218 = inttoptr i64 %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = and i64 %219, 262144
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %229, label %222

222:                                              ; preds = %215
  %223 = or i64 %216, 16
  %224 = inttoptr i64 %223 to %"class.v8::internal::Heap"**
  %225 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %224, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %225, i64 %211, i64 %212, i64 %96) #11
  br label %229

226:                                              ; preds = %85
  %227 = and i64 %95, 1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %246, label %229

229:                                              ; preds = %215, %222, %226
  %230 = load i64, i64* %7, align 8
  %231 = add i64 %230, %23
  %232 = and i64 %96, -262144
  %233 = or i64 %232, 8
  %234 = inttoptr i64 %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = and i64 %235, 24
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %246, label %238

238:                                              ; preds = %229
  %239 = and i64 %230, -262144
  %240 = or i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 24
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %238
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %230, i64 %231, i64 %96) #11
  br label %246

246:                                              ; preds = %210, %226, %229, %238, %245
  %247 = load i64, i64* %7, align 8
  %248 = and i64 %247, -4294967296
  %249 = mul i64 %2, 51539607552
  %250 = add i64 %249, 85899345920
  %251 = ashr exact i64 %250, 32
  %252 = add nsw i64 %251, 7
  %253 = add i64 %252, %247
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %248, %256
  %258 = add i64 %247, %33
  %259 = inttoptr i64 %258 to i32*
  store atomic volatile i32 %255, i32* %259 monotonic, align 4
  %260 = icmp eq i32 %3, 4
  br i1 %260, label %363, label %385

261:                                              ; preds = %323, %341, %344, %355, %362, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void

262:                                              ; preds = %180, %138
  %263 = phi i64 [ %144, %138 ], [ %186, %180 ]
  %264 = phi i64 [ %139, %138 ], [ %181, %180 ]
  %265 = load i64, i64* %7, align 8
  %266 = add i64 %265, %263
  %267 = and i64 %264, 1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %279

269:                                              ; preds = %262
  %270 = load i64, i64* %39, align 16
  %271 = load i64, i64* %7, align 8
  %272 = mul i64 %2, 51539607552
  %273 = add i64 %272, 85899345920
  %274 = ashr exact i64 %273, 32
  %275 = add nsw i64 %274, 7
  %276 = add i64 %271, %275
  %277 = inttoptr i64 %276 to i32*
  %278 = trunc i64 %270 to i32
  store atomic volatile i32 %278, i32* %277 monotonic, align 4
  br label %323

279:                                              ; preds = %262
  %280 = and i64 %265, -262144
  %281 = or i64 %280, 8
  %282 = inttoptr i64 %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 262144
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %293, label %286

286:                                              ; preds = %279
  %287 = or i64 %280, 16
  %288 = inttoptr i64 %287 to %"class.v8::internal::Heap"**
  %289 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %288, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %289, i64 %265, i64 %266, i64 %264) #11
  br label %293

290:                                              ; preds = %180
  %291 = and i64 %181, 1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %312, label %293

293:                                              ; preds = %279, %286, %290
  %294 = phi i64 [ %263, %279 ], [ %263, %286 ], [ %186, %290 ]
  %295 = phi i64 [ %264, %279 ], [ %264, %286 ], [ %181, %290 ]
  %296 = load i64, i64* %7, align 8
  %297 = add i64 %296, %294
  %298 = and i64 %295, -262144
  %299 = or i64 %298, 8
  %300 = inttoptr i64 %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 24
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %312, label %304

304:                                              ; preds = %293
  %305 = and i64 %296, -262144
  %306 = or i64 %305, 8
  %307 = inttoptr i64 %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = and i64 %308, 24
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %304
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %296, i64 %297, i64 %295) #11
  br label %312

312:                                              ; preds = %290, %293, %304, %311
  %313 = load i64, i64* %39, align 16
  %314 = load i64, i64* %7, align 8
  %315 = mul i64 %2, 51539607552
  %316 = add i64 %315, 85899345920
  %317 = ashr exact i64 %316, 32
  %318 = add nsw i64 %317, 7
  %319 = add i64 %314, %318
  %320 = inttoptr i64 %319 to i32*
  %321 = trunc i64 %313 to i32
  store atomic volatile i32 %321, i32* %320 monotonic, align 4
  %322 = icmp eq i32 %3, 4
  br i1 %322, label %323, label %341

323:                                              ; preds = %312, %269
  %324 = phi i64 [ %275, %269 ], [ %318, %312 ]
  %325 = phi i64 [ %270, %269 ], [ %313, %312 ]
  %326 = load i64, i64* %7, align 8
  %327 = add i64 %326, %324
  %328 = and i64 %325, 1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %261, label %330

330:                                              ; preds = %323
  %331 = and i64 %326, -262144
  %332 = or i64 %331, 8
  %333 = inttoptr i64 %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = and i64 %334, 262144
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %344, label %337

337:                                              ; preds = %330
  %338 = or i64 %331, 16
  %339 = inttoptr i64 %338 to %"class.v8::internal::Heap"**
  %340 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %339, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %340, i64 %326, i64 %327, i64 %325) #11
  br label %344

341:                                              ; preds = %312
  %342 = and i64 %313, 1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %261, label %344

344:                                              ; preds = %341, %337, %330
  %345 = phi i64 [ %318, %341 ], [ %324, %337 ], [ %324, %330 ]
  %346 = phi i64 [ %313, %341 ], [ %325, %337 ], [ %325, %330 ]
  %347 = load i64, i64* %7, align 8
  %348 = add i64 %347, %345
  %349 = and i64 %346, -262144
  %350 = or i64 %349, 8
  %351 = inttoptr i64 %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = and i64 %352, 24
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %261, label %355

355:                                              ; preds = %344
  %356 = and i64 %347, -262144
  %357 = or i64 %356, 8
  %358 = inttoptr i64 %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = and i64 %359, 24
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %261

362:                                              ; preds = %355
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %347, i64 %348, i64 %346) #11
  br label %261

363:                                              ; preds = %246
  %364 = load i64, i64* %7, align 8
  %365 = add i64 %364, %33
  %366 = and i64 %256, 1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %374

368:                                              ; preds = %363
  %369 = load i64, i64* %19, align 16
  %370 = load i64, i64* %7, align 8
  %371 = add i64 %370, %43
  %372 = inttoptr i64 %371 to i32*
  %373 = trunc i64 %369 to i32
  store atomic volatile i32 %373, i32* %372 monotonic, align 4
  br label %132

374:                                              ; preds = %363
  %375 = and i64 %364, -262144
  %376 = or i64 %375, 8
  %377 = inttoptr i64 %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = and i64 %378, 262144
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %374
  %382 = or i64 %375, 16
  %383 = inttoptr i64 %382 to %"class.v8::internal::Heap"**
  %384 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %383, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %384, i64 %364, i64 %365, i64 %257) #11
  br label %388

385:                                              ; preds = %246
  %386 = and i64 %256, 1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %126, label %388

388:                                              ; preds = %385, %381, %374
  %389 = load i64, i64* %7, align 8
  %390 = add i64 %389, %33
  %391 = and i64 %257, -262144
  %392 = or i64 %391, 8
  %393 = inttoptr i64 %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = and i64 %394, 24
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %126, label %397

397:                                              ; preds = %388
  %398 = and i64 %389, -262144
  %399 = or i64 %398, 8
  %400 = inttoptr i64 %399 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = and i64 %401, 24
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %126

404:                                              ; preds = %397
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %389, i64 %390, i64 %257) #11
  br label %126
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1217"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = mul nsw i32 %2, 3
  %4 = add nsw i32 %3, 3
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1217"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = mul i64 %2, 51539607552
  %9 = add i64 %8, 51539607552
  %10 = ashr exact i64 %9, 32
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %6
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %7, %15
  %17 = getelementptr inbounds i64, i64* %1, i64 4
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %14, %19
  br i1 %20, label %28, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds i64, i64* %1, i64 5
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %14, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %16, i64* %27, align 8
  br label %28

28:                                               ; preds = %21, %4, %26
  %29 = phi i1 [ true, %26 ], [ false, %21 ], [ false, %4 ]
  ret i1 %29
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable.1217"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = mul i64 %1, 51539607552
  %7 = add i64 %6, 51539607552
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %4
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %5, %13
  ret i64 %14
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1217"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = mul i64 %2, 51539607552
  %8 = add i64 %7, 51539607552
  %9 = ashr exact i64 %8, 32
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %6
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  %18 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %19 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 1, i64 0
  br label %34

26:                                               ; preds = %20, %4
  %27 = and i64 %6, -262144
  %28 = or i64 %27, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %24, %26
  %35 = phi i64* [ %33, %26 ], [ %25, %24 ]
  %36 = getelementptr inbounds i64, i64* %35, i64 4
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %13, %38
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds i64, i64* %35, i64 5
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %13, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %17, i64* %46, align 8
  br label %47

47:                                               ; preds = %40, %34, %45
  %48 = phi i1 [ true, %45 ], [ false, %40 ], [ false, %34 ]
  ret i1 %48
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -3
  %3 = sdiv i32 %2, 3
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable.1217"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable.1217"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = mul i64 %13, 51539607552
  %15 = add i64 %14, 51539607552
  %16 = ashr exact i64 %15, 32
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %50, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %35, %25, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %13, %25 ], [ %36, %35 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = zext i32 %43 to i64
  %45 = mul i64 %44, 51539607552
  %46 = add i64 %45, 51539607552
  %47 = ashr exact i64 %46, 32
  %48 = add i64 %17, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = icmp eq i32 %50, %23
  br i1 %51, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable.1217"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = mul i64 %12, 51539607552
  %14 = add i64 %13, 51539607552
  %15 = ashr exact i64 %14, 32
  %16 = add i64 %5, 7
  %17 = add i64 %15, %16
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %47, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %47, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %43, %27
  br i1 %31, label %45, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = zext i32 %36 to i64
  %38 = mul i64 %37, 51539607552
  %39 = add i64 %38, 51539607552
  %40 = ashr exact i64 %39, 32
  %41 = add i64 %40, %16
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = icmp eq i32 %43, %22
  br i1 %44, label %45, label %29

45:                                               ; preds = %32, %29
  %46 = zext i32 %36 to i64
  br label %47

47:                                               ; preds = %45, %24, %3
  %48 = phi i64 [ %12, %3 ], [ %12, %24 ], [ %46, %45 ]
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %72, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 44739240
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = mul nsw i32 %31, 3
  %51 = add nsw i32 %50, 3
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %54 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %52, i64* %53, i32 %51, i8 zeroext %49) #11
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i32*
  store atomic volatile i32 0, i32* %57 monotonic, align 4
  %58 = load i64, i64* %54, align 8
  %59 = add i64 %58, 11
  %60 = inttoptr i64 %59 to i32*
  store atomic volatile i32 0, i32* %60 monotonic, align 4
  %61 = load i64, i64* %54, align 8
  %62 = shl i32 %31, 1
  %63 = add i64 %61, 15
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 %62, i32* %64 monotonic, align 4
  %65 = bitcast %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %66 = load i64, i64* %1, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %4, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %70 = load i64, i64* %69, align 8
  %71 = load i64, i64* %54, align 8
  call void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1217"* nonnull %68, i64 %70, i64 %71)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  br label %72

72:                                               ; preds = %28, %48
  %73 = phi i64* [ %54, %48 ], [ %1, %28 ]
  ret i64* %73
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 44739240
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = mul nsw i32 %17, 3
  %19 = add nsw i32 %18, 3
  %20 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %20, i64* %21, i32 %19, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = shl i32 %17, 1
  %31 = add i64 %29, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %30, i32* %32 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1217"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = and i64 %2, -262144
  %5 = or i64 %4, 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 262144
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = and i64 %7, 24
  %12 = icmp eq i64 %11, 0
  %13 = select i1 %12, i32 4, i32 0
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i32 [ 4, %3 ], [ %13, %10 ]
  %16 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %19 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 1, i64 0
  br label %34

26:                                               ; preds = %20, %14
  %27 = and i64 %17, -262144
  %28 = or i64 %27, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %24, %26
  %35 = phi i64* [ %33, %26 ], [ %25, %24 ]
  %36 = add i64 %17, 15
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = ashr i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = icmp eq i32 %39, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %34
  %43 = add i64 %2, 7
  br label %55

44:                                               ; preds = %34
  %45 = and i64 %1, 4294967295
  %46 = icmp eq i64 %45, 0
  tail call void @llvm.assume(i1 %46) #11
  %47 = getelementptr inbounds i64, i64* %35, i64 4
  %48 = getelementptr inbounds i64, i64* %35, i64 5
  %49 = add i64 %2, 15
  %50 = inttoptr i64 %49 to i32*
  %51 = add i64 %2, 7
  %52 = icmp eq i32 %15, 0
  %53 = or i64 %4, 16
  %54 = inttoptr i64 %53 to %"class.v8::internal::Heap"**
  br label %65

55:                                               ; preds = %228, %42
  %56 = phi i64 [ %43, %42 ], [ %51, %228 ]
  %57 = phi i64 [ %17, %42 ], [ %231, %228 ]
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, -2
  %62 = inttoptr i64 %56 to i32*
  store atomic volatile i32 %61, i32* %62 monotonic, align 4
  %63 = add i64 %2, 11
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  ret void

65:                                               ; preds = %228, %44
  %66 = phi i64 [ %17, %44 ], [ %231, %228 ]
  %67 = phi i64 [ 0, %44 ], [ %229, %228 ]
  %68 = mul i64 %67, 51539607552
  %69 = add i64 %68, 51539607552
  %70 = ashr exact i64 %69, 32
  %71 = add nsw i64 %70, 7
  %72 = add i64 %66, %71
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %75, %1
  %77 = load i64, i64* %47, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %74, %78
  br i1 %79, label %228, label %80

80:                                               ; preds = %65
  %81 = load i64, i64* %48, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %74, %82
  br i1 %83, label %228, label %84

84:                                               ; preds = %80
  %85 = tail call i32 @_ZN2v88internal21CompilationCacheShape13HashForObjectENS0_13ReadOnlyRootsENS0_6ObjectE(i64* %35, i64 %76)
  %86 = load atomic i32, i32* %50 monotonic, align 4
  %87 = ashr i32 %86, 1
  %88 = add nsw i32 %87, -1
  %89 = and i32 %88, %85
  %90 = zext i32 %89 to i64
  %91 = mul i64 %90, 51539607552
  %92 = add i64 %91, 51539607552
  %93 = ashr exact i64 %92, 32
  %94 = add i64 %93, %51
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = load i64, i64* %47, align 8
  %98 = trunc i64 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %120, label %100

100:                                              ; preds = %84
  %101 = load i64, i64* %48, align 8
  %102 = trunc i64 %101 to i32
  br label %103

103:                                              ; preds = %108, %100
  %104 = phi i32 [ %96, %100 ], [ %118, %108 ]
  %105 = phi i32 [ %89, %100 ], [ %111, %108 ]
  %106 = phi i32 [ 1, %100 ], [ %109, %108 ]
  %107 = icmp eq i32 %104, %102
  br i1 %107, label %120, label %108

108:                                              ; preds = %103
  %109 = add i32 %106, 1
  %110 = add i32 %106, %105
  %111 = and i32 %110, %88
  %112 = zext i32 %111 to i64
  %113 = mul i64 %112, 51539607552
  %114 = add i64 %113, 51539607552
  %115 = ashr exact i64 %114, 32
  %116 = add i64 %115, %51
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = icmp eq i32 %118, %98
  br i1 %119, label %120, label %103

120:                                              ; preds = %108, %103, %84
  %121 = phi i32 [ %89, %84 ], [ %111, %108 ], [ %105, %103 ]
  %122 = load i64, i64* %16, align 8
  %123 = add i64 %122, %71
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %126, %1
  %128 = mul i32 %121, 12
  %129 = add i32 %128, 12
  %130 = sext i32 %129 to i64
  %131 = add i64 %51, %130
  %132 = inttoptr i64 %131 to i32*
  store atomic volatile i32 %125, i32* %132 monotonic, align 4
  %133 = and i64 %126, 1
  %134 = icmp eq i64 %133, 0
  %135 = or i1 %52, %134
  br i1 %135, label %154, label %136

136:                                              ; preds = %120
  %137 = load i64, i64* %6, align 8
  %138 = and i64 %137, 262144
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %54, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %141, i64 %2, i64 %131, i64 %127) #11
  br label %142

142:                                              ; preds = %140, %136
  %143 = and i64 %127, -262144
  %144 = or i64 %143, 8
  %145 = inttoptr i64 %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = and i64 %146, 24
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %142
  %150 = load i64, i64* %6, align 8
  %151 = and i64 %150, 24
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %149
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %131, i64 %127) #11
  br label %154

154:                                              ; preds = %120, %142, %149, %153
  %155 = load i64, i64* %16, align 8
  %156 = mul i64 %67, 51539607552
  %157 = add i64 %156, 68719476736
  %158 = ashr exact i64 %157, 32
  %159 = add nsw i64 %158, 7
  %160 = add i64 %159, %155
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  br i1 %52, label %173, label %163

163:                                              ; preds = %154
  %164 = zext i32 %162 to i64
  %165 = or i64 %164, %1
  %166 = mul i32 %121, 12
  %167 = add i32 %166, 16
  %168 = sext i32 %167 to i64
  %169 = add i64 %51, %168
  %170 = inttoptr i64 %169 to i32*
  store atomic volatile i32 %162, i32* %170 monotonic, align 4
  %171 = and i64 %164, 1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %210, label %192

173:                                              ; preds = %154
  %174 = mul i32 %121, 12
  %175 = add i32 %174, 16
  %176 = sext i32 %175 to i64
  %177 = add i64 %51, %176
  %178 = inttoptr i64 %177 to i32*
  store atomic volatile i32 %162, i32* %178 monotonic, align 4
  %179 = load i64, i64* %16, align 8
  %180 = mul i64 %67, 51539607552
  %181 = add i64 %180, 85899345920
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 7
  %184 = add i64 %183, %179
  %185 = inttoptr i64 %184 to i32*
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = mul i32 %121, 12
  %188 = add i32 %187, 20
  %189 = sext i32 %188 to i64
  %190 = add i64 %51, %189
  %191 = inttoptr i64 %190 to i32*
  store atomic volatile i32 %186, i32* %191 monotonic, align 4
  br label %228

192:                                              ; preds = %163
  %193 = load i64, i64* %6, align 8
  %194 = and i64 %193, 262144
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  %197 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %54, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %197, i64 %2, i64 %169, i64 %165) #11
  br label %198

198:                                              ; preds = %192, %196
  %199 = and i64 %165, -262144
  %200 = or i64 %199, 8
  %201 = inttoptr i64 %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = and i64 %202, 24
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %210, label %205

205:                                              ; preds = %198
  %206 = load i64, i64* %6, align 8
  %207 = and i64 %206, 24
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %205
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %169, i64 %165) #11
  br label %210

210:                                              ; preds = %163, %198, %205, %209
  %211 = load i64, i64* %16, align 8
  %212 = mul i64 %67, 51539607552
  %213 = add i64 %212, 85899345920
  %214 = ashr exact i64 %213, 32
  %215 = add nsw i64 %214, 7
  %216 = add i64 %215, %211
  %217 = inttoptr i64 %216 to i32*
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = zext i32 %218 to i64
  %220 = or i64 %219, %1
  %221 = mul i32 %121, 12
  %222 = add i32 %221, 20
  %223 = sext i32 %222 to i64
  %224 = add i64 %51, %223
  %225 = inttoptr i64 %224 to i32*
  store atomic volatile i32 %218, i32* %225 monotonic, align 4
  %226 = and i64 %219, 1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %232

228:                                              ; preds = %210, %238, %245, %249, %173, %80, %65
  %229 = add i64 %67, 1
  %230 = icmp eq i64 %229, %40
  %231 = load i64, i64* %16, align 8
  br i1 %230, label %55, label %65

232:                                              ; preds = %210
  %233 = load i64, i64* %6, align 8
  %234 = and i64 %233, 262144
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %232
  %237 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %54, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %237, i64 %2, i64 %224, i64 %220) #11
  br label %238

238:                                              ; preds = %236, %232
  %239 = and i64 %220, -262144
  %240 = or i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 24
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %228, label %245

245:                                              ; preds = %238
  %246 = load i64, i64* %6, align 8
  %247 = and i64 %246, 24
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %228

249:                                              ; preds = %245
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %224, i64 %220) #11
  br label %228
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal21CompilationCacheShape13HashForObjectENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %9 = and i64 %1, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = and i64 %1, -4294967296
  %13 = add i64 %1, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 66
  br i1 %21, label %26, label %33

22:                                               ; preds = %2
  %23 = trunc i64 %1 to i32
  %24 = ashr i32 %23, 1
  %25 = sitofp i32 %24 to double
  br label %30

26:                                               ; preds = %11
  %27 = add i64 %1, 3
  %28 = inttoptr i64 %27 to double*
  %29 = load double, double* %28, align 1
  br label %30

30:                                               ; preds = %22, %26
  %31 = phi double [ %25, %22 ], [ %29, %26 ]
  %32 = fptoui double %31 to i32
  br label %172

33:                                               ; preds = %11
  %34 = load atomic i32, i32* %14 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %12, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp eq i16 %39, 179
  br i1 %40, label %41, label %45

41:                                               ; preds = %33
  %42 = bitcast %"class.v8::internal::SharedFunctionInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %43, align 8
  %44 = call i32 @_ZN2v88internal18SharedFunctionInfo4HashEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  br label %172

45:                                               ; preds = %33
  %46 = load atomic i32, i32* %14 monotonic, align 4
  %47 = getelementptr inbounds i64, i64* %0, i64 13
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %46, %49
  %51 = add i64 %1, 11
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %12, %54
  %56 = add i64 %1, 15
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  br i1 %50, label %59, label %156

59:                                               ; preds = %45
  %60 = and i32 %58, 2
  %61 = icmp ne i32 %60, 0
  %62 = add i64 %1, 19
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = ashr i32 %64, 1
  %66 = add i64 %1, 7
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = and i64 %69, 1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %88

72:                                               ; preds = %59
  %73 = add i64 %55, 3
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = lshr i32 %75, 2
  br label %84

80:                                               ; preds = %72
  %81 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #11
  %82 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %82, align 8
  %83 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #11
  br label %84

84:                                               ; preds = %78, %80
  %85 = phi i32 [ %79, %78 ], [ %83, %80 ]
  %86 = xor i32 %85, 32768
  %87 = select i1 %61, i32 %86, i32 %85
  br label %172

88:                                               ; preds = %59
  %89 = or i64 %12, %69
  %90 = bitcast %"class.v8::internal::SharedFunctionInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90)
  %91 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %89, i64* %91, align 8
  %92 = add i64 %55, 3
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %88
  %98 = lshr i32 %94, 2
  br label %103

99:                                               ; preds = %88
  %100 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #11
  %101 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %101, align 8
  %102 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #11
  br label %103

103:                                              ; preds = %99, %97
  %104 = phi i32 [ %98, %97 ], [ %102, %99 ]
  %105 = call zeroext i1 @_ZNK2v88internal18SharedFunctionInfo13HasSourceCodeEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %6) #11
  br i1 %105, label %106, label %151

106:                                              ; preds = %103
  %107 = load i64, i64* %91, align 8
  %108 = and i64 %107, -4294967296
  %109 = add i64 %107, 15
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 acquire, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %108, %112
  %114 = add i64 %113, -1
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %108, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load atomic i16, i16* %120 monotonic, align 2
  %122 = icmp eq i16 %121, 100
  br i1 %122, label %123, label %129

123:                                              ; preds = %106
  %124 = add i64 %113, 11
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = or i64 %108, %127
  br label %129

129:                                              ; preds = %123, %106
  %130 = phi i64 [ %128, %123 ], [ %113, %106 ]
  %131 = and i64 %130, -4294967296
  %132 = add i64 %130, 3
  %133 = inttoptr i64 %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %131, %135
  %137 = add i64 %136, 3
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %129
  %143 = lshr i32 %139, 2
  br label %148

144:                                              ; preds = %129
  %145 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #11
  %146 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %136, i64* %146, align 8
  %147 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #11
  br label %148

148:                                              ; preds = %144, %142
  %149 = phi i32 [ %143, %142 ], [ %147, %144 ]
  %150 = xor i32 %149, %104
  br label %151

151:                                              ; preds = %103, %148
  %152 = phi i32 [ %150, %148 ], [ %104, %103 ]
  %153 = xor i32 %152, 32768
  %154 = select i1 %61, i32 %153, i32 %152
  %155 = add i32 %154, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90)
  br label %172

156:                                              ; preds = %45
  %157 = add i64 %55, 3
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %156
  %163 = lshr i32 %159, 2
  br label %168

164:                                              ; preds = %156
  %165 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #11
  %166 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %166, align 8
  %167 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #11
  br label %168

168:                                              ; preds = %162, %164
  %169 = phi i32 [ %163, %162 ], [ %167, %164 ]
  %170 = ashr i32 %58, 1
  %171 = add i32 %169, %170
  br label %172

172:                                              ; preds = %168, %151, %84, %41, %30
  %173 = phi i32 [ %32, %30 ], [ %44, %41 ], [ %171, %168 ], [ %87, %84 ], [ %155, %151 ]
  ret i32 %173
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable.1217"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE11SetCapacityEi(%"class.v8::internal::HashTable.1217"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC2Ev(%"class.v8::internal::HashTable.1217"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC2Em(%"class.v8::internal::HashTable.1217"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1217", %"class.v8::internal::HashTable.1217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 44739240
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = mul nsw i32 %16, 3
  %18 = add nsw i32 %17, 3
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %20 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 14
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %19, i64* %22, i32 %18, i8 zeroext %2) #11
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 0, i32* %26 monotonic, align 4
  %27 = load i64, i64* %23, align 8
  %28 = add i64 %27, 11
  %29 = inttoptr i64 %28 to i32*
  store atomic volatile i32 0, i32* %29 monotonic, align 4
  %30 = load i64, i64* %23, align 8
  %31 = shl i32 %16, 1
  %32 = add i64 %30, 15
  %33 = inttoptr i64 %32 to i32*
  store atomic volatile i32 %31, i32* %33 monotonic, align 4
  ret i64* %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %79

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 44739240
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = mul nsw i32 %56, 3
  %58 = add nuw nsw i32 %57, 3
  %59 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %59, i64* %60, i32 %58, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = shl i32 %56, 1
  %70 = add i64 %68, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %69, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %5, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %77 = load i64, i64* %76, align 8
  %78 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1217"* nonnull %75, i64 %77, i64 %78)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %79

79:                                               ; preds = %25, %55
  %80 = phi i64* [ %61, %55 ], [ %1, %25 ]
  ret i64* %80
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %82

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 44739240
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = mul nsw i32 %55, 3
  %57 = add nuw nsw i32 %56, 3
  %58 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %59 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 14
  %62 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %58, i64* %61, i32 %57, i8 zeroext %46) #11
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i32*
  store atomic volatile i32 0, i32* %65 monotonic, align 4
  %66 = load i64, i64* %62, align 8
  %67 = add i64 %66, 11
  %68 = inttoptr i64 %67 to i32*
  store atomic volatile i32 0, i32* %68 monotonic, align 4
  %69 = load i64, i64* %62, align 8
  %70 = shl i32 %55, 1
  %71 = add i64 %69, 15
  %72 = inttoptr i64 %71 to i32*
  store atomic volatile i32 %70, i32* %72 monotonic, align 4
  %73 = bitcast %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = load i64, i64* %1, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::CompilationCacheTable>::ObjectRef"* %5, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %78 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %78, i64 0, i32 0, i32 4
  %80 = load i64, i64* %79, align 8
  %81 = load i64, i64* %62, align 8
  call void @_ZN2v88internal9HashTableINS0_21CompilationCacheTableENS0_21CompilationCacheShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1217"* nonnull %76, i64 %80, i64 %81)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  br label %82

82:                                               ; preds = %25, %54
  %83 = phi i64* [ %62, %54 ], [ %1, %25 ]
  ret i64* %83
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1219"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 19
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1219"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 19
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::HashTable.1219"*, i64, i64*, i64*, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 15
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = getelementptr inbounds i64, i64* %2, i64 4
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i32 %12, -1
  %16 = and i32 %15, %4
  %17 = shl i32 %16, 2
  %18 = add i32 %17, 12
  %19 = sext i32 %18 to i64
  %20 = add i64 %8, 7
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = trunc i64 %14 to i32
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %53, label %26

26:                                               ; preds = %5
  %27 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %28 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  br label %30

30:                                               ; preds = %26, %38
  %31 = phi i32 [ %23, %26 ], [ %49, %38 ]
  %32 = phi i32 [ %16, %26 ], [ %41, %38 ]
  %33 = phi i32 [ 1, %26 ], [ %39, %38 ]
  %34 = zext i32 %31 to i64
  %35 = or i64 %34, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load i64, i64* %3, align 8
  store i64 %36, i64* %28, align 8
  %37 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %29, i64 %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = add i32 %33, 1
  %40 = add i32 %32, %33
  %41 = and i32 %40, %15
  %42 = load i64, i64* %7, align 8
  %43 = shl i32 %41, 2
  %44 = add i32 %43, 12
  %45 = sext i32 %44 to i64
  %46 = add i64 %42, 7
  %47 = add i64 %46, %45
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %24
  br i1 %50, label %53, label %30

51:                                               ; preds = %30
  %52 = zext i32 %32 to i64
  br label %53

53:                                               ; preds = %38, %51, %5
  %54 = phi i64 [ -1, %5 ], [ %52, %51 ], [ -1, %38 ]
  ret i64 %54
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable.1219"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = shl i32 %4, 2
  %8 = add i32 %7, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %6
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1219"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 8
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 262144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = and i64 %10, 24
  %15 = icmp eq i64 %14, 0
  %16 = select i1 %15, i32 4, i32 0
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ 4, %2 ], [ %16, %13 ]
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %34

27:                                               ; preds = %21, %17
  %28 = or i64 %7, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %25, %27
  %35 = phi i64* [ %33, %27 ], [ %26, %25 ]
  %36 = add i64 %6, 15
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = ashr i32 %38, 1
  %40 = zext i32 %39 to i64
  %41 = icmp eq i32 %39, 0
  %42 = and i64 %1, 4294967295
  %43 = icmp eq i64 %42, 0
  %44 = getelementptr inbounds i64, i64* %35, i64 4
  %45 = getelementptr inbounds i64, i64* %35, i64 5
  %46 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %34, %176
  %51 = phi i32 [ 1, %34 ], [ %178, %176 ]
  br i1 %41, label %283, label %52

52:                                               ; preds = %50
  call void @llvm.assume(i1 %43) #11
  %53 = icmp ugt i32 %51, 1
  br i1 %53, label %54, label %181

54:                                               ; preds = %52, %154
  %55 = phi i8 [ %156, %154 ], [ 1, %52 ]
  %56 = phi i64 [ %155, %154 ], [ 0, %52 ]
  %57 = trunc i64 %56 to i32
  %58 = load i64, i64* %5, align 8
  %59 = shl i32 %57, 2
  %60 = add i32 %59, 12
  %61 = sext i32 %60 to i64
  %62 = add nsw i64 %61, 7
  %63 = add i64 %62, %58
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = load i64, i64* %44, align 8
  %69 = trunc i64 %68 to i32
  %70 = icmp eq i32 %65, %69
  br i1 %70, label %152, label %71

71:                                               ; preds = %54
  %72 = load i64, i64* %45, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %65, %73
  br i1 %74, label %152, label %75

75:                                               ; preds = %71
  %76 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %67) #11
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  store i64 %67, i64* %47, align 8
  %80 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %81

81:                                               ; preds = %79, %75
  %82 = phi i64 [ %80, %79 ], [ %76, %75 ]
  %83 = trunc i64 %82 to i32
  %84 = ashr i32 %83, 1
  %85 = load i64, i64* %5, align 8
  %86 = add i64 %85, 15
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = ashr i32 %88, 1
  %90 = add nsw i32 %89, -1
  %91 = and i32 %90, %84
  br label %92

92:                                               ; preds = %81, %97
  %93 = phi i32 [ %100, %97 ], [ %91, %81 ]
  %94 = phi i32 [ %99, %97 ], [ 1, %81 ]
  %95 = zext i32 %93 to i64
  %96 = icmp eq i64 %56, %95
  br i1 %96, label %161, label %97

97:                                               ; preds = %92
  %98 = add i32 %94, %93
  %99 = add nuw nsw i32 %94, 1
  %100 = and i32 %98, %90
  %101 = icmp eq i32 %99, %51
  br i1 %101, label %164, label %92

102:                                              ; preds = %161
  %103 = trunc i64 %162 to i32
  %104 = shl i32 %103, 2
  %105 = add i32 %104, 12
  %106 = sext i32 %105 to i64
  %107 = add i64 %85, 7
  %108 = add i64 %107, %106
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %111, %1
  %113 = load i64, i64* %44, align 8
  %114 = trunc i64 %113 to i32
  %115 = icmp eq i32 %110, %114
  br i1 %115, label %149, label %116

116:                                              ; preds = %102
  %117 = load i64, i64* %45, align 8
  %118 = trunc i64 %117 to i32
  %119 = icmp eq i32 %110, %118
  br i1 %119, label %149, label %120

120:                                              ; preds = %116
  %121 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %112) #11
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  store i64 %112, i64* %49, align 8
  %125 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %126

126:                                              ; preds = %124, %120
  %127 = phi i64 [ %125, %124 ], [ %121, %120 ]
  %128 = trunc i64 %127 to i32
  %129 = ashr i32 %128, 1
  %130 = load i64, i64* %5, align 8
  %131 = add i64 %130, 15
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = ashr i32 %133, 1
  %135 = add nsw i32 %134, -1
  %136 = and i32 %135, %129
  br label %137

137:                                              ; preds = %126, %142
  %138 = phi i32 [ %145, %142 ], [ %136, %126 ]
  %139 = phi i32 [ %144, %142 ], [ 1, %126 ]
  %140 = zext i32 %138 to i64
  %141 = icmp eq i64 %162, %140
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = add i32 %139, %138
  %144 = add nuw nsw i32 %139, 1
  %145 = and i32 %143, %135
  %146 = icmp eq i32 %144, %51
  br i1 %146, label %158, label %137

147:                                              ; preds = %137, %158
  %148 = add i64 %56, 1
  br label %154

149:                                              ; preds = %158, %116, %102
  call void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1219"* %0, i64 %56, i64 %162, i32 %18)
  br label %154

150:                                              ; preds = %161
  %151 = add i64 %56, 1
  br label %154

152:                                              ; preds = %71, %54
  %153 = add nuw i64 %56, 1
  br label %154

154:                                              ; preds = %152, %150, %149, %147
  %155 = phi i64 [ %153, %152 ], [ %151, %150 ], [ %56, %149 ], [ %148, %147 ]
  %156 = phi i8 [ %55, %152 ], [ %55, %150 ], [ %55, %149 ], [ 0, %147 ]
  %157 = icmp ult i64 %155, %40
  br i1 %157, label %54, label %176

158:                                              ; preds = %142
  %159 = zext i32 %145 to i64
  %160 = icmp eq i64 %162, %159
  br i1 %160, label %147, label %149

161:                                              ; preds = %92, %164
  %162 = phi i64 [ %165, %164 ], [ %56, %92 ]
  %163 = icmp eq i64 %56, %162
  br i1 %163, label %150, label %102

164:                                              ; preds = %97
  %165 = zext i32 %100 to i64
  br label %161

166:                                              ; preds = %176
  br i1 %41, label %283, label %167

167:                                              ; preds = %166
  %168 = load i64, i64* %44, align 8
  %169 = load i64, i64* %45, align 8
  %170 = trunc i64 %169 to i32
  %171 = trunc i64 %168 to i32
  %172 = and i64 %40, 1
  %173 = icmp eq i32 %39, 1
  br i1 %173, label %272, label %174

174:                                              ; preds = %167
  %175 = sub nsw i64 %40, %172
  br label %287

176:                                              ; preds = %263, %154
  %177 = phi i8 [ %156, %154 ], [ %265, %263 ]
  %178 = add nuw nsw i32 %51, 1
  %179 = and i8 %177, 1
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %50, label %166

181:                                              ; preds = %52, %263
  %182 = phi i8 [ %265, %263 ], [ 1, %52 ]
  %183 = phi i64 [ %264, %263 ], [ 0, %52 ]
  %184 = trunc i64 %183 to i32
  %185 = load i64, i64* %5, align 8
  %186 = shl i32 %184, 2
  %187 = add i32 %186, 12
  %188 = sext i32 %187 to i64
  %189 = add nsw i64 %188, 7
  %190 = add i64 %189, %185
  %191 = inttoptr i64 %190 to i32*
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %193, %1
  %195 = load i64, i64* %44, align 8
  %196 = trunc i64 %195 to i32
  %197 = icmp eq i32 %192, %196
  br i1 %197, label %202, label %198

198:                                              ; preds = %181
  %199 = load i64, i64* %45, align 8
  %200 = trunc i64 %199 to i32
  %201 = icmp eq i32 %192, %200
  br i1 %201, label %202, label %204

202:                                              ; preds = %198, %181
  %203 = add nuw i64 %183, 1
  br label %263

204:                                              ; preds = %198
  %205 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %194) #11
  %206 = and i64 %205, 1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  store i64 %194, i64* %47, align 8
  %209 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %210

210:                                              ; preds = %208, %204
  %211 = phi i64 [ %209, %208 ], [ %205, %204 ]
  %212 = trunc i64 %211 to i32
  %213 = ashr i32 %212, 1
  %214 = load i64, i64* %5, align 8
  %215 = add i64 %214, 15
  %216 = inttoptr i64 %215 to i32*
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = ashr i32 %217, 1
  %219 = add nsw i32 %218, -1
  %220 = and i32 %219, %213
  %221 = zext i32 %220 to i64
  %222 = icmp eq i64 %183, %221
  br i1 %222, label %223, label %225

223:                                              ; preds = %210
  %224 = add nuw i64 %183, 1
  br label %263

225:                                              ; preds = %210
  %226 = shl i32 %220, 2
  %227 = add i32 %226, 12
  %228 = sext i32 %227 to i64
  %229 = add i64 %214, 7
  %230 = add i64 %229, %228
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %233, %1
  %235 = load i64, i64* %44, align 8
  %236 = trunc i64 %235 to i32
  %237 = icmp eq i32 %232, %236
  br i1 %237, label %260, label %238

238:                                              ; preds = %225
  %239 = load i64, i64* %45, align 8
  %240 = trunc i64 %239 to i32
  %241 = icmp eq i32 %232, %240
  br i1 %241, label %260, label %242

242:                                              ; preds = %238
  %243 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %234) #11
  %244 = and i64 %243, 1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %242
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  store i64 %234, i64* %49, align 8
  %247 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %248

248:                                              ; preds = %246, %242
  %249 = phi i64 [ %247, %246 ], [ %243, %242 ]
  %250 = trunc i64 %249 to i32
  %251 = ashr i32 %250, 1
  %252 = load i64, i64* %5, align 8
  %253 = add i64 %252, 15
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = ashr i32 %255, 1
  %257 = add nsw i32 %256, -1
  %258 = and i32 %257, %251
  %259 = icmp eq i32 %258, %220
  br i1 %259, label %261, label %260

260:                                              ; preds = %248, %238, %225
  call void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1219"* %0, i64 %183, i64 %221, i32 %18)
  br label %263

261:                                              ; preds = %248
  %262 = add nuw i64 %183, 1
  br label %263

263:                                              ; preds = %223, %261, %260, %202
  %264 = phi i64 [ %203, %202 ], [ %224, %223 ], [ %183, %260 ], [ %262, %261 ]
  %265 = phi i8 [ %182, %202 ], [ %182, %223 ], [ %182, %260 ], [ 0, %261 ]
  %266 = icmp ult i64 %264, %40
  br i1 %266, label %181, label %176

267:                                              ; preds = %314
  %268 = trunc i64 %315 to i32
  %269 = shl i32 %268, 2
  %270 = add i32 %269, 12
  %271 = sext i32 %270 to i64
  br label %272

272:                                              ; preds = %267, %167
  %273 = phi i64 [ 12, %167 ], [ %271, %267 ]
  %274 = icmp eq i64 %172, 0
  br i1 %274, label %283, label %275

275:                                              ; preds = %272
  %276 = load i64, i64* %5, align 8
  %277 = add i64 %276, 7
  %278 = add i64 %277, %273
  %279 = inttoptr i64 %278 to i32*
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = icmp eq i32 %280, %170
  br i1 %281, label %282, label %283

282:                                              ; preds = %275
  store atomic volatile i32 %171, i32* %279 monotonic, align 4
  br label %283

283:                                              ; preds = %50, %272, %275, %282, %166
  %284 = load i64, i64* %5, align 8
  %285 = add i64 %284, 11
  %286 = inttoptr i64 %285 to i32*
  store atomic volatile i32 0, i32* %286 monotonic, align 4
  ret void

287:                                              ; preds = %314, %174
  %288 = phi i64 [ 0, %174 ], [ %315, %314 ]
  %289 = phi i64 [ %175, %174 ], [ %316, %314 ]
  %290 = trunc i64 %288 to i32
  %291 = load i64, i64* %5, align 8
  %292 = shl i32 %290, 2
  %293 = add i32 %292, 12
  %294 = sext i32 %293 to i64
  %295 = add i64 %291, 7
  %296 = add i64 %295, %294
  %297 = inttoptr i64 %296 to i32*
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = icmp eq i32 %298, %170
  br i1 %299, label %300, label %301

300:                                              ; preds = %287
  store atomic volatile i32 %171, i32* %297 monotonic, align 4
  br label %301

301:                                              ; preds = %300, %287
  %302 = trunc i64 %288 to i32
  %303 = load i64, i64* %5, align 8
  %304 = shl i32 %302, 2
  %305 = or i32 %304, 4
  %306 = add i32 %305, 12
  %307 = sext i32 %306 to i64
  %308 = add i64 %303, 7
  %309 = add i64 %308, %307
  %310 = inttoptr i64 %309 to i32*
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = icmp eq i32 %311, %170
  br i1 %312, label %313, label %314

313:                                              ; preds = %301
  store atomic volatile i32 %171, i32* %310 monotonic, align 4
  br label %314

314:                                              ; preds = %313, %301
  %315 = add nuw nsw i64 %288, 2
  %316 = add i64 %289, -2
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %267, label %287
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable.1219"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::JSReceiver", align 8
  %7 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %2) #11
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.v8::internal::JSReceiver"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %14

14:                                               ; preds = %5, %10
  %15 = phi i64 [ %13, %10 ], [ %7, %5 ]
  %16 = trunc i64 %15 to i32
  %17 = ashr i32 %16, 1
  %18 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 15
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = ashr i32 %22, 1
  %24 = add nsw i32 %23, -1
  %25 = and i32 %17, %24
  %26 = zext i32 %25 to i64
  %27 = icmp sgt i32 %3, 1
  br i1 %27, label %28, label %41

28:                                               ; preds = %14, %33
  %29 = phi i64 [ %37, %33 ], [ %26, %14 ]
  %30 = phi i32 [ %36, %33 ], [ %25, %14 ]
  %31 = phi i32 [ %35, %33 ], [ 1, %14 ]
  %32 = icmp eq i64 %29, %4
  br i1 %32, label %41, label %33

33:                                               ; preds = %28
  %34 = add i32 %30, %31
  %35 = add nuw nsw i32 %31, 1
  %36 = and i32 %34, %24
  %37 = zext i32 %36 to i64
  %38 = icmp eq i32 %35, %3
  br i1 %38, label %39, label %28

39:                                               ; preds = %33
  %40 = zext i32 %36 to i64
  br label %41

41:                                               ; preds = %28, %39, %14
  %42 = phi i64 [ %26, %14 ], [ %40, %39 ], [ %4, %28 ]
  ret i64 %42
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1219"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [1 x %"class.v8::internal::Object"], align 8
  %6 = trunc i64 %1 to i32
  %7 = bitcast [1 x %"class.v8::internal::Object"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds [1 x %"class.v8::internal::Object"], [1 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = trunc i64 %2 to i32
  %10 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds [1 x %"class.v8::internal::Object"], [1 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  %12 = load i64, i64* %10, align 8
  %13 = and i64 %12, -4294967296
  %14 = shl i32 %6, 2
  %15 = add i32 %14, 12
  %16 = sext i32 %15 to i64
  %17 = add nsw i64 %16, 7
  %18 = add i64 %17, %12
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %13, %21
  store i64 %22, i64* %11, align 8
  %23 = shl i32 %9, 2
  %24 = add i32 %23, 12
  %25 = sext i32 %24 to i64
  %26 = add nsw i64 %25, 7
  %27 = add i64 %12, %26
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %13, %30
  store atomic volatile i32 %29, i32* %19 monotonic, align 4
  switch i32 %3, label %59 [
    i32 0, label %32
    i32 4, label %38
  ]

32:                                               ; preds = %4
  %33 = load i64, i64* %11, align 8
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, %26
  %36 = inttoptr i64 %35 to i32*
  %37 = trunc i64 %33 to i32
  store atomic volatile i32 %37, i32* %36 monotonic, align 4
  br label %123

38:                                               ; preds = %4
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, %17
  %41 = and i64 %30, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = load i64, i64* %11, align 8
  %45 = add i64 %39, %26
  %46 = inttoptr i64 %45 to i32*
  %47 = trunc i64 %44 to i32
  store atomic volatile i32 %47, i32* %46 monotonic, align 4
  br label %85

48:                                               ; preds = %38
  %49 = and i64 %39, -262144
  %50 = or i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 262144
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %48
  %56 = or i64 %49, 16
  %57 = inttoptr i64 %56 to %"class.v8::internal::Heap"**
  %58 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %57, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %58, i64 %39, i64 %40, i64 %31) #11
  br label %62

59:                                               ; preds = %4
  %60 = and i64 %30, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %59, %55, %48
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, %17
  %65 = and i64 %31, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %62
  %72 = and i64 %63, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 24
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %71
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %63, i64 %64, i64 %31) #11
  br label %79

79:                                               ; preds = %59, %62, %71, %78
  %80 = load i64, i64* %11, align 8
  %81 = load i64, i64* %10, align 8
  %82 = add i64 %81, %26
  %83 = inttoptr i64 %82 to i32*
  %84 = trunc i64 %80 to i32
  store atomic volatile i32 %84, i32* %83 monotonic, align 4
  switch i32 %3, label %102 [
    i32 0, label %123
    i32 4, label %85
  ]

85:                                               ; preds = %43, %79
  %86 = phi i64 [ %44, %43 ], [ %80, %79 ]
  %87 = load i64, i64* %10, align 8
  %88 = add i64 %87, %26
  %89 = and i64 %86, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %123, label %91

91:                                               ; preds = %85
  %92 = and i64 %87, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %105, label %98

98:                                               ; preds = %91
  %99 = or i64 %92, 16
  %100 = inttoptr i64 %99 to %"class.v8::internal::Heap"**
  %101 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %100, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %101, i64 %87, i64 %88, i64 %86) #11
  br label %105

102:                                              ; preds = %79
  %103 = and i64 %80, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %123, label %105

105:                                              ; preds = %102, %98, %91
  %106 = phi i64 [ %80, %102 ], [ %86, %98 ], [ %86, %91 ]
  %107 = load i64, i64* %10, align 8
  %108 = add i64 %107, %26
  %109 = and i64 %106, -262144
  %110 = or i64 %109, 8
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 24
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %105
  %116 = and i64 %107, -262144
  %117 = or i64 %116, 8
  %118 = inttoptr i64 %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = and i64 %119, 24
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %107, i64 %108, i64 %106) #11
  br label %123

123:                                              ; preds = %32, %79, %85, %102, %105, %115, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1219"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = add nsw i32 %2, 3
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1219"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = trunc i64 %2 to i32
  %9 = shl i32 %8, 2
  %10 = add i32 %9, 12
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 7
  %13 = add i64 %12, %6
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = getelementptr inbounds i64, i64* %1, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %15, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds i64, i64* %1, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %15, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %17, i64* %28, align 8
  br label %29

29:                                               ; preds = %22, %4, %27
  %30 = phi i1 [ true, %27 ], [ false, %22 ], [ false, %4 ]
  ret i1 %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable.1219"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 2
  %8 = add i32 %7, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %4
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1219"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = trunc i64 %2 to i32
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i32 %5, 2
  %9 = add i32 %8, 12
  %10 = sext i32 %9 to i64
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %7
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = zext i32 %14 to i64
  %18 = or i64 %17, %1
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %4
  %28 = and i64 %7, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = getelementptr inbounds i64, i64* %36, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %14, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %36, i64 5
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %14, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %18, i64* %47, align 8
  br label %48

48:                                               ; preds = %41, %35, %46
  %49 = phi i1 [ true, %46 ], [ false, %41 ], [ false, %35 ]
  ret i1 %49
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -3
  %3 = sext i32 %2 to i64
  ret i64 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable.1219"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable.1219"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = shl i32 %12, 2
  %15 = add i32 %14, 12
  %16 = sext i32 %15 to i64
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %49, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %25, %35, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %36, %35 ], [ %13, %25 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = shl i32 %43, 2
  %45 = add i32 %44, 12
  %46 = sext i32 %45 to i64
  %47 = add i64 %17, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %23
  br i1 %50, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable.1219"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = shl i32 %11, 2
  %14 = add i32 %13, 12
  %15 = sext i32 %14 to i64
  %16 = add i64 %5, 7
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %48, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %48, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %42, %27
  br i1 %31, label %46, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = shl i32 %36, 2
  %38 = add i32 %37, 12
  %39 = sext i32 %38 to i64
  %40 = add i64 %16, %39
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %22
  br i1 %43, label %44, label %29

44:                                               ; preds = %32
  %45 = zext i32 %36 to i64
  br label %48

46:                                               ; preds = %29
  %47 = zext i32 %36 to i64
  br label %48

48:                                               ; preds = %46, %24, %44, %3
  %49 = phi i64 [ %12, %3 ], [ %45, %44 ], [ %12, %24 ], [ %47, %46 ]
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %71, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 134217722
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = add nsw i32 %31, 3
  %51 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %53 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %51, i64* %52, i32 %50, i8 zeroext %49) #11
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i32*
  store atomic volatile i32 0, i32* %56 monotonic, align 4
  %57 = load i64, i64* %53, align 8
  %58 = add i64 %57, 11
  %59 = inttoptr i64 %58 to i32*
  store atomic volatile i32 0, i32* %59 monotonic, align 4
  %60 = load i64, i64* %53, align 8
  %61 = shl i32 %31, 1
  %62 = add i64 %60, 15
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 %61, i32* %63 monotonic, align 4
  %64 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = load i64, i64* %1, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %4, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %53, align 8
  call void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1219"* nonnull %67, i64 %69, i64 %70)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %71

71:                                               ; preds = %28, %48
  %72 = phi i64* [ %53, %48 ], [ %1, %28 ]
  ret i64* %72
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 134217722
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = add nsw i32 %17, 3
  %19 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %21 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %19, i64* %20, i32 %18, i8 zeroext %2) #11
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i32*
  store atomic volatile i32 0, i32* %24 monotonic, align 4
  %25 = load i64, i64* %21, align 8
  %26 = add i64 %25, 11
  %27 = inttoptr i64 %26 to i32*
  store atomic volatile i32 0, i32* %27 monotonic, align 4
  %28 = load i64, i64* %21, align 8
  %29 = shl i32 %17, 1
  %30 = add i64 %28, 15
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %29, i32* %31 monotonic, align 4
  ret i64* %21
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1219"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = and i64 %2, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %3, %11
  %16 = phi i32 [ 4, %3 ], [ %14, %11 ]
  %17 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %15
  %28 = and i64 %18, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = add i64 %18, 15
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = ashr i32 %39, 1
  %41 = sext i32 %40 to i64
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  %44 = add i64 %2, 7
  br label %139

45:                                               ; preds = %35
  %46 = and i64 %1, 4294967295
  %47 = icmp eq i64 %46, 0
  call void @llvm.assume(i1 %47) #11
  %48 = getelementptr inbounds i64, i64* %36, i64 4
  %49 = getelementptr inbounds i64, i64* %36, i64 5
  %50 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  %51 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = add i64 %2, 15
  %53 = inttoptr i64 %52 to i32*
  %54 = add i64 %2, 7
  %55 = icmp eq i32 %16, 0
  %56 = or i64 %5, 16
  %57 = inttoptr i64 %56 to %"class.v8::internal::Heap"**
  br i1 %55, label %58, label %149

58:                                               ; preds = %45, %137
  %59 = phi i64 [ %138, %137 ], [ %18, %45 ]
  %60 = phi i64 [ %135, %137 ], [ 0, %45 ]
  %61 = trunc i64 %60 to i32
  %62 = shl i32 %61, 2
  %63 = add i32 %62, 12
  %64 = sext i32 %63 to i64
  %65 = add nsw i64 %64, 7
  %66 = add i64 %59, %65
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %69, %1
  %71 = load i64, i64* %48, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %68, %72
  br i1 %73, label %134, label %74

74:                                               ; preds = %58
  %75 = load i64, i64* %49, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %68, %76
  br i1 %77, label %134, label %78

78:                                               ; preds = %74
  %79 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %70) #11
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store i64 %70, i64* %51, align 8
  %83 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %84

84:                                               ; preds = %82, %78
  %85 = phi i64 [ %83, %82 ], [ %79, %78 ]
  %86 = trunc i64 %85 to i32
  %87 = ashr i32 %86, 1
  %88 = load atomic i32, i32* %53 monotonic, align 4
  %89 = ashr i32 %88, 1
  %90 = add nsw i32 %89, -1
  %91 = and i32 %90, %87
  %92 = shl i32 %91, 2
  %93 = add i32 %92, 12
  %94 = sext i32 %93 to i64
  %95 = add i64 %54, %94
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = load i64, i64* %48, align 8
  %99 = trunc i64 %98 to i32
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %128, label %101

101:                                              ; preds = %84
  %102 = load i64, i64* %49, align 8
  %103 = trunc i64 %102 to i32
  br label %104

104:                                              ; preds = %115, %101
  %105 = phi i32 [ %97, %101 ], [ %124, %115 ]
  %106 = phi i32 [ %91, %101 ], [ %118, %115 ]
  %107 = phi i32 [ 1, %101 ], [ %116, %115 ]
  %108 = icmp eq i32 %105, %103
  br i1 %108, label %109, label %115

109:                                              ; preds = %104
  %110 = shl i32 %106, 2
  %111 = add i32 %110, 12
  %112 = sext i32 %111 to i64
  %113 = add i64 %54, %112
  %114 = inttoptr i64 %113 to i32*
  br label %128

115:                                              ; preds = %104
  %116 = add i32 %107, 1
  %117 = add i32 %107, %106
  %118 = and i32 %117, %90
  %119 = shl i32 %118, 2
  %120 = add i32 %119, 12
  %121 = sext i32 %120 to i64
  %122 = add i64 %54, %121
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = icmp eq i32 %124, %99
  br i1 %125, label %126, label %104

126:                                              ; preds = %115
  %127 = inttoptr i64 %122 to i32*
  br label %128

128:                                              ; preds = %126, %109, %84
  %129 = phi i32* [ %96, %84 ], [ %114, %109 ], [ %127, %126 ]
  %130 = load i64, i64* %17, align 8
  %131 = add i64 %130, %65
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  store atomic volatile i32 %133, i32* %129 monotonic, align 4
  br label %134

134:                                              ; preds = %128, %74, %58
  %135 = add i64 %60, 1
  %136 = icmp eq i64 %135, %41
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = load i64, i64* %17, align 8
  br label %58

139:                                              ; preds = %248, %134, %43
  %140 = phi i64 [ %44, %43 ], [ %54, %134 ], [ %54, %248 ]
  %141 = load i64, i64* %17, align 8
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i32*
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, -2
  %146 = inttoptr i64 %140 to i32*
  store atomic volatile i32 %145, i32* %146 monotonic, align 4
  %147 = add i64 %2, 11
  %148 = inttoptr i64 %147 to i32*
  store atomic volatile i32 0, i32* %148 monotonic, align 4
  ret void

149:                                              ; preds = %45, %251
  %150 = phi i64 [ %252, %251 ], [ %18, %45 ]
  %151 = phi i64 [ %249, %251 ], [ 0, %45 ]
  %152 = trunc i64 %151 to i32
  %153 = shl i32 %152, 2
  %154 = add i32 %153, 12
  %155 = sext i32 %154 to i64
  %156 = add nsw i64 %155, 7
  %157 = add i64 %150, %156
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %160, %1
  %162 = load i64, i64* %48, align 8
  %163 = trunc i64 %162 to i32
  %164 = icmp eq i32 %159, %163
  br i1 %164, label %248, label %165

165:                                              ; preds = %149
  %166 = load i64, i64* %49, align 8
  %167 = trunc i64 %166 to i32
  %168 = icmp eq i32 %159, %167
  br i1 %168, label %248, label %169

169:                                              ; preds = %165
  %170 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %161) #11
  %171 = and i64 %170, 1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store i64 %161, i64* %51, align 8
  %174 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %175

175:                                              ; preds = %169, %173
  %176 = phi i64 [ %174, %173 ], [ %170, %169 ]
  %177 = trunc i64 %176 to i32
  %178 = ashr i32 %177, 1
  %179 = load atomic i32, i32* %53 monotonic, align 4
  %180 = ashr i32 %179, 1
  %181 = add nsw i32 %180, -1
  %182 = and i32 %181, %178
  %183 = shl i32 %182, 2
  %184 = add i32 %183, 12
  %185 = sext i32 %184 to i64
  %186 = add i64 %54, %185
  %187 = inttoptr i64 %186 to i32*
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = load i64, i64* %48, align 8
  %190 = trunc i64 %189 to i32
  %191 = icmp eq i32 %188, %190
  br i1 %191, label %219, label %192

192:                                              ; preds = %175
  %193 = load i64, i64* %49, align 8
  %194 = trunc i64 %193 to i32
  br label %195

195:                                              ; preds = %206, %192
  %196 = phi i32 [ %188, %192 ], [ %215, %206 ]
  %197 = phi i32 [ %182, %192 ], [ %209, %206 ]
  %198 = phi i32 [ 1, %192 ], [ %207, %206 ]
  %199 = icmp eq i32 %196, %194
  br i1 %199, label %200, label %206

200:                                              ; preds = %195
  %201 = shl i32 %197, 2
  %202 = add i32 %201, 12
  %203 = sext i32 %202 to i64
  %204 = add i64 %54, %203
  %205 = inttoptr i64 %204 to i32*
  br label %219

206:                                              ; preds = %195
  %207 = add i32 %198, 1
  %208 = add i32 %198, %197
  %209 = and i32 %208, %181
  %210 = shl i32 %209, 2
  %211 = add i32 %210, 12
  %212 = sext i32 %211 to i64
  %213 = add i64 %54, %212
  %214 = inttoptr i64 %213 to i32*
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = icmp eq i32 %215, %190
  br i1 %216, label %217, label %195

217:                                              ; preds = %206
  %218 = inttoptr i64 %213 to i32*
  br label %219

219:                                              ; preds = %217, %200, %175
  %220 = phi i32* [ %187, %175 ], [ %205, %200 ], [ %218, %217 ]
  %221 = phi i64 [ %186, %175 ], [ %204, %200 ], [ %213, %217 ]
  %222 = load i64, i64* %17, align 8
  %223 = add i64 %222, %156
  %224 = inttoptr i64 %223 to i32*
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = zext i32 %225 to i64
  %227 = or i64 %226, %1
  store atomic volatile i32 %225, i32* %220 monotonic, align 4
  %228 = and i64 %226, 1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %248, label %230

230:                                              ; preds = %219
  %231 = load i64, i64* %7, align 8
  %232 = and i64 %231, 262144
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %230
  %235 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %57, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %235, i64 %2, i64 %221, i64 %227) #11
  br label %236

236:                                              ; preds = %234, %230
  %237 = and i64 %227, -262144
  %238 = or i64 %237, 8
  %239 = inttoptr i64 %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = and i64 %240, 24
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %248, label %243

243:                                              ; preds = %236
  %244 = load i64, i64* %7, align 8
  %245 = and i64 %244, 24
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %243
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %221, i64 %227) #11
  br label %248

248:                                              ; preds = %165, %219, %149, %247, %243, %236
  %249 = add i64 %151, 1
  %250 = icmp eq i64 %249, %41
  br i1 %250, label %139, label %251

251:                                              ; preds = %248
  %252 = load i64, i64* %17, align 8
  br label %149
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable.1219"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE11SetCapacityEi(%"class.v8::internal::HashTable.1219"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC2Ev(%"class.v8::internal::HashTable.1219"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC2Em(%"class.v8::internal::HashTable.1219"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1219", %"class.v8::internal::HashTable.1219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 134217722
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = add nsw i32 %16, 3
  %18 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %19 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 14
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %18, i64* %21, i32 %17, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = shl i32 %16, 1
  %31 = add i64 %29, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %30, i32* %32 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %78

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 134217722
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = add nuw nsw i32 %56, 3
  %58 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %60 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %58, i64* %59, i32 %57, i8 zeroext %46) #11
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 0, i32* %63 monotonic, align 4
  %64 = load i64, i64* %60, align 8
  %65 = add i64 %64, 11
  %66 = inttoptr i64 %65 to i32*
  store atomic volatile i32 0, i32* %66 monotonic, align 4
  %67 = load i64, i64* %60, align 8
  %68 = shl i32 %56, 1
  %69 = add i64 %67, 15
  %70 = inttoptr i64 %69 to i32*
  store atomic volatile i32 %68, i32* %70 monotonic, align 4
  %71 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = load i64, i64* %1, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %5, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %60, align 8
  call void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1219"* nonnull %74, i64 %76, i64 %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %78

78:                                               ; preds = %25, %55
  %79 = phi i64* [ %60, %55 ], [ %1, %25 ]
  ret i64* %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %81

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 134217722
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = add nuw nsw i32 %55, 3
  %57 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %58 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 14
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %57, i64* %60, i32 %56, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = shl i32 %55, 1
  %70 = add i64 %68, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %69, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashSet>::ObjectRef"* %5, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1219"* nonnull %75, i64 %79, i64 %80)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %81

81:                                               ; preds = %25, %54
  %82 = phi i64* [ %61, %54 ], [ %1, %25 ]
  ret i64* %82
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1222"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 19
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1222"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 19
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::HashTable.1222"*, i64, i64*, i64*, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 15
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = getelementptr inbounds i64, i64* %2, i64 4
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i32 %12, -1
  %16 = and i32 %15, %4
  %17 = shl i32 %16, 3
  %18 = add i32 %17, 12
  %19 = sext i32 %18 to i64
  %20 = add i64 %8, 7
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = trunc i64 %14 to i32
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %53, label %26

26:                                               ; preds = %5
  %27 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %28 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  br label %30

30:                                               ; preds = %26, %38
  %31 = phi i32 [ %23, %26 ], [ %49, %38 ]
  %32 = phi i32 [ %16, %26 ], [ %41, %38 ]
  %33 = phi i32 [ 1, %26 ], [ %39, %38 ]
  %34 = zext i32 %31 to i64
  %35 = or i64 %34, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load i64, i64* %3, align 8
  store i64 %36, i64* %28, align 8
  %37 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %29, i64 %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = add i32 %33, 1
  %40 = add i32 %32, %33
  %41 = and i32 %40, %15
  %42 = shl i32 %41, 3
  %43 = load i64, i64* %7, align 8
  %44 = add i32 %42, 12
  %45 = sext i32 %44 to i64
  %46 = add i64 %43, 7
  %47 = add i64 %46, %45
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %24
  br i1 %50, label %53, label %30

51:                                               ; preds = %30
  %52 = zext i32 %32 to i64
  br label %53

53:                                               ; preds = %38, %51, %5
  %54 = phi i64 [ -1, %5 ], [ %52, %51 ], [ -1, %38 ]
  ret i64 %54
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable.1222"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = shl i32 %4, 3
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i32 %5, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1222"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 8
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 262144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = and i64 %10, 24
  %15 = icmp eq i64 %14, 0
  %16 = select i1 %15, i32 4, i32 0
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ 4, %2 ], [ %16, %13 ]
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %34

27:                                               ; preds = %21, %17
  %28 = or i64 %7, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %25, %27
  %35 = phi i64* [ %33, %27 ], [ %26, %25 ]
  %36 = add i64 %6, 15
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = ashr i32 %38, 1
  %40 = zext i32 %39 to i64
  %41 = icmp eq i32 %39, 0
  %42 = and i64 %1, 4294967295
  %43 = icmp eq i64 %42, 0
  %44 = getelementptr inbounds i64, i64* %35, i64 4
  %45 = getelementptr inbounds i64, i64* %35, i64 5
  %46 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %34, %176
  %51 = phi i32 [ 1, %34 ], [ %178, %176 ]
  br i1 %41, label %283, label %52

52:                                               ; preds = %50
  call void @llvm.assume(i1 %43) #11
  %53 = icmp ugt i32 %51, 1
  br i1 %53, label %54, label %181

54:                                               ; preds = %52, %154
  %55 = phi i8 [ %156, %154 ], [ 1, %52 ]
  %56 = phi i64 [ %155, %154 ], [ 0, %52 ]
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %57, 3
  %59 = load i64, i64* %5, align 8
  %60 = add i32 %58, 12
  %61 = sext i32 %60 to i64
  %62 = add nsw i64 %61, 7
  %63 = add i64 %62, %59
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = load i64, i64* %44, align 8
  %69 = trunc i64 %68 to i32
  %70 = icmp eq i32 %65, %69
  br i1 %70, label %152, label %71

71:                                               ; preds = %54
  %72 = load i64, i64* %45, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %65, %73
  br i1 %74, label %152, label %75

75:                                               ; preds = %71
  %76 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %67) #11
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  store i64 %67, i64* %47, align 8
  %80 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %81

81:                                               ; preds = %79, %75
  %82 = phi i64 [ %80, %79 ], [ %76, %75 ]
  %83 = trunc i64 %82 to i32
  %84 = ashr i32 %83, 1
  %85 = load i64, i64* %5, align 8
  %86 = add i64 %85, 15
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = ashr i32 %88, 1
  %90 = add nsw i32 %89, -1
  %91 = and i32 %90, %84
  br label %92

92:                                               ; preds = %81, %97
  %93 = phi i32 [ %100, %97 ], [ %91, %81 ]
  %94 = phi i32 [ %99, %97 ], [ 1, %81 ]
  %95 = zext i32 %93 to i64
  %96 = icmp eq i64 %56, %95
  br i1 %96, label %161, label %97

97:                                               ; preds = %92
  %98 = add i32 %94, %93
  %99 = add nuw nsw i32 %94, 1
  %100 = and i32 %98, %90
  %101 = icmp eq i32 %99, %51
  br i1 %101, label %164, label %92

102:                                              ; preds = %161
  %103 = trunc i64 %162 to i32
  %104 = shl i32 %103, 3
  %105 = add i32 %104, 12
  %106 = sext i32 %105 to i64
  %107 = add i64 %85, 7
  %108 = add i64 %107, %106
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %111, %1
  %113 = load i64, i64* %44, align 8
  %114 = trunc i64 %113 to i32
  %115 = icmp eq i32 %110, %114
  br i1 %115, label %149, label %116

116:                                              ; preds = %102
  %117 = load i64, i64* %45, align 8
  %118 = trunc i64 %117 to i32
  %119 = icmp eq i32 %110, %118
  br i1 %119, label %149, label %120

120:                                              ; preds = %116
  %121 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %112) #11
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  store i64 %112, i64* %49, align 8
  %125 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %126

126:                                              ; preds = %124, %120
  %127 = phi i64 [ %125, %124 ], [ %121, %120 ]
  %128 = trunc i64 %127 to i32
  %129 = ashr i32 %128, 1
  %130 = load i64, i64* %5, align 8
  %131 = add i64 %130, 15
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = ashr i32 %133, 1
  %135 = add nsw i32 %134, -1
  %136 = and i32 %135, %129
  br label %137

137:                                              ; preds = %126, %142
  %138 = phi i32 [ %145, %142 ], [ %136, %126 ]
  %139 = phi i32 [ %144, %142 ], [ 1, %126 ]
  %140 = zext i32 %138 to i64
  %141 = icmp eq i64 %162, %140
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = add i32 %139, %138
  %144 = add nuw nsw i32 %139, 1
  %145 = and i32 %143, %135
  %146 = icmp eq i32 %144, %51
  br i1 %146, label %158, label %137

147:                                              ; preds = %137, %158
  %148 = add i64 %56, 1
  br label %154

149:                                              ; preds = %158, %116, %102
  call void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1222"* %0, i64 %56, i64 %162, i32 %18)
  br label %154

150:                                              ; preds = %161
  %151 = add i64 %56, 1
  br label %154

152:                                              ; preds = %71, %54
  %153 = add nuw i64 %56, 1
  br label %154

154:                                              ; preds = %152, %150, %149, %147
  %155 = phi i64 [ %153, %152 ], [ %151, %150 ], [ %56, %149 ], [ %148, %147 ]
  %156 = phi i8 [ %55, %152 ], [ %55, %150 ], [ %55, %149 ], [ 0, %147 ]
  %157 = icmp ult i64 %155, %40
  br i1 %157, label %54, label %176

158:                                              ; preds = %142
  %159 = zext i32 %145 to i64
  %160 = icmp eq i64 %162, %159
  br i1 %160, label %147, label %149

161:                                              ; preds = %92, %164
  %162 = phi i64 [ %165, %164 ], [ %56, %92 ]
  %163 = icmp eq i64 %56, %162
  br i1 %163, label %150, label %102

164:                                              ; preds = %97
  %165 = zext i32 %100 to i64
  br label %161

166:                                              ; preds = %176
  br i1 %41, label %283, label %167

167:                                              ; preds = %166
  %168 = load i64, i64* %44, align 8
  %169 = load i64, i64* %45, align 8
  %170 = trunc i64 %169 to i32
  %171 = trunc i64 %168 to i32
  %172 = and i64 %40, 1
  %173 = icmp eq i32 %39, 1
  br i1 %173, label %272, label %174

174:                                              ; preds = %167
  %175 = sub nsw i64 %40, %172
  br label %287

176:                                              ; preds = %263, %154
  %177 = phi i8 [ %156, %154 ], [ %265, %263 ]
  %178 = add nuw nsw i32 %51, 1
  %179 = and i8 %177, 1
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %50, label %166

181:                                              ; preds = %52, %263
  %182 = phi i8 [ %265, %263 ], [ 1, %52 ]
  %183 = phi i64 [ %264, %263 ], [ 0, %52 ]
  %184 = trunc i64 %183 to i32
  %185 = shl i32 %184, 3
  %186 = load i64, i64* %5, align 8
  %187 = add i32 %185, 12
  %188 = sext i32 %187 to i64
  %189 = add nsw i64 %188, 7
  %190 = add i64 %189, %186
  %191 = inttoptr i64 %190 to i32*
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %193, %1
  %195 = load i64, i64* %44, align 8
  %196 = trunc i64 %195 to i32
  %197 = icmp eq i32 %192, %196
  br i1 %197, label %202, label %198

198:                                              ; preds = %181
  %199 = load i64, i64* %45, align 8
  %200 = trunc i64 %199 to i32
  %201 = icmp eq i32 %192, %200
  br i1 %201, label %202, label %204

202:                                              ; preds = %198, %181
  %203 = add nuw i64 %183, 1
  br label %263

204:                                              ; preds = %198
  %205 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %194) #11
  %206 = and i64 %205, 1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  store i64 %194, i64* %47, align 8
  %209 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %210

210:                                              ; preds = %208, %204
  %211 = phi i64 [ %209, %208 ], [ %205, %204 ]
  %212 = trunc i64 %211 to i32
  %213 = ashr i32 %212, 1
  %214 = load i64, i64* %5, align 8
  %215 = add i64 %214, 15
  %216 = inttoptr i64 %215 to i32*
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = ashr i32 %217, 1
  %219 = add nsw i32 %218, -1
  %220 = and i32 %219, %213
  %221 = zext i32 %220 to i64
  %222 = icmp eq i64 %183, %221
  br i1 %222, label %223, label %225

223:                                              ; preds = %210
  %224 = add nuw i64 %183, 1
  br label %263

225:                                              ; preds = %210
  %226 = shl i32 %220, 3
  %227 = add i32 %226, 12
  %228 = sext i32 %227 to i64
  %229 = add i64 %214, 7
  %230 = add i64 %229, %228
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %233, %1
  %235 = load i64, i64* %44, align 8
  %236 = trunc i64 %235 to i32
  %237 = icmp eq i32 %232, %236
  br i1 %237, label %260, label %238

238:                                              ; preds = %225
  %239 = load i64, i64* %45, align 8
  %240 = trunc i64 %239 to i32
  %241 = icmp eq i32 %232, %240
  br i1 %241, label %260, label %242

242:                                              ; preds = %238
  %243 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %234) #11
  %244 = and i64 %243, 1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %242
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  store i64 %234, i64* %49, align 8
  %247 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %248

248:                                              ; preds = %246, %242
  %249 = phi i64 [ %247, %246 ], [ %243, %242 ]
  %250 = trunc i64 %249 to i32
  %251 = ashr i32 %250, 1
  %252 = load i64, i64* %5, align 8
  %253 = add i64 %252, 15
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = ashr i32 %255, 1
  %257 = add nsw i32 %256, -1
  %258 = and i32 %257, %251
  %259 = icmp eq i32 %258, %220
  br i1 %259, label %261, label %260

260:                                              ; preds = %248, %238, %225
  call void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1222"* %0, i64 %183, i64 %221, i32 %18)
  br label %263

261:                                              ; preds = %248
  %262 = add nuw i64 %183, 1
  br label %263

263:                                              ; preds = %223, %261, %260, %202
  %264 = phi i64 [ %203, %202 ], [ %224, %223 ], [ %183, %260 ], [ %262, %261 ]
  %265 = phi i8 [ %182, %202 ], [ %182, %223 ], [ %182, %260 ], [ 0, %261 ]
  %266 = icmp ult i64 %264, %40
  br i1 %266, label %181, label %176

267:                                              ; preds = %314
  %268 = trunc i64 %315 to i32
  %269 = shl i32 %268, 3
  %270 = or i32 %269, 12
  %271 = sext i32 %270 to i64
  br label %272

272:                                              ; preds = %267, %167
  %273 = phi i64 [ 12, %167 ], [ %271, %267 ]
  %274 = icmp eq i64 %172, 0
  br i1 %274, label %283, label %275

275:                                              ; preds = %272
  %276 = load i64, i64* %5, align 8
  %277 = add i64 %276, 7
  %278 = add i64 %277, %273
  %279 = inttoptr i64 %278 to i32*
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = icmp eq i32 %280, %170
  br i1 %281, label %282, label %283

282:                                              ; preds = %275
  store atomic volatile i32 %171, i32* %279 monotonic, align 4
  br label %283

283:                                              ; preds = %50, %272, %275, %282, %166
  %284 = load i64, i64* %5, align 8
  %285 = add i64 %284, 11
  %286 = inttoptr i64 %285 to i32*
  store atomic volatile i32 0, i32* %286 monotonic, align 4
  ret void

287:                                              ; preds = %314, %174
  %288 = phi i64 [ 0, %174 ], [ %315, %314 ]
  %289 = phi i64 [ %175, %174 ], [ %316, %314 ]
  %290 = trunc i64 %288 to i32
  %291 = shl i32 %290, 3
  %292 = load i64, i64* %5, align 8
  %293 = or i32 %291, 12
  %294 = sext i32 %293 to i64
  %295 = add i64 %292, 7
  %296 = add i64 %295, %294
  %297 = inttoptr i64 %296 to i32*
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = icmp eq i32 %298, %170
  br i1 %299, label %300, label %301

300:                                              ; preds = %287
  store atomic volatile i32 %171, i32* %297 monotonic, align 4
  br label %301

301:                                              ; preds = %300, %287
  %302 = trunc i64 %288 to i32
  %303 = shl i32 %302, 3
  %304 = or i32 %303, 8
  %305 = load i64, i64* %5, align 8
  %306 = add i32 %304, 12
  %307 = sext i32 %306 to i64
  %308 = add i64 %305, 7
  %309 = add i64 %308, %307
  %310 = inttoptr i64 %309 to i32*
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = icmp eq i32 %311, %170
  br i1 %312, label %313, label %314

313:                                              ; preds = %301
  store atomic volatile i32 %171, i32* %310 monotonic, align 4
  br label %314

314:                                              ; preds = %313, %301
  %315 = add nuw nsw i64 %288, 2
  %316 = add i64 %289, -2
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %267, label %287
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable.1222"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::JSReceiver", align 8
  %7 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %2) #11
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.v8::internal::JSReceiver"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %14

14:                                               ; preds = %5, %10
  %15 = phi i64 [ %13, %10 ], [ %7, %5 ]
  %16 = trunc i64 %15 to i32
  %17 = ashr i32 %16, 1
  %18 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 15
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = ashr i32 %22, 1
  %24 = add nsw i32 %23, -1
  %25 = and i32 %17, %24
  %26 = zext i32 %25 to i64
  %27 = icmp sgt i32 %3, 1
  br i1 %27, label %28, label %41

28:                                               ; preds = %14, %33
  %29 = phi i64 [ %37, %33 ], [ %26, %14 ]
  %30 = phi i32 [ %36, %33 ], [ %25, %14 ]
  %31 = phi i32 [ %35, %33 ], [ 1, %14 ]
  %32 = icmp eq i64 %29, %4
  br i1 %32, label %41, label %33

33:                                               ; preds = %28
  %34 = add i32 %30, %31
  %35 = add nuw nsw i32 %31, 1
  %36 = and i32 %34, %24
  %37 = zext i32 %36 to i64
  %38 = icmp eq i32 %35, %3
  br i1 %38, label %39, label %28

39:                                               ; preds = %33
  %40 = zext i32 %36 to i64
  br label %41

41:                                               ; preds = %28, %39, %14
  %42 = phi i64 [ %26, %14 ], [ %40, %39 ], [ %4, %28 ]
  ret i64 %42
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1222"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [2 x %"class.v8::internal::Object"], align 16
  %6 = bitcast [2 x %"class.v8::internal::Object"]* %5 to i8*
  %7 = trunc i64 %1 to i32
  %8 = shl i32 %7, 3
  %9 = trunc i64 %2 to i32
  %10 = shl i32 %9, 3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i32 %8, 12
  %15 = sext i32 %14 to i64
  %16 = add nsw i64 %15, 7
  %17 = add i64 %16, %12
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %13, %20
  %22 = getelementptr inbounds [2 x %"class.v8::internal::Object"], [2 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 %21, i64* %22, align 16
  %23 = shl i32 %7, 3
  %24 = add i32 %23, 16
  %25 = or i32 %24, 7
  %26 = sext i32 %25 to i64
  %27 = add i64 %12, %26
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %13, %30
  %32 = getelementptr inbounds [2 x %"class.v8::internal::Object"], [2 x %"class.v8::internal::Object"]* %5, i64 0, i64 1, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = add i32 %10, 12
  %34 = sext i32 %33 to i64
  %35 = add nsw i64 %34, 7
  %36 = add i64 %12, %35
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %13, %39
  store atomic volatile i32 %38, i32* %18 monotonic, align 4
  switch i32 %3, label %57 [
    i32 4, label %41
    i32 0, label %96
  ]

41:                                               ; preds = %4
  %42 = load i64, i64* %11, align 8
  %43 = add i64 %42, %16
  %44 = and i64 %39, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %77, label %46

46:                                               ; preds = %41
  %47 = and i64 %42, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 262144
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %46
  %54 = or i64 %47, 16
  %55 = inttoptr i64 %54 to %"class.v8::internal::Heap"**
  %56 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %55, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %56, i64 %42, i64 %43, i64 %40) #11
  br label %60

57:                                               ; preds = %4
  %58 = and i64 %39, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %77, label %60

60:                                               ; preds = %57, %53, %46
  %61 = load i64, i64* %11, align 8
  %62 = add i64 %61, %16
  %63 = and i64 %40, -262144
  %64 = or i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 24
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %60
  %70 = and i64 %61, -262144
  %71 = or i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 24
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %69
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %61, i64 %62, i64 %40) #11
  br label %77

77:                                               ; preds = %76, %69, %60, %57, %41
  %78 = load i64, i64* %11, align 8
  %79 = and i64 %78, -4294967296
  %80 = shl i32 %9, 3
  %81 = add i32 %80, 16
  %82 = or i32 %81, 7
  %83 = sext i32 %82 to i64
  %84 = add i64 %78, %83
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %79, %87
  %89 = shl i32 %7, 3
  %90 = add i32 %89, 16
  %91 = or i32 %90, 7
  %92 = sext i32 %91 to i64
  %93 = add i64 %78, %92
  %94 = inttoptr i64 %93 to i32*
  store atomic volatile i32 %86, i32* %94 monotonic, align 4
  %95 = icmp eq i32 %3, 4
  br i1 %95, label %191, label %213

96:                                               ; preds = %4
  %97 = load i64, i64* %11, align 8
  %98 = shl i32 %9, 3
  %99 = add i32 %98, 16
  %100 = or i32 %99, 7
  %101 = sext i32 %100 to i64
  %102 = add i64 %97, %101
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = shl i32 %7, 3
  %106 = add i32 %105, 16
  %107 = or i32 %106, 7
  %108 = sext i32 %107 to i64
  %109 = add i64 %97, %108
  %110 = inttoptr i64 %109 to i32*
  store atomic volatile i32 %104, i32* %110 monotonic, align 4
  %111 = load i64, i64* %22, align 16
  %112 = load i64, i64* %11, align 8
  %113 = add i64 %112, %35
  %114 = inttoptr i64 %113 to i32*
  %115 = trunc i64 %111 to i32
  store atomic volatile i32 %115, i32* %114 monotonic, align 4
  %116 = load i64, i64* %32, align 8
  %117 = shl i32 %9, 3
  %118 = add i32 %117, 16
  %119 = load i64, i64* %11, align 8
  %120 = or i32 %118, 7
  %121 = sext i32 %120 to i64
  %122 = add i64 %119, %121
  %123 = inttoptr i64 %122 to i32*
  %124 = trunc i64 %116 to i32
  store atomic volatile i32 %124, i32* %123 monotonic, align 4
  br label %233

125:                                              ; preds = %232, %225, %216, %213
  %126 = load i64, i64* %22, align 16
  %127 = load i64, i64* %11, align 8
  %128 = add i64 %127, %35
  %129 = inttoptr i64 %128 to i32*
  %130 = trunc i64 %126 to i32
  store atomic volatile i32 %130, i32* %129 monotonic, align 4
  %131 = icmp eq i32 %3, 4
  br i1 %131, label %132, label %159

132:                                              ; preds = %125, %196
  %133 = phi i64 [ %197, %196 ], [ %126, %125 ]
  %134 = load i64, i64* %11, align 8
  %135 = add i64 %134, %35
  %136 = and i64 %133, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %148

138:                                              ; preds = %132
  %139 = load i64, i64* %32, align 8
  %140 = shl i32 %9, 3
  %141 = add i32 %140, 16
  %142 = load i64, i64* %11, align 8
  %143 = or i32 %141, 7
  %144 = sext i32 %143 to i64
  %145 = add i64 %142, %144
  %146 = inttoptr i64 %145 to i32*
  %147 = trunc i64 %139 to i32
  store atomic volatile i32 %147, i32* %146 monotonic, align 4
  br label %234

148:                                              ; preds = %132
  %149 = and i64 %134, -262144
  %150 = or i64 %149, 8
  %151 = inttoptr i64 %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = and i64 %152, 262144
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %148
  %156 = or i64 %149, 16
  %157 = inttoptr i64 %156 to %"class.v8::internal::Heap"**
  %158 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %157, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %158, i64 %134, i64 %135, i64 %133) #11
  br label %162

159:                                              ; preds = %125
  %160 = and i64 %126, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %159, %155, %148
  %163 = phi i64 [ %126, %159 ], [ %133, %155 ], [ %133, %148 ]
  %164 = load i64, i64* %11, align 8
  %165 = add i64 %164, %35
  %166 = and i64 %163, -262144
  %167 = or i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, 24
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %162
  %173 = and i64 %164, -262144
  %174 = or i64 %173, 8
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = and i64 %176, 24
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %164, i64 %165, i64 %163) #11
  br label %180

180:                                              ; preds = %179, %172, %162, %159
  %181 = load i64, i64* %32, align 8
  %182 = shl i32 %9, 3
  %183 = add i32 %182, 16
  %184 = load i64, i64* %11, align 8
  %185 = or i32 %183, 7
  %186 = sext i32 %185 to i64
  %187 = add i64 %184, %186
  %188 = inttoptr i64 %187 to i32*
  %189 = trunc i64 %181 to i32
  store atomic volatile i32 %189, i32* %188 monotonic, align 4
  %190 = icmp eq i32 %3, 4
  br i1 %190, label %234, label %252

191:                                              ; preds = %77
  %192 = load i64, i64* %11, align 8
  %193 = add i64 %192, %92
  %194 = and i64 %87, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %202

196:                                              ; preds = %191
  %197 = load i64, i64* %22, align 16
  %198 = load i64, i64* %11, align 8
  %199 = add i64 %198, %35
  %200 = inttoptr i64 %199 to i32*
  %201 = trunc i64 %197 to i32
  store atomic volatile i32 %201, i32* %200 monotonic, align 4
  br label %132

202:                                              ; preds = %191
  %203 = and i64 %192, -262144
  %204 = or i64 %203, 8
  %205 = inttoptr i64 %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, 262144
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %216, label %209

209:                                              ; preds = %202
  %210 = or i64 %203, 16
  %211 = inttoptr i64 %210 to %"class.v8::internal::Heap"**
  %212 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %211, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %212, i64 %192, i64 %193, i64 %88) #11
  br label %216

213:                                              ; preds = %77
  %214 = and i64 %87, 1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %125, label %216

216:                                              ; preds = %202, %209, %213
  %217 = load i64, i64* %11, align 8
  %218 = add i64 %217, %92
  %219 = and i64 %88, -262144
  %220 = or i64 %219, 8
  %221 = inttoptr i64 %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %222, 24
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %125, label %225

225:                                              ; preds = %216
  %226 = and i64 %217, -262144
  %227 = or i64 %226, 8
  %228 = inttoptr i64 %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = and i64 %229, 24
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %125

232:                                              ; preds = %225
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %217, i64 %218, i64 %88) #11
  br label %125

233:                                              ; preds = %273, %266, %255, %252, %234, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void

234:                                              ; preds = %180, %138
  %235 = phi i64 [ %144, %138 ], [ %186, %180 ]
  %236 = phi i64 [ %139, %138 ], [ %181, %180 ]
  %237 = load i64, i64* %11, align 8
  %238 = add i64 %237, %235
  %239 = and i64 %236, 1
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %233, label %241

241:                                              ; preds = %234
  %242 = and i64 %237, -262144
  %243 = or i64 %242, 8
  %244 = inttoptr i64 %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = and i64 %245, 262144
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %255, label %248

248:                                              ; preds = %241
  %249 = or i64 %242, 16
  %250 = inttoptr i64 %249 to %"class.v8::internal::Heap"**
  %251 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %250, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %251, i64 %237, i64 %238, i64 %236) #11
  br label %255

252:                                              ; preds = %180
  %253 = and i64 %181, 1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %233, label %255

255:                                              ; preds = %241, %248, %252
  %256 = phi i64 [ %235, %241 ], [ %235, %248 ], [ %186, %252 ]
  %257 = phi i64 [ %236, %241 ], [ %236, %248 ], [ %181, %252 ]
  %258 = load i64, i64* %11, align 8
  %259 = add i64 %258, %256
  %260 = and i64 %257, -262144
  %261 = or i64 %260, 8
  %262 = inttoptr i64 %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = and i64 %263, 24
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %233, label %266

266:                                              ; preds = %255
  %267 = and i64 %258, -262144
  %268 = or i64 %267, 8
  %269 = inttoptr i64 %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = and i64 %270, 24
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %233

273:                                              ; preds = %266
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %258, i64 %259, i64 %257) #11
  br label %233
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1222"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = shl i32 %2, 1
  %4 = add nsw i32 %3, 3
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1222"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = trunc i64 %2 to i32
  %9 = shl i32 %8, 3
  %10 = add i32 %9, 12
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 7
  %13 = add i64 %12, %6
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = getelementptr inbounds i64, i64* %1, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %15, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds i64, i64* %1, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %15, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %17, i64* %28, align 8
  br label %29

29:                                               ; preds = %22, %4, %27
  %30 = phi i1 [ true, %27 ], [ false, %22 ], [ false, %4 ]
  ret i1 %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable.1222"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 3
  %8 = add i32 %7, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %4
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1222"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = trunc i64 %2 to i32
  %6 = shl i32 %5, 3
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i32 %6, 12
  %10 = sext i32 %9 to i64
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %8
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = zext i32 %14 to i64
  %18 = or i64 %17, %1
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %4
  %28 = and i64 %8, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = getelementptr inbounds i64, i64* %36, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %14, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %36, i64 5
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %14, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %18, i64* %47, align 8
  br label %48

48:                                               ; preds = %41, %35, %46
  %49 = phi i1 [ true, %46 ], [ false, %41 ], [ false, %35 ]
  ret i1 %49
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -3
  %3 = sdiv i32 %2, 2
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable.1222"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable.1222"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = shl i32 %12, 3
  %15 = add i32 %14, 12
  %16 = sext i32 %15 to i64
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %49, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %25, %35, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %36, %35 ], [ %13, %25 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = shl i32 %43, 3
  %45 = add i32 %44, 12
  %46 = sext i32 %45 to i64
  %47 = add i64 %17, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %23
  br i1 %50, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable.1222"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = shl i32 %11, 3
  %14 = add i32 %13, 12
  %15 = sext i32 %14 to i64
  %16 = add i64 %5, 7
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %48, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %48, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %42, %27
  br i1 %31, label %46, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = shl i32 %36, 3
  %38 = add i32 %37, 12
  %39 = sext i32 %38 to i64
  %40 = add i64 %16, %39
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %22
  br i1 %43, label %44, label %29

44:                                               ; preds = %32
  %45 = zext i32 %36 to i64
  br label %48

46:                                               ; preds = %29
  %47 = zext i32 %36 to i64
  br label %48

48:                                               ; preds = %46, %24, %44, %3
  %49 = phi i64 [ %12, %3 ], [ %45, %44 ], [ %12, %24 ], [ %47, %46 ]
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %71, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 67108861
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = shl i32 %31, 1
  %51 = add nsw i32 %50, 3
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %54 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %52, i64* %53, i32 %51, i8 zeroext %49) #11
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i32*
  store atomic volatile i32 0, i32* %57 monotonic, align 4
  %58 = load i64, i64* %54, align 8
  %59 = add i64 %58, 11
  %60 = inttoptr i64 %59 to i32*
  store atomic volatile i32 0, i32* %60 monotonic, align 4
  %61 = load i64, i64* %54, align 8
  %62 = add i64 %61, 15
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 %50, i32* %63 monotonic, align 4
  %64 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = load i64, i64* %1, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %54, align 8
  call void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1222"* nonnull %67, i64 %69, i64 %70)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %71

71:                                               ; preds = %28, %48
  %72 = phi i64* [ %54, %48 ], [ %1, %28 ]
  ret i64* %72
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 67108861
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = shl i32 %17, 1
  %19 = add nsw i32 %18, 3
  %20 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %20, i64* %21, i32 %19, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = add i64 %29, 15
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %18, i32* %31 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1222"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = and i64 %2, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %3, %11
  %16 = phi i32 [ 4, %3 ], [ %14, %11 ]
  %17 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %15
  %28 = and i64 %18, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = add i64 %18, 15
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = ashr i32 %39, 1
  %41 = sext i32 %40 to i64
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  %44 = add i64 %2, 7
  br label %58

45:                                               ; preds = %35
  %46 = and i64 %1, 4294967295
  %47 = icmp eq i64 %46, 0
  call void @llvm.assume(i1 %47) #11
  %48 = getelementptr inbounds i64, i64* %36, i64 4
  %49 = getelementptr inbounds i64, i64* %36, i64 5
  %50 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  %51 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = add i64 %2, 15
  %53 = inttoptr i64 %52 to i32*
  %54 = add i64 %2, 7
  %55 = icmp eq i32 %16, 0
  %56 = or i64 %5, 16
  %57 = inttoptr i64 %56 to %"class.v8::internal::Heap"**
  br label %68

58:                                               ; preds = %207, %43
  %59 = phi i64 [ %44, %43 ], [ %54, %207 ]
  %60 = phi i64 [ %18, %43 ], [ %210, %207 ]
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, -2
  %65 = inttoptr i64 %59 to i32*
  store atomic volatile i32 %64, i32* %65 monotonic, align 4
  %66 = add i64 %2, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  ret void

68:                                               ; preds = %207, %45
  %69 = phi i64 [ %18, %45 ], [ %210, %207 ]
  %70 = phi i64 [ 0, %45 ], [ %208, %207 ]
  %71 = trunc i64 %70 to i32
  %72 = shl i32 %71, 3
  %73 = add i32 %72, 12
  %74 = sext i32 %73 to i64
  %75 = add nsw i64 %74, 7
  %76 = add i64 %69, %75
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %79, %1
  %81 = load i64, i64* %48, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %207, label %84

84:                                               ; preds = %68
  %85 = load i64, i64* %49, align 8
  %86 = trunc i64 %85 to i32
  %87 = icmp eq i32 %78, %86
  br i1 %87, label %207, label %88

88:                                               ; preds = %84
  %89 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %80) #11
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store i64 %80, i64* %51, align 8
  %93 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %94

94:                                               ; preds = %88, %92
  %95 = phi i64 [ %93, %92 ], [ %89, %88 ]
  %96 = trunc i64 %95 to i32
  %97 = ashr i32 %96, 1
  %98 = load atomic i32, i32* %53 monotonic, align 4
  %99 = ashr i32 %98, 1
  %100 = add nsw i32 %99, -1
  %101 = and i32 %100, %97
  %102 = shl i32 %101, 3
  %103 = add i32 %102, 12
  %104 = sext i32 %103 to i64
  %105 = add i64 %54, %104
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = load i64, i64* %48, align 8
  %109 = trunc i64 %108 to i32
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %130, label %111

111:                                              ; preds = %94
  %112 = load i64, i64* %49, align 8
  %113 = trunc i64 %112 to i32
  br label %114

114:                                              ; preds = %119, %111
  %115 = phi i32 [ %107, %111 ], [ %128, %119 ]
  %116 = phi i32 [ %101, %111 ], [ %122, %119 ]
  %117 = phi i32 [ 1, %111 ], [ %120, %119 ]
  %118 = icmp eq i32 %115, %113
  br i1 %118, label %130, label %119

119:                                              ; preds = %114
  %120 = add i32 %117, 1
  %121 = add i32 %117, %116
  %122 = and i32 %121, %100
  %123 = shl i32 %122, 3
  %124 = add i32 %123, 12
  %125 = sext i32 %124 to i64
  %126 = add i64 %54, %125
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = icmp eq i32 %128, %109
  br i1 %129, label %130, label %114

130:                                              ; preds = %119, %114, %94
  %131 = phi i32 [ %101, %94 ], [ %122, %119 ], [ %116, %114 ]
  %132 = shl i32 %131, 3
  %133 = load i64, i64* %17, align 8
  %134 = add i64 %133, %75
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %137, %1
  %139 = add i32 %132, 12
  %140 = sext i32 %139 to i64
  %141 = add i64 %54, %140
  %142 = inttoptr i64 %141 to i32*
  store atomic volatile i32 %136, i32* %142 monotonic, align 4
  %143 = and i64 %137, 1
  %144 = icmp eq i64 %143, 0
  %145 = or i1 %55, %144
  br i1 %145, label %164, label %146

146:                                              ; preds = %130
  %147 = load i64, i64* %7, align 8
  %148 = and i64 %147, 262144
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %57, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %151, i64 %2, i64 %141, i64 %138) #11
  br label %152

152:                                              ; preds = %150, %146
  %153 = and i64 %138, -262144
  %154 = or i64 %153, 8
  %155 = inttoptr i64 %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = and i64 %156, 24
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %164, label %159

159:                                              ; preds = %152
  %160 = load i64, i64* %7, align 8
  %161 = and i64 %160, 24
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %159
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %141, i64 %138) #11
  br label %164

164:                                              ; preds = %130, %152, %159, %163
  %165 = load i64, i64* %17, align 8
  %166 = shl i32 %71, 3
  %167 = add i32 %166, 16
  %168 = or i32 %167, 7
  %169 = sext i32 %168 to i64
  %170 = add i64 %165, %169
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  br i1 %55, label %183, label %173

173:                                              ; preds = %164
  %174 = zext i32 %172 to i64
  %175 = or i64 %174, %1
  %176 = shl i32 %131, 3
  %177 = add i32 %176, 16
  %178 = sext i32 %177 to i64
  %179 = add i64 %54, %178
  %180 = inttoptr i64 %179 to i32*
  store atomic volatile i32 %172, i32* %180 monotonic, align 4
  %181 = and i64 %174, 1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %207, label %189

183:                                              ; preds = %164
  %184 = shl i32 %131, 3
  %185 = add i32 %184, 16
  %186 = sext i32 %185 to i64
  %187 = add i64 %54, %186
  %188 = inttoptr i64 %187 to i32*
  store atomic volatile i32 %172, i32* %188 monotonic, align 4
  br label %207

189:                                              ; preds = %173
  %190 = load i64, i64* %7, align 8
  %191 = and i64 %190, 262144
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %189
  %194 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %57, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %194, i64 %2, i64 %179, i64 %175) #11
  br label %195

195:                                              ; preds = %189, %193
  %196 = and i64 %175, -262144
  %197 = or i64 %196, 8
  %198 = inttoptr i64 %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = and i64 %199, 24
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %207, label %202

202:                                              ; preds = %195
  %203 = load i64, i64* %7, align 8
  %204 = and i64 %203, 24
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %202
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %179, i64 %175) #11
  br label %207

207:                                              ; preds = %206, %202, %195, %173, %183, %84, %68
  %208 = add i64 %70, 1
  %209 = icmp eq i64 %208, %41
  %210 = load i64, i64* %17, align 8
  br i1 %209, label %58, label %68
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable.1222"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE11SetCapacityEi(%"class.v8::internal::HashTable.1222"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC2Ev(%"class.v8::internal::HashTable.1222"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC2Em(%"class.v8::internal::HashTable.1222"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1222", %"class.v8::internal::HashTable.1222"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 67108861
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = shl i32 %16, 1
  %18 = add nsw i32 %17, 3
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %20 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 14
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %19, i64* %22, i32 %18, i8 zeroext %2) #11
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 0, i32* %26 monotonic, align 4
  %27 = load i64, i64* %23, align 8
  %28 = add i64 %27, 11
  %29 = inttoptr i64 %28 to i32*
  store atomic volatile i32 0, i32* %29 monotonic, align 4
  %30 = load i64, i64* %23, align 8
  %31 = add i64 %30, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %17, i32* %32 monotonic, align 4
  ret i64* %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %78

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 67108861
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = shl i32 %56, 1
  %58 = add nuw nsw i32 %57, 3
  %59 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %59, i64* %60, i32 %58, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = add i64 %68, 15
  %70 = inttoptr i64 %69 to i32*
  store atomic volatile i32 %57, i32* %70 monotonic, align 4
  %71 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = load i64, i64* %1, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1222"* nonnull %74, i64 %76, i64 %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %78

78:                                               ; preds = %25, %55
  %79 = phi i64* [ %61, %55 ], [ %1, %25 ]
  ret i64* %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %81

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 67108861
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = shl i32 %55, 1
  %57 = add nuw nsw i32 %56, 3
  %58 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %59 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 14
  %62 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %58, i64* %61, i32 %57, i8 zeroext %46) #11
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i32*
  store atomic volatile i32 0, i32* %65 monotonic, align 4
  %66 = load i64, i64* %62, align 8
  %67 = add i64 %66, 11
  %68 = inttoptr i64 %67 to i32*
  store atomic volatile i32 0, i32* %68 monotonic, align 4
  %69 = load i64, i64* %62, align 8
  %70 = add i64 %69, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %56, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %62, align 8
  call void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1222"* nonnull %75, i64 %79, i64 %80)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %81

81:                                               ; preds = %25, %54
  %82 = phi i64* [ %62, %54 ], [ %1, %25 ]
  ret i64* %82
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::ObjectHashTableBase"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase", %"class.v8::internal::ObjectHashTableBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %8 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 1, i64 0
  br label %23

15:                                               ; preds = %9, %2
  %16 = and i64 %5, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %23

23:                                               ; preds = %13, %15
  %24 = phi i64* [ %22, %15 ], [ %14, %13 ]
  %25 = load i64, i64* %1, align 8
  %26 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %25) #11
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %31, align 8
  %32 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %33

33:                                               ; preds = %23, %29
  %34 = phi i64 [ %32, %29 ], [ %26, %23 ]
  %35 = getelementptr inbounds i64, i64* %24, i64 4
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %34 to i32
  %38 = trunc i64 %36 to i32
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds i64, i64* %24, i64 5
  %42 = load i64, i64* %41, align 8
  br label %46

43:                                               ; preds = %33
  %44 = ashr i32 %37, 1
  %45 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase"* %0, i64 %6, i64* %1, i32 %44)
  br label %46

46:                                               ; preds = %43, %40
  %47 = phi i64 [ %42, %40 ], [ %45, %43 ]
  ret i64 %47
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %6 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase", %"class.v8::internal::ObjectHashTableBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %9 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 1, i64 0
  br label %24

16:                                               ; preds = %10, %4
  %17 = and i64 %7, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 16
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %24

24:                                               ; preds = %14, %16
  %25 = phi i64* [ %23, %16 ], [ %15, %14 ]
  %26 = add i64 %7, 15
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = ashr i32 %28, 1
  %30 = getelementptr inbounds i64, i64* %25, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i32 %29, -1
  %33 = and i32 %32, %3
  %34 = shl i32 %33, 3
  %35 = add i32 %34, 12
  %36 = sext i32 %35 to i64
  %37 = add i64 %7, 7
  %38 = add i64 %37, %36
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = trunc i64 %31 to i32
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %68, label %43

43:                                               ; preds = %24
  %44 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5 to i8*
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0
  br label %47

47:                                               ; preds = %55, %43
  %48 = phi i32 [ %40, %43 ], [ %66, %55 ]
  %49 = phi i32 [ %33, %43 ], [ %58, %55 ]
  %50 = phi i32 [ 1, %43 ], [ %56, %55 ]
  %51 = zext i32 %48 to i64
  %52 = or i64 %51, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %53 = load i64, i64* %2, align 8
  store i64 %53, i64* %45, align 8
  %54 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %46, i64 %52) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  br i1 %54, label %71, label %55

55:                                               ; preds = %47
  %56 = add i32 %50, 1
  %57 = add i32 %50, %49
  %58 = and i32 %57, %32
  %59 = shl i32 %58, 3
  %60 = load i64, i64* %6, align 8
  %61 = add i32 %59, 12
  %62 = sext i32 %61 to i64
  %63 = add nsw i64 %62, 7
  %64 = add i64 %63, %60
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = icmp eq i32 %66, %41
  br i1 %67, label %68, label %47

68:                                               ; preds = %55, %24
  %69 = getelementptr inbounds i64, i64* %25, i64 5
  %70 = load i64, i64* %69, align 8
  br label %83

71:                                               ; preds = %47
  %72 = load i64, i64* %6, align 8
  %73 = and i64 %72, -4294967296
  %74 = shl i32 %49, 3
  %75 = add i32 %74, 16
  %76 = or i32 %75, 7
  %77 = sext i32 %76 to i64
  %78 = add i64 %72, %77
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %73, %81
  br label %83

83:                                               ; preds = %71, %68
  %84 = phi i64 [ %70, %68 ], [ %82, %71 ]
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase", %"class.v8::internal::ObjectHashTableBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = tail call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase"* %0, i64 %6, i64* %1, i32 %2)
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 %3, 3
  %5 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase", %"class.v8::internal::ObjectHashTableBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i32 %4, 16
  %9 = or i32 %8, 7
  %10 = sext i32 %9 to i64
  %11 = add i64 %6, %10
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %7, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE17EntryToValueIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = shl i32 %2, 1
  %4 = add nsw i32 %3, 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE20FillEntriesWithHolesENS0_6HandleIS2_EE(i64*) local_unnamed_addr #0 comdat align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = add i64 %2, 3
  %4 = inttoptr i64 %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 7
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = lshr i32 %5, 1
  %9 = zext i32 %8 to i64
  br label %11

10:                                               ; preds = %30, %1
  ret void

11:                                               ; preds = %43, %7
  %12 = phi i64 [ %2, %7 ], [ %44, %43 ]
  %13 = phi i64 [ 3, %7 ], [ %41, %43 ]
  %14 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %15 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %14, i64 0, i32 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %14, i64 0, i32 1, i64 0
  br label %30

22:                                               ; preds = %16, %11
  %23 = and i64 %12, -262144
  %24 = or i64 %23, 16
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 16
  %27 = add i64 %26, -41416
  %28 = inttoptr i64 %27 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %30

30:                                               ; preds = %20, %22
  %31 = phi i64* [ %29, %22 ], [ %21, %20 ]
  %32 = getelementptr inbounds i64, i64* %31, i64 5
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %13 to i32
  %35 = shl i32 %34, 2
  %36 = sext i32 %35 to i64
  %37 = add nsw i64 %36, 7
  %38 = add i64 %37, %12
  %39 = inttoptr i64 %38 to i32*
  %40 = trunc i64 %33 to i32
  store atomic volatile i32 %40, i32* %39 monotonic, align 4
  %41 = add nuw nsw i64 %13, 1
  %42 = icmp ult i64 %41, %9
  br i1 %42, label %43, label %10

43:                                               ; preds = %30
  %44 = load i64, i64* %0, align 8
  br label %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_(i64*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = inttoptr i64 %6 to %"class.v8::internal::BasicMemoryChunk"*
  %8 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %7, i64 0, i32 2
  %9 = bitcast %"class.v8::internal::Heap"** %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = load i64, i64* %1, align 8
  %14 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %13) #11
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %19, align 8
  %20 = call i64 @_ZN2v88internal10JSReceiver23GetOrCreateIdentityHashEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nonnull %4, %"class.v8::internal::Isolate"* %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %21

21:                                               ; preds = %3, %17
  %22 = phi i64 [ %20, %17 ], [ %14, %3 ]
  %23 = trunc i64 %22 to i32
  %24 = ashr i32 %23, 1
  %25 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEESA_i(%"class.v8::internal::Isolate"* %12, i64* %0, i64* %1, i64* %2, i32 %24)
  ret i64* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6Object15GetOrCreateHashEPNS0_7IsolateE(%"class.v8::internal::Object"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %5)
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = call i64 @_ZN2v88internal10JSReceiver23GetOrCreateIdentityHashEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nonnull %3, %"class.v8::internal::Isolate"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i64 [ %13, %9 ], [ %6, %2 ]
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE3PutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEESA_i(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", align 8
  %10 = load i64, i64* %1, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, 15
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = ashr i32 %15, 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i32 %16, -1
  %20 = and i32 %19, %4
  %21 = shl i32 %20, 3
  %22 = add i32 %21, 12
  %23 = sext i32 %22 to i64
  %24 = add i64 %10, 7
  %25 = add i64 %24, %23
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = trunc i64 %18 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %91, label %30

30:                                               ; preds = %5
  %31 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %32 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  br label %34

34:                                               ; preds = %42, %30
  %35 = phi i32 [ %27, %30 ], [ %51, %42 ]
  %36 = phi i32 [ %20, %30 ], [ %45, %42 ]
  %37 = phi i32 [ 1, %30 ], [ %43, %42 ]
  %38 = zext i32 %35 to i64
  %39 = or i64 %12, %38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  %40 = load i64, i64* %2, align 8
  store i64 %40, i64* %32, align 8
  %41 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %33, i64 %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br i1 %41, label %53, label %42

42:                                               ; preds = %34
  %43 = add i32 %37, 1
  %44 = add i32 %37, %36
  %45 = and i32 %44, %19
  %46 = shl i32 %45, 3
  %47 = add i32 %46, 12
  %48 = sext i32 %47 to i64
  %49 = add i64 %24, %48
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = icmp eq i32 %51, %28
  br i1 %52, label %88, label %34

53:                                               ; preds = %34
  %54 = load i64, i64* %1, align 8
  %55 = shl i32 %36, 3
  %56 = load i64, i64* %3, align 8
  %57 = add i32 %55, 16
  %58 = or i32 %57, 7
  %59 = sext i32 %58 to i64
  %60 = add i64 %54, %59
  %61 = inttoptr i64 %60 to i32*
  %62 = trunc i64 %56 to i32
  store atomic volatile i32 %62, i32* %61 monotonic, align 4
  %63 = and i64 %56, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %201, label %65

65:                                               ; preds = %53
  %66 = and i64 %54, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 262144
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %65
  %73 = or i64 %66, 16
  %74 = inttoptr i64 %73 to %"class.v8::internal::Heap"**
  %75 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %74, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %75, i64 %54, i64 %60, i64 %56) #11
  br label %76

76:                                               ; preds = %72, %65
  %77 = and i64 %56, -262144
  %78 = or i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 24
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %201, label %83

83:                                               ; preds = %76
  %84 = load i64, i64* %68, align 8
  %85 = and i64 %84, 24
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %201

87:                                               ; preds = %83
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %54, i64 %60, i64 %56) #11
  br label %201

88:                                               ; preds = %42
  %89 = load i64, i64* %1, align 8
  %90 = add i64 %89, 7
  br label %91

91:                                               ; preds = %88, %5
  %92 = phi i64 [ %90, %88 ], [ %24, %5 ]
  %93 = phi i64 [ %89, %88 ], [ %10, %5 ]
  %94 = add i64 %93, 11
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, -2
  %98 = inttoptr i64 %92 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = ashr i32 %99, 1
  %101 = icmp sgt i32 %97, %100
  br i1 %101, label %102, label %112

102:                                              ; preds = %91
  %103 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  %104 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %93, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %11, align 8
  call void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1222"* nonnull %105, i64 %106)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  %107 = load i64, i64* %1, align 8
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i32*
  %110 = add i64 %107, 11
  %111 = inttoptr i64 %110 to i32*
  br label %112

112:                                              ; preds = %102, %91
  %113 = phi i32* [ %111, %102 ], [ %95, %91 ]
  %114 = phi i32* [ %109, %102 ], [ %98, %91 ]
  %115 = phi i64 [ %107, %102 ], [ %93, %91 ]
  %116 = add i64 %115, 15
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = ashr i32 %118, 1
  %120 = load atomic i32, i32* %114 monotonic, align 4
  %121 = ashr i32 %120, 1
  %122 = load atomic i32, i32* %113 monotonic, align 4
  %123 = add nsw i32 %121, 1
  %124 = icmp sgt i32 %119, %123
  br i1 %124, label %125, label %134

125:                                              ; preds = %112
  %126 = ashr i32 %122, 1
  %127 = sub nsw i32 %119, %123
  %128 = sdiv i32 %127, 2
  %129 = icmp slt i32 %128, %126
  br i1 %129, label %134, label %130

130:                                              ; preds = %125
  %131 = sdiv i32 %123, 2
  %132 = add nsw i32 %131, %123
  %133 = icmp sgt i32 %132, %119
  br i1 %133, label %134, label %149

134:                                              ; preds = %130, %125, %112
  %135 = load atomic i32, i32* %114 monotonic, align 4
  %136 = add i32 %135, 2
  %137 = and i32 %136, -2
  %138 = ashr i32 %136, 1
  %139 = add nsw i32 %138, %137
  %140 = call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %139) #11
  %141 = icmp sgt i32 %140, 67108861
  br i1 %141, label %142, label %149

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  call void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %143, i32 0, i32 10, i32 0) #11
  call void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %143, i32 0, i32 10, i32 0) #11
  %144 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #11
  %145 = load i64, i64* %1, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0
  %148 = load i64, i64* %11, align 8
  call void @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1222"* nonnull %147, i64 %148)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #11
  br label %149

149:                                              ; preds = %130, %134, %142
  %150 = call i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %151 = bitcast %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #11
  %152 = load i64, i64* %150, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ObjectHashTable>::ObjectRef"* %9, i64 0, i32 0, i32 0
  %155 = load i64, i64* %150, align 8
  %156 = add i64 %155, 15
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = ashr i32 %158, 1
  %160 = add nsw i32 %159, -1
  %161 = and i32 %160, %4
  %162 = zext i32 %161 to i64
  %163 = shl i32 %161, 3
  %164 = add i32 %163, 12
  %165 = sext i32 %164 to i64
  %166 = add i64 %155, 7
  %167 = add i64 %166, %165
  %168 = inttoptr i64 %167 to i32*
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = load i64, i64* %17, align 8
  %171 = trunc i64 %170 to i32
  %172 = icmp eq i32 %169, %171
  br i1 %172, label %197, label %173

173:                                              ; preds = %149
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %175 = load i64, i64* %174, align 8
  %176 = trunc i64 %175 to i32
  %177 = icmp eq i32 %169, %176
  br i1 %177, label %197, label %181

178:                                              ; preds = %181
  %179 = add i32 %182, 1
  %180 = icmp eq i32 %191, %176
  br i1 %180, label %195, label %181

181:                                              ; preds = %173, %178
  %182 = phi i32 [ %179, %178 ], [ 1, %173 ]
  %183 = phi i32 [ %185, %178 ], [ %161, %173 ]
  %184 = add i32 %183, %182
  %185 = and i32 %184, %160
  %186 = shl i32 %185, 3
  %187 = add i32 %186, 12
  %188 = sext i32 %187 to i64
  %189 = add i64 %166, %188
  %190 = inttoptr i64 %189 to i32*
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = icmp eq i32 %191, %171
  br i1 %192, label %193, label %178

193:                                              ; preds = %181
  %194 = zext i32 %185 to i64
  br label %197

195:                                              ; preds = %178
  %196 = zext i32 %185 to i64
  br label %197

197:                                              ; preds = %149, %173, %193, %195
  %198 = phi i64 [ %162, %149 ], [ %194, %193 ], [ %162, %173 ], [ %196, %195 ]
  %199 = load i64, i64* %2, align 8
  %200 = load i64, i64* %3, align 8
  call void @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE8AddEntryENS0_13InternalIndexENS0_6ObjectES6_(%"class.v8::internal::ObjectHashTableBase"* nonnull %154, i64 %198, i64 %199, i64 %200)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #11
  br label %201

201:                                              ; preds = %87, %83, %76, %53, %197
  %202 = phi i64* [ %150, %197 ], [ %1, %53 ], [ %1, %76 ], [ %1, %83 ], [ %1, %87 ]
  ret i64* %202
}

declare void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE8AddEntryENS0_13InternalIndexENS0_6ObjectES6_(%"class.v8::internal::ObjectHashTableBase"*, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %1 to i32
  %6 = shl i32 %5, 3
  %7 = add i32 %6, 12
  %8 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase", %"class.v8::internal::ObjectHashTableBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sext i32 %7 to i64
  %11 = add nsw i64 %10, 7
  %12 = add i64 %9, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  %15 = load i64, i64* %8, align 8
  %16 = add i64 %15, %11
  %17 = and i64 %2, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %50, label %19

19:                                               ; preds = %4
  %20 = and i64 %15, -262144
  %21 = or i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 262144
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = or i64 %20, 16
  %28 = inttoptr i64 %27 to %"class.v8::internal::Heap"**
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %29, i64 %15, i64 %16, i64 %2) #11
  %30 = load i64, i64* %8, align 8
  %31 = add i64 %30, %11
  br label %32

32:                                               ; preds = %26, %19
  %33 = phi i64 [ %16, %19 ], [ %31, %26 ]
  %34 = phi i64 [ %15, %19 ], [ %30, %26 ]
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %32
  %42 = and i64 %34, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %34, i64 %33, i64 %2) #11
  %49 = load i64, i64* %8, align 8
  br label %50

50:                                               ; preds = %4, %32, %41, %48
  %51 = phi i64 [ %15, %4 ], [ %34, %32 ], [ %34, %41 ], [ %49, %48 ]
  %52 = add i32 %6, 16
  %53 = or i32 %52, 7
  %54 = sext i32 %53 to i64
  %55 = add i64 %51, %54
  %56 = inttoptr i64 %55 to i32*
  %57 = trunc i64 %3 to i32
  store atomic volatile i32 %57, i32* %56 monotonic, align 4
  %58 = load i64, i64* %8, align 8
  %59 = add i64 %58, %54
  %60 = and i64 %3, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %93, label %62

62:                                               ; preds = %50
  %63 = and i64 %58, -262144
  %64 = or i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 262144
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %62
  %70 = or i64 %63, 16
  %71 = inttoptr i64 %70 to %"class.v8::internal::Heap"**
  %72 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %71, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %72, i64 %58, i64 %59, i64 %3) #11
  %73 = load i64, i64* %8, align 8
  %74 = add i64 %73, %54
  br label %75

75:                                               ; preds = %69, %62
  %76 = phi i64 [ %59, %62 ], [ %74, %69 ]
  %77 = phi i64 [ %58, %62 ], [ %73, %69 ]
  %78 = and i64 %3, -262144
  %79 = or i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 24
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %93, label %84

84:                                               ; preds = %75
  %85 = and i64 %77, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %84
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %77, i64 %76, i64 %3) #11
  %92 = load i64, i64* %8, align 8
  br label %93

93:                                               ; preds = %50, %75, %84, %91
  %94 = phi i64 [ %58, %50 ], [ %77, %75 ], [ %77, %84 ], [ %92, %91 ]
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = add i32 %97, 2
  %99 = and i32 %98, -2
  store atomic volatile i32 %99, i32* %96 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPb(%"class.v8::internal::Isolate"*, i64*, i64*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::JSReceiver", align 8
  %6 = load i64, i64* %2, align 8
  %7 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %6) #11
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::internal::JSReceiver"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %12, align 8
  %13 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4, %10
  %17 = phi i64 [ %13, %10 ], [ %7, %4 ]
  %18 = trunc i64 %17 to i32
  br label %44

19:                                               ; preds = %10
  %20 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %21 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %20, i64 0, i32 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %20, i64 0, i32 1, i64 0
  br label %36

28:                                               ; preds = %22, %19
  %29 = and i64 %13, -262144
  %30 = or i64 %29, 16
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %36

36:                                               ; preds = %26, %28
  %37 = phi i64* [ %35, %28 ], [ %27, %26 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 4
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %13 to i32
  %41 = trunc i64 %39 to i32
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  store i8 0, i8* %3, align 1
  br label %48

44:                                               ; preds = %16, %36
  %45 = phi i32 [ %18, %16 ], [ %40, %36 ]
  %46 = ashr i32 %45, 1
  %47 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPbi(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i8* %3, i32 %46)
  br label %48

48:                                               ; preds = %44, %43
  %49 = phi i64* [ %1, %43 ], [ %47, %44 ]
  ret i64* %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPbi(%"class.v8::internal::Isolate"*, i64*, i64*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = load i64, i64* %1, align 8
  %8 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %9 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 1, i64 0
  br label %24

16:                                               ; preds = %10, %5
  %17 = and i64 %7, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 16
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %24

24:                                               ; preds = %14, %16
  %25 = phi i64* [ %23, %16 ], [ %15, %14 ]
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %7, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = ashr i32 %30, 1
  %32 = getelementptr inbounds i64, i64* %25, i64 4
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i32 %31, -1
  %35 = and i32 %34, %4
  %36 = shl i32 %35, 3
  %37 = add i32 %36, 12
  %38 = sext i32 %37 to i64
  %39 = add i64 %7, 7
  %40 = add i64 %39, %38
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = trunc i64 %33 to i32
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %68, label %45

45:                                               ; preds = %24
  %46 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  br label %49

49:                                               ; preds = %57, %45
  %50 = phi i32 [ %42, %45 ], [ %66, %57 ]
  %51 = phi i32 [ %35, %45 ], [ %60, %57 ]
  %52 = phi i32 [ 1, %45 ], [ %58, %57 ]
  %53 = zext i32 %50 to i64
  %54 = or i64 %27, %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  %55 = load i64, i64* %2, align 8
  store i64 %55, i64* %47, align 8
  %56 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %48, i64 %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br i1 %56, label %69, label %57

57:                                               ; preds = %49
  %58 = add i32 %52, 1
  %59 = add i32 %52, %51
  %60 = and i32 %59, %34
  %61 = shl i32 %60, 3
  %62 = add i32 %61, 12
  %63 = sext i32 %62 to i64
  %64 = add i64 %39, %63
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = icmp eq i32 %66, %43
  br i1 %67, label %68, label %49

68:                                               ; preds = %57, %24
  store i8 0, i8* %3, align 1
  br label %134

69:                                               ; preds = %49
  store i8 1, i8* %3, align 1
  %70 = load i64, i64* %1, align 8
  %71 = shl i32 %51, 3
  %72 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %73 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %72, i64 0, i32 0, i32 1
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %72, i64 0, i32 1, i64 0
  br label %88

80:                                               ; preds = %74, %69
  %81 = and i64 %70, -262144
  %82 = or i64 %81, 16
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 16
  %85 = add i64 %84, -41416
  %86 = inttoptr i64 %85 to %"class.v8::internal::Isolate"*
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %86, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %88

88:                                               ; preds = %80, %78
  %89 = phi i64* [ %87, %80 ], [ %79, %78 ]
  %90 = getelementptr inbounds i64, i64* %89, i64 5
  %91 = load i64, i64* %90, align 8
  %92 = add i32 %71, 12
  %93 = sext i32 %92 to i64
  %94 = add i64 %70, 7
  %95 = add i64 %94, %93
  %96 = inttoptr i64 %95 to i32*
  %97 = trunc i64 %91 to i32
  store atomic volatile i32 %97, i32* %96 monotonic, align 4
  %98 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %99 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %98, i64 0, i32 0, i32 1
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %98, i64 0, i32 1, i64 0
  br label %114

106:                                              ; preds = %100, %88
  %107 = and i64 %70, -262144
  %108 = or i64 %107, 16
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 16
  %111 = add i64 %110, -41416
  %112 = inttoptr i64 %111 to %"class.v8::internal::Isolate"*
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %114

114:                                              ; preds = %104, %106
  %115 = phi i64* [ %113, %106 ], [ %105, %104 ]
  %116 = getelementptr inbounds i64, i64* %115, i64 5
  %117 = load i64, i64* %116, align 8
  %118 = add i32 %71, 16
  %119 = or i32 %118, 7
  %120 = sext i32 %119 to i64
  %121 = add i64 %70, %120
  %122 = inttoptr i64 %121 to i32*
  %123 = trunc i64 %117 to i32
  store atomic volatile i32 %123, i32* %122 monotonic, align 4
  %124 = inttoptr i64 %94 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = add i32 %125, -2
  %127 = and i32 %126, -2
  store atomic volatile i32 %127, i32* %124 monotonic, align 4
  %128 = add i64 %70, 11
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = add i32 %130, 2
  %132 = and i32 %131, -2
  store atomic volatile i32 %132, i32* %129 monotonic, align 4
  %133 = tail call i64* @_ZN2v88internal9HashTableINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  br label %134

134:                                              ; preds = %114, %68
  %135 = phi i64* [ %1, %68 ], [ %133, %114 ]
  ret i64* %135
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 %3, 3
  %5 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase", %"class.v8::internal::ObjectHashTableBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %8 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 1, i64 0
  br label %23

15:                                               ; preds = %9, %2
  %16 = and i64 %6, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %23

23:                                               ; preds = %13, %15
  %24 = phi i64* [ %22, %15 ], [ %14, %13 ]
  %25 = getelementptr inbounds i64, i64* %24, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = add i32 %4, 12
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %28, 7
  %30 = add i64 %29, %6
  %31 = inttoptr i64 %30 to i32*
  %32 = trunc i64 %26 to i32
  store atomic volatile i32 %32, i32* %31 monotonic, align 4
  %33 = load i64, i64* %5, align 8
  %34 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %35 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 1, i64 0
  br label %50

42:                                               ; preds = %36, %23
  %43 = and i64 %33, -262144
  %44 = or i64 %43, 16
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 16
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %50

50:                                               ; preds = %40, %42
  %51 = phi i64* [ %49, %42 ], [ %41, %40 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 5
  %53 = load i64, i64* %52, align 8
  %54 = add i32 %4, 16
  %55 = or i32 %54, 7
  %56 = sext i32 %55 to i64
  %57 = add i64 %33, %56
  %58 = inttoptr i64 %57 to i32*
  %59 = trunc i64 %53 to i32
  store atomic volatile i32 %59, i32* %58 monotonic, align 4
  %60 = load i64, i64* %5, align 8
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = add i32 %63, -2
  %65 = and i32 %64, -2
  store atomic volatile i32 %65, i32* %62 monotonic, align 4
  %66 = load i64, i64* %5, align 8
  %67 = add i64 %66, 11
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = add i32 %69, 2
  %71 = and i32 %70, -2
  store atomic volatile i32 %71, i32* %68 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC2Ev(%"class.v8::internal::ObjectHashTableBase"*) unnamed_addr #0 comdat($_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase", %"class.v8::internal::ObjectHashTableBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC2Em(%"class.v8::internal::ObjectHashTableBase"*, i64) unnamed_addr #5 comdat($_ZN2v88internal19ObjectHashTableBaseINS0_15ObjectHashTableENS0_20ObjectHashTableShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase", %"class.v8::internal::ObjectHashTableBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1224"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 19
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1224"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 19
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::HashTable.1224"*, i64, i64*, i64*, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 15
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = getelementptr inbounds i64, i64* %2, i64 4
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i32 %12, -1
  %16 = and i32 %15, %4
  %17 = shl i32 %16, 3
  %18 = add i32 %17, 12
  %19 = sext i32 %18 to i64
  %20 = add i64 %8, 7
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = trunc i64 %14 to i32
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %53, label %26

26:                                               ; preds = %5
  %27 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %28 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  br label %30

30:                                               ; preds = %26, %38
  %31 = phi i32 [ %23, %26 ], [ %49, %38 ]
  %32 = phi i32 [ %16, %26 ], [ %41, %38 ]
  %33 = phi i32 [ 1, %26 ], [ %39, %38 ]
  %34 = zext i32 %31 to i64
  %35 = or i64 %34, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load i64, i64* %3, align 8
  store i64 %36, i64* %28, align 8
  %37 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %29, i64 %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br i1 %37, label %51, label %38

38:                                               ; preds = %30
  %39 = add i32 %33, 1
  %40 = add i32 %32, %33
  %41 = and i32 %40, %15
  %42 = shl i32 %41, 3
  %43 = load i64, i64* %7, align 8
  %44 = add i32 %42, 12
  %45 = sext i32 %44 to i64
  %46 = add i64 %43, 7
  %47 = add i64 %46, %45
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %24
  br i1 %50, label %53, label %30

51:                                               ; preds = %30
  %52 = zext i32 %32 to i64
  br label %53

53:                                               ; preds = %38, %51, %5
  %54 = phi i64 [ -1, %5 ], [ %52, %51 ], [ -1, %38 ]
  ret i64 %54
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable.1224"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = shl i32 %4, 3
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i32 %5, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1224"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 8
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 262144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = and i64 %10, 24
  %15 = icmp eq i64 %14, 0
  %16 = select i1 %15, i32 4, i32 0
  br label %17

17:                                               ; preds = %2, %13
  %18 = phi i32 [ 4, %2 ], [ %16, %13 ]
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %34

27:                                               ; preds = %21, %17
  %28 = or i64 %7, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %25, %27
  %35 = phi i64* [ %33, %27 ], [ %26, %25 ]
  %36 = add i64 %6, 15
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = ashr i32 %38, 1
  %40 = zext i32 %39 to i64
  %41 = icmp eq i32 %39, 0
  %42 = and i64 %1, 4294967295
  %43 = icmp eq i64 %42, 0
  %44 = getelementptr inbounds i64, i64* %35, i64 4
  %45 = getelementptr inbounds i64, i64* %35, i64 5
  %46 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %34, %176
  %51 = phi i32 [ 1, %34 ], [ %178, %176 ]
  br i1 %41, label %283, label %52

52:                                               ; preds = %50
  call void @llvm.assume(i1 %43) #11
  %53 = icmp ugt i32 %51, 1
  br i1 %53, label %54, label %181

54:                                               ; preds = %52, %154
  %55 = phi i8 [ %156, %154 ], [ 1, %52 ]
  %56 = phi i64 [ %155, %154 ], [ 0, %52 ]
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %57, 3
  %59 = load i64, i64* %5, align 8
  %60 = add i32 %58, 12
  %61 = sext i32 %60 to i64
  %62 = add nsw i64 %61, 7
  %63 = add i64 %62, %59
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = load i64, i64* %44, align 8
  %69 = trunc i64 %68 to i32
  %70 = icmp eq i32 %65, %69
  br i1 %70, label %152, label %71

71:                                               ; preds = %54
  %72 = load i64, i64* %45, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %65, %73
  br i1 %74, label %152, label %75

75:                                               ; preds = %71
  %76 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %67) #11
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  store i64 %67, i64* %47, align 8
  %80 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %81

81:                                               ; preds = %79, %75
  %82 = phi i64 [ %80, %79 ], [ %76, %75 ]
  %83 = trunc i64 %82 to i32
  %84 = ashr i32 %83, 1
  %85 = load i64, i64* %5, align 8
  %86 = add i64 %85, 15
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = ashr i32 %88, 1
  %90 = add nsw i32 %89, -1
  %91 = and i32 %90, %84
  br label %92

92:                                               ; preds = %81, %97
  %93 = phi i32 [ %100, %97 ], [ %91, %81 ]
  %94 = phi i32 [ %99, %97 ], [ 1, %81 ]
  %95 = zext i32 %93 to i64
  %96 = icmp eq i64 %56, %95
  br i1 %96, label %161, label %97

97:                                               ; preds = %92
  %98 = add i32 %94, %93
  %99 = add nuw nsw i32 %94, 1
  %100 = and i32 %98, %90
  %101 = icmp eq i32 %99, %51
  br i1 %101, label %164, label %92

102:                                              ; preds = %161
  %103 = trunc i64 %162 to i32
  %104 = shl i32 %103, 3
  %105 = add i32 %104, 12
  %106 = sext i32 %105 to i64
  %107 = add i64 %85, 7
  %108 = add i64 %107, %106
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %111, %1
  %113 = load i64, i64* %44, align 8
  %114 = trunc i64 %113 to i32
  %115 = icmp eq i32 %110, %114
  br i1 %115, label %149, label %116

116:                                              ; preds = %102
  %117 = load i64, i64* %45, align 8
  %118 = trunc i64 %117 to i32
  %119 = icmp eq i32 %110, %118
  br i1 %119, label %149, label %120

120:                                              ; preds = %116
  %121 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %112) #11
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  store i64 %112, i64* %49, align 8
  %125 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %126

126:                                              ; preds = %124, %120
  %127 = phi i64 [ %125, %124 ], [ %121, %120 ]
  %128 = trunc i64 %127 to i32
  %129 = ashr i32 %128, 1
  %130 = load i64, i64* %5, align 8
  %131 = add i64 %130, 15
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = ashr i32 %133, 1
  %135 = add nsw i32 %134, -1
  %136 = and i32 %135, %129
  br label %137

137:                                              ; preds = %126, %142
  %138 = phi i32 [ %145, %142 ], [ %136, %126 ]
  %139 = phi i32 [ %144, %142 ], [ 1, %126 ]
  %140 = zext i32 %138 to i64
  %141 = icmp eq i64 %162, %140
  br i1 %141, label %147, label %142

142:                                              ; preds = %137
  %143 = add i32 %139, %138
  %144 = add nuw nsw i32 %139, 1
  %145 = and i32 %143, %135
  %146 = icmp eq i32 %144, %51
  br i1 %146, label %158, label %137

147:                                              ; preds = %137, %158
  %148 = add i64 %56, 1
  br label %154

149:                                              ; preds = %158, %116, %102
  call void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1224"* %0, i64 %56, i64 %162, i32 %18)
  br label %154

150:                                              ; preds = %161
  %151 = add i64 %56, 1
  br label %154

152:                                              ; preds = %71, %54
  %153 = add nuw i64 %56, 1
  br label %154

154:                                              ; preds = %152, %150, %149, %147
  %155 = phi i64 [ %153, %152 ], [ %151, %150 ], [ %56, %149 ], [ %148, %147 ]
  %156 = phi i8 [ %55, %152 ], [ %55, %150 ], [ %55, %149 ], [ 0, %147 ]
  %157 = icmp ult i64 %155, %40
  br i1 %157, label %54, label %176

158:                                              ; preds = %142
  %159 = zext i32 %145 to i64
  %160 = icmp eq i64 %162, %159
  br i1 %160, label %147, label %149

161:                                              ; preds = %92, %164
  %162 = phi i64 [ %165, %164 ], [ %56, %92 ]
  %163 = icmp eq i64 %56, %162
  br i1 %163, label %150, label %102

164:                                              ; preds = %97
  %165 = zext i32 %100 to i64
  br label %161

166:                                              ; preds = %176
  br i1 %41, label %283, label %167

167:                                              ; preds = %166
  %168 = load i64, i64* %44, align 8
  %169 = load i64, i64* %45, align 8
  %170 = trunc i64 %169 to i32
  %171 = trunc i64 %168 to i32
  %172 = and i64 %40, 1
  %173 = icmp eq i32 %39, 1
  br i1 %173, label %273, label %174

174:                                              ; preds = %167
  %175 = sub nsw i64 %40, %172
  br label %287

176:                                              ; preds = %263, %154
  %177 = phi i8 [ %156, %154 ], [ %265, %263 ]
  %178 = add nuw nsw i32 %51, 1
  %179 = and i8 %177, 1
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %50, label %166

181:                                              ; preds = %52, %263
  %182 = phi i8 [ %265, %263 ], [ 1, %52 ]
  %183 = phi i64 [ %264, %263 ], [ 0, %52 ]
  %184 = trunc i64 %183 to i32
  %185 = shl i32 %184, 3
  %186 = load i64, i64* %5, align 8
  %187 = add i32 %185, 12
  %188 = sext i32 %187 to i64
  %189 = add nsw i64 %188, 7
  %190 = add i64 %189, %186
  %191 = inttoptr i64 %190 to i32*
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %193, %1
  %195 = load i64, i64* %44, align 8
  %196 = trunc i64 %195 to i32
  %197 = icmp eq i32 %192, %196
  br i1 %197, label %202, label %198

198:                                              ; preds = %181
  %199 = load i64, i64* %45, align 8
  %200 = trunc i64 %199 to i32
  %201 = icmp eq i32 %192, %200
  br i1 %201, label %202, label %204

202:                                              ; preds = %198, %181
  %203 = add nuw i64 %183, 1
  br label %263

204:                                              ; preds = %198
  %205 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %194) #11
  %206 = and i64 %205, 1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  store i64 %194, i64* %47, align 8
  %209 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %210

210:                                              ; preds = %208, %204
  %211 = phi i64 [ %209, %208 ], [ %205, %204 ]
  %212 = trunc i64 %211 to i32
  %213 = ashr i32 %212, 1
  %214 = load i64, i64* %5, align 8
  %215 = add i64 %214, 15
  %216 = inttoptr i64 %215 to i32*
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = ashr i32 %217, 1
  %219 = add nsw i32 %218, -1
  %220 = and i32 %219, %213
  %221 = zext i32 %220 to i64
  %222 = icmp eq i64 %183, %221
  br i1 %222, label %223, label %225

223:                                              ; preds = %210
  %224 = add nuw i64 %183, 1
  br label %263

225:                                              ; preds = %210
  %226 = shl i32 %220, 3
  %227 = add i32 %226, 12
  %228 = sext i32 %227 to i64
  %229 = add i64 %214, 7
  %230 = add i64 %229, %228
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %233, %1
  %235 = load i64, i64* %44, align 8
  %236 = trunc i64 %235 to i32
  %237 = icmp eq i32 %232, %236
  br i1 %237, label %260, label %238

238:                                              ; preds = %225
  %239 = load i64, i64* %45, align 8
  %240 = trunc i64 %239 to i32
  %241 = icmp eq i32 %232, %240
  br i1 %241, label %260, label %242

242:                                              ; preds = %238
  %243 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %234) #11
  %244 = and i64 %243, 1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %242
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  store i64 %234, i64* %49, align 8
  %247 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %248

248:                                              ; preds = %246, %242
  %249 = phi i64 [ %247, %246 ], [ %243, %242 ]
  %250 = trunc i64 %249 to i32
  %251 = ashr i32 %250, 1
  %252 = load i64, i64* %5, align 8
  %253 = add i64 %252, 15
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = ashr i32 %255, 1
  %257 = add nsw i32 %256, -1
  %258 = and i32 %257, %251
  %259 = icmp eq i32 %258, %220
  br i1 %259, label %261, label %260

260:                                              ; preds = %248, %238, %225
  call void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1224"* %0, i64 %183, i64 %221, i32 %18)
  br label %263

261:                                              ; preds = %248
  %262 = add nuw i64 %183, 1
  br label %263

263:                                              ; preds = %223, %261, %260, %202
  %264 = phi i64 [ %203, %202 ], [ %224, %223 ], [ %183, %260 ], [ %262, %261 ]
  %265 = phi i8 [ %182, %202 ], [ %182, %223 ], [ %182, %260 ], [ 0, %261 ]
  %266 = icmp ult i64 %264, %40
  br i1 %266, label %181, label %176

267:                                              ; preds = %312
  %268 = trunc i64 %313 to i32
  %269 = shl i32 %268, 3
  %270 = or i32 %269, 12
  %271 = sext i32 %270 to i64
  %272 = add nsw i64 %271, 7
  br label %273

273:                                              ; preds = %267, %167
  %274 = phi i64 [ 19, %167 ], [ %272, %267 ]
  %275 = icmp eq i64 %172, 0
  br i1 %275, label %283, label %276

276:                                              ; preds = %273
  %277 = load i64, i64* %5, align 8
  %278 = add i64 %274, %277
  %279 = inttoptr i64 %278 to i32*
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = icmp eq i32 %280, %170
  br i1 %281, label %282, label %283

282:                                              ; preds = %276
  store atomic volatile i32 %171, i32* %279 monotonic, align 4
  br label %283

283:                                              ; preds = %50, %273, %276, %282, %166
  %284 = load i64, i64* %5, align 8
  %285 = add i64 %284, 11
  %286 = inttoptr i64 %285 to i32*
  store atomic volatile i32 0, i32* %286 monotonic, align 4
  ret void

287:                                              ; preds = %312, %174
  %288 = phi i64 [ 0, %174 ], [ %313, %312 ]
  %289 = phi i64 [ %175, %174 ], [ %314, %312 ]
  %290 = trunc i64 %288 to i32
  %291 = shl i32 %290, 3
  %292 = load i64, i64* %5, align 8
  %293 = sext i32 %291 to i64
  %294 = add nsw i64 %293, 19
  %295 = add i64 %294, %292
  %296 = inttoptr i64 %295 to i32*
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = icmp eq i32 %297, %170
  br i1 %298, label %299, label %300

299:                                              ; preds = %287
  store atomic volatile i32 %171, i32* %296 monotonic, align 4
  br label %300

300:                                              ; preds = %299, %287
  %301 = trunc i64 %288 to i32
  %302 = shl i32 %301, 3
  %303 = or i32 %302, 8
  %304 = load i64, i64* %5, align 8
  %305 = add i32 %303, 19
  %306 = sext i32 %305 to i64
  %307 = add i64 %304, %306
  %308 = inttoptr i64 %307 to i32*
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = icmp eq i32 %309, %170
  br i1 %310, label %311, label %312

311:                                              ; preds = %300
  store atomic volatile i32 %171, i32* %308 monotonic, align 4
  br label %312

312:                                              ; preds = %311, %300
  %313 = add nuw nsw i64 %288, 2
  %314 = add i64 %289, -2
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %267, label %287
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable.1224"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::JSReceiver", align 8
  %7 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %2) #11
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.v8::internal::JSReceiver"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %14

14:                                               ; preds = %5, %10
  %15 = phi i64 [ %13, %10 ], [ %7, %5 ]
  %16 = trunc i64 %15 to i32
  %17 = ashr i32 %16, 1
  %18 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 15
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = ashr i32 %22, 1
  %24 = add nsw i32 %23, -1
  %25 = and i32 %17, %24
  %26 = zext i32 %25 to i64
  %27 = icmp sgt i32 %3, 1
  br i1 %27, label %28, label %41

28:                                               ; preds = %14, %33
  %29 = phi i64 [ %37, %33 ], [ %26, %14 ]
  %30 = phi i32 [ %36, %33 ], [ %25, %14 ]
  %31 = phi i32 [ %35, %33 ], [ 1, %14 ]
  %32 = icmp eq i64 %29, %4
  br i1 %32, label %41, label %33

33:                                               ; preds = %28
  %34 = add i32 %30, %31
  %35 = add nuw nsw i32 %31, 1
  %36 = and i32 %34, %24
  %37 = zext i32 %36 to i64
  %38 = icmp eq i32 %35, %3
  br i1 %38, label %39, label %28

39:                                               ; preds = %33
  %40 = zext i32 %36 to i64
  br label %41

41:                                               ; preds = %28, %39, %14
  %42 = phi i64 [ %26, %14 ], [ %40, %39 ], [ %4, %28 ]
  ret i64 %42
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1224"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [2 x %"class.v8::internal::Object"], align 16
  %6 = bitcast [2 x %"class.v8::internal::Object"]* %5 to i8*
  %7 = trunc i64 %1 to i32
  %8 = shl i32 %7, 3
  %9 = trunc i64 %2 to i32
  %10 = shl i32 %9, 3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i32 %8, 12
  %15 = sext i32 %14 to i64
  %16 = add nsw i64 %15, 7
  %17 = add i64 %16, %12
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %13, %20
  %22 = getelementptr inbounds [2 x %"class.v8::internal::Object"], [2 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 %21, i64* %22, align 16
  %23 = shl i32 %7, 3
  %24 = add i32 %23, 16
  %25 = or i32 %24, 7
  %26 = sext i32 %25 to i64
  %27 = add i64 %12, %26
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %13, %30
  %32 = getelementptr inbounds [2 x %"class.v8::internal::Object"], [2 x %"class.v8::internal::Object"]* %5, i64 0, i64 1, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = add i32 %10, 12
  %34 = sext i32 %33 to i64
  %35 = add nsw i64 %34, 7
  %36 = add i64 %12, %35
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %13, %39
  store atomic volatile i32 %38, i32* %18 monotonic, align 4
  %41 = load i64, i64* %11, align 8
  switch i32 %3, label %58 [
    i32 4, label %42
    i32 0, label %97
  ]

42:                                               ; preds = %4
  %43 = add i64 %41, %16
  %44 = and i64 %39, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = and i64 %41, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 262144
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %46
  %54 = or i64 %47, 16
  %55 = inttoptr i64 %54 to %"class.v8::internal::Heap"**
  %56 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %55, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %56, i64 %41, i64 %43, i64 %40) #11
  %57 = load i64, i64* %11, align 8
  br label %58

58:                                               ; preds = %4, %53, %46, %42
  %59 = phi i64 [ %57, %53 ], [ %41, %46 ], [ %41, %42 ], [ %41, %4 ]
  %60 = add i64 %59, %16
  %61 = and i64 %40, -262144
  %62 = and i64 %41, -262144
  %63 = or i64 %61, 8
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 24
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %58
  %69 = or i64 %62, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = or i64 %62, 16
  %76 = inttoptr i64 %75 to %"class.v8::internal::Heap"**
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %76, align 16
  call void @_ZN2v88internal40Heap_GenerationalEphemeronKeyBarrierSlowEPNS0_4HeapENS0_18EphemeronHashTableEm(%"class.v8::internal::Heap"* %77, i64 %41, i64 %60) #11
  br label %78

78:                                               ; preds = %74, %68, %58
  %79 = load i64, i64* %11, align 8
  %80 = and i64 %79, -4294967296
  %81 = shl i32 %9, 3
  %82 = add i32 %81, 16
  %83 = or i32 %82, 7
  %84 = sext i32 %83 to i64
  %85 = add i64 %79, %84
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %80, %88
  %90 = shl i32 %7, 3
  %91 = add i32 %90, 16
  %92 = or i32 %91, 7
  %93 = sext i32 %92 to i64
  %94 = add i64 %79, %93
  %95 = inttoptr i64 %94 to i32*
  store atomic volatile i32 %87, i32* %95 monotonic, align 4
  %96 = icmp eq i32 %3, 4
  br i1 %96, label %184, label %207

97:                                               ; preds = %4
  %98 = shl i32 %9, 3
  %99 = add i32 %98, 16
  %100 = or i32 %99, 7
  %101 = sext i32 %100 to i64
  %102 = add i64 %41, %101
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = shl i32 %7, 3
  %106 = add i32 %105, 16
  %107 = or i32 %106, 7
  %108 = sext i32 %107 to i64
  %109 = add i64 %41, %108
  %110 = inttoptr i64 %109 to i32*
  store atomic volatile i32 %104, i32* %110 monotonic, align 4
  %111 = load i64, i64* %22, align 16
  %112 = load i64, i64* %11, align 8
  %113 = add i64 %112, %35
  %114 = inttoptr i64 %113 to i32*
  %115 = trunc i64 %111 to i32
  store atomic volatile i32 %115, i32* %114 monotonic, align 4
  %116 = load i64, i64* %11, align 8
  %117 = load i64, i64* %32, align 8
  %118 = shl i32 %9, 3
  %119 = add i32 %118, 16
  %120 = or i32 %119, 7
  %121 = sext i32 %120 to i64
  %122 = add i64 %116, %121
  %123 = inttoptr i64 %122 to i32*
  %124 = trunc i64 %117 to i32
  store atomic volatile i32 %124, i32* %123 monotonic, align 4
  br label %227

125:                                              ; preds = %226, %219, %210, %207
  %126 = load i64, i64* %22, align 16
  %127 = load i64, i64* %11, align 8
  %128 = add i64 %127, %35
  %129 = inttoptr i64 %128 to i32*
  %130 = trunc i64 %126 to i32
  store atomic volatile i32 %130, i32* %129 monotonic, align 4
  %131 = load i64, i64* %11, align 8
  %132 = icmp eq i32 %3, 4
  br i1 %132, label %133, label %151

133:                                              ; preds = %125, %189
  %134 = phi i64 [ %195, %189 ], [ %131, %125 ]
  %135 = phi i64 [ %190, %189 ], [ %126, %125 ]
  %136 = add i64 %134, %35
  %137 = and i64 %135, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %151, label %139

139:                                              ; preds = %133
  %140 = and i64 %134, -262144
  %141 = or i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %143, 262144
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %139
  %147 = or i64 %140, 16
  %148 = inttoptr i64 %147 to %"class.v8::internal::Heap"**
  %149 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %148, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %149, i64 %134, i64 %136, i64 %135) #11
  %150 = load i64, i64* %11, align 8
  br label %151

151:                                              ; preds = %125, %146, %139, %133
  %152 = phi i64 [ %134, %146 ], [ %134, %139 ], [ %134, %133 ], [ %131, %125 ]
  %153 = phi i64 [ %135, %146 ], [ %135, %139 ], [ %135, %133 ], [ %126, %125 ]
  %154 = phi i64 [ %150, %146 ], [ %134, %139 ], [ %134, %133 ], [ %131, %125 ]
  %155 = add i64 %154, %35
  %156 = and i64 %153, -262144
  %157 = and i64 %152, -262144
  %158 = or i64 %156, 8
  %159 = inttoptr i64 %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = and i64 %160, 24
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %173, label %163

163:                                              ; preds = %151
  %164 = or i64 %157, 8
  %165 = inttoptr i64 %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %166, 24
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %163
  %170 = or i64 %157, 16
  %171 = inttoptr i64 %170 to %"class.v8::internal::Heap"**
  %172 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %171, align 16
  call void @_ZN2v88internal40Heap_GenerationalEphemeronKeyBarrierSlowEPNS0_4HeapENS0_18EphemeronHashTableEm(%"class.v8::internal::Heap"* %172, i64 %152, i64 %155) #11
  br label %173

173:                                              ; preds = %169, %163, %151
  %174 = load i64, i64* %32, align 8
  %175 = shl i32 %9, 3
  %176 = add i32 %175, 16
  %177 = load i64, i64* %11, align 8
  %178 = or i32 %176, 7
  %179 = sext i32 %178 to i64
  %180 = add i64 %177, %179
  %181 = inttoptr i64 %180 to i32*
  %182 = trunc i64 %174 to i32
  store atomic volatile i32 %182, i32* %181 monotonic, align 4
  %183 = icmp eq i32 %3, 4
  br i1 %183, label %228, label %244

184:                                              ; preds = %78
  %185 = load i64, i64* %11, align 8
  %186 = add i64 %185, %93
  %187 = and i64 %88, 1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %196

189:                                              ; preds = %184
  %190 = load i64, i64* %22, align 16
  %191 = load i64, i64* %11, align 8
  %192 = add i64 %191, %35
  %193 = inttoptr i64 %192 to i32*
  %194 = trunc i64 %190 to i32
  store atomic volatile i32 %194, i32* %193 monotonic, align 4
  %195 = load i64, i64* %11, align 8
  br label %133

196:                                              ; preds = %184
  %197 = and i64 %185, -262144
  %198 = or i64 %197, 8
  %199 = inttoptr i64 %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = and i64 %200, 262144
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %210, label %203

203:                                              ; preds = %196
  %204 = or i64 %197, 16
  %205 = inttoptr i64 %204 to %"class.v8::internal::Heap"**
  %206 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %205, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %206, i64 %185, i64 %186, i64 %89) #11
  br label %210

207:                                              ; preds = %78
  %208 = and i64 %88, 1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %125, label %210

210:                                              ; preds = %196, %203, %207
  %211 = load i64, i64* %11, align 8
  %212 = add i64 %211, %93
  %213 = and i64 %89, -262144
  %214 = or i64 %213, 8
  %215 = inttoptr i64 %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = and i64 %216, 24
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %125, label %219

219:                                              ; preds = %210
  %220 = and i64 %211, -262144
  %221 = or i64 %220, 8
  %222 = inttoptr i64 %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = and i64 %223, 24
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %125

226:                                              ; preds = %219
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %211, i64 %212, i64 %89) #11
  br label %125

227:                                              ; preds = %263, %256, %247, %244, %228, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void

228:                                              ; preds = %173
  %229 = load i64, i64* %11, align 8
  %230 = add i64 %229, %179
  %231 = and i64 %174, 1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %227, label %233

233:                                              ; preds = %228
  %234 = and i64 %229, -262144
  %235 = or i64 %234, 8
  %236 = inttoptr i64 %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = and i64 %237, 262144
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %247, label %240

240:                                              ; preds = %233
  %241 = or i64 %234, 16
  %242 = inttoptr i64 %241 to %"class.v8::internal::Heap"**
  %243 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %242, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %243, i64 %229, i64 %230, i64 %174) #11
  br label %247

244:                                              ; preds = %173
  %245 = and i64 %174, 1
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %227, label %247

247:                                              ; preds = %233, %240, %244
  %248 = load i64, i64* %11, align 8
  %249 = add i64 %248, %179
  %250 = and i64 %174, -262144
  %251 = or i64 %250, 8
  %252 = inttoptr i64 %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = and i64 %253, 24
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %227, label %256

256:                                              ; preds = %247
  %257 = and i64 %248, -262144
  %258 = or i64 %257, 8
  %259 = inttoptr i64 %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = and i64 %260, 24
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %227

263:                                              ; preds = %256
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %248, i64 %249, i64 %174) #11
  br label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = shl i32 %2, 1
  %4 = add nsw i32 %3, 3
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1224"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = trunc i64 %2 to i32
  %9 = shl i32 %8, 3
  %10 = add i32 %9, 12
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 7
  %13 = add i64 %12, %6
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = getelementptr inbounds i64, i64* %1, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %15, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds i64, i64* %1, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %15, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %17, i64* %28, align 8
  br label %29

29:                                               ; preds = %22, %4, %27
  %30 = phi i1 [ true, %27 ], [ false, %22 ], [ false, %4 ]
  ret i1 %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable.1224"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 3
  %8 = add i32 %7, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %4
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1224"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = trunc i64 %2 to i32
  %6 = shl i32 %5, 3
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i32 %6, 12
  %10 = sext i32 %9 to i64
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %8
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = zext i32 %14 to i64
  %18 = or i64 %17, %1
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %4
  %28 = and i64 %8, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = getelementptr inbounds i64, i64* %36, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %14, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %36, i64 5
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %14, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %18, i64* %47, align 8
  br label %48

48:                                               ; preds = %41, %35, %46
  %49 = phi i1 [ true, %46 ], [ false, %41 ], [ false, %35 ]
  ret i1 %49
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -3
  %3 = sdiv i32 %2, 2
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable.1224"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable.1224"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = shl i32 %12, 3
  %15 = add i32 %14, 12
  %16 = sext i32 %15 to i64
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %49, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %25, %35, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %36, %35 ], [ %13, %25 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = shl i32 %43, 3
  %45 = add i32 %44, 12
  %46 = sext i32 %45 to i64
  %47 = add i64 %17, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %23
  br i1 %50, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable.1224"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = shl i32 %11, 3
  %14 = add i32 %13, 12
  %15 = sext i32 %14 to i64
  %16 = add i64 %5, 7
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %48, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %48, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %42, %27
  br i1 %31, label %46, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = shl i32 %36, 3
  %38 = add i32 %37, 12
  %39 = sext i32 %38 to i64
  %40 = add i64 %16, %39
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %22
  br i1 %43, label %44, label %29

44:                                               ; preds = %32
  %45 = zext i32 %36 to i64
  br label %48

46:                                               ; preds = %29
  %47 = zext i32 %36 to i64
  br label %48

48:                                               ; preds = %46, %24, %44, %3
  %49 = phi i64 [ %12, %3 ], [ %45, %44 ], [ %12, %24 ], [ %47, %46 ]
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %71, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 67108861
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = shl i32 %31, 1
  %51 = add nsw i32 %50, 3
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 75
  %54 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %52, i64* %53, i32 %51, i8 zeroext %49) #11
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i32*
  store atomic volatile i32 0, i32* %57 monotonic, align 4
  %58 = load i64, i64* %54, align 8
  %59 = add i64 %58, 11
  %60 = inttoptr i64 %59 to i32*
  store atomic volatile i32 0, i32* %60 monotonic, align 4
  %61 = load i64, i64* %54, align 8
  %62 = add i64 %61, 15
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 %50, i32* %63 monotonic, align 4
  %64 = bitcast %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = load i64, i64* %1, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %54, align 8
  call void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1224"* nonnull %67, i64 %69, i64 %70)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %71

71:                                               ; preds = %28, %48
  %72 = phi i64* [ %54, %48 ], [ %1, %28 ]
  ret i64* %72
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 67108861
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = shl i32 %17, 1
  %19 = add nsw i32 %18, 3
  %20 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 75
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %20, i64* %21, i32 %19, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = add i64 %29, 15
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %18, i32* %31 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1224"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = and i64 %2, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %3, %11
  %16 = phi i32 [ 4, %3 ], [ %14, %11 ]
  %17 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %15
  %28 = and i64 %18, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = add i64 %18, 15
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = ashr i32 %39, 1
  %41 = sext i32 %40 to i64
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  %44 = add i64 %2, 7
  br label %58

45:                                               ; preds = %35
  %46 = and i64 %1, 4294967295
  %47 = icmp eq i64 %46, 0
  call void @llvm.assume(i1 %47) #11
  %48 = getelementptr inbounds i64, i64* %36, i64 4
  %49 = getelementptr inbounds i64, i64* %36, i64 5
  %50 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  %51 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = add i64 %2, 15
  %53 = inttoptr i64 %52 to i32*
  %54 = add i64 %2, 7
  %55 = or i64 %5, 16
  %56 = inttoptr i64 %55 to %"class.v8::internal::Heap"**
  %57 = icmp eq i32 %16, 0
  br label %68

58:                                               ; preds = %215, %43
  %59 = phi i64 [ %44, %43 ], [ %54, %215 ]
  %60 = phi i64 [ %18, %43 ], [ %218, %215 ]
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, -2
  %65 = inttoptr i64 %59 to i32*
  store atomic volatile i32 %64, i32* %65 monotonic, align 4
  %66 = add i64 %2, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  ret void

68:                                               ; preds = %215, %45
  %69 = phi i64 [ %18, %45 ], [ %218, %215 ]
  %70 = phi i64 [ 0, %45 ], [ %216, %215 ]
  %71 = trunc i64 %70 to i32
  %72 = shl i32 %71, 3
  %73 = add i32 %72, 12
  %74 = sext i32 %73 to i64
  %75 = add nsw i64 %74, 7
  %76 = add i64 %69, %75
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %79, %1
  %81 = load i64, i64* %48, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %215, label %84

84:                                               ; preds = %68
  %85 = load i64, i64* %49, align 8
  %86 = trunc i64 %85 to i32
  %87 = icmp eq i32 %78, %86
  br i1 %87, label %215, label %88

88:                                               ; preds = %84
  %89 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %80) #11
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  store i64 %80, i64* %51, align 8
  %93 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %94

94:                                               ; preds = %88, %92
  %95 = phi i64 [ %93, %92 ], [ %89, %88 ]
  %96 = trunc i64 %95 to i32
  %97 = ashr i32 %96, 1
  %98 = load atomic i32, i32* %53 monotonic, align 4
  %99 = ashr i32 %98, 1
  %100 = add nsw i32 %99, -1
  %101 = and i32 %100, %97
  %102 = shl i32 %101, 3
  %103 = add i32 %102, 12
  %104 = sext i32 %103 to i64
  %105 = add i64 %54, %104
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = load i64, i64* %48, align 8
  %109 = trunc i64 %108 to i32
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %130, label %111

111:                                              ; preds = %94
  %112 = load i64, i64* %49, align 8
  %113 = trunc i64 %112 to i32
  br label %114

114:                                              ; preds = %119, %111
  %115 = phi i32 [ %107, %111 ], [ %128, %119 ]
  %116 = phi i32 [ %101, %111 ], [ %122, %119 ]
  %117 = phi i32 [ 1, %111 ], [ %120, %119 ]
  %118 = icmp eq i32 %115, %113
  br i1 %118, label %130, label %119

119:                                              ; preds = %114
  %120 = add i32 %117, 1
  %121 = add i32 %117, %116
  %122 = and i32 %121, %100
  %123 = shl i32 %122, 3
  %124 = add i32 %123, 12
  %125 = sext i32 %124 to i64
  %126 = add i64 %54, %125
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = icmp eq i32 %128, %109
  br i1 %129, label %130, label %114

130:                                              ; preds = %119, %114, %94
  %131 = phi i32 [ %101, %94 ], [ %122, %119 ], [ %116, %114 ]
  %132 = shl i32 %131, 3
  %133 = load i64, i64* %17, align 8
  %134 = add i64 %133, %75
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %137, %1
  %139 = add i32 %132, 12
  %140 = sext i32 %139 to i64
  %141 = add i64 %54, %140
  %142 = inttoptr i64 %141 to i32*
  store atomic volatile i32 %136, i32* %142 monotonic, align 4
  br i1 %57, label %183, label %143

143:                                              ; preds = %130
  %144 = and i64 %137, 1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %152, label %146

146:                                              ; preds = %143
  %147 = load i64, i64* %7, align 8
  %148 = and i64 %147, 262144
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %56, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %151, i64 %2, i64 %141, i64 %138) #11
  br label %152

152:                                              ; preds = %150, %146, %143
  %153 = and i64 %138, -262144
  %154 = or i64 %153, 8
  %155 = inttoptr i64 %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = and i64 %156, 24
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %152
  %160 = load i64, i64* %7, align 8
  %161 = and i64 %160, 24
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %56, align 16
  call void @_ZN2v88internal40Heap_GenerationalEphemeronKeyBarrierSlowEPNS0_4HeapENS0_18EphemeronHashTableEm(%"class.v8::internal::Heap"* %164, i64 %2, i64 %141) #11
  br label %165

165:                                              ; preds = %163, %159, %152
  %166 = load i64, i64* %17, align 8
  %167 = shl i32 %71, 3
  %168 = add i32 %167, 16
  %169 = or i32 %168, 7
  %170 = sext i32 %169 to i64
  %171 = add i64 %166, %170
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %174, %1
  %176 = shl i32 %131, 3
  %177 = add i32 %176, 16
  %178 = sext i32 %177 to i64
  %179 = add i64 %54, %178
  %180 = inttoptr i64 %179 to i32*
  store atomic volatile i32 %173, i32* %180 monotonic, align 4
  %181 = and i64 %174, 1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %215, label %197

183:                                              ; preds = %130
  %184 = load i64, i64* %17, align 8
  %185 = shl i32 %71, 3
  %186 = add i32 %185, 16
  %187 = or i32 %186, 7
  %188 = sext i32 %187 to i64
  %189 = add i64 %184, %188
  %190 = inttoptr i64 %189 to i32*
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = shl i32 %131, 3
  %193 = add i32 %192, 16
  %194 = sext i32 %193 to i64
  %195 = add i64 %54, %194
  %196 = inttoptr i64 %195 to i32*
  store atomic volatile i32 %191, i32* %196 monotonic, align 4
  br label %215

197:                                              ; preds = %165
  %198 = load i64, i64* %7, align 8
  %199 = and i64 %198, 262144
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  %202 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %56, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %202, i64 %2, i64 %179, i64 %175) #11
  br label %203

203:                                              ; preds = %197, %201
  %204 = and i64 %175, -262144
  %205 = or i64 %204, 8
  %206 = inttoptr i64 %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = and i64 %207, 24
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %215, label %210

210:                                              ; preds = %203
  %211 = load i64, i64* %7, align 8
  %212 = and i64 %211, 24
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %179, i64 %175) #11
  br label %215

215:                                              ; preds = %214, %210, %203, %165, %183, %84, %68
  %216 = add i64 %70, 1
  %217 = icmp eq i64 %216, %41
  %218 = load i64, i64* %17, align 8
  br i1 %217, label %58, label %68
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable.1224"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1224"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11SetCapacityEi(%"class.v8::internal::HashTable.1224"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC2Ev(%"class.v8::internal::HashTable.1224"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC2Em(%"class.v8::internal::HashTable.1224"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1224", %"class.v8::internal::HashTable.1224"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 67108861
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = shl i32 %16, 1
  %18 = add nsw i32 %17, 3
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %20 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 75
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %19, i64* %22, i32 %18, i8 zeroext %2) #11
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 0, i32* %26 monotonic, align 4
  %27 = load i64, i64* %23, align 8
  %28 = add i64 %27, 11
  %29 = inttoptr i64 %28 to i32*
  store atomic volatile i32 0, i32* %29 monotonic, align 4
  %30 = load i64, i64* %23, align 8
  %31 = add i64 %30, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %17, i32* %32 monotonic, align 4
  ret i64* %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %78

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 67108861
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = shl i32 %56, 1
  %58 = add nuw nsw i32 %57, 3
  %59 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 75
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %59, i64* %60, i32 %58, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = add i64 %68, 15
  %70 = inttoptr i64 %69 to i32*
  store atomic volatile i32 %57, i32* %70 monotonic, align 4
  %71 = bitcast %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = load i64, i64* %1, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1224"* nonnull %74, i64 %76, i64 %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %78

78:                                               ; preds = %25, %55
  %79 = phi i64* [ %61, %55 ], [ %1, %25 ]
  ret i64* %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %81

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 67108861
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = shl i32 %55, 1
  %57 = add nuw nsw i32 %56, 3
  %58 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %59 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 75
  %62 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %58, i64* %61, i32 %57, i8 zeroext %46) #11
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i32*
  store atomic volatile i32 0, i32* %65 monotonic, align 4
  %66 = load i64, i64* %62, align 8
  %67 = add i64 %66, 11
  %68 = inttoptr i64 %67 to i32*
  store atomic volatile i32 0, i32* %68 monotonic, align 4
  %69 = load i64, i64* %62, align 8
  %70 = add i64 %69, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %56, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %62, align 8
  call void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1224"* nonnull %75, i64 %79, i64 %80)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %81

81:                                               ; preds = %25, %54
  %82 = phi i64* [ %62, %54 ], [ %1, %25 ]
  ret i64* %82
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::ObjectHashTableBase.1225"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase.1225", %"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %8 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 1, i64 0
  br label %23

15:                                               ; preds = %9, %2
  %16 = and i64 %5, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %23

23:                                               ; preds = %13, %15
  %24 = phi i64* [ %22, %15 ], [ %14, %13 ]
  %25 = load i64, i64* %1, align 8
  %26 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %25) #11
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %31, align 8
  %32 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %33

33:                                               ; preds = %23, %29
  %34 = phi i64 [ %32, %29 ], [ %26, %23 ]
  %35 = getelementptr inbounds i64, i64* %24, i64 4
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %34 to i32
  %38 = trunc i64 %36 to i32
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds i64, i64* %24, i64 5
  %42 = load i64, i64* %41, align 8
  br label %46

43:                                               ; preds = %33
  %44 = ashr i32 %37, 1
  %45 = call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 %6, i64* %1, i32 %44)
  br label %46

46:                                               ; preds = %43, %40
  %47 = phi i64 [ %42, %40 ], [ %45, %43 ]
  ret i64 %47
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase.1225"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %6 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase.1225", %"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %9 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 1, i64 0
  br label %24

16:                                               ; preds = %10, %4
  %17 = and i64 %7, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 16
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %24

24:                                               ; preds = %14, %16
  %25 = phi i64* [ %23, %16 ], [ %15, %14 ]
  %26 = add i64 %7, 15
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = ashr i32 %28, 1
  %30 = getelementptr inbounds i64, i64* %25, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i32 %29, -1
  %33 = and i32 %32, %3
  %34 = shl i32 %33, 3
  %35 = add i32 %34, 12
  %36 = sext i32 %35 to i64
  %37 = add i64 %7, 7
  %38 = add i64 %37, %36
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = trunc i64 %31 to i32
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %68, label %43

43:                                               ; preds = %24
  %44 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5 to i8*
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0
  br label %47

47:                                               ; preds = %55, %43
  %48 = phi i32 [ %40, %43 ], [ %66, %55 ]
  %49 = phi i32 [ %33, %43 ], [ %58, %55 ]
  %50 = phi i32 [ 1, %43 ], [ %56, %55 ]
  %51 = zext i32 %48 to i64
  %52 = or i64 %51, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %53 = load i64, i64* %2, align 8
  store i64 %53, i64* %45, align 8
  %54 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %46, i64 %52) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  br i1 %54, label %71, label %55

55:                                               ; preds = %47
  %56 = add i32 %50, 1
  %57 = add i32 %50, %49
  %58 = and i32 %57, %32
  %59 = shl i32 %58, 3
  %60 = load i64, i64* %6, align 8
  %61 = add i32 %59, 12
  %62 = sext i32 %61 to i64
  %63 = add nsw i64 %62, 7
  %64 = add i64 %63, %60
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = icmp eq i32 %66, %41
  br i1 %67, label %68, label %47

68:                                               ; preds = %55, %24
  %69 = getelementptr inbounds i64, i64* %25, i64 5
  %70 = load i64, i64* %69, align 8
  br label %83

71:                                               ; preds = %47
  %72 = load i64, i64* %6, align 8
  %73 = and i64 %72, -4294967296
  %74 = shl i32 %49, 3
  %75 = add i32 %74, 16
  %76 = or i32 %75, 7
  %77 = sext i32 %76 to i64
  %78 = add i64 %72, %77
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %73, %81
  br label %83

83:                                               ; preds = %71, %68
  %84 = phi i64 [ %70, %68 ], [ %82, %71 ]
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase.1225"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase.1225", %"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = tail call i64 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6LookupENS0_16PtrComprCageBaseENS0_6HandleINS0_6ObjectEEEi(%"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 %6, i64* %1, i32 %2)
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase.1225"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 %3, 3
  %5 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase.1225", %"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i32 %4, 16
  %9 = or i32 %8, 7
  %10 = sext i32 %9 to i64
  %11 = add i64 %6, %10
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %7, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE17EntryToValueIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = shl i32 %2, 1
  %4 = add nsw i32 %3, 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE20FillEntriesWithHolesENS0_6HandleIS2_EE(i64*) local_unnamed_addr #0 comdat align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = add i64 %2, 3
  %4 = inttoptr i64 %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 7
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = lshr i32 %5, 1
  %9 = zext i32 %8 to i64
  br label %11

10:                                               ; preds = %30, %1
  ret void

11:                                               ; preds = %43, %7
  %12 = phi i64 [ %2, %7 ], [ %44, %43 ]
  %13 = phi i64 [ 3, %7 ], [ %41, %43 ]
  %14 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %15 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %14, i64 0, i32 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %14, i64 0, i32 1, i64 0
  br label %30

22:                                               ; preds = %16, %11
  %23 = and i64 %12, -262144
  %24 = or i64 %23, 16
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 16
  %27 = add i64 %26, -41416
  %28 = inttoptr i64 %27 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %30

30:                                               ; preds = %20, %22
  %31 = phi i64* [ %29, %22 ], [ %21, %20 ]
  %32 = getelementptr inbounds i64, i64* %31, i64 5
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %13 to i32
  %35 = shl i32 %34, 2
  %36 = sext i32 %35 to i64
  %37 = add nsw i64 %36, 7
  %38 = add i64 %37, %12
  %39 = inttoptr i64 %38 to i32*
  %40 = trunc i64 %33 to i32
  store atomic volatile i32 %40, i32* %39 monotonic, align 4
  %41 = add nuw nsw i64 %13, 1
  %42 = icmp ult i64 %41, %9
  br i1 %42, label %43, label %10

43:                                               ; preds = %30
  %44 = load i64, i64* %0, align 8
  br label %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3PutENS0_6HandleIS2_EENS5_INS0_6ObjectEEES8_(i64*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = inttoptr i64 %6 to %"class.v8::internal::BasicMemoryChunk"*
  %8 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %7, i64 0, i32 2
  %9 = bitcast %"class.v8::internal::Heap"** %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = load i64, i64* %1, align 8
  %14 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %13) #11
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %19, align 8
  %20 = call i64 @_ZN2v88internal10JSReceiver23GetOrCreateIdentityHashEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nonnull %4, %"class.v8::internal::Isolate"* %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %21

21:                                               ; preds = %3, %17
  %22 = phi i64 [ %20, %17 ], [ %14, %3 ]
  %23 = trunc i64 %22 to i32
  %24 = ashr i32 %23, 1
  %25 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3PutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEESA_i(%"class.v8::internal::Isolate"* %12, i64* %0, i64* %1, i64* %2, i32 %24)
  ret i64* %25
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3PutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEESA_i(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", align 8
  %10 = load i64, i64* %1, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, 15
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = ashr i32 %15, 1
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i32 %16, -1
  %20 = and i32 %19, %4
  %21 = shl i32 %20, 3
  %22 = add i32 %21, 12
  %23 = sext i32 %22 to i64
  %24 = add i64 %10, 7
  %25 = add i64 %24, %23
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = trunc i64 %18 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %91, label %30

30:                                               ; preds = %5
  %31 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %32 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  br label %34

34:                                               ; preds = %42, %30
  %35 = phi i32 [ %27, %30 ], [ %51, %42 ]
  %36 = phi i32 [ %20, %30 ], [ %45, %42 ]
  %37 = phi i32 [ 1, %30 ], [ %43, %42 ]
  %38 = zext i32 %35 to i64
  %39 = or i64 %12, %38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  %40 = load i64, i64* %2, align 8
  store i64 %40, i64* %32, align 8
  %41 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %33, i64 %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br i1 %41, label %53, label %42

42:                                               ; preds = %34
  %43 = add i32 %37, 1
  %44 = add i32 %37, %36
  %45 = and i32 %44, %19
  %46 = shl i32 %45, 3
  %47 = add i32 %46, 12
  %48 = sext i32 %47 to i64
  %49 = add i64 %24, %48
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = icmp eq i32 %51, %28
  br i1 %52, label %88, label %34

53:                                               ; preds = %34
  %54 = load i64, i64* %1, align 8
  %55 = shl i32 %36, 3
  %56 = load i64, i64* %3, align 8
  %57 = add i32 %55, 16
  %58 = or i32 %57, 7
  %59 = sext i32 %58 to i64
  %60 = add i64 %54, %59
  %61 = inttoptr i64 %60 to i32*
  %62 = trunc i64 %56 to i32
  store atomic volatile i32 %62, i32* %61 monotonic, align 4
  %63 = and i64 %56, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %201, label %65

65:                                               ; preds = %53
  %66 = and i64 %54, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 262144
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %65
  %73 = or i64 %66, 16
  %74 = inttoptr i64 %73 to %"class.v8::internal::Heap"**
  %75 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %74, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %75, i64 %54, i64 %60, i64 %56) #11
  br label %76

76:                                               ; preds = %72, %65
  %77 = and i64 %56, -262144
  %78 = or i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 24
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %201, label %83

83:                                               ; preds = %76
  %84 = load i64, i64* %68, align 8
  %85 = and i64 %84, 24
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %201

87:                                               ; preds = %83
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %54, i64 %60, i64 %56) #11
  br label %201

88:                                               ; preds = %42
  %89 = load i64, i64* %1, align 8
  %90 = add i64 %89, 7
  br label %91

91:                                               ; preds = %88, %5
  %92 = phi i64 [ %90, %88 ], [ %24, %5 ]
  %93 = phi i64 [ %89, %88 ], [ %10, %5 ]
  %94 = add i64 %93, 11
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, -2
  %98 = inttoptr i64 %92 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = ashr i32 %99, 1
  %101 = icmp sgt i32 %97, %100
  br i1 %101, label %102, label %112

102:                                              ; preds = %91
  %103 = bitcast %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  %104 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %93, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %11, align 8
  call void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1224"* nonnull %105, i64 %106)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  %107 = load i64, i64* %1, align 8
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i32*
  %110 = add i64 %107, 11
  %111 = inttoptr i64 %110 to i32*
  br label %112

112:                                              ; preds = %102, %91
  %113 = phi i32* [ %111, %102 ], [ %95, %91 ]
  %114 = phi i32* [ %109, %102 ], [ %98, %91 ]
  %115 = phi i64 [ %107, %102 ], [ %93, %91 ]
  %116 = add i64 %115, 15
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = ashr i32 %118, 1
  %120 = load atomic i32, i32* %114 monotonic, align 4
  %121 = ashr i32 %120, 1
  %122 = load atomic i32, i32* %113 monotonic, align 4
  %123 = add nsw i32 %121, 1
  %124 = icmp sgt i32 %119, %123
  br i1 %124, label %125, label %134

125:                                              ; preds = %112
  %126 = ashr i32 %122, 1
  %127 = sub nsw i32 %119, %123
  %128 = sdiv i32 %127, 2
  %129 = icmp slt i32 %128, %126
  br i1 %129, label %134, label %130

130:                                              ; preds = %125
  %131 = sdiv i32 %123, 2
  %132 = add nsw i32 %131, %123
  %133 = icmp sgt i32 %132, %119
  br i1 %133, label %134, label %149

134:                                              ; preds = %130, %125, %112
  %135 = load atomic i32, i32* %114 monotonic, align 4
  %136 = add i32 %135, 2
  %137 = and i32 %136, -2
  %138 = ashr i32 %136, 1
  %139 = add nsw i32 %138, %137
  %140 = call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %139) #11
  %141 = icmp sgt i32 %140, 67108861
  br i1 %141, label %142, label %149

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  call void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %143, i32 0, i32 10, i32 0) #11
  call void @_ZN2v88internal4Heap17CollectAllGarbageEiNS0_23GarbageCollectionReasonENS_15GCCallbackFlagsE(%"class.v8::internal::Heap"* %143, i32 0, i32 10, i32 0) #11
  %144 = bitcast %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #11
  %145 = load i64, i64* %1, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0
  %148 = load i64, i64* %11, align 8
  call void @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1224"* nonnull %147, i64 %148)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #11
  br label %149

149:                                              ; preds = %130, %134, %142
  %150 = call i64* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %151 = bitcast %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #11
  %152 = load i64, i64* %150, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef", %"class.v8::internal::Handle<v8::internal::EphemeronHashTable>::ObjectRef"* %9, i64 0, i32 0, i32 0
  %155 = load i64, i64* %150, align 8
  %156 = add i64 %155, 15
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = ashr i32 %158, 1
  %160 = add nsw i32 %159, -1
  %161 = and i32 %160, %4
  %162 = zext i32 %161 to i64
  %163 = shl i32 %161, 3
  %164 = add i32 %163, 12
  %165 = sext i32 %164 to i64
  %166 = add i64 %155, 7
  %167 = add i64 %166, %165
  %168 = inttoptr i64 %167 to i32*
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = load i64, i64* %17, align 8
  %171 = trunc i64 %170 to i32
  %172 = icmp eq i32 %169, %171
  br i1 %172, label %197, label %173

173:                                              ; preds = %149
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %175 = load i64, i64* %174, align 8
  %176 = trunc i64 %175 to i32
  %177 = icmp eq i32 %169, %176
  br i1 %177, label %197, label %181

178:                                              ; preds = %181
  %179 = add i32 %182, 1
  %180 = icmp eq i32 %191, %176
  br i1 %180, label %195, label %181

181:                                              ; preds = %173, %178
  %182 = phi i32 [ %179, %178 ], [ 1, %173 ]
  %183 = phi i32 [ %185, %178 ], [ %161, %173 ]
  %184 = add i32 %183, %182
  %185 = and i32 %184, %160
  %186 = shl i32 %185, 3
  %187 = add i32 %186, 12
  %188 = sext i32 %187 to i64
  %189 = add i64 %166, %188
  %190 = inttoptr i64 %189 to i32*
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = icmp eq i32 %191, %171
  br i1 %192, label %193, label %178

193:                                              ; preds = %181
  %194 = zext i32 %185 to i64
  br label %197

195:                                              ; preds = %178
  %196 = zext i32 %185 to i64
  br label %197

197:                                              ; preds = %149, %173, %193, %195
  %198 = phi i64 [ %162, %149 ], [ %194, %193 ], [ %162, %173 ], [ %196, %195 ]
  %199 = load i64, i64* %2, align 8
  %200 = load i64, i64* %3, align 8
  call void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE8AddEntryENS0_13InternalIndexENS0_6ObjectES6_(%"class.v8::internal::ObjectHashTableBase.1225"* nonnull %154, i64 %198, i64 %199, i64 %200)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #11
  br label %201

201:                                              ; preds = %87, %83, %76, %53, %197
  %202 = phi i64* [ %150, %197 ], [ %1, %53 ], [ %1, %76 ], [ %1, %83 ], [ %1, %87 ]
  ret i64* %202
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE8AddEntryENS0_13InternalIndexENS0_6ObjectES6_(%"class.v8::internal::ObjectHashTableBase.1225"*, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %1 to i32
  %6 = shl i32 %5, 3
  %7 = add i32 %6, 12
  %8 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase.1225", %"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sext i32 %7 to i64
  %11 = add nsw i64 %10, 7
  %12 = add i64 %9, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  %15 = load i64, i64* %8, align 8
  %16 = add i64 %15, %11
  %17 = and i64 %2, 1
  %18 = icmp eq i64 %17, 0
  %19 = and i64 %15, -262144
  br i1 %18, label %32, label %20

20:                                               ; preds = %4
  %21 = or i64 %19, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 262144
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %20
  %27 = or i64 %19, 16
  %28 = inttoptr i64 %27 to %"class.v8::internal::Heap"**
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %29, i64 %15, i64 %16, i64 %2) #11
  %30 = load i64, i64* %8, align 8
  %31 = add i64 %30, %11
  br label %32

32:                                               ; preds = %26, %20, %4
  %33 = phi i64 [ %15, %20 ], [ %30, %26 ], [ %15, %4 ]
  %34 = phi i64 [ %16, %20 ], [ %31, %26 ], [ %16, %4 ]
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %32
  %42 = or i64 %19, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 24
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %41
  %48 = or i64 %19, 16
  %49 = inttoptr i64 %48 to %"class.v8::internal::Heap"**
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %49, align 16
  tail call void @_ZN2v88internal40Heap_GenerationalEphemeronKeyBarrierSlowEPNS0_4HeapENS0_18EphemeronHashTableEm(%"class.v8::internal::Heap"* %50, i64 %15, i64 %34) #11
  %51 = load i64, i64* %8, align 8
  br label %52

52:                                               ; preds = %32, %41, %47
  %53 = phi i64 [ %33, %32 ], [ %33, %41 ], [ %51, %47 ]
  %54 = add i32 %6, 16
  %55 = or i32 %54, 7
  %56 = sext i32 %55 to i64
  %57 = add i64 %53, %56
  %58 = inttoptr i64 %57 to i32*
  %59 = trunc i64 %3 to i32
  store atomic volatile i32 %59, i32* %58 monotonic, align 4
  %60 = load i64, i64* %8, align 8
  %61 = add i64 %60, %56
  %62 = and i64 %3, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %95, label %64

64:                                               ; preds = %52
  %65 = and i64 %60, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 262144
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %64
  %72 = or i64 %65, 16
  %73 = inttoptr i64 %72 to %"class.v8::internal::Heap"**
  %74 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %73, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %74, i64 %60, i64 %61, i64 %3) #11
  %75 = load i64, i64* %8, align 8
  %76 = add i64 %75, %56
  br label %77

77:                                               ; preds = %71, %64
  %78 = phi i64 [ %61, %64 ], [ %76, %71 ]
  %79 = phi i64 [ %60, %64 ], [ %75, %71 ]
  %80 = and i64 %3, -262144
  %81 = or i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 24
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %77
  %87 = and i64 %79, -262144
  %88 = or i64 %87, 8
  %89 = inttoptr i64 %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, 24
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %86
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %79, i64 %78, i64 %3) #11
  %94 = load i64, i64* %8, align 8
  br label %95

95:                                               ; preds = %52, %77, %86, %93
  %96 = phi i64 [ %60, %52 ], [ %79, %77 ], [ %79, %86 ], [ %94, %93 ]
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = add i32 %99, 2
  %101 = and i32 %100, -2
  store atomic volatile i32 %101, i32* %98 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPb(%"class.v8::internal::Isolate"*, i64*, i64*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::JSReceiver", align 8
  %6 = load i64, i64* %2, align 8
  %7 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %6) #11
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.v8::internal::JSReceiver"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %12, align 8
  %13 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4, %10
  %17 = phi i64 [ %13, %10 ], [ %7, %4 ]
  %18 = trunc i64 %17 to i32
  br label %44

19:                                               ; preds = %10
  %20 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %21 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %20, i64 0, i32 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %20, i64 0, i32 1, i64 0
  br label %36

28:                                               ; preds = %22, %19
  %29 = and i64 %13, -262144
  %30 = or i64 %29, 16
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %36

36:                                               ; preds = %26, %28
  %37 = phi i64* [ %35, %28 ], [ %27, %26 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 4
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %13 to i32
  %41 = trunc i64 %39 to i32
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  store i8 0, i8* %3, align 1
  br label %48

44:                                               ; preds = %16, %36
  %45 = phi i32 [ %18, %16 ], [ %40, %36 ]
  %46 = ashr i32 %45, 1
  %47 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPbi(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i8* %3, i32 %46)
  br label %48

48:                                               ; preds = %44, %43
  %49 = phi i64* [ %1, %43 ], [ %47, %44 ]
  ret i64* %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPbi(%"class.v8::internal::Isolate"*, i64*, i64*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = load i64, i64* %1, align 8
  %8 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %9 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %8, i64 0, i32 1, i64 0
  br label %24

16:                                               ; preds = %10, %5
  %17 = and i64 %7, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 16
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %24

24:                                               ; preds = %14, %16
  %25 = phi i64* [ %23, %16 ], [ %15, %14 ]
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %7, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = ashr i32 %30, 1
  %32 = getelementptr inbounds i64, i64* %25, i64 4
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i32 %31, -1
  %35 = and i32 %34, %4
  %36 = shl i32 %35, 3
  %37 = add i32 %36, 12
  %38 = sext i32 %37 to i64
  %39 = add i64 %7, 7
  %40 = add i64 %39, %38
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = trunc i64 %33 to i32
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %68, label %45

45:                                               ; preds = %24
  %46 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %47 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  br label %49

49:                                               ; preds = %57, %45
  %50 = phi i32 [ %42, %45 ], [ %66, %57 ]
  %51 = phi i32 [ %35, %45 ], [ %60, %57 ]
  %52 = phi i32 [ 1, %45 ], [ %58, %57 ]
  %53 = zext i32 %50 to i64
  %54 = or i64 %27, %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  %55 = load i64, i64* %2, align 8
  store i64 %55, i64* %47, align 8
  %56 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %48, i64 %54) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br i1 %56, label %69, label %57

57:                                               ; preds = %49
  %58 = add i32 %52, 1
  %59 = add i32 %52, %51
  %60 = and i32 %59, %34
  %61 = shl i32 %60, 3
  %62 = add i32 %61, 12
  %63 = sext i32 %62 to i64
  %64 = add i64 %39, %63
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = icmp eq i32 %66, %43
  br i1 %67, label %68, label %49

68:                                               ; preds = %57, %24
  store i8 0, i8* %3, align 1
  br label %134

69:                                               ; preds = %49
  store i8 1, i8* %3, align 1
  %70 = load i64, i64* %1, align 8
  %71 = shl i32 %51, 3
  %72 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %73 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %72, i64 0, i32 0, i32 1
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %72, i64 0, i32 1, i64 0
  br label %88

80:                                               ; preds = %74, %69
  %81 = and i64 %70, -262144
  %82 = or i64 %81, 16
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 16
  %85 = add i64 %84, -41416
  %86 = inttoptr i64 %85 to %"class.v8::internal::Isolate"*
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %86, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %88

88:                                               ; preds = %80, %78
  %89 = phi i64* [ %87, %80 ], [ %79, %78 ]
  %90 = getelementptr inbounds i64, i64* %89, i64 5
  %91 = load i64, i64* %90, align 8
  %92 = add i32 %71, 12
  %93 = sext i32 %92 to i64
  %94 = add i64 %70, 7
  %95 = add i64 %94, %93
  %96 = inttoptr i64 %95 to i32*
  %97 = trunc i64 %91 to i32
  store atomic volatile i32 %97, i32* %96 monotonic, align 4
  %98 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %99 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %98, i64 0, i32 0, i32 1
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %98, i64 0, i32 1, i64 0
  br label %114

106:                                              ; preds = %100, %88
  %107 = and i64 %70, -262144
  %108 = or i64 %107, 16
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 16
  %111 = add i64 %110, -41416
  %112 = inttoptr i64 %111 to %"class.v8::internal::Isolate"*
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %114

114:                                              ; preds = %104, %106
  %115 = phi i64* [ %113, %106 ], [ %105, %104 ]
  %116 = getelementptr inbounds i64, i64* %115, i64 5
  %117 = load i64, i64* %116, align 8
  %118 = add i32 %71, 16
  %119 = or i32 %118, 7
  %120 = sext i32 %119 to i64
  %121 = add i64 %70, %120
  %122 = inttoptr i64 %121 to i32*
  %123 = trunc i64 %117 to i32
  store atomic volatile i32 %123, i32* %122 monotonic, align 4
  %124 = inttoptr i64 %94 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = add i32 %125, -2
  %127 = and i32 %126, -2
  store atomic volatile i32 %127, i32* %124 monotonic, align 4
  %128 = add i64 %70, 11
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = add i32 %130, 2
  %132 = and i32 %131, -2
  store atomic volatile i32 %132, i32* %129 monotonic, align 4
  %133 = tail call i64* @_ZN2v88internal9HashTableINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  br label %134

134:                                              ; preds = %114, %68
  %135 = phi i64* [ %1, %68 ], [ %133, %114 ]
  ret i64* %135
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase.1225"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 %3, 3
  %5 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase.1225", %"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %8 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 1, i64 0
  br label %23

15:                                               ; preds = %9, %2
  %16 = and i64 %6, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %23

23:                                               ; preds = %13, %15
  %24 = phi i64* [ %22, %15 ], [ %14, %13 ]
  %25 = getelementptr inbounds i64, i64* %24, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = add i32 %4, 12
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %28, 7
  %30 = add i64 %29, %6
  %31 = inttoptr i64 %30 to i32*
  %32 = trunc i64 %26 to i32
  store atomic volatile i32 %32, i32* %31 monotonic, align 4
  %33 = load i64, i64* %5, align 8
  %34 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %35 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 1, i64 0
  br label %50

42:                                               ; preds = %36, %23
  %43 = and i64 %33, -262144
  %44 = or i64 %43, 16
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 16
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %50

50:                                               ; preds = %40, %42
  %51 = phi i64* [ %49, %42 ], [ %41, %40 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 5
  %53 = load i64, i64* %52, align 8
  %54 = add i32 %4, 16
  %55 = or i32 %54, 7
  %56 = sext i32 %55 to i64
  %57 = add i64 %33, %56
  %58 = inttoptr i64 %57 to i32*
  %59 = trunc i64 %53 to i32
  store atomic volatile i32 %59, i32* %58 monotonic, align 4
  %60 = load i64, i64* %5, align 8
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = add i32 %63, -2
  %65 = and i32 %64, -2
  store atomic volatile i32 %65, i32* %62 monotonic, align 4
  %66 = load i64, i64* %5, align 8
  %67 = add i64 %66, 11
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = add i32 %69, 2
  %71 = and i32 %70, -2
  store atomic volatile i32 %71, i32* %68 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC2Ev(%"class.v8::internal::ObjectHashTableBase.1225"*) unnamed_addr #0 comdat($_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase.1225", %"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC2Em(%"class.v8::internal::ObjectHashTableBase.1225"*, i64) unnamed_addr #5 comdat($_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ObjectHashTableBase.1225", %"class.v8::internal::ObjectHashTableBase.1225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1227"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 19
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1227"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 19
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEji(%"class.v8::internal::HashTable.1227"*, i64, i64*, i32, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 15
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds i64, i64* %2, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i64, i64* %2, i64 5
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i32 %11, -1
  %17 = and i32 %16, %4
  %18 = shl i32 %17, 3
  %19 = add i32 %18, 12
  %20 = sext i32 %19 to i64
  %21 = add i64 %7, 7
  %22 = add i64 %21, %20
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = trunc i64 %13 to i32
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %63, label %27

27:                                               ; preds = %5
  %28 = trunc i64 %15 to i32
  br label %29

29:                                               ; preds = %27, %50
  %30 = phi i32 [ %24, %27 ], [ %59, %50 ]
  %31 = phi i32 [ %17, %27 ], [ %53, %50 ]
  %32 = phi i32 [ 1, %27 ], [ %51, %50 ]
  %33 = zext i32 %30 to i64
  %34 = or i64 %33, %1
  %35 = icmp eq i32 %30, %28
  br i1 %35, label %50, label %36

36:                                               ; preds = %29
  %37 = and i64 %33, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = ashr i32 %30, 1
  %41 = sitofp i32 %40 to double
  br label %46

42:                                               ; preds = %36
  %43 = add i64 %34, 3
  %44 = inttoptr i64 %43 to double*
  %45 = load double, double* %44, align 1
  br label %46

46:                                               ; preds = %39, %42
  %47 = phi double [ %41, %39 ], [ %45, %42 ]
  %48 = fptoui double %47 to i32
  %49 = icmp eq i32 %48, %3
  br i1 %49, label %61, label %50

50:                                               ; preds = %29, %46
  %51 = add i32 %32, 1
  %52 = add i32 %31, %32
  %53 = and i32 %52, %16
  %54 = shl i32 %53, 3
  %55 = add i32 %54, 12
  %56 = sext i32 %55 to i64
  %57 = add i64 %21, %56
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = icmp eq i32 %59, %25
  br i1 %60, label %63, label %29

61:                                               ; preds = %46
  %62 = zext i32 %31 to i64
  br label %63

63:                                               ; preds = %50, %61, %5
  %64 = phi i64 [ -1, %5 ], [ %62, %61 ], [ -1, %50 ]
  ret i64 %64
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable.1227"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = shl i32 %4, 3
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i32 %5, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1227"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ 4, %2 ], [ %14, %11 ]
  %17 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %18 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 1, i64 0
  br label %32

25:                                               ; preds = %19, %15
  %26 = or i64 %5, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %32

32:                                               ; preds = %23, %25
  %33 = phi i64* [ %31, %25 ], [ %24, %23 ]
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = ashr i32 %36, 1
  %38 = zext i32 %37 to i64
  %39 = icmp eq i32 %37, 0
  %40 = and i64 %1, 4294967295
  %41 = icmp eq i64 %40, 0
  %42 = getelementptr inbounds i64, i64* %33, i64 4
  %43 = getelementptr inbounds i64, i64* %33, i64 5
  %44 = getelementptr inbounds i64, i64* %33, i64 134
  br label %45

45:                                               ; preds = %32, %59
  %46 = phi i32 [ 1, %32 ], [ %60, %59 ]
  br i1 %39, label %228, label %47

47:                                               ; preds = %45
  tail call void @llvm.assume(i1 %41) #11
  %48 = icmp ugt i32 %46, 1
  br label %63

49:                                               ; preds = %59
  br i1 %39, label %228, label %50

50:                                               ; preds = %49
  %51 = load i64, i64* %42, align 8
  %52 = load i64, i64* %43, align 8
  %53 = trunc i64 %52 to i32
  %54 = trunc i64 %51 to i32
  %55 = and i64 %38, 1
  %56 = icmp eq i32 %37, 1
  br i1 %56, label %217, label %57

57:                                               ; preds = %50
  %58 = sub nsw i64 %38, %55
  br label %232

59:                                               ; preds = %208
  %60 = add nuw nsw i32 %46, 1
  %61 = and i8 %210, 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %45, label %49

63:                                               ; preds = %47, %208
  %64 = phi i8 [ 1, %47 ], [ %210, %208 ]
  %65 = phi i64 [ 0, %47 ], [ %209, %208 ]
  %66 = trunc i64 %65 to i32
  %67 = shl i32 %66, 3
  %68 = load i64, i64* %3, align 8
  %69 = add i32 %67, 12
  %70 = sext i32 %69 to i64
  %71 = add i64 %68, 7
  %72 = add i64 %71, %70
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %75, %1
  %77 = load i64, i64* %42, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %74, %78
  br i1 %79, label %84, label %80

80:                                               ; preds = %63
  %81 = load i64, i64* %43, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %74, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %80, %63
  %85 = add nuw i64 %65, 1
  br label %208

86:                                               ; preds = %80
  %87 = and i64 %75, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = ashr i32 %74, 1
  %91 = sitofp i32 %90 to double
  br label %96

92:                                               ; preds = %86
  %93 = add i64 %76, 3
  %94 = inttoptr i64 %93 to double*
  %95 = load double, double* %94, align 1
  br label %96

96:                                               ; preds = %92, %89
  %97 = phi double [ %91, %89 ], [ %95, %92 ]
  %98 = fptoui double %97 to i32
  %99 = load i64, i64* %44, align 8
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i64*
  %102 = load i64, i64* %101, align 1
  %103 = zext i32 %98 to i64
  %104 = xor i64 %102, %103
  %105 = xor i64 %104, -1
  %106 = shl i64 %104, 18
  %107 = add i64 %106, %105
  %108 = lshr i64 %107, 31
  %109 = xor i64 %108, %107
  %110 = mul i64 %109, 21
  %111 = lshr i64 %110, 11
  %112 = xor i64 %111, %110
  %113 = mul i64 %112, 65
  %114 = lshr i64 %113, 22
  %115 = xor i64 %114, %113
  %116 = trunc i64 %115 to i32
  %117 = add i64 %68, 15
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = ashr i32 %119, 1
  %121 = add nsw i32 %120, -1
  %122 = and i32 %121, 1073741823
  %123 = and i32 %122, %116
  %124 = zext i32 %123 to i64
  br i1 %48, label %125, label %138

125:                                              ; preds = %96, %130
  %126 = phi i64 [ %134, %130 ], [ %124, %96 ]
  %127 = phi i32 [ %133, %130 ], [ %123, %96 ]
  %128 = phi i32 [ %132, %130 ], [ 1, %96 ]
  %129 = icmp eq i64 %126, %65
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = add i32 %128, %127
  %132 = add nuw nsw i32 %128, 1
  %133 = and i32 %131, %121
  %134 = zext i32 %133 to i64
  %135 = icmp eq i32 %132, %46
  br i1 %135, label %136, label %125

136:                                              ; preds = %130
  %137 = zext i32 %133 to i64
  br label %138

138:                                              ; preds = %125, %136, %96
  %139 = phi i64 [ %124, %96 ], [ %137, %136 ], [ %65, %125 ]
  %140 = icmp eq i64 %65, %139
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = add i64 %65, 1
  br label %208

143:                                              ; preds = %138
  %144 = trunc i64 %139 to i32
  %145 = shl i32 %144, 3
  %146 = add i32 %145, 12
  %147 = sext i32 %146 to i64
  %148 = add i64 %71, %147
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %151, %1
  %153 = icmp eq i32 %150, %78
  %154 = icmp eq i32 %150, %82
  %155 = or i1 %153, %154
  br i1 %155, label %205, label %156

156:                                              ; preds = %143
  %157 = and i64 %151, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %156
  %160 = ashr i32 %150, 1
  %161 = sitofp i32 %160 to double
  br label %166

162:                                              ; preds = %156
  %163 = add i64 %152, 3
  %164 = inttoptr i64 %163 to double*
  %165 = load double, double* %164, align 1
  br label %166

166:                                              ; preds = %162, %159
  %167 = phi double [ %161, %159 ], [ %165, %162 ]
  %168 = fptoui double %167 to i32
  %169 = zext i32 %168 to i64
  %170 = xor i64 %102, %169
  %171 = xor i64 %170, -1
  %172 = shl i64 %170, 18
  %173 = add i64 %172, %171
  %174 = lshr i64 %173, 31
  %175 = xor i64 %174, %173
  %176 = mul i64 %175, 21
  %177 = lshr i64 %176, 11
  %178 = xor i64 %177, %176
  %179 = mul i64 %178, 65
  %180 = lshr i64 %179, 22
  %181 = xor i64 %180, %179
  %182 = trunc i64 %181 to i32
  %183 = load atomic i32, i32* %118 monotonic, align 4
  %184 = ashr i32 %183, 1
  %185 = add nsw i32 %184, -1
  %186 = and i32 %185, 1073741823
  %187 = and i32 %186, %182
  %188 = zext i32 %187 to i64
  br i1 %48, label %189, label %202

189:                                              ; preds = %166, %194
  %190 = phi i64 [ %198, %194 ], [ %188, %166 ]
  %191 = phi i32 [ %197, %194 ], [ %187, %166 ]
  %192 = phi i32 [ %196, %194 ], [ 1, %166 ]
  %193 = icmp eq i64 %190, %139
  br i1 %193, label %206, label %194

194:                                              ; preds = %189
  %195 = add i32 %192, %191
  %196 = add nuw nsw i32 %192, 1
  %197 = and i32 %195, %185
  %198 = zext i32 %197 to i64
  %199 = icmp eq i32 %196, %46
  br i1 %199, label %200, label %189

200:                                              ; preds = %194
  %201 = zext i32 %197 to i64
  br label %202

202:                                              ; preds = %200, %166
  %203 = phi i64 [ %188, %166 ], [ %201, %200 ]
  %204 = icmp eq i64 %203, %139
  br i1 %204, label %206, label %205

205:                                              ; preds = %202, %143
  tail call void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1227"* %0, i64 %65, i64 %139, i32 %16)
  br label %208

206:                                              ; preds = %189, %202
  %207 = add i64 %65, 1
  br label %208

208:                                              ; preds = %141, %206, %205, %84
  %209 = phi i64 [ %85, %84 ], [ %142, %141 ], [ %65, %205 ], [ %207, %206 ]
  %210 = phi i8 [ %64, %84 ], [ %64, %141 ], [ %64, %205 ], [ 0, %206 ]
  %211 = icmp ult i64 %209, %38
  br i1 %211, label %63, label %59

212:                                              ; preds = %259
  %213 = trunc i64 %260 to i32
  %214 = shl i32 %213, 3
  %215 = or i32 %214, 12
  %216 = sext i32 %215 to i64
  br label %217

217:                                              ; preds = %212, %50
  %218 = phi i64 [ 12, %50 ], [ %216, %212 ]
  %219 = icmp eq i64 %55, 0
  br i1 %219, label %228, label %220

220:                                              ; preds = %217
  %221 = load i64, i64* %3, align 8
  %222 = add i64 %221, 7
  %223 = add i64 %222, %218
  %224 = inttoptr i64 %223 to i32*
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = icmp eq i32 %225, %53
  br i1 %226, label %227, label %228

227:                                              ; preds = %220
  store atomic volatile i32 %54, i32* %224 monotonic, align 4
  br label %228

228:                                              ; preds = %45, %217, %220, %227, %49
  %229 = load i64, i64* %3, align 8
  %230 = add i64 %229, 11
  %231 = inttoptr i64 %230 to i32*
  store atomic volatile i32 0, i32* %231 monotonic, align 4
  ret void

232:                                              ; preds = %259, %57
  %233 = phi i64 [ 0, %57 ], [ %260, %259 ]
  %234 = phi i64 [ %58, %57 ], [ %261, %259 ]
  %235 = trunc i64 %233 to i32
  %236 = shl i32 %235, 3
  %237 = load i64, i64* %3, align 8
  %238 = or i32 %236, 12
  %239 = sext i32 %238 to i64
  %240 = add i64 %237, 7
  %241 = add i64 %240, %239
  %242 = inttoptr i64 %241 to i32*
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = icmp eq i32 %243, %53
  br i1 %244, label %245, label %246

245:                                              ; preds = %232
  store atomic volatile i32 %54, i32* %242 monotonic, align 4
  br label %246

246:                                              ; preds = %245, %232
  %247 = trunc i64 %233 to i32
  %248 = shl i32 %247, 3
  %249 = or i32 %248, 8
  %250 = load i64, i64* %3, align 8
  %251 = add i32 %249, 12
  %252 = sext i32 %251 to i64
  %253 = add i64 %250, 7
  %254 = add i64 %253, %252
  %255 = inttoptr i64 %254 to i32*
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = icmp eq i32 %256, %53
  br i1 %257, label %258, label %259

258:                                              ; preds = %246
  store atomic volatile i32 %54, i32* %255 monotonic, align 4
  br label %259

259:                                              ; preds = %258, %246
  %260 = add nuw nsw i64 %233, 2
  %261 = add i64 %234, -2
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %212, label %232
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable.1227"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = and i64 %2, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = trunc i64 %2 to i32
  %10 = ashr i32 %9, 1
  %11 = sitofp i32 %10 to double
  br label %16

12:                                               ; preds = %5
  %13 = add i64 %2, 3
  %14 = inttoptr i64 %13 to double*
  %15 = load double, double* %14, align 1
  br label %16

16:                                               ; preds = %8, %12
  %17 = phi double [ %11, %8 ], [ %15, %12 ]
  %18 = fptoui double %17 to i32
  %19 = getelementptr inbounds i64, i64* %1, i64 134
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = zext i32 %18 to i64
  %25 = xor i64 %23, %24
  %26 = xor i64 %25, -1
  %27 = shl i64 %25, 18
  %28 = add i64 %27, %26
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = mul i64 %30, 21
  %32 = lshr i64 %31, 11
  %33 = xor i64 %32, %31
  %34 = mul i64 %33, 65
  %35 = lshr i64 %34, 22
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %37, 1073741823
  %39 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 15
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = ashr i32 %43, 1
  %45 = add nsw i32 %44, -1
  %46 = and i32 %38, %45
  %47 = zext i32 %46 to i64
  %48 = icmp sgt i32 %3, 1
  br i1 %48, label %49, label %62

49:                                               ; preds = %16, %54
  %50 = phi i64 [ %58, %54 ], [ %47, %16 ]
  %51 = phi i32 [ %57, %54 ], [ %46, %16 ]
  %52 = phi i32 [ %56, %54 ], [ 1, %16 ]
  %53 = icmp eq i64 %50, %4
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = add i32 %51, %52
  %56 = add nuw nsw i32 %52, 1
  %57 = and i32 %55, %45
  %58 = zext i32 %57 to i64
  %59 = icmp eq i32 %56, %3
  br i1 %59, label %60, label %49

60:                                               ; preds = %54
  %61 = zext i32 %57 to i64
  br label %62

62:                                               ; preds = %49, %60, %16
  %63 = phi i64 [ %47, %16 ], [ %61, %60 ], [ %4, %49 ]
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1227"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [2 x %"class.v8::internal::Object"], align 16
  %6 = bitcast [2 x %"class.v8::internal::Object"]* %5 to i8*
  %7 = trunc i64 %1 to i32
  %8 = shl i32 %7, 3
  %9 = trunc i64 %2 to i32
  %10 = shl i32 %9, 3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i32 %8, 12
  %15 = sext i32 %14 to i64
  %16 = add nsw i64 %15, 7
  %17 = add i64 %16, %12
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %13, %20
  %22 = getelementptr inbounds [2 x %"class.v8::internal::Object"], [2 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 %21, i64* %22, align 16
  %23 = shl i32 %7, 3
  %24 = add i32 %23, 16
  %25 = or i32 %24, 7
  %26 = sext i32 %25 to i64
  %27 = add i64 %12, %26
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %13, %30
  %32 = getelementptr inbounds [2 x %"class.v8::internal::Object"], [2 x %"class.v8::internal::Object"]* %5, i64 0, i64 1, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = add i32 %10, 12
  %34 = sext i32 %33 to i64
  %35 = add nsw i64 %34, 7
  %36 = add i64 %12, %35
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %13, %39
  store atomic volatile i32 %38, i32* %18 monotonic, align 4
  switch i32 %3, label %57 [
    i32 4, label %41
    i32 0, label %96
  ]

41:                                               ; preds = %4
  %42 = load i64, i64* %11, align 8
  %43 = add i64 %42, %16
  %44 = and i64 %39, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %77, label %46

46:                                               ; preds = %41
  %47 = and i64 %42, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 262144
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %46
  %54 = or i64 %47, 16
  %55 = inttoptr i64 %54 to %"class.v8::internal::Heap"**
  %56 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %55, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %56, i64 %42, i64 %43, i64 %40) #11
  br label %60

57:                                               ; preds = %4
  %58 = and i64 %39, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %77, label %60

60:                                               ; preds = %57, %53, %46
  %61 = load i64, i64* %11, align 8
  %62 = add i64 %61, %16
  %63 = and i64 %40, -262144
  %64 = or i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 24
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %60
  %70 = and i64 %61, -262144
  %71 = or i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 24
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %69
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %61, i64 %62, i64 %40) #11
  br label %77

77:                                               ; preds = %76, %69, %60, %57, %41
  %78 = load i64, i64* %11, align 8
  %79 = and i64 %78, -4294967296
  %80 = shl i32 %9, 3
  %81 = add i32 %80, 16
  %82 = or i32 %81, 7
  %83 = sext i32 %82 to i64
  %84 = add i64 %78, %83
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %79, %87
  %89 = shl i32 %7, 3
  %90 = add i32 %89, 16
  %91 = or i32 %90, 7
  %92 = sext i32 %91 to i64
  %93 = add i64 %78, %92
  %94 = inttoptr i64 %93 to i32*
  store atomic volatile i32 %86, i32* %94 monotonic, align 4
  %95 = icmp eq i32 %3, 4
  br i1 %95, label %191, label %213

96:                                               ; preds = %4
  %97 = load i64, i64* %11, align 8
  %98 = shl i32 %9, 3
  %99 = add i32 %98, 16
  %100 = or i32 %99, 7
  %101 = sext i32 %100 to i64
  %102 = add i64 %97, %101
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = shl i32 %7, 3
  %106 = add i32 %105, 16
  %107 = or i32 %106, 7
  %108 = sext i32 %107 to i64
  %109 = add i64 %97, %108
  %110 = inttoptr i64 %109 to i32*
  store atomic volatile i32 %104, i32* %110 monotonic, align 4
  %111 = load i64, i64* %22, align 16
  %112 = load i64, i64* %11, align 8
  %113 = add i64 %112, %35
  %114 = inttoptr i64 %113 to i32*
  %115 = trunc i64 %111 to i32
  store atomic volatile i32 %115, i32* %114 monotonic, align 4
  %116 = load i64, i64* %32, align 8
  %117 = shl i32 %9, 3
  %118 = add i32 %117, 16
  %119 = load i64, i64* %11, align 8
  %120 = or i32 %118, 7
  %121 = sext i32 %120 to i64
  %122 = add i64 %119, %121
  %123 = inttoptr i64 %122 to i32*
  %124 = trunc i64 %116 to i32
  store atomic volatile i32 %124, i32* %123 monotonic, align 4
  br label %233

125:                                              ; preds = %232, %225, %216, %213
  %126 = load i64, i64* %22, align 16
  %127 = load i64, i64* %11, align 8
  %128 = add i64 %127, %35
  %129 = inttoptr i64 %128 to i32*
  %130 = trunc i64 %126 to i32
  store atomic volatile i32 %130, i32* %129 monotonic, align 4
  %131 = icmp eq i32 %3, 4
  br i1 %131, label %132, label %159

132:                                              ; preds = %125, %196
  %133 = phi i64 [ %197, %196 ], [ %126, %125 ]
  %134 = load i64, i64* %11, align 8
  %135 = add i64 %134, %35
  %136 = and i64 %133, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %148

138:                                              ; preds = %132
  %139 = load i64, i64* %32, align 8
  %140 = shl i32 %9, 3
  %141 = add i32 %140, 16
  %142 = load i64, i64* %11, align 8
  %143 = or i32 %141, 7
  %144 = sext i32 %143 to i64
  %145 = add i64 %142, %144
  %146 = inttoptr i64 %145 to i32*
  %147 = trunc i64 %139 to i32
  store atomic volatile i32 %147, i32* %146 monotonic, align 4
  br label %234

148:                                              ; preds = %132
  %149 = and i64 %134, -262144
  %150 = or i64 %149, 8
  %151 = inttoptr i64 %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = and i64 %152, 262144
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %148
  %156 = or i64 %149, 16
  %157 = inttoptr i64 %156 to %"class.v8::internal::Heap"**
  %158 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %157, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %158, i64 %134, i64 %135, i64 %133) #11
  br label %162

159:                                              ; preds = %125
  %160 = and i64 %126, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %159, %155, %148
  %163 = phi i64 [ %126, %159 ], [ %133, %155 ], [ %133, %148 ]
  %164 = load i64, i64* %11, align 8
  %165 = add i64 %164, %35
  %166 = and i64 %163, -262144
  %167 = or i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, 24
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %162
  %173 = and i64 %164, -262144
  %174 = or i64 %173, 8
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = and i64 %176, 24
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %164, i64 %165, i64 %163) #11
  br label %180

180:                                              ; preds = %179, %172, %162, %159
  %181 = load i64, i64* %32, align 8
  %182 = shl i32 %9, 3
  %183 = add i32 %182, 16
  %184 = load i64, i64* %11, align 8
  %185 = or i32 %183, 7
  %186 = sext i32 %185 to i64
  %187 = add i64 %184, %186
  %188 = inttoptr i64 %187 to i32*
  %189 = trunc i64 %181 to i32
  store atomic volatile i32 %189, i32* %188 monotonic, align 4
  %190 = icmp eq i32 %3, 4
  br i1 %190, label %234, label %252

191:                                              ; preds = %77
  %192 = load i64, i64* %11, align 8
  %193 = add i64 %192, %92
  %194 = and i64 %87, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %202

196:                                              ; preds = %191
  %197 = load i64, i64* %22, align 16
  %198 = load i64, i64* %11, align 8
  %199 = add i64 %198, %35
  %200 = inttoptr i64 %199 to i32*
  %201 = trunc i64 %197 to i32
  store atomic volatile i32 %201, i32* %200 monotonic, align 4
  br label %132

202:                                              ; preds = %191
  %203 = and i64 %192, -262144
  %204 = or i64 %203, 8
  %205 = inttoptr i64 %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, 262144
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %216, label %209

209:                                              ; preds = %202
  %210 = or i64 %203, 16
  %211 = inttoptr i64 %210 to %"class.v8::internal::Heap"**
  %212 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %211, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %212, i64 %192, i64 %193, i64 %88) #11
  br label %216

213:                                              ; preds = %77
  %214 = and i64 %87, 1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %125, label %216

216:                                              ; preds = %202, %209, %213
  %217 = load i64, i64* %11, align 8
  %218 = add i64 %217, %92
  %219 = and i64 %88, -262144
  %220 = or i64 %219, 8
  %221 = inttoptr i64 %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %222, 24
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %125, label %225

225:                                              ; preds = %216
  %226 = and i64 %217, -262144
  %227 = or i64 %226, 8
  %228 = inttoptr i64 %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = and i64 %229, 24
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %125

232:                                              ; preds = %225
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %217, i64 %218, i64 %88) #11
  br label %125

233:                                              ; preds = %273, %266, %255, %252, %234, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void

234:                                              ; preds = %180, %138
  %235 = phi i64 [ %144, %138 ], [ %186, %180 ]
  %236 = phi i64 [ %139, %138 ], [ %181, %180 ]
  %237 = load i64, i64* %11, align 8
  %238 = add i64 %237, %235
  %239 = and i64 %236, 1
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %233, label %241

241:                                              ; preds = %234
  %242 = and i64 %237, -262144
  %243 = or i64 %242, 8
  %244 = inttoptr i64 %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = and i64 %245, 262144
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %255, label %248

248:                                              ; preds = %241
  %249 = or i64 %242, 16
  %250 = inttoptr i64 %249 to %"class.v8::internal::Heap"**
  %251 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %250, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %251, i64 %237, i64 %238, i64 %236) #11
  br label %255

252:                                              ; preds = %180
  %253 = and i64 %181, 1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %233, label %255

255:                                              ; preds = %241, %248, %252
  %256 = phi i64 [ %235, %241 ], [ %235, %248 ], [ %186, %252 ]
  %257 = phi i64 [ %236, %241 ], [ %236, %248 ], [ %181, %252 ]
  %258 = load i64, i64* %11, align 8
  %259 = add i64 %258, %256
  %260 = and i64 %257, -262144
  %261 = or i64 %260, 8
  %262 = inttoptr i64 %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = and i64 %263, 24
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %233, label %266

266:                                              ; preds = %255
  %267 = and i64 %258, -262144
  %268 = or i64 %267, 8
  %269 = inttoptr i64 %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = and i64 %270, 24
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %233

273:                                              ; preds = %266
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %258, i64 %259, i64 %257) #11
  br label %233
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1227"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = shl i32 %2, 1
  %4 = add nsw i32 %3, 3
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1227"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = trunc i64 %2 to i32
  %9 = shl i32 %8, 3
  %10 = add i32 %9, 12
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 7
  %13 = add i64 %12, %6
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = getelementptr inbounds i64, i64* %1, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %15, %20
  br i1 %21, label %29, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds i64, i64* %1, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %15, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %17, i64* %28, align 8
  br label %29

29:                                               ; preds = %22, %4, %27
  %30 = phi i1 [ true, %27 ], [ false, %22 ], [ false, %4 ]
  ret i1 %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable.1227"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 3
  %8 = add i32 %7, 12
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %4
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1227"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = trunc i64 %2 to i32
  %6 = shl i32 %5, 3
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i32 %6, 12
  %10 = sext i32 %9 to i64
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %8
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = zext i32 %14 to i64
  %18 = or i64 %17, %1
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %4
  %28 = and i64 %8, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = getelementptr inbounds i64, i64* %36, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %14, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %36, i64 5
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %14, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %18, i64* %47, align 8
  br label %48

48:                                               ; preds = %41, %35, %46
  %49 = phi i1 [ true, %46 ], [ false, %41 ], [ false, %35 ]
  ret i1 %49
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -3
  %3 = sdiv i32 %2, 2
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable.1227"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable.1227"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = shl i32 %12, 3
  %15 = add i32 %14, 12
  %16 = sext i32 %15 to i64
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %49, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %25, %35, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %36, %35 ], [ %13, %25 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = shl i32 %43, 3
  %45 = add i32 %44, 12
  %46 = sext i32 %45 to i64
  %47 = add i64 %17, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %23
  br i1 %50, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable.1227"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = shl i32 %11, 3
  %14 = add i32 %13, 12
  %15 = sext i32 %14 to i64
  %16 = add i64 %5, 7
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %48, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %48, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %42, %27
  br i1 %31, label %46, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = shl i32 %36, 3
  %38 = add i32 %37, 12
  %39 = sext i32 %38 to i64
  %40 = add i64 %16, %39
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %22
  br i1 %43, label %44, label %29

44:                                               ; preds = %32
  %45 = zext i32 %36 to i64
  br label %48

46:                                               ; preds = %29
  %47 = zext i32 %36 to i64
  br label %48

48:                                               ; preds = %46, %24, %44, %3
  %49 = phi i64 [ %12, %3 ], [ %45, %44 ], [ %12, %24 ], [ %47, %46 ]
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %71, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 67108861
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = shl i32 %31, 1
  %51 = add nsw i32 %50, 3
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 62
  %54 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %52, i64* %53, i32 %51, i8 zeroext %49) #11
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i32*
  store atomic volatile i32 0, i32* %57 monotonic, align 4
  %58 = load i64, i64* %54, align 8
  %59 = add i64 %58, 11
  %60 = inttoptr i64 %59 to i32*
  store atomic volatile i32 0, i32* %60 monotonic, align 4
  %61 = load i64, i64* %54, align 8
  %62 = add i64 %61, 15
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 %50, i32* %63 monotonic, align 4
  %64 = bitcast %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = load i64, i64* %1, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %54, align 8
  call void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1227"* nonnull %67, i64 %69, i64 %70)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %71

71:                                               ; preds = %28, %48
  %72 = phi i64* [ %54, %48 ], [ %1, %28 ]
  ret i64* %72
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 67108861
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = shl i32 %17, 1
  %19 = add nsw i32 %18, 3
  %20 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 62
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %20, i64* %21, i32 %19, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = add i64 %29, 15
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %18, i32* %31 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1227"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = and i64 %2, -262144
  %5 = or i64 %4, 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 262144
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = and i64 %7, 24
  %12 = icmp eq i64 %11, 0
  %13 = select i1 %12, i32 4, i32 0
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i32 [ 4, %3 ], [ %13, %10 ]
  %16 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %19 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 1, i64 0
  br label %34

26:                                               ; preds = %20, %14
  %27 = and i64 %17, -262144
  %28 = or i64 %27, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %24, %26
  %35 = phi i64* [ %33, %26 ], [ %25, %24 ]
  %36 = add i64 %17, 15
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = ashr i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = icmp eq i32 %39, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %34
  %43 = add i64 %2, 7
  br label %56

44:                                               ; preds = %34
  %45 = and i64 %1, 4294967295
  %46 = icmp eq i64 %45, 0
  tail call void @llvm.assume(i1 %46) #11
  %47 = getelementptr inbounds i64, i64* %35, i64 4
  %48 = getelementptr inbounds i64, i64* %35, i64 5
  %49 = getelementptr inbounds i64, i64* %35, i64 134
  %50 = add i64 %2, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = add i64 %2, 7
  %53 = icmp eq i32 %15, 0
  %54 = or i64 %4, 16
  %55 = inttoptr i64 %54 to %"class.v8::internal::Heap"**
  br label %66

56:                                               ; preds = %219, %42
  %57 = phi i64 [ %43, %42 ], [ %52, %219 ]
  %58 = phi i64 [ %17, %42 ], [ %222, %219 ]
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, -2
  %63 = inttoptr i64 %57 to i32*
  store atomic volatile i32 %62, i32* %63 monotonic, align 4
  %64 = add i64 %2, 11
  %65 = inttoptr i64 %64 to i32*
  store atomic volatile i32 0, i32* %65 monotonic, align 4
  ret void

66:                                               ; preds = %219, %44
  %67 = phi i64 [ %17, %44 ], [ %222, %219 ]
  %68 = phi i64 [ 0, %44 ], [ %220, %219 ]
  %69 = trunc i64 %68 to i32
  %70 = shl i32 %69, 3
  %71 = add i32 %70, 12
  %72 = sext i32 %71 to i64
  %73 = add nsw i64 %72, 7
  %74 = add i64 %73, %67
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %77, %1
  %79 = load i64, i64* %47, align 8
  %80 = trunc i64 %79 to i32
  %81 = icmp eq i32 %76, %80
  br i1 %81, label %219, label %82

82:                                               ; preds = %66
  %83 = load i64, i64* %48, align 8
  %84 = trunc i64 %83 to i32
  %85 = icmp eq i32 %76, %84
  br i1 %85, label %219, label %86

86:                                               ; preds = %82
  %87 = and i64 %77, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = ashr i32 %76, 1
  %91 = sitofp i32 %90 to double
  br label %96

92:                                               ; preds = %86
  %93 = add i64 %78, 3
  %94 = inttoptr i64 %93 to double*
  %95 = load double, double* %94, align 1
  br label %96

96:                                               ; preds = %89, %92
  %97 = phi double [ %91, %89 ], [ %95, %92 ]
  %98 = fptoui double %97 to i32
  %99 = load i64, i64* %49, align 8
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i64*
  %102 = load i64, i64* %101, align 1
  %103 = zext i32 %98 to i64
  %104 = xor i64 %102, %103
  %105 = xor i64 %104, -1
  %106 = shl i64 %104, 18
  %107 = add i64 %106, %105
  %108 = lshr i64 %107, 31
  %109 = xor i64 %108, %107
  %110 = mul i64 %109, 21
  %111 = lshr i64 %110, 11
  %112 = xor i64 %111, %110
  %113 = mul i64 %112, 65
  %114 = lshr i64 %113, 22
  %115 = xor i64 %114, %113
  %116 = trunc i64 %115 to i32
  %117 = load atomic i32, i32* %51 monotonic, align 4
  %118 = ashr i32 %117, 1
  %119 = add nsw i32 %118, -1
  %120 = and i32 %119, 1073741823
  %121 = and i32 %120, %116
  %122 = shl i32 %121, 3
  %123 = add i32 %122, 12
  %124 = sext i32 %123 to i64
  %125 = add i64 %52, %124
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = icmp eq i32 %127, %80
  br i1 %128, label %145, label %129

129:                                              ; preds = %96, %134
  %130 = phi i32 [ %143, %134 ], [ %127, %96 ]
  %131 = phi i32 [ %137, %134 ], [ %121, %96 ]
  %132 = phi i32 [ %135, %134 ], [ 1, %96 ]
  %133 = icmp eq i32 %130, %84
  br i1 %133, label %145, label %134

134:                                              ; preds = %129
  %135 = add i32 %132, 1
  %136 = add i32 %132, %131
  %137 = and i32 %136, %119
  %138 = shl i32 %137, 3
  %139 = add i32 %138, 12
  %140 = sext i32 %139 to i64
  %141 = add i64 %52, %140
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = icmp eq i32 %143, %80
  br i1 %144, label %145, label %129

145:                                              ; preds = %134, %129, %96
  %146 = phi i32 [ %121, %96 ], [ %137, %134 ], [ %131, %129 ]
  %147 = shl i32 %146, 3
  %148 = load atomic i32, i32* %75 monotonic, align 4
  %149 = zext i32 %148 to i64
  %150 = or i64 %149, %1
  %151 = add i32 %147, 12
  %152 = sext i32 %151 to i64
  %153 = add i64 %52, %152
  %154 = inttoptr i64 %153 to i32*
  store atomic volatile i32 %148, i32* %154 monotonic, align 4
  %155 = and i64 %149, 1
  %156 = icmp eq i64 %155, 0
  %157 = or i1 %53, %156
  br i1 %157, label %176, label %158

158:                                              ; preds = %145
  %159 = load i64, i64* %6, align 8
  %160 = and i64 %159, 262144
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %55, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %163, i64 %2, i64 %153, i64 %150) #11
  br label %164

164:                                              ; preds = %162, %158
  %165 = and i64 %150, -262144
  %166 = or i64 %165, 8
  %167 = inttoptr i64 %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = and i64 %168, 24
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %176, label %171

171:                                              ; preds = %164
  %172 = load i64, i64* %6, align 8
  %173 = and i64 %172, 24
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %171
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %153, i64 %150) #11
  br label %176

176:                                              ; preds = %145, %164, %171, %175
  %177 = load i64, i64* %16, align 8
  %178 = shl i32 %69, 3
  %179 = add i32 %178, 16
  %180 = or i32 %179, 7
  %181 = sext i32 %180 to i64
  %182 = add i64 %177, %181
  %183 = inttoptr i64 %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  br i1 %53, label %195, label %185

185:                                              ; preds = %176
  %186 = zext i32 %184 to i64
  %187 = or i64 %186, %1
  %188 = shl i32 %146, 3
  %189 = add i32 %188, 16
  %190 = sext i32 %189 to i64
  %191 = add i64 %52, %190
  %192 = inttoptr i64 %191 to i32*
  store atomic volatile i32 %184, i32* %192 monotonic, align 4
  %193 = and i64 %186, 1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %219, label %201

195:                                              ; preds = %176
  %196 = shl i32 %146, 3
  %197 = add i32 %196, 16
  %198 = sext i32 %197 to i64
  %199 = add i64 %52, %198
  %200 = inttoptr i64 %199 to i32*
  store atomic volatile i32 %184, i32* %200 monotonic, align 4
  br label %219

201:                                              ; preds = %185
  %202 = load i64, i64* %6, align 8
  %203 = and i64 %202, 262144
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %201
  %206 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %55, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %206, i64 %2, i64 %191, i64 %187) #11
  br label %207

207:                                              ; preds = %201, %205
  %208 = and i64 %187, -262144
  %209 = or i64 %208, 8
  %210 = inttoptr i64 %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, 24
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %219, label %214

214:                                              ; preds = %207
  %215 = load i64, i64* %6, align 8
  %216 = and i64 %215, 24
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %214
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %191, i64 %187) #11
  br label %219

219:                                              ; preds = %218, %214, %207, %185, %195, %82, %66
  %220 = add i64 %68, 1
  %221 = icmp eq i64 %220, %40
  %222 = load i64, i64* %16, align 8
  br i1 %221, label %56, label %66
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable.1227"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11SetCapacityEi(%"class.v8::internal::HashTable.1227"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC2Ev(%"class.v8::internal::HashTable.1227"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC2Em(%"class.v8::internal::HashTable.1227"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1227", %"class.v8::internal::HashTable.1227"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 67108861
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = shl i32 %16, 1
  %18 = add nsw i32 %17, 3
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %20 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 62
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %19, i64* %22, i32 %18, i8 zeroext %2) #11
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 0, i32* %26 monotonic, align 4
  %27 = load i64, i64* %23, align 8
  %28 = add i64 %27, 11
  %29 = inttoptr i64 %28 to i32*
  store atomic volatile i32 0, i32* %29 monotonic, align 4
  %30 = load i64, i64* %23, align 8
  %31 = add i64 %30, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %17, i32* %32 monotonic, align 4
  ret i64* %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %78

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 67108861
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = shl i32 %56, 1
  %58 = add nuw nsw i32 %57, 3
  %59 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 62
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %59, i64* %60, i32 %58, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = add i64 %68, 15
  %70 = inttoptr i64 %69 to i32*
  store atomic volatile i32 %57, i32* %70 monotonic, align 4
  %71 = bitcast %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = load i64, i64* %1, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1227"* nonnull %74, i64 %76, i64 %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %78

78:                                               ; preds = %25, %55
  %79 = phi i64* [ %61, %55 ], [ %1, %25 ]
  ret i64* %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %81

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 67108861
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = shl i32 %55, 1
  %57 = add nuw nsw i32 %56, 3
  %58 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %59 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 62
  %62 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %58, i64* %61, i32 %57, i8 zeroext %46) #11
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i32*
  store atomic volatile i32 0, i32* %65 monotonic, align 4
  %66 = load i64, i64* %62, align 8
  %67 = add i64 %66, 11
  %68 = inttoptr i64 %67 to i32*
  store atomic volatile i32 0, i32* %68 monotonic, align 4
  %69 = load i64, i64* %62, align 8
  %70 = add i64 %69, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %56, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %62, align 8
  call void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1227"* nonnull %75, i64 %79, i64 %80)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %81

81:                                               ; preds = %25, %54
  %82 = phi i64* [ %62, %54 ], [ %1, %25 ]
  ret i64* %82
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 3
  %8 = add i32 %7, 16
  %9 = or i32 %8, 7
  %10 = sext i32 %9 to i64
  %11 = add i64 %4, %10
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE7ValueAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::Dictionary"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = shl i32 %4, 3
  %8 = add i32 %7, 16
  %9 = or i32 %8, 7
  %10 = sext i32 %9 to i64
  %11 = add i64 %6, %10
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  ret i64 %17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE10ValueAtPutENS0_13InternalIndexENS0_6ObjectE(%"class.v8::internal::Dictionary"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %1 to i32
  %5 = shl i32 %4, 3
  %6 = add i32 %5, 16
  %7 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = or i32 %6, 7
  %10 = sext i32 %9 to i64
  %11 = add i64 %8, %10
  %12 = inttoptr i64 %11 to i32*
  %13 = trunc i64 %2 to i32
  store atomic volatile i32 %13, i32* %12 monotonic, align 4
  %14 = load i64, i64* %7, align 8
  %15 = add i64 %14, %10
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %3
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  %29 = load i64, i64* %7, align 8
  %30 = add i64 %29, %10
  br label %31

31:                                               ; preds = %25, %18
  %32 = phi i64 [ %15, %18 ], [ %30, %25 ]
  %33 = phi i64 [ %14, %18 ], [ %29, %25 ]
  %34 = and i64 %2, -262144
  %35 = or i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 24
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %31
  %41 = and i64 %33, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 24
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %32, i64 %2) #11
  br label %48

48:                                               ; preds = %3, %31, %40, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE9DetailsAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary"*, i64) local_unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE12DetailsAtPutENS0_13InternalIndexENS0_15PropertyDetailsE(%"class.v8::internal::Dictionary"*, i64, i32) local_unnamed_addr #5 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::SimpleNumberDictionary", align 8
  %5 = load i64, i64* %1, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %3
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 5
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::SimpleNumberDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.v8::internal::SimpleNumberDictionary", %"class.v8::internal::SimpleNumberDictionary"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::SimpleNumberDictionary", %"class.v8::internal::SimpleNumberDictionary"* %4, i64 0, i32 0
  call void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary"* nonnull %28, i64 %2, i64 %25, i64 %25, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %29 = load i64, i64* %1, align 8
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = add i32 %32, -2
  %34 = and i32 %33, -2
  store atomic volatile i32 %34, i32* %31 monotonic, align 4
  %35 = add i64 %29, 11
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = add i32 %37, 2
  %39 = and i32 %38, -2
  store atomic volatile i32 %39, i32* %36 monotonic, align 4
  %40 = call i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0) #11
  ret i64* %40
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE10ClearEntryENS0_13InternalIndexE(%"class.v8::internal::Dictionary"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::SimpleNumberDictionary", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %2
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 5
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::SimpleNumberDictionary"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.v8::internal::SimpleNumberDictionary", %"class.v8::internal::SimpleNumberDictionary"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::SimpleNumberDictionary", %"class.v8::internal::SimpleNumberDictionary"* %3, i64 0, i32 0
  call void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary"* nonnull %28, i64 %1, i64 %25, i64 %25, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = tail call i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %5 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 1, i64 0
  br label %20

12:                                               ; preds = %6, %1
  %13 = and i64 %3, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %20

20:                                               ; preds = %10, %12
  %21 = phi i64* [ %19, %12 ], [ %11, %10 ]
  %22 = add i64 %3, 15
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = ashr i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = icmp eq i32 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  %29 = and i64 %3, -4294967296
  %30 = getelementptr inbounds i64, i64* %21, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds i64, i64* %21, i64 5
  br label %35

34:                                               ; preds = %66, %20
  ret i32 0

35:                                               ; preds = %28, %66
  %36 = phi i64 [ 0, %28 ], [ %67, %66 ]
  %37 = trunc i64 %36 to i32
  %38 = shl i32 %37, 3
  %39 = add i32 %38, 12
  %40 = sext i32 %39 to i64
  %41 = add nsw i64 %40, 7
  %42 = add i64 %41, %3
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %29, %45
  %47 = icmp eq i32 %44, %32
  br i1 %47, label %66, label %48

48:                                               ; preds = %35
  %49 = load i64, i64* %33, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %44, %50
  br i1 %51, label %66, label %52

52:                                               ; preds = %48
  %53 = and i64 %45, 1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = add i64 %46, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %29, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 64
  br i1 %64, label %66, label %65

65:                                               ; preds = %52, %55
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

66:                                               ; preds = %55, %35, %48
  %67 = add i64 %36, 1
  %68 = icmp eq i64 %67, %26
  br i1 %68, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::Dictionary"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %6 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 1, i64 0
  br label %21

13:                                               ; preds = %7, %2
  %14 = and i64 %4, -262144
  %15 = or i64 %14, 16
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %21

21:                                               ; preds = %11, %13
  %22 = phi i64* [ %20, %13 ], [ %12, %11 ]
  %23 = add i64 %4, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = ashr i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = getelementptr inbounds i64, i64* %22, i64 4
  %31 = load i64, i64* %30, align 8
  br label %68

32:                                               ; preds = %21
  %33 = add i64 %4, 7
  %34 = getelementptr inbounds i64, i64* %22, i64 4
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds i64, i64* %22, i64 5
  %38 = trunc i64 %1 to i32
  br label %39

39:                                               ; preds = %32, %61
  %40 = phi i64 [ 0, %32 ], [ %62, %61 ]
  %41 = trunc i64 %40 to i32
  %42 = shl i32 %41, 3
  %43 = add i32 %42, 12
  %44 = sext i32 %43 to i64
  %45 = add i64 %33, %44
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = icmp eq i32 %47, %36
  br i1 %48, label %61, label %49

49:                                               ; preds = %39
  %50 = load i64, i64* %37, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %47, %51
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = add i32 %42, 16
  %55 = or i32 %54, 7
  %56 = sext i32 %55 to i64
  %57 = add i64 %4, %56
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = icmp eq i32 %59, %38
  br i1 %60, label %64, label %61

61:                                               ; preds = %53, %49, %39
  %62 = add i64 %40, 1
  %63 = icmp eq i64 %62, %27
  br i1 %63, label %68, label %39

64:                                               ; preds = %53
  %65 = and i64 %4, -4294967296
  %66 = zext i32 %47 to i64
  %67 = or i64 %65, %66
  br label %68

68:                                               ; preds = %61, %29, %64
  %69 = phi i64 [ %67, %64 ], [ %31, %29 ], [ %35, %61 ]
  ret i64 %69
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary"*, i64, i64, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 8
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 262144
  %15 = icmp ne i64 %14, 0
  %16 = and i64 %13, 24
  %17 = icmp eq i64 %16, 0
  %18 = or i1 %15, %17
  %19 = add i32 %7, 12
  %20 = sext i32 %19 to i64
  %21 = add nsw i64 %20, 7
  %22 = add i64 %9, %21
  %23 = inttoptr i64 %22 to i32*
  %24 = trunc i64 %2 to i32
  store atomic volatile i32 %24, i32* %23 monotonic, align 4
  br i1 %18, label %25, label %61

25:                                               ; preds = %5
  %26 = load i64, i64* %8, align 8
  %27 = add i64 %26, %21
  %28 = and i64 %2, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %69, label %30

30:                                               ; preds = %25
  %31 = and i64 %26, -262144
  %32 = or i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 262144
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %30
  %38 = or i64 %31, 16
  %39 = inttoptr i64 %38 to %"class.v8::internal::Heap"**
  %40 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %39, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %40, i64 %26, i64 %27, i64 %2) #11
  %41 = load i64, i64* %8, align 8
  %42 = add i64 %41, %21
  br label %43

43:                                               ; preds = %30, %37
  %44 = phi i64 [ %27, %30 ], [ %42, %37 ]
  %45 = phi i64 [ %26, %30 ], [ %41, %37 ]
  %46 = and i64 %2, -262144
  %47 = or i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 24
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %43
  %53 = and i64 %45, -262144
  %54 = or i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, 24
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %69

59:                                               ; preds = %52
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %45, i64 %44, i64 %2) #11
  %60 = load i64, i64* %8, align 8
  br label %69

61:                                               ; preds = %5
  %62 = add i32 %7, 16
  %63 = load i64, i64* %8, align 8
  %64 = or i32 %62, 7
  %65 = sext i32 %64 to i64
  %66 = add i64 %63, %65
  %67 = inttoptr i64 %66 to i32*
  %68 = trunc i64 %3 to i32
  store atomic volatile i32 %68, i32* %67 monotonic, align 4
  br label %111

69:                                               ; preds = %25, %43, %52, %59
  %70 = phi i64 [ %26, %25 ], [ %45, %43 ], [ %45, %52 ], [ %60, %59 ]
  %71 = add i32 %7, 16
  %72 = or i32 %71, 7
  %73 = sext i32 %72 to i64
  %74 = add i64 %70, %73
  %75 = inttoptr i64 %74 to i32*
  %76 = trunc i64 %3 to i32
  store atomic volatile i32 %76, i32* %75 monotonic, align 4
  %77 = load i64, i64* %8, align 8
  %78 = add i64 %77, %73
  %79 = and i64 %3, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %111, label %81

81:                                               ; preds = %69
  %82 = and i64 %77, -262144
  %83 = or i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 262144
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %94, label %88

88:                                               ; preds = %81
  %89 = or i64 %82, 16
  %90 = inttoptr i64 %89 to %"class.v8::internal::Heap"**
  %91 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %90, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %91, i64 %77, i64 %78, i64 %3) #11
  %92 = load i64, i64* %8, align 8
  %93 = add i64 %92, %73
  br label %94

94:                                               ; preds = %81, %88
  %95 = phi i64 [ %78, %81 ], [ %93, %88 ]
  %96 = phi i64 [ %77, %81 ], [ %92, %88 ]
  %97 = and i64 %3, -262144
  %98 = or i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 24
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %111, label %103

103:                                              ; preds = %94
  %104 = and i64 %96, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 24
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %96, i64 %95, i64 %3) #11
  br label %111

111:                                              ; preds = %61, %69, %94, %103, %110
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE17RawFieldOfValueAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 %3, 3
  %5 = add i32 %4, 16
  %6 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = or i32 %5, 7
  %9 = sext i32 %8 to i64
  %10 = add i64 %7, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE11ShallowCopyEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 62
  %5 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %3, i64* %1, i64* %4) #11
  ret i64* %5
}

declare i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EEjNS7_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 1
  %14 = zext i32 %2 to i64
  %15 = xor i64 %13, %14
  %16 = xor i64 %15, -1
  %17 = shl i64 %15, 18
  %18 = add i64 %17, %16
  %19 = lshr i64 %18, 31
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 21
  %22 = lshr i64 %21, 11
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 65
  %25 = lshr i64 %24, 22
  %26 = xor i64 %25, %24
  %27 = trunc i64 %26 to i32
  %28 = add i64 %6, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = ashr i32 %30, 1
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i32 %31, -1
  %37 = and i32 %36, 1073741823
  %38 = and i32 %37, %27
  %39 = shl i32 %38, 3
  %40 = add i32 %39, 12
  %41 = sext i32 %40 to i64
  %42 = add i64 %6, 7
  %43 = add i64 %42, %41
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = trunc i64 %33 to i32
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %82, label %48

48:                                               ; preds = %5
  %49 = trunc i64 %35 to i32
  br label %50

50:                                               ; preds = %71, %48
  %51 = phi i32 [ %45, %48 ], [ %80, %71 ]
  %52 = phi i32 [ %38, %48 ], [ %74, %71 ]
  %53 = phi i32 [ 1, %48 ], [ %72, %71 ]
  %54 = zext i32 %51 to i64
  %55 = or i64 %8, %54
  %56 = icmp eq i32 %51, %49
  br i1 %56, label %71, label %57

57:                                               ; preds = %50
  %58 = and i64 %54, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = ashr i32 %51, 1
  %62 = sitofp i32 %61 to double
  br label %67

63:                                               ; preds = %57
  %64 = add i64 %55, 3
  %65 = inttoptr i64 %64 to double*
  %66 = load double, double* %65, align 1
  br label %67

67:                                               ; preds = %63, %60
  %68 = phi double [ %62, %60 ], [ %66, %63 ]
  %69 = fptoui double %68 to i32
  %70 = icmp eq i32 %69, %2
  br i1 %70, label %84, label %71

71:                                               ; preds = %67, %50
  %72 = add i32 %53, 1
  %73 = add i32 %53, %52
  %74 = and i32 %73, %36
  %75 = shl i32 %74, 3
  %76 = add i32 %75, 12
  %77 = sext i32 %76 to i64
  %78 = add i64 %42, %77
  %79 = inttoptr i64 %78 to i32*
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = icmp eq i32 %80, %46
  br i1 %81, label %82, label %50

82:                                               ; preds = %71, %5
  %83 = tail call i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i64* %3, i32 %4, %"class.v8::internal::InternalIndex"* null)
  br label %118

84:                                               ; preds = %67
  %85 = load i64, i64* %3, align 8
  %86 = shl i32 %52, 3
  %87 = add i32 %86, 16
  %88 = or i32 %87, 7
  %89 = sext i32 %88 to i64
  %90 = add i64 %6, %89
  %91 = inttoptr i64 %90 to i32*
  %92 = trunc i64 %85 to i32
  store atomic volatile i32 %92, i32* %91 monotonic, align 4
  %93 = and i64 %85, 1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %118, label %95

95:                                               ; preds = %84
  %96 = and i64 %6, -262144
  %97 = or i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 262144
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %95
  %103 = or i64 %96, 16
  %104 = inttoptr i64 %103 to %"class.v8::internal::Heap"**
  %105 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %104, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %105, i64 %6, i64 %90, i64 %85) #11
  br label %106

106:                                              ; preds = %102, %95
  %107 = and i64 %85, -262144
  %108 = or i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = and i64 %110, 24
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %106
  %114 = load i64, i64* %98, align 8
  %115 = and i64 %114, 24
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %113
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %6, i64 %90, i64 %85) #11
  br label %118

118:                                              ; preds = %117, %113, %106, %84, %82
  %119 = phi i64* [ %83, %82 ], [ %1, %84 ], [ %1, %106 ], [ %1, %113 ], [ %1, %117 ]
  ret i64* %119
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = zext i32 %2 to i64
  %14 = xor i64 %12, %13
  %15 = xor i64 %14, -1
  %16 = shl i64 %14, 18
  %17 = add i64 %16, %15
  %18 = lshr i64 %17, 31
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 21
  %21 = lshr i64 %20, 11
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 65
  %24 = lshr i64 %23, 22
  %25 = xor i64 %24, %23
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 1073741823
  %28 = tail call i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %29 = icmp ult i32 %2, 1073741824
  br i1 %29, label %30, label %51

30:                                               ; preds = %6
  %31 = sext i32 %2 to i64
  %32 = shl nsw i64 %31, 1
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #11
  br label %58

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %32, i64* %47, align 8
  br label %58

51:                                               ; preds = %6
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = uitofp i32 %2 to double
  %54 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %52) #11
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 3
  %57 = inttoptr i64 %56 to double*
  store double %53, double* %57, align 1
  br label %58

58:                                               ; preds = %36, %46, %51
  %59 = phi i64* [ %54, %51 ], [ %37, %36 ], [ %47, %46 ]
  %60 = load i64, i64* %28, align 8
  %61 = add i64 %60, 15
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = ashr i32 %63, 1
  %65 = add nsw i32 %64, -1
  %66 = and i32 %27, %65
  %67 = zext i32 %66 to i64
  %68 = shl i32 %66, 3
  %69 = add i32 %68, 12
  %70 = sext i32 %69 to i64
  %71 = add i64 %60, 7
  %72 = add i64 %71, %70
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = icmp eq i32 %74, %77
  br i1 %78, label %103, label %79

79:                                               ; preds = %58
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %74, %82
  br i1 %83, label %103, label %87

84:                                               ; preds = %87
  %85 = add i32 %88, 1
  %86 = icmp eq i32 %97, %82
  br i1 %86, label %101, label %87

87:                                               ; preds = %79, %84
  %88 = phi i32 [ %85, %84 ], [ 1, %79 ]
  %89 = phi i32 [ %91, %84 ], [ %66, %79 ]
  %90 = add i32 %88, %89
  %91 = and i32 %90, %65
  %92 = shl i32 %91, 3
  %93 = add i32 %92, 12
  %94 = sext i32 %93 to i64
  %95 = add i64 %71, %94
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = icmp eq i32 %97, %77
  br i1 %98, label %99, label %84

99:                                               ; preds = %87
  %100 = zext i32 %91 to i64
  br label %103

101:                                              ; preds = %84
  %102 = zext i32 %91 to i64
  br label %103

103:                                              ; preds = %101, %79, %99, %58
  %104 = phi i64 [ %67, %58 ], [ %100, %99 ], [ %67, %79 ], [ %102, %101 ]
  %105 = bitcast %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  %106 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0
  %108 = load i64, i64* %59, align 8
  %109 = load i64, i64* %3, align 8
  call void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary"* nonnull %107, i64 %104, i64 %108, i64 %109, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  %110 = load i64, i64* %28, align 8
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i32*
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = add i32 %113, 2
  %115 = and i32 %114, -2
  store atomic volatile i32 %115, i32* %112 monotonic, align 4
  %116 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %103
  %118 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %104, i64* %118, align 8
  br label %119

119:                                              ; preds = %103, %117
  ret i64* %28
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC2Ev(%"class.v8::internal::Dictionary"*) unnamed_addr #0 comdat($_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC2Em(%"class.v8::internal::Dictionary"*, i64) unnamed_addr #5 comdat($_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary", %"class.v8::internal::Dictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 134
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = zext i32 %2 to i64
  %16 = xor i64 %14, %15
  %17 = xor i64 %16, -1
  %18 = shl i64 %16, 18
  %19 = add i64 %18, %17
  %20 = lshr i64 %19, 31
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 21
  %23 = lshr i64 %22, 11
  %24 = xor i64 %23, %22
  %25 = mul i64 %24, 65
  %26 = lshr i64 %25, 22
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %28, 1073741823
  %30 = tail call i64* @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %31 = icmp ult i32 %2, 1073741824
  br i1 %31, label %32, label %56

32:                                               ; preds = %6
  %33 = sext i32 %2 to i64
  %34 = shl nsw i64 %33, 1
  %35 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1
  %40 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %39, i64 %34) #11
  br label %63

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %43, i64 0, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %43, i64 0, i32 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %43) #11
  %51 = load i64*, i64** %44, align 8
  br label %52

52:                                               ; preds = %49, %41
  %53 = phi i64* [ %51, %49 ], [ %45, %41 ]
  %54 = phi i64* [ %50, %49 ], [ %45, %41 ]
  %55 = getelementptr inbounds i64, i64* %53, i64 1
  store i64* %55, i64** %44, align 8
  store i64 %34, i64* %54, align 8
  br label %63

56:                                               ; preds = %6
  %57 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %58 = uitofp i32 %2 to double
  %59 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase.1108"* %57) #11
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 3
  %62 = inttoptr i64 %61 to double*
  store double %58, double* %62, align 1
  br label %63

63:                                               ; preds = %38, %52, %56
  %64 = phi i64* [ %59, %56 ], [ %40, %38 ], [ %54, %52 ]
  %65 = load i64, i64* %30, align 8
  %66 = add i64 %65, 15
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = ashr i32 %68, 1
  %70 = add nsw i32 %69, -1
  %71 = and i32 %29, %70
  %72 = zext i32 %71 to i64
  %73 = shl i32 %71, 3
  %74 = add i32 %73, 12
  %75 = sext i32 %74 to i64
  %76 = add i64 %65, 7
  %77 = add i64 %76, %75
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = getelementptr inbounds i64, i64* %9, i64 4
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %79, %82
  br i1 %83, label %108, label %84

84:                                               ; preds = %63
  %85 = getelementptr inbounds i64, i64* %9, i64 5
  %86 = load i64, i64* %85, align 8
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %79, %87
  br i1 %88, label %108, label %92

89:                                               ; preds = %92
  %90 = add i32 %93, 1
  %91 = icmp eq i32 %102, %87
  br i1 %91, label %106, label %92

92:                                               ; preds = %84, %89
  %93 = phi i32 [ %90, %89 ], [ 1, %84 ]
  %94 = phi i32 [ %96, %89 ], [ %71, %84 ]
  %95 = add i32 %93, %94
  %96 = and i32 %95, %70
  %97 = shl i32 %96, 3
  %98 = add i32 %97, 12
  %99 = sext i32 %98 to i64
  %100 = add i64 %76, %99
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = icmp eq i32 %102, %82
  br i1 %103, label %104, label %89

104:                                              ; preds = %92
  %105 = zext i32 %96 to i64
  br label %108

106:                                              ; preds = %89
  %107 = zext i32 %96 to i64
  br label %108

108:                                              ; preds = %106, %84, %104, %63
  %109 = phi i64 [ %72, %63 ], [ %105, %104 ], [ %72, %84 ], [ %107, %106 ]
  %110 = bitcast %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #11
  %111 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SimpleNumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0
  %113 = load i64, i64* %64, align 8
  %114 = load i64, i64* %3, align 8
  call void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary"* nonnull %112, i64 %109, i64 %113, i64 %114, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #11
  %115 = load i64, i64* %30, align 8
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = add i32 %118, 2
  %120 = and i32 %119, -2
  store atomic volatile i32 %120, i32* %117 monotonic, align 4
  %121 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %108
  %123 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %109, i64* %123, align 8
  br label %124

124:                                              ; preds = %108, %122
  ret i64* %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1230"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 23
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1230"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 23
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEji(%"class.v8::internal::HashTable.1230"*, i64, i64*, i32, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 15
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds i64, i64* %2, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i64, i64* %2, i64 5
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i32 %11, -1
  %17 = and i32 %16, %4
  %18 = zext i32 %17 to i64
  %19 = mul i64 %18, 51539607552
  %20 = add i64 %19, 68719476736
  %21 = ashr exact i64 %20, 32
  %22 = add i64 %7, 7
  %23 = add i64 %22, %21
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = trunc i64 %13 to i32
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %64, label %28

28:                                               ; preds = %5
  %29 = trunc i64 %15 to i32
  br label %30

30:                                               ; preds = %28, %52
  %31 = phi i32 [ %25, %28 ], [ %62, %52 ]
  %32 = phi i64 [ %18, %28 ], [ %56, %52 ]
  %33 = phi i32 [ %17, %28 ], [ %55, %52 ]
  %34 = phi i32 [ 1, %28 ], [ %53, %52 ]
  %35 = zext i32 %31 to i64
  %36 = or i64 %35, %1
  %37 = icmp eq i32 %31, %29
  br i1 %37, label %52, label %38

38:                                               ; preds = %30
  %39 = and i64 %35, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = ashr i32 %31, 1
  %43 = sitofp i32 %42 to double
  br label %48

44:                                               ; preds = %38
  %45 = add i64 %36, 3
  %46 = inttoptr i64 %45 to double*
  %47 = load double, double* %46, align 1
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi double [ %43, %41 ], [ %47, %44 ]
  %50 = fptoui double %49 to i32
  %51 = icmp eq i32 %50, %3
  br i1 %51, label %64, label %52

52:                                               ; preds = %30, %48
  %53 = add i32 %34, 1
  %54 = add i32 %33, %34
  %55 = and i32 %54, %16
  %56 = zext i32 %55 to i64
  %57 = mul i64 %56, 51539607552
  %58 = add i64 %57, 68719476736
  %59 = ashr exact i64 %58, 32
  %60 = add i64 %22, %59
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = icmp eq i32 %62, %26
  br i1 %63, label %64, label %30

64:                                               ; preds = %52, %48, %5
  %65 = phi i64 [ -1, %5 ], [ %32, %48 ], [ -1, %52 ]
  ret i64 %65
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable.1230"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %2, 51539607552
  %7 = add i64 %6, 68719476736
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %5
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %1, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #11
  %15 = zext i32 %12 to i64
  %16 = or i64 %15, %1
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1230"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ 4, %2 ], [ %14, %11 ]
  %17 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %18 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 1, i64 0
  br label %32

25:                                               ; preds = %19, %15
  %26 = or i64 %5, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %32

32:                                               ; preds = %23, %25
  %33 = phi i64* [ %31, %25 ], [ %24, %23 ]
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = ashr i32 %36, 1
  %38 = zext i32 %37 to i64
  %39 = icmp eq i32 %37, 0
  %40 = and i64 %1, 4294967295
  %41 = icmp eq i64 %40, 0
  %42 = getelementptr inbounds i64, i64* %33, i64 4
  %43 = getelementptr inbounds i64, i64* %33, i64 5
  %44 = getelementptr inbounds i64, i64* %33, i64 134
  br label %45

45:                                               ; preds = %32, %59
  %46 = phi i32 [ 1, %32 ], [ %60, %59 ]
  br i1 %39, label %225, label %47

47:                                               ; preds = %45
  tail call void @llvm.assume(i1 %41) #11
  %48 = icmp ugt i32 %46, 1
  br label %63

49:                                               ; preds = %59
  br i1 %39, label %225, label %50

50:                                               ; preds = %49
  %51 = load i64, i64* %42, align 8
  %52 = load i64, i64* %43, align 8
  %53 = trunc i64 %52 to i32
  %54 = trunc i64 %51 to i32
  %55 = and i64 %38, 1
  %56 = icmp eq i32 %37, 1
  br i1 %56, label %215, label %57

57:                                               ; preds = %50
  %58 = sub nsw i64 %38, %55
  br label %229

59:                                               ; preds = %206
  %60 = add nuw nsw i32 %46, 1
  %61 = and i8 %208, 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %45, label %49

63:                                               ; preds = %47, %206
  %64 = phi i8 [ 1, %47 ], [ %208, %206 ]
  %65 = phi i64 [ 0, %47 ], [ %207, %206 ]
  %66 = load i64, i64* %3, align 8
  %67 = mul i64 %65, 51539607552
  %68 = add i64 %67, 68719476736
  %69 = ashr exact i64 %68, 32
  %70 = add i64 %66, 7
  %71 = add i64 %70, %69
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %74, %1
  %76 = load i64, i64* %42, align 8
  %77 = trunc i64 %76 to i32
  %78 = icmp eq i32 %73, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %63
  %80 = load i64, i64* %43, align 8
  %81 = trunc i64 %80 to i32
  %82 = icmp eq i32 %73, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %79, %63
  %84 = add nuw i64 %65, 1
  br label %206

85:                                               ; preds = %79
  %86 = and i64 %74, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %85
  %89 = ashr i32 %73, 1
  %90 = sitofp i32 %89 to double
  br label %95

91:                                               ; preds = %85
  %92 = add i64 %75, 3
  %93 = inttoptr i64 %92 to double*
  %94 = load double, double* %93, align 1
  br label %95

95:                                               ; preds = %91, %88
  %96 = phi double [ %90, %88 ], [ %94, %91 ]
  %97 = fptoui double %96 to i32
  %98 = load i64, i64* %44, align 8
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 1
  %102 = zext i32 %97 to i64
  %103 = xor i64 %101, %102
  %104 = xor i64 %103, -1
  %105 = shl i64 %103, 18
  %106 = add i64 %105, %104
  %107 = lshr i64 %106, 31
  %108 = xor i64 %107, %106
  %109 = mul i64 %108, 21
  %110 = lshr i64 %109, 11
  %111 = xor i64 %110, %109
  %112 = mul i64 %111, 65
  %113 = lshr i64 %112, 22
  %114 = xor i64 %113, %112
  %115 = trunc i64 %114 to i32
  %116 = add i64 %66, 15
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = ashr i32 %118, 1
  %120 = add nsw i32 %119, -1
  %121 = and i32 %120, 1073741823
  %122 = and i32 %121, %115
  %123 = zext i32 %122 to i64
  br i1 %48, label %124, label %137

124:                                              ; preds = %95, %129
  %125 = phi i64 [ %133, %129 ], [ %123, %95 ]
  %126 = phi i32 [ %132, %129 ], [ %122, %95 ]
  %127 = phi i32 [ %131, %129 ], [ 1, %95 ]
  %128 = icmp eq i64 %125, %65
  br i1 %128, label %137, label %129

129:                                              ; preds = %124
  %130 = add i32 %127, %126
  %131 = add nuw nsw i32 %127, 1
  %132 = and i32 %130, %120
  %133 = zext i32 %132 to i64
  %134 = icmp eq i32 %131, %46
  br i1 %134, label %135, label %124

135:                                              ; preds = %129
  %136 = zext i32 %132 to i64
  br label %137

137:                                              ; preds = %124, %135, %95
  %138 = phi i64 [ %123, %95 ], [ %136, %135 ], [ %65, %124 ]
  %139 = icmp eq i64 %65, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %137
  %141 = add i64 %65, 1
  br label %206

142:                                              ; preds = %137
  %143 = mul i64 %138, 51539607552
  %144 = add i64 %143, 68719476736
  %145 = ashr exact i64 %144, 32
  %146 = add i64 %70, %145
  %147 = inttoptr i64 %146 to i32*
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = zext i32 %148 to i64
  %150 = or i64 %149, %1
  %151 = icmp eq i32 %148, %77
  %152 = icmp eq i32 %148, %81
  %153 = or i1 %151, %152
  br i1 %153, label %203, label %154

154:                                              ; preds = %142
  %155 = and i64 %149, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = ashr i32 %148, 1
  %159 = sitofp i32 %158 to double
  br label %164

160:                                              ; preds = %154
  %161 = add i64 %150, 3
  %162 = inttoptr i64 %161 to double*
  %163 = load double, double* %162, align 1
  br label %164

164:                                              ; preds = %160, %157
  %165 = phi double [ %159, %157 ], [ %163, %160 ]
  %166 = fptoui double %165 to i32
  %167 = zext i32 %166 to i64
  %168 = xor i64 %101, %167
  %169 = xor i64 %168, -1
  %170 = shl i64 %168, 18
  %171 = add i64 %170, %169
  %172 = lshr i64 %171, 31
  %173 = xor i64 %172, %171
  %174 = mul i64 %173, 21
  %175 = lshr i64 %174, 11
  %176 = xor i64 %175, %174
  %177 = mul i64 %176, 65
  %178 = lshr i64 %177, 22
  %179 = xor i64 %178, %177
  %180 = trunc i64 %179 to i32
  %181 = load atomic i32, i32* %117 monotonic, align 4
  %182 = ashr i32 %181, 1
  %183 = add nsw i32 %182, -1
  %184 = and i32 %183, 1073741823
  %185 = and i32 %184, %180
  %186 = zext i32 %185 to i64
  br i1 %48, label %187, label %200

187:                                              ; preds = %164, %192
  %188 = phi i64 [ %196, %192 ], [ %186, %164 ]
  %189 = phi i32 [ %195, %192 ], [ %185, %164 ]
  %190 = phi i32 [ %194, %192 ], [ 1, %164 ]
  %191 = icmp eq i64 %188, %138
  br i1 %191, label %204, label %192

192:                                              ; preds = %187
  %193 = add i32 %190, %189
  %194 = add nuw nsw i32 %190, 1
  %195 = and i32 %193, %183
  %196 = zext i32 %195 to i64
  %197 = icmp eq i32 %194, %46
  br i1 %197, label %198, label %187

198:                                              ; preds = %192
  %199 = zext i32 %195 to i64
  br label %200

200:                                              ; preds = %198, %164
  %201 = phi i64 [ %186, %164 ], [ %199, %198 ]
  %202 = icmp eq i64 %201, %138
  br i1 %202, label %204, label %203

203:                                              ; preds = %200, %142
  tail call void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1230"* %0, i64 %65, i64 %138, i32 %16)
  br label %206

204:                                              ; preds = %187, %200
  %205 = add i64 %65, 1
  br label %206

206:                                              ; preds = %140, %204, %203, %83
  %207 = phi i64 [ %84, %83 ], [ %141, %140 ], [ %65, %203 ], [ %205, %204 ]
  %208 = phi i8 [ %64, %83 ], [ %64, %140 ], [ %64, %203 ], [ 0, %204 ]
  %209 = icmp ult i64 %207, %38
  br i1 %209, label %63, label %59

210:                                              ; preds = %254
  %211 = mul i64 %255, 51539607552
  %212 = add i64 %211, 68719476736
  %213 = ashr exact i64 %212, 32
  %214 = or i64 %213, 7
  br label %215

215:                                              ; preds = %210, %50
  %216 = phi i64 [ 23, %50 ], [ %214, %210 ]
  %217 = icmp eq i64 %55, 0
  br i1 %217, label %225, label %218

218:                                              ; preds = %215
  %219 = load i64, i64* %3, align 8
  %220 = add i64 %219, %216
  %221 = inttoptr i64 %220 to i32*
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = icmp eq i32 %222, %53
  br i1 %223, label %224, label %225

224:                                              ; preds = %218
  store atomic volatile i32 %54, i32* %221 monotonic, align 4
  br label %225

225:                                              ; preds = %45, %215, %218, %224, %49
  %226 = load i64, i64* %3, align 8
  %227 = add i64 %226, 11
  %228 = inttoptr i64 %227 to i32*
  store atomic volatile i32 0, i32* %228 monotonic, align 4
  ret void

229:                                              ; preds = %254, %57
  %230 = phi i64 [ 0, %57 ], [ %255, %254 ]
  %231 = phi i64 [ %58, %57 ], [ %256, %254 ]
  %232 = load i64, i64* %3, align 8
  %233 = mul i64 %230, 51539607552
  %234 = add i64 %233, 68719476736
  %235 = ashr exact i64 %234, 32
  %236 = or i64 %235, 7
  %237 = add i64 %232, %236
  %238 = inttoptr i64 %237 to i32*
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = icmp eq i32 %239, %53
  br i1 %240, label %241, label %242

241:                                              ; preds = %229
  store atomic volatile i32 %54, i32* %238 monotonic, align 4
  br label %242

242:                                              ; preds = %241, %229
  %243 = or i64 %230, 1
  %244 = load i64, i64* %3, align 8
  %245 = mul i64 %243, 51539607552
  %246 = add i64 %245, 68719476736
  %247 = ashr exact i64 %246, 32
  %248 = add nsw i64 %247, 7
  %249 = add i64 %244, %248
  %250 = inttoptr i64 %249 to i32*
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = icmp eq i32 %251, %53
  br i1 %252, label %253, label %254

253:                                              ; preds = %242
  store atomic volatile i32 %54, i32* %250 monotonic, align 4
  br label %254

254:                                              ; preds = %253, %242
  %255 = add nuw nsw i64 %230, 2
  %256 = add i64 %231, -2
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %210, label %229
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable.1230"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = and i64 %2, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = trunc i64 %2 to i32
  %10 = ashr i32 %9, 1
  %11 = sitofp i32 %10 to double
  br label %16

12:                                               ; preds = %5
  %13 = add i64 %2, 3
  %14 = inttoptr i64 %13 to double*
  %15 = load double, double* %14, align 1
  br label %16

16:                                               ; preds = %8, %12
  %17 = phi double [ %11, %8 ], [ %15, %12 ]
  %18 = fptoui double %17 to i32
  %19 = getelementptr inbounds i64, i64* %1, i64 134
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = zext i32 %18 to i64
  %25 = xor i64 %23, %24
  %26 = xor i64 %25, -1
  %27 = shl i64 %25, 18
  %28 = add i64 %27, %26
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = mul i64 %30, 21
  %32 = lshr i64 %31, 11
  %33 = xor i64 %32, %31
  %34 = mul i64 %33, 65
  %35 = lshr i64 %34, 22
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %37, 1073741823
  %39 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 15
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = ashr i32 %43, 1
  %45 = add nsw i32 %44, -1
  %46 = and i32 %38, %45
  %47 = zext i32 %46 to i64
  %48 = icmp sgt i32 %3, 1
  br i1 %48, label %49, label %62

49:                                               ; preds = %16, %54
  %50 = phi i64 [ %58, %54 ], [ %47, %16 ]
  %51 = phi i32 [ %57, %54 ], [ %46, %16 ]
  %52 = phi i32 [ %56, %54 ], [ 1, %16 ]
  %53 = icmp eq i64 %50, %4
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = add i32 %51, %52
  %56 = add nuw nsw i32 %52, 1
  %57 = and i32 %55, %45
  %58 = zext i32 %57 to i64
  %59 = icmp eq i32 %56, %3
  br i1 %59, label %60, label %49

60:                                               ; preds = %54
  %61 = zext i32 %57 to i64
  br label %62

62:                                               ; preds = %49, %60, %16
  %63 = phi i64 [ %47, %16 ], [ %61, %60 ], [ %4, %49 ]
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1230"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [3 x %"class.v8::internal::Object"], align 16
  %6 = bitcast [3 x %"class.v8::internal::Object"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false)
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = mul i64 %1, 51539607552
  %11 = add i64 %10, 68719476736
  %12 = ashr exact i64 %11, 32
  %13 = add nsw i64 %12, 7
  %14 = add i64 %13, %8
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %9, %17
  %19 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 %18, i64* %19, align 16
  %20 = mul i64 %1, 51539607552
  %21 = add i64 %20, 85899345920
  %22 = ashr exact i64 %21, 32
  %23 = add nsw i64 %22, 7
  %24 = add i64 %23, %8
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %9, %27
  %29 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 1, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = mul i64 %1, 51539607552
  %31 = add i64 %30, 103079215104
  %32 = ashr exact i64 %31, 32
  %33 = add nsw i64 %32, 7
  %34 = add i64 %33, %8
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %9, %37
  %39 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 2, i32 0, i32 0
  store i64 %38, i64* %39, align 16
  %40 = mul i64 %2, 51539607552
  %41 = add i64 %40, 68719476736
  %42 = ashr exact i64 %41, 32
  %43 = add nsw i64 %42, 7
  %44 = add i64 %8, %43
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %9, %47
  store atomic volatile i32 %46, i32* %15 monotonic, align 4
  switch i32 %3, label %65 [
    i32 4, label %49
    i32 0, label %100
  ]

49:                                               ; preds = %4
  %50 = load i64, i64* %7, align 8
  %51 = add i64 %50, %13
  %52 = and i64 %47, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %85, label %54

54:                                               ; preds = %49
  %55 = and i64 %50, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 262144
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %54
  %62 = or i64 %55, 16
  %63 = inttoptr i64 %62 to %"class.v8::internal::Heap"**
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %64, i64 %50, i64 %51, i64 %48) #11
  br label %68

65:                                               ; preds = %4
  %66 = and i64 %47, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %65, %61, %54
  %69 = load i64, i64* %7, align 8
  %70 = add i64 %69, %13
  %71 = and i64 %48, -262144
  %72 = or i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 24
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %68
  %78 = and i64 %69, -262144
  %79 = or i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 24
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %77
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %69, i64 %70, i64 %48) #11
  br label %85

85:                                               ; preds = %84, %77, %68, %65, %49
  %86 = load i64, i64* %7, align 8
  %87 = and i64 %86, -4294967296
  %88 = mul i64 %2, 51539607552
  %89 = add i64 %88, 85899345920
  %90 = ashr exact i64 %89, 32
  %91 = add nsw i64 %90, 7
  %92 = add i64 %91, %86
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %87, %95
  %97 = add i64 %86, %23
  %98 = inttoptr i64 %97 to i32*
  store atomic volatile i32 %94, i32* %98 monotonic, align 4
  %99 = icmp eq i32 %3, 4
  br i1 %99, label %210, label %226

100:                                              ; preds = %4
  %101 = load i64, i64* %7, align 8
  %102 = mul i64 %2, 51539607552
  %103 = add i64 %102, 85899345920
  %104 = ashr exact i64 %103, 32
  %105 = add nsw i64 %104, 7
  %106 = add i64 %105, %101
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = add i64 %101, %23
  %110 = inttoptr i64 %109 to i32*
  store atomic volatile i32 %108, i32* %110 monotonic, align 4
  %111 = load i64, i64* %7, align 8
  %112 = mul i64 %2, 51539607552
  %113 = add i64 %112, 103079215104
  %114 = ashr exact i64 %113, 32
  %115 = add nsw i64 %114, 7
  %116 = add i64 %115, %111
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = add i64 %111, %33
  %120 = inttoptr i64 %119 to i32*
  store atomic volatile i32 %118, i32* %120 monotonic, align 4
  %121 = load i64, i64* %19, align 16
  %122 = load i64, i64* %7, align 8
  %123 = add i64 %122, %43
  %124 = inttoptr i64 %123 to i32*
  %125 = trunc i64 %121 to i32
  store atomic volatile i32 %125, i32* %124 monotonic, align 4
  br label %191

126:                                              ; preds = %385, %388, %397, %404
  %127 = load i64, i64* %19, align 16
  %128 = load i64, i64* %7, align 8
  %129 = add i64 %128, %43
  %130 = inttoptr i64 %129 to i32*
  %131 = trunc i64 %127 to i32
  store atomic volatile i32 %131, i32* %130 monotonic, align 4
  switch i32 %3, label %159 [
    i32 4, label %132
    i32 0, label %191
  ]

132:                                              ; preds = %368, %126
  %133 = phi i64 [ %369, %368 ], [ %127, %126 ]
  %134 = load i64, i64* %7, align 8
  %135 = add i64 %134, %43
  %136 = and i64 %133, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %148

138:                                              ; preds = %132
  %139 = load i64, i64* %29, align 8
  %140 = load i64, i64* %7, align 8
  %141 = mul i64 %2, 51539607552
  %142 = add i64 %141, 85899345920
  %143 = ashr exact i64 %142, 32
  %144 = add nsw i64 %143, 7
  %145 = add i64 %140, %144
  %146 = inttoptr i64 %145 to i32*
  %147 = trunc i64 %139 to i32
  store atomic volatile i32 %147, i32* %146 monotonic, align 4
  br label %262

148:                                              ; preds = %132
  %149 = and i64 %134, -262144
  %150 = or i64 %149, 8
  %151 = inttoptr i64 %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = and i64 %152, 262144
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %148
  %156 = or i64 %149, 16
  %157 = inttoptr i64 %156 to %"class.v8::internal::Heap"**
  %158 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %157, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %158, i64 %134, i64 %135, i64 %133) #11
  br label %162

159:                                              ; preds = %126
  %160 = and i64 %127, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %159, %155, %148
  %163 = phi i64 [ %127, %159 ], [ %133, %155 ], [ %133, %148 ]
  %164 = load i64, i64* %7, align 8
  %165 = add i64 %164, %43
  %166 = and i64 %163, -262144
  %167 = or i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, 24
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %162
  %173 = and i64 %164, -262144
  %174 = or i64 %173, 8
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = and i64 %176, 24
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %164, i64 %165, i64 %163) #11
  br label %180

180:                                              ; preds = %179, %172, %162, %159
  %181 = load i64, i64* %29, align 8
  %182 = load i64, i64* %7, align 8
  %183 = mul i64 %2, 51539607552
  %184 = add i64 %183, 85899345920
  %185 = ashr exact i64 %184, 32
  %186 = add nsw i64 %185, 7
  %187 = add i64 %182, %186
  %188 = inttoptr i64 %187 to i32*
  %189 = trunc i64 %181 to i32
  store atomic volatile i32 %189, i32* %188 monotonic, align 4
  %190 = icmp eq i32 %3, 4
  br i1 %190, label %262, label %290

191:                                              ; preds = %100, %126
  %192 = load i64, i64* %29, align 8
  %193 = load i64, i64* %7, align 8
  %194 = mul i64 %2, 51539607552
  %195 = add i64 %194, 85899345920
  %196 = ashr exact i64 %195, 32
  %197 = add nsw i64 %196, 7
  %198 = add i64 %193, %197
  %199 = inttoptr i64 %198 to i32*
  %200 = trunc i64 %192 to i32
  store atomic volatile i32 %200, i32* %199 monotonic, align 4
  %201 = load i64, i64* %39, align 16
  %202 = load i64, i64* %7, align 8
  %203 = mul i64 %2, 51539607552
  %204 = add i64 %203, 103079215104
  %205 = ashr exact i64 %204, 32
  %206 = add nsw i64 %205, 7
  %207 = add i64 %202, %206
  %208 = inttoptr i64 %207 to i32*
  %209 = trunc i64 %201 to i32
  store atomic volatile i32 %209, i32* %208 monotonic, align 4
  br label %261

210:                                              ; preds = %85
  %211 = load i64, i64* %7, align 8
  %212 = add i64 %211, %23
  %213 = and i64 %95, 1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %246, label %215

215:                                              ; preds = %210
  %216 = and i64 %211, -262144
  %217 = or i64 %216, 8
  %218 = inttoptr i64 %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = and i64 %219, 262144
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %229, label %222

222:                                              ; preds = %215
  %223 = or i64 %216, 16
  %224 = inttoptr i64 %223 to %"class.v8::internal::Heap"**
  %225 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %224, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %225, i64 %211, i64 %212, i64 %96) #11
  br label %229

226:                                              ; preds = %85
  %227 = and i64 %95, 1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %246, label %229

229:                                              ; preds = %215, %222, %226
  %230 = load i64, i64* %7, align 8
  %231 = add i64 %230, %23
  %232 = and i64 %96, -262144
  %233 = or i64 %232, 8
  %234 = inttoptr i64 %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = and i64 %235, 24
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %246, label %238

238:                                              ; preds = %229
  %239 = and i64 %230, -262144
  %240 = or i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 24
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %238
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %230, i64 %231, i64 %96) #11
  br label %246

246:                                              ; preds = %210, %226, %229, %238, %245
  %247 = load i64, i64* %7, align 8
  %248 = and i64 %247, -4294967296
  %249 = mul i64 %2, 51539607552
  %250 = add i64 %249, 103079215104
  %251 = ashr exact i64 %250, 32
  %252 = add nsw i64 %251, 7
  %253 = add i64 %252, %247
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %248, %256
  %258 = add i64 %247, %33
  %259 = inttoptr i64 %258 to i32*
  store atomic volatile i32 %255, i32* %259 monotonic, align 4
  %260 = icmp eq i32 %3, 4
  br i1 %260, label %363, label %385

261:                                              ; preds = %323, %341, %344, %355, %362, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void

262:                                              ; preds = %180, %138
  %263 = phi i64 [ %144, %138 ], [ %186, %180 ]
  %264 = phi i64 [ %139, %138 ], [ %181, %180 ]
  %265 = load i64, i64* %7, align 8
  %266 = add i64 %265, %263
  %267 = and i64 %264, 1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %279

269:                                              ; preds = %262
  %270 = load i64, i64* %39, align 16
  %271 = load i64, i64* %7, align 8
  %272 = mul i64 %2, 51539607552
  %273 = add i64 %272, 103079215104
  %274 = ashr exact i64 %273, 32
  %275 = add nsw i64 %274, 7
  %276 = add i64 %271, %275
  %277 = inttoptr i64 %276 to i32*
  %278 = trunc i64 %270 to i32
  store atomic volatile i32 %278, i32* %277 monotonic, align 4
  br label %323

279:                                              ; preds = %262
  %280 = and i64 %265, -262144
  %281 = or i64 %280, 8
  %282 = inttoptr i64 %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 262144
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %293, label %286

286:                                              ; preds = %279
  %287 = or i64 %280, 16
  %288 = inttoptr i64 %287 to %"class.v8::internal::Heap"**
  %289 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %288, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %289, i64 %265, i64 %266, i64 %264) #11
  br label %293

290:                                              ; preds = %180
  %291 = and i64 %181, 1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %312, label %293

293:                                              ; preds = %279, %286, %290
  %294 = phi i64 [ %263, %279 ], [ %263, %286 ], [ %186, %290 ]
  %295 = phi i64 [ %264, %279 ], [ %264, %286 ], [ %181, %290 ]
  %296 = load i64, i64* %7, align 8
  %297 = add i64 %296, %294
  %298 = and i64 %295, -262144
  %299 = or i64 %298, 8
  %300 = inttoptr i64 %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 24
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %312, label %304

304:                                              ; preds = %293
  %305 = and i64 %296, -262144
  %306 = or i64 %305, 8
  %307 = inttoptr i64 %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = and i64 %308, 24
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %304
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %296, i64 %297, i64 %295) #11
  br label %312

312:                                              ; preds = %290, %293, %304, %311
  %313 = load i64, i64* %39, align 16
  %314 = load i64, i64* %7, align 8
  %315 = mul i64 %2, 51539607552
  %316 = add i64 %315, 103079215104
  %317 = ashr exact i64 %316, 32
  %318 = add nsw i64 %317, 7
  %319 = add i64 %314, %318
  %320 = inttoptr i64 %319 to i32*
  %321 = trunc i64 %313 to i32
  store atomic volatile i32 %321, i32* %320 monotonic, align 4
  %322 = icmp eq i32 %3, 4
  br i1 %322, label %323, label %341

323:                                              ; preds = %312, %269
  %324 = phi i64 [ %275, %269 ], [ %318, %312 ]
  %325 = phi i64 [ %270, %269 ], [ %313, %312 ]
  %326 = load i64, i64* %7, align 8
  %327 = add i64 %326, %324
  %328 = and i64 %325, 1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %261, label %330

330:                                              ; preds = %323
  %331 = and i64 %326, -262144
  %332 = or i64 %331, 8
  %333 = inttoptr i64 %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = and i64 %334, 262144
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %344, label %337

337:                                              ; preds = %330
  %338 = or i64 %331, 16
  %339 = inttoptr i64 %338 to %"class.v8::internal::Heap"**
  %340 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %339, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %340, i64 %326, i64 %327, i64 %325) #11
  br label %344

341:                                              ; preds = %312
  %342 = and i64 %313, 1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %261, label %344

344:                                              ; preds = %341, %337, %330
  %345 = phi i64 [ %318, %341 ], [ %324, %337 ], [ %324, %330 ]
  %346 = phi i64 [ %313, %341 ], [ %325, %337 ], [ %325, %330 ]
  %347 = load i64, i64* %7, align 8
  %348 = add i64 %347, %345
  %349 = and i64 %346, -262144
  %350 = or i64 %349, 8
  %351 = inttoptr i64 %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = and i64 %352, 24
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %261, label %355

355:                                              ; preds = %344
  %356 = and i64 %347, -262144
  %357 = or i64 %356, 8
  %358 = inttoptr i64 %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = and i64 %359, 24
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %261

362:                                              ; preds = %355
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %347, i64 %348, i64 %346) #11
  br label %261

363:                                              ; preds = %246
  %364 = load i64, i64* %7, align 8
  %365 = add i64 %364, %33
  %366 = and i64 %256, 1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %374

368:                                              ; preds = %363
  %369 = load i64, i64* %19, align 16
  %370 = load i64, i64* %7, align 8
  %371 = add i64 %370, %43
  %372 = inttoptr i64 %371 to i32*
  %373 = trunc i64 %369 to i32
  store atomic volatile i32 %373, i32* %372 monotonic, align 4
  br label %132

374:                                              ; preds = %363
  %375 = and i64 %364, -262144
  %376 = or i64 %375, 8
  %377 = inttoptr i64 %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = and i64 %378, 262144
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %374
  %382 = or i64 %375, 16
  %383 = inttoptr i64 %382 to %"class.v8::internal::Heap"**
  %384 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %383, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %384, i64 %364, i64 %365, i64 %257) #11
  br label %388

385:                                              ; preds = %246
  %386 = and i64 %256, 1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %126, label %388

388:                                              ; preds = %385, %381, %374
  %389 = load i64, i64* %7, align 8
  %390 = add i64 %389, %33
  %391 = and i64 %257, -262144
  %392 = or i64 %391, 8
  %393 = inttoptr i64 %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = and i64 %394, 24
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %126, label %397

397:                                              ; preds = %388
  %398 = and i64 %389, -262144
  %399 = or i64 %398, 8
  %400 = inttoptr i64 %399 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = and i64 %401, 24
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %126

404:                                              ; preds = %397
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %389, i64 %390, i64 %257) #11
  br label %126
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1230"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = mul nsw i32 %2, 3
  %4 = add nsw i32 %3, 4
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1230"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = mul i64 %2, 51539607552
  %9 = add i64 %8, 68719476736
  %10 = ashr exact i64 %9, 32
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %6
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %7, %15
  %17 = getelementptr inbounds i64, i64* %1, i64 4
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %14, %19
  br i1 %20, label %28, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds i64, i64* %1, i64 5
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %14, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %16, i64* %27, align 8
  br label %28

28:                                               ; preds = %21, %4, %26
  %29 = phi i1 [ true, %26 ], [ false, %21 ], [ false, %4 ]
  ret i1 %29
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable.1230"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = mul i64 %1, 51539607552
  %7 = add i64 %6, 68719476736
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %4
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %5, %13
  ret i64 %14
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1230"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = mul i64 %2, 51539607552
  %8 = add i64 %7, 68719476736
  %9 = ashr exact i64 %8, 32
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %6
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  %18 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %19 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 1, i64 0
  br label %34

26:                                               ; preds = %20, %4
  %27 = and i64 %6, -262144
  %28 = or i64 %27, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %24, %26
  %35 = phi i64* [ %33, %26 ], [ %25, %24 ]
  %36 = getelementptr inbounds i64, i64* %35, i64 4
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %13, %38
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds i64, i64* %35, i64 5
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %13, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %17, i64* %46, align 8
  br label %47

47:                                               ; preds = %40, %34, %45
  %48 = phi i1 [ true, %45 ], [ false, %40 ], [ false, %34 ]
  ret i1 %48
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -4
  %3 = sdiv i32 %2, 3
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable.1230"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable.1230"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = mul i64 %13, 51539607552
  %15 = add i64 %14, 68719476736
  %16 = ashr exact i64 %15, 32
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %50, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %35, %25, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %13, %25 ], [ %36, %35 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = zext i32 %43 to i64
  %45 = mul i64 %44, 51539607552
  %46 = add i64 %45, 68719476736
  %47 = ashr exact i64 %46, 32
  %48 = add i64 %17, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = icmp eq i32 %50, %23
  br i1 %51, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable.1230"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = mul i64 %12, 51539607552
  %14 = add i64 %13, 68719476736
  %15 = ashr exact i64 %14, 32
  %16 = add i64 %5, 7
  %17 = add i64 %15, %16
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %47, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %47, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %43, %27
  br i1 %31, label %45, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = zext i32 %36 to i64
  %38 = mul i64 %37, 51539607552
  %39 = add i64 %38, 68719476736
  %40 = ashr exact i64 %39, 32
  %41 = add i64 %40, %16
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = icmp eq i32 %43, %22
  br i1 %44, label %45, label %29

45:                                               ; preds = %32, %29
  %46 = zext i32 %36 to i64
  br label %47

47:                                               ; preds = %45, %24, %3
  %48 = phi i64 [ %12, %3 ], [ %12, %24 ], [ %46, %45 ]
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %72, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 44739240
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = mul nsw i32 %31, 3
  %51 = add nsw i32 %50, 4
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 52
  %54 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %52, i64* %53, i32 %51, i8 zeroext %49) #11
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i32*
  store atomic volatile i32 0, i32* %57 monotonic, align 4
  %58 = load i64, i64* %54, align 8
  %59 = add i64 %58, 11
  %60 = inttoptr i64 %59 to i32*
  store atomic volatile i32 0, i32* %60 monotonic, align 4
  %61 = load i64, i64* %54, align 8
  %62 = shl i32 %31, 1
  %63 = add i64 %61, 15
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 %62, i32* %64 monotonic, align 4
  %65 = bitcast %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %66 = load i64, i64* %1, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %70 = load i64, i64* %69, align 8
  %71 = load i64, i64* %54, align 8
  call void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1230"* nonnull %68, i64 %70, i64 %71)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  br label %72

72:                                               ; preds = %28, %48
  %73 = phi i64* [ %54, %48 ], [ %1, %28 ]
  ret i64* %73
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 44739240
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = mul nsw i32 %17, 3
  %19 = add nsw i32 %18, 4
  %20 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 52
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %20, i64* %21, i32 %19, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = shl i32 %17, 1
  %31 = add i64 %29, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %30, i32* %32 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1230"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = and i64 %2, -262144
  %5 = or i64 %4, 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 262144
  %9 = icmp eq i64 %8, 0
  %10 = and i64 %7, 24
  %11 = icmp ne i64 %10, 0
  %12 = and i1 %9, %11
  %13 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = or i64 %4, 16
  %18 = inttoptr i64 %17 to %"class.v8::internal::Heap"**
  %19 = add i64 %14, 19
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  br i1 %12, label %29, label %22

22:                                               ; preds = %3
  %23 = zext i32 %21 to i64
  %24 = or i64 %23, %1
  %25 = add i64 %2, 19
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 %21, i32* %26 monotonic, align 4
  %27 = and i64 %23, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %32, label %67

29:                                               ; preds = %3
  %30 = add i64 %2, 19
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %21, i32* %31 monotonic, align 4
  br label %32

32:                                               ; preds = %84, %80, %73, %22, %29
  %33 = load i64, i64* %13, align 8
  %34 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %35 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 1, i64 0
  br label %50

42:                                               ; preds = %36, %32
  %43 = and i64 %33, -262144
  %44 = or i64 %43, 16
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 16
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %50

50:                                               ; preds = %40, %42
  %51 = phi i64* [ %49, %42 ], [ %41, %40 ]
  %52 = add i64 %33, 15
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = ashr i32 %54, 1
  %56 = sext i32 %55 to i64
  %57 = icmp eq i32 %55, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %50
  %59 = add i64 %2, 7
  br label %85

60:                                               ; preds = %50
  %61 = getelementptr inbounds i64, i64* %51, i64 4
  %62 = getelementptr inbounds i64, i64* %51, i64 5
  %63 = getelementptr inbounds i64, i64* %51, i64 134
  %64 = add i64 %2, 15
  %65 = inttoptr i64 %64 to i32*
  %66 = add i64 %2, 7
  br label %95

67:                                               ; preds = %22
  %68 = load i64, i64* %6, align 8
  %69 = and i64 %68, 262144
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %72, i64 %2, i64 %25, i64 %24) #11
  br label %73

73:                                               ; preds = %67, %71
  %74 = and i64 %24, -262144
  %75 = or i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 24
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %32, label %80

80:                                               ; preds = %73
  %81 = load i64, i64* %6, align 8
  %82 = and i64 %81, 24
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %32

84:                                               ; preds = %80
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %25, i64 %24) #11
  br label %32

85:                                               ; preds = %280, %58
  %86 = phi i64 [ %59, %58 ], [ %66, %280 ]
  %87 = phi i64 [ %33, %58 ], [ %283, %280 ]
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, -2
  %92 = inttoptr i64 %86 to i32*
  store atomic volatile i32 %91, i32* %92 monotonic, align 4
  %93 = add i64 %2, 11
  %94 = inttoptr i64 %93 to i32*
  store atomic volatile i32 0, i32* %94 monotonic, align 4
  ret void

95:                                               ; preds = %280, %60
  %96 = phi i64 [ %33, %60 ], [ %283, %280 ]
  %97 = phi i64 [ 0, %60 ], [ %281, %280 ]
  %98 = mul i64 %97, 51539607552
  %99 = add i64 %98, 68719476736
  %100 = ashr exact i64 %99, 32
  %101 = add nsw i64 %100, 7
  %102 = add i64 %101, %96
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %105, %1
  %107 = load i64, i64* %61, align 8
  %108 = trunc i64 %107 to i32
  %109 = icmp eq i32 %104, %108
  br i1 %109, label %280, label %110

110:                                              ; preds = %95
  %111 = load i64, i64* %62, align 8
  %112 = trunc i64 %111 to i32
  %113 = icmp eq i32 %104, %112
  br i1 %113, label %280, label %114

114:                                              ; preds = %110
  %115 = and i64 %105, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %114
  %118 = ashr i32 %104, 1
  %119 = sitofp i32 %118 to double
  br label %124

120:                                              ; preds = %114
  %121 = add i64 %106, 3
  %122 = inttoptr i64 %121 to double*
  %123 = load double, double* %122, align 1
  br label %124

124:                                              ; preds = %117, %120
  %125 = phi double [ %119, %117 ], [ %123, %120 ]
  %126 = fptoui double %125 to i32
  %127 = load i64, i64* %63, align 8
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 1
  %131 = zext i32 %126 to i64
  %132 = xor i64 %130, %131
  %133 = xor i64 %132, -1
  %134 = shl i64 %132, 18
  %135 = add i64 %134, %133
  %136 = lshr i64 %135, 31
  %137 = xor i64 %136, %135
  %138 = mul i64 %137, 21
  %139 = lshr i64 %138, 11
  %140 = xor i64 %139, %138
  %141 = mul i64 %140, 65
  %142 = lshr i64 %141, 22
  %143 = xor i64 %142, %141
  %144 = trunc i64 %143 to i32
  %145 = load atomic i32, i32* %65 monotonic, align 4
  %146 = ashr i32 %145, 1
  %147 = add nsw i32 %146, -1
  %148 = and i32 %147, 1073741823
  %149 = and i32 %148, %144
  %150 = zext i32 %149 to i64
  %151 = mul i64 %150, 51539607552
  %152 = add i64 %151, 68719476736
  %153 = ashr exact i64 %152, 32
  %154 = add i64 %153, %66
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = icmp eq i32 %156, %108
  br i1 %157, label %175, label %158

158:                                              ; preds = %124, %163
  %159 = phi i32 [ %173, %163 ], [ %156, %124 ]
  %160 = phi i32 [ %166, %163 ], [ %149, %124 ]
  %161 = phi i32 [ %164, %163 ], [ 1, %124 ]
  %162 = icmp eq i32 %159, %112
  br i1 %162, label %175, label %163

163:                                              ; preds = %158
  %164 = add i32 %161, 1
  %165 = add i32 %161, %160
  %166 = and i32 %165, %147
  %167 = zext i32 %166 to i64
  %168 = mul i64 %167, 51539607552
  %169 = add i64 %168, 68719476736
  %170 = ashr exact i64 %169, 32
  %171 = add i64 %170, %66
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = icmp eq i32 %173, %108
  br i1 %174, label %175, label %158

175:                                              ; preds = %163, %158, %124
  %176 = phi i32 [ %149, %124 ], [ %166, %163 ], [ %160, %158 ]
  %177 = load atomic i32, i32* %103 monotonic, align 4
  %178 = zext i32 %177 to i64
  %179 = or i64 %178, %1
  %180 = mul i32 %176, 12
  %181 = add i32 %180, 16
  %182 = sext i32 %181 to i64
  %183 = add i64 %66, %182
  %184 = inttoptr i64 %183 to i32*
  store atomic volatile i32 %177, i32* %184 monotonic, align 4
  %185 = and i64 %178, 1
  %186 = icmp eq i64 %185, 0
  %187 = or i1 %12, %186
  br i1 %187, label %206, label %188

188:                                              ; preds = %175
  %189 = load i64, i64* %6, align 8
  %190 = and i64 %189, 262144
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  %193 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %193, i64 %2, i64 %183, i64 %179) #11
  br label %194

194:                                              ; preds = %192, %188
  %195 = and i64 %179, -262144
  %196 = or i64 %195, 8
  %197 = inttoptr i64 %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = and i64 %198, 24
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %206, label %201

201:                                              ; preds = %194
  %202 = load i64, i64* %6, align 8
  %203 = and i64 %202, 24
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %201
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %183, i64 %179) #11
  br label %206

206:                                              ; preds = %175, %194, %201, %205
  %207 = load i64, i64* %13, align 8
  %208 = mul i64 %97, 51539607552
  %209 = add i64 %208, 85899345920
  %210 = ashr exact i64 %209, 32
  %211 = add nsw i64 %210, 7
  %212 = add i64 %211, %207
  %213 = inttoptr i64 %212 to i32*
  %214 = load atomic i32, i32* %213 monotonic, align 4
  br i1 %12, label %225, label %215

215:                                              ; preds = %206
  %216 = zext i32 %214 to i64
  %217 = or i64 %216, %1
  %218 = mul i32 %176, 12
  %219 = add i32 %218, 20
  %220 = sext i32 %219 to i64
  %221 = add i64 %66, %220
  %222 = inttoptr i64 %221 to i32*
  store atomic volatile i32 %214, i32* %222 monotonic, align 4
  %223 = and i64 %216, 1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %262, label %244

225:                                              ; preds = %206
  %226 = mul i32 %176, 12
  %227 = add i32 %226, 20
  %228 = sext i32 %227 to i64
  %229 = add i64 %66, %228
  %230 = inttoptr i64 %229 to i32*
  store atomic volatile i32 %214, i32* %230 monotonic, align 4
  %231 = load i64, i64* %13, align 8
  %232 = mul i64 %97, 51539607552
  %233 = add i64 %232, 103079215104
  %234 = ashr exact i64 %233, 32
  %235 = add nsw i64 %234, 7
  %236 = add i64 %235, %231
  %237 = inttoptr i64 %236 to i32*
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = mul i32 %176, 12
  %240 = add i32 %239, 24
  %241 = sext i32 %240 to i64
  %242 = add i64 %66, %241
  %243 = inttoptr i64 %242 to i32*
  store atomic volatile i32 %238, i32* %243 monotonic, align 4
  br label %280

244:                                              ; preds = %215
  %245 = load i64, i64* %6, align 8
  %246 = and i64 %245, 262144
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %250, label %248

248:                                              ; preds = %244
  %249 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %249, i64 %2, i64 %221, i64 %217) #11
  br label %250

250:                                              ; preds = %244, %248
  %251 = and i64 %217, -262144
  %252 = or i64 %251, 8
  %253 = inttoptr i64 %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = and i64 %254, 24
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %250
  %258 = load i64, i64* %6, align 8
  %259 = and i64 %258, 24
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %257
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %221, i64 %217) #11
  br label %262

262:                                              ; preds = %215, %250, %257, %261
  %263 = load i64, i64* %13, align 8
  %264 = mul i64 %97, 51539607552
  %265 = add i64 %264, 103079215104
  %266 = ashr exact i64 %265, 32
  %267 = add nsw i64 %266, 7
  %268 = add i64 %267, %263
  %269 = inttoptr i64 %268 to i32*
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = zext i32 %270 to i64
  %272 = or i64 %271, %1
  %273 = mul i32 %176, 12
  %274 = add i32 %273, 24
  %275 = sext i32 %274 to i64
  %276 = add i64 %66, %275
  %277 = inttoptr i64 %276 to i32*
  store atomic volatile i32 %270, i32* %277 monotonic, align 4
  %278 = and i64 %271, 1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %284

280:                                              ; preds = %262, %290, %297, %301, %225, %110, %95
  %281 = add i64 %97, 1
  %282 = icmp eq i64 %281, %56
  %283 = load i64, i64* %13, align 8
  br i1 %282, label %85, label %95

284:                                              ; preds = %262
  %285 = load i64, i64* %6, align 8
  %286 = and i64 %285, 262144
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %290, label %288

288:                                              ; preds = %284
  %289 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %289, i64 %2, i64 %276, i64 %272) #11
  br label %290

290:                                              ; preds = %288, %284
  %291 = and i64 %272, -262144
  %292 = or i64 %291, 8
  %293 = inttoptr i64 %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = and i64 %294, 24
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %280, label %297

297:                                              ; preds = %290
  %298 = load i64, i64* %6, align 8
  %299 = and i64 %298, 24
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %280

301:                                              ; preds = %297
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %276, i64 %272) #11
  br label %280
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable.1230"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE11SetCapacityEi(%"class.v8::internal::HashTable.1230"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC2Ev(%"class.v8::internal::HashTable.1230"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC2Em(%"class.v8::internal::HashTable.1230"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1230", %"class.v8::internal::HashTable.1230"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 44739240
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = mul nsw i32 %16, 3
  %18 = add nsw i32 %17, 4
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %20 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 52
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %19, i64* %22, i32 %18, i8 zeroext %2) #11
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 0, i32* %26 monotonic, align 4
  %27 = load i64, i64* %23, align 8
  %28 = add i64 %27, 11
  %29 = inttoptr i64 %28 to i32*
  store atomic volatile i32 0, i32* %29 monotonic, align 4
  %30 = load i64, i64* %23, align 8
  %31 = shl i32 %16, 1
  %32 = add i64 %30, 15
  %33 = inttoptr i64 %32 to i32*
  store atomic volatile i32 %31, i32* %33 monotonic, align 4
  ret i64* %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %79

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 44739240
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = mul nsw i32 %56, 3
  %58 = add nuw nsw i32 %57, 4
  %59 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 52
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %59, i64* %60, i32 %58, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = shl i32 %56, 1
  %70 = add i64 %68, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %69, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %77 = load i64, i64* %76, align 8
  %78 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1230"* nonnull %75, i64 %77, i64 %78)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %79

79:                                               ; preds = %25, %55
  %80 = phi i64* [ %61, %55 ], [ %1, %25 ]
  ret i64* %80
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %82

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 44739240
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = mul nsw i32 %55, 3
  %57 = add nuw nsw i32 %56, 4
  %58 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %59 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 52
  %62 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %58, i64* %61, i32 %57, i8 zeroext %46) #11
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i32*
  store atomic volatile i32 0, i32* %65 monotonic, align 4
  %66 = load i64, i64* %62, align 8
  %67 = add i64 %66, 11
  %68 = inttoptr i64 %67 to i32*
  store atomic volatile i32 0, i32* %68 monotonic, align 4
  %69 = load i64, i64* %62, align 8
  %70 = shl i32 %55, 1
  %71 = add i64 %69, 15
  %72 = inttoptr i64 %71 to i32*
  store atomic volatile i32 %70, i32* %72 monotonic, align 4
  %73 = bitcast %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = load i64, i64* %1, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %78 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %78, i64 0, i32 0, i32 4
  %80 = load i64, i64* %79, align 8
  %81 = load i64, i64* %62, align 8
  call void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1230"* nonnull %76, i64 %80, i64 %81)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  br label %82

82:                                               ; preds = %25, %54
  %83 = phi i64* [ %62, %54 ], [ %1, %25 ]
  ret i64* %83
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1231"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = mul i64 %1, 51539607552
  %7 = add i64 %6, 85899345920
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %4
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %5, %13
  ret i64 %14
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE7ValueAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1231"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %2, 51539607552
  %7 = add i64 %6, 85899345920
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %5
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %1, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #11
  %15 = zext i32 %12 to i64
  %16 = or i64 %15, %1
  ret i64 %16
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE10ValueAtPutENS0_13InternalIndexENS0_6ObjectE(%"class.v8::internal::Dictionary.1231"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %1, 51539607552
  %7 = add i64 %6, 85899345920
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %5, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  %13 = load i64, i64* %4, align 8
  %14 = add i64 %13, %9
  %15 = and i64 %2, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %47, label %17

17:                                               ; preds = %3
  %18 = and i64 %13, -262144
  %19 = or i64 %18, 8
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 262144
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %17
  %25 = or i64 %18, 16
  %26 = inttoptr i64 %25 to %"class.v8::internal::Heap"**
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %27, i64 %13, i64 %14, i64 %2) #11
  %28 = load i64, i64* %4, align 8
  %29 = add i64 %28, %9
  br label %30

30:                                               ; preds = %24, %17
  %31 = phi i64 [ %14, %17 ], [ %29, %24 ]
  %32 = phi i64 [ %13, %17 ], [ %28, %24 ]
  %33 = and i64 %2, -262144
  %34 = or i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 24
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %30
  %40 = and i64 %32, -262144
  %41 = or i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 24
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %39
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %32, i64 %31, i64 %2) #11
  br label %47

47:                                               ; preds = %3, %30, %39, %46
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE9DetailsAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1231"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = mul i64 %1, 51539607552
  %6 = add i64 %5, 103079215104
  %7 = ashr exact i64 %6, 32
  %8 = add nsw i64 %7, 7
  %9 = add i64 %8, %4
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  ret i32 %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE12DetailsAtPutENS0_13InternalIndexENS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1231"*, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = shl i32 %2, 1
  %7 = mul i64 %1, 51539607552
  %8 = add i64 %7, 103079215104
  %9 = ashr exact i64 %8, 32
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %5
  %12 = inttoptr i64 %11 to i32*
  store atomic volatile i32 %6, i32* %12 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::NumberDictionary", align 8
  %5 = load i64, i64* %1, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %3
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 5
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::NumberDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %4, i64 0, i32 0
  call void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1231"* nonnull %28, i64 %2, i64 %25, i64 %25, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %29 = load i64, i64* %1, align 8
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = add i32 %32, -2
  %34 = and i32 %33, -2
  store atomic volatile i32 %34, i32* %31 monotonic, align 4
  %35 = add i64 %29, 11
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = add i32 %37, 2
  %39 = and i32 %38, -2
  store atomic volatile i32 %39, i32* %36 monotonic, align 4
  %40 = call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0) #11
  ret i64* %40
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE10ClearEntryENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1231"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::NumberDictionary", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %2
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 5
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::NumberDictionary"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %3, i64 0, i32 0
  call void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1231"* nonnull %28, i64 %1, i64 %25, i64 %25, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = tail call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1231"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %5 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 1, i64 0
  br label %20

12:                                               ; preds = %6, %1
  %13 = and i64 %3, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %20

20:                                               ; preds = %10, %12
  %21 = phi i64* [ %19, %12 ], [ %11, %10 ]
  %22 = add i64 %3, 15
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = ashr i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = icmp eq i32 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  %29 = and i64 %3, -4294967296
  %30 = getelementptr inbounds i64, i64* %21, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds i64, i64* %21, i64 5
  br label %36

34:                                               ; preds = %77, %20
  %35 = phi i32 [ 0, %20 ], [ %78, %77 ]
  ret i32 %35

36:                                               ; preds = %28, %77
  %37 = phi i32 [ 0, %28 ], [ %78, %77 ]
  %38 = phi i64 [ 0, %28 ], [ %79, %77 ]
  %39 = mul i64 %38, 51539607552
  %40 = add i64 %39, 68719476736
  %41 = ashr exact i64 %40, 32
  %42 = add nsw i64 %41, 7
  %43 = add i64 %42, %3
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %29, %46
  %48 = icmp eq i32 %45, %32
  br i1 %48, label %77, label %49

49:                                               ; preds = %36
  %50 = load i64, i64* %33, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %45, %51
  br i1 %52, label %77, label %53

53:                                               ; preds = %49
  %54 = and i64 %46, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %66, label %56

56:                                               ; preds = %53
  %57 = add i64 %47, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %29, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp eq i16 %64, 64
  br i1 %65, label %77, label %66

66:                                               ; preds = %53, %56
  %67 = add i64 %39, 103079215104
  %68 = ashr exact i64 %67, 32
  %69 = add nsw i64 %68, 7
  %70 = add i64 %69, %3
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = lshr i32 %72, 5
  %74 = and i32 %73, 1
  %75 = xor i32 %74, 1
  %76 = add nsw i32 %75, %37
  br label %77

77:                                               ; preds = %56, %36, %49, %66
  %78 = phi i32 [ %76, %66 ], [ %37, %49 ], [ %37, %36 ], [ %37, %56 ]
  %79 = add i64 %38, 1
  %80 = icmp eq i64 %79, %26
  br i1 %80, label %34, label %36
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::Dictionary.1231"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %6 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 1, i64 0
  br label %21

13:                                               ; preds = %7, %2
  %14 = and i64 %4, -262144
  %15 = or i64 %14, 16
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %21

21:                                               ; preds = %11, %13
  %22 = phi i64* [ %20, %13 ], [ %12, %11 ]
  %23 = add i64 %4, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = ashr i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = getelementptr inbounds i64, i64* %22, i64 4
  %31 = load i64, i64* %30, align 8
  br label %66

32:                                               ; preds = %21
  %33 = add i64 %4, 7
  %34 = getelementptr inbounds i64, i64* %22, i64 4
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds i64, i64* %22, i64 5
  %38 = trunc i64 %1 to i32
  br label %39

39:                                               ; preds = %32, %59
  %40 = phi i64 [ 0, %32 ], [ %60, %59 ]
  %41 = mul i64 %40, 51539607552
  %42 = add i64 %41, 68719476736
  %43 = ashr exact i64 %42, 32
  %44 = add i64 %33, %43
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = icmp eq i32 %46, %36
  br i1 %47, label %59, label %48

48:                                               ; preds = %39
  %49 = load i64, i64* %37, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %46, %50
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = add i64 %41, 85899345920
  %54 = ashr exact i64 %53, 32
  %55 = add i64 %33, %54
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = icmp eq i32 %57, %38
  br i1 %58, label %62, label %59

59:                                               ; preds = %52, %48, %39
  %60 = add i64 %40, 1
  %61 = icmp eq i64 %60, %27
  br i1 %61, label %66, label %39

62:                                               ; preds = %52
  %63 = and i64 %4, -4294967296
  %64 = zext i32 %46 to i64
  %65 = or i64 %63, %64
  br label %66

66:                                               ; preds = %59, %29, %62
  %67 = phi i64 [ %65, %62 ], [ %31, %29 ], [ %35, %59 ]
  ret i64 %67
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1231"*, i64, i64, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 8
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 262144
  %13 = icmp ne i64 %12, 0
  %14 = and i64 %11, 24
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %13, %15
  %17 = mul i64 %1, 51539607552
  %18 = add i64 %17, 68719476736
  %19 = ashr exact i64 %18, 32
  %20 = add nsw i64 %19, 7
  %21 = add i64 %7, %20
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %2 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = load i64, i64* %6, align 8
  br i1 %16, label %25, label %60

25:                                               ; preds = %5
  %26 = add i64 %24, %20
  %27 = and i64 %2, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %67, label %29

29:                                               ; preds = %25
  %30 = and i64 %24, -262144
  %31 = or i64 %30, 8
  %32 = inttoptr i64 %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 262144
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %29
  %37 = or i64 %30, 16
  %38 = inttoptr i64 %37 to %"class.v8::internal::Heap"**
  %39 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %38, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %39, i64 %24, i64 %26, i64 %2) #11
  %40 = load i64, i64* %6, align 8
  %41 = add i64 %40, %20
  br label %42

42:                                               ; preds = %29, %36
  %43 = phi i64 [ %26, %29 ], [ %41, %36 ]
  %44 = phi i64 [ %24, %29 ], [ %40, %36 ]
  %45 = and i64 %2, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 24
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %42
  %52 = and i64 %44, -262144
  %53 = or i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 24
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %67

58:                                               ; preds = %51
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %44, i64 %43, i64 %2) #11
  %59 = load i64, i64* %6, align 8
  br label %67

60:                                               ; preds = %5
  %61 = add i64 %17, 85899345920
  %62 = ashr exact i64 %61, 32
  %63 = add nsw i64 %62, 7
  %64 = add i64 %63, %24
  %65 = inttoptr i64 %64 to i32*
  %66 = trunc i64 %3 to i32
  store atomic volatile i32 %66, i32* %65 monotonic, align 4
  br label %109

67:                                               ; preds = %25, %42, %51, %58
  %68 = phi i64 [ %24, %25 ], [ %44, %42 ], [ %44, %51 ], [ %59, %58 ]
  %69 = add i64 %17, 85899345920
  %70 = ashr exact i64 %69, 32
  %71 = add nsw i64 %70, 7
  %72 = add i64 %68, %71
  %73 = inttoptr i64 %72 to i32*
  %74 = trunc i64 %3 to i32
  store atomic volatile i32 %74, i32* %73 monotonic, align 4
  %75 = load i64, i64* %6, align 8
  %76 = add i64 %75, %71
  %77 = and i64 %3, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %109, label %79

79:                                               ; preds = %67
  %80 = and i64 %75, -262144
  %81 = or i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 262144
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %79
  %87 = or i64 %80, 16
  %88 = inttoptr i64 %87 to %"class.v8::internal::Heap"**
  %89 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %88, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %89, i64 %75, i64 %76, i64 %3) #11
  %90 = load i64, i64* %6, align 8
  %91 = add i64 %90, %71
  br label %92

92:                                               ; preds = %79, %86
  %93 = phi i64 [ %76, %79 ], [ %91, %86 ]
  %94 = phi i64 [ %75, %79 ], [ %90, %86 ]
  %95 = and i64 %3, -262144
  %96 = or i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 24
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %92
  %102 = and i64 %94, -262144
  %103 = or i64 %102, 8
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = and i64 %105, 24
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %101
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %94, i64 %93, i64 %3) #11
  br label %109

109:                                              ; preds = %60, %67, %92, %101, %108
  %110 = load i64, i64* %6, align 8
  %111 = shl i32 %4, 1
  %112 = add i64 %17, 103079215104
  %113 = ashr exact i64 %112, 32
  %114 = add nsw i64 %113, 7
  %115 = add i64 %114, %110
  %116 = inttoptr i64 %115 to i32*
  store atomic volatile i32 %111, i32* %116 monotonic, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE17RawFieldOfValueAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1231"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = mul i64 %1, 51539607552
  %6 = add i64 %5, 85899345920
  %7 = ashr exact i64 %6, 32
  %8 = add nsw i64 %7, 7
  %9 = add i64 %8, %4
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE11ShallowCopyEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 52
  %5 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %3, i64* %1, i64* %4) #11
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EEjNS7_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 1
  %14 = zext i32 %2 to i64
  %15 = xor i64 %13, %14
  %16 = xor i64 %15, -1
  %17 = shl i64 %15, 18
  %18 = add i64 %17, %16
  %19 = lshr i64 %18, 31
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 21
  %22 = lshr i64 %21, 11
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 65
  %25 = lshr i64 %24, 22
  %26 = xor i64 %25, %24
  %27 = trunc i64 %26 to i32
  %28 = add i64 %6, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = ashr i32 %30, 1
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i32 %31, -1
  %37 = and i32 %36, 1073741823
  %38 = and i32 %37, %27
  %39 = zext i32 %38 to i64
  %40 = mul i64 %39, 51539607552
  %41 = add i64 %40, 68719476736
  %42 = ashr exact i64 %41, 32
  %43 = add i64 %6, 7
  %44 = add i64 %42, %43
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = trunc i64 %33 to i32
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %85, label %49

49:                                               ; preds = %5
  %50 = trunc i64 %35 to i32
  br label %51

51:                                               ; preds = %73, %49
  %52 = phi i32 [ %46, %49 ], [ %83, %73 ]
  %53 = phi i64 [ %39, %49 ], [ %77, %73 ]
  %54 = phi i32 [ %38, %49 ], [ %76, %73 ]
  %55 = phi i32 [ 1, %49 ], [ %74, %73 ]
  %56 = zext i32 %52 to i64
  %57 = or i64 %8, %56
  %58 = icmp eq i32 %52, %50
  br i1 %58, label %73, label %59

59:                                               ; preds = %51
  %60 = and i64 %56, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = ashr i32 %52, 1
  %64 = sitofp i32 %63 to double
  br label %69

65:                                               ; preds = %59
  %66 = add i64 %57, 3
  %67 = inttoptr i64 %66 to double*
  %68 = load double, double* %67, align 1
  br label %69

69:                                               ; preds = %65, %62
  %70 = phi double [ %64, %62 ], [ %68, %65 ]
  %71 = fptoui double %70 to i32
  %72 = icmp eq i32 %71, %2
  br i1 %72, label %87, label %73

73:                                               ; preds = %69, %51
  %74 = add i32 %55, 1
  %75 = add i32 %55, %54
  %76 = and i32 %75, %36
  %77 = zext i32 %76 to i64
  %78 = mul i64 %77, 51539607552
  %79 = add i64 %78, 68719476736
  %80 = ashr exact i64 %79, 32
  %81 = add i64 %80, %43
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = icmp eq i32 %83, %47
  br i1 %84, label %85, label %51

85:                                               ; preds = %73, %5
  %86 = tail call i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i64* %3, i32 %4, %"class.v8::internal::InternalIndex"* null)
  br label %128

87:                                               ; preds = %69
  %88 = load i64, i64* %3, align 8
  %89 = mul i64 %53, 51539607552
  %90 = add i64 %89, 85899345920
  %91 = ashr exact i64 %90, 32
  %92 = add i64 %43, %91
  %93 = inttoptr i64 %92 to i32*
  %94 = trunc i64 %88 to i32
  store atomic volatile i32 %94, i32* %93 monotonic, align 4
  %95 = and i64 %88, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %120, label %97

97:                                               ; preds = %87
  %98 = and i64 %6, -262144
  %99 = or i64 %98, 8
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = and i64 %101, 262144
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %108, label %104

104:                                              ; preds = %97
  %105 = or i64 %98, 16
  %106 = inttoptr i64 %105 to %"class.v8::internal::Heap"**
  %107 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %106, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %107, i64 %6, i64 %92, i64 %88) #11
  br label %108

108:                                              ; preds = %104, %97
  %109 = and i64 %88, -262144
  %110 = or i64 %109, 8
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 24
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %108
  %116 = load i64, i64* %100, align 8
  %117 = and i64 %116, 24
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %115
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %6, i64 %92, i64 %88) #11
  br label %120

120:                                              ; preds = %87, %108, %115, %119
  %121 = load i64, i64* %1, align 8
  %122 = shl i32 %4, 1
  %123 = add i64 %89, 103079215104
  %124 = ashr exact i64 %123, 32
  %125 = add nsw i64 %124, 7
  %126 = add i64 %125, %121
  %127 = inttoptr i64 %126 to i32*
  store atomic volatile i32 %122, i32* %127 monotonic, align 4
  br label %128

128:                                              ; preds = %120, %85
  %129 = phi i64* [ %86, %85 ], [ %1, %120 ]
  ret i64* %129
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = zext i32 %2 to i64
  %14 = xor i64 %12, %13
  %15 = xor i64 %14, -1
  %16 = shl i64 %14, 18
  %17 = add i64 %16, %15
  %18 = lshr i64 %17, 31
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 21
  %21 = lshr i64 %20, 11
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 65
  %24 = lshr i64 %23, 22
  %25 = xor i64 %24, %23
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 1073741823
  %28 = tail call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %29 = icmp ult i32 %2, 1073741824
  br i1 %29, label %30, label %51

30:                                               ; preds = %6
  %31 = sext i32 %2 to i64
  %32 = shl nsw i64 %31, 1
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #11
  br label %58

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %32, i64* %47, align 8
  br label %58

51:                                               ; preds = %6
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = uitofp i32 %2 to double
  %54 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %52) #11
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 3
  %57 = inttoptr i64 %56 to double*
  store double %53, double* %57, align 1
  br label %58

58:                                               ; preds = %36, %46, %51
  %59 = phi i64* [ %54, %51 ], [ %37, %36 ], [ %47, %46 ]
  %60 = load i64, i64* %28, align 8
  %61 = add i64 %60, 15
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = ashr i32 %63, 1
  %65 = add nsw i32 %64, -1
  %66 = and i32 %27, %65
  %67 = zext i32 %66 to i64
  %68 = mul i64 %67, 51539607552
  %69 = add i64 %68, 68719476736
  %70 = ashr exact i64 %69, 32
  %71 = add i64 %60, 7
  %72 = add i64 %70, %71
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = icmp eq i32 %74, %77
  br i1 %78, label %102, label %79

79:                                               ; preds = %58
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %74, %82
  br i1 %83, label %102, label %87

84:                                               ; preds = %87
  %85 = add i32 %88, 1
  %86 = icmp eq i32 %98, %82
  br i1 %86, label %100, label %87

87:                                               ; preds = %79, %84
  %88 = phi i32 [ %85, %84 ], [ 1, %79 ]
  %89 = phi i32 [ %91, %84 ], [ %66, %79 ]
  %90 = add i32 %88, %89
  %91 = and i32 %90, %65
  %92 = zext i32 %91 to i64
  %93 = mul i64 %92, 51539607552
  %94 = add i64 %93, 68719476736
  %95 = ashr exact i64 %94, 32
  %96 = add i64 %95, %71
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = icmp eq i32 %98, %77
  br i1 %99, label %100, label %84

100:                                              ; preds = %87, %84
  %101 = zext i32 %91 to i64
  br label %102

102:                                              ; preds = %100, %79, %58
  %103 = phi i64 [ %67, %58 ], [ %67, %79 ], [ %101, %100 ]
  %104 = bitcast %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  %105 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0
  %107 = load i64, i64* %59, align 8
  %108 = load i64, i64* %3, align 8
  call void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1231"* nonnull %106, i64 %103, i64 %107, i64 %108, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  %109 = load i64, i64* %28, align 8
  %110 = add i64 %109, 7
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = add i32 %112, 2
  %114 = and i32 %113, -2
  store atomic volatile i32 %114, i32* %111 monotonic, align 4
  %115 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %103, i64* %117, align 8
  br label %118

118:                                              ; preds = %102, %116
  ret i64* %28
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC2Ev(%"class.v8::internal::Dictionary.1231"*) unnamed_addr #0 comdat($_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC2Em(%"class.v8::internal::Dictionary.1231"*, i64) unnamed_addr #5 comdat($_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1231", %"class.v8::internal::Dictionary.1231"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_jNS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 134
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = zext i32 %2 to i64
  %16 = xor i64 %14, %15
  %17 = xor i64 %16, -1
  %18 = shl i64 %16, 18
  %19 = add i64 %18, %17
  %20 = lshr i64 %19, 31
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 21
  %23 = lshr i64 %22, 11
  %24 = xor i64 %23, %22
  %25 = mul i64 %24, 65
  %26 = lshr i64 %25, 22
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %28, 1073741823
  %30 = tail call i64* @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %31 = icmp ult i32 %2, 1073741824
  br i1 %31, label %32, label %56

32:                                               ; preds = %6
  %33 = sext i32 %2 to i64
  %34 = shl nsw i64 %33, 1
  %35 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1
  %40 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %39, i64 %34) #11
  br label %63

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %43, i64 0, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %43, i64 0, i32 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %43) #11
  %51 = load i64*, i64** %44, align 8
  br label %52

52:                                               ; preds = %49, %41
  %53 = phi i64* [ %51, %49 ], [ %45, %41 ]
  %54 = phi i64* [ %50, %49 ], [ %45, %41 ]
  %55 = getelementptr inbounds i64, i64* %53, i64 1
  store i64* %55, i64** %44, align 8
  store i64 %34, i64* %54, align 8
  br label %63

56:                                               ; preds = %6
  %57 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %58 = uitofp i32 %2 to double
  %59 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase.1108"* %57) #11
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 3
  %62 = inttoptr i64 %61 to double*
  store double %58, double* %62, align 1
  br label %63

63:                                               ; preds = %38, %52, %56
  %64 = phi i64* [ %59, %56 ], [ %40, %38 ], [ %54, %52 ]
  %65 = load i64, i64* %30, align 8
  %66 = add i64 %65, 15
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = ashr i32 %68, 1
  %70 = add nsw i32 %69, -1
  %71 = and i32 %29, %70
  %72 = zext i32 %71 to i64
  %73 = mul i64 %72, 51539607552
  %74 = add i64 %73, 68719476736
  %75 = ashr exact i64 %74, 32
  %76 = add i64 %65, 7
  %77 = add i64 %75, %76
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = getelementptr inbounds i64, i64* %9, i64 4
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp eq i32 %79, %82
  br i1 %83, label %107, label %84

84:                                               ; preds = %63
  %85 = getelementptr inbounds i64, i64* %9, i64 5
  %86 = load i64, i64* %85, align 8
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %79, %87
  br i1 %88, label %107, label %92

89:                                               ; preds = %92
  %90 = add i32 %93, 1
  %91 = icmp eq i32 %103, %87
  br i1 %91, label %105, label %92

92:                                               ; preds = %84, %89
  %93 = phi i32 [ %90, %89 ], [ 1, %84 ]
  %94 = phi i32 [ %96, %89 ], [ %71, %84 ]
  %95 = add i32 %93, %94
  %96 = and i32 %95, %70
  %97 = zext i32 %96 to i64
  %98 = mul i64 %97, 51539607552
  %99 = add i64 %98, 68719476736
  %100 = ashr exact i64 %99, 32
  %101 = add i64 %100, %76
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = icmp eq i32 %103, %82
  br i1 %104, label %105, label %89

105:                                              ; preds = %92, %89
  %106 = zext i32 %96 to i64
  br label %107

107:                                              ; preds = %105, %84, %63
  %108 = phi i64 [ %72, %63 ], [ %72, %84 ], [ %106, %105 ]
  %109 = bitcast %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #11
  %110 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NumberDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0
  %112 = load i64, i64* %64, align 8
  %113 = load i64, i64* %3, align 8
  call void @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1231"* nonnull %111, i64 %108, i64 %112, i64 %113, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #11
  %114 = load i64, i64* %30, align 8
  %115 = add i64 %114, 7
  %116 = inttoptr i64 %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = add i32 %117, 2
  %119 = and i32 %118, -2
  store atomic volatile i32 %119, i32* %116 monotonic, align 4
  %120 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %107
  %122 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %108, i64* %122, align 8
  br label %123

123:                                              ; preds = %107, %121
  ret i64* %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1233"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 27
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1233"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 27
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_4NameEEEi(%"class.v8::internal::HashTable.1233"*, i64, i64*, i64*, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 15
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds i64, i64* %2, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i32 %11, -1
  %15 = and i32 %14, %4
  %16 = zext i32 %15 to i64
  %17 = mul i64 %16, 51539607552
  %18 = add i64 %17, 85899345920
  %19 = ashr exact i64 %18, 32
  %20 = add i64 %7, 7
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = trunc i64 %13 to i32
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %48, label %26

26:                                               ; preds = %5
  %27 = load i64, i64* %3, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %23, %28
  br i1 %29, label %48, label %33

30:                                               ; preds = %33
  %31 = add i32 %34, 1
  %32 = icmp eq i32 %44, %28
  br i1 %32, label %46, label %33

33:                                               ; preds = %26, %30
  %34 = phi i32 [ %31, %30 ], [ 1, %26 ]
  %35 = phi i32 [ %37, %30 ], [ %15, %26 ]
  %36 = add i32 %35, %34
  %37 = and i32 %36, %14
  %38 = zext i32 %37 to i64
  %39 = mul i64 %38, 51539607552
  %40 = add i64 %39, 85899345920
  %41 = ashr exact i64 %40, 32
  %42 = add i64 %20, %41
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = icmp eq i32 %44, %24
  br i1 %45, label %48, label %30

46:                                               ; preds = %30
  %47 = zext i32 %37 to i64
  br label %48

48:                                               ; preds = %46, %33, %26, %5
  %49 = phi i64 [ -1, %5 ], [ %16, %26 ], [ %47, %46 ], [ -1, %33 ]
  ret i64 %49
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable.1233"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %2, 51539607552
  %7 = add i64 %6, 85899345920
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %5
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %1, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #11
  %15 = zext i32 %12 to i64
  %16 = or i64 %15, %1
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1233"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ 4, %2 ], [ %14, %11 ]
  %17 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %18 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 1, i64 0
  br label %32

25:                                               ; preds = %19, %15
  %26 = or i64 %5, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %32

32:                                               ; preds = %23, %25
  %33 = phi i64* [ %31, %25 ], [ %24, %23 ]
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = ashr i32 %36, 1
  %38 = zext i32 %37 to i64
  %39 = icmp eq i32 %37, 0
  %40 = and i64 %1, 4294967295
  %41 = icmp eq i64 %40, 0
  %42 = getelementptr inbounds i64, i64* %33, i64 4
  %43 = getelementptr inbounds i64, i64* %33, i64 5
  br label %44

44:                                               ; preds = %32, %149
  %45 = phi i32 [ 1, %32 ], [ %151, %149 ]
  br i1 %39, label %235, label %46

46:                                               ; preds = %44
  tail call void @llvm.assume(i1 %41) #11
  %47 = icmp ugt i32 %45, 1
  br i1 %47, label %48, label %154

48:                                               ; preds = %46, %127
  %49 = phi i8 [ %129, %127 ], [ 1, %46 ]
  %50 = phi i64 [ %128, %127 ], [ 0, %46 ]
  %51 = load i64, i64* %3, align 8
  %52 = mul i64 %50, 51539607552
  %53 = add i64 %52, 85899345920
  %54 = ashr exact i64 %53, 32
  %55 = add i64 %51, 7
  %56 = add i64 %55, %54
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %59, %1
  %61 = load i64, i64* %42, align 8
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %58, %62
  br i1 %63, label %125, label %64

64:                                               ; preds = %48
  %65 = load i64, i64* %43, align 8
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i32 %58, %66
  br i1 %67, label %125, label %68

68:                                               ; preds = %64
  %69 = add i64 %60, 3
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = lshr i32 %71, 2
  %73 = add i64 %51, 15
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = ashr i32 %75, 1
  %77 = add nsw i32 %76, -1
  %78 = and i32 %77, %72
  br label %79

79:                                               ; preds = %68, %84
  %80 = phi i32 [ %87, %84 ], [ %78, %68 ]
  %81 = phi i32 [ %86, %84 ], [ 1, %68 ]
  %82 = zext i32 %80 to i64
  %83 = icmp eq i64 %50, %82
  br i1 %83, label %134, label %84

84:                                               ; preds = %79
  %85 = add i32 %81, %80
  %86 = add nuw nsw i32 %81, 1
  %87 = and i32 %85, %77
  %88 = icmp eq i32 %86, %45
  br i1 %88, label %137, label %79

89:                                               ; preds = %134
  %90 = mul i64 %135, 51539607552
  %91 = add i64 %90, 85899345920
  %92 = ashr exact i64 %91, 32
  %93 = add i64 %55, %92
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = icmp eq i32 %95, %62
  %97 = icmp eq i32 %95, %66
  %98 = or i1 %96, %97
  br i1 %98, label %122, label %99

99:                                               ; preds = %89
  %100 = zext i32 %95 to i64
  %101 = or i64 %100, %1
  %102 = add i64 %101, 3
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = lshr i32 %104, 2
  %106 = load atomic i32, i32* %74 monotonic, align 4
  %107 = ashr i32 %106, 1
  %108 = add nsw i32 %107, -1
  %109 = and i32 %108, %105
  br label %110

110:                                              ; preds = %99, %115
  %111 = phi i32 [ %118, %115 ], [ %109, %99 ]
  %112 = phi i32 [ %117, %115 ], [ 1, %99 ]
  %113 = zext i32 %111 to i64
  %114 = icmp eq i64 %135, %113
  br i1 %114, label %120, label %115

115:                                              ; preds = %110
  %116 = add i32 %112, %111
  %117 = add nuw nsw i32 %112, 1
  %118 = and i32 %116, %108
  %119 = icmp eq i32 %117, %45
  br i1 %119, label %131, label %110

120:                                              ; preds = %110, %131
  %121 = add i64 %50, 1
  br label %127

122:                                              ; preds = %131, %89
  tail call void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1233"* %0, i64 %50, i64 %135, i32 %16)
  br label %127

123:                                              ; preds = %134
  %124 = add i64 %50, 1
  br label %127

125:                                              ; preds = %64, %48
  %126 = add nuw i64 %50, 1
  br label %127

127:                                              ; preds = %125, %123, %122, %120
  %128 = phi i64 [ %126, %125 ], [ %124, %123 ], [ %50, %122 ], [ %121, %120 ]
  %129 = phi i8 [ %49, %125 ], [ %49, %123 ], [ %49, %122 ], [ 0, %120 ]
  %130 = icmp ult i64 %128, %38
  br i1 %130, label %48, label %149

131:                                              ; preds = %115
  %132 = zext i32 %118 to i64
  %133 = icmp eq i64 %135, %132
  br i1 %133, label %120, label %122

134:                                              ; preds = %79, %137
  %135 = phi i64 [ %138, %137 ], [ %50, %79 ]
  %136 = icmp eq i64 %50, %135
  br i1 %136, label %123, label %89

137:                                              ; preds = %84
  %138 = zext i32 %87 to i64
  br label %134

139:                                              ; preds = %149
  br i1 %39, label %235, label %140

140:                                              ; preds = %139
  %141 = load i64, i64* %42, align 8
  %142 = load i64, i64* %43, align 8
  %143 = trunc i64 %142 to i32
  %144 = trunc i64 %141 to i32
  %145 = and i64 %38, 1
  %146 = icmp eq i32 %37, 1
  br i1 %146, label %225, label %147

147:                                              ; preds = %140
  %148 = sub nsw i64 %38, %145
  br label %239

149:                                              ; preds = %216, %127
  %150 = phi i8 [ %129, %127 ], [ %218, %216 ]
  %151 = add nuw nsw i32 %45, 1
  %152 = and i8 %150, 1
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %44, label %139

154:                                              ; preds = %46, %216
  %155 = phi i8 [ %218, %216 ], [ 1, %46 ]
  %156 = phi i64 [ %217, %216 ], [ 0, %46 ]
  %157 = load i64, i64* %3, align 8
  %158 = mul i64 %156, 51539607552
  %159 = add i64 %158, 85899345920
  %160 = ashr exact i64 %159, 32
  %161 = add i64 %157, 7
  %162 = add i64 %161, %160
  %163 = inttoptr i64 %162 to i32*
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %165, %1
  %167 = load i64, i64* %42, align 8
  %168 = trunc i64 %167 to i32
  %169 = icmp eq i32 %164, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %154
  %171 = load i64, i64* %43, align 8
  %172 = trunc i64 %171 to i32
  %173 = icmp eq i32 %164, %172
  br i1 %173, label %174, label %176

174:                                              ; preds = %170, %154
  %175 = add nuw i64 %156, 1
  br label %216

176:                                              ; preds = %170
  %177 = add i64 %166, 3
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = lshr i32 %179, 2
  %181 = add i64 %157, 15
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = lshr i32 %183, 1
  %185 = add nuw i32 %184, 1073741823
  %186 = and i32 %185, %180
  %187 = zext i32 %186 to i64
  %188 = icmp eq i64 %156, %187
  br i1 %188, label %189, label %191

189:                                              ; preds = %176
  %190 = add nuw i64 %156, 1
  br label %216

191:                                              ; preds = %176
  %192 = mul i64 %187, 51539607552
  %193 = add i64 %192, 85899345920
  %194 = ashr exact i64 %193, 32
  %195 = add i64 %161, %194
  %196 = inttoptr i64 %195 to i32*
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = icmp eq i32 %197, %168
  %199 = icmp eq i32 %197, %172
  %200 = or i1 %198, %199
  br i1 %200, label %213, label %201

201:                                              ; preds = %191
  %202 = zext i32 %197 to i64
  %203 = or i64 %202, %1
  %204 = add i64 %203, 3
  %205 = inttoptr i64 %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = lshr i32 %206, 2
  %208 = load atomic i32, i32* %182 monotonic, align 4
  %209 = lshr i32 %208, 1
  %210 = add nuw i32 %209, 1073741823
  %211 = and i32 %210, %207
  %212 = icmp eq i32 %211, %186
  br i1 %212, label %214, label %213

213:                                              ; preds = %201, %191
  tail call void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1233"* %0, i64 %156, i64 %187, i32 %16)
  br label %216

214:                                              ; preds = %201
  %215 = add nuw i64 %156, 1
  br label %216

216:                                              ; preds = %189, %214, %213, %174
  %217 = phi i64 [ %175, %174 ], [ %190, %189 ], [ %156, %213 ], [ %215, %214 ]
  %218 = phi i8 [ %155, %174 ], [ %155, %189 ], [ %155, %213 ], [ 0, %214 ]
  %219 = icmp ult i64 %217, %38
  br i1 %219, label %154, label %149

220:                                              ; preds = %264
  %221 = mul i64 %265, 51539607552
  %222 = add i64 %221, 85899345920
  %223 = ashr exact i64 %222, 32
  %224 = add nsw i64 %223, 7
  br label %225

225:                                              ; preds = %220, %140
  %226 = phi i64 [ 27, %140 ], [ %224, %220 ]
  %227 = icmp eq i64 %145, 0
  br i1 %227, label %235, label %228

228:                                              ; preds = %225
  %229 = load i64, i64* %3, align 8
  %230 = add i64 %229, %226
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = icmp eq i32 %232, %143
  br i1 %233, label %234, label %235

234:                                              ; preds = %228
  store atomic volatile i32 %144, i32* %231 monotonic, align 4
  br label %235

235:                                              ; preds = %44, %225, %228, %234, %139
  %236 = load i64, i64* %3, align 8
  %237 = add i64 %236, 11
  %238 = inttoptr i64 %237 to i32*
  store atomic volatile i32 0, i32* %238 monotonic, align 4
  ret void

239:                                              ; preds = %264, %147
  %240 = phi i64 [ 0, %147 ], [ %265, %264 ]
  %241 = phi i64 [ %148, %147 ], [ %266, %264 ]
  %242 = load i64, i64* %3, align 8
  %243 = mul i64 %240, 51539607552
  %244 = add i64 %243, 85899345920
  %245 = ashr exact i64 %244, 32
  %246 = add nsw i64 %245, 7
  %247 = add i64 %242, %246
  %248 = inttoptr i64 %247 to i32*
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = icmp eq i32 %249, %143
  br i1 %250, label %251, label %252

251:                                              ; preds = %239
  store atomic volatile i32 %144, i32* %248 monotonic, align 4
  br label %252

252:                                              ; preds = %251, %239
  %253 = or i64 %240, 1
  %254 = load i64, i64* %3, align 8
  %255 = mul i64 %253, 51539607552
  %256 = add i64 %255, 85899345920
  %257 = ashr exact i64 %256, 32
  %258 = or i64 %257, 7
  %259 = add i64 %254, %258
  %260 = inttoptr i64 %259 to i32*
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = icmp eq i32 %261, %143
  br i1 %262, label %263, label %264

263:                                              ; preds = %252
  store atomic volatile i32 %144, i32* %260 monotonic, align 4
  br label %264

264:                                              ; preds = %263, %252
  %265 = add nuw nsw i64 %240, 2
  %266 = add i64 %241, -2
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %220, label %239
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable.1233"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = add i64 %2, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = lshr i32 %8, 2
  %10 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 15
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = ashr i32 %14, 1
  %16 = add nsw i32 %15, -1
  %17 = and i32 %9, %16
  %18 = zext i32 %17 to i64
  %19 = icmp sgt i32 %3, 1
  br i1 %19, label %20, label %33

20:                                               ; preds = %5, %25
  %21 = phi i64 [ %29, %25 ], [ %18, %5 ]
  %22 = phi i32 [ %28, %25 ], [ %17, %5 ]
  %23 = phi i32 [ %27, %25 ], [ 1, %5 ]
  %24 = icmp eq i64 %21, %4
  br i1 %24, label %33, label %25

25:                                               ; preds = %20
  %26 = add i32 %22, %23
  %27 = add nuw nsw i32 %23, 1
  %28 = and i32 %26, %16
  %29 = zext i32 %28 to i64
  %30 = icmp eq i32 %27, %3
  br i1 %30, label %31, label %20

31:                                               ; preds = %25
  %32 = zext i32 %28 to i64
  br label %33

33:                                               ; preds = %20, %31, %5
  %34 = phi i64 [ %18, %5 ], [ %32, %31 ], [ %4, %20 ]
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1233"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [3 x %"class.v8::internal::Object"], align 16
  %6 = bitcast [3 x %"class.v8::internal::Object"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false)
  %7 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = mul i64 %1, 51539607552
  %11 = add i64 %10, 85899345920
  %12 = ashr exact i64 %11, 32
  %13 = add nsw i64 %12, 7
  %14 = add i64 %13, %8
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %9, %17
  %19 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 %18, i64* %19, align 16
  %20 = mul i64 %1, 51539607552
  %21 = add i64 %20, 103079215104
  %22 = ashr exact i64 %21, 32
  %23 = add nsw i64 %22, 7
  %24 = add i64 %23, %8
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %9, %27
  %29 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 1, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = mul i64 %1, 51539607552
  %31 = add i64 %30, 120259084288
  %32 = ashr exact i64 %31, 32
  %33 = add nsw i64 %32, 7
  %34 = add i64 %33, %8
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %9, %37
  %39 = getelementptr inbounds [3 x %"class.v8::internal::Object"], [3 x %"class.v8::internal::Object"]* %5, i64 0, i64 2, i32 0, i32 0
  store i64 %38, i64* %39, align 16
  %40 = mul i64 %2, 51539607552
  %41 = add i64 %40, 85899345920
  %42 = ashr exact i64 %41, 32
  %43 = add nsw i64 %42, 7
  %44 = add i64 %8, %43
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %9, %47
  store atomic volatile i32 %46, i32* %15 monotonic, align 4
  switch i32 %3, label %65 [
    i32 4, label %49
    i32 0, label %100
  ]

49:                                               ; preds = %4
  %50 = load i64, i64* %7, align 8
  %51 = add i64 %50, %13
  %52 = and i64 %47, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %85, label %54

54:                                               ; preds = %49
  %55 = and i64 %50, -262144
  %56 = or i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 262144
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %54
  %62 = or i64 %55, 16
  %63 = inttoptr i64 %62 to %"class.v8::internal::Heap"**
  %64 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %63, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %64, i64 %50, i64 %51, i64 %48) #11
  br label %68

65:                                               ; preds = %4
  %66 = and i64 %47, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %65, %61, %54
  %69 = load i64, i64* %7, align 8
  %70 = add i64 %69, %13
  %71 = and i64 %48, -262144
  %72 = or i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 24
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %68
  %78 = and i64 %69, -262144
  %79 = or i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 24
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %77
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %69, i64 %70, i64 %48) #11
  br label %85

85:                                               ; preds = %84, %77, %68, %65, %49
  %86 = load i64, i64* %7, align 8
  %87 = and i64 %86, -4294967296
  %88 = mul i64 %2, 51539607552
  %89 = add i64 %88, 103079215104
  %90 = ashr exact i64 %89, 32
  %91 = add nsw i64 %90, 7
  %92 = add i64 %91, %86
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %87, %95
  %97 = add i64 %86, %23
  %98 = inttoptr i64 %97 to i32*
  store atomic volatile i32 %94, i32* %98 monotonic, align 4
  %99 = icmp eq i32 %3, 4
  br i1 %99, label %210, label %226

100:                                              ; preds = %4
  %101 = load i64, i64* %7, align 8
  %102 = mul i64 %2, 51539607552
  %103 = add i64 %102, 103079215104
  %104 = ashr exact i64 %103, 32
  %105 = add nsw i64 %104, 7
  %106 = add i64 %105, %101
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = add i64 %101, %23
  %110 = inttoptr i64 %109 to i32*
  store atomic volatile i32 %108, i32* %110 monotonic, align 4
  %111 = load i64, i64* %7, align 8
  %112 = mul i64 %2, 51539607552
  %113 = add i64 %112, 120259084288
  %114 = ashr exact i64 %113, 32
  %115 = add nsw i64 %114, 7
  %116 = add i64 %115, %111
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = add i64 %111, %33
  %120 = inttoptr i64 %119 to i32*
  store atomic volatile i32 %118, i32* %120 monotonic, align 4
  %121 = load i64, i64* %19, align 16
  %122 = load i64, i64* %7, align 8
  %123 = add i64 %122, %43
  %124 = inttoptr i64 %123 to i32*
  %125 = trunc i64 %121 to i32
  store atomic volatile i32 %125, i32* %124 monotonic, align 4
  br label %191

126:                                              ; preds = %385, %388, %397, %404
  %127 = load i64, i64* %19, align 16
  %128 = load i64, i64* %7, align 8
  %129 = add i64 %128, %43
  %130 = inttoptr i64 %129 to i32*
  %131 = trunc i64 %127 to i32
  store atomic volatile i32 %131, i32* %130 monotonic, align 4
  switch i32 %3, label %159 [
    i32 4, label %132
    i32 0, label %191
  ]

132:                                              ; preds = %368, %126
  %133 = phi i64 [ %369, %368 ], [ %127, %126 ]
  %134 = load i64, i64* %7, align 8
  %135 = add i64 %134, %43
  %136 = and i64 %133, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %148

138:                                              ; preds = %132
  %139 = load i64, i64* %29, align 8
  %140 = load i64, i64* %7, align 8
  %141 = mul i64 %2, 51539607552
  %142 = add i64 %141, 103079215104
  %143 = ashr exact i64 %142, 32
  %144 = add nsw i64 %143, 7
  %145 = add i64 %140, %144
  %146 = inttoptr i64 %145 to i32*
  %147 = trunc i64 %139 to i32
  store atomic volatile i32 %147, i32* %146 monotonic, align 4
  br label %262

148:                                              ; preds = %132
  %149 = and i64 %134, -262144
  %150 = or i64 %149, 8
  %151 = inttoptr i64 %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = and i64 %152, 262144
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %148
  %156 = or i64 %149, 16
  %157 = inttoptr i64 %156 to %"class.v8::internal::Heap"**
  %158 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %157, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %158, i64 %134, i64 %135, i64 %133) #11
  br label %162

159:                                              ; preds = %126
  %160 = and i64 %127, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %159, %155, %148
  %163 = phi i64 [ %127, %159 ], [ %133, %155 ], [ %133, %148 ]
  %164 = load i64, i64* %7, align 8
  %165 = add i64 %164, %43
  %166 = and i64 %163, -262144
  %167 = or i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, 24
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %180, label %172

172:                                              ; preds = %162
  %173 = and i64 %164, -262144
  %174 = or i64 %173, 8
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = and i64 %176, 24
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %164, i64 %165, i64 %163) #11
  br label %180

180:                                              ; preds = %179, %172, %162, %159
  %181 = load i64, i64* %29, align 8
  %182 = load i64, i64* %7, align 8
  %183 = mul i64 %2, 51539607552
  %184 = add i64 %183, 103079215104
  %185 = ashr exact i64 %184, 32
  %186 = add nsw i64 %185, 7
  %187 = add i64 %182, %186
  %188 = inttoptr i64 %187 to i32*
  %189 = trunc i64 %181 to i32
  store atomic volatile i32 %189, i32* %188 monotonic, align 4
  %190 = icmp eq i32 %3, 4
  br i1 %190, label %262, label %290

191:                                              ; preds = %100, %126
  %192 = load i64, i64* %29, align 8
  %193 = load i64, i64* %7, align 8
  %194 = mul i64 %2, 51539607552
  %195 = add i64 %194, 103079215104
  %196 = ashr exact i64 %195, 32
  %197 = add nsw i64 %196, 7
  %198 = add i64 %193, %197
  %199 = inttoptr i64 %198 to i32*
  %200 = trunc i64 %192 to i32
  store atomic volatile i32 %200, i32* %199 monotonic, align 4
  %201 = load i64, i64* %39, align 16
  %202 = load i64, i64* %7, align 8
  %203 = mul i64 %2, 51539607552
  %204 = add i64 %203, 120259084288
  %205 = ashr exact i64 %204, 32
  %206 = add nsw i64 %205, 7
  %207 = add i64 %202, %206
  %208 = inttoptr i64 %207 to i32*
  %209 = trunc i64 %201 to i32
  store atomic volatile i32 %209, i32* %208 monotonic, align 4
  br label %261

210:                                              ; preds = %85
  %211 = load i64, i64* %7, align 8
  %212 = add i64 %211, %23
  %213 = and i64 %95, 1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %246, label %215

215:                                              ; preds = %210
  %216 = and i64 %211, -262144
  %217 = or i64 %216, 8
  %218 = inttoptr i64 %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = and i64 %219, 262144
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %229, label %222

222:                                              ; preds = %215
  %223 = or i64 %216, 16
  %224 = inttoptr i64 %223 to %"class.v8::internal::Heap"**
  %225 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %224, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %225, i64 %211, i64 %212, i64 %96) #11
  br label %229

226:                                              ; preds = %85
  %227 = and i64 %95, 1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %246, label %229

229:                                              ; preds = %215, %222, %226
  %230 = load i64, i64* %7, align 8
  %231 = add i64 %230, %23
  %232 = and i64 %96, -262144
  %233 = or i64 %232, 8
  %234 = inttoptr i64 %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = and i64 %235, 24
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %246, label %238

238:                                              ; preds = %229
  %239 = and i64 %230, -262144
  %240 = or i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 24
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %238
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %230, i64 %231, i64 %96) #11
  br label %246

246:                                              ; preds = %210, %226, %229, %238, %245
  %247 = load i64, i64* %7, align 8
  %248 = and i64 %247, -4294967296
  %249 = mul i64 %2, 51539607552
  %250 = add i64 %249, 120259084288
  %251 = ashr exact i64 %250, 32
  %252 = add nsw i64 %251, 7
  %253 = add i64 %252, %247
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %248, %256
  %258 = add i64 %247, %33
  %259 = inttoptr i64 %258 to i32*
  store atomic volatile i32 %255, i32* %259 monotonic, align 4
  %260 = icmp eq i32 %3, 4
  br i1 %260, label %363, label %385

261:                                              ; preds = %323, %341, %344, %355, %362, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void

262:                                              ; preds = %180, %138
  %263 = phi i64 [ %144, %138 ], [ %186, %180 ]
  %264 = phi i64 [ %139, %138 ], [ %181, %180 ]
  %265 = load i64, i64* %7, align 8
  %266 = add i64 %265, %263
  %267 = and i64 %264, 1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %279

269:                                              ; preds = %262
  %270 = load i64, i64* %39, align 16
  %271 = load i64, i64* %7, align 8
  %272 = mul i64 %2, 51539607552
  %273 = add i64 %272, 120259084288
  %274 = ashr exact i64 %273, 32
  %275 = add nsw i64 %274, 7
  %276 = add i64 %271, %275
  %277 = inttoptr i64 %276 to i32*
  %278 = trunc i64 %270 to i32
  store atomic volatile i32 %278, i32* %277 monotonic, align 4
  br label %323

279:                                              ; preds = %262
  %280 = and i64 %265, -262144
  %281 = or i64 %280, 8
  %282 = inttoptr i64 %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 262144
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %293, label %286

286:                                              ; preds = %279
  %287 = or i64 %280, 16
  %288 = inttoptr i64 %287 to %"class.v8::internal::Heap"**
  %289 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %288, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %289, i64 %265, i64 %266, i64 %264) #11
  br label %293

290:                                              ; preds = %180
  %291 = and i64 %181, 1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %312, label %293

293:                                              ; preds = %279, %286, %290
  %294 = phi i64 [ %263, %279 ], [ %263, %286 ], [ %186, %290 ]
  %295 = phi i64 [ %264, %279 ], [ %264, %286 ], [ %181, %290 ]
  %296 = load i64, i64* %7, align 8
  %297 = add i64 %296, %294
  %298 = and i64 %295, -262144
  %299 = or i64 %298, 8
  %300 = inttoptr i64 %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 24
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %312, label %304

304:                                              ; preds = %293
  %305 = and i64 %296, -262144
  %306 = or i64 %305, 8
  %307 = inttoptr i64 %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = and i64 %308, 24
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %304
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %296, i64 %297, i64 %295) #11
  br label %312

312:                                              ; preds = %290, %293, %304, %311
  %313 = load i64, i64* %39, align 16
  %314 = load i64, i64* %7, align 8
  %315 = mul i64 %2, 51539607552
  %316 = add i64 %315, 120259084288
  %317 = ashr exact i64 %316, 32
  %318 = add nsw i64 %317, 7
  %319 = add i64 %314, %318
  %320 = inttoptr i64 %319 to i32*
  %321 = trunc i64 %313 to i32
  store atomic volatile i32 %321, i32* %320 monotonic, align 4
  %322 = icmp eq i32 %3, 4
  br i1 %322, label %323, label %341

323:                                              ; preds = %312, %269
  %324 = phi i64 [ %275, %269 ], [ %318, %312 ]
  %325 = phi i64 [ %270, %269 ], [ %313, %312 ]
  %326 = load i64, i64* %7, align 8
  %327 = add i64 %326, %324
  %328 = and i64 %325, 1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %261, label %330

330:                                              ; preds = %323
  %331 = and i64 %326, -262144
  %332 = or i64 %331, 8
  %333 = inttoptr i64 %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = and i64 %334, 262144
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %344, label %337

337:                                              ; preds = %330
  %338 = or i64 %331, 16
  %339 = inttoptr i64 %338 to %"class.v8::internal::Heap"**
  %340 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %339, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %340, i64 %326, i64 %327, i64 %325) #11
  br label %344

341:                                              ; preds = %312
  %342 = and i64 %313, 1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %261, label %344

344:                                              ; preds = %341, %337, %330
  %345 = phi i64 [ %318, %341 ], [ %324, %337 ], [ %324, %330 ]
  %346 = phi i64 [ %313, %341 ], [ %325, %337 ], [ %325, %330 ]
  %347 = load i64, i64* %7, align 8
  %348 = add i64 %347, %345
  %349 = and i64 %346, -262144
  %350 = or i64 %349, 8
  %351 = inttoptr i64 %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = and i64 %352, 24
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %261, label %355

355:                                              ; preds = %344
  %356 = and i64 %347, -262144
  %357 = or i64 %356, 8
  %358 = inttoptr i64 %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = and i64 %359, 24
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %261

362:                                              ; preds = %355
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %347, i64 %348, i64 %346) #11
  br label %261

363:                                              ; preds = %246
  %364 = load i64, i64* %7, align 8
  %365 = add i64 %364, %33
  %366 = and i64 %256, 1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %374

368:                                              ; preds = %363
  %369 = load i64, i64* %19, align 16
  %370 = load i64, i64* %7, align 8
  %371 = add i64 %370, %43
  %372 = inttoptr i64 %371 to i32*
  %373 = trunc i64 %369 to i32
  store atomic volatile i32 %373, i32* %372 monotonic, align 4
  br label %132

374:                                              ; preds = %363
  %375 = and i64 %364, -262144
  %376 = or i64 %375, 8
  %377 = inttoptr i64 %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = and i64 %378, 262144
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %374
  %382 = or i64 %375, 16
  %383 = inttoptr i64 %382 to %"class.v8::internal::Heap"**
  %384 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %383, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %384, i64 %364, i64 %365, i64 %257) #11
  br label %388

385:                                              ; preds = %246
  %386 = and i64 %256, 1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %126, label %388

388:                                              ; preds = %385, %381, %374
  %389 = load i64, i64* %7, align 8
  %390 = add i64 %389, %33
  %391 = and i64 %257, -262144
  %392 = or i64 %391, 8
  %393 = inttoptr i64 %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = and i64 %394, 24
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %126, label %397

397:                                              ; preds = %388
  %398 = and i64 %389, -262144
  %399 = or i64 %398, 8
  %400 = inttoptr i64 %399 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = and i64 %401, 24
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %126

404:                                              ; preds = %397
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %389, i64 %390, i64 %257) #11
  br label %126
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1233"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = mul nsw i32 %2, 3
  %4 = add nsw i32 %3, 5
  ret i32 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1233"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = mul i64 %2, 51539607552
  %9 = add i64 %8, 85899345920
  %10 = ashr exact i64 %9, 32
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %6
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %7, %15
  %17 = getelementptr inbounds i64, i64* %1, i64 4
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %14, %19
  br i1 %20, label %28, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds i64, i64* %1, i64 5
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %14, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %16, i64* %27, align 8
  br label %28

28:                                               ; preds = %21, %4, %26
  %29 = phi i1 [ true, %26 ], [ false, %21 ], [ false, %4 ]
  ret i1 %29
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable.1233"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = mul i64 %1, 51539607552
  %7 = add i64 %6, 85899345920
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %4
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %5, %13
  ret i64 %14
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1233"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = mul i64 %2, 51539607552
  %8 = add i64 %7, 85899345920
  %9 = ashr exact i64 %8, 32
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %6
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  %18 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %19 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 1, i64 0
  br label %34

26:                                               ; preds = %20, %4
  %27 = and i64 %6, -262144
  %28 = or i64 %27, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %34

34:                                               ; preds = %24, %26
  %35 = phi i64* [ %33, %26 ], [ %25, %24 ]
  %36 = getelementptr inbounds i64, i64* %35, i64 4
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %13, %38
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds i64, i64* %35, i64 5
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %13, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %17, i64* %46, align 8
  br label %47

47:                                               ; preds = %40, %34, %45
  %48 = phi i1 [ true, %45 ], [ false, %40 ], [ false, %34 ]
  ret i1 %48
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -5
  %3 = sdiv i32 %2, 3
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable.1233"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable.1233"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = mul i64 %13, 51539607552
  %15 = add i64 %14, 85899345920
  %16 = ashr exact i64 %15, 32
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %50, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %35, %25, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %13, %25 ], [ %36, %35 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = zext i32 %43 to i64
  %45 = mul i64 %44, 51539607552
  %46 = add i64 %45, 85899345920
  %47 = ashr exact i64 %46, 32
  %48 = add i64 %17, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = icmp eq i32 %50, %23
  br i1 %51, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable.1233"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = mul i64 %12, 51539607552
  %14 = add i64 %13, 85899345920
  %15 = ashr exact i64 %14, 32
  %16 = add i64 %5, 7
  %17 = add i64 %15, %16
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %47, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %47, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %43, %27
  br i1 %31, label %45, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = zext i32 %36 to i64
  %38 = mul i64 %37, 51539607552
  %39 = add i64 %38, 85899345920
  %40 = ashr exact i64 %39, 32
  %41 = add i64 %40, %16
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = icmp eq i32 %43, %22
  br i1 %44, label %45, label %29

45:                                               ; preds = %32, %29
  %46 = zext i32 %36 to i64
  br label %47

47:                                               ; preds = %45, %24, %3
  %48 = phi i64 [ %12, %3 ], [ %12, %24 ], [ %46, %45 ]
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %72, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 44739240
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = mul nsw i32 %31, 3
  %51 = add nsw i32 %50, 5
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 50
  %54 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %52, i64* %53, i32 %51, i8 zeroext %49) #11
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i32*
  store atomic volatile i32 0, i32* %57 monotonic, align 4
  %58 = load i64, i64* %54, align 8
  %59 = add i64 %58, 11
  %60 = inttoptr i64 %59 to i32*
  store atomic volatile i32 0, i32* %60 monotonic, align 4
  %61 = load i64, i64* %54, align 8
  %62 = shl i32 %31, 1
  %63 = add i64 %61, 15
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 %62, i32* %64 monotonic, align 4
  %65 = bitcast %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %66 = load i64, i64* %1, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %70 = load i64, i64* %69, align 8
  %71 = load i64, i64* %54, align 8
  call void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1233"* nonnull %68, i64 %70, i64 %71)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  br label %72

72:                                               ; preds = %28, %48
  %73 = phi i64* [ %54, %48 ], [ %1, %28 ]
  ret i64* %73
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 44739240
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = mul nsw i32 %17, 3
  %19 = add nsw i32 %18, 5
  %20 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 50
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %20, i64* %21, i32 %19, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = shl i32 %17, 1
  %31 = add i64 %29, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %30, i32* %32 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1233"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = and i64 %2, -262144
  %5 = or i64 %4, 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 262144
  %9 = icmp eq i64 %8, 0
  %10 = and i64 %7, 24
  %11 = icmp ne i64 %10, 0
  %12 = and i1 %9, %11
  %13 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = or i64 %4, 16
  %18 = inttoptr i64 %17 to %"class.v8::internal::Heap"**
  %19 = add i64 %14, 19
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  br i1 %12, label %29, label %22

22:                                               ; preds = %3
  %23 = zext i32 %21 to i64
  %24 = or i64 %23, %1
  %25 = add i64 %2, 19
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 %21, i32* %26 monotonic, align 4
  %27 = and i64 %23, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %90, label %72

29:                                               ; preds = %3
  %30 = add i64 %2, 19
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %21, i32* %31 monotonic, align 4
  %32 = load i64, i64* %13, align 8
  %33 = add i64 %32, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = add i64 %2, 23
  %37 = inttoptr i64 %36 to i32*
  store atomic volatile i32 %35, i32* %37 monotonic, align 4
  br label %38

38:                                               ; preds = %90, %297, %304, %308, %29
  %39 = load i64, i64* %13, align 8
  %40 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %41 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %40, i64 0, i32 0, i32 1
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %40, i64 0, i32 1, i64 0
  br label %56

48:                                               ; preds = %42, %38
  %49 = and i64 %39, -262144
  %50 = or i64 %49, 16
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 16
  %53 = add i64 %52, -41416
  %54 = inttoptr i64 %53 to %"class.v8::internal::Isolate"*
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %56

56:                                               ; preds = %46, %48
  %57 = phi i64* [ %55, %48 ], [ %47, %46 ]
  %58 = add i64 %39, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = ashr i32 %60, 1
  %62 = sext i32 %61 to i64
  %63 = icmp eq i32 %61, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %56
  %65 = add i64 %2, 7
  br label %101

66:                                               ; preds = %56
  %67 = getelementptr inbounds i64, i64* %57, i64 4
  %68 = getelementptr inbounds i64, i64* %57, i64 5
  %69 = add i64 %2, 15
  %70 = inttoptr i64 %69 to i32*
  %71 = add i64 %2, 7
  br label %111

72:                                               ; preds = %22
  %73 = load i64, i64* %6, align 8
  %74 = and i64 %73, 262144
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %77, i64 %2, i64 %25, i64 %24) #11
  br label %78

78:                                               ; preds = %72, %76
  %79 = and i64 %24, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 24
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %78
  %86 = load i64, i64* %6, align 8
  %87 = and i64 %86, 24
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %25, i64 %24) #11
  br label %90

90:                                               ; preds = %22, %78, %85, %89
  %91 = load i64, i64* %13, align 8
  %92 = add i64 %91, 23
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %95, %1
  %97 = add i64 %2, 23
  %98 = inttoptr i64 %97 to i32*
  store atomic volatile i32 %94, i32* %98 monotonic, align 4
  %99 = and i64 %95, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %38, label %291

101:                                              ; preds = %269, %64
  %102 = phi i64 [ %65, %64 ], [ %71, %269 ]
  %103 = phi i64 [ %39, %64 ], [ %272, %269 ]
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, -2
  %108 = inttoptr i64 %102 to i32*
  store atomic volatile i32 %107, i32* %108 monotonic, align 4
  %109 = add i64 %2, 11
  %110 = inttoptr i64 %109 to i32*
  store atomic volatile i32 0, i32* %110 monotonic, align 4
  ret void

111:                                              ; preds = %269, %66
  %112 = phi i64 [ %39, %66 ], [ %272, %269 ]
  %113 = phi i64 [ 0, %66 ], [ %270, %269 ]
  %114 = mul i64 %113, 51539607552
  %115 = add i64 %114, 85899345920
  %116 = ashr exact i64 %115, 32
  %117 = add nsw i64 %116, 7
  %118 = add i64 %117, %112
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %121, %1
  %123 = load i64, i64* %67, align 8
  %124 = trunc i64 %123 to i32
  %125 = icmp eq i32 %120, %124
  br i1 %125, label %269, label %126

126:                                              ; preds = %111
  %127 = load i64, i64* %68, align 8
  %128 = trunc i64 %127 to i32
  %129 = icmp eq i32 %120, %128
  br i1 %129, label %269, label %130

130:                                              ; preds = %126
  %131 = add i64 %122, 3
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = lshr i32 %133, 2
  %135 = load atomic i32, i32* %70 monotonic, align 4
  %136 = ashr i32 %135, 1
  %137 = add nsw i32 %136, -1
  %138 = and i32 %137, %134
  %139 = zext i32 %138 to i64
  %140 = mul i64 %139, 51539607552
  %141 = add i64 %140, 85899345920
  %142 = ashr exact i64 %141, 32
  %143 = add i64 %142, %71
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = icmp eq i32 %145, %124
  br i1 %146, label %164, label %147

147:                                              ; preds = %130, %152
  %148 = phi i32 [ %162, %152 ], [ %145, %130 ]
  %149 = phi i32 [ %155, %152 ], [ %138, %130 ]
  %150 = phi i32 [ %153, %152 ], [ 1, %130 ]
  %151 = icmp eq i32 %148, %128
  br i1 %151, label %164, label %152

152:                                              ; preds = %147
  %153 = add i32 %150, 1
  %154 = add i32 %150, %149
  %155 = and i32 %154, %137
  %156 = zext i32 %155 to i64
  %157 = mul i64 %156, 51539607552
  %158 = add i64 %157, 85899345920
  %159 = ashr exact i64 %158, 32
  %160 = add i64 %159, %71
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = icmp eq i32 %162, %124
  br i1 %163, label %164, label %147

164:                                              ; preds = %152, %147, %130
  %165 = phi i32 [ %138, %130 ], [ %155, %152 ], [ %149, %147 ]
  %166 = load atomic i32, i32* %119 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %167, %1
  %169 = mul i32 %165, 12
  %170 = add i32 %169, 20
  %171 = sext i32 %170 to i64
  %172 = add i64 %71, %171
  %173 = inttoptr i64 %172 to i32*
  store atomic volatile i32 %166, i32* %173 monotonic, align 4
  %174 = and i64 %167, 1
  %175 = icmp eq i64 %174, 0
  %176 = or i1 %12, %175
  br i1 %176, label %195, label %177

177:                                              ; preds = %164
  %178 = load i64, i64* %6, align 8
  %179 = and i64 %178, 262144
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %182, i64 %2, i64 %172, i64 %168) #11
  br label %183

183:                                              ; preds = %181, %177
  %184 = and i64 %168, -262144
  %185 = or i64 %184, 8
  %186 = inttoptr i64 %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 24
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %195, label %190

190:                                              ; preds = %183
  %191 = load i64, i64* %6, align 8
  %192 = and i64 %191, 24
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %190
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %172, i64 %168) #11
  br label %195

195:                                              ; preds = %164, %183, %190, %194
  %196 = load i64, i64* %13, align 8
  %197 = mul i64 %113, 51539607552
  %198 = add i64 %197, 103079215104
  %199 = ashr exact i64 %198, 32
  %200 = add nsw i64 %199, 7
  %201 = add i64 %200, %196
  %202 = inttoptr i64 %201 to i32*
  %203 = load atomic i32, i32* %202 monotonic, align 4
  br i1 %12, label %214, label %204

204:                                              ; preds = %195
  %205 = zext i32 %203 to i64
  %206 = or i64 %205, %1
  %207 = mul i32 %165, 12
  %208 = add i32 %207, 24
  %209 = sext i32 %208 to i64
  %210 = add i64 %71, %209
  %211 = inttoptr i64 %210 to i32*
  store atomic volatile i32 %203, i32* %211 monotonic, align 4
  %212 = and i64 %205, 1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %251, label %233

214:                                              ; preds = %195
  %215 = mul i32 %165, 12
  %216 = add i32 %215, 24
  %217 = sext i32 %216 to i64
  %218 = add i64 %71, %217
  %219 = inttoptr i64 %218 to i32*
  store atomic volatile i32 %203, i32* %219 monotonic, align 4
  %220 = load i64, i64* %13, align 8
  %221 = mul i64 %113, 51539607552
  %222 = add i64 %221, 120259084288
  %223 = ashr exact i64 %222, 32
  %224 = add nsw i64 %223, 7
  %225 = add i64 %224, %220
  %226 = inttoptr i64 %225 to i32*
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = mul i32 %165, 12
  %229 = add i32 %228, 28
  %230 = sext i32 %229 to i64
  %231 = add i64 %71, %230
  %232 = inttoptr i64 %231 to i32*
  store atomic volatile i32 %227, i32* %232 monotonic, align 4
  br label %269

233:                                              ; preds = %204
  %234 = load i64, i64* %6, align 8
  %235 = and i64 %234, 262144
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %233
  %238 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %238, i64 %2, i64 %210, i64 %206) #11
  br label %239

239:                                              ; preds = %233, %237
  %240 = and i64 %206, -262144
  %241 = or i64 %240, 8
  %242 = inttoptr i64 %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = and i64 %243, 24
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %251, label %246

246:                                              ; preds = %239
  %247 = load i64, i64* %6, align 8
  %248 = and i64 %247, 24
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %246
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %210, i64 %206) #11
  br label %251

251:                                              ; preds = %204, %239, %246, %250
  %252 = load i64, i64* %13, align 8
  %253 = mul i64 %113, 51539607552
  %254 = add i64 %253, 120259084288
  %255 = ashr exact i64 %254, 32
  %256 = add nsw i64 %255, 7
  %257 = add i64 %256, %252
  %258 = inttoptr i64 %257 to i32*
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = zext i32 %259 to i64
  %261 = or i64 %260, %1
  %262 = mul i32 %165, 12
  %263 = add i32 %262, 28
  %264 = sext i32 %263 to i64
  %265 = add i64 %71, %264
  %266 = inttoptr i64 %265 to i32*
  store atomic volatile i32 %259, i32* %266 monotonic, align 4
  %267 = and i64 %260, 1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %273

269:                                              ; preds = %251, %279, %286, %290, %214, %126, %111
  %270 = add i64 %113, 1
  %271 = icmp eq i64 %270, %62
  %272 = load i64, i64* %13, align 8
  br i1 %271, label %101, label %111

273:                                              ; preds = %251
  %274 = load i64, i64* %6, align 8
  %275 = and i64 %274, 262144
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %273
  %278 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %278, i64 %2, i64 %265, i64 %261) #11
  br label %279

279:                                              ; preds = %277, %273
  %280 = and i64 %261, -262144
  %281 = or i64 %280, 8
  %282 = inttoptr i64 %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 24
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %269, label %286

286:                                              ; preds = %279
  %287 = load i64, i64* %6, align 8
  %288 = and i64 %287, 24
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %269

290:                                              ; preds = %286
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %265, i64 %261) #11
  br label %269

291:                                              ; preds = %90
  %292 = load i64, i64* %6, align 8
  %293 = and i64 %292, 262144
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %296, i64 %2, i64 %97, i64 %96) #11
  br label %297

297:                                              ; preds = %295, %291
  %298 = and i64 %96, -262144
  %299 = or i64 %298, 8
  %300 = inttoptr i64 %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 24
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %38, label %304

304:                                              ; preds = %297
  %305 = load i64, i64* %6, align 8
  %306 = and i64 %305, 24
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %38

308:                                              ; preds = %304
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %97, i64 %96) #11
  br label %38
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable.1233"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11SetCapacityEi(%"class.v8::internal::HashTable.1233"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Ev(%"class.v8::internal::HashTable.1233"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Em(%"class.v8::internal::HashTable.1233"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1233", %"class.v8::internal::HashTable.1233"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 44739240
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = mul nsw i32 %16, 3
  %18 = add nsw i32 %17, 5
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %20 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 50
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %19, i64* %22, i32 %18, i8 zeroext %2) #11
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 0, i32* %26 monotonic, align 4
  %27 = load i64, i64* %23, align 8
  %28 = add i64 %27, 11
  %29 = inttoptr i64 %28 to i32*
  store atomic volatile i32 0, i32* %29 monotonic, align 4
  %30 = load i64, i64* %23, align 8
  %31 = shl i32 %16, 1
  %32 = add i64 %30, 15
  %33 = inttoptr i64 %32 to i32*
  store atomic volatile i32 %31, i32* %33 monotonic, align 4
  ret i64* %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %79

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 44739240
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = mul nsw i32 %56, 3
  %58 = add nuw nsw i32 %57, 5
  %59 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 50
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %59, i64* %60, i32 %58, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = shl i32 %56, 1
  %70 = add i64 %68, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %69, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %77 = load i64, i64* %76, align 8
  %78 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1233"* nonnull %75, i64 %77, i64 %78)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %79

79:                                               ; preds = %25, %55
  %80 = phi i64* [ %61, %55 ], [ %1, %25 ]
  ret i64* %80
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %82

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 44739240
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = mul nsw i32 %55, 3
  %57 = add nuw nsw i32 %56, 5
  %58 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %59 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 50
  %62 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %58, i64* %61, i32 %57, i8 zeroext %46) #11
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i32*
  store atomic volatile i32 0, i32* %65 monotonic, align 4
  %66 = load i64, i64* %62, align 8
  %67 = add i64 %66, 11
  %68 = inttoptr i64 %67 to i32*
  store atomic volatile i32 0, i32* %68 monotonic, align 4
  %69 = load i64, i64* %62, align 8
  %70 = shl i32 %55, 1
  %71 = add i64 %69, 15
  %72 = inttoptr i64 %71 to i32*
  store atomic volatile i32 %70, i32* %72 monotonic, align 4
  %73 = bitcast %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = load i64, i64* %1, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %78 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %78, i64 0, i32 0, i32 4
  %80 = load i64, i64* %79, align 8
  %81 = load i64, i64* %62, align 8
  call void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1233"* nonnull %76, i64 %80, i64 %81)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  br label %82

82:                                               ; preds = %25, %54
  %83 = phi i64* [ %62, %54 ], [ %1, %25 ]
  ret i64* %83
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1235"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = mul i64 %1, 51539607552
  %7 = add i64 %6, 103079215104
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %4
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %5, %13
  ret i64 %14
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7ValueAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1235"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %2, 51539607552
  %7 = add i64 %6, 103079215104
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %5
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %1, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #11
  %15 = zext i32 %12 to i64
  %16 = or i64 %15, %1
  ret i64 %16
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE10ValueAtPutENS0_13InternalIndexENS0_6ObjectE(%"class.v8::internal::Dictionary.1235"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %1, 51539607552
  %7 = add i64 %6, 103079215104
  %8 = ashr exact i64 %7, 32
  %9 = add nsw i64 %8, 7
  %10 = add i64 %5, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  %13 = load i64, i64* %4, align 8
  %14 = add i64 %13, %9
  %15 = and i64 %2, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %47, label %17

17:                                               ; preds = %3
  %18 = and i64 %13, -262144
  %19 = or i64 %18, 8
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 262144
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %17
  %25 = or i64 %18, 16
  %26 = inttoptr i64 %25 to %"class.v8::internal::Heap"**
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %27, i64 %13, i64 %14, i64 %2) #11
  %28 = load i64, i64* %4, align 8
  %29 = add i64 %28, %9
  br label %30

30:                                               ; preds = %24, %17
  %31 = phi i64 [ %14, %17 ], [ %29, %24 ]
  %32 = phi i64 [ %13, %17 ], [ %28, %24 ]
  %33 = and i64 %2, -262144
  %34 = or i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 24
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %30
  %40 = and i64 %32, -262144
  %41 = or i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 24
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %39
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %32, i64 %31, i64 %2) #11
  br label %47

47:                                               ; preds = %3, %30, %39, %46
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE9DetailsAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1235"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = mul i64 %1, 51539607552
  %6 = add i64 %5, 120259084288
  %7 = ashr exact i64 %6, 32
  %8 = add nsw i64 %7, 7
  %9 = add i64 %8, %4
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  ret i32 %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE12DetailsAtPutENS0_13InternalIndexENS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1235"*, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = shl i32 %2, 1
  %7 = mul i64 %1, 51539607552
  %8 = add i64 %7, 120259084288
  %9 = ashr exact i64 %8, 32
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %5
  %12 = inttoptr i64 %11 to i32*
  store atomic volatile i32 %6, i32* %12 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::NameDictionary", align 8
  %5 = load i64, i64* %1, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %3
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 5
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::NameDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %4, i64 0, i32 0, i32 0
  call void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1235"* nonnull %28, i64 %2, i64 %25, i64 %25, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %29 = load i64, i64* %1, align 8
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = add i32 %32, -2
  %34 = and i32 %33, -2
  store atomic volatile i32 %34, i32* %31 monotonic, align 4
  %35 = add i64 %29, 11
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = add i32 %37, 2
  %39 = and i32 %38, -2
  store atomic volatile i32 %39, i32* %36 monotonic, align 4
  %40 = call i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0) #11
  ret i64* %40
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE10ClearEntryENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1235"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::NameDictionary", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %2
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 5
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::NameDictionary"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %3, i64 0, i32 0, i32 0
  call void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1235"* nonnull %28, i64 %1, i64 %25, i64 %25, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = tail call i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1235"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %5 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 1, i64 0
  br label %20

12:                                               ; preds = %6, %1
  %13 = and i64 %3, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %20

20:                                               ; preds = %10, %12
  %21 = phi i64* [ %19, %12 ], [ %11, %10 ]
  %22 = add i64 %3, 15
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = ashr i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = icmp eq i32 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  %29 = and i64 %3, -4294967296
  %30 = getelementptr inbounds i64, i64* %21, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds i64, i64* %21, i64 5
  br label %36

34:                                               ; preds = %77, %20
  %35 = phi i32 [ 0, %20 ], [ %78, %77 ]
  ret i32 %35

36:                                               ; preds = %28, %77
  %37 = phi i32 [ 0, %28 ], [ %78, %77 ]
  %38 = phi i64 [ 0, %28 ], [ %79, %77 ]
  %39 = mul i64 %38, 51539607552
  %40 = add i64 %39, 85899345920
  %41 = ashr exact i64 %40, 32
  %42 = add nsw i64 %41, 7
  %43 = add i64 %42, %3
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %29, %46
  %48 = icmp eq i32 %45, %32
  br i1 %48, label %77, label %49

49:                                               ; preds = %36
  %50 = load i64, i64* %33, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %45, %51
  br i1 %52, label %77, label %53

53:                                               ; preds = %49
  %54 = and i64 %46, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %66, label %56

56:                                               ; preds = %53
  %57 = add i64 %47, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %29, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp eq i16 %64, 64
  br i1 %65, label %77, label %66

66:                                               ; preds = %53, %56
  %67 = add i64 %39, 120259084288
  %68 = ashr exact i64 %67, 32
  %69 = add nsw i64 %68, 7
  %70 = add i64 %69, %3
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = lshr i32 %72, 5
  %74 = and i32 %73, 1
  %75 = xor i32 %74, 1
  %76 = add nsw i32 %75, %37
  br label %77

77:                                               ; preds = %56, %36, %49, %66
  %78 = phi i32 [ %76, %66 ], [ %37, %49 ], [ %37, %36 ], [ %37, %56 ]
  %79 = add i64 %38, 1
  %80 = icmp eq i64 %79, %26
  br i1 %80, label %34, label %36
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::Dictionary.1235"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %6 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 1, i64 0
  br label %21

13:                                               ; preds = %7, %2
  %14 = and i64 %4, -262144
  %15 = or i64 %14, 16
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %21

21:                                               ; preds = %11, %13
  %22 = phi i64* [ %20, %13 ], [ %12, %11 ]
  %23 = add i64 %4, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = ashr i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = getelementptr inbounds i64, i64* %22, i64 4
  %31 = load i64, i64* %30, align 8
  br label %66

32:                                               ; preds = %21
  %33 = add i64 %4, 7
  %34 = getelementptr inbounds i64, i64* %22, i64 4
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds i64, i64* %22, i64 5
  %38 = trunc i64 %1 to i32
  br label %39

39:                                               ; preds = %32, %59
  %40 = phi i64 [ 0, %32 ], [ %60, %59 ]
  %41 = mul i64 %40, 51539607552
  %42 = add i64 %41, 85899345920
  %43 = ashr exact i64 %42, 32
  %44 = add i64 %33, %43
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = icmp eq i32 %46, %36
  br i1 %47, label %59, label %48

48:                                               ; preds = %39
  %49 = load i64, i64* %37, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %46, %50
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = add i64 %41, 103079215104
  %54 = ashr exact i64 %53, 32
  %55 = add i64 %33, %54
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = icmp eq i32 %57, %38
  br i1 %58, label %62, label %59

59:                                               ; preds = %52, %48, %39
  %60 = add i64 %40, 1
  %61 = icmp eq i64 %60, %27
  br i1 %61, label %66, label %39

62:                                               ; preds = %52
  %63 = and i64 %4, -4294967296
  %64 = zext i32 %46 to i64
  %65 = or i64 %63, %64
  br label %66

66:                                               ; preds = %59, %29, %62
  %67 = phi i64 [ %65, %62 ], [ %31, %29 ], [ %35, %59 ]
  ret i64 %67
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1235"*, i64, i64, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 8
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 262144
  %13 = icmp ne i64 %12, 0
  %14 = and i64 %11, 24
  %15 = icmp eq i64 %14, 0
  %16 = or i1 %13, %15
  %17 = mul i64 %1, 51539607552
  %18 = add i64 %17, 85899345920
  %19 = ashr exact i64 %18, 32
  %20 = add nsw i64 %19, 7
  %21 = add i64 %7, %20
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %2 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = load i64, i64* %6, align 8
  br i1 %16, label %25, label %60

25:                                               ; preds = %5
  %26 = add i64 %24, %20
  %27 = and i64 %2, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %67, label %29

29:                                               ; preds = %25
  %30 = and i64 %24, -262144
  %31 = or i64 %30, 8
  %32 = inttoptr i64 %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 262144
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %29
  %37 = or i64 %30, 16
  %38 = inttoptr i64 %37 to %"class.v8::internal::Heap"**
  %39 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %38, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %39, i64 %24, i64 %26, i64 %2) #11
  %40 = load i64, i64* %6, align 8
  %41 = add i64 %40, %20
  br label %42

42:                                               ; preds = %29, %36
  %43 = phi i64 [ %26, %29 ], [ %41, %36 ]
  %44 = phi i64 [ %24, %29 ], [ %40, %36 ]
  %45 = and i64 %2, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 24
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %42
  %52 = and i64 %44, -262144
  %53 = or i64 %52, 8
  %54 = inttoptr i64 %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 24
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %67

58:                                               ; preds = %51
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %44, i64 %43, i64 %2) #11
  %59 = load i64, i64* %6, align 8
  br label %67

60:                                               ; preds = %5
  %61 = add i64 %17, 103079215104
  %62 = ashr exact i64 %61, 32
  %63 = add nsw i64 %62, 7
  %64 = add i64 %63, %24
  %65 = inttoptr i64 %64 to i32*
  %66 = trunc i64 %3 to i32
  store atomic volatile i32 %66, i32* %65 monotonic, align 4
  br label %109

67:                                               ; preds = %25, %42, %51, %58
  %68 = phi i64 [ %24, %25 ], [ %44, %42 ], [ %44, %51 ], [ %59, %58 ]
  %69 = add i64 %17, 103079215104
  %70 = ashr exact i64 %69, 32
  %71 = add nsw i64 %70, 7
  %72 = add i64 %68, %71
  %73 = inttoptr i64 %72 to i32*
  %74 = trunc i64 %3 to i32
  store atomic volatile i32 %74, i32* %73 monotonic, align 4
  %75 = load i64, i64* %6, align 8
  %76 = add i64 %75, %71
  %77 = and i64 %3, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %109, label %79

79:                                               ; preds = %67
  %80 = and i64 %75, -262144
  %81 = or i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 262144
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %79
  %87 = or i64 %80, 16
  %88 = inttoptr i64 %87 to %"class.v8::internal::Heap"**
  %89 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %88, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %89, i64 %75, i64 %76, i64 %3) #11
  %90 = load i64, i64* %6, align 8
  %91 = add i64 %90, %71
  br label %92

92:                                               ; preds = %79, %86
  %93 = phi i64 [ %76, %79 ], [ %91, %86 ]
  %94 = phi i64 [ %75, %79 ], [ %90, %86 ]
  %95 = and i64 %3, -262144
  %96 = or i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 24
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %92
  %102 = and i64 %94, -262144
  %103 = or i64 %102, 8
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = and i64 %105, 24
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %101
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %94, i64 %93, i64 %3) #11
  br label %109

109:                                              ; preds = %60, %67, %92, %101, %108
  %110 = load i64, i64* %6, align 8
  %111 = shl i32 %4, 1
  %112 = add i64 %17, 120259084288
  %113 = ashr exact i64 %112, 32
  %114 = add nsw i64 %113, 7
  %115 = add i64 %114, %110
  %116 = inttoptr i64 %115 to i32*
  store atomic volatile i32 %111, i32* %116 monotonic, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE17RawFieldOfValueAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1235"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = mul i64 %1, 51539607552
  %6 = add i64 %5, 103079215104
  %7 = ashr exact i64 %6, 32
  %8 = add nsw i64 %7, 7
  %9 = add i64 %8, %4
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE11ShallowCopyEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 50
  %5 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %3, i64* %1, i64* %4) #11
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = load i64, i64* %2, align 8
  %8 = add i64 %7, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = lshr i32 %10, 2
  %12 = add i64 %6, 15
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = ashr i32 %14, 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i32 %15, -1
  %19 = and i32 %18, %11
  %20 = zext i32 %19 to i64
  %21 = mul i64 %20, 51539607552
  %22 = add i64 %21, 85899345920
  %23 = ashr exact i64 %22, 32
  %24 = add i64 %6, 7
  %25 = add i64 %23, %24
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = trunc i64 %17 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %49, label %30

30:                                               ; preds = %5
  %31 = trunc i64 %7 to i32
  %32 = icmp eq i32 %27, %31
  br i1 %32, label %51, label %36

33:                                               ; preds = %36
  %34 = add i32 %37, 1
  %35 = icmp eq i32 %47, %31
  br i1 %35, label %51, label %36

36:                                               ; preds = %30, %33
  %37 = phi i32 [ %34, %33 ], [ 1, %30 ]
  %38 = phi i32 [ %40, %33 ], [ %19, %30 ]
  %39 = add i32 %38, %37
  %40 = and i32 %39, %18
  %41 = zext i32 %40 to i64
  %42 = mul i64 %41, 51539607552
  %43 = add i64 %42, 85899345920
  %44 = ashr exact i64 %43, 32
  %45 = add i64 %44, %24
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = icmp eq i32 %47, %28
  br i1 %48, label %49, label %33

49:                                               ; preds = %36, %5
  %50 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, i32 %4, %"class.v8::internal::InternalIndex"* null)
  br label %92

51:                                               ; preds = %33, %30
  %52 = phi i64 [ %21, %30 ], [ %42, %33 ]
  %53 = load i64, i64* %3, align 8
  %54 = add i64 %52, 103079215104
  %55 = ashr exact i64 %54, 32
  %56 = add i64 %24, %55
  %57 = inttoptr i64 %56 to i32*
  %58 = trunc i64 %53 to i32
  store atomic volatile i32 %58, i32* %57 monotonic, align 4
  %59 = and i64 %53, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %84, label %61

61:                                               ; preds = %51
  %62 = and i64 %6, -262144
  %63 = or i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 262144
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %61
  %69 = or i64 %62, 16
  %70 = inttoptr i64 %69 to %"class.v8::internal::Heap"**
  %71 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %70, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %71, i64 %6, i64 %56, i64 %53) #11
  br label %72

72:                                               ; preds = %68, %61
  %73 = and i64 %53, -262144
  %74 = or i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %72
  %80 = load i64, i64* %64, align 8
  %81 = and i64 %80, 24
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %6, i64 %56, i64 %53) #11
  br label %84

84:                                               ; preds = %51, %72, %79, %83
  %85 = load i64, i64* %1, align 8
  %86 = shl i32 %4, 1
  %87 = add i64 %52, 120259084288
  %88 = ashr exact i64 %87, 32
  %89 = add nsw i64 %88, 7
  %90 = add i64 %89, %85
  %91 = inttoptr i64 %90 to i32*
  store atomic volatile i32 %86, i32* %91 monotonic, align 4
  br label %92

92:                                               ; preds = %84, %49
  %93 = phi i64* [ %50, %49 ], [ %1, %84 ]
  ret i64* %93
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = load i64, i64* %1, align 8
  %8 = add i64 %7, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = icmp ult i32 %11, 8388608
  br i1 %12, label %53, label %13

13:                                               ; preds = %6
  %14 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #11
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 3
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = ashr i32 %18, 1
  %20 = icmp sgt i32 %18, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  %22 = sext i32 %19 to i64
  br label %25

23:                                               ; preds = %25, %13
  %24 = add nsw i32 %19, 1
  br label %53

25:                                               ; preds = %51, %21
  %26 = phi i64 [ %15, %21 ], [ %52, %51 ]
  %27 = phi i64 [ 0, %21 ], [ %37, %51 ]
  %28 = trunc i64 %27 to i32
  %29 = shl i32 %28, 2
  %30 = sext i32 %29 to i64
  %31 = add i64 %26, 7
  %32 = add i64 %31, %30
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = ashr i32 %34, 1
  %36 = sext i32 %35 to i64
  %37 = add nuw nsw i64 %27, 1
  %38 = load i64, i64* %1, align 8
  %39 = mul i64 %36, 51539607552
  %40 = add i64 %39, 120259084288
  %41 = ashr exact i64 %40, 32
  %42 = add i64 %38, 7
  %43 = add i64 %42, %41
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 510
  %47 = trunc i64 %37 to i32
  %48 = shl i32 %47, 9
  %49 = or i32 %46, %48
  store atomic volatile i32 %49, i32* %44 monotonic, align 4
  %50 = icmp slt i64 %37, %22
  br i1 %50, label %51, label %23

51:                                               ; preds = %25
  %52 = load i64, i64* %14, align 8
  br label %25

53:                                               ; preds = %6, %23
  %54 = phi i32 [ %11, %6 ], [ %24, %23 ]
  %55 = and i32 %4, -2147483393
  %56 = shl i32 %54, 8
  %57 = or i32 %56, %55
  %58 = tail call i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, i32 %57, %"class.v8::internal::InternalIndex"* %5) #11
  %59 = load i64, i64* %58, align 8
  %60 = shl i32 %54, 1
  %61 = add i32 %60, 2
  %62 = add i64 %59, 19
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 %61, i32* %63 monotonic, align 4
  ret i64* %58
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Ev(%"class.v8::internal::Dictionary.1235"*) unnamed_addr #0 comdat($_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Em(%"class.v8::internal::Dictionary.1235"*, i64) unnamed_addr #5 comdat($_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1235", %"class.v8::internal::Dictionary.1235"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", align 8
  %8 = load i64, i64* %2, align 8
  %9 = add i64 %8, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = lshr i32 %11, 2
  %13 = tail call i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 15
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = ashr i32 %17, 1
  %19 = add nsw i32 %18, -1
  %20 = and i32 %19, %12
  %21 = zext i32 %20 to i64
  %22 = mul i64 %21, 51539607552
  %23 = add i64 %22, 85899345920
  %24 = ashr exact i64 %23, 32
  %25 = add i64 %14, 7
  %26 = add i64 %24, %25
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %28, %31
  br i1 %32, label %56, label %33

33:                                               ; preds = %6
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %28, %36
  br i1 %37, label %56, label %41

38:                                               ; preds = %41
  %39 = add i32 %42, 1
  %40 = icmp eq i32 %52, %36
  br i1 %40, label %54, label %41

41:                                               ; preds = %33, %38
  %42 = phi i32 [ %39, %38 ], [ 1, %33 ]
  %43 = phi i32 [ %45, %38 ], [ %20, %33 ]
  %44 = add i32 %42, %43
  %45 = and i32 %44, %19
  %46 = zext i32 %45 to i64
  %47 = mul i64 %46, 51539607552
  %48 = add i64 %47, 85899345920
  %49 = ashr exact i64 %48, 32
  %50 = add i64 %49, %25
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = icmp eq i32 %52, %31
  br i1 %53, label %54, label %38

54:                                               ; preds = %41, %38
  %55 = zext i32 %45 to i64
  br label %56

56:                                               ; preds = %54, %33, %6
  %57 = phi i64 [ %21, %6 ], [ %21, %33 ], [ %55, %54 ]
  %58 = bitcast %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  %59 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  %61 = load i64, i64* %2, align 8
  %62 = load i64, i64* %3, align 8
  call void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1235"* nonnull %60, i64 %57, i64 %61, i64 %62, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #11
  %63 = load i64, i64* %13, align 8
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = add i32 %66, 2
  %68 = and i32 %67, -2
  store atomic volatile i32 %68, i32* %65 monotonic, align 4
  %69 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %57, i64* %71, align 8
  br label %72

72:                                               ; preds = %56, %70
  ret i64* %13
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %2, align 8
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 2
  %15 = tail call i64* @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = ashr i32 %19, 1
  %21 = add nsw i32 %20, -1
  %22 = and i32 %21, %14
  %23 = zext i32 %22 to i64
  %24 = mul i64 %23, 51539607552
  %25 = add i64 %24, 85899345920
  %26 = ashr exact i64 %25, 32
  %27 = add i64 %16, 7
  %28 = add i64 %26, %27
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = getelementptr inbounds i64, i64* %9, i64 4
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %30, %33
  br i1 %34, label %58, label %35

35:                                               ; preds = %6
  %36 = getelementptr inbounds i64, i64* %9, i64 5
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %30, %38
  br i1 %39, label %58, label %43

40:                                               ; preds = %43
  %41 = add i32 %44, 1
  %42 = icmp eq i32 %54, %38
  br i1 %42, label %56, label %43

43:                                               ; preds = %35, %40
  %44 = phi i32 [ %41, %40 ], [ 1, %35 ]
  %45 = phi i32 [ %47, %40 ], [ %22, %35 ]
  %46 = add i32 %44, %45
  %47 = and i32 %46, %21
  %48 = zext i32 %47 to i64
  %49 = mul i64 %48, 51539607552
  %50 = add i64 %49, 85899345920
  %51 = ashr exact i64 %50, 32
  %52 = add i64 %51, %27
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = icmp eq i32 %54, %33
  br i1 %55, label %56, label %40

56:                                               ; preds = %43, %40
  %57 = zext i32 %47 to i64
  br label %58

58:                                               ; preds = %56, %35, %6
  %59 = phi i64 [ %23, %6 ], [ %23, %35 ], [ %57, %56 ]
  %60 = bitcast %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  %63 = load i64, i64* %2, align 8
  %64 = load i64, i64* %3, align 8
  call void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1235"* nonnull %62, i64 %59, i64 %63, i64 %64, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  %65 = load i64, i64* %15, align 8
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = add i32 %68, 2
  %70 = and i32 %69, -2
  store atomic volatile i32 %70, i32* %67 monotonic, align 4
  %71 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %59, i64* %73, align 8
  br label %74

74:                                               ; preds = %58, %72
  ret i64* %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE7SetHashEi(%"class.v8::internal::BaseNameDictionary"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary", %"class.v8::internal::BaseNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE4HashEv(%"class.v8::internal::BaseNameDictionary"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary", %"class.v8::internal::BaseNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 23
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE20NextEnumerationIndexEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = add i64 %3, 19
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  %8 = icmp ult i32 %7, 8388608
  br i1 %8, label %49, label %9

9:                                                ; preds = %2
  %10 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = ashr i32 %14, 1
  %16 = icmp sgt i32 %14, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %9
  %18 = sext i32 %15 to i64
  br label %21

19:                                               ; preds = %21, %9
  %20 = add nsw i32 %15, 1
  br label %49

21:                                               ; preds = %47, %17
  %22 = phi i64 [ %11, %17 ], [ %48, %47 ]
  %23 = phi i64 [ 0, %17 ], [ %33, %47 ]
  %24 = trunc i64 %23 to i32
  %25 = shl i32 %24, 2
  %26 = sext i32 %25 to i64
  %27 = add nsw i64 %26, 7
  %28 = add i64 %27, %22
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = ashr i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = add nuw nsw i64 %23, 1
  %34 = load i64, i64* %1, align 8
  %35 = mul i64 %32, 51539607552
  %36 = add i64 %35, 120259084288
  %37 = ashr exact i64 %36, 32
  %38 = add i64 %34, 7
  %39 = add i64 %38, %37
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 510
  %43 = trunc i64 %33 to i32
  %44 = shl i32 %43, 9
  %45 = or i32 %42, %44
  store atomic volatile i32 %45, i32* %40 monotonic, align 4
  %46 = icmp slt i64 %33, %18
  br i1 %46, label %47, label %19

47:                                               ; preds = %21
  %48 = load i64, i64* %10, align 8
  br label %21

49:                                               ; preds = %19, %2
  %50 = phi i32 [ %7, %2 ], [ %20, %19 ]
  ret i32 %50
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE22next_enumeration_indexEv(%"class.v8::internal::BaseNameDictionary"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary", %"class.v8::internal::BaseNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 19
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.v8::internal::EnumIndexComparator", align 8
  %4 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %4, i32 %9, i8 zeroext 0) #11
  %11 = load i64, i64* %1, align 8
  %12 = add i64 %11, 15
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = ashr i32 %14, 1
  %16 = sext i32 %15 to i64
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = add i64 %11, 7
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %64

22:                                               ; preds = %90, %2
  %23 = phi i32 [ 0, %2 ], [ %91, %90 ]
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 7
  %26 = sext i32 %23 to i64
  %27 = shl nsw i64 %26, 2
  %28 = add i64 %25, %27
  %29 = bitcast %"struct.v8::internal::EnumIndexComparator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %30, align 8
  call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %25, i64 %28, %"struct.v8::internal::EnumIndexComparator"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %31 = icmp eq i32 %23, 0
  %32 = load i64, i64* %10, align 8
  br i1 %31, label %33, label %53

33:                                               ; preds = %22
  %34 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %35 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 1, i64 0
  br label %50

42:                                               ; preds = %36, %33
  %43 = and i64 %32, -262144
  %44 = or i64 %43, 16
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 16
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %50

50:                                               ; preds = %42, %40
  %51 = phi i64* [ %49, %42 ], [ %41, %40 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 29
  br label %62

53:                                               ; preds = %22
  %54 = add i64 %32, 3
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = ashr i32 %56, 1
  %58 = icmp sgt i32 %57, %23
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %61 = sub nsw i32 %57, %23
  call void @_ZN2v88internal4Heap19RightTrimFixedArrayENS0_14FixedArrayBaseEi(%"class.v8::internal::Heap"* %60, i64 %32, i32 %61) #11
  br label %62

62:                                               ; preds = %50, %53, %59
  %63 = phi i64* [ %52, %50 ], [ %10, %53 ], [ %10, %59 ]
  ret i64* %63

64:                                               ; preds = %18, %90
  %65 = phi i32 [ 0, %18 ], [ %91, %90 ]
  %66 = phi i64 [ 0, %18 ], [ %92, %90 ]
  %67 = mul i64 %66, 51539607552
  %68 = add i64 %67, 85899345920
  %69 = ashr exact i64 %68, 32
  %70 = add i64 %19, %69
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = load i64, i64* %20, align 8
  %74 = trunc i64 %73 to i32
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %90, label %76

76:                                               ; preds = %64
  %77 = load i64, i64* %21, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %72, %78
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = load i64, i64* %10, align 8
  %82 = add nsw i32 %65, 1
  %83 = shl i32 %65, 2
  %84 = sext i32 %83 to i64
  %85 = add nsw i64 %84, 7
  %86 = add i64 %85, %81
  %87 = inttoptr i64 %86 to i32*
  %88 = trunc i64 %66 to i32
  %89 = shl i32 %88, 1
  store atomic volatile i32 %89, i32* %87 monotonic, align 4
  br label %90

90:                                               ; preds = %64, %76, %80
  %91 = phi i32 [ %82, %80 ], [ %65, %76 ], [ %65, %64 ]
  %92 = add i64 %66, 1
  %93 = icmp eq i64 %92, %16
  br i1 %93, label %22, label %64
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE26set_next_enumeration_indexEi(%"class.v8::internal::BaseNameDictionary"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary", %"class.v8::internal::BaseNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 19
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10FixedArray13ShrinkOrEmptyEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  %5 = load i64, i64* %1, align 8
  br i1 %4, label %6, label %26

6:                                                ; preds = %3
  %7 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %8 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 1, i64 0
  br label %23

15:                                               ; preds = %9, %6
  %16 = and i64 %5, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %23

23:                                               ; preds = %13, %15
  %24 = phi i64* [ %22, %15 ], [ %14, %13 ]
  %25 = getelementptr inbounds i64, i64* %24, i64 29
  br label %35

26:                                               ; preds = %3
  %27 = add i64 %5, 3
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = ashr i32 %29, 1
  %31 = icmp sgt i32 %30, %2
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %34 = sub nsw i32 %30, %2
  tail call void @_ZN2v88internal4Heap19RightTrimFixedArrayENS0_14FixedArrayBaseEi(%"class.v8::internal::Heap"* %33, i64 %5, i32 %34) #11
  br label %35

35:                                               ; preds = %32, %26, %23
  %36 = phi i64* [ %25, %23 ], [ %1, %26 ], [ %1, %32 ]
  ret i64* %36
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = tail call i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, i32 %4, %"class.v8::internal::InternalIndex"* %5)
  ret i64* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Ev(%"class.v8::internal::BaseNameDictionary"*) unnamed_addr #0 comdat($_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary", %"class.v8::internal::BaseNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC2Em(%"class.v8::internal::BaseNameDictionary"*, i64) unnamed_addr #5 comdat($_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary", %"class.v8::internal::BaseNameDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 44739240
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = mul nsw i32 %17, 3
  %19 = add nsw i32 %18, 5
  %20 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 50
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %20, i64* %21, i32 %19, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = shl i32 %17, 1
  %31 = add i64 %29, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %30, i32* %32 monotonic, align 4
  %33 = load i64, i64* %22, align 8
  %34 = add i64 %33, 23
  %35 = inttoptr i64 %34 to i32*
  store atomic volatile i32 0, i32* %35 monotonic, align 4
  %36 = load i64, i64* %22, align 8
  %37 = add i64 %36, 19
  %38 = inttoptr i64 %37 to i32*
  store atomic volatile i32 2, i32* %38 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 44739240
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = mul nsw i32 %16, 3
  %18 = add nsw i32 %17, 5
  %19 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %20 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 50
  %23 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %19, i64* %22, i32 %18, i8 zeroext %2) #11
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 0, i32* %26 monotonic, align 4
  %27 = load i64, i64* %23, align 8
  %28 = add i64 %27, 11
  %29 = inttoptr i64 %28 to i32*
  store atomic volatile i32 0, i32* %29 monotonic, align 4
  %30 = load i64, i64* %23, align 8
  %31 = shl i32 %16, 1
  %32 = add i64 %30, 15
  %33 = inttoptr i64 %32 to i32*
  store atomic volatile i32 %31, i32* %33 monotonic, align 4
  %34 = load i64, i64* %23, align 8
  %35 = add i64 %34, 23
  %36 = inttoptr i64 %35 to i32*
  store atomic volatile i32 0, i32* %36 monotonic, align 4
  %37 = load i64, i64* %23, align 8
  %38 = add i64 %37, 19
  %39 = inttoptr i64 %38 to i32*
  store atomic volatile i32 2, i32* %39 monotonic, align 4
  ret i64* %23
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = tail call i64* @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i64* %2, i64* %3, i32 %4, %"class.v8::internal::InternalIndex"* %5)
  ret i64* %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6GetMapENS0_13ReadOnlyRootsE(i64*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds i64, i64* %0, i64 14
  ret i64* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE13IteratePrefixEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1238"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = add i64 %4, 3
  %10 = add i64 %4, 27
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %12, i64 2
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %13, align 8
  tail call void %14(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %9, i64 %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE15IterateElementsEPNS0_13ObjectVisitorE(%"class.v8::internal::HashTable.1238"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 1
  %9 = shl i32 %8, 2
  %10 = add nsw i32 %9, 8
  %11 = add i64 %4, -1
  %12 = add i64 %4, 27
  %13 = sext i32 %10 to i64
  %14 = add i64 %11, %13
  %15 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %1, i64 %4, i64 %12, i64 %14) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE9FindEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsENS0_6HandleINS0_4NameEEEi(%"class.v8::internal::HashTable.1238"*, i64, i64*, i64*, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 15
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = getelementptr inbounds i64, i64* %2, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i64, i64* %2, i64 5
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i32 %11, -1
  %17 = and i32 %16, %4
  %18 = shl i32 %17, 2
  %19 = add i32 %18, 20
  %20 = sext i32 %19 to i64
  %21 = add i64 %7, 7
  %22 = add i64 %21, %20
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = trunc i64 %13 to i32
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %56, label %27

27:                                               ; preds = %5
  %28 = trunc i64 %15 to i32
  br label %29

29:                                               ; preds = %27, %43
  %30 = phi i32 [ %24, %27 ], [ %52, %43 ]
  %31 = phi i32 [ %17, %27 ], [ %46, %43 ]
  %32 = phi i32 [ 1, %27 ], [ %44, %43 ]
  %33 = icmp eq i32 %30, %28
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = zext i32 %30 to i64
  %36 = or i64 %35, %1
  %37 = load i64, i64* %3, align 8
  %38 = add i64 %36, 3
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = trunc i64 %37 to i32
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %54, label %43

43:                                               ; preds = %29, %34
  %44 = add i32 %32, 1
  %45 = add i32 %31, %32
  %46 = and i32 %45, %16
  %47 = shl i32 %46, 2
  %48 = add i32 %47, 20
  %49 = sext i32 %48 to i64
  %50 = add i64 %21, %49
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = icmp eq i32 %52, %25
  br i1 %53, label %56, label %29

54:                                               ; preds = %34
  %55 = zext i32 %31 to i64
  br label %56

56:                                               ; preds = %43, %54, %5
  %57 = phi i64 [ -1, %5 ], [ %55, %54 ], [ -1, %43 ]
  ret i64 %57
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5KeyAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::HashTable.1238"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = shl i32 %4, 2
  %8 = add i32 %7, 20
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %6
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1238"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 262144
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = and i64 %8, 24
  %13 = icmp eq i64 %12, 0
  %14 = select i1 %13, i32 4, i32 0
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ 4, %2 ], [ %14, %11 ]
  %17 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %18 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %17, i64 0, i32 1, i64 0
  br label %32

25:                                               ; preds = %19, %15
  %26 = or i64 %5, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %32

32:                                               ; preds = %23, %25
  %33 = phi i64* [ %31, %25 ], [ %24, %23 ]
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = ashr i32 %36, 1
  %38 = zext i32 %37 to i64
  %39 = icmp eq i32 %37, 0
  %40 = and i64 %1, 4294967295
  %41 = icmp eq i64 %40, 0
  %42 = getelementptr inbounds i64, i64* %33, i64 4
  %43 = getelementptr inbounds i64, i64* %33, i64 5
  br label %44

44:                                               ; preds = %32, %161
  %45 = phi i32 [ 1, %32 ], [ %163, %161 ]
  br i1 %39, label %259, label %46

46:                                               ; preds = %44
  tail call void @llvm.assume(i1 %41) #11
  %47 = icmp ugt i32 %45, 1
  br i1 %47, label %48, label %166

48:                                               ; preds = %46, %139
  %49 = phi i8 [ %141, %139 ], [ 1, %46 ]
  %50 = phi i64 [ %140, %139 ], [ 0, %46 ]
  %51 = trunc i64 %50 to i32
  %52 = load i64, i64* %3, align 8
  %53 = shl i32 %51, 2
  %54 = add i32 %53, 20
  %55 = sext i32 %54 to i64
  %56 = add i64 %52, 7
  %57 = add i64 %56, %55
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %60, %1
  %62 = load i64, i64* %42, align 8
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i32 %59, %63
  br i1 %64, label %137, label %65

65:                                               ; preds = %48
  %66 = load i64, i64* %43, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %59, %67
  br i1 %68, label %137, label %69

69:                                               ; preds = %65
  %70 = add i64 %61, 3
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %73, %1
  %75 = add i64 %74, 3
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = lshr i32 %77, 2
  %79 = add i64 %52, 15
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = ashr i32 %81, 1
  %83 = add nsw i32 %82, -1
  %84 = and i32 %83, %78
  br label %85

85:                                               ; preds = %69, %90
  %86 = phi i32 [ %93, %90 ], [ %84, %69 ]
  %87 = phi i32 [ %92, %90 ], [ 1, %69 ]
  %88 = zext i32 %86 to i64
  %89 = icmp eq i64 %50, %88
  br i1 %89, label %146, label %90

90:                                               ; preds = %85
  %91 = add i32 %87, %86
  %92 = add nuw nsw i32 %87, 1
  %93 = and i32 %91, %83
  %94 = icmp eq i32 %92, %45
  br i1 %94, label %149, label %85

95:                                               ; preds = %146
  %96 = trunc i64 %147 to i32
  %97 = shl i32 %96, 2
  %98 = add i32 %97, 20
  %99 = sext i32 %98 to i64
  %100 = add i64 %56, %99
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = icmp eq i32 %102, %63
  %104 = icmp eq i32 %102, %67
  %105 = or i1 %103, %104
  br i1 %105, label %134, label %106

106:                                              ; preds = %95
  %107 = zext i32 %102 to i64
  %108 = or i64 %107, %1
  %109 = add i64 %108, 3
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %112, %1
  %114 = add i64 %113, 3
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = lshr i32 %116, 2
  %118 = load atomic i32, i32* %80 monotonic, align 4
  %119 = ashr i32 %118, 1
  %120 = add nsw i32 %119, -1
  %121 = and i32 %120, %117
  br label %122

122:                                              ; preds = %106, %127
  %123 = phi i32 [ %130, %127 ], [ %121, %106 ]
  %124 = phi i32 [ %129, %127 ], [ 1, %106 ]
  %125 = zext i32 %123 to i64
  %126 = icmp eq i64 %147, %125
  br i1 %126, label %132, label %127

127:                                              ; preds = %122
  %128 = add i32 %124, %123
  %129 = add nuw nsw i32 %124, 1
  %130 = and i32 %128, %120
  %131 = icmp eq i32 %129, %45
  br i1 %131, label %143, label %122

132:                                              ; preds = %122, %143
  %133 = add i64 %50, 1
  br label %139

134:                                              ; preds = %143, %95
  tail call void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1238"* %0, i64 %50, i64 %147, i32 %16)
  br label %139

135:                                              ; preds = %146
  %136 = add i64 %50, 1
  br label %139

137:                                              ; preds = %65, %48
  %138 = add nuw i64 %50, 1
  br label %139

139:                                              ; preds = %137, %135, %134, %132
  %140 = phi i64 [ %138, %137 ], [ %136, %135 ], [ %50, %134 ], [ %133, %132 ]
  %141 = phi i8 [ %49, %137 ], [ %49, %135 ], [ %49, %134 ], [ 0, %132 ]
  %142 = icmp ult i64 %140, %38
  br i1 %142, label %48, label %161

143:                                              ; preds = %127
  %144 = zext i32 %130 to i64
  %145 = icmp eq i64 %147, %144
  br i1 %145, label %132, label %134

146:                                              ; preds = %85, %149
  %147 = phi i64 [ %150, %149 ], [ %50, %85 ]
  %148 = icmp eq i64 %50, %147
  br i1 %148, label %135, label %95

149:                                              ; preds = %90
  %150 = zext i32 %93 to i64
  br label %146

151:                                              ; preds = %161
  br i1 %39, label %259, label %152

152:                                              ; preds = %151
  %153 = load i64, i64* %42, align 8
  %154 = load i64, i64* %43, align 8
  %155 = trunc i64 %154 to i32
  %156 = trunc i64 %153 to i32
  %157 = and i64 %38, 1
  %158 = icmp eq i32 %37, 1
  br i1 %158, label %248, label %159

159:                                              ; preds = %152
  %160 = sub nsw i64 %38, %157
  br label %263

161:                                              ; preds = %239, %139
  %162 = phi i8 [ %141, %139 ], [ %241, %239 ]
  %163 = add nuw nsw i32 %45, 1
  %164 = and i8 %162, 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %44, label %151

166:                                              ; preds = %46, %239
  %167 = phi i8 [ %241, %239 ], [ 1, %46 ]
  %168 = phi i64 [ %240, %239 ], [ 0, %46 ]
  %169 = trunc i64 %168 to i32
  %170 = load i64, i64* %3, align 8
  %171 = shl i32 %169, 2
  %172 = add i32 %171, 20
  %173 = sext i32 %172 to i64
  %174 = add i64 %170, 7
  %175 = add i64 %174, %173
  %176 = inttoptr i64 %175 to i32*
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = zext i32 %177 to i64
  %179 = or i64 %178, %1
  %180 = load i64, i64* %42, align 8
  %181 = trunc i64 %180 to i32
  %182 = icmp eq i32 %177, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %166
  %184 = load i64, i64* %43, align 8
  %185 = trunc i64 %184 to i32
  %186 = icmp eq i32 %177, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %183, %166
  %188 = add nuw i64 %168, 1
  br label %239

189:                                              ; preds = %183
  %190 = add i64 %179, 3
  %191 = inttoptr i64 %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %193, %1
  %195 = add i64 %194, 3
  %196 = inttoptr i64 %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = lshr i32 %197, 2
  %199 = add i64 %170, 15
  %200 = inttoptr i64 %199 to i32*
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = lshr i32 %201, 1
  %203 = add nuw i32 %202, 1073741823
  %204 = and i32 %203, %198
  %205 = zext i32 %204 to i64
  %206 = icmp eq i64 %168, %205
  br i1 %206, label %207, label %209

207:                                              ; preds = %189
  %208 = add nuw i64 %168, 1
  br label %239

209:                                              ; preds = %189
  %210 = shl nuw i32 %204, 2
  %211 = add i32 %210, 20
  %212 = sext i32 %211 to i64
  %213 = add i64 %174, %212
  %214 = inttoptr i64 %213 to i32*
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = icmp eq i32 %215, %181
  %217 = icmp eq i32 %215, %185
  %218 = or i1 %216, %217
  br i1 %218, label %236, label %219

219:                                              ; preds = %209
  %220 = zext i32 %215 to i64
  %221 = or i64 %220, %1
  %222 = add i64 %221, 3
  %223 = inttoptr i64 %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = zext i32 %224 to i64
  %226 = or i64 %225, %1
  %227 = add i64 %226, 3
  %228 = inttoptr i64 %227 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = lshr i32 %229, 2
  %231 = load atomic i32, i32* %200 monotonic, align 4
  %232 = lshr i32 %231, 1
  %233 = add nuw i32 %232, 1073741823
  %234 = and i32 %233, %230
  %235 = icmp eq i32 %234, %204
  br i1 %235, label %237, label %236

236:                                              ; preds = %219, %209
  tail call void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1238"* %0, i64 %168, i64 %205, i32 %16)
  br label %239

237:                                              ; preds = %219
  %238 = add nuw i64 %168, 1
  br label %239

239:                                              ; preds = %207, %237, %236, %187
  %240 = phi i64 [ %188, %187 ], [ %208, %207 ], [ %168, %236 ], [ %238, %237 ]
  %241 = phi i8 [ %167, %187 ], [ %167, %207 ], [ %167, %236 ], [ 0, %237 ]
  %242 = icmp ult i64 %240, %38
  br i1 %242, label %166, label %161

243:                                              ; preds = %290
  %244 = trunc i64 %291 to i32
  %245 = shl i32 %244, 2
  %246 = add i32 %245, 20
  %247 = sext i32 %246 to i64
  br label %248

248:                                              ; preds = %243, %152
  %249 = phi i64 [ 20, %152 ], [ %247, %243 ]
  %250 = icmp eq i64 %157, 0
  br i1 %250, label %259, label %251

251:                                              ; preds = %248
  %252 = load i64, i64* %3, align 8
  %253 = add i64 %252, 7
  %254 = add i64 %253, %249
  %255 = inttoptr i64 %254 to i32*
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = icmp eq i32 %256, %155
  br i1 %257, label %258, label %259

258:                                              ; preds = %251
  store atomic volatile i32 %156, i32* %255 monotonic, align 4
  br label %259

259:                                              ; preds = %44, %248, %251, %258, %151
  %260 = load i64, i64* %3, align 8
  %261 = add i64 %260, 11
  %262 = inttoptr i64 %261 to i32*
  store atomic volatile i32 0, i32* %262 monotonic, align 4
  ret void

263:                                              ; preds = %290, %159
  %264 = phi i64 [ 0, %159 ], [ %291, %290 ]
  %265 = phi i64 [ %160, %159 ], [ %292, %290 ]
  %266 = trunc i64 %264 to i32
  %267 = load i64, i64* %3, align 8
  %268 = shl i32 %266, 2
  %269 = add i32 %268, 20
  %270 = sext i32 %269 to i64
  %271 = add i64 %267, 7
  %272 = add i64 %271, %270
  %273 = inttoptr i64 %272 to i32*
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = icmp eq i32 %274, %155
  br i1 %275, label %276, label %277

276:                                              ; preds = %263
  store atomic volatile i32 %156, i32* %273 monotonic, align 4
  br label %277

277:                                              ; preds = %276, %263
  %278 = trunc i64 %264 to i32
  %279 = load i64, i64* %3, align 8
  %280 = shl i32 %278, 2
  %281 = or i32 %280, 4
  %282 = add i32 %281, 20
  %283 = sext i32 %282 to i64
  %284 = add i64 %279, 7
  %285 = add i64 %284, %283
  %286 = inttoptr i64 %285 to i32*
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = icmp eq i32 %287, %155
  br i1 %288, label %289, label %290

289:                                              ; preds = %277
  store atomic volatile i32 %156, i32* %286 monotonic, align 4
  br label %290

290:                                              ; preds = %289, %277
  %291 = add nuw nsw i64 %264, 2
  %292 = add i64 %265, -2
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %243, label %263
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5IsKeyENS0_13ReadOnlyRootsENS0_6ObjectE(i64*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds i64, i64* %0, i64 4
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %1 to i32
  %6 = trunc i64 %4 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %0, i64 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ne i32 %5, %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ false, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE13EntryForProbeENS0_13ReadOnlyRootsENS0_6ObjectEiNS0_13InternalIndexE(%"class.v8::internal::HashTable.1238"*, i64*, i64, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = and i64 %2, -4294967296
  %7 = add i64 %2, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 2
  %16 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 15
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = ashr i32 %20, 1
  %22 = add nsw i32 %21, -1
  %23 = and i32 %15, %22
  %24 = zext i32 %23 to i64
  %25 = icmp sgt i32 %3, 1
  br i1 %25, label %26, label %39

26:                                               ; preds = %5, %31
  %27 = phi i64 [ %35, %31 ], [ %24, %5 ]
  %28 = phi i32 [ %34, %31 ], [ %23, %5 ]
  %29 = phi i32 [ %33, %31 ], [ 1, %5 ]
  %30 = icmp eq i64 %27, %4
  br i1 %30, label %39, label %31

31:                                               ; preds = %26
  %32 = add i32 %28, %29
  %33 = add nuw nsw i32 %29, 1
  %34 = and i32 %32, %22
  %35 = zext i32 %34 to i64
  %36 = icmp eq i32 %33, %3
  br i1 %36, label %37, label %26

37:                                               ; preds = %31
  %38 = zext i32 %34 to i64
  br label %39

39:                                               ; preds = %26, %37, %5
  %40 = phi i64 [ %24, %5 ], [ %38, %37 ], [ %4, %26 ]
  ret i64 %40
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE4SwapENS0_13InternalIndexES5_NS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1238"*, i64, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [1 x %"class.v8::internal::Object"], align 8
  %6 = trunc i64 %1 to i32
  %7 = bitcast [1 x %"class.v8::internal::Object"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds [1 x %"class.v8::internal::Object"], [1 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = trunc i64 %2 to i32
  %10 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds [1 x %"class.v8::internal::Object"], [1 x %"class.v8::internal::Object"]* %5, i64 0, i64 0, i32 0, i32 0
  %12 = load i64, i64* %10, align 8
  %13 = and i64 %12, -4294967296
  %14 = shl i32 %6, 2
  %15 = add i32 %14, 20
  %16 = sext i32 %15 to i64
  %17 = add nsw i64 %16, 7
  %18 = add i64 %17, %12
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %13, %21
  store i64 %22, i64* %11, align 8
  %23 = shl i32 %9, 2
  %24 = add i32 %23, 20
  %25 = sext i32 %24 to i64
  %26 = add nsw i64 %25, 7
  %27 = add i64 %12, %26
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %13, %30
  store atomic volatile i32 %29, i32* %19 monotonic, align 4
  switch i32 %3, label %59 [
    i32 0, label %32
    i32 4, label %38
  ]

32:                                               ; preds = %4
  %33 = load i64, i64* %11, align 8
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, %26
  %36 = inttoptr i64 %35 to i32*
  %37 = trunc i64 %33 to i32
  store atomic volatile i32 %37, i32* %36 monotonic, align 4
  br label %123

38:                                               ; preds = %4
  %39 = load i64, i64* %10, align 8
  %40 = add i64 %39, %17
  %41 = and i64 %30, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = load i64, i64* %11, align 8
  %45 = add i64 %39, %26
  %46 = inttoptr i64 %45 to i32*
  %47 = trunc i64 %44 to i32
  store atomic volatile i32 %47, i32* %46 monotonic, align 4
  br label %85

48:                                               ; preds = %38
  %49 = and i64 %39, -262144
  %50 = or i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 262144
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %48
  %56 = or i64 %49, 16
  %57 = inttoptr i64 %56 to %"class.v8::internal::Heap"**
  %58 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %57, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %58, i64 %39, i64 %40, i64 %31) #11
  br label %62

59:                                               ; preds = %4
  %60 = and i64 %30, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %59, %55, %48
  %63 = load i64, i64* %10, align 8
  %64 = add i64 %63, %17
  %65 = and i64 %31, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %62
  %72 = and i64 %63, -262144
  %73 = or i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 24
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %71
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %63, i64 %64, i64 %31) #11
  br label %79

79:                                               ; preds = %59, %62, %71, %78
  %80 = load i64, i64* %11, align 8
  %81 = load i64, i64* %10, align 8
  %82 = add i64 %81, %26
  %83 = inttoptr i64 %82 to i32*
  %84 = trunc i64 %80 to i32
  store atomic volatile i32 %84, i32* %83 monotonic, align 4
  switch i32 %3, label %102 [
    i32 0, label %123
    i32 4, label %85
  ]

85:                                               ; preds = %43, %79
  %86 = phi i64 [ %44, %43 ], [ %80, %79 ]
  %87 = load i64, i64* %10, align 8
  %88 = add i64 %87, %26
  %89 = and i64 %86, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %123, label %91

91:                                               ; preds = %85
  %92 = and i64 %87, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %105, label %98

98:                                               ; preds = %91
  %99 = or i64 %92, 16
  %100 = inttoptr i64 %99 to %"class.v8::internal::Heap"**
  %101 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %100, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %101, i64 %87, i64 %88, i64 %86) #11
  br label %105

102:                                              ; preds = %79
  %103 = and i64 %80, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %123, label %105

105:                                              ; preds = %102, %98, %91
  %106 = phi i64 [ %80, %102 ], [ %86, %98 ], [ %86, %91 ]
  %107 = load i64, i64* %10, align 8
  %108 = add i64 %107, %26
  %109 = and i64 %106, -262144
  %110 = or i64 %109, 8
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 24
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %105
  %116 = and i64 %107, -262144
  %117 = or i64 %116, 8
  %118 = inttoptr i64 %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = and i64 %119, 24
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %107, i64 %108, i64 %106) #11
  br label %123

123:                                              ; preds = %32, %79, %85, %102, %105, %115, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7set_keyEiNS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::HashTable.1238"*, i32, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %5 = shl i32 %1, 2
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %7, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = trunc i64 %2 to i32
  store atomic volatile i32 %12, i32* %11 monotonic, align 4
  switch i32 %3, label %29 [
    i32 0, label %49
    i32 4, label %13
  ]

13:                                               ; preds = %4
  %14 = load i64, i64* %6, align 8
  %15 = add i64 %14, %9
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  br label %32

29:                                               ; preds = %4
  %30 = and i64 %2, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %49, label %32

32:                                               ; preds = %18, %25, %29
  %33 = load i64, i64* %6, align 8
  %34 = add i64 %33, %9
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %32
  %42 = and i64 %33, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %34, i64 %2) #11
  br label %49

49:                                               ; preds = %4, %13, %29, %32, %41, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE12EntryToIndexENS0_13InternalIndexE(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = trunc i64 %0 to i32
  %3 = add nsw i32 %2, 5
  ret i32 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5ToKeyENS0_13ReadOnlyRootsENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1238"*, i64*, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = trunc i64 %2 to i32
  %9 = shl i32 %8, 2
  %10 = add i32 %9, 20
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 7
  %13 = add i64 %12, %6
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = getelementptr inbounds i64, i64* %1, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %15, %20
  br i1 %21, label %34, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds i64, i64* %1, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %15, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = add i64 %17, 3
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %7, %31
  %33 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %32, i64* %33, align 8
  br label %34

34:                                               ; preds = %22, %4, %27
  %35 = phi i1 [ true, %27 ], [ false, %22 ], [ false, %4 ]
  ret i1 %35
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5KeyAtENS0_13InternalIndexE(%"class.v8::internal::HashTable.1238"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 2
  %8 = add i32 %7, 20
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %4
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5ToKeyENS0_16PtrComprCageBaseENS0_13InternalIndexEPNS0_6ObjectE(%"class.v8::internal::HashTable.1238"*, i64, i64, %"class.v8::internal::Object"*) local_unnamed_addr #5 comdat align 2 {
  %5 = trunc i64 %2 to i32
  %6 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i32 %5, 2
  %9 = add i32 %8, 20
  %10 = sext i32 %9 to i64
  %11 = add nsw i64 %10, 7
  %12 = add i64 %11, %7
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = zext i32 %14 to i64
  %18 = or i64 %17, %1
  %19 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %20 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %19, i64 0, i32 1, i64 0
  br label %35

27:                                               ; preds = %21, %4
  %28 = and i64 %7, -262144
  %29 = or i64 %28, 16
  %30 = inttoptr i64 %29 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %35

35:                                               ; preds = %25, %27
  %36 = phi i64* [ %34, %27 ], [ %26, %25 ]
  %37 = getelementptr inbounds i64, i64* %36, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %14, %39
  br i1 %40, label %53, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds i64, i64* %36, i64 5
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %14, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = add i64 %18, 3
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %50, %1
  %52 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %3, i64 0, i32 0, i32 0
  store i64 %51, i64* %52, align 8
  br label %53

53:                                               ; preds = %41, %35, %46
  %54 = phi i1 [ true, %46 ], [ false, %41 ], [ false, %35 ]
  ret i1 %54
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE12IndexToEntryEi(i32) local_unnamed_addr #5 comdat align 2 {
  %2 = add nsw i32 %0, -5
  %3 = sext i32 %2 to i64
  ret i64 %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11SlotToIndexEmm(i64, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = sub i64 17179869176, %0
  %4 = add i64 %3, %1
  %5 = lshr i64 %4, 2
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE26HasSufficientCapacityToAddEi(%"class.v8::internal::HashTable.1238"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add i64 %4, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %11, 1
  %13 = add i64 %4, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = add nsw i32 %12, %1
  %17 = icmp sgt i32 %8, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %2
  %19 = ashr i32 %15, 1
  %20 = sub nsw i32 %8, %16
  %21 = sdiv i32 %20, 2
  %22 = icmp slt i32 %21, %19
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = sdiv i32 %16, 2
  %25 = add nsw i32 %24, %16
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %23, %18, %2
  br label %28

28:                                               ; preds = %23, %27
  %29 = phi i1 [ false, %27 ], [ true, %23 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE26HasSufficientCapacityToAddEiiii(i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = add nsw i32 %3, %1
  %6 = icmp slt i32 %5, %0
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = sub nsw i32 %0, %5
  %9 = sdiv i32 %8, 2
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = sdiv i32 %5, 2
  %13 = add nsw i32 %12, %5
  %14 = icmp sgt i32 %13, %0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7, %11, %4
  br label %16

16:                                               ; preds = %11, %15
  %17 = phi i1 [ false, %15 ], [ true, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE18FindInsertionEntryENS0_16PtrComprCageBaseENS0_13ReadOnlyRootsEj(%"class.v8::internal::HashTable.1238"*, i64, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add nsw i32 %10, -1
  %12 = and i32 %11, %3
  %13 = zext i32 %12 to i64
  %14 = shl i32 %12, 2
  %15 = add i32 %14, 20
  %16 = sext i32 %15 to i64
  %17 = add i64 %6, 7
  %18 = add i64 %17, %16
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = getelementptr inbounds i64, i64* %2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds i64, i64* %2, i64 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %20, %28
  br i1 %29, label %37, label %39

30:                                               ; preds = %39
  %31 = add i32 %40, 1
  %32 = icmp eq i32 %49, %28
  br i1 %32, label %35, label %39

33:                                               ; preds = %39
  %34 = zext i32 %43 to i64
  br label %37

35:                                               ; preds = %30
  %36 = zext i32 %43 to i64
  br label %37

37:                                               ; preds = %25, %35, %33, %4
  %38 = phi i64 [ %13, %4 ], [ %34, %33 ], [ %36, %35 ], [ %13, %25 ]
  ret i64 %38

39:                                               ; preds = %25, %30
  %40 = phi i32 [ %31, %30 ], [ 1, %25 ]
  %41 = phi i32 [ %43, %30 ], [ %12, %25 ]
  %42 = add i32 %41, %40
  %43 = and i32 %42, %11
  %44 = shl i32 %43, 2
  %45 = add i32 %44, 20
  %46 = sext i32 %45 to i64
  %47 = add i64 %17, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = icmp eq i32 %49, %23
  br i1 %50, label %33, label %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE18FindInsertionEntryEPNS0_7IsolateEj(%"class.v8::internal::HashTable.1238"*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, -1
  %11 = and i32 %10, %2
  %12 = zext i32 %11 to i64
  %13 = shl i32 %11, 2
  %14 = add i32 %13, 20
  %15 = sext i32 %14 to i64
  %16 = add i64 %5, 7
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %48, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %19, %27
  br i1 %28, label %48, label %32

29:                                               ; preds = %32
  %30 = add i32 %33, 1
  %31 = icmp eq i32 %42, %27
  br i1 %31, label %46, label %32

32:                                               ; preds = %24, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %24 ]
  %34 = phi i32 [ %36, %29 ], [ %11, %24 ]
  %35 = add i32 %33, %34
  %36 = and i32 %35, %10
  %37 = shl i32 %36, 2
  %38 = add i32 %37, 20
  %39 = sext i32 %38 to i64
  %40 = add i64 %16, %39
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %22
  br i1 %43, label %44, label %29

44:                                               ; preds = %32
  %45 = zext i32 %36 to i64
  br label %48

46:                                               ; preds = %29
  %47 = zext i32 %36 to i64
  br label %48

48:                                               ; preds = %46, %24, %44, %3
  %49 = phi i64 [ %12, %3 ], [ %45, %44 ], [ %12, %24 ], [ %47, %46 ]
  ret i64 %49
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE25ComputeCapacityWithShrinkEii(i32, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sdiv i32 %0, 4
  %4 = icmp slt i32 %3, %1
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = ashr i32 %1, 1
  %7 = add nsw i32 %6, %1
  %8 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %7) #11
  %9 = icmp sgt i32 %8, 4
  %10 = select i1 %9, i32 %8, i32 4
  %11 = icmp slt i32 %10, 16
  %12 = select i1 %11, i32 %0, i32 %10
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ %0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = add i64 %5, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  %14 = add nsw i32 %13, %2
  %15 = sdiv i32 %9, 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = ashr i32 %14, 1
  %19 = add nsw i32 %18, %14
  %20 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %19) #11
  %21 = icmp sgt i32 %20, 4
  %22 = select i1 %21, i32 %20, i32 4
  %23 = icmp slt i32 %22, 16
  %24 = select i1 %23, i32 %9, i32 %22
  %25 = load i64, i64* %1, align 8
  %26 = add i64 %25, 15
  %27 = inttoptr i64 %26 to i32*
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi i32* [ %7, %3 ], [ %27, %17 ]
  %30 = phi i64 [ %5, %3 ], [ %25, %17 ]
  %31 = phi i32 [ %9, %3 ], [ %24, %17 ]
  %32 = load atomic i32, i32* %29 monotonic, align 4
  %33 = ashr i32 %32, 1
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %71, label %35

35:                                               ; preds = %28
  %36 = icmp sgt i32 %31, 256
  br i1 %36, label %37, label %48

37:                                               ; preds = %35
  %38 = and i64 %30, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  %45 = icmp sgt i32 %31, 134217720
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %35, %37
  %49 = phi i8 [ %44, %37 ], [ 0, %35 ]
  %50 = add nsw i32 %31, 5
  %51 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 46
  %53 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %51, i64* %52, i32 %50, i8 zeroext %49) #11
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i32*
  store atomic volatile i32 0, i32* %56 monotonic, align 4
  %57 = load i64, i64* %53, align 8
  %58 = add i64 %57, 11
  %59 = inttoptr i64 %58 to i32*
  store atomic volatile i32 0, i32* %59 monotonic, align 4
  %60 = load i64, i64* %53, align 8
  %61 = shl i32 %31, 1
  %62 = add i64 %60, 15
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 %61, i32* %63 monotonic, align 4
  %64 = bitcast %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = load i64, i64* %1, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %53, align 8
  call void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1238"* nonnull %67, i64 %69, i64 %70)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %71

71:                                               ; preds = %28, %48
  %72 = phi i64* [ %53, %48 ], [ %1, %28 ]
  ret i64* %72
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 134217720
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = add nsw i32 %17, 5
  %19 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 46
  %21 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %19, i64* %20, i32 %18, i8 zeroext %2) #11
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i32*
  store atomic volatile i32 0, i32* %24 monotonic, align 4
  %25 = load i64, i64* %21, align 8
  %26 = add i64 %25, 11
  %27 = inttoptr i64 %26 to i32*
  store atomic volatile i32 0, i32* %27 monotonic, align 4
  %28 = load i64, i64* %21, align 8
  %29 = shl i32 %17, 1
  %30 = add i64 %28, 15
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %29, i32* %31 monotonic, align 4
  ret i64* %21
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1238"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = and i64 %2, -262144
  %5 = or i64 %4, 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 262144
  %9 = icmp eq i64 %8, 0
  %10 = and i64 %7, 24
  %11 = icmp ne i64 %10, 0
  %12 = and i1 %9, %11
  %13 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %1, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #11
  %17 = or i64 %4, 16
  %18 = inttoptr i64 %17 to %"class.v8::internal::Heap"**
  %19 = add i64 %14, 19
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  br i1 %12, label %29, label %22

22:                                               ; preds = %3
  %23 = zext i32 %21 to i64
  %24 = or i64 %23, %1
  %25 = add i64 %2, 19
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 %21, i32* %26 monotonic, align 4
  %27 = and i64 %23, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %163, label %145

29:                                               ; preds = %3
  %30 = add i64 %2, 19
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %21, i32* %31 monotonic, align 4
  %32 = load i64, i64* %13, align 8
  %33 = add i64 %32, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = add i64 %2, 23
  %37 = inttoptr i64 %36 to i32*
  store atomic volatile i32 %35, i32* %37 monotonic, align 4
  br label %38

38:                                               ; preds = %163, %286, %293, %297, %29
  %39 = load i64, i64* %13, align 8
  %40 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %41 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %40, i64 0, i32 0, i32 1
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %40, i64 0, i32 1, i64 0
  br label %56

48:                                               ; preds = %42, %38
  %49 = and i64 %39, -262144
  %50 = or i64 %49, 16
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 16
  %53 = add i64 %52, -41416
  %54 = inttoptr i64 %53 to %"class.v8::internal::Isolate"*
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %56

56:                                               ; preds = %46, %48
  %57 = phi i64* [ %55, %48 ], [ %47, %46 ]
  %58 = add i64 %39, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = ashr i32 %60, 1
  %62 = sext i32 %61 to i64
  %63 = icmp eq i32 %61, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %56
  %65 = add i64 %2, 7
  br label %174

66:                                               ; preds = %56
  %67 = getelementptr inbounds i64, i64* %57, i64 4
  %68 = getelementptr inbounds i64, i64* %57, i64 5
  %69 = add i64 %2, 15
  %70 = inttoptr i64 %69 to i32*
  %71 = add i64 %2, 7
  br i1 %12, label %72, label %184

72:                                               ; preds = %66, %143
  %73 = phi i64 [ %144, %143 ], [ %39, %66 ]
  %74 = phi i64 [ %141, %143 ], [ 0, %66 ]
  %75 = trunc i64 %74 to i32
  %76 = shl i32 %75, 2
  %77 = add i32 %76, 20
  %78 = sext i32 %77 to i64
  %79 = add nsw i64 %78, 7
  %80 = add i64 %79, %73
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %83, %1
  %85 = load i64, i64* %67, align 8
  %86 = trunc i64 %85 to i32
  %87 = icmp eq i32 %82, %86
  br i1 %87, label %140, label %88

88:                                               ; preds = %72
  %89 = load i64, i64* %68, align 8
  %90 = trunc i64 %89 to i32
  %91 = icmp eq i32 %82, %90
  br i1 %91, label %140, label %92

92:                                               ; preds = %88
  %93 = add i64 %84, 3
  %94 = inttoptr i64 %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %96, %1
  %98 = add i64 %97, 3
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = lshr i32 %100, 2
  %102 = load atomic i32, i32* %70 monotonic, align 4
  %103 = ashr i32 %102, 1
  %104 = add nsw i32 %103, -1
  %105 = and i32 %104, %101
  %106 = shl nuw i32 %105, 2
  %107 = add i32 %106, 20
  %108 = sext i32 %107 to i64
  %109 = add i64 %71, %108
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = icmp eq i32 %111, %86
  br i1 %112, label %137, label %113

113:                                              ; preds = %92, %124
  %114 = phi i32 [ %133, %124 ], [ %111, %92 ]
  %115 = phi i32 [ %127, %124 ], [ %105, %92 ]
  %116 = phi i32 [ %125, %124 ], [ 1, %92 ]
  %117 = icmp eq i32 %114, %90
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = shl i32 %115, 2
  %120 = add i32 %119, 20
  %121 = sext i32 %120 to i64
  %122 = add i64 %71, %121
  %123 = inttoptr i64 %122 to i32*
  br label %137

124:                                              ; preds = %113
  %125 = add i32 %116, 1
  %126 = add i32 %116, %115
  %127 = and i32 %126, %104
  %128 = shl i32 %127, 2
  %129 = add i32 %128, 20
  %130 = sext i32 %129 to i64
  %131 = add i64 %71, %130
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = icmp eq i32 %133, %86
  br i1 %134, label %135, label %113

135:                                              ; preds = %124
  %136 = inttoptr i64 %131 to i32*
  br label %137

137:                                              ; preds = %135, %118, %92
  %138 = phi i32* [ %110, %92 ], [ %123, %118 ], [ %136, %135 ]
  %139 = load atomic i32, i32* %81 monotonic, align 4
  store atomic volatile i32 %139, i32* %138 monotonic, align 4
  br label %140

140:                                              ; preds = %137, %88, %72
  %141 = add i64 %74, 1
  %142 = icmp eq i64 %141, %62
  br i1 %142, label %174, label %143

143:                                              ; preds = %140
  %144 = load i64, i64* %13, align 8
  br label %72

145:                                              ; preds = %22
  %146 = load i64, i64* %6, align 8
  %147 = and i64 %146, 262144
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %145
  %150 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %150, i64 %2, i64 %25, i64 %24) #11
  br label %151

151:                                              ; preds = %145, %149
  %152 = and i64 %24, -262144
  %153 = or i64 %152, 8
  %154 = inttoptr i64 %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, 24
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %151
  %159 = load i64, i64* %6, align 8
  %160 = and i64 %159, 24
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %158
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %25, i64 %24) #11
  br label %163

163:                                              ; preds = %22, %151, %158, %162
  %164 = load i64, i64* %13, align 8
  %165 = add i64 %164, 23
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = zext i32 %167 to i64
  %169 = or i64 %168, %1
  %170 = add i64 %2, 23
  %171 = inttoptr i64 %170 to i32*
  store atomic volatile i32 %167, i32* %171 monotonic, align 4
  %172 = and i64 %168, 1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %38, label %280

174:                                              ; preds = %275, %140, %64
  %175 = phi i64 [ %65, %64 ], [ %71, %140 ], [ %71, %275 ]
  %176 = load i64, i64* %13, align 8
  %177 = add i64 %176, 7
  %178 = inttoptr i64 %177 to i32*
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, -2
  %181 = inttoptr i64 %175 to i32*
  store atomic volatile i32 %180, i32* %181 monotonic, align 4
  %182 = add i64 %2, 11
  %183 = inttoptr i64 %182 to i32*
  store atomic volatile i32 0, i32* %183 monotonic, align 4
  ret void

184:                                              ; preds = %66, %278
  %185 = phi i64 [ %279, %278 ], [ %39, %66 ]
  %186 = phi i64 [ %276, %278 ], [ 0, %66 ]
  %187 = trunc i64 %186 to i32
  %188 = shl i32 %187, 2
  %189 = add i32 %188, 20
  %190 = sext i32 %189 to i64
  %191 = add nsw i64 %190, 7
  %192 = add i64 %191, %185
  %193 = inttoptr i64 %192 to i32*
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = zext i32 %194 to i64
  %196 = or i64 %195, %1
  %197 = load i64, i64* %67, align 8
  %198 = trunc i64 %197 to i32
  %199 = icmp eq i32 %194, %198
  br i1 %199, label %275, label %200

200:                                              ; preds = %184
  %201 = load i64, i64* %68, align 8
  %202 = trunc i64 %201 to i32
  %203 = icmp eq i32 %194, %202
  br i1 %203, label %275, label %204

204:                                              ; preds = %200
  %205 = add i64 %196, 3
  %206 = inttoptr i64 %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i64
  %209 = or i64 %208, %1
  %210 = add i64 %209, 3
  %211 = inttoptr i64 %210 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = lshr i32 %212, 2
  %214 = load atomic i32, i32* %70 monotonic, align 4
  %215 = ashr i32 %214, 1
  %216 = add nsw i32 %215, -1
  %217 = and i32 %216, %213
  %218 = shl nuw i32 %217, 2
  %219 = add i32 %218, 20
  %220 = sext i32 %219 to i64
  %221 = add i64 %71, %220
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = icmp eq i32 %223, %198
  br i1 %224, label %249, label %225

225:                                              ; preds = %204, %236
  %226 = phi i32 [ %245, %236 ], [ %223, %204 ]
  %227 = phi i32 [ %239, %236 ], [ %217, %204 ]
  %228 = phi i32 [ %237, %236 ], [ 1, %204 ]
  %229 = icmp eq i32 %226, %202
  br i1 %229, label %230, label %236

230:                                              ; preds = %225
  %231 = shl i32 %227, 2
  %232 = add i32 %231, 20
  %233 = sext i32 %232 to i64
  %234 = add i64 %71, %233
  %235 = inttoptr i64 %234 to i32*
  br label %249

236:                                              ; preds = %225
  %237 = add i32 %228, 1
  %238 = add i32 %228, %227
  %239 = and i32 %238, %216
  %240 = shl i32 %239, 2
  %241 = add i32 %240, 20
  %242 = sext i32 %241 to i64
  %243 = add i64 %71, %242
  %244 = inttoptr i64 %243 to i32*
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = icmp eq i32 %245, %198
  br i1 %246, label %247, label %225

247:                                              ; preds = %236
  %248 = inttoptr i64 %243 to i32*
  br label %249

249:                                              ; preds = %247, %230, %204
  %250 = phi i32* [ %222, %204 ], [ %235, %230 ], [ %248, %247 ]
  %251 = phi i64 [ %221, %204 ], [ %234, %230 ], [ %243, %247 ]
  %252 = load atomic i32, i32* %193 monotonic, align 4
  %253 = zext i32 %252 to i64
  %254 = or i64 %253, %1
  store atomic volatile i32 %252, i32* %250 monotonic, align 4
  %255 = and i64 %253, 1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %275, label %257

257:                                              ; preds = %249
  %258 = load i64, i64* %6, align 8
  %259 = and i64 %258, 262144
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %262, i64 %2, i64 %251, i64 %254) #11
  br label %263

263:                                              ; preds = %261, %257
  %264 = and i64 %254, -262144
  %265 = or i64 %264, 8
  %266 = inttoptr i64 %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = and i64 %267, 24
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %275, label %270

270:                                              ; preds = %263
  %271 = load i64, i64* %6, align 8
  %272 = and i64 %271, 24
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %270
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %251, i64 %254) #11
  br label %275

275:                                              ; preds = %200, %249, %184, %274, %270, %263
  %276 = add i64 %186, 1
  %277 = icmp eq i64 %276, %62
  br i1 %277, label %174, label %278

278:                                              ; preds = %275
  %279 = load i64, i64* %13, align 8
  br label %184

280:                                              ; preds = %163
  %281 = load i64, i64* %6, align 8
  %282 = and i64 %281, 262144
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %286, label %284

284:                                              ; preds = %280
  %285 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %285, i64 %2, i64 %170, i64 %169) #11
  br label %286

286:                                              ; preds = %284, %280
  %287 = and i64 %169, -262144
  %288 = or i64 %287, 8
  %289 = inttoptr i64 %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = and i64 %290, 24
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %38, label %293

293:                                              ; preds = %286
  %294 = load i64, i64* %6, align 8
  %295 = and i64 %294, 24
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %38

297:                                              ; preds = %293
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %170, i64 %169) #11
  br label %38
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7set_keyEiNS0_6ObjectE(%"class.v8::internal::HashTable.1238"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = shl i32 %1, 2
  %5 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %4 to i64
  %8 = add nsw i64 %7, 7
  %9 = add i64 %6, %8
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %2 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, %8
  %14 = and i64 %2, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %3
  %17 = and i64 %12, -262144
  %18 = or i64 %17, 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 262144
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = or i64 %17, 16
  %25 = inttoptr i64 %24 to %"class.v8::internal::Heap"**
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %25, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %26, i64 %12, i64 %13, i64 %2) #11
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, %8
  br label %29

29:                                               ; preds = %23, %16
  %30 = phi i64 [ %13, %16 ], [ %28, %23 ]
  %31 = phi i64 [ %12, %16 ], [ %27, %23 ]
  %32 = and i64 %2, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 24
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %30, i64 %2) #11
  br label %46

46:                                               ; preds = %3, %29, %38, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11SetCapacityEi(%"class.v8::internal::HashTable.1238"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 15
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Ev(%"class.v8::internal::HashTable.1238"*) unnamed_addr #0 comdat($_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Em(%"class.v8::internal::HashTable.1238"*, i64) unnamed_addr #5 comdat($_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HashTable.1238", %"class.v8::internal::HashTable.1238"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 134217720
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = add nsw i32 %16, 5
  %18 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %19 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 46
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %18, i64* %21, i32 %17, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = shl i32 %16, 1
  %31 = add i64 %29, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %30, i32* %32 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %78

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 134217720
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %54, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %45, %51
  %56 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %57 = add nuw nsw i32 %56, 5
  %58 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 46
  %60 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %58, i64* %59, i32 %57, i8 zeroext %46) #11
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i32*
  store atomic volatile i32 0, i32* %63 monotonic, align 4
  %64 = load i64, i64* %60, align 8
  %65 = add i64 %64, 11
  %66 = inttoptr i64 %65 to i32*
  store atomic volatile i32 0, i32* %66 monotonic, align 4
  %67 = load i64, i64* %60, align 8
  %68 = shl i32 %56, 1
  %69 = add i64 %67, 15
  %70 = inttoptr i64 %69 to i32*
  store atomic volatile i32 %68, i32* %70 monotonic, align 4
  %71 = bitcast %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11
  %72 = load i64, i64* %1, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %60, align 8
  call void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1238"* nonnull %74, i64 %76, i64 %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11
  br label %78

78:                                               ; preds = %25, %55
  %79 = phi i64* [ %60, %55 ], [ %1, %25 ]
  ret i64* %79
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 15
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  %15 = add i64 %6, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = add nsw i32 %14, %2
  %19 = icmp sgt i32 %10, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %4
  %21 = ashr i32 %17, 1
  %22 = sub nsw i32 %10, %18
  %23 = sdiv i32 %22, 2
  %24 = icmp slt i32 %23, %21
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = sdiv i32 %18, 2
  %27 = add nsw i32 %26, %18
  %28 = icmp sgt i32 %27, %10
  br i1 %28, label %29, label %81

29:                                               ; preds = %25, %20, %4
  %30 = load atomic i32, i32* %8 monotonic, align 4
  %31 = load atomic i32, i32* %12 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = add nsw i32 %32, %2
  %34 = icmp eq i8 %3, 1
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = icmp sgt i32 %30, 513
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = and i64 %6, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::BasicMemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %35, %37, %29
  %46 = phi i8 [ 1, %29 ], [ 0, %35 ], [ %44, %37 ]
  %47 = ashr i32 %33, 1
  %48 = add nsw i32 %47, %33
  %49 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %48) #11
  %50 = icmp sgt i32 %49, 4
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 134217720
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %45, %51
  %55 = phi i32 [ %49, %51 ], [ 4, %45 ]
  %56 = add nuw nsw i32 %55, 5
  %57 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %58 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 46
  %61 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %57, i64* %60, i32 %56, i8 zeroext %46) #11
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  store atomic volatile i32 0, i32* %64 monotonic, align 4
  %65 = load i64, i64* %61, align 8
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  store atomic volatile i32 0, i32* %67 monotonic, align 4
  %68 = load i64, i64* %61, align 8
  %69 = shl i32 %55, 1
  %70 = add i64 %68, 15
  %71 = inttoptr i64 %70 to i32*
  store atomic volatile i32 %69, i32* %71 monotonic, align 4
  %72 = bitcast %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = load i64, i64* %1, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 2
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %61, align 8
  call void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6RehashENS0_16PtrComprCageBaseES2_(%"class.v8::internal::HashTable.1238"* nonnull %75, i64 %79, i64 %80)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %81

81:                                               ; preds = %25, %54
  %82 = phi i64* [ %61, %54 ], [ %1, %25 ]
  ret i64* %82
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7ValueAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1240"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 2
  %8 = add i32 %7, 24
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %4
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  ret i64 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7ValueAtENS0_16PtrComprCageBaseENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1240"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = shl i32 %4, 2
  %8 = add i32 %7, 24
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %6
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %1, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #11
  %16 = zext i32 %13 to i64
  %17 = or i64 %16, %1
  ret i64 %17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE10ValueAtPutENS0_13InternalIndexENS0_6ObjectE(%"class.v8::internal::Dictionary.1240"*, i64, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = trunc i64 %1 to i32
  %5 = shl i32 %4, 2
  %6 = add i32 %5, 24
  %7 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sext i32 %6 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %8, %10
  %12 = inttoptr i64 %11 to i32*
  %13 = trunc i64 %2 to i32
  store atomic volatile i32 %13, i32* %12 monotonic, align 4
  %14 = load i64, i64* %7, align 8
  %15 = add i64 %14, %10
  %16 = and i64 %2, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %3
  %19 = and i64 %14, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 262144
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to %"class.v8::internal::Heap"**
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %27, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %28, i64 %14, i64 %15, i64 %2) #11
  %29 = load i64, i64* %7, align 8
  %30 = add i64 %29, %10
  br label %31

31:                                               ; preds = %25, %18
  %32 = phi i64 [ %15, %18 ], [ %30, %25 ]
  %33 = phi i64 [ %14, %18 ], [ %29, %25 ]
  %34 = and i64 %2, -262144
  %35 = or i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 24
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %31
  %41 = and i64 %33, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 24
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %33, i64 %32, i64 %2) #11
  br label %48

48:                                               ; preds = %3, %31, %40, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE9DetailsAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1240"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = trunc i64 %1 to i32
  %7 = shl i32 %6, 2
  %8 = add i32 %7, 20
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 7
  %11 = add i64 %10, %4
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = ashr i32 %18, 1
  ret i32 %19
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE12DetailsAtPutENS0_13InternalIndexENS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1240"*, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.v8::internal::DependentCode", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = trunc i64 %1 to i32
  %9 = shl i32 %8, 2
  %10 = add i32 %9, 20
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 7
  %13 = add i64 %12, %6
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = lshr i32 %20, 1
  %22 = xor i32 %21, %2
  %23 = and i32 %22, 192
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !5

25:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.442, i64 0, i64 0)) #16
  unreachable

26:                                               ; preds = %3
  %27 = shl i32 %2, 1
  store atomic volatile i32 %27, i32* %19 release, align 4
  %28 = and i32 %20, 16
  %29 = icmp eq i32 %28, 0
  %30 = and i32 %2, 8
  %31 = icmp ne i32 %30, 0
  %32 = and i1 %31, %29
  br i1 %32, label %33, label %41

33:                                               ; preds = %26
  %34 = bitcast %"class.v8::internal::DependentCode"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = add i64 %17, 15
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %7, %38
  %40 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %39, i64* %40, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %4, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %41

41:                                               ; preds = %26, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11DeleteEntryEPNS0_7IsolateENS0_6HandleIS2_EENS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %6 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 1, i64 0
  br label %21

13:                                               ; preds = %7, %3
  %14 = and i64 %4, -262144
  %15 = or i64 %14, 16
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %21

21:                                               ; preds = %13, %11
  %22 = phi i64* [ %20, %13 ], [ %12, %11 ]
  %23 = getelementptr inbounds i64, i64* %22, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %2 to i32
  %26 = shl i32 %25, 2
  %27 = add i32 %26, 20
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %28, 7
  %30 = add i64 %29, %4
  %31 = inttoptr i64 %30 to i32*
  %32 = trunc i64 %24 to i32
  store atomic volatile i32 %32, i32* %31 monotonic, align 4
  %33 = and i64 %24, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %58, label %35

35:                                               ; preds = %21
  %36 = and i64 %4, -262144
  %37 = or i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 262144
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %35
  %43 = or i64 %36, 16
  %44 = inttoptr i64 %43 to %"class.v8::internal::Heap"**
  %45 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %44, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %45, i64 %4, i64 %30, i64 %24) #11
  br label %46

46:                                               ; preds = %42, %35
  %47 = and i64 %24, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 24
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %46
  %54 = load i64, i64* %38, align 8
  %55 = and i64 %54, 24
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %4, i64 %30, i64 %24) #11
  br label %58

58:                                               ; preds = %21, %46, %53, %57
  %59 = load i64, i64* %1, align 8
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = add i32 %62, -2
  %64 = and i32 %63, -2
  store atomic volatile i32 %64, i32* %61 monotonic, align 4
  %65 = add i64 %59, 11
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = add i32 %67, 2
  %69 = and i32 %68, -2
  store atomic volatile i32 %69, i32* %66 monotonic, align 4
  %70 = tail call i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0) #11
  ret i64* %70
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = tail call i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6ShrinkEPNS0_7IsolateENS0_6HandleIS2_EEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  ret i64* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE28NumberOfEnumerablePropertiesEv(%"class.v8::internal::Dictionary.1240"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %5 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 1, i64 0
  br label %20

12:                                               ; preds = %6, %1
  %13 = and i64 %3, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %20

20:                                               ; preds = %10, %12
  %21 = phi i64* [ %19, %12 ], [ %11, %10 ]
  %22 = add i64 %3, 15
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = ashr i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = icmp eq i32 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  %29 = and i64 %3, -4294967296
  %30 = getelementptr inbounds i64, i64* %21, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds i64, i64* %21, i64 5
  br label %36

34:                                               ; preds = %83, %20
  %35 = phi i32 [ 0, %20 ], [ %84, %83 ]
  ret i32 %35

36:                                               ; preds = %28, %83
  %37 = phi i32 [ 0, %28 ], [ %84, %83 ]
  %38 = phi i64 [ 0, %28 ], [ %85, %83 ]
  %39 = trunc i64 %38 to i32
  %40 = shl i32 %39, 2
  %41 = add i32 %40, 20
  %42 = sext i32 %41 to i64
  %43 = add nsw i64 %42, 7
  %44 = add i64 %3, %43
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %29, %47
  %49 = icmp eq i32 %46, %32
  br i1 %49, label %83, label %50

50:                                               ; preds = %36
  %51 = load i64, i64* %33, align 8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %46, %52
  br i1 %53, label %83, label %54

54:                                               ; preds = %50
  %55 = add i64 %48, 3
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %54
  %62 = or i64 %29, %58
  %63 = add i64 %62, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %29, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp eq i16 %70, 64
  br i1 %71, label %83, label %72

72:                                               ; preds = %54, %61
  %73 = load atomic i32, i32* %45 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %29, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = lshr i32 %78, 5
  %80 = and i32 %79, 1
  %81 = xor i32 %80, 1
  %82 = add nsw i32 %81, %37
  br label %83

83:                                               ; preds = %61, %36, %50, %72
  %84 = phi i32 [ %82, %72 ], [ %37, %50 ], [ %37, %36 ], [ %37, %61 ]
  %85 = add i64 %38, 1
  %86 = icmp eq i64 %85, %26
  br i1 %86, label %34, label %36
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::Dictionary.1240"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %6 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 1, i64 0
  br label %21

13:                                               ; preds = %7, %2
  %14 = and i64 %4, -262144
  %15 = or i64 %14, 16
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %21

21:                                               ; preds = %11, %13
  %22 = phi i64* [ %20, %13 ], [ %12, %11 ]
  %23 = add i64 %4, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = ashr i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = getelementptr inbounds i64, i64* %22, i64 4
  %31 = load i64, i64* %30, align 8
  br label %73

32:                                               ; preds = %21
  %33 = and i64 %4, -4294967296
  %34 = add i64 %4, 7
  %35 = getelementptr inbounds i64, i64* %22, i64 4
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i64, i64* %22, i64 5
  %39 = trunc i64 %1 to i32
  br label %40

40:                                               ; preds = %32, %62
  %41 = phi i64 [ 0, %32 ], [ %63, %62 ]
  %42 = trunc i64 %41 to i32
  %43 = shl i32 %42, 2
  %44 = add i32 %43, 20
  %45 = sext i32 %44 to i64
  %46 = add i64 %34, %45
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = icmp eq i32 %48, %37
  br i1 %49, label %62, label %50

50:                                               ; preds = %40
  %51 = load i64, i64* %38, align 8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %48, %52
  br i1 %53, label %62, label %54

54:                                               ; preds = %50
  %55 = load atomic i32, i32* %47 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %33, %56
  %58 = add i64 %57, 11
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %39
  br i1 %61, label %65, label %62

62:                                               ; preds = %54, %50, %40
  %63 = add i64 %41, 1
  %64 = icmp eq i64 %63, %27
  br i1 %64, label %73, label %40

65:                                               ; preds = %54
  %66 = zext i32 %48 to i64
  %67 = or i64 %33, %66
  %68 = add i64 %67, 3
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %33, %71
  br label %73

73:                                               ; preds = %62, %29, %65
  %74 = phi i64 [ %72, %65 ], [ %31, %29 ], [ %36, %62 ]
  ret i64 %74
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE10ClearEntryENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1240"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %6 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 1, i64 0
  br label %21

13:                                               ; preds = %7, %2
  %14 = and i64 %4, -262144
  %15 = or i64 %14, 16
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %21

21:                                               ; preds = %11, %13
  %22 = phi i64* [ %20, %13 ], [ %12, %11 ]
  %23 = getelementptr inbounds i64, i64* %22, i64 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %1 to i32
  %26 = shl i32 %25, 2
  %27 = add i32 %26, 20
  %28 = sext i32 %27 to i64
  %29 = add nsw i64 %28, 7
  %30 = add i64 %4, %29
  %31 = inttoptr i64 %30 to i32*
  %32 = trunc i64 %24 to i32
  store atomic volatile i32 %32, i32* %31 monotonic, align 4
  %33 = and i64 %24, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %58, label %35

35:                                               ; preds = %21
  %36 = and i64 %4, -262144
  %37 = or i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 262144
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %35
  %43 = or i64 %36, 16
  %44 = inttoptr i64 %43 to %"class.v8::internal::Heap"**
  %45 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %44, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %45, i64 %4, i64 %30, i64 %24) #11
  br label %46

46:                                               ; preds = %42, %35
  %47 = and i64 %24, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 24
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %46
  %54 = load i64, i64* %38, align 8
  %55 = and i64 %54, 24
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %4, i64 %30, i64 %24) #11
  br label %58

58:                                               ; preds = %57, %53, %46, %21
  %59 = and i64 %4, -4294967296
  %60 = load atomic i32, i32* %31 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %59, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 384
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68, !prof !5

68:                                               ; preds = %58
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.442, i64 0, i64 0)) #16
  unreachable

69:                                               ; preds = %58
  store atomic volatile i32 0, i32* %64 release, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16GlobalDictionary8SetEntryENS0_13InternalIndexENS0_6ObjectES3_NS0_15PropertyDetailsE(%"class.v8::internal::GlobalDictionary"*, i64, i64, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = alloca %"class.v8::internal::DependentCode", align 8
  %7 = trunc i64 %1 to i32
  %8 = shl i32 %7, 2
  %9 = add i32 %8, 20
  %10 = getelementptr inbounds %"class.v8::internal::GlobalDictionary", %"class.v8::internal::GlobalDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = sext i32 %9 to i64
  %13 = add nsw i64 %12, 7
  %14 = add i64 %11, %13
  %15 = inttoptr i64 %14 to i32*
  %16 = trunc i64 %3 to i32
  store atomic volatile i32 %16, i32* %15 monotonic, align 4
  %17 = load i64, i64* %10, align 8
  %18 = add i64 %17, %13
  %19 = and i64 %3, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %52, label %21

21:                                               ; preds = %5
  %22 = and i64 %17, -262144
  %23 = or i64 %22, 8
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 262144
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %21
  %29 = or i64 %22, 16
  %30 = inttoptr i64 %29 to %"class.v8::internal::Heap"**
  %31 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %30, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %31, i64 %17, i64 %18, i64 %3) #11
  %32 = load i64, i64* %10, align 8
  %33 = add i64 %32, %13
  br label %34

34:                                               ; preds = %28, %21
  %35 = phi i64 [ %18, %21 ], [ %33, %28 ]
  %36 = phi i64 [ %17, %21 ], [ %32, %28 ]
  %37 = and i64 %3, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %34
  %44 = and i64 %36, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %43
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %36, i64 %35, i64 %3) #11
  %51 = load i64, i64* %10, align 8
  br label %52

52:                                               ; preds = %5, %34, %43, %50
  %53 = phi i64 [ %17, %5 ], [ %36, %34 ], [ %36, %43 ], [ %51, %50 ]
  %54 = and i64 %53, -4294967296
  %55 = add i64 %13, %53
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = lshr i32 %62, 1
  %64 = xor i32 %63, %4
  %65 = and i32 %64, 192
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !5

67:                                               ; preds = %52
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.442, i64 0, i64 0)) #16
  unreachable

68:                                               ; preds = %52
  %69 = shl i32 %4, 1
  store atomic volatile i32 %69, i32* %61 release, align 4
  %70 = and i32 %62, 16
  %71 = icmp eq i32 %70, 0
  %72 = and i32 %4, 8
  %73 = icmp ne i32 %72, 0
  %74 = and i1 %73, %71
  br i1 %74, label %75, label %83

75:                                               ; preds = %68
  %76 = bitcast %"class.v8::internal::DependentCode"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #11
  %77 = add i64 %59, 15
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %54, %80
  %82 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %81, i64* %82, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %6, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  br label %83

83:                                               ; preds = %68, %75
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1240"*, i64, i64, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = alloca %"class.v8::internal::DependentCode", align 8
  %7 = trunc i64 %1 to i32
  %8 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 8
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 262144
  %15 = icmp ne i64 %14, 0
  %16 = and i64 %13, 24
  %17 = icmp eq i64 %16, 0
  %18 = or i1 %15, %17
  %19 = shl i32 %7, 2
  %20 = add i32 %19, 20
  %21 = sext i32 %20 to i64
  %22 = add nsw i64 %21, 7
  %23 = add i64 %9, %22
  %24 = inttoptr i64 %23 to i32*
  %25 = trunc i64 %2 to i32
  store atomic volatile i32 %25, i32* %24 monotonic, align 4
  br i1 %18, label %26, label %62

26:                                               ; preds = %5
  %27 = load i64, i64* %8, align 8
  %28 = add i64 %27, %22
  %29 = and i64 %2, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %70, label %31

31:                                               ; preds = %26
  %32 = and i64 %27, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 262144
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %31
  %39 = or i64 %32, 16
  %40 = inttoptr i64 %39 to %"class.v8::internal::Heap"**
  %41 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %40, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %41, i64 %27, i64 %28, i64 %2) #11
  %42 = load i64, i64* %8, align 8
  %43 = add i64 %42, %22
  br label %44

44:                                               ; preds = %31, %38
  %45 = phi i64 [ %28, %31 ], [ %43, %38 ]
  %46 = phi i64 [ %27, %31 ], [ %42, %38 ]
  %47 = and i64 %2, -262144
  %48 = or i64 %47, 8
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 24
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %70, label %53

53:                                               ; preds = %44
  %54 = and i64 %46, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 24
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %53
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %46, i64 %45, i64 %2) #11
  %61 = load i64, i64* %8, align 8
  br label %70

62:                                               ; preds = %5
  %63 = add i32 %19, 24
  %64 = load i64, i64* %8, align 8
  %65 = sext i32 %63 to i64
  %66 = add nsw i64 %65, 7
  %67 = add i64 %66, %64
  %68 = inttoptr i64 %67 to i32*
  %69 = trunc i64 %3 to i32
  store atomic volatile i32 %69, i32* %68 monotonic, align 4
  br label %112

70:                                               ; preds = %26, %44, %53, %60
  %71 = phi i64 [ %27, %26 ], [ %46, %44 ], [ %46, %53 ], [ %61, %60 ]
  %72 = add i32 %19, 24
  %73 = sext i32 %72 to i64
  %74 = add nsw i64 %73, 7
  %75 = add i64 %71, %74
  %76 = inttoptr i64 %75 to i32*
  %77 = trunc i64 %3 to i32
  store atomic volatile i32 %77, i32* %76 monotonic, align 4
  %78 = load i64, i64* %8, align 8
  %79 = add i64 %78, %74
  %80 = and i64 %3, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %112, label %82

82:                                               ; preds = %70
  %83 = and i64 %78, -262144
  %84 = or i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 262144
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %82
  %90 = or i64 %83, 16
  %91 = inttoptr i64 %90 to %"class.v8::internal::Heap"**
  %92 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %91, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %92, i64 %78, i64 %79, i64 %3) #11
  %93 = load i64, i64* %8, align 8
  %94 = add i64 %93, %74
  br label %95

95:                                               ; preds = %82, %89
  %96 = phi i64 [ %79, %82 ], [ %94, %89 ]
  %97 = phi i64 [ %78, %82 ], [ %93, %89 ]
  %98 = and i64 %3, -262144
  %99 = or i64 %98, 8
  %100 = inttoptr i64 %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = and i64 %101, 24
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %95
  %105 = and i64 %97, -262144
  %106 = or i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 24
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %97, i64 %96, i64 %3) #11
  br label %112

112:                                              ; preds = %62, %70, %95, %104, %111
  %113 = load i64, i64* %8, align 8
  %114 = and i64 %113, -4294967296
  %115 = add i64 %22, %113
  %116 = inttoptr i64 %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %114, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = lshr i32 %122, 1
  %124 = xor i32 %123, %4
  %125 = and i32 %124, 192
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %128, label %127, !prof !5

127:                                              ; preds = %112
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.442, i64 0, i64 0)) #16
  unreachable

128:                                              ; preds = %112
  %129 = shl i32 %4, 1
  store atomic volatile i32 %129, i32* %121 release, align 4
  %130 = and i32 %122, 16
  %131 = icmp eq i32 %130, 0
  %132 = and i32 %4, 8
  %133 = icmp ne i32 %132, 0
  %134 = and i1 %133, %131
  br i1 %134, label %135, label %143

135:                                              ; preds = %128
  %136 = bitcast %"class.v8::internal::DependentCode"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #11
  %137 = add i64 %119, 15
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %114, %140
  %142 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %141, i64* %142, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %6, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #11
  br label %143

143:                                              ; preds = %128, %135
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i64 @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE17RawFieldOfValueAtENS0_13InternalIndexE(%"class.v8::internal::Dictionary.1240"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = trunc i64 %1 to i32
  %4 = shl i32 %3, 2
  %5 = add i32 %4, 24
  %6 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %5 to i64
  %9 = add nsw i64 %8, 7
  %10 = add i64 %9, %7
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE11ShallowCopyEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 46
  %5 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayWithMapENS0_6HandleINS0_10FixedArrayEEENS2_INS0_3MapEEE(%"class.v8::internal::Factory"* %3, i64* %1, i64* %4) #11
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = load i64, i64* %2, align 8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = lshr i32 %12, 2
  %14 = add i64 %6, 15
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = ashr i32 %16, 1
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i32 %17, -1
  %23 = and i32 %22, %13
  %24 = shl nuw i32 %23, 2
  %25 = add i32 %24, 20
  %26 = sext i32 %25 to i64
  %27 = add i64 %6, 7
  %28 = add i64 %27, %26
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = trunc i64 %19 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %59, label %33

33:                                               ; preds = %5
  %34 = trunc i64 %21 to i32
  %35 = trunc i64 %9 to i32
  br label %36

36:                                               ; preds = %48, %33
  %37 = phi i32 [ %30, %33 ], [ %57, %48 ]
  %38 = phi i32 [ %23, %33 ], [ %51, %48 ]
  %39 = phi i32 [ 1, %33 ], [ %49, %48 ]
  %40 = icmp eq i32 %37, %34
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = zext i32 %37 to i64
  %43 = or i64 %8, %42
  %44 = add i64 %43, 3
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %35
  br i1 %47, label %70, label %48

48:                                               ; preds = %41, %36
  %49 = add i32 %39, 1
  %50 = add i32 %39, %38
  %51 = and i32 %50, %22
  %52 = shl i32 %51, 2
  %53 = add i32 %52, 20
  %54 = sext i32 %53 to i64
  %55 = add i64 %27, %54
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = icmp eq i32 %57, %31
  br i1 %58, label %59, label %36

59:                                               ; preds = %48, %5
  %60 = tail call i32 @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE20NextEnumerationIndexEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #11
  %61 = and i32 %4, -2147483393
  %62 = shl i32 %60, 8
  %63 = or i32 %62, %61
  %64 = tail call i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, i32 %63, %"class.v8::internal::InternalIndex"* null) #11
  %65 = load i64, i64* %64, align 8
  %66 = shl i32 %60, 1
  %67 = add i32 %66, 2
  %68 = add i64 %65, 19
  %69 = inttoptr i64 %68 to i32*
  store atomic volatile i32 %67, i32* %69 monotonic, align 4
  br label %103

70:                                               ; preds = %41
  %71 = load i64, i64* %3, align 8
  %72 = shl i32 %38, 2
  %73 = add i32 %72, 20
  %74 = sext i32 %73 to i64
  %75 = add i64 %27, %74
  %76 = inttoptr i64 %75 to i32*
  %77 = trunc i64 %71 to i32
  store atomic volatile i32 %77, i32* %76 monotonic, align 4
  %78 = and i64 %71, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %103, label %80

80:                                               ; preds = %70
  %81 = and i64 %6, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 262144
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  %88 = or i64 %81, 16
  %89 = inttoptr i64 %88 to %"class.v8::internal::Heap"**
  %90 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %89, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %90, i64 %6, i64 %75, i64 %71) #11
  br label %91

91:                                               ; preds = %87, %80
  %92 = and i64 %71, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 24
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %91
  %99 = load i64, i64* %83, align 8
  %100 = and i64 %99, 24
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %98
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %6, i64 %75, i64 %71) #11
  br label %103

103:                                              ; preds = %102, %98, %91, %70, %59
  %104 = phi i64* [ %64, %59 ], [ %1, %70 ], [ %1, %91 ], [ %1, %98 ], [ %1, %102 ]
  ret i64* %104
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = tail call i32 @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE20NextEnumerationIndexEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %8 = and i32 %4, -2147483393
  %9 = shl i32 %7, 8
  %10 = or i32 %9, %8
  %11 = tail call i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, i32 %10, %"class.v8::internal::InternalIndex"* %5) #11
  %12 = load i64, i64* %11, align 8
  %13 = shl i32 %7, 1
  %14 = add i32 %13, 2
  %15 = add i64 %12, 19
  %16 = inttoptr i64 %15 to i32*
  store atomic volatile i32 %14, i32* %16 monotonic, align 4
  ret i64* %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Ev(%"class.v8::internal::Dictionary.1240"*) unnamed_addr #0 comdat($_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Em(%"class.v8::internal::Dictionary.1240"*, i64) unnamed_addr #5 comdat($_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Dictionary.1240", %"class.v8::internal::Dictionary.1240"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", align 8
  %8 = load i64, i64* %2, align 8
  %9 = add i64 %8, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = lshr i32 %11, 2
  %13 = tail call i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 15
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = ashr i32 %17, 1
  %19 = add nsw i32 %18, -1
  %20 = and i32 %19, %12
  %21 = zext i32 %20 to i64
  %22 = shl nuw i32 %20, 2
  %23 = add i32 %22, 20
  %24 = sext i32 %23 to i64
  %25 = add i64 %14, 7
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %28, %31
  br i1 %32, label %57, label %33

33:                                               ; preds = %6
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %28, %36
  br i1 %37, label %57, label %41

38:                                               ; preds = %41
  %39 = add i32 %42, 1
  %40 = icmp eq i32 %51, %36
  br i1 %40, label %55, label %41

41:                                               ; preds = %33, %38
  %42 = phi i32 [ %39, %38 ], [ 1, %33 ]
  %43 = phi i32 [ %45, %38 ], [ %20, %33 ]
  %44 = add i32 %42, %43
  %45 = and i32 %44, %19
  %46 = shl i32 %45, 2
  %47 = add i32 %46, 20
  %48 = sext i32 %47 to i64
  %49 = add i64 %25, %48
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = icmp eq i32 %51, %31
  br i1 %52, label %53, label %38

53:                                               ; preds = %41
  %54 = zext i32 %45 to i64
  br label %57

55:                                               ; preds = %38
  %56 = zext i32 %45 to i64
  br label %57

57:                                               ; preds = %55, %33, %53, %6
  %58 = phi i64 [ %21, %6 ], [ %54, %53 ], [ %21, %33 ], [ %56, %55 ]
  %59 = bitcast %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  %60 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %7, i64 0, i32 0
  %62 = load i64, i64* %2, align 8
  %63 = load i64, i64* %3, align 8
  call void @_ZN2v88internal16GlobalDictionary8SetEntryENS0_13InternalIndexENS0_6ObjectES3_NS0_15PropertyDetailsE(%"class.v8::internal::GlobalDictionary"* nonnull %61, i64 %58, i64 %62, i64 %63, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  %64 = load i64, i64* %13, align 8
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = add i32 %67, 2
  %69 = and i32 %68, -2
  store atomic volatile i32 %69, i32* %66 monotonic, align 4
  %70 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %57
  %72 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %58, i64* %72, align 8
  br label %73

73:                                               ; preds = %57, %71
  ret i64* %13
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %2, align 8
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 2
  %15 = tail call i64* @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE14EnsureCapacityINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = ashr i32 %19, 1
  %21 = add nsw i32 %20, -1
  %22 = and i32 %21, %14
  %23 = zext i32 %22 to i64
  %24 = shl nuw i32 %22, 2
  %25 = add i32 %24, 20
  %26 = sext i32 %25 to i64
  %27 = add i64 %16, 7
  %28 = add i64 %27, %26
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = getelementptr inbounds i64, i64* %9, i64 4
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %30, %33
  br i1 %34, label %59, label %35

35:                                               ; preds = %6
  %36 = getelementptr inbounds i64, i64* %9, i64 5
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %30, %38
  br i1 %39, label %59, label %43

40:                                               ; preds = %43
  %41 = add i32 %44, 1
  %42 = icmp eq i32 %53, %38
  br i1 %42, label %57, label %43

43:                                               ; preds = %35, %40
  %44 = phi i32 [ %41, %40 ], [ 1, %35 ]
  %45 = phi i32 [ %47, %40 ], [ %22, %35 ]
  %46 = add i32 %44, %45
  %47 = and i32 %46, %21
  %48 = shl i32 %47, 2
  %49 = add i32 %48, 20
  %50 = sext i32 %49 to i64
  %51 = add i64 %27, %50
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = icmp eq i32 %53, %33
  br i1 %54, label %55, label %40

55:                                               ; preds = %43
  %56 = zext i32 %47 to i64
  br label %59

57:                                               ; preds = %40
  %58 = zext i32 %47 to i64
  br label %59

59:                                               ; preds = %57, %35, %55, %6
  %60 = phi i64 [ %23, %6 ], [ %56, %55 ], [ %23, %35 ], [ %58, %57 ]
  %61 = bitcast %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #11
  %62 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::GlobalDictionary>::ObjectRef"* %7, i64 0, i32 0
  %64 = load i64, i64* %2, align 8
  %65 = load i64, i64* %3, align 8
  call void @_ZN2v88internal16GlobalDictionary8SetEntryENS0_13InternalIndexENS0_6ObjectES3_NS0_15PropertyDetailsE(%"class.v8::internal::GlobalDictionary"* nonnull %63, i64 %60, i64 %64, i64 %65, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #11
  %66 = load i64, i64* %15, align 8
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = add i32 %69, 2
  %71 = and i32 %70, -2
  store atomic volatile i32 %71, i32* %68 monotonic, align 4
  %72 = icmp eq %"class.v8::internal::InternalIndex"* %5, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"class.v8::internal::InternalIndex", %"class.v8::internal::InternalIndex"* %5, i64 0, i32 0
  store i64 %60, i64* %74, align 8
  br label %75

75:                                               ; preds = %59, %73
  ret i64* %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE7SetHashEi(%"class.v8::internal::BaseNameDictionary.1239"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary.1239", %"class.v8::internal::BaseNameDictionary.1239"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE4HashEv(%"class.v8::internal::BaseNameDictionary.1239"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary.1239", %"class.v8::internal::BaseNameDictionary.1239"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 23
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE20NextEnumerationIndexEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::DependentCode", align 8
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = icmp ult i32 %8, 8388608
  br i1 %9, label %83, label %10

10:                                               ; preds = %2
  %11 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = ashr i32 %15, 1
  %17 = icmp sgt i32 %15, 1
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = bitcast %"class.v8::internal::DependentCode"* %3 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = sext i32 %16 to i64
  br label %24

22:                                               ; preds = %79, %10
  %23 = add nsw i32 %16, 1
  br label %83

24:                                               ; preds = %81, %18
  %25 = phi i64 [ %12, %18 ], [ %82, %81 ]
  %26 = phi i64 [ 0, %18 ], [ %35, %81 ]
  %27 = trunc i64 %26 to i32
  %28 = shl i32 %27, 2
  %29 = sext i32 %28 to i64
  %30 = add nsw i64 %29, 7
  %31 = add i64 %30, %25
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = lshr i32 %33, 1
  %35 = add nuw nsw i64 %26, 1
  %36 = load i64, i64* %1, align 8
  %37 = and i64 %36, -4294967296
  %38 = shl i32 %34, 2
  %39 = add i32 %38, 20
  %40 = sext i32 %39 to i64
  %41 = add i64 %36, 7
  %42 = add i64 %41, %40
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %37, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = ashr i32 %49, 1
  %51 = load atomic i32, i32* %43 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %37, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = lshr i32 %56, 1
  %58 = xor i32 %57, %50
  %59 = and i32 %58, 192
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61, !prof !5

61:                                               ; preds = %24
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.442, i64 0, i64 0)) #16
  unreachable

62:                                               ; preds = %24
  %63 = and i32 %50, 255
  %64 = trunc i64 %35 to i32
  %65 = shl i32 %64, 8
  %66 = or i32 %63, %65
  %67 = shl i32 %66, 1
  store atomic volatile i32 %67, i32* %55 release, align 4
  %68 = and i32 %56, 16
  %69 = icmp eq i32 %68, 0
  %70 = and i32 %49, 16
  %71 = icmp ne i32 %70, 0
  %72 = and i1 %71, %69
  br i1 %72, label %73, label %79

73:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %74 = add i64 %53, 15
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %37, %77
  store i64 %78, i64* %20, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %3, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %79

79:                                               ; preds = %62, %73
  %80 = icmp slt i64 %35, %21
  br i1 %80, label %81, label %22

81:                                               ; preds = %79
  %82 = load i64, i64* %11, align 8
  br label %24

83:                                               ; preds = %22, %2
  %84 = phi i32 [ %8, %2 ], [ %23, %22 ]
  ret i32 %84
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE22next_enumeration_indexEv(%"class.v8::internal::BaseNameDictionary.1239"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary.1239", %"class.v8::internal::BaseNameDictionary.1239"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 19
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE16IterationIndicesEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.v8::internal::EnumIndexComparator.1242", align 8
  %4 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %8, 1
  %10 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %4, i32 %9, i8 zeroext 0) #11
  %11 = load i64, i64* %1, align 8
  %12 = add i64 %11, 15
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = ashr i32 %14, 1
  %16 = sext i32 %15 to i64
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = add i64 %11, 7
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %64

22:                                               ; preds = %90, %2
  %23 = phi i32 [ 0, %2 ], [ %91, %90 ]
  %24 = load i64, i64* %10, align 8
  %25 = add i64 %24, 7
  %26 = sext i32 %23 to i64
  %27 = shl nsw i64 %26, 2
  %28 = add i64 %25, %27
  %29 = bitcast %"struct.v8::internal::EnumIndexComparator.1242"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1242", %"struct.v8::internal::EnumIndexComparator.1242"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %30, align 8
  call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %25, i64 %28, %"struct.v8::internal::EnumIndexComparator.1242"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %31 = icmp eq i32 %23, 0
  %32 = load i64, i64* %10, align 8
  br i1 %31, label %33, label %53

33:                                               ; preds = %22
  %34 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %35 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 1, i64 0
  br label %50

42:                                               ; preds = %36, %33
  %43 = and i64 %32, -262144
  %44 = or i64 %43, 16
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 16
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %50

50:                                               ; preds = %42, %40
  %51 = phi i64* [ %49, %42 ], [ %41, %40 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 29
  br label %62

53:                                               ; preds = %22
  %54 = add i64 %32, 3
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = ashr i32 %56, 1
  %58 = icmp sgt i32 %57, %23
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  %61 = sub nsw i32 %57, %23
  call void @_ZN2v88internal4Heap19RightTrimFixedArrayENS0_14FixedArrayBaseEi(%"class.v8::internal::Heap"* %60, i64 %32, i32 %61) #11
  br label %62

62:                                               ; preds = %50, %53, %59
  %63 = phi i64* [ %52, %50 ], [ %10, %53 ], [ %10, %59 ]
  ret i64* %63

64:                                               ; preds = %18, %90
  %65 = phi i32 [ 0, %18 ], [ %91, %90 ]
  %66 = phi i64 [ 0, %18 ], [ %92, %90 ]
  %67 = trunc i64 %66 to i32
  %68 = shl i32 %67, 2
  %69 = add i32 %68, 20
  %70 = sext i32 %69 to i64
  %71 = add i64 %19, %70
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = load i64, i64* %20, align 8
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %90, label %77

77:                                               ; preds = %64
  %78 = load i64, i64* %21, align 8
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %73, %79
  br i1 %80, label %90, label %81

81:                                               ; preds = %77
  %82 = load i64, i64* %10, align 8
  %83 = add nsw i32 %65, 1
  %84 = shl i32 %65, 2
  %85 = sext i32 %84 to i64
  %86 = add nsw i64 %85, 7
  %87 = add i64 %86, %82
  %88 = inttoptr i64 %87 to i32*
  %89 = shl i32 %67, 1
  store atomic volatile i32 %89, i32* %88 monotonic, align 4
  br label %90

90:                                               ; preds = %64, %77, %81
  %91 = phi i32 [ %83, %81 ], [ %65, %77 ], [ %65, %64 ]
  %92 = add i64 %66, 1
  %93 = icmp eq i64 %92, %16
  br i1 %93, label %22, label %64
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE26set_next_enumeration_indexEi(%"class.v8::internal::BaseNameDictionary.1239"*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = shl i32 %1, 1
  %4 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary.1239", %"class.v8::internal::BaseNameDictionary.1239"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 19
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 %3, i32* %7 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = tail call i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, i64* %3, i32 %4, %"class.v8::internal::InternalIndex"* %5)
  ret i64* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Ev(%"class.v8::internal::BaseNameDictionary.1239"*) unnamed_addr #0 comdat($_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary.1239", %"class.v8::internal::BaseNameDictionary.1239"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC2Em(%"class.v8::internal::BaseNameDictionary.1239"*, i64) unnamed_addr #5 comdat($_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEEC5Em) align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BaseNameDictionary.1239", %"class.v8::internal::BaseNameDictionary.1239"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3NewINS0_7IsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::Isolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 134217720
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %6, %11
  %17 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %18 = add nsw i32 %17, 5
  %19 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 46
  %21 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %19, i64* %20, i32 %18, i8 zeroext %2) #11
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i32*
  store atomic volatile i32 0, i32* %24 monotonic, align 4
  %25 = load i64, i64* %21, align 8
  %26 = add i64 %25, 11
  %27 = inttoptr i64 %26 to i32*
  store atomic volatile i32 0, i32* %27 monotonic, align 4
  %28 = load i64, i64* %21, align 8
  %29 = shl i32 %17, 1
  %30 = add i64 %28, 15
  %31 = inttoptr i64 %30 to i32*
  store atomic volatile i32 %29, i32* %31 monotonic, align 4
  %32 = load i64, i64* %21, align 8
  %33 = add i64 %32, 23
  %34 = inttoptr i64 %33 to i32*
  store atomic volatile i32 0, i32* %34 monotonic, align 4
  %35 = load i64, i64* %21, align 8
  %36 = add i64 %35, 19
  %37 = inttoptr i64 %36 to i32*
  store atomic volatile i32 2, i32* %37 monotonic, align 4
  ret i64* %21
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3NewINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_iNS0_14AllocationTypeENS0_15MinimumCapacityE(%"class.v8::internal::LocalIsolate"*, i32, i8 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = ashr i32 %1, 1
  %8 = add nsw i32 %7, %1
  %9 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %8) #11
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

11:                                               ; preds = %6, %4
  %12 = phi i32 [ %1, %4 ], [ %9, %6 ]
  %13 = icmp sgt i32 %12, 134217720
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %6, %11
  %16 = phi i32 [ %12, %11 ], [ 4, %6 ]
  %17 = add nsw i32 %16, 5
  %18 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1108"*
  %19 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 46
  %22 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"* %18, i64* %21, i32 %17, i8 zeroext %2) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  store atomic volatile i32 0, i32* %25 monotonic, align 4
  %26 = load i64, i64* %22, align 8
  %27 = add i64 %26, 11
  %28 = inttoptr i64 %27 to i32*
  store atomic volatile i32 0, i32* %28 monotonic, align 4
  %29 = load i64, i64* %22, align 8
  %30 = shl i32 %16, 1
  %31 = add i64 %29, 15
  %32 = inttoptr i64 %31 to i32*
  store atomic volatile i32 %30, i32* %32 monotonic, align 4
  %33 = load i64, i64* %22, align 8
  %34 = add i64 %33, 23
  %35 = inttoptr i64 %34 to i32*
  store atomic volatile i32 0, i32* %35 monotonic, align 4
  %36 = load i64, i64* %22, align 8
  %37 = add i64 %36, 19
  %38 = inttoptr i64 %37 to i32*
  store atomic volatile i32 2, i32* %38 monotonic, align 4
  ret i64* %22
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE31AddNoUpdateNextEnumerationIndexINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #0 comdat align 2 {
  %7 = tail call i64* @_ZN2v88internal10DictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddINS0_12LocalIsolateEEENS0_6HandleIS2_EEPT_S8_NS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::LocalIsolate"* %0, i64* %1, i64* %2, i64* %3, i32 %4, %"class.v8::internal::InternalIndex"* %5)
  ret i64* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = alloca %"class.v8::internal::Context", align 8
  %5 = alloca %"class.v8::internal::StackFrameIterator", align 8
  %6 = alloca %"class.std::__1::vector.1243", align 8
  %7 = trunc i64 %1 to i8
  %8 = lshr i64 %1, 32
  %9 = trunc i64 %8 to i32
  %10 = icmp eq i8 %7, 0
  br i1 %10, label %11, label %71

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = bitcast %"class.v8::internal::Context"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %16, align 8
  %17 = call i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = call zeroext i1 @_ZNK2v88internal9ScopeInfo13language_modeEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br i1 %19, label %71, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.v8::internal::StackFrameIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %21) #11
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %5, %"class.v8::internal::Isolate"* %0) #11
  %22 = getelementptr inbounds %"class.v8::internal::StackFrameIterator", %"class.v8::internal::StackFrameIterator"* %5, i64 0, i32 0, i32 23
  %23 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %22, align 8
  %24 = icmp eq %"class.v8::internal::StackFrame"* %23, null
  br i1 %24, label %69, label %25

25:                                               ; preds = %20, %66
  %26 = phi %"class.v8::internal::StackFrame"* [ %67, %66 ], [ %23, %20 ]
  %27 = bitcast %"class.v8::internal::StackFrame"* %26 to i32 (%"class.v8::internal::StackFrame"*)***
  %28 = load i32 (%"class.v8::internal::StackFrame"*)**, i32 (%"class.v8::internal::StackFrame"*)*** %27, align 8
  %29 = load i32 (%"class.v8::internal::StackFrame"*)*, i32 (%"class.v8::internal::StackFrame"*)** %28, align 8
  %30 = call i32 %29(%"class.v8::internal::StackFrame"* nonnull %26) #11
  %31 = icmp eq i32 %30, 13
  br i1 %31, label %40, label %32

32:                                               ; preds = %25
  %33 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %22, align 8
  %34 = bitcast %"class.v8::internal::StackFrame"* %33 to i32 (%"class.v8::internal::StackFrame"*)***
  %35 = load i32 (%"class.v8::internal::StackFrame"*)**, i32 (%"class.v8::internal::StackFrame"*)*** %34, align 8
  %36 = load i32 (%"class.v8::internal::StackFrame"*)*, i32 (%"class.v8::internal::StackFrame"*)** %35, align 8
  %37 = call i32 %36(%"class.v8::internal::StackFrame"* %33) #11
  %38 = add i32 %37, -11
  %39 = icmp ult i32 %38, 2
  br i1 %39, label %40, label %66

40:                                               ; preds = %32, %25
  %41 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %22, align 8
  %42 = bitcast %"class.v8::internal::StackFrame"* %41 to %"class.v8::internal::JavaScriptFrame"*
  %43 = bitcast %"class.std::__1::vector.1243"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #11
  %44 = bitcast %"class.v8::internal::StackFrame"* %41 to void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1243"*)***
  %45 = load void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1243"*)**, void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1243"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1243"*)*, void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1243"*)** %45, i64 20
  %47 = load void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1243"*)*, void (%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1243"*)** %46, align 8
  call void %47(%"class.v8::internal::JavaScriptFrame"* %42, %"class.std::__1::vector.1243"* nonnull %6) #11
  %48 = getelementptr inbounds %"class.std::__1::vector.1243", %"class.std::__1::vector.1243"* %6, i64 0, i32 0, i32 1
  %49 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 27
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = getelementptr inbounds %"class.std::__1::vector.1243", %"class.std::__1::vector.1243"* %6, i64 0, i32 0, i32 0
  %56 = load %"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::SharedFunctionInfo"** %55, align 8
  %57 = icmp eq %"class.v8::internal::SharedFunctionInfo"* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %40
  %59 = ptrtoint %"class.v8::internal::SharedFunctionInfo"* %56 to i64
  %60 = bitcast %"class.v8::internal::SharedFunctionInfo"** %48 to i64*
  store i64 %59, i64* %60, align 8
  %61 = bitcast %"class.v8::internal::SharedFunctionInfo"* %56 to i8*
  call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %40, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  %63 = lshr i32 %54, 6
  %64 = and i32 %63, 1
  %65 = xor i32 %64, 1
  br label %69

66:                                               ; preds = %32
  call void @_ZN2v88internal18StackFrameIterator7AdvanceEv(%"class.v8::internal::StackFrameIterator"* nonnull %5) #11
  %67 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %22, align 8
  %68 = icmp eq %"class.v8::internal::StackFrame"* %67, null
  br i1 %68, label %69, label %25

69:                                               ; preds = %66, %20, %62
  %70 = phi i32 [ %65, %62 ], [ 1, %20 ], [ 1, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %21) #11
  br label %71

71:                                               ; preds = %2, %69, %11
  %72 = phi i32 [ %70, %69 ], [ 0, %11 ], [ %9, %2 ]
  ret i32 %72
}

declare i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal9ScopeInfo13language_modeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #1

declare void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #1

declare void @_ZN2v88internal18StackFrameIterator7AdvanceEv(%"class.v8::internal::StackFrameIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal22ComparisonResultToBoolENS0_9OperationENS0_16ComparisonResultE(i32, i32) local_unnamed_addr #0 {
  switch i32 %0, label %12 [
    i32 18, label %3
    i32 19, label %5
    i32 20, label %7
    i32 21, label %9
  ]

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0
  br label %13

5:                                                ; preds = %2
  %6 = icmp ult i32 %1, 2
  br label %13

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, 2
  br label %13

9:                                                ; preds = %2
  %10 = add i32 %1, -1
  %11 = icmp ult i32 %10, 2
  br label %13

12:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

13:                                               ; preds = %9, %7, %5, %3
  %14 = phi i1 [ %11, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_12InstanceTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i16 zeroext) local_unnamed_addr #0 {
  switch i16 %1, label %451 [
    i16 0, label %3
    i16 2, label %5
    i16 8, label %7
    i16 10, label %9
    i16 18, label %11
    i16 26, label %13
    i16 32, label %15
    i16 33, label %17
    i16 34, label %19
    i16 35, label %21
    i16 37, label %23
    i16 40, label %25
    i16 41, label %27
    i16 42, label %29
    i16 43, label %31
    i16 45, label %33
    i16 50, label %35
    i16 58, label %37
    i16 64, label %39
    i16 65, label %41
    i16 66, label %43
    i16 67, label %45
    i16 68, label %47
    i16 69, label %49
    i16 70, label %51
    i16 71, label %53
    i16 72, label %55
    i16 73, label %57
    i16 74, label %59
    i16 75, label %61
    i16 76, label %63
    i16 77, label %65
    i16 78, label %67
    i16 79, label %69
    i16 80, label %71
    i16 81, label %73
    i16 82, label %75
    i16 83, label %77
    i16 84, label %79
    i16 85, label %81
    i16 86, label %83
    i16 87, label %85
    i16 88, label %87
    i16 89, label %89
    i16 90, label %91
    i16 91, label %93
    i16 92, label %95
    i16 93, label %97
    i16 94, label %99
    i16 95, label %101
    i16 96, label %103
    i16 97, label %105
    i16 98, label %107
    i16 99, label %109
    i16 100, label %111
    i16 101, label %113
    i16 102, label %115
    i16 103, label %117
    i16 104, label %119
    i16 105, label %121
    i16 106, label %123
    i16 107, label %125
    i16 108, label %127
    i16 109, label %129
    i16 110, label %131
    i16 111, label %133
    i16 112, label %135
    i16 113, label %137
    i16 114, label %139
    i16 115, label %141
    i16 116, label %143
    i16 117, label %145
    i16 118, label %147
    i16 119, label %149
    i16 120, label %151
    i16 121, label %153
    i16 122, label %155
    i16 123, label %157
    i16 124, label %159
    i16 125, label %161
    i16 126, label %163
    i16 127, label %165
    i16 128, label %167
    i16 129, label %169
    i16 130, label %171
    i16 131, label %173
    i16 132, label %175
    i16 133, label %177
    i16 134, label %179
    i16 135, label %181
    i16 136, label %183
    i16 137, label %185
    i16 138, label %187
    i16 139, label %189
    i16 140, label %191
    i16 141, label %193
    i16 142, label %195
    i16 143, label %197
    i16 144, label %199
    i16 145, label %201
    i16 146, label %203
    i16 147, label %205
    i16 148, label %207
    i16 149, label %209
    i16 150, label %211
    i16 151, label %213
    i16 152, label %215
    i16 153, label %217
    i16 154, label %219
    i16 155, label %221
    i16 156, label %223
    i16 157, label %225
    i16 158, label %227
    i16 159, label %229
    i16 160, label %231
    i16 161, label %233
    i16 162, label %235
    i16 163, label %237
    i16 164, label %239
    i16 165, label %241
    i16 166, label %243
    i16 167, label %245
    i16 168, label %247
    i16 169, label %249
    i16 170, label %251
    i16 171, label %253
    i16 172, label %255
    i16 173, label %257
    i16 174, label %259
    i16 175, label %261
    i16 176, label %263
    i16 177, label %265
    i16 178, label %267
    i16 179, label %269
    i16 180, label %271
    i16 181, label %273
    i16 182, label %275
    i16 183, label %277
    i16 184, label %279
    i16 185, label %281
    i16 186, label %283
    i16 187, label %285
    i16 188, label %287
    i16 1057, label %289
    i16 189, label %291
    i16 190, label %293
    i16 191, label %295
    i16 1040, label %297
    i16 1041, label %299
    i16 1042, label %301
    i16 1043, label %303
    i16 1044, label %305
    i16 1045, label %307
    i16 1046, label %309
    i16 1047, label %311
    i16 1048, label %313
    i16 1049, label %315
    i16 1050, label %317
    i16 1051, label %319
    i16 1052, label %321
    i16 1053, label %323
    i16 1054, label %325
    i16 1055, label %327
    i16 1056, label %329
    i16 1058, label %331
    i16 1059, label %333
    i16 1060, label %335
    i16 1061, label %337
    i16 1062, label %339
    i16 1063, label %341
    i16 1064, label %343
    i16 1065, label %345
    i16 1066, label %347
    i16 1067, label %349
    i16 1068, label %351
    i16 1069, label %353
    i16 1070, label %355
    i16 1071, label %357
    i16 1072, label %359
    i16 1073, label %361
    i16 1074, label %363
    i16 1075, label %365
    i16 1076, label %367
    i16 1077, label %369
    i16 1078, label %371
    i16 1079, label %373
    i16 1080, label %375
    i16 1081, label %377
    i16 1082, label %379
    i16 1083, label %381
    i16 1084, label %383
    i16 1085, label %385
    i16 1086, label %387
    i16 1087, label %389
    i16 1088, label %391
    i16 1089, label %393
    i16 1090, label %395
    i16 1091, label %397
    i16 1092, label %399
    i16 1093, label %401
    i16 1094, label %403
    i16 1095, label %405
    i16 1096, label %407
    i16 1097, label %409
    i16 1098, label %411
    i16 1099, label %413
    i16 1100, label %415
    i16 1101, label %417
    i16 1102, label %419
    i16 1103, label %421
    i16 1104, label %423
    i16 1105, label %425
    i16 1106, label %427
    i16 1107, label %429
    i16 1108, label %431
    i16 1109, label %433
    i16 1110, label %435
    i16 1111, label %437
    i16 1112, label %439
    i16 1113, label %441
    i16 1114, label %443
    i16 1115, label %445
    i16 1116, label %447
    i16 1117, label %449
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i64 24) #11
  br label %452

5:                                                ; preds = %2
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i64 33) #11
  br label %452

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i64 33) #11
  br label %452

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i64 42) #11
  br label %452

11:                                               ; preds = %2
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i64 42) #11
  br label %452

13:                                               ; preds = %2
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10, i64 0, i64 0), i64 51) #11
  br label %452

15:                                               ; preds = %2
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i64 11) #11
  br label %452

17:                                               ; preds = %2
  %18 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i64 16) #11
  br label %452

19:                                               ; preds = %2
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i64 20) #11
  br label %452

21:                                               ; preds = %2
  %22 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), i64 18) #11
  br label %452

23:                                               ; preds = %2
  %24 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i64 16) #11
  br label %452

25:                                               ; preds = %2
  %26 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i64 20) #11
  br label %452

27:                                               ; preds = %2
  %28 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i64 25) #11
  br label %452

29:                                               ; preds = %2
  %30 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i64 0, i64 0), i64 29) #11
  br label %452

31:                                               ; preds = %2
  %32 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0), i64 27) #11
  br label %452

33:                                               ; preds = %2
  %34 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), i64 25) #11
  br label %452

35:                                               ; preds = %2
  %36 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i64 0, i64 0), i64 29) #11
  br label %452

37:                                               ; preds = %2
  %38 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0), i64 38) #11
  br label %452

39:                                               ; preds = %2
  %40 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i64 11) #11
  br label %452

41:                                               ; preds = %2
  %42 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), i64 17) #11
  br label %452

43:                                               ; preds = %2
  %44 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i64 16) #11
  br label %452

45:                                               ; preds = %2
  %46 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i64 12) #11
  br label %452

47:                                               ; preds = %2
  %48 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27, i64 0, i64 0), i64 38) #11
  br label %452

49:                                               ; preds = %2
  %50 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0), i64 38) #11
  br label %452

51:                                               ; preds = %2
  %52 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i64 12) #11
  br label %452

53:                                               ; preds = %2
  %54 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i64 23) #11
  br label %452

55:                                               ; preds = %2
  %56 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i64 0, i64 0), i64 28) #11
  br label %452

57:                                               ; preds = %2
  %58 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i64 0, i64 0), i64 32) #11
  br label %452

59:                                               ; preds = %2
  %60 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i64 26) #11
  br label %452

61:                                               ; preds = %2
  %62 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i64 0, i64 0), i64 19) #11
  br label %452

63:                                               ; preds = %2
  %64 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.35, i64 0, i64 0), i64 38) #11
  br label %452

65:                                               ; preds = %2
  %66 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.36, i64 0, i64 0), i64 37) #11
  br label %452

67:                                               ; preds = %2
  %68 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0), i64 18) #11
  br label %452

69:                                               ; preds = %2
  %70 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0), i64 18) #11
  br label %452

71:                                               ; preds = %2
  %72 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.39, i64 0, i64 0), i64 38) #11
  br label %452

73:                                               ; preds = %2
  %74 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.40, i64 0, i64 0), i64 17) #11
  br label %452

75:                                               ; preds = %2
  %76 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i64 0, i64 0), i64 18) #11
  br label %452

77:                                               ; preds = %2
  %78 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i64 27) #11
  br label %452

79:                                               ; preds = %2
  %80 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.43, i64 0, i64 0), i64 25) #11
  br label %452

81:                                               ; preds = %2
  %82 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i64 0, i64 0), i64 22) #11
  br label %452

83:                                               ; preds = %2
  %84 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i64 0, i64 0), i64 18) #11
  br label %452

85:                                               ; preds = %2
  %86 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i64 0, i64 0), i64 18) #11
  br label %452

87:                                               ; preds = %2
  %88 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i64 0, i64 0), i64 28) #11
  br label %452

89:                                               ; preds = %2
  %90 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i64 0, i64 0), i64 23) #11
  br label %452

91:                                               ; preds = %2
  %92 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i64 20) #11
  br label %452

93:                                               ; preds = %2
  %94 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i64 0, i64 0), i64 34) #11
  br label %452

95:                                               ; preds = %2
  %96 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0), i64 18) #11
  br label %452

97:                                               ; preds = %2
  %98 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i64 0, i64 0), i64 28) #11
  br label %452

99:                                               ; preds = %2
  %100 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i64 0, i64 0), i64 18) #11
  br label %452

101:                                              ; preds = %2
  %102 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i64 0, i64 0), i64 16) #11
  br label %452

103:                                              ; preds = %2
  %104 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55, i64 0, i64 0), i64 21) #11
  br label %452

105:                                              ; preds = %2
  %106 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.56, i64 0, i64 0), i64 27) #11
  br label %452

107:                                              ; preds = %2
  %108 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i64 22) #11
  br label %452

109:                                              ; preds = %2
  %110 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58, i64 0, i64 0), i64 20) #11
  br label %452

111:                                              ; preds = %2
  %112 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), i64 15) #11
  br label %452

113:                                              ; preds = %2
  %114 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i64 0, i64 0), i64 15) #11
  br label %452

115:                                              ; preds = %2
  %116 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i64 0, i64 0), i64 18) #11
  br label %452

117:                                              ; preds = %2
  %118 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.62, i64 0, i64 0), i64 32) #11
  br label %452

119:                                              ; preds = %2
  %120 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.63, i64 0, i64 0), i64 21) #11
  br label %452

121:                                              ; preds = %2
  %122 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i64 0, i64 0), i64 21) #11
  br label %452

123:                                              ; preds = %2
  %124 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i64 19) #11
  br label %452

125:                                              ; preds = %2
  %126 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i64 0, i64 0), i64 23) #11
  br label %452

127:                                              ; preds = %2
  %128 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.67, i64 0, i64 0), i64 21) #11
  br label %452

129:                                              ; preds = %2
  %130 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.68, i64 0, i64 0), i64 31) #11
  br label %452

131:                                              ; preds = %2
  %132 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69, i64 0, i64 0), i64 19) #11
  br label %452

133:                                              ; preds = %2
  %134 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0), i64 36) #11
  br label %452

135:                                              ; preds = %2
  %136 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0), i64 11) #11
  br label %452

137:                                              ; preds = %2
  %138 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.72, i64 0, i64 0), i64 34) #11
  br label %452

139:                                              ; preds = %2
  %140 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i64 0, i64 0), i64 21) #11
  br label %452

141:                                              ; preds = %2
  %142 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.74, i64 0, i64 0), i64 32) #11
  br label %452

143:                                              ; preds = %2
  %144 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i64 11) #11
  br label %452

145:                                              ; preds = %2
  %146 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.76, i64 0, i64 0), i64 23) #11
  br label %452

147:                                              ; preds = %2
  %148 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.77, i64 0, i64 0), i64 33) #11
  br label %452

149:                                              ; preds = %2
  %150 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.78, i64 0, i64 0), i64 16) #11
  br label %452

151:                                              ; preds = %2
  %152 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i64 0, i64 0), i64 15) #11
  br label %452

153:                                              ; preds = %2
  %154 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.80, i64 0, i64 0), i64 25) #11
  br label %452

155:                                              ; preds = %2
  %156 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.81, i64 0, i64 0), i64 22) #11
  br label %452

157:                                              ; preds = %2
  %158 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i64 0, i64 0), i64 20) #11
  br label %452

159:                                              ; preds = %2
  %160 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i64 0, i64 0), i64 22) #11
  br label %452

161:                                              ; preds = %2
  %162 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.84, i64 0, i64 0), i64 21) #11
  br label %452

163:                                              ; preds = %2
  %164 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.85, i64 0, i64 0), i64 21) #11
  br label %452

165:                                              ; preds = %2
  %166 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i64 0, i64 0), i64 28) #11
  br label %452

167:                                              ; preds = %2
  %168 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.87, i64 0, i64 0), i64 29) #11
  br label %452

169:                                              ; preds = %2
  %170 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.88, i64 0, i64 0), i64 32) #11
  br label %452

171:                                              ; preds = %2
  %172 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.89, i64 0, i64 0), i64 35) #11
  br label %452

173:                                              ; preds = %2
  %174 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.90, i64 0, i64 0), i64 25) #11
  br label %452

175:                                              ; preds = %2
  %176 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.91, i64 0, i64 0), i64 15) #11
  br label %452

177:                                              ; preds = %2
  %178 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0), i64 19) #11
  br label %452

179:                                              ; preds = %2
  %180 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.93, i64 0, i64 0), i64 23) #11
  br label %452

181:                                              ; preds = %2
  %182 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.94, i64 0, i64 0), i64 37) #11
  br label %452

183:                                              ; preds = %2
  %184 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.95, i64 0, i64 0), i64 30) #11
  br label %452

185:                                              ; preds = %2
  %186 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i64 0, i64 0), i64 18) #11
  br label %452

187:                                              ; preds = %2
  %188 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.97, i64 0, i64 0), i64 18) #11
  br label %452

189:                                              ; preds = %2
  %190 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.98, i64 0, i64 0), i64 18) #11
  br label %452

191:                                              ; preds = %2
  %192 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.99, i64 0, i64 0), i64 27) #11
  br label %452

193:                                              ; preds = %2
  %194 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.100, i64 0, i64 0), i64 17) #11
  br label %452

195:                                              ; preds = %2
  %196 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.101, i64 0, i64 0), i64 21) #11
  br label %452

197:                                              ; preds = %2
  %198 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i64 0, i64 0), i64 19) #11
  br label %452

199:                                              ; preds = %2
  %200 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.103, i64 0, i64 0), i64 19) #11
  br label %452

201:                                              ; preds = %2
  %202 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.104, i64 0, i64 0), i64 19) #11
  br label %452

203:                                              ; preds = %2
  %204 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.105, i64 0, i64 0), i64 17) #11
  br label %452

205:                                              ; preds = %2
  %206 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.106, i64 0, i64 0), i64 28) #11
  br label %452

207:                                              ; preds = %2
  %208 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.107, i64 0, i64 0), i64 23) #11
  br label %452

209:                                              ; preds = %2
  %210 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.108, i64 0, i64 0), i64 24) #11
  br label %452

211:                                              ; preds = %2
  %212 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i64 0, i64 0), i64 27) #11
  br label %452

213:                                              ; preds = %2
  %214 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.110, i64 0, i64 0), i64 27) #11
  br label %452

215:                                              ; preds = %2
  %216 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.111, i64 0, i64 0), i64 34) #11
  br label %452

217:                                              ; preds = %2
  %218 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.112, i64 0, i64 0), i64 21) #11
  br label %452

219:                                              ; preds = %2
  %220 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i64 0, i64 0), i64 28) #11
  br label %452

221:                                              ; preds = %2
  %222 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.114, i64 0, i64 0), i64 23) #11
  br label %452

223:                                              ; preds = %2
  %224 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.115, i64 0, i64 0), i64 21) #11
  br label %452

225:                                              ; preds = %2
  %226 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.116, i64 0, i64 0), i64 39) #11
  br label %452

227:                                              ; preds = %2
  %228 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.117, i64 0, i64 0), i64 42) #11
  br label %452

229:                                              ; preds = %2
  %230 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.118, i64 0, i64 0), i64 21) #11
  br label %452

231:                                              ; preds = %2
  %232 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i64 0, i64 0), i64 21) #11
  br label %452

233:                                              ; preds = %2
  %234 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.120, i64 0, i64 0), i64 9) #11
  br label %452

235:                                              ; preds = %2
  %236 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.121, i64 0, i64 0), i64 9) #11
  br label %452

237:                                              ; preds = %2
  %238 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.122, i64 0, i64 0), i64 24) #11
  br label %452

239:                                              ; preds = %2
  %240 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.123, i64 0, i64 0), i64 18) #11
  br label %452

241:                                              ; preds = %2
  %242 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.124, i64 0, i64 0), i64 24) #11
  br label %452

243:                                              ; preds = %2
  %244 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.125, i64 0, i64 0), i64 22) #11
  br label %452

245:                                              ; preds = %2
  %246 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.126, i64 0, i64 0), i64 20) #11
  br label %452

247:                                              ; preds = %2
  %248 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.127, i64 0, i64 0), i64 11) #11
  br label %452

249:                                              ; preds = %2
  %250 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.128, i64 0, i64 0), i64 15) #11
  br label %452

251:                                              ; preds = %2
  %252 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.129, i64 0, i64 0), i64 19) #11
  br label %452

253:                                              ; preds = %2
  %254 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.130, i64 0, i64 0), i64 40) #11
  br label %452

255:                                              ; preds = %2
  %256 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.131, i64 0, i64 0), i64 8) #11
  br label %452

257:                                              ; preds = %2
  %258 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.132, i64 0, i64 0), i64 21) #11
  br label %452

259:                                              ; preds = %2
  %260 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.133, i64 0, i64 0), i64 38) #11
  br label %452

261:                                              ; preds = %2
  %262 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.134, i64 0, i64 0), i64 18) #11
  br label %452

263:                                              ; preds = %2
  %264 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.135, i64 0, i64 0), i64 19) #11
  br label %452

265:                                              ; preds = %2
  %266 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.136, i64 0, i64 0), i64 18) #11
  br label %452

267:                                              ; preds = %2
  %268 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.137, i64 0, i64 0), i64 15) #11
  br label %452

269:                                              ; preds = %2
  %270 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.138, i64 0, i64 0), i64 25) #11
  br label %452

271:                                              ; preds = %2
  %272 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.139, i64 0, i64 0), i64 12) #11
  br label %452

273:                                              ; preds = %2
  %274 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i64 0, i64 0), i64 13) #11
  br label %452

275:                                              ; preds = %2
  %276 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.141, i64 0, i64 0), i64 15) #11
  br label %452

277:                                              ; preds = %2
  %278 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.142, i64 0, i64 0), i64 26) #11
  br label %452

279:                                              ; preds = %2
  %280 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.143, i64 0, i64 0), i64 20) #11
  br label %452

281:                                              ; preds = %2
  %282 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.144, i64 0, i64 0), i64 14) #11
  br label %452

283:                                              ; preds = %2
  %284 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.145, i64 0, i64 0), i64 15) #11
  br label %452

285:                                              ; preds = %2
  %286 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.146, i64 0, i64 0), i64 16) #11
  br label %452

287:                                              ; preds = %2
  %288 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.147, i64 0, i64 0), i64 13) #11
  br label %452

289:                                              ; preds = %2
  %290 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i64 0, i64 0), i64 14) #11
  br label %452

291:                                              ; preds = %2
  %292 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.149, i64 0, i64 0), i64 21) #11
  br label %452

293:                                              ; preds = %2
  %294 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.150, i64 0, i64 0), i64 20) #11
  br label %452

295:                                              ; preds = %2
  %296 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.151, i64 0, i64 0), i64 24) #11
  br label %452

297:                                              ; preds = %2
  %298 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.152, i64 0, i64 0), i64 26) #11
  br label %452

299:                                              ; preds = %2
  %300 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.153, i64 0, i64 0), i64 25) #11
  br label %452

301:                                              ; preds = %2
  %302 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.154, i64 0, i64 0), i64 32) #11
  br label %452

303:                                              ; preds = %2
  %304 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.155, i64 0, i64 0), i64 26) #11
  br label %452

305:                                              ; preds = %2
  %306 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.156, i64 0, i64 0), i64 30) #11
  br label %452

307:                                              ; preds = %2
  %308 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.157, i64 0, i64 0), i64 24) #11
  br label %452

309:                                              ; preds = %2
  %310 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.158, i64 0, i64 0), i64 25) #11
  br label %452

311:                                              ; preds = %2
  %312 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.159, i64 0, i64 0), i64 25) #11
  br label %452

313:                                              ; preds = %2
  %314 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.160, i64 0, i64 0), i64 30) #11
  br label %452

315:                                              ; preds = %2
  %316 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.161, i64 0, i64 0), i64 21) #11
  br label %452

317:                                              ; preds = %2
  %318 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.162, i64 0, i64 0), i64 33) #11
  br label %452

319:                                              ; preds = %2
  %320 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.163, i64 0, i64 0), i64 29) #11
  br label %452

321:                                              ; preds = %2
  %322 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.164, i64 0, i64 0), i64 24) #11
  br label %452

323:                                              ; preds = %2
  %324 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.165, i64 0, i64 0), i64 29) #11
  br label %452

325:                                              ; preds = %2
  %326 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.166, i64 0, i64 0), i64 30) #11
  br label %452

327:                                              ; preds = %2
  %328 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.167, i64 0, i64 0), i64 24) #11
  br label %452

329:                                              ; preds = %2
  %330 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.168, i64 0, i64 0), i64 18) #11
  br label %452

331:                                              ; preds = %2
  %332 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.169, i64 0, i64 0), i64 22) #11
  br label %452

333:                                              ; preds = %2
  %334 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.170, i64 0, i64 0), i64 16) #11
  br label %452

335:                                              ; preds = %2
  %336 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.171, i64 0, i64 0), i64 37) #11
  br label %452

337:                                              ; preds = %2
  %338 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.172, i64 0, i64 0), i64 38) #11
  br label %452

339:                                              ; preds = %2
  %340 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.173, i64 0, i64 0), i64 36) #11
  br label %452

341:                                              ; preds = %2
  %342 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.174, i64 0, i64 0), i64 36) #11
  br label %452

343:                                              ; preds = %2
  %344 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.175, i64 0, i64 0), i64 34) #11
  br label %452

345:                                              ; preds = %2
  %346 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.176, i64 0, i64 0), i64 34) #11
  br label %452

347:                                              ; preds = %2
  %348 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.177, i64 0, i64 0), i64 33) #11
  br label %452

349:                                              ; preds = %2
  %350 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.178, i64 0, i64 0), i64 35) #11
  br label %452

351:                                              ; preds = %2
  %352 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.179, i64 0, i64 0), i64 35) #11
  br label %452

353:                                              ; preds = %2
  %354 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.180, i64 0, i64 0), i64 42) #11
  br label %452

355:                                              ; preds = %2
  %356 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.181, i64 0, i64 0), i64 34) #11
  br label %452

357:                                              ; preds = %2
  %358 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.182, i64 0, i64 0), i64 25) #11
  br label %452

359:                                              ; preds = %2
  %360 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.183, i64 0, i64 0), i64 27) #11
  br label %452

361:                                              ; preds = %2
  %362 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.184, i64 0, i64 0), i64 27) #11
  br label %452

363:                                              ; preds = %2
  %364 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.185, i64 0, i64 0), i64 24) #11
  br label %452

365:                                              ; preds = %2
  %366 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.186, i64 0, i64 0), i64 30) #11
  br label %452

367:                                              ; preds = %2
  %368 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i64 26) #11
  br label %452

369:                                              ; preds = %2
  %370 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.188, i64 0, i64 0), i64 30) #11
  br label %452

371:                                              ; preds = %2
  %372 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i64 26) #11
  br label %452

373:                                              ; preds = %2
  %374 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.190, i64 0, i64 0), i64 17) #11
  br label %452

375:                                              ; preds = %2
  %376 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.191, i64 0, i64 0), i64 19) #11
  br label %452

377:                                              ; preds = %2
  %378 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.192, i64 0, i64 0), i64 11) #11
  br label %452

379:                                              ; preds = %2
  %380 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.193, i64 0, i64 0), i64 11) #11
  br label %452

381:                                              ; preds = %2
  %382 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.194, i64 0, i64 0), i64 16) #11
  br label %452

383:                                              ; preds = %2
  %384 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.195, i64 0, i64 0), i64 16) #11
  br label %452

385:                                              ; preds = %2
  %386 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.196, i64 0, i64 0), i64 13) #11
  br label %452

387:                                              ; preds = %2
  %388 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.197, i64 0, i64 0), i64 20) #11
  br label %452

389:                                              ; preds = %2
  %390 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.198, i64 0, i64 0), i64 22) #11
  br label %452

391:                                              ; preds = %2
  %392 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.199, i64 0, i64 0), i64 32) #11
  br label %452

393:                                              ; preds = %2
  %394 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.200, i64 0, i64 0), i64 16) #11
  br label %452

395:                                              ; preds = %2
  %396 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.201, i64 0, i64 0), i64 32) #11
  br label %452

397:                                              ; preds = %2
  %398 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.202, i64 0, i64 0), i64 12) #11
  br label %452

399:                                              ; preds = %2
  %400 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.203, i64 0, i64 0), i64 24) #11
  br label %452

401:                                              ; preds = %2
  %402 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.204, i64 0, i64 0), i64 21) #11
  br label %452

403:                                              ; preds = %2
  %404 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.205, i64 0, i64 0), i64 13) #11
  br label %452

405:                                              ; preds = %2
  %406 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.206, i64 0, i64 0), i64 29) #11
  br label %452

407:                                              ; preds = %2
  %408 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.207, i64 0, i64 0), i64 19) #11
  br label %452

409:                                              ; preds = %2
  %410 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.208, i64 0, i64 0), i64 14) #11
  br label %452

411:                                              ; preds = %2
  %412 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.209, i64 0, i64 0), i64 22) #11
  br label %452

413:                                              ; preds = %2
  %414 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.210, i64 0, i64 0), i64 21) #11
  br label %452

415:                                              ; preds = %2
  %416 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.211, i64 0, i64 0), i64 20) #11
  br label %452

417:                                              ; preds = %2
  %418 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.212, i64 0, i64 0), i64 15) #11
  br label %452

419:                                              ; preds = %2
  %420 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.213, i64 0, i64 0), i64 15) #11
  br label %452

421:                                              ; preds = %2
  %422 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.214, i64 0, i64 0), i64 31) #11
  br label %452

423:                                              ; preds = %2
  %424 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.215, i64 0, i64 0), i64 28) #11
  br label %452

425:                                              ; preds = %2
  %426 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.216, i64 0, i64 0), i64 24) #11
  br label %452

427:                                              ; preds = %2
  %428 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.217, i64 0, i64 0), i64 17) #11
  br label %452

429:                                              ; preds = %2
  %430 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.218, i64 0, i64 0), i64 16) #11
  br label %452

431:                                              ; preds = %2
  %432 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.219, i64 0, i64 0), i64 23) #11
  br label %452

433:                                              ; preds = %2
  %434 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.220, i64 0, i64 0), i64 25) #11
  br label %452

435:                                              ; preds = %2
  %436 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.221, i64 0, i64 0), i64 16) #11
  br label %452

437:                                              ; preds = %2
  %438 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.222, i64 0, i64 0), i64 26) #11
  br label %452

439:                                              ; preds = %2
  %440 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.223, i64 0, i64 0), i64 23) #11
  br label %452

441:                                              ; preds = %2
  %442 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.224, i64 0, i64 0), i64 25) #11
  br label %452

443:                                              ; preds = %2
  %444 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.225, i64 0, i64 0), i64 23) #11
  br label %452

445:                                              ; preds = %2
  %446 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.226, i64 0, i64 0), i64 23) #11
  br label %452

447:                                              ; preds = %2
  %448 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.227, i64 0, i64 0), i64 22) #11
  br label %452

449:                                              ; preds = %2
  %450 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.228, i64 0, i64 0), i64 22) #11
  br label %452

451:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

452:                                              ; preds
  %453 = phi %"class.std::__1::basic_ostream"* [ %450, %449 ], [ %448, %447 ], [ %446, %445 ], [ %444, %443 ], [ %442, %441 ], [ %440, %439 ], [ %438, %437 ], [ %436, %435 ], [ %434, %433 ], [ %432, %431 ], [ %430, %429 ], [ %428, %427 ], [ %426, %425 ], [ %424, %423 ], [ %422, %421 ], [ %420, %419 ], [ %418, %417 ], [ %416, %415 ], [ %414, %413 ], [ %412, %411 ], [ %410, %409 ], [ %408, %407 ], [ %406, %405 ], [ %404, %403 ], [ %402, %401 ], [ %400, %399 ], [ %398, %397 ], [ %396, %395 ], [ %394, %393 ], [ %392, %391 ], [ %390, %389 ], [ %388, %387 ], [ %386, %385 ], [ %384, %383 ], [ %382, %381 ], [ %380, %379 ], [ %378, %377 ], [ %376, %375 ], [ %374, %373 ], [ %372, %371 ], [ %370, %369 ], [ %368, %367 ], [ %366, %365 ], [ %364, %363 ], [ %362, %361 ], [ %360, %359 ], [ %358, %357 ], [ %356, %355 ], [ %354, %353 ], [ %352, %351 ], [ %350, %349 ], [ %348, %347 ], [ %346, %345 ], [ %344, %343 ], [ %342, %341 ], [ %340, %339 ], [ %338, %337 ], [ %336, %335 ], [ %334, %333 ], [ %332, %331 ], [ %330, %329 ], [ %328, %327 ], [ %326, %325 ], [ %324, %323 ], [ %322, %321 ], [ %320, %319 ], [ %318, %317 ], [ %316, %315 ], [ %314, %313 ], [ %312, %311 ], [ %310, %309 ], [ %308, %307 ], [ %306, %305 ], [ %304, %303 ], [ %302, %301 ], [ %300, %299 ], [ %298, %297 ], [ %296, %295 ], [ %294, %293 ], [ %292, %291 ], [ %290, %289 ], [ %288, %287 ], [ %286, %285 ], [ %284, %283 ], [ %282, %281 ], [ %280, %279 ], [ %278, %277 ], [ %276, %275 ], [ %274, %273 ], [ %272, %271 ], [ %270, %269 ], [ %268, %267 ], [ %266, %265 ], [ %264, %263 ], [ %262, %261 ], [ %260, %259 ], [ %258, %257 ], [ %256, %255 ], [ %254, %253 ], [ %252, %251 ], [ %250, %249 ], [ %248, %247 ], [ %246, %245 ], [ %244, %243 ], [ %242, %241 ], [ %240, %239 ], [ %238, %237 ], [ %236, %235 ], [ %234, %233 ], [ %232, %231 ], [ %230, %229 ], [ %228, %227 ], [ %226, %225 ], [ %224, %223 ], [ %222, %221 ], [ %220, %219 ], [ %218, %217 ], [ %216, %215 ], [ %214, %213 ], [ %212, %211 ], [ %210, %209 ], [ %208, %207 ], [ %206, %205 ], [ %204, %203 ], [ %202, %201 ], [ %200, %199 ], [ %198, %197 ], [ %196, %195 ], [ %194, %193 ], [ %192, %191 ], [ %190, %189 ], [ %188, %187 ], [ %186, %185 ], [ %184, %183 ], [ %182, %181 ], [ %180, %179 ], [ %178, %177 ], [ %176, %175 ], [ %174, %173 ], [ %172, %171 ], [ %170, %169 ], [ %168, %167 ], [ %166, %165 ], [ %164, %163 ], [ %162, %161 ], [ %160, %159 ], [ %158, %157 ], [ %156, %155 ], [ %154, %153 ], [ %152, %151 ], [ %150, %149 ], [ %148, %147 ], [ %146, %145 ], [ %144, %143 ], [ %142, %141 ], [ %140, %139 ], [ %138, %137 ], [ %136, %135 ], [ %134, %133 ], [ %132, %131 ], [ %130, %129 ], [ %128, %127 ], [ %126, %125 ], [ %124, %123 ], [ %122, %121 ], [ %120, %119 ], [ %118, %117 ], [ %116, %115 ], [ %114, %113 ], [ %112, %111 ], [ %110, %109 ], [ %108, %107 ], [ %106, %105 ], [ %104, %103 ], [ %102, %101 ], [ %100, %99 ], [ %98, %97 ], [ %96, %95 ], [ %94, %93 ], [ %92, %91 ], [ %90, %89 ], [ %88, %87 ], [ %86, %85 ], [ %84, %83 ], [ %82, %81 ], [ %80, %79 ], [ %78, %77 ], [ %76, %75 ], [ %74, %73 ], [ %72, %71 ], [ %70, %69 ], [ %68, %67 ], [ %66, %65 ], [ %64, %63 ], [ %62, %61 ], [ %60, %59 ], [ %58, %57 ], [ %56, %55 ], [ %54, %53 ], [ %52, %51 ], [ %50, %49 ], [ %48, %47 ], [ %46, %45 ], [ %44, %43 ], [ %42, %41 ], [ %40, %39 ], [ %38, %37 ], [ %36, %35 ], [ %34, %33 ], [ %32, %31 ], [ %30, %29 ], [ %28, %27 ], [ %26, %25 ], [ %24, %23 ], [ %22, %21 ], [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"class.std::__1::basic_ostream"* %453
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_16PropertyCellTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #0 {
  switch i32 %1, label %11 [
    i32 1, label %3
    i32 2, label %5
    i32 3, label %7
    i32 0, label %9
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.229, i64 0, i64 0), i64 9) #11
  br label %12

5:                                                ; preds = %2
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.230, i64 0, i64 0), i64 8) #11
  br label %12

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.231, i64 0, i64 0), i64 12) #11
  br label %12

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.232, i64 0, i64 0), i64 7) #11
  br label %12

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

12:                                               ; preds = %9, %7, %5, %3
  %13 = phi %"class.std::__1::basic_ostream"* [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"class.std::__1::basic_ostream"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"* nocapture readonly, %"class.v8::internal::Isolate"*, i8) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8 %2, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call i64* @_ZN2v88internal9FieldType4NoneEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %61

7:                                                ; preds = %3
  %8 = load i8, i8* @_ZN2v88internal22FLAG_track_field_typesE, align 1, !range !2
  %9 = icmp ne i8 %8, 0
  %10 = icmp eq i8 %2, 3
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %59

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %59, label %17

17:                                               ; preds = %12
  %18 = and i64 %14, -4294967296
  %19 = add i64 %14, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %25 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %26 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %17
  %28 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %25, i64 %23) #11
  %29 = load i64, i64* %28, align 8
  br label %43

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %32, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %38

38:                                               ; preds = %36, %30
  %39 = phi i64* [ %37, %36 ], [ %32, %30 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %31, align 8
  store i64 %23, i64* %39, align 8
  br label %43

43:                                               ; preds = %27, %38
  %44 = phi i64 [ %29, %27 ], [ %23, %38 ]
  %45 = phi i64* [ %28, %27 ], [ %39, %38 ]
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 acquire, align 4
  %49 = and i32 %48, 33554432
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %43
  %52 = load i64, i64* %45, align 8
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp ugt i16 %55, 185
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = tail call i64* @_ZN2v88internal9FieldType5ClassENS0_6HandleINS0_3MapEEEPNS0_7IsolateE(i64* %45, %"class.v8::internal::Isolate"* %1) #11
  br label %61

59:                                               ; preds = %12, %7, %43, %51
  %60 = tail call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %61

61:                                               ; preds = %57, %59, %5
  %62 = phi i64* [ %6, %5 ], [ %60, %59 ], [ %58, %57 ]
  ret i64* %62
}

declare i64* @_ZN2v88internal9FieldType4NoneEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal9FieldType5ClassENS0_6HandleINS0_3MapEEEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object13NewStorageForEPNS0_7IsolateENS0_6HandleIS1_EENS0_14RepresentationE(%"class.v8::internal::Isolate"*, i64*, i8) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8 %2, 2
  br i1 %4, label %5, label %54

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %7 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %6) #11
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 3
  %10 = inttoptr i64 %9 to i64*
  store i64 -2251799814209537, i64* %10, align 1
  %11 = load i64, i64* %1, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 3
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %11 to i32
  %15 = trunc i64 %13 to i32
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %5
  %18 = load i64, i64* %7, align 8
  %19 = add i64 %18, 3
  %20 = inttoptr i64 %19 to i64*
  store i64 -2251799814209537, i64* %20, align 1
  br label %54

21:                                               ; preds = %5
  %22 = and i64 %11, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = and i64 %11, -4294967296
  %26 = add i64 %11, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 66
  %35 = load i64, i64* %7, align 8
  %36 = add i64 %11, 3
  br i1 %34, label %37, label %46

37:                                               ; preds = %24
  %38 = inttoptr i64 %36 to i64*
  %39 = load i64, i64* %38, align 1
  %40 = add i64 %35, 3
  %41 = inttoptr i64 %40 to i64*
  store i64 %39, i64* %41, align 1
  br label %54

42:                                               ; preds = %21
  %43 = load i64, i64* %7, align 8
  %44 = ashr i32 %14, 1
  %45 = sitofp i32 %44 to double
  br label %49

46:                                               ; preds = %24
  %47 = inttoptr i64 %36 to double*
  %48 = load double, double* %47, align 1
  br label %49

49:                                               ; preds = %42, %46
  %50 = phi i64 [ %43, %42 ], [ %35, %46 ]
  %51 = phi double [ %45, %42 ], [ %48, %46 ]
  %52 = add i64 %50, 3
  %53 = inttoptr i64 %52 to double*
  store double %51, double* %53, align 1
  br label %54

54:                                               ; preds = %17, %49, %37, %3
  %55 = phi i64* [ %1, %3 ], [ %7, %37 ], [ %7, %49 ], [ %7, %17 ]
  ret i64* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object11WrapForReadEPNS0_7IsolateENS0_6HandleIS1_EENS0_14RepresentationE(%"class.v8::internal::Isolate"*, i64*, i8) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8 %2, 2
  br i1 %4, label %5, label %15

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %7 = load i64, i64* %1, align 8
  %8 = add i64 %7, 3
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %6) #11
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i64*
  store i64 %10, i64* %14, align 1
  br label %15

15:                                               ; preds = %3, %5
  %16 = phi i64* [ %11, %5 ], [ %1, %3 ]
  ret i64* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Vector.1009", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 19
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %17) #11
  br label %36

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %17, i64* %32, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = phi i64* [ %22, %21 ], [ %32, %31 ]
  %38 = load i64, i64* %1, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %66

41:                                               ; preds = %36
  %42 = load i64, i64* %37, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, 567
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %50 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %41
  %52 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %49, i64 %48) #11
  br label %124

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = icmp eq i64* %55, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %53
  %60 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %61

61:                                               ; preds = %59, %53
  %62 = phi i64* [ %60, %59 ], [ %55, %53 ]
  %63 = ptrtoint i64* %62 to i64
  %64 = add i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  store i64* %65, i64** %54, align 8
  store i64 %48, i64* %62, align 8
  br label %124

66:                                               ; preds = %36
  %67 = and i64 %38, -4294967296
  %68 = add i64 %38, -1
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %67, %71
  %73 = add i64 %72, 4
  %74 = inttoptr i64 %73 to i8*
  %75 = load atomic i8, i8* %74 monotonic, align 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %96

77:                                               ; preds = %66
  %78 = icmp eq i8* %2, null
  %79 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %78, label %92, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.v8::internal::Vector.1009"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #11
  %82 = tail call i64 @strlen(i8* nonnull %2) #18
  %83 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %4, i64 0, i32 0
  store i8* %2, i8** %83, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %4, i64 0, i32 1
  store i64 %82, i64* %84, align 8
  %85 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %79, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %4, i8 zeroext 0) #11
  %86 = icmp eq i64* %85, null
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

88:                                               ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #11
  %89 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %79, i32 27, i64* nonnull %85, i64* null, i64* null) #11
  %90 = load i64, i64* %89, align 8
  %91 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %90, %"class.v8::internal::MessageLocation"* null) #11
  br label %158

92:                                               ; preds = %77
  %93 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %79, i32 180, i64* null, i64* null, i64* null) #11
  %94 = load i64, i64* %93, align 8
  %95 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %94, %"class.v8::internal::MessageLocation"* null) #11
  br label %158

96:                                               ; preds = %66
  %97 = zext i8 %75 to i64
  %98 = load i64, i64* %37, align 8
  %99 = and i64 %98, -4294967296
  %100 = shl nuw nsw i64 %97, 2
  %101 = add nuw nsw i64 %100, 7
  %102 = add i64 %101, %98
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %99, %105
  %107 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %108 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %96
  %110 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %107, i64 %106) #11
  br label %124

111:                                              ; preds = %96
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %115 = load i64*, i64** %114, align 8
  %116 = icmp eq i64* %113, %115
  br i1 %116, label %117, label %119

117:                                              ; preds = %111
  %118 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %119

119:                                              ; preds = %117, %111
  %120 = phi i64* [ %118, %117 ], [ %113, %111 ]
  %121 = ptrtoint i64* %120 to i64
  %122 = add i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  store i64* %123, i64** %112, align 8
  store i64 %106, i64* %120, align 8
  br label %124

124:                                              ; preds = %119, %109, %61, %51
  %125 = phi i64* [ %52, %51 ], [ %62, %61 ], [ %110, %109 ], [ %120, %119 ]
  %126 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %127 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %126, i64* %125, i8 zeroext 0) #11
  %128 = load i64, i64* %127, align 8
  %129 = load i64, i64* %1, align 8
  %130 = add i64 %128, 11
  %131 = inttoptr i64 %130 to i32*
  %132 = trunc i64 %129 to i32
  store atomic volatile i32 %132, i32* %131 monotonic, align 4
  %133 = and i64 %129, 1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %158, label %135

135:                                              ; preds = %124
  %136 = and i64 %128, -262144
  %137 = or i64 %136, 8
  %138 = inttoptr i64 %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, 262144
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %146, label %142

142:                                              ; preds = %135
  %143 = or i64 %136, 16
  %144 = inttoptr i64 %143 to %"class.v8::internal::Heap"**
  %145 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %144, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %145, i64 %128, i64 %130, i64 %129) #11
  br label %146

146:                                              ; preds = %142, %135
  %147 = and i64 %129, -262144
  %148 = or i64 %147, 8
  %149 = inttoptr i64 %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = and i64 %150, 24
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %146
  %154 = load i64, i64* %138, align 8
  %155 = and i64 %154, 24
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %153
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %128, i64 %130, i64 %129) #11
  br label %158

158:                                              ; preds = %157, %153, %146, %124, %92, %88
  %159 = phi i64* [ null, %92 ], [ null, %88 ], [ %127, %124 ], [ %127, %146 ], [ %127, %153 ], [ %127, %157 ]
  ret i64* %159
}

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Context", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = and i64 %4, -4294967296
  %9 = add i64 %4, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp ugt i16 %16, 185
  br i1 %17, label %69, label %18

18:                                               ; preds = %2, %7
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %4 to i32
  %22 = trunc i64 %20 to i32
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %21, %27
  br i1 %28, label %29, label %55

29:                                               ; preds = %18, %24
  %30 = bitcast %"class.v8::internal::Context"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %33, align 8
  %34 = call i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"* nonnull %3) #11
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  %39 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %34) #11
  br label %53

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = icmp eq i64* %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi i64* [ %47, %46 ], [ %42, %40 ]
  %50 = ptrtoint i64* %49 to i64
  %51 = add i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  store i64* %52, i64** %41, align 8
  store i64 %34, i64* %49, align 8
  br label %53

53:                                               ; preds = %38, %48
  %54 = phi i64* [ %39, %38 ], [ %49, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %69

55:                                               ; preds = %24
  br i1 %6, label %67, label %56

56:                                               ; preds = %55
  %57 = and i64 %4, -4294967296
  %58 = add i64 %4, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = icmp ugt i16 %65, 185
  br i1 %66, label %69, label %67

67:                                               ; preds = %56, %55
  %68 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %1, i8* null) #11
  br label %69

69:                                               ; preds = %67, %56, %7, %53
  %70 = phi i64* [ %54, %53 ], [ %1, %7 ], [ %68, %67 ], [ %1, %56 ]
  ret i64* %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %93, %3
  %5 = phi i64* [ %1, %3 ], [ %94, %93 ]
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %98, label %9

9:                                                ; preds = %4
  %10 = and i64 %6, -4294967296
  %11 = add i64 %6, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 66
  br i1 %19, label %96, label %20

20:                                               ; preds = %9
  %21 = load atomic i32, i32* %12 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %10, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = tail call i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %5) #11
  %30 = ptrtoint i64* %29 to i64
  br label %100

31:                                               ; preds = %20
  %32 = load atomic i32, i32* %12 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %10, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 67
  br i1 %38, label %39, label %64

39:                                               ; preds = %31
  %40 = add i64 %6, 15
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %10, %43
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %39
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %44) #11
  %50 = ptrtoint i64* %49 to i64
  br label %100

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %53, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %59

59:                                               ; preds = %57, %51
  %60 = phi i64* [ %58, %57 ], [ %53, %51 ]
  %61 = ptrtoint i64* %60 to i64
  %62 = add i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  store i64* %63, i64** %52, align 8
  store i64 %44, i64* %60, align 8
  br label %100

64:                                               ; preds = %31
  %65 = load atomic i32, i32* %12 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %10, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp eq i16 %70, 64
  br i1 %71, label %72, label %77

72:                                               ; preds = %64
  %73 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %74 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %73, i32 177, i64* null, i64* null, i64* null) #11
  %75 = load i64, i64* %74, align 8
  %76 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %75, %"class.v8::internal::MessageLocation"* null) #11
  br label %100

77:                                               ; preds = %64
  %78 = load atomic i32, i32* %12 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %10, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp eq i16 %83, 65
  br i1 %84, label %85, label %93

85:                                               ; preds = %77
  %86 = ptrtoint i64* %5 to i64
  %87 = icmp eq i32 %2, 1
  br i1 %87, label %100, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %90 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %89, i32 24, i64* null, i64* null, i64* null) #11
  %91 = load i64, i64* %90, align 8
  %92 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %91, %"class.v8::internal::MessageLocation"* null) #11
  br label %100

93:                                               ; preds = %77
  %94 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %5, i32 1) #11
  %95 = icmp eq i64* %94, null
  br i1 %95, label %100, label %4

96:                                               ; preds = %9
  %97 = ptrtoint i64* %5 to i64
  br label %100

98:                                               ; preds = %4
  %99 = ptrtoint i64* %5 to i64
  br label %100

100:                                              ; preds = %93, %59, %48, %96, %98, %85, %88, %72, %28
  %101 = phi i64 [ %30, %28 ], [ 0, %72 ], [ 0, %88 ], [ %86, %85 ], [ %97, %96 ], [ %99, %98 ], [ %50, %48 ], [ %61, %59 ], [ 0, %93 ]
  %102 = inttoptr i64 %101 to i64*
  ret i64* %102
}

declare i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  %4 = icmp eq i64* %3, null
  br i1 %4, label %67, label %5

5:                                                ; preds = %2
  %6 = ptrtoint i64* %3 to i64
  %7 = load i64, i64* %3, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %67, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %12 = add i64 %7, 3
  %13 = inttoptr i64 %12 to double*
  %14 = load double, double* %13, align 1
  %15 = fcmp uno double %14, 0.000000e+00
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = tail call double @llvm.fabs.f64(double %14) #19
  %18 = fcmp ueq double %17, 0x7FF0000000000000
  br i1 %18, label %26, label %19

19:                                               ; preds = %16
  %20 = fcmp oeq double %14, 0.000000e+00
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  %22 = fcmp oge double %14, 0.000000e+00
  %23 = tail call double @llvm.floor.f64(double %14) #11
  %24 = tail call double @llvm.ceil.f64(double %14) #11
  %25 = select i1 %22, double %23, double %24
  br label %26

26:                                               ; preds = %10, %16, %19, %21
  %27 = phi double [ %25, %21 ], [ 0.000000e+00, %10 ], [ %14, %16 ], [ 0.000000e+00, %19 ]
  %28 = fcmp ult double %27, 0xC1D0000000000000
  %29 = fcmp ugt double %27, 0x41CFFFFFFF800000
  %30 = or i1 %29, %28
  %31 = bitcast double %27 to i64
  %32 = icmp eq i64 %31, -9223372036854775808
  %33 = or i1 %30, %32
  br i1 %33, label %59, label %34

34:                                               ; preds = %26
  %35 = fptosi double %27 to i32
  %36 = sitofp i32 %35 to double
  %37 = fcmp oeq double %27, %36
  br i1 %37, label %38, label %59

38:                                               ; preds = %34
  %39 = sext i32 %35 to i64
  %40 = shl nsw i64 %39, 1
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %40) #11
  br label %64

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i64* [ %53, %52 ], [ %48, %46 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %47, align 8
  store i64 %40, i64* %55, align 8
  br label %64

59:                                               ; preds = %34, %26
  %60 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %11) #11
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 3
  %63 = inttoptr i64 %62 to double*
  store double %27, double* %63, align 1
  br label %64

64:                                               ; preds = %44, %54, %59
  %65 = phi i64* [ %60, %59 ], [ %45, %44 ], [ %55, %54 ]
  %66 = ptrtoint i64* %65 to i64
  br label %67

67:                                               ; preds = %5, %2, %64
  %68 = phi i64 [ %66, %64 ], [ 0, %2 ], [ %6, %5 ]
  %69 = inttoptr i64 %68 to i64*
  ret i64* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object14ConvertToInt32EPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  %4 = icmp eq i64* %3, null
  br i1 %4, label %92, label %5

5:                                                ; preds = %2
  %6 = ptrtoint i64* %3 to i64
  %7 = load i64, i64* %3, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %92, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %12 = add i64 %7, 3
  %13 = inttoptr i64 %12 to double*
  %14 = load double, double* %13, align 1
  %15 = tail call double @llvm.fabs.f64(double %14) #19
  %16 = fcmp one double %15, 0x7FF0000000000000
  %17 = fcmp ole double %14, 0x41DFFFFFFFC00000
  %18 = and i1 %17, %16
  %19 = fcmp oge double %14, 0xC1E0000000000000
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %25

21:                                               ; preds = %10
  %22 = fptosi double %14 to i32
  %23 = sitofp i32 %22 to double
  %24 = fcmp une double %14, %23
  br i1 %24, label %25, label %57

25:                                               ; preds = %21, %10
  %26 = bitcast double %14 to i64
  %27 = and i64 %26, 9218868437227405312
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %25
  %30 = lshr i64 %26, 52
  %31 = trunc i64 %30 to i32
  %32 = and i32 %31, 2047
  %33 = add nsw i32 %32, -1075
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %29
  %36 = icmp slt i32 %33, -52
  br i1 %36, label %62, label %37

37:                                               ; preds = %35
  %38 = and i64 %26, 4503599627370495
  %39 = or i64 %38, 4503599627370496
  %40 = sub nuw nsw i32 1075, %32
  %41 = zext i32 %40 to i64
  %42 = lshr i64 %39, %41
  br label %51

43:                                               ; preds = %29
  %44 = icmp sgt i32 %33, 31
  br i1 %44, label %62, label %45

45:                                               ; preds = %43
  %46 = and i64 %26, 4503599627370495
  %47 = or i64 %46, 4503599627370496
  %48 = zext i32 %33 to i64
  %49 = shl i64 %47, %48
  %50 = and i64 %49, 4294967295
  br label %51

51:                                               ; preds = %45, %37
  %52 = phi i64 [ %42, %37 ], [ %50, %45 ]
  %53 = icmp sgt i64 %26, -1
  %54 = select i1 %53, i32 1, i32 -1
  %55 = trunc i64 %52 to i32
  %56 = mul i32 %54, %55
  br label %57

57:                                               ; preds = %21, %51
  %58 = phi i32 [ %22, %21 ], [ %56, %51 ]
  %59 = sext i32 %58 to i64
  %60 = add nsw i64 %59, 1073741824
  %61 = icmp ult i64 %60, 2147483648
  br i1 %61, label %62, label %83

62:                                               ; preds = %25, %43, %35, %57
  %63 = phi i64 [ %59, %57 ], [ 0, %35 ], [ 0, %43 ], [ 0, %25 ]
  %64 = shl nsw i64 %63, 1
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %66 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %67 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  %69 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %66, i64 %64) #11
  br label %89

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 %64, i64* %79, align 8
  br label %89

83:                                               ; preds = %57
  %84 = sitofp i32 %58 to double
  %85 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %11) #11
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 3
  %88 = inttoptr i64 %87 to double*
  store double %84, double* %88, align 1
  br label %89

89:                                               ; preds = %68, %78, %83
  %90 = phi i64* [ %85, %83 ], [ %69, %68 ], [ %79, %78 ]
  %91 = ptrtoint i64* %90 to i64
  br label %92

92:                                               ; preds = %5, %2, %89
  %93 = phi i64 [ %91, %89 ], [ 0, %2 ], [ %6, %5 ]
  %94 = inttoptr i64 %93 to i64*
  ret i64* %94
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object15ConvertToUint32EPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0)
  %4 = icmp eq i64* %3, null
  br i1 %4, label %116, label %5

5:                                                ; preds = %2
  %6 = load i64, i64* %3, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %35

9:                                                ; preds = %5
  %10 = trunc i64 %6 to i32
  %11 = ashr i32 %10, 1
  %12 = icmp slt i32 %10, 2
  %13 = sext i32 %11 to i64
  %14 = shl nsw i64 %13, 1
  %15 = select i1 %12, i64 0, i64 %14
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %9
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %15) #11
  %21 = ptrtoint i64* %20 to i64
  br label %116

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = icmp eq i64* %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %30

30:                                               ; preds = %28, %22
  %31 = phi i64* [ %29, %28 ], [ %24, %22 ]
  %32 = ptrtoint i64* %31 to i64
  %33 = add i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  store i64* %34, i64** %23, align 8
  store i64 %15, i64* %31, align 8
  br label %116

35:                                               ; preds = %5
  %36 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %37 = add i64 %6, 3
  %38 = inttoptr i64 %37 to double*
  %39 = load double, double* %38, align 1
  %40 = tail call double @llvm.fabs.f64(double %39) #19
  %41 = fcmp one double %40, 0x7FF0000000000000
  %42 = fcmp ole double %39, 0x41DFFFFFFFC00000
  %43 = and i1 %42, %41
  %44 = fcmp oge double %39, 0xC1E0000000000000
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %50

46:                                               ; preds = %35
  %47 = fptosi double %39 to i32
  %48 = sitofp i32 %47 to double
  %49 = fcmp une double %39, %48
  br i1 %49, label %50, label %82

50:                                               ; preds = %46, %35
  %51 = bitcast double %39 to i64
  %52 = and i64 %51, 9218868437227405312
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %85, label %54

54:                                               ; preds = %50
  %55 = lshr i64 %51, 52
  %56 = trunc i64 %55 to i32
  %57 = and i32 %56, 2047
  %58 = add nsw i32 %57, -1075
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %68

60:                                               ; preds = %54
  %61 = icmp slt i32 %58, -52
  br i1 %61, label %85, label %62

62:                                               ; preds = %60
  %63 = and i64 %51, 4503599627370495
  %64 = or i64 %63, 4503599627370496
  %65 = sub nuw nsw i32 1075, %57
  %66 = zext i32 %65 to i64
  %67 = lshr i64 %64, %66
  br label %76

68:                                               ; preds = %54
  %69 = icmp sgt i32 %58, 31
  br i1 %69, label %85, label %70

70:                                               ; preds = %68
  %71 = and i64 %51, 4503599627370495
  %72 = or i64 %71, 4503599627370496
  %73 = zext i32 %58 to i64
  %74 = shl i64 %72, %73
  %75 = and i64 %74, 4294967295
  br label %76

76:                                               ; preds = %70, %62
  %77 = phi i64 [ %67, %62 ], [ %75, %70 ]
  %78 = icmp sgt i64 %51, -1
  %79 = select i1 %78, i32 1, i32 -1
  %80 = trunc i64 %77 to i32
  %81 = mul i32 %79, %80
  br label %82

82:                                               ; preds = %46, %76
  %83 = phi i32 [ %47, %46 ], [ %81, %76 ]
  %84 = icmp ult i32 %83, 1073741824
  br i1 %84, label %85, label %107

85:                                               ; preds = %50, %68, %60, %82
  %86 = phi i32 [ %83, %82 ], [ 0, %60 ], [ 0, %68 ], [ 0, %50 ]
  %87 = sext i32 %86 to i64
  %88 = shl nsw i64 %87, 1
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %90 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %89, align 8
  %91 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %85
  %93 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %90, i64 %88) #11
  br label %113

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %96, %98
  br i1 %99, label %100, label %102

100:                                              ; preds = %94
  %101 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %102

102:                                              ; preds = %100, %94
  %103 = phi i64* [ %101, %100 ], [ %96, %94 ]
  %104 = ptrtoint i64* %103 to i64
  %105 = add i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  store i64* %106, i64** %95, align 8
  store i64 %88, i64* %103, align 8
  br label %113

107:                                              ; preds = %82
  %108 = uitofp i32 %83 to double
  %109 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %36) #11
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 3
  %112 = inttoptr i64 %111 to double*
  store double %108, double* %112, align 1
  br label %113

113:                                              ; preds = %92, %102, %107
  %114 = phi i64* [ %109, %107 ], [ %93, %92 ], [ %103, %102 ]
  %115 = ptrtoint i64* %114 to i64
  br label %116

116:                                              ; preds = %30, %19, %2, %113
  %117 = phi i64 [ %115, %113 ], [ 0, %2 ], [ %21, %19 ], [ %32, %30 ]
  %118 = inttoptr i64 %117 to i64*
  ret i64* %118
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object13ConvertToNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp ult i16 %15, 68
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  %18 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %1, i32 2) #11
  br label %19

19:                                               ; preds = %2, %6, %17
  %20 = phi i64* [ %18, %17 ], [ %1, %6 ], [ %1, %2 ]
  %21 = icmp eq i64* %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19
  %23 = load i64, i64* %20, align 8
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %46, label %26

26:                                               ; preds = %22
  %27 = ptrtoint i64* %20 to i64
  %28 = and i64 %23, -4294967296
  %29 = add i64 %23, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp ult i16 %36, 65
  br i1 %37, label %49, label %38

38:                                               ; preds = %26
  %39 = load atomic i32, i32* %30 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %28, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp ult i16 %44, 64
  br i1 %45, label %49, label %46

46:                                               ; preds = %22, %38
  %47 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %20) #11
  %48 = ptrtoint i64* %47 to i64
  br label %49

49:                                               ; preds = %46, %38, %26, %19
  %50 = phi i64 [ 0, %19 ], [ %27, %26 ], [ %27, %38 ], [ %48, %46 ]
  %51 = inttoptr i64 %50 to i64*
  ret i64* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object20ConvertToPropertyKeyEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp ult i16 %15, 68
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  %18 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %1, i32 2) #11
  br label %19

19:                                               ; preds = %2, %6, %17
  %20 = phi i64* [ %18, %17 ], [ %1, %6 ], [ %1, %2 ]
  %21 = icmp eq i64* %20, null
  br i1 %21, label %113, label %22

22:                                               ; preds = %19
  %23 = load i64, i64* %20, align 8
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %113, label %26

26:                                               ; preds = %22
  %27 = and i64 %23, -4294967296
  %28 = add i64 %23, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp eq i16 %35, 64
  br i1 %36, label %113, label %37

37:                                               ; preds = %26
  %38 = load atomic i32, i32* %29 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %27, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp eq i16 %43, 66
  br i1 %44, label %45, label %103

45:                                               ; preds = %37
  %46 = load i64, i64* %1, align 8
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %45
  %50 = trunc i64 %46 to i32
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %103, label %52

52:                                               ; preds = %49
  %53 = lshr i32 %50, 1
  br label %77

54:                                               ; preds = %45
  %55 = and i64 %46, -4294967296
  %56 = add i64 %46, -1
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 66
  br i1 %64, label %65, label %103

65:                                               ; preds = %54
  %66 = add i64 %46, 3
  %67 = inttoptr i64 %66 to double*
  %68 = load double, double* %67, align 1
  %69 = fadd double %68, 0x4330000000000000
  %70 = bitcast double %69 to i64
  %71 = and i64 %70, -4294967296
  %72 = icmp eq i64 %71, 4841369599423283200
  br i1 %72, label %73, label %103

73:                                               ; preds = %65
  %74 = trunc i64 %70 to i32
  %75 = uitofp i32 %74 to double
  %76 = fcmp oeq double %68, %75
  br label %77

77:                                               ; preds = %52, %73
  %78 = phi i32 [ %53, %52 ], [ %74, %73 ]
  %79 = phi i1 [ true, %52 ], [ %76, %73 ]
  %80 = icmp ult i32 %78, 1073741824
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %103

82:                                               ; preds = %77
  %83 = sext i32 %78 to i64
  %84 = shl nsw i64 %83, 1
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %86 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %85, align 8
  %87 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  %89 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %86, i64 %84) #11
  br label %113

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %94 = load i64*, i64** %93, align 8
  %95 = icmp eq i64* %92, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %90
  %97 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %98

98:                                               ; preds = %96, %90
  %99 = phi i64* [ %97, %96 ], [ %92, %90 ]
  %100 = ptrtoint i64* %99 to i64
  %101 = add i64 %100, 8
  %102 = inttoptr i64 %101 to i64*
  store i64* %102, i64** %91, align 8
  store i64 %84, i64* %99, align 8
  br label %113

103:                                              ; preds = %65, %54, %49, %37, %77
  %104 = load atomic i32, i32* %29 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %27, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = icmp ult i16 %109, 64
  br i1 %110, label %113, label %111

111:                                              ; preds = %103
  %112 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %20) #11
  br label %113

113:                                              ; preds = %19, %111, %103, %98, %88, %22, %26
  %114 = phi i64* [ %20, %26 ], [ %20, %22 ], [ %89, %88 ], [ %99, %98 ], [ %112, %111 ], [ %20, %103 ], [ null, %19 ]
  ret i64* %114
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %52, label %6

6:                                                ; preds = %2, %88
  %7 = phi i64 [ %85, %88 ], [ %3, %2 ]
  %8 = phi i64* [ %82, %88 ], [ %1, %2 ]
  %9 = and i64 %7, -4294967296
  %10 = add i64 %7, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 67
  br i1 %18, label %19, label %44

19:                                               ; preds = %6
  %20 = add i64 %7, 11
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %9, %23
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %26 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %19
  %29 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %26, i64 %24) #11
  %30 = ptrtoint i64* %29 to i64
  br label %101

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i64* [ %38, %37 ], [ %33, %31 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %32, align 8
  store i64 %24, i64* %40, align 8
  br label %101

44:                                               ; preds = %6
  %45 = load atomic i32, i32* %11 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %9, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp eq i16 %50, 66
  br i1 %51, label %52, label %57

52:                                               ; preds = %84, %44, %2
  %53 = phi i64* [ %1, %2 ], [ %82, %84 ], [ %8, %44 ]
  %54 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %55 = tail call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %54, i64* %53, i32 2) #11
  %56 = ptrtoint i64* %55 to i64
  br label %101

57:                                               ; preds = %44
  %58 = load atomic i32, i32* %11 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %9, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 64
  br i1 %64, label %65, label %70

65:                                               ; preds = %57
  %66 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %67 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %66, i32 178, i64* null, i64* null, i64* null) #11
  %68 = load i64, i64* %67, align 8
  %69 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %68, %"class.v8::internal::MessageLocation"* null) #11
  br label %101

70:                                               ; preds = %57
  %71 = load atomic i32, i32* %11 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %9, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp eq i16 %76, 65
  br i1 %77, label %78, label %81

78:                                               ; preds = %70
  %79 = tail call i64* @_ZN2v88internal6BigInt8ToStringEPNS0_7IsolateENS0_6HandleIS1_EEiNS0_11ShouldThrowE(%"class.v8::internal::Isolate"* %0, i64* %8, i32 10, i32 0) #11
  %80 = ptrtoint i64* %79 to i64
  br label %101

81:                                               ; preds = %70
  %82 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %8, i32 2) #11
  %83 = icmp eq i64* %82, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %81
  %85 = load i64, i64* %82, align 8
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %52, label %88

88:                                               ; preds = %84
  %89 = and i64 %85, -4294967296
  %90 = add i64 %85, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %89, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = icmp ult i16 %97, 64
  br i1 %98, label %99, label %6

99:                                               ; preds = %88
  %100 = ptrtoint i64* %82 to i64
  br label %101

101:                                              ; preds = %81, %39, %28, %99, %78, %65, %52
  %102 = phi i64 [ %56, %52 ], [ 0, %65 ], [ %80, %78 ], [ %100, %99 ], [ %30, %28 ], [ %41, %39 ], [ 0, %81 ]
  %103 = inttoptr i64 %102 to i64*
  ret i64* %103
}

declare i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #1

declare i64* @_ZN2v88internal6BigInt8ToStringEPNS0_7IsolateENS0_6HandleIS1_EEiNS0_11ShouldThrowE(%"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Vector.1009", align 8
  %4 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %5 = alloca %"class.v8::internal::Vector.1009", align 8
  %6 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %7 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %8 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %9 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %12 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %6, %"class.v8::internal::Isolate"* %0) #11
  %13 = load i64, i64* %1, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %51, label %16

16:                                               ; preds = %2
  %17 = and i64 %13, -4294967296
  %18 = add i64 %13, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp ult i16 %25, 64
  br i1 %26, label %43, label %27

27:                                               ; preds = %16
  %28 = load atomic i32, i32* %19 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %17, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 66
  br i1 %34, label %43, label %35

35:                                               ; preds = %27
  %36 = load atomic i32, i32* %19 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %17, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 67
  br i1 %42, label %43, label %57

43:                                               ; preds = %16, %27, %35
  %44 = load atomic i32, i32* %19 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %17, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp ult i16 %49, 64
  br i1 %50, label %53, label %51

51:                                               ; preds = %2, %43
  %52 = call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #11
  br label %53

53:                                               ; preds = %43, %51
  %54 = phi i64* [ %52, %51 ], [ %1, %43 ]
  %55 = icmp eq i64* %54, null
  br i1 %55, label %56, label %1016, !prof !3

56:                                               ; preds = %53
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

57:                                               ; preds = %35
  %58 = load atomic i32, i32* %19 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %17, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 188
  br i1 %64, label %65, label %114

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %70

70:                                               ; preds = %65, %101
  %71 = phi i64 [ %97, %101 ], [ %13, %65 ]
  %72 = load i64, i64* %66, align 8
  %73 = add i64 %71, 7
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i64 %72, 4294967295
  %77 = icmp eq i64 %76, 0
  call void @llvm.assume(i1 %77) #11
  %78 = zext i32 %75 to i64
  %79 = or i64 %72, %78
  %80 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %81 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %70
  %83 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %80, i64 %79) #11
  %84 = load i64, i64* %83, align 8
  br label %96

85:                                               ; preds = %70
  %86 = load i64*, i64** %68, align 8
  %87 = load i64*, i64** %69, align 8
  %88 = icmp eq i64* %86, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %91

91:                                               ; preds = %89, %85
  %92 = phi i64* [ %90, %89 ], [ %86, %85 ]
  %93 = ptrtoint i64* %92 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  store i64* %95, i64** %68, align 8
  store i64 %79, i64* %92, align 8
  br label %96

96:                                               ; preds = %82, %91
  %97 = phi i64 [ %84, %82 ], [ %79, %91 ]
  %98 = phi i64* [ %83, %82 ], [ %92, %91 ]
  %99 = and i64 %97, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %112, label %101

101:                                              ; preds = %96
  %102 = and i64 %97, -4294967296
  %103 = add i64 %97, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp eq i16 %110, 188
  br i1 %111, label %70, label %112

112:                                              ; preds = %96, %101
  %113 = call i64* @_ZN2v88internal6Object21NoSideEffectsToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %98)
  br label %1016

114:                                              ; preds = %57
  %115 = load atomic i32, i32* %19 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %17, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = icmp eq i16 %120, 65
  br i1 %121, label %122, label %134

122:                                              ; preds = %114
  %123 = call i64* @_ZN2v88internal6BigInt8ToStringEPNS0_7IsolateENS0_6HandleIS1_EEiNS0_11ShouldThrowE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 10, i32 1) #11
  %124 = icmp eq i64* %123, null
  br i1 %124, label %125, label %1016

125:                                              ; preds = %122
  %126 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %127 = bitcast %"class.v8::internal::Vector.1009"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #11
  %128 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.233, i64 0, i64 0), i8** %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %3, i64 0, i32 1
  store i64 21, i64* %129, align 8
  %130 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %126, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %3, i8 zeroext 0) #11
  %131 = icmp eq i64* %130, null
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %125
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

133:                                              ; preds = %125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #11
  br label %1016

134:                                              ; preds = %114
  %135 = load atomic i32, i32* %19 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %17, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = add i16 %140, -1058
  %142 = icmp ult i16 %141, 16
  %143 = load atomic i32, i32* %19 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %17, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i16*
  %148 = load atomic i16, i16* %147 monotonic, align 2
  br i1 %142, label %149, label %245

149:                                              ; preds = %134
  %150 = icmp eq i16 %148, 1058
  br i1 %150, label %151, label %153

151:                                              ; preds = %149
  %152 = call i64* @_ZN2v88internal15JSBoundFunction8ToStringENS0_6HandleIS1_EE(i64* %1) #11
  br label %155

153:                                              ; preds = %149
  %154 = call i64* @_ZN2v88internal10JSFunction8ToStringENS0_6HandleIS1_EE(i64* %1) #11
  br label %155

155:                                              ; preds = %153, %151
  %156 = phi i64* [ %152, %151 ], [ %154, %153 ]
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 7
  %159 = inttoptr i64 %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = icmp sgt i32 %160, 128
  br i1 %161, label %162, label %1016

162:                                              ; preds = %155
  %163 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %163) #11
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7, %"class.v8::internal::Isolate"* %0) #11
  %164 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %165 = load i64, i64* %156, align 8
  %166 = add i64 %165, 7
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 111
  br i1 %169, label %172, label %170

170:                                              ; preds = %162
  %171 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %164, i64* %156, i32 0, i32 111) #11
  br label %172

172:                                              ; preds = %162, %170
  %173 = phi i64* [ %171, %170 ], [ %156, %162 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7, i64* %173) #11
  %174 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %7, i64 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %7, i64 0, i32 6, i32 0, i32 0
  %178 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %7, i64 0, i32 4
  %179 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %7, i64 0, i32 3
  %180 = load i64*, i64** %177, align 8
  %181 = load i64, i64* %180, align 8
  %182 = load i32, i32* %178, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %178, align 4
  br i1 %176, label %193, label %184

184:                                              ; preds = %172
  %185 = shl nsw i32 %182, 1
  %186 = sext i32 %185 to i64
  %187 = add i64 %181, 11
  %188 = add i64 %187, %186
  %189 = inttoptr i64 %188 to i16*
  store i16 46, i16* %189, align 2
  %190 = load i32, i32* %178, align 4
  %191 = load i32, i32* %179, align 8
  %192 = icmp eq i32 %190, %191
  br i1 %192, label %215, label %217

193:                                              ; preds = %172
  %194 = sext i32 %182 to i64
  %195 = add i64 %181, 11
  %196 = add i64 %195, %194
  %197 = inttoptr i64 %196 to i8*
  store i8 46, i8* %197, align 1
  %198 = load i32, i32* %178, align 4
  %199 = load i32, i32* %179, align 8
  %200 = icmp eq i32 %198, %199
  br i1 %200, label %201, label %203

201:                                              ; preds = %193
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %202 = load i32, i32* %178, align 4
  br label %203

203:                                              ; preds = %201, %193
  %204 = phi i32 [ %202, %201 ], [ %198, %193 ]
  %205 = load i64*, i64** %177, align 8
  %206 = load i64, i64* %205, align 8
  %207 = add nsw i32 %204, 1
  store i32 %207, i32* %178, align 4
  %208 = sext i32 %204 to i64
  %209 = add i64 %206, 11
  %210 = add i64 %209, %208
  %211 = inttoptr i64 %210 to i8*
  store i8 46, i8* %211, align 1
  %212 = load i32, i32* %178, align 4
  %213 = load i32, i32* %179, align 8
  %214 = icmp eq i32 %212, %213
  br i1 %214, label %1018, label %1020

215:                                              ; preds = %184
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %216 = load i32, i32* %178, align 4
  br label %217

217:                                              ; preds = %215, %184
  %218 = phi i32 [ %216, %215 ], [ %190, %184 ]
  %219 = load i64*, i64** %177, align 8
  %220 = load i64, i64* %219, align 8
  %221 = add nsw i32 %218, 1
  store i32 %221, i32* %178, align 4
  %222 = shl nsw i32 %218, 1
  %223 = sext i32 %222 to i64
  %224 = add i64 %220, 11
  %225 = add i64 %224, %223
  %226 = inttoptr i64 %225 to i16*
  store i16 46, i16* %226, align 2
  %227 = load i32, i32* %178, align 4
  %228 = load i32, i32* %179, align 8
  %229 = icmp eq i32 %227, %228
  br i1 %229, label %1201, label %1203

230:                                              ; preds = %1383, %1396, %1188, %1200
  %231 = load i64, i64* %156, align 8
  %232 = add i64 %231, 7
  %233 = inttoptr i64 %232 to i32*
  %234 = load i32, i32* %233, align 4
  %235 = add nsw i32 %234, -2
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %230
  %238 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %164, i64* %156, i32 %235, i32 %234) #11
  br label %239

239:                                              ; preds = %230, %237
  %240 = phi i64* [ %238, %237 ], [ %156, %230 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7, i64* %240) #11
  %241 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %242 = icmp eq i64* %241, null
  br i1 %242, label %243, label %244, !prof !3

243:                                              ; preds = %239
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

244:                                              ; preds = %239
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %163) #11
  br label %1016

245:                                              ; preds = %134
  %246 = icmp eq i16 %148, 64
  br i1 %246, label %247, label %404

247:                                              ; preds = %245
  %248 = add i64 %13, 7
  %249 = inttoptr i64 %248 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = and i32 %250, 16
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %277, label %253

253:                                              ; preds = %247
  %254 = add i64 %13, 11
  %255 = inttoptr i64 %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = zext i32 %256 to i64
  %258 = or i64 %17, %257
  %259 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %260 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %259, align 8
  %261 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %260, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %253
  %263 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %260, i64 %258) #11
  br label %1016

264:                                              ; preds = %253
  %265 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %268 = load i64*, i64** %267, align 8
  %269 = icmp eq i64* %266, %268
  br i1 %269, label %270, label %272

270:                                              ; preds = %264
  %271 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %272

272:                                              ; preds = %270, %264
  %273 = phi i64* [ %271, %270 ], [ %266, %264 ]
  %274 = ptrtoint i64* %273 to i64
  %275 = add i64 %274, 8
  %276 = inttoptr i64 %275 to i64*
  store i64* %276, i64** %265, align 8
  store i64 %258, i64* %273, align 8
  br label %1016

277:                                              ; preds = %247
  %278 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %278) #11
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8, %"class.v8::internal::Isolate"* %0) #11
  %279 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %8, i64 0, i32 1
  %280 = load i32, i32* %279, align 8
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %8, i64 0, i32 6, i32 0, i32 0
  %283 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %8, i64 0, i32 4
  %284 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %8, i64 0, i32 3
  %285 = load i64*, i64** %282, align 8
  %286 = load i64, i64* %285, align 8
  %287 = load i32, i32* %283, align 4
  %288 = add nsw i32 %287, 1
  store i32 %288, i32* %283, align 4
  br i1 %281, label %298, label %289

289:                                              ; preds = %277
  %290 = shl nsw i32 %287, 1
  %291 = sext i32 %290 to i64
  %292 = add i64 %286, 11
  %293 = add i64 %292, %291
  %294 = inttoptr i64 %293 to i16*
  store i16 83, i16* %294, align 2
  %295 = load i32, i32* %283, align 4
  %296 = load i32, i32* %284, align 8
  %297 = icmp eq i32 %295, %296
  br i1 %297, label %320, label %322

298:                                              ; preds = %277
  %299 = sext i32 %287 to i64
  %300 = add i64 %286, 11
  %301 = add i64 %300, %299
  %302 = inttoptr i64 %301 to i8*
  store i8 83, i8* %302, align 1
  %303 = load i32, i32* %283, align 4
  %304 = load i32, i32* %284, align 8
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %306, label %308

306:                                              ; preds = %298
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %307 = load i32, i32* %283, align 4
  br label %308

308:                                              ; preds = %306, %298
  %309 = phi i32 [ %307, %306 ], [ %303, %298 ]
  %310 = load i64*, i64** %282, align 8
  %311 = load i64, i64* %310, align 8
  %312 = add nsw i32 %309, 1
  store i32 %312, i32* %283, align 4
  %313 = sext i32 %309 to i64
  %314 = add i64 %311, 11
  %315 = add i64 %314, %313
  %316 = inttoptr i64 %315 to i8*
  store i8 121, i8* %316, align 1
  %317 = load i32, i32* %283, align 4
  %318 = load i32, i32* %284, align 8
  %319 = icmp eq i32 %317, %318
  br i1 %319, label %1397, label %1399

320:                                              ; preds = %289
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %321 = load i32, i32* %283, align 4
  br label %322

322:                                              ; preds = %320, %289
  %323 = phi i32 [ %321, %320 ], [ %295, %289 ]
  %324 = load i64*, i64** %282, align 8
  %325 = load i64, i64* %324, align 8
  %326 = add nsw i32 %323, 1
  store i32 %326, i32* %283, align 4
  %327 = shl nsw i32 %323, 1
  %328 = sext i32 %327 to i64
  %329 = add i64 %325, 11
  %330 = add i64 %329, %328
  %331 = inttoptr i64 %330 to i16*
  store i16 121, i16* %331, align 2
  %332 = load i32, i32* %283, align 4
  %333 = load i32, i32* %284, align 8
  %334 = icmp eq i32 %332, %333
  br i1 %334, label %1468, label %1470

335:                                              ; preds = %1530, %1543, %1455, %1467
  %336 = load i64, i64* %1, align 8
  %337 = and i64 %336, -4294967296
  %338 = add i64 %336, 11
  %339 = inttoptr i64 %338 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i64
  %342 = or i64 %337, %341
  %343 = add i64 %342, -1
  %344 = inttoptr i64 %343 to i32*
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = zext i32 %345 to i64
  %347 = or i64 %337, %346
  %348 = add i64 %347, 7
  %349 = inttoptr i64 %348 to i16*
  %350 = load atomic i16, i16* %349 monotonic, align 2
  %351 = icmp ult i16 %350, 64
  br i1 %351, label %352, label %373

352:                                              ; preds = %335
  %353 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %354 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %353, align 8
  %355 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %354, null
  br i1 %355, label %358, label %356

356:                                              ; preds = %352
  %357 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %354, i64 %342) #11
  br label %371

358:                                              ; preds = %352
  %359 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %360 = load i64*, i64** %359, align 8
  %361 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %362 = load i64*, i64** %361, align 8
  %363 = icmp eq i64* %360, %362
  br i1 %363, label %364, label %366

364:                                              ; preds = %358
  %365 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %366

366:                                              ; preds = %364, %358
  %367 = phi i64* [ %365, %364 ], [ %360, %358 ]
  %368 = ptrtoint i64* %367 to i64
  %369 = add i64 %368, 8
  %370 = inttoptr i64 %369 to i64*
  store i64* %370, i64** %359, align 8
  store i64 %342, i64* %367, align 8
  br label %371

371:                                              ; preds = %356, %366
  %372 = phi i64* [ %357, %356 ], [ %367, %366 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8, i64* %372) #11
  br label %373

373:                                              ; preds = %371, %335
  %374 = load i32, i32* %279, align 8
  %375 = icmp eq i32 %374, 0
  %376 = load i64*, i64** %282, align 8
  %377 = load i64, i64* %376, align 8
  %378 = load i32, i32* %283, align 4
  %379 = add nsw i32 %378, 1
  store i32 %379, i32* %283, align 4
  br i1 %375, label %380, label %389

380:                                              ; preds = %373
  %381 = sext i32 %378 to i64
  %382 = add i64 %377, 11
  %383 = add i64 %382, %381
  %384 = inttoptr i64 %383 to i8*
  store i8 41, i8* %384, align 1
  %385 = load i32, i32* %283, align 4
  %386 = load i32, i32* %284, align 8
  %387 = icmp eq i32 %385, %386
  br i1 %387, label %388, label %399

388:                                              ; preds = %380
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  br label %399

389:                                              ; preds = %373
  %390 = shl nsw i32 %378, 1
  %391 = sext i32 %390 to i64
  %392 = add i64 %377, 11
  %393 = add i64 %392, %391
  %394 = inttoptr i64 %393 to i16*
  store i16 41, i16* %394, align 2
  %395 = load i32, i32* %283, align 4
  %396 = load i32, i32* %284, align 8
  %397 = icmp eq i32 %395, %396
  br i1 %397, label %398, label %399

398:                                              ; preds = %389
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  br label %399

399:                                              ; preds = %380, %388, %389, %398
  %400 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %401 = icmp eq i64* %400, null
  br i1 %401, label %402, label %403, !prof !3

402:                                              ; preds = %399
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

403:                                              ; preds = %399
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %278) #11
  br label %1016

404:                                              ; preds = %245
  %405 = load atomic i32, i32* %19 monotonic, align 4
  %406 = zext i32 %405 to i64
  %407 = or i64 %17, %406
  %408 = add i64 %407, 7
  %409 = inttoptr i64 %408 to i16*
  %410 = load atomic i16, i16* %409 monotonic, align 2
  %411 = icmp ugt i16 %410, 185
  br i1 %411, label %412, label %844

412:                                              ; preds = %404
  %413 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 453
  %414 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1, i64* %413)
  %415 = load i64, i64* %1, align 8
  %416 = and i64 %415, 1
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %436, label %418

418:                                              ; preds = %412
  %419 = and i64 %415, -4294967296
  %420 = add i64 %415, -1
  %421 = inttoptr i64 %420 to i32*
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = zext i32 %422 to i64
  %424 = or i64 %419, %423
  %425 = add i64 %424, 7
  %426 = inttoptr i64 %425 to i16*
  %427 = load atomic i16, i16* %426 monotonic, align 2
  %428 = icmp ugt i16 %427, 185
  br i1 %428, label %429, label %436

429:                                              ; preds = %418
  %430 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 500
  %431 = call i16 @_ZN2v88internal10JSReceiver14HasOwnPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1, i64* %430) #11
  %432 = trunc i16 %431 to i8
  %433 = icmp ne i8 %432, 0
  %434 = icmp ugt i16 %431, 255
  %435 = and i1 %434, %433
  br i1 %435, label %480, label %436

436:                                              ; preds = %412, %418, %429
  %437 = load i64, i64* %414, align 8
  %438 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load i64, i64* %438, align 8
  %440 = and i64 %439, -4294967296
  %441 = add i64 %439, -1
  %442 = inttoptr i64 %441 to i32*
  %443 = load atomic i32, i32* %442 monotonic, align 4
  %444 = zext i32 %443 to i64
  %445 = or i64 %440, %444
  %446 = add i64 %445, 19
  %447 = inttoptr i64 %446 to i32*
  %448 = load i32, i32* %447, align 4
  %449 = zext i32 %448 to i64
  %450 = or i64 %440, %449
  %451 = add i64 %450, 883
  %452 = inttoptr i64 %451 to i32*
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = zext i32 %453 to i64
  %455 = or i64 %440, %454
  %456 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %457 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %456, align 8
  %458 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %457, null
  br i1 %458, label %462, label %459

459:                                              ; preds = %436
  %460 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %457, i64 %455) #11
  %461 = load i64, i64* %460, align 8
  br label %475

462:                                              ; preds = %436
  %463 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %464 = load i64*, i64** %463, align 8
  %465 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %466 = load i64*, i64** %465, align 8
  %467 = icmp eq i64* %464, %466
  br i1 %467, label %468, label %470

468:                                              ; preds = %462
  %469 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %470

470:                                              ; preds = %468, %462
  %471 = phi i64* [ %469, %468 ], [ %464, %462 ]
  %472 = ptrtoint i64* %471 to i64
  %473 = add i64 %472, 8
  %474 = inttoptr i64 %473 to i64*
  store i64* %474, i64** %463, align 8
  store i64 %455, i64* %471, align 8
  br label %475

475:                                              ; preds = %459, %470
  %476 = phi i64 [ %461, %459 ], [ %455, %470 ]
  %477 = trunc i64 %437 to i32
  %478 = trunc i64 %476 to i32
  %479 = icmp eq i32 %477, %478
  br i1 %479, label %480, label %649

480:                                              ; preds = %429, %475
  %481 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 378
  %482 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1, i64* %481) #11
  %483 = load i64, i64* %482, align 8
  %484 = and i64 %483, 1
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %497, label %486

486:                                              ; preds = %480
  %487 = and i64 %483, -4294967296
  %488 = add i64 %483, -1
  %489 = inttoptr i64 %488 to i32*
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = zext i32 %490 to i64
  %492 = or i64 %487, %491
  %493 = add i64 %492, 7
  %494 = inttoptr i64 %493 to i16*
  %495 = load atomic i16, i16* %494 monotonic, align 2
  %496 = icmp ult i16 %495, 64
  br i1 %496, label %499, label %497

497:                                              ; preds = %486, %480
  %498 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %499

499:                                              ; preds = %497, %486
  %500 = phi i64* [ %498, %497 ], [ %482, %486 ]
  %501 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 373
  %502 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1, i64* %501) #11
  %503 = load i64, i64* %502, align 8
  %504 = and i64 %503, 1
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %517, label %506

506:                                              ; preds = %499
  %507 = and i64 %503, -4294967296
  %508 = add i64 %503, -1
  %509 = inttoptr i64 %508 to i32*
  %510 = load atomic i32, i32* %509 monotonic, align 4
  %511 = zext i32 %510 to i64
  %512 = or i64 %507, %511
  %513 = add i64 %512, 7
  %514 = inttoptr i64 %513 to i16*
  %515 = load atomic i16, i16* %514 monotonic, align 2
  %516 = icmp ult i16 %515, 64
  br i1 %516, label %519, label %517

517:                                              ; preds = %506, %499
  %518 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %519

519:                                              ; preds = %517, %506
  %520 = phi i64* [ %518, %517 ], [ %502, %506 ]
  %521 = load i64, i64* %500, align 8
  %522 = add i64 %521, 7
  %523 = inttoptr i64 %522 to i32*
  %524 = load i32, i32* %523, align 4
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %1016, label %526

526:                                              ; preds = %519
  %527 = load i64, i64* %520, align 8
  %528 = add i64 %527, 7
  %529 = inttoptr i64 %528 to i32*
  %530 = load i32, i32* %529, align 4
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %1016, label %532

532:                                              ; preds = %526
  %533 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %533) #11
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, %"class.v8::internal::Isolate"* %0) #11
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* %500) #11
  %534 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 1
  %535 = load i32, i32* %534, align 8
  %536 = icmp eq i32 %535, 0
  %537 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 6, i32 0, i32 0
  %538 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 4
  %539 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 3
  %540 = load i64*, i64** %537, align 8
  %541 = load i64, i64* %540, align 8
  %542 = load i32, i32* %538, align 4
  %543 = add nsw i32 %542, 1
  store i32 %543, i32* %538, align 4
  br i1 %536, label %553, label %544

544:                                              ; preds = %532
  %545 = shl nsw i32 %542, 1
  %546 = sext i32 %545 to i64
  %547 = add i64 %541, 11
  %548 = add i64 %547, %546
  %549 = inttoptr i64 %548 to i16*
  store i16 58, i16* %549, align 2
  %550 = load i32, i32* %538, align 4
  %551 = load i32, i32* %539, align 8
  %552 = icmp eq i32 %550, %551
  br i1 %552, label %575, label %577

553:                                              ; preds = %532
  %554 = sext i32 %542 to i64
  %555 = add i64 %541, 11
  %556 = add i64 %555, %554
  %557 = inttoptr i64 %556 to i8*
  store i8 58, i8* %557, align 1
  %558 = load i32, i32* %538, align 4
  %559 = load i32, i32* %539, align 8
  %560 = icmp eq i32 %558, %559
  br i1 %560, label %561, label %563

561:                                              ; preds = %553
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  %562 = load i32, i32* %538, align 4
  br label %563

563:                                              ; preds = %561, %553
  %564 = phi i32 [ %562, %561 ], [ %558, %553 ]
  %565 = load i64*, i64** %537, align 8
  %566 = load i64, i64* %565, align 8
  %567 = add nsw i32 %564, 1
  store i32 %567, i32* %538, align 4
  %568 = sext i32 %564 to i64
  %569 = add nsw i64 %568, 11
  %570 = add i64 %569, %566
  %571 = inttoptr i64 %570 to i8*
  store i8 32, i8* %571, align 1
  %572 = load i32, i32* %538, align 4
  %573 = load i32, i32* %539, align 8
  %574 = icmp eq i32 %572, %573
  br i1 %574, label %647, label %590

575:                                              ; preds = %544
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  %576 = load i32, i32* %538, align 4
  br label %577

577:                                              ; preds = %575, %544
  %578 = phi i32 [ %576, %575 ], [ %550, %544 ]
  %579 = load i64*, i64** %537, align 8
  %580 = load i64, i64* %579, align 8
  %581 = add nsw i32 %578, 1
  store i32 %581, i32* %538, align 4
  %582 = shl nsw i32 %578, 1
  %583 = sext i32 %582 to i64
  %584 = add i64 %580, 11
  %585 = add i64 %584, %583
  %586 = inttoptr i64 %585 to i16*
  store i16 32, i16* %586, align 2
  %587 = load i32, i32* %538, align 4
  %588 = load i32, i32* %539, align 8
  %589 = icmp eq i32 %587, %588
  br i1 %589, label %648, label %590

590:                                              ; preds = %648, %647, %577, %563
  %591 = call i32 @_ZNK2v88internal24IncrementalStringBuilder6LengthEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  %592 = load i64, i64* %520, align 8
  %593 = add i64 %592, 7
  %594 = inttoptr i64 %593 to i32*
  %595 = load i32, i32* %594, align 4
  %596 = add nsw i32 %595, %591
  %597 = icmp slt i32 %596, 536870889
  br i1 %597, label %598, label %599

598:                                              ; preds = %590
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* %520) #11
  br label %642

599:                                              ; preds = %590
  %600 = load i32, i32* %534, align 8
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %621

602:                                              ; preds = %599, %618
  %603 = phi i8 [ %619, %618 ], [ 60, %599 ]
  %604 = phi i8* [ %605, %618 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.420, i64 0, i64 0), %599 ]
  %605 = getelementptr inbounds i8, i8* %604, i64 1
  %606 = load i64*, i64** %537, align 8
  %607 = load i64, i64* %606, align 8
  %608 = load i32, i32* %538, align 4
  %609 = add nsw i32 %608, 1
  store i32 %609, i32* %538, align 4
  %610 = sext i32 %608 to i64
  %611 = add i64 %607, 11
  %612 = add i64 %611, %610
  %613 = inttoptr i64 %612 to i8*
  store i8 %603, i8* %613, align 1
  %614 = load i32, i32* %538, align 4
  %615 = load i32, i32* %539, align 8
  %616 = icmp eq i32 %614, %615
  br i1 %616, label %617, label %618

617:                                              ; preds = %602
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  br label %618

618:                                              ; preds = %617, %602
  %619 = load i8, i8* %605, align 1
  %620 = icmp eq i8* %605, getelementptr inbounds ([22 x i8], [22 x i8]* @.str.420, i64 0, i64 21)
  br i1 %620, label %642, label %602

621:                                              ; preds = %599, %639
  %622 = phi i8 [ %640, %639 ], [ 60, %599 ]
  %623 = phi i8* [ %624, %639 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.420, i64 0, i64 0), %599 ]
  %624 = getelementptr inbounds i8, i8* %623, i64 1
  %625 = load i64*, i64** %537, align 8
  %626 = load i64, i64* %625, align 8
  %627 = load i32, i32* %538, align 4
  %628 = add nsw i32 %627, 1
  store i32 %628, i32* %538, align 4
  %629 = zext i8 %622 to i16
  %630 = shl nsw i32 %627, 1
  %631 = sext i32 %630 to i64
  %632 = add i64 %626, 11
  %633 = add i64 %632, %631
  %634 = inttoptr i64 %633 to i16*
  store i16 %629, i16* %634, align 2
  %635 = load i32, i32* %538, align 4
  %636 = load i32, i32* %539, align 8
  %637 = icmp eq i32 %635, %636
  br i1 %637, label %638, label %639

638:                                              ; preds = %621
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  br label %639

639:                                              ; preds = %638, %621
  %640 = load i8, i8* %624, align 1
  %641 = icmp eq i8* %624, getelementptr inbounds ([22 x i8], [22 x i8]* @.str.420, i64 0, i64 21)
  br i1 %641, label %642, label %621

642:                                              ; preds = %639, %618, %598
  %643 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  %644 = icmp eq i64* %643, null
  br i1 %644, label %645, label %646, !prof !3

645:                                              ; preds = %642
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

646:                                              ; preds = %642
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %533) #11
  br label %1016

647:                                              ; preds = %563
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  br label %590

648:                                              ; preds = %577
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  br label %590

649:                                              ; preds = %475
  %650 = load i64, i64* %414, align 8
  %651 = load i64, i64* %438, align 8
  %652 = and i64 %651, -4294967296
  %653 = add i64 %651, -1
  %654 = inttoptr i64 %653 to i32*
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = zext i32 %655 to i64
  %657 = or i64 %652, %656
  %658 = add i64 %657, 19
  %659 = inttoptr i64 %658 to i32*
  %660 = load i32, i32* %659, align 4
  %661 = zext i32 %660 to i64
  %662 = or i64 %652, %661
  %663 = add i64 %662, 931
  %664 = inttoptr i64 %663 to i32*
  %665 = load atomic i32, i32* %664 monotonic, align 4
  %666 = zext i32 %665 to i64
  %667 = or i64 %652, %666
  %668 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %456, align 8
  %669 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %668, null
  br i1 %669, label %673, label %670

670:                                              ; preds = %649
  %671 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %668, i64 %667) #11
  %672 = load i64, i64* %671, align 8
  br label %686

673:                                              ; preds = %649
  %674 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %675 = load i64*, i64** %674, align 8
  %676 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %677 = load i64*, i64** %676, align 8
  %678 = icmp eq i64* %675, %677
  br i1 %678, label %679, label %681

679:                                              ; preds = %673
  %680 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %681

681:                                              ; preds = %679, %673
  %682 = phi i64* [ %680, %679 ], [ %675, %673 ]
  %683 = ptrtoint i64* %682 to i64
  %684 = add i64 %683, 8
  %685 = inttoptr i64 %684 to i64*
  store i64* %685, i64** %674, align 8
  store i64 %667, i64* %682, align 8
  br label %686

686:                                              ; preds = %670, %681
  %687 = phi i64 [ %672, %670 ], [ %667, %681 ]
  %688 = trunc i64 %650 to i32
  %689 = trunc i64 %687 to i32
  %690 = icmp eq i32 %688, %689
  br i1 %690, label %691, label %844

691:                                              ; preds = %686
  %692 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 297
  %693 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %1, i64* %692)
  %694 = load i64, i64* %693, align 8
  %695 = and i64 %694, 1
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %844, label %697

697:                                              ; preds = %691
  %698 = and i64 %694, -4294967296
  %699 = add i64 %694, -1
  %700 = inttoptr i64 %699 to i32*
  %701 = load atomic i32, i32* %700 monotonic, align 4
  %702 = zext i32 %701 to i64
  %703 = or i64 %698, %702
  %704 = add i64 %703, 7
  %705 = inttoptr i64 %704 to i16*
  %706 = load atomic i16, i16* %705 monotonic, align 2
  %707 = add i16 %706, -1058
  %708 = icmp ult i16 %707, 16
  br i1 %708, label %709, label %844

709:                                              ; preds = %697
  %710 = load atomic i32, i32* %700 monotonic, align 4
  %711 = zext i32 %710 to i64
  %712 = or i64 %698, %711
  %713 = add i64 %712, 7
  %714 = inttoptr i64 %713 to i16*
  %715 = load atomic i16, i16* %714 monotonic, align 2
  %716 = icmp eq i16 %715, 1058
  br i1 %716, label %717, label %721

717:                                              ; preds = %709
  %718 = call i64* @_ZN2v88internal15JSBoundFunction7GetNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %693) #11
  %719 = icmp eq i64* %718, null
  br i1 %719, label %720, label %748, !prof !3

720:                                              ; preds = %717
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

721:                                              ; preds = %709
  %722 = load atomic i32, i32* %700 monotonic, align 4
  %723 = zext i32 %722 to i64
  %724 = or i64 %698, %723
  %725 = add i64 %724, 7
  %726 = inttoptr i64 %725 to i16*
  %727 = load atomic i16, i16* %726 monotonic, align 2
  %728 = add i16 %727, -1059
  %729 = icmp ult i16 %728, 15
  br i1 %729, label %730, label %748

730:                                              ; preds = %721
  %731 = call i64* @_ZN2v88internal10JSFunction7GetNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %693) #11
  %732 = load i64, i64* %731, align 8
  %733 = and i64 %732, 1
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %746, label %735

735:                                              ; preds = %730
  %736 = and i64 %732, -4294967296
  %737 = add i64 %732, -1
  %738 = inttoptr i64 %737 to i32*
  %739 = load atomic i32, i32* %738 monotonic, align 4
  %740 = zext i32 %739 to i64
  %741 = or i64 %736, %740
  %742 = add i64 %741, 7
  %743 = inttoptr i64 %742 to i16*
  %744 = load atomic i16, i16* %743 monotonic, align 2
  %745 = icmp ult i16 %744, 64
  br i1 %745, label %748, label %746

746:                                              ; preds = %735, %730
  %747 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %748

748:                                              ; preds = %746, %735, %717, %721
  %749 = phi i64* [ null, %721 ], [ %718, %717 ], [ %747, %746 ], [ %731, %735 ]
  %750 = load i64, i64* %749, align 8
  %751 = add i64 %750, 7
  %752 = inttoptr i64 %751 to i32*
  %753 = load i32, i32* %752, align 4
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %844, label %755

755:                                              ; preds = %748
  %756 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %756) #11
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9, %"class.v8::internal::Isolate"* %0) #11
  %757 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %9, i64 0, i32 1
  %758 = load i32, i32* %757, align 8
  %759 = icmp eq i32 %758, 0
  %760 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %9, i64 0, i32 6, i32 0, i32 0
  %761 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %9, i64 0, i32 4
  %762 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %9, i64 0, i32 3
  %763 = load i64*, i64** %760, align 8
  %764 = load i64, i64* %763, align 8
  %765 = load i32, i32* %761, align 4
  %766 = add nsw i32 %765, 1
  store i32 %766, i32* %761, align 4
  br i1 %759, label %776, label %767

767:                                              ; preds = %755
  %768 = shl nsw i32 %765, 1
  %769 = sext i32 %768 to i64
  %770 = add i64 %764, 11
  %771 = add i64 %770, %769
  %772 = inttoptr i64 %771 to i16*
  store i16 35, i16* %772, align 2
  %773 = load i32, i32* %761, align 4
  %774 = load i32, i32* %762, align 8
  %775 = icmp eq i32 %773, %774
  br i1 %775, label %798, label %800

776:                                              ; preds = %755
  %777 = sext i32 %765 to i64
  %778 = add i64 %764, 11
  %779 = add i64 %778, %777
  %780 = inttoptr i64 %779 to i8*
  store i8 35, i8* %780, align 1
  %781 = load i32, i32* %761, align 4
  %782 = load i32, i32* %762, align 8
  %783 = icmp eq i32 %781, %782
  br i1 %783, label %784, label %786

784:                                              ; preds = %776
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9) #11
  %785 = load i32, i32* %761, align 4
  br label %786

786:                                              ; preds = %784, %776
  %787 = phi i32 [ %785, %784 ], [ %781, %776 ]
  %788 = load i64*, i64** %760, align 8
  %789 = load i64, i64* %788, align 8
  %790 = add nsw i32 %787, 1
  store i32 %790, i32* %761, align 4
  %791 = sext i32 %787 to i64
  %792 = add i64 %789, 11
  %793 = add i64 %792, %791
  %794 = inttoptr i64 %793 to i8*
  store i8 60, i8* %794, align 1
  %795 = load i32, i32* %761, align 4
  %796 = load i32, i32* %762, align 8
  %797 = icmp eq i32 %795, %796
  br i1 %797, label %1720, label %813

798:                                              ; preds = %767
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9) #11
  %799 = load i32, i32* %761, align 4
  br label %800

800:                                              ; preds = %798, %767
  %801 = phi i32 [ %799, %798 ], [ %773, %767 ]
  %802 = load i64*, i64** %760, align 8
  %803 = load i64, i64* %802, align 8
  %804 = add nsw i32 %801, 1
  store i32 %804, i32* %761, align 4
  %805 = shl nsw i32 %801, 1
  %806 = sext i32 %805 to i64
  %807 = add i64 %803, 11
  %808 = add i64 %807, %806
  %809 = inttoptr i64 %808 to i16*
  store i16 60, i16* %809, align 2
  %810 = load i32, i32* %761, align 4
  %811 = load i32, i32* %762, align 8
  %812 = icmp eq i32 %810, %811
  br i1 %812, label %1721, label %813

813:                                              ; preds = %800, %1721, %786, %1720
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9, i64* %749) #11
  %814 = load i32, i32* %757, align 8
  %815 = icmp eq i32 %814, 0
  %816 = load i64*, i64** %760, align 8
  %817 = load i64, i64* %816, align 8
  %818 = load i32, i32* %761, align 4
  %819 = add nsw i32 %818, 1
  store i32 %819, i32* %761, align 4
  br i1 %815, label %829, label %820

820:                                              ; preds = %813
  %821 = shl nsw i32 %818, 1
  %822 = sext i32 %821 to i64
  %823 = add i64 %817, 11
  %824 = add i64 %823, %822
  %825 = inttoptr i64 %824 to i16*
  store i16 62, i16* %825, align 2
  %826 = load i32, i32* %761, align 4
  %827 = load i32, i32* %762, align 8
  %828 = icmp eq i32 %826, %827
  br i1 %828, label %838, label %839

829:                                              ; preds = %813
  %830 = sext i32 %818 to i64
  %831 = add i64 %817, 11
  %832 = add i64 %831, %830
  %833 = inttoptr i64 %832 to i8*
  store i8 62, i8* %833, align 1
  %834 = load i32, i32* %761, align 4
  %835 = load i32, i32* %762, align 8
  %836 = icmp eq i32 %834, %835
  br i1 %836, label %837, label %839

837:                                              ; preds = %829
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9) #11
  br label %839

838:                                              ; preds = %820
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9) #11
  br label %839

839:                                              ; preds = %820, %838, %829, %837
  %840 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9) #11
  %841 = icmp eq i64* %840, null
  br i1 %841, label %842, label %843, !prof !3

842:                                              ; preds = %839
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

843:                                              ; preds = %839
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %756) #11
  br label %1016

844:                                              ; preds = %748, %691, %697, %686, %404
  %845 = load i64, i64* %1, align 8
  %846 = and i64 %845, 1
  %847 = icmp eq i64 %846, 0
  %848 = and i64 %845, -4294967296
  %849 = add i64 %845, -1
  %850 = inttoptr i64 %849 to i32*
  br i1 %847, label %859, label %851

851:                                              ; preds = %844
  %852 = load atomic i32, i32* %850 monotonic, align 4
  %853 = zext i32 %852 to i64
  %854 = or i64 %848, %853
  %855 = add i64 %854, 7
  %856 = inttoptr i64 %855 to i16*
  %857 = load atomic i16, i16* %856 monotonic, align 2
  %858 = icmp ugt i16 %857, 185
  br i1 %858, label %882, label %859

859:                                              ; preds = %844, %851
  %860 = load atomic i32, i32* %850 monotonic, align 4
  %861 = zext i32 %860 to i64
  %862 = or i64 %848, %861
  %863 = add i64 %862, 4
  %864 = inttoptr i64 %863 to i8*
  %865 = load atomic i8, i8* %864 monotonic, align 1
  %866 = icmp eq i8 %865, 0
  br i1 %866, label %867, label %876

867:                                              ; preds = %859
  %868 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %869 = bitcast %"class.v8::internal::Vector.1009"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %869) #11
  %870 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.238, i64 0, i64 0), i8** %870, align 8
  %871 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %5, i64 0, i32 1
  store i64 16, i64* %871, align 8
  %872 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %868, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %5, i8 zeroext 0) #11
  %873 = icmp eq i64* %872, null
  br i1 %873, label %874, label %875, !prof !3

874:                                              ; preds = %867
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

875:                                              ; preds = %867
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %869) #11
  br label %1016

876:                                              ; preds = %859
  %877 = call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %0, i64* %1, i8* null)
  %878 = icmp eq i64* %877, null
  br i1 %878, label %881, label %879, !prof !3

879:                                              ; preds = %876
  %880 = load i64, i64* %877, align 8
  br label %882

881:                                              ; preds = %876
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

882:                                              ; preds = %879, %851
  %883 = phi i64 [ %845, %851 ], [ %880, %879 ]
  %884 = phi i64* [ %1, %851 ], [ %877, %879 ]
  %885 = bitcast %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %885) #11
  %886 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %883, i64* %886, align 8
  %887 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %10, i64 0, i32 0
  %888 = call i64 @_ZN2v88internal10JSReceiver10class_nameEv(%"class.v8::internal::JSReceiver"* nonnull %887) #11
  %889 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %890 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %889, align 8
  %891 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %890, null
  br i1 %891, label %894, label %892

892:                                              ; preds = %882
  %893 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %890, i64 %888) #11
  br label %907

894:                                              ; preds = %882
  %895 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %896 = load i64*, i64** %895, align 8
  %897 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %898 = load i64*, i64** %897, align 8
  %899 = icmp eq i64* %896, %898
  br i1 %899, label %900, label %902

900:                                              ; preds = %894
  %901 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %902

902:                                              ; preds = %900, %894
  %903 = phi i64* [ %901, %900 ], [ %896, %894 ]
  %904 = ptrtoint i64* %903 to i64
  %905 = add i64 %904, 8
  %906 = inttoptr i64 %905 to i64*
  store i64* %906, i64** %895, align 8
  store i64 %888, i64* %903, align 8
  br label %907

907:                                              ; preds = %892, %902
  %908 = phi i64* [ %893, %892 ], [ %903, %902 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %885) #11
  %909 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 522
  %910 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %884, i64* %909)
  %911 = load i64, i64* %910, align 8
  %912 = and i64 %911, 1
  %913 = icmp eq i64 %912, 0
  br i1 %913, label %926, label %914

914:                                              ; preds = %907
  %915 = and i64 %911, -4294967296
  %916 = add i64 %911, -1
  %917 = inttoptr i64 %916 to i32*
  %918 = load atomic i32, i32* %917 monotonic, align 4
  %919 = zext i32 %918 to i64
  %920 = or i64 %915, %919
  %921 = add i64 %920, 7
  %922 = inttoptr i64 %921 to i16*
  %923 = load atomic i16, i16* %922 monotonic, align 2
  %924 = icmp ult i16 %923, 64
  %925 = select i1 %924, i64* %910, i64* %908
  br label %926

926:                                              ; preds = %914, %907
  %927 = phi i64* [ %908, %907 ], [ %925, %914 ]
  %928 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %928) #11
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, %"class.v8::internal::Isolate"* %0) #11
  %929 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 1
  %930 = load i32, i32* %929, align 8
  %931 = icmp eq i32 %930, 0
  %932 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 6, i32 0, i32 0
  %933 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 4
  %934 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 3
  %935 = load i64*, i64** %932, align 8
  %936 = load i64, i64* %935, align 8
  %937 = load i32, i32* %933, align 4
  %938 = add nsw i32 %937, 1
  store i32 %938, i32* %933, align 4
  br i1 %931, label %948, label %939

939:                                              ; preds = %926
  %940 = shl nsw i32 %937, 1
  %941 = sext i32 %940 to i64
  %942 = add i64 %936, 11
  %943 = add i64 %942, %941
  %944 = inttoptr i64 %943 to i16*
  store i16 91, i16* %944, align 2
  %945 = load i32, i32* %933, align 4
  %946 = load i32, i32* %934, align 8
  %947 = icmp eq i32 %945, %946
  br i1 %947, label %970, label %972

948:                                              ; preds = %926
  %949 = sext i32 %937 to i64
  %950 = add i64 %936, 11
  %951 = add i64 %950, %949
  %952 = inttoptr i64 %951 to i8*
  store i8 91, i8* %952, align 1
  %953 = load i32, i32* %933, align 4
  %954 = load i32, i32* %934, align 8
  %955 = icmp eq i32 %953, %954
  br i1 %955, label %956, label %958

956:                                              ; preds = %948
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %957 = load i32, i32* %933, align 4
  br label %958

958:                                              ; preds = %956, %948
  %959 = phi i32 [ %957, %956 ], [ %953, %948 ]
  %960 = load i64*, i64** %932, align 8
  %961 = load i64, i64* %960, align 8
  %962 = add nsw i32 %959, 1
  store i32 %962, i32* %933, align 4
  %963 = sext i32 %959 to i64
  %964 = add i64 %961, 11
  %965 = add i64 %964, %963
  %966 = inttoptr i64 %965 to i8*
  store i8 111, i8* %966, align 1
  %967 = load i32, i32* %933, align 4
  %968 = load i32, i32* %934, align 8
  %969 = icmp eq i32 %967, %968
  br i1 %969, label %1544, label %1546

970:                                              ; preds = %939
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %971 = load i32, i32* %933, align 4
  br label %972

972:                                              ; preds = %970, %939
  %973 = phi i32 [ %971, %970 ], [ %945, %939 ]
  %974 = load i64*, i64** %932, align 8
  %975 = load i64, i64* %974, align 8
  %976 = add nsw i32 %973, 1
  store i32 %976, i32* %933, align 4
  %977 = shl nsw i32 %973, 1
  %978 = sext i32 %977 to i64
  %979 = add i64 %975, 11
  %980 = add i64 %979, %978
  %981 = inttoptr i64 %980 to i16*
  store i16 111, i16* %981, align 2
  %982 = load i32, i32* %933, align 4
  %983 = load i32, i32* %934, align 8
  %984 = icmp eq i32 %982, %983
  br i1 %984, label %1629, label %1631

985:                                              ; preds = %1706, %1719, %1616, %1628
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* %927) #11
  %986 = load i32, i32* %929, align 8
  %987 = icmp eq i32 %986, 0
  %988 = load i64*, i64** %932, align 8
  %989 = load i64, i64* %988, align 8
  %990 = load i32, i32* %933, align 4
  %991 = add nsw i32 %990, 1
  store i32 %991, i32* %933, align 4
  br i1 %987, label %1001, label %992

992:                                              ; preds = %985
  %993 = shl nsw i32 %990, 1
  %994 = sext i32 %993 to i64
  %995 = add i64 %989, 11
  %996 = add i64 %995, %994
  %997 = inttoptr i64 %996 to i16*
  store i16 93, i16* %997, align 2
  %998 = load i32, i32* %933, align 4
  %999 = load i32, i32* %934, align 8
  %1000 = icmp eq i32 %998, %999
  br i1 %1000, label %1010, label %1011

1001:                                             ; preds = %985
  %1002 = sext i32 %990 to i64
  %1003 = add i64 %989, 11
  %1004 = add i64 %1003, %1002
  %1005 = inttoptr i64 %1004 to i8*
  store i8 93, i8* %1005, align 1
  %1006 = load i32, i32* %933, align 4
  %1007 = load i32, i32* %934, align 8
  %1008 = icmp eq i32 %1006, %1007
  br i1 %1008, label %1009, label %1011

1009:                                             ; preds = %1001
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  br label %1011

1010:                                             ; preds = %992
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  br label %1011

1011:                                             ; preds = %992, %1010, %1001, %1009
  %1012 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1013 = icmp eq i64* %1012, null
  br i1 %1013, label %1014, label %1015, !prof !3

1014:                                             ; preds = %1011
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

1015:                                             ; preds = %1011
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %928) #11
  br label %1016

1016:                                             ; preds = %646, %526, %519, %272, %262, %122, %53, %1015, %875, %843, %403, %244, %155, %133, %112
  %1017 = phi i64* [ %113, %112 ], [ %130, %133 ], [ %241, %244 ], [ %156, %155 ], [ %400, %403 ], [ %840, %843 ], [ %1012, %1015 ], [ %872, %875 ], [ %54, %53 ], [ %123, %122 ], [ %263, %262 ], [ %273, %272 ], [ %643, %646 ], [ %520, %519 ], [ %500, %526 ]
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  ret i64* %1017

1018:                                             ; preds = %203
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1019 = load i32, i32* %178, align 4
  br label %1020

1020:                                             ; preds = %1018, %203
  %1021 = phi i32 [ %1019, %1018 ], [ %212, %203 ]
  %1022 = load i64*, i64** %177, align 8
  %1023 = load i64, i64* %1022, align 8
  %1024 = add nsw i32 %1021, 1
  store i32 %1024, i32* %178, align 4
  %1025 = sext i32 %1021 to i64
  %1026 = add i64 %1023, 11
  %1027 = add i64 %1026, %1025
  %1028 = inttoptr i64 %1027 to i8*
  store i8 46, i8* %1028, align 1
  %1029 = load i32, i32* %178, align 4
  %1030 = load i32, i32* %179, align 8
  %1031 = icmp eq i32 %1029, %1030
  br i1 %1031, label %1032, label %1034

1032:                                             ; preds = %1020
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1033 = load i32, i32* %178, align 4
  br label %1034

1034:                                             ; preds = %1032, %1020
  %1035 = phi i32 [ %1033, %1032 ], [ %1029, %1020 ]
  %1036 = load i64*, i64** %177, align 8
  %1037 = load i64, i64* %1036, align 8
  %1038 = add nsw i32 %1035, 1
  store i32 %1038, i32* %178, align 4
  %1039 = sext i32 %1035 to i64
  %1040 = add i64 %1037, 11
  %1041 = add i64 %1040, %1039
  %1042 = inttoptr i64 %1041 to i8*
  store i8 60, i8* %1042, align 1
  %1043 = load i32, i32* %178, align 4
  %1044 = load i32, i32* %179, align 8
  %1045 = icmp eq i32 %1043, %1044
  br i1 %1045, label %1046, label %1048

1046:                                             ; preds = %1034
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1047 = load i32, i32* %178, align 4
  br label %1048

1048:                                             ; preds = %1046, %1034
  %1049 = phi i32 [ %1047, %1046 ], [ %1043, %1034 ]
  %1050 = load i64*, i64** %177, align 8
  %1051 = load i64, i64* %1050, align 8
  %1052 = add nsw i32 %1049, 1
  store i32 %1052, i32* %178, align 4
  %1053 = sext i32 %1049 to i64
  %1054 = add i64 %1051, 11
  %1055 = add i64 %1054, %1053
  %1056 = inttoptr i64 %1055 to i8*
  store i8 111, i8* %1056, align 1
  %1057 = load i32, i32* %178, align 4
  %1058 = load i32, i32* %179, align 8
  %1059 = icmp eq i32 %1057, %1058
  br i1 %1059, label %1060, label %1062

1060:                                             ; preds = %1048
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1061 = load i32, i32* %178, align 4
  br label %1062

1062:                                             ; preds = %1060, %1048
  %1063 = phi i32 [ %1061, %1060 ], [ %1057, %1048 ]
  %1064 = load i64*, i64** %177, align 8
  %1065 = load i64, i64* %1064, align 8
  %1066 = add nsw i32 %1063, 1
  store i32 %1066, i32* %178, align 4
  %1067 = sext i32 %1063 to i64
  %1068 = add i64 %1065, 11
  %1069 = add i64 %1068, %1067
  %1070 = inttoptr i64 %1069 to i8*
  store i8 109, i8* %1070, align 1
  %1071 = load i32, i32* %178, align 4
  %1072 = load i32, i32* %179, align 8
  %1073 = icmp eq i32 %1071, %1072
  br i1 %1073, label %1074, label %1076

1074:                                             ; preds = %1062
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1075 = load i32, i32* %178, align 4
  br label %1076

1076:                                             ; preds = %1074, %1062
  %1077 = phi i32 [ %1075, %1074 ], [ %1071, %1062 ]
  %1078 = load i64*, i64** %177, align 8
  %1079 = load i64, i64* %1078, align 8
  %1080 = add nsw i32 %1077, 1
  store i32 %1080, i32* %178, align 4
  %1081 = sext i32 %1077 to i64
  %1082 = add i64 %1079, 11
  %1083 = add i64 %1082, %1081
  %1084 = inttoptr i64 %1083 to i8*
  store i8 105, i8* %1084, align 1
  %1085 = load i32, i32* %178, align 4
  %1086 = load i32, i32* %179, align 8
  %1087 = icmp eq i32 %1085, %1086
  br i1 %1087, label %1088, label %1090

1088:                                             ; preds = %1076
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1089 = load i32, i32* %178, align 4
  br label %1090

1090:                                             ; preds = %1088, %1076
  %1091 = phi i32 [ %1089, %1088 ], [ %1085, %1076 ]
  %1092 = load i64*, i64** %177, align 8
  %1093 = load i64, i64* %1092, align 8
  %1094 = add nsw i32 %1091, 1
  store i32 %1094, i32* %178, align 4
  %1095 = sext i32 %1091 to i64
  %1096 = add i64 %1093, 11
  %1097 = add i64 %1096, %1095
  %1098 = inttoptr i64 %1097 to i8*
  store i8 116, i8* %1098, align 1
  %1099 = load i32, i32* %178, align 4
  %1100 = load i32, i32* %179, align 8
  %1101 = icmp eq i32 %1099, %1100
  br i1 %1101, label %1102, label %1104

1102:                                             ; preds = %1090
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1103 = load i32, i32* %178, align 4
  br label %1104

1104:                                             ; preds = %1102, %1090
  %1105 = phi i32 [ %1103, %1102 ], [ %1099, %1090 ]
  %1106 = load i64*, i64** %177, align 8
  %1107 = load i64, i64* %1106, align 8
  %1108 = add nsw i32 %1105, 1
  store i32 %1108, i32* %178, align 4
  %1109 = sext i32 %1105 to i64
  %1110 = add i64 %1107, 11
  %1111 = add i64 %1110, %1109
  %1112 = inttoptr i64 %1111 to i8*
  store i8 116, i8* %1112, align 1
  %1113 = load i32, i32* %178, align 4
  %1114 = load i32, i32* %179, align 8
  %1115 = icmp eq i32 %1113, %1114
  br i1 %1115, label %1116, label %1118

1116:                                             ; preds = %1104
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1117 = load i32, i32* %178, align 4
  br label %1118

1118:                                             ; preds = %1116, %1104
  %1119 = phi i32 [ %1117, %1116 ], [ %1113, %1104 ]
  %1120 = load i64*, i64** %177, align 8
  %1121 = load i64, i64* %1120, align 8
  %1122 = add nsw i32 %1119, 1
  store i32 %1122, i32* %178, align 4
  %1123 = sext i32 %1119 to i64
  %1124 = add i64 %1121, 11
  %1125 = add i64 %1124, %1123
  %1126 = inttoptr i64 %1125 to i8*
  store i8 101, i8* %1126, align 1
  %1127 = load i32, i32* %178, align 4
  %1128 = load i32, i32* %179, align 8
  %1129 = icmp eq i32 %1127, %1128
  br i1 %1129, label %1130, label %1132

1130:                                             ; preds = %1118
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1131 = load i32, i32* %178, align 4
  br label %1132

1132:                                             ; preds = %1130, %1118
  %1133 = phi i32 [ %1131, %1130 ], [ %1127, %1118 ]
  %1134 = load i64*, i64** %177, align 8
  %1135 = load i64, i64* %1134, align 8
  %1136 = add nsw i32 %1133, 1
  store i32 %1136, i32* %178, align 4
  %1137 = sext i32 %1133 to i64
  %1138 = add i64 %1135, 11
  %1139 = add i64 %1138, %1137
  %1140 = inttoptr i64 %1139 to i8*
  store i8 100, i8* %1140, align 1
  %1141 = load i32, i32* %178, align 4
  %1142 = load i32, i32* %179, align 8
  %1143 = icmp eq i32 %1141, %1142
  br i1 %1143, label %1144, label %1146

1144:                                             ; preds = %1132
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1145 = load i32, i32* %178, align 4
  br label %1146

1146:                                             ; preds = %1144, %1132
  %1147 = phi i32 [ %1145, %1144 ], [ %1141, %1132 ]
  %1148 = load i64*, i64** %177, align 8
  %1149 = load i64, i64* %1148, align 8
  %1150 = add nsw i32 %1147, 1
  store i32 %1150, i32* %178, align 4
  %1151 = sext i32 %1147 to i64
  %1152 = add i64 %1149, 11
  %1153 = add i64 %1152, %1151
  %1154 = inttoptr i64 %1153 to i8*
  store i8 62, i8* %1154, align 1
  %1155 = load i32, i32* %178, align 4
  %1156 = load i32, i32* %179, align 8
  %1157 = icmp eq i32 %1155, %1156
  br i1 %1157, label %1158, label %1160

1158:                                             ; preds = %1146
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1159 = load i32, i32* %178, align 4
  br label %1160

1160:                                             ; preds = %1158, %1146
  %1161 = phi i32 [ %1159, %1158 ], [ %1155, %1146 ]
  %1162 = load i64*, i64** %177, align 8
  %1163 = load i64, i64* %1162, align 8
  %1164 = add nsw i32 %1161, 1
  store i32 %1164, i32* %178, align 4
  %1165 = sext i32 %1161 to i64
  %1166 = add i64 %1163, 11
  %1167 = add i64 %1166, %1165
  %1168 = inttoptr i64 %1167 to i8*
  store i8 46, i8* %1168, align 1
  %1169 = load i32, i32* %178, align 4
  %1170 = load i32, i32* %179, align 8
  %1171 = icmp eq i32 %1169, %1170
  br i1 %1171, label %1172, label %1174

1172:                                             ; preds = %1160
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1173 = load i32, i32* %178, align 4
  br label %1174

1174:                                             ; preds = %1172, %1160
  %1175 = phi i32 [ %1173, %1172 ], [ %1169, %1160 ]
  %1176 = load i64*, i64** %177, align 8
  %1177 = load i64, i64* %1176, align 8
  %1178 = add nsw i32 %1175, 1
  store i32 %1178, i32* %178, align 4
  %1179 = sext i32 %1175 to i64
  %1180 = add i64 %1177, 11
  %1181 = add i64 %1180, %1179
  %1182 = inttoptr i64 %1181 to i8*
  store i8 46, i8* %1182, align 1
  %1183 = load i32, i32* %178, align 4
  %1184 = load i32, i32* %179, align 8
  %1185 = icmp eq i32 %1183, %1184
  br i1 %1185, label %1186, label %1188

1186:                                             ; preds = %1174
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1187 = load i32, i32* %178, align 4
  br label %1188

1188:                                             ; preds = %1186, %1174
  %1189 = phi i32 [ %1187, %1186 ], [ %1183, %1174 ]
  %1190 = load i64*, i64** %177, align 8
  %1191 = load i64, i64* %1190, align 8
  %1192 = add nsw i32 %1189, 1
  store i32 %1192, i32* %178, align 4
  %1193 = sext i32 %1189 to i64
  %1194 = add i64 %1191, 11
  %1195 = add i64 %1194, %1193
  %1196 = inttoptr i64 %1195 to i8*
  store i8 46, i8* %1196, align 1
  %1197 = load i32, i32* %178, align 4
  %1198 = load i32, i32* %179, align 8
  %1199 = icmp eq i32 %1197, %1198
  br i1 %1199, label %1200, label %230

1200:                                             ; preds = %1188
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  br label %230

1201:                                             ; preds = %217
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1202 = load i32, i32* %178, align 4
  br label %1203

1203:                                             ; preds = %1201, %217
  %1204 = phi i32 [ %1202, %1201 ], [ %227, %217 ]
  %1205 = load i64*, i64** %177, align 8
  %1206 = load i64, i64* %1205, align 8
  %1207 = add nsw i32 %1204, 1
  store i32 %1207, i32* %178, align 4
  %1208 = shl nsw i32 %1204, 1
  %1209 = sext i32 %1208 to i64
  %1210 = add i64 %1206, 11
  %1211 = add i64 %1210, %1209
  %1212 = inttoptr i64 %1211 to i16*
  store i16 46, i16* %1212, align 2
  %1213 = load i32, i32* %178, align 4
  %1214 = load i32, i32* %179, align 8
  %1215 = icmp eq i32 %1213, %1214
  br i1 %1215, label %1216, label %1218

1216:                                             ; preds = %1203
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1217 = load i32, i32* %178, align 4
  br label %1218

1218:                                             ; preds = %1216, %1203
  %1219 = phi i32 [ %1217, %1216 ], [ %1213, %1203 ]
  %1220 = load i64*, i64** %177, align 8
  %1221 = load i64, i64* %1220, align 8
  %1222 = add nsw i32 %1219, 1
  store i32 %1222, i32* %178, align 4
  %1223 = shl nsw i32 %1219, 1
  %1224 = sext i32 %1223 to i64
  %1225 = add i64 %1221, 11
  %1226 = add i64 %1225, %1224
  %1227 = inttoptr i64 %1226 to i16*
  store i16 60, i16* %1227, align 2
  %1228 = load i32, i32* %178, align 4
  %1229 = load i32, i32* %179, align 8
  %1230 = icmp eq i32 %1228, %1229
  br i1 %1230, label %1231, label %1233

1231:                                             ; preds = %1218
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1232 = load i32, i32* %178, align 4
  br label %1233

1233:                                             ; preds = %1231, %1218
  %1234 = phi i32 [ %1232, %1231 ], [ %1228, %1218 ]
  %1235 = load i64*, i64** %177, align 8
  %1236 = load i64, i64* %1235, align 8
  %1237 = add nsw i32 %1234, 1
  store i32 %1237, i32* %178, align 4
  %1238 = shl nsw i32 %1234, 1
  %1239 = sext i32 %1238 to i64
  %1240 = add i64 %1236, 11
  %1241 = add i64 %1240, %1239
  %1242 = inttoptr i64 %1241 to i16*
  store i16 111, i16* %1242, align 2
  %1243 = load i32, i32* %178, align 4
  %1244 = load i32, i32* %179, align 8
  %1245 = icmp eq i32 %1243, %1244
  br i1 %1245, label %1246, label %1248

1246:                                             ; preds = %1233
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1247 = load i32, i32* %178, align 4
  br label %1248

1248:                                             ; preds = %1246, %1233
  %1249 = phi i32 [ %1247, %1246 ], [ %1243, %1233 ]
  %1250 = load i64*, i64** %177, align 8
  %1251 = load i64, i64* %1250, align 8
  %1252 = add nsw i32 %1249, 1
  store i32 %1252, i32* %178, align 4
  %1253 = shl nsw i32 %1249, 1
  %1254 = sext i32 %1253 to i64
  %1255 = add i64 %1251, 11
  %1256 = add i64 %1255, %1254
  %1257 = inttoptr i64 %1256 to i16*
  store i16 109, i16* %1257, align 2
  %1258 = load i32, i32* %178, align 4
  %1259 = load i32, i32* %179, align 8
  %1260 = icmp eq i32 %1258, %1259
  br i1 %1260, label %1261, label %1263

1261:                                             ; preds = %1248
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1262 = load i32, i32* %178, align 4
  br label %1263

1263:                                             ; preds = %1261, %1248
  %1264 = phi i32 [ %1262, %1261 ], [ %1258, %1248 ]
  %1265 = load i64*, i64** %177, align 8
  %1266 = load i64, i64* %1265, align 8
  %1267 = add nsw i32 %1264, 1
  store i32 %1267, i32* %178, align 4
  %1268 = shl nsw i32 %1264, 1
  %1269 = sext i32 %1268 to i64
  %1270 = add i64 %1266, 11
  %1271 = add i64 %1270, %1269
  %1272 = inttoptr i64 %1271 to i16*
  store i16 105, i16* %1272, align 2
  %1273 = load i32, i32* %178, align 4
  %1274 = load i32, i32* %179, align 8
  %1275 = icmp eq i32 %1273, %1274
  br i1 %1275, label %1276, label %1278

1276:                                             ; preds = %1263
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1277 = load i32, i32* %178, align 4
  br label %1278

1278:                                             ; preds = %1276, %1263
  %1279 = phi i32 [ %1277, %1276 ], [ %1273, %1263 ]
  %1280 = load i64*, i64** %177, align 8
  %1281 = load i64, i64* %1280, align 8
  %1282 = add nsw i32 %1279, 1
  store i32 %1282, i32* %178, align 4
  %1283 = shl nsw i32 %1279, 1
  %1284 = sext i32 %1283 to i64
  %1285 = add i64 %1281, 11
  %1286 = add i64 %1285, %1284
  %1287 = inttoptr i64 %1286 to i16*
  store i16 116, i16* %1287, align 2
  %1288 = load i32, i32* %178, align 4
  %1289 = load i32, i32* %179, align 8
  %1290 = icmp eq i32 %1288, %1289
  br i1 %1290, label %1291, label %1293

1291:                                             ; preds = %1278
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1292 = load i32, i32* %178, align 4
  br label %1293

1293:                                             ; preds = %1291, %1278
  %1294 = phi i32 [ %1292, %1291 ], [ %1288, %1278 ]
  %1295 = load i64*, i64** %177, align 8
  %1296 = load i64, i64* %1295, align 8
  %1297 = add nsw i32 %1294, 1
  store i32 %1297, i32* %178, align 4
  %1298 = shl nsw i32 %1294, 1
  %1299 = sext i32 %1298 to i64
  %1300 = add i64 %1296, 11
  %1301 = add i64 %1300, %1299
  %1302 = inttoptr i64 %1301 to i16*
  store i16 116, i16* %1302, align 2
  %1303 = load i32, i32* %178, align 4
  %1304 = load i32, i32* %179, align 8
  %1305 = icmp eq i32 %1303, %1304
  br i1 %1305, label %1306, label %1308

1306:                                             ; preds = %1293
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1307 = load i32, i32* %178, align 4
  br label %1308

1308:                                             ; preds = %1306, %1293
  %1309 = phi i32 [ %1307, %1306 ], [ %1303, %1293 ]
  %1310 = load i64*, i64** %177, align 8
  %1311 = load i64, i64* %1310, align 8
  %1312 = add nsw i32 %1309, 1
  store i32 %1312, i32* %178, align 4
  %1313 = shl nsw i32 %1309, 1
  %1314 = sext i32 %1313 to i64
  %1315 = add i64 %1311, 11
  %1316 = add i64 %1315, %1314
  %1317 = inttoptr i64 %1316 to i16*
  store i16 101, i16* %1317, align 2
  %1318 = load i32, i32* %178, align 4
  %1319 = load i32, i32* %179, align 8
  %1320 = icmp eq i32 %1318, %1319
  br i1 %1320, label %1321, label %1323

1321:                                             ; preds = %1308
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1322 = load i32, i32* %178, align 4
  br label %1323

1323:                                             ; preds = %1321, %1308
  %1324 = phi i32 [ %1322, %1321 ], [ %1318, %1308 ]
  %1325 = load i64*, i64** %177, align 8
  %1326 = load i64, i64* %1325, align 8
  %1327 = add nsw i32 %1324, 1
  store i32 %1327, i32* %178, align 4
  %1328 = shl nsw i32 %1324, 1
  %1329 = sext i32 %1328 to i64
  %1330 = add i64 %1326, 11
  %1331 = add i64 %1330, %1329
  %1332 = inttoptr i64 %1331 to i16*
  store i16 100, i16* %1332, align 2
  %1333 = load i32, i32* %178, align 4
  %1334 = load i32, i32* %179, align 8
  %1335 = icmp eq i32 %1333, %1334
  br i1 %1335, label %1336, label %1338

1336:                                             ; preds = %1323
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1337 = load i32, i32* %178, align 4
  br label %1338

1338:                                             ; preds = %1336, %1323
  %1339 = phi i32 [ %1337, %1336 ], [ %1333, %1323 ]
  %1340 = load i64*, i64** %177, align 8
  %1341 = load i64, i64* %1340, align 8
  %1342 = add nsw i32 %1339, 1
  store i32 %1342, i32* %178, align 4
  %1343 = shl nsw i32 %1339, 1
  %1344 = sext i32 %1343 to i64
  %1345 = add i64 %1341, 11
  %1346 = add i64 %1345, %1344
  %1347 = inttoptr i64 %1346 to i16*
  store i16 62, i16* %1347, align 2
  %1348 = load i32, i32* %178, align 4
  %1349 = load i32, i32* %179, align 8
  %1350 = icmp eq i32 %1348, %1349
  br i1 %1350, label %1351, label %1353

1351:                                             ; preds = %1338
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1352 = load i32, i32* %178, align 4
  br label %1353

1353:                                             ; preds = %1351, %1338
  %1354 = phi i32 [ %1352, %1351 ], [ %1348, %1338 ]
  %1355 = load i64*, i64** %177, align 8
  %1356 = load i64, i64* %1355, align 8
  %1357 = add nsw i32 %1354, 1
  store i32 %1357, i32* %178, align 4
  %1358 = shl nsw i32 %1354, 1
  %1359 = sext i32 %1358 to i64
  %1360 = add i64 %1356, 11
  %1361 = add i64 %1360, %1359
  %1362 = inttoptr i64 %1361 to i16*
  store i16 46, i16* %1362, align 2
  %1363 = load i32, i32* %178, align 4
  %1364 = load i32, i32* %179, align 8
  %1365 = icmp eq i32 %1363, %1364
  br i1 %1365, label %1366, label %1368

1366:                                             ; preds = %1353
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1367 = load i32, i32* %178, align 4
  br label %1368

1368:                                             ; preds = %1366, %1353
  %1369 = phi i32 [ %1367, %1366 ], [ %1363, %1353 ]
  %1370 = load i64*, i64** %177, align 8
  %1371 = load i64, i64* %1370, align 8
  %1372 = add nsw i32 %1369, 1
  store i32 %1372, i32* %178, align 4
  %1373 = shl nsw i32 %1369, 1
  %1374 = sext i32 %1373 to i64
  %1375 = add i64 %1371, 11
  %1376 = add i64 %1375, %1374
  %1377 = inttoptr i64 %1376 to i16*
  store i16 46, i16* %1377, align 2
  %1378 = load i32, i32* %178, align 4
  %1379 = load i32, i32* %179, align 8
  %1380 = icmp eq i32 %1378, %1379
  br i1 %1380, label %1381, label %1383

1381:                                             ; preds = %1368
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  %1382 = load i32, i32* %178, align 4
  br label %1383

1383:                                             ; preds = %1381, %1368
  %1384 = phi i32 [ %1382, %1381 ], [ %1378, %1368 ]
  %1385 = load i64*, i64** %177, align 8
  %1386 = load i64, i64* %1385, align 8
  %1387 = add nsw i32 %1384, 1
  store i32 %1387, i32* %178, align 4
  %1388 = shl nsw i32 %1384, 1
  %1389 = sext i32 %1388 to i64
  %1390 = add i64 %1386, 11
  %1391 = add i64 %1390, %1389
  %1392 = inttoptr i64 %1391 to i16*
  store i16 46, i16* %1392, align 2
  %1393 = load i32, i32* %178, align 4
  %1394 = load i32, i32* %179, align 8
  %1395 = icmp eq i32 %1393, %1394
  br i1 %1395, label %1396, label %230

1396:                                             ; preds = %1383
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %7) #11
  br label %230

1397:                                             ; preds = %308
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1398 = load i32, i32* %283, align 4
  br label %1399

1399:                                             ; preds = %1397, %308
  %1400 = phi i32 [ %1398, %1397 ], [ %317, %308 ]
  %1401 = load i64*, i64** %282, align 8
  %1402 = load i64, i64* %1401, align 8
  %1403 = add nsw i32 %1400, 1
  store i32 %1403, i32* %283, align 4
  %1404 = sext i32 %1400 to i64
  %1405 = add i64 %1402, 11
  %1406 = add i64 %1405, %1404
  %1407 = inttoptr i64 %1406 to i8*
  store i8 109, i8* %1407, align 1
  %1408 = load i32, i32* %283, align 4
  %1409 = load i32, i32* %284, align 8
  %1410 = icmp eq i32 %1408, %1409
  br i1 %1410, label %1411, label %1413

1411:                                             ; preds = %1399
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1412 = load i32, i32* %283, align 4
  br label %1413

1413:                                             ; preds = %1411, %1399
  %1414 = phi i32 [ %1412, %1411 ], [ %1408, %1399 ]
  %1415 = load i64*, i64** %282, align 8
  %1416 = load i64, i64* %1415, align 8
  %1417 = add nsw i32 %1414, 1
  store i32 %1417, i32* %283, align 4
  %1418 = sext i32 %1414 to i64
  %1419 = add i64 %1416, 11
  %1420 = add i64 %1419, %1418
  %1421 = inttoptr i64 %1420 to i8*
  store i8 98, i8* %1421, align 1
  %1422 = load i32, i32* %283, align 4
  %1423 = load i32, i32* %284, align 8
  %1424 = icmp eq i32 %1422, %1423
  br i1 %1424, label %1425, label %1427

1425:                                             ; preds = %1413
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1426 = load i32, i32* %283, align 4
  br label %1427

1427:                                             ; preds = %1425, %1413
  %1428 = phi i32 [ %1426, %1425 ], [ %1422, %1413 ]
  %1429 = load i64*, i64** %282, align 8
  %1430 = load i64, i64* %1429, align 8
  %1431 = add nsw i32 %1428, 1
  store i32 %1431, i32* %283, align 4
  %1432 = sext i32 %1428 to i64
  %1433 = add i64 %1430, 11
  %1434 = add i64 %1433, %1432
  %1435 = inttoptr i64 %1434 to i8*
  store i8 111, i8* %1435, align 1
  %1436 = load i32, i32* %283, align 4
  %1437 = load i32, i32* %284, align 8
  %1438 = icmp eq i32 %1436, %1437
  br i1 %1438, label %1439, label %1441

1439:                                             ; preds = %1427
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1440 = load i32, i32* %283, align 4
  br label %1441

1441:                                             ; preds = %1439, %1427
  %1442 = phi i32 [ %1440, %1439 ], [ %1436, %1427 ]
  %1443 = load i64*, i64** %282, align 8
  %1444 = load i64, i64* %1443, align 8
  %1445 = add nsw i32 %1442, 1
  store i32 %1445, i32* %283, align 4
  %1446 = sext i32 %1442 to i64
  %1447 = add i64 %1444, 11
  %1448 = add i64 %1447, %1446
  %1449 = inttoptr i64 %1448 to i8*
  store i8 108, i8* %1449, align 1
  %1450 = load i32, i32* %283, align 4
  %1451 = load i32, i32* %284, align 8
  %1452 = icmp eq i32 %1450, %1451
  br i1 %1452, label %1453, label %1455

1453:                                             ; preds = %1441
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1454 = load i32, i32* %283, align 4
  br label %1455

1455:                                             ; preds = %1453, %1441
  %1456 = phi i32 [ %1454, %1453 ], [ %1450, %1441 ]
  %1457 = load i64*, i64** %282, align 8
  %1458 = load i64, i64* %1457, align 8
  %1459 = add nsw i32 %1456, 1
  store i32 %1459, i32* %283, align 4
  %1460 = sext i32 %1456 to i64
  %1461 = add i64 %1458, 11
  %1462 = add i64 %1461, %1460
  %1463 = inttoptr i64 %1462 to i8*
  store i8 40, i8* %1463, align 1
  %1464 = load i32, i32* %283, align 4
  %1465 = load i32, i32* %284, align 8
  %1466 = icmp eq i32 %1464, %1465
  br i1 %1466, label %1467, label %335

1467:                                             ; preds = %1455
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  br label %335

1468:                                             ; preds = %322
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1469 = load i32, i32* %283, align 4
  br label %1470

1470:                                             ; preds = %1468, %322
  %1471 = phi i32 [ %1469, %1468 ], [ %332, %322 ]
  %1472 = load i64*, i64** %282, align 8
  %1473 = load i64, i64* %1472, align 8
  %1474 = add nsw i32 %1471, 1
  store i32 %1474, i32* %283, align 4
  %1475 = shl nsw i32 %1471, 1
  %1476 = sext i32 %1475 to i64
  %1477 = add i64 %1473, 11
  %1478 = add i64 %1477, %1476
  %1479 = inttoptr i64 %1478 to i16*
  store i16 109, i16* %1479, align 2
  %1480 = load i32, i32* %283, align 4
  %1481 = load i32, i32* %284, align 8
  %1482 = icmp eq i32 %1480, %1481
  br i1 %1482, label %1483, label %1485

1483:                                             ; preds = %1470
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1484 = load i32, i32* %283, align 4
  br label %1485

1485:                                             ; preds = %1483, %1470
  %1486 = phi i32 [ %1484, %1483 ], [ %1480, %1470 ]
  %1487 = load i64*, i64** %282, align 8
  %1488 = load i64, i64* %1487, align 8
  %1489 = add nsw i32 %1486, 1
  store i32 %1489, i32* %283, align 4
  %1490 = shl nsw i32 %1486, 1
  %1491 = sext i32 %1490 to i64
  %1492 = add i64 %1488, 11
  %1493 = add i64 %1492, %1491
  %1494 = inttoptr i64 %1493 to i16*
  store i16 98, i16* %1494, align 2
  %1495 = load i32, i32* %283, align 4
  %1496 = load i32, i32* %284, align 8
  %1497 = icmp eq i32 %1495, %1496
  br i1 %1497, label %1498, label %1500

1498:                                             ; preds = %1485
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1499 = load i32, i32* %283, align 4
  br label %1500

1500:                                             ; preds = %1498, %1485
  %1501 = phi i32 [ %1499, %1498 ], [ %1495, %1485 ]
  %1502 = load i64*, i64** %282, align 8
  %1503 = load i64, i64* %1502, align 8
  %1504 = add nsw i32 %1501, 1
  store i32 %1504, i32* %283, align 4
  %1505 = shl nsw i32 %1501, 1
  %1506 = sext i32 %1505 to i64
  %1507 = add i64 %1503, 11
  %1508 = add i64 %1507, %1506
  %1509 = inttoptr i64 %1508 to i16*
  store i16 111, i16* %1509, align 2
  %1510 = load i32, i32* %283, align 4
  %1511 = load i32, i32* %284, align 8
  %1512 = icmp eq i32 %1510, %1511
  br i1 %1512, label %1513, label %1515

1513:                                             ; preds = %1500
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1514 = load i32, i32* %283, align 4
  br label %1515

1515:                                             ; preds = %1513, %1500
  %1516 = phi i32 [ %1514, %1513 ], [ %1510, %1500 ]
  %1517 = load i64*, i64** %282, align 8
  %1518 = load i64, i64* %1517, align 8
  %1519 = add nsw i32 %1516, 1
  store i32 %1519, i32* %283, align 4
  %1520 = shl nsw i32 %1516, 1
  %1521 = sext i32 %1520 to i64
  %1522 = add i64 %1518, 11
  %1523 = add i64 %1522, %1521
  %1524 = inttoptr i64 %1523 to i16*
  store i16 108, i16* %1524, align 2
  %1525 = load i32, i32* %283, align 4
  %1526 = load i32, i32* %284, align 8
  %1527 = icmp eq i32 %1525, %1526
  br i1 %1527, label %1528, label %1530

1528:                                             ; preds = %1515
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  %1529 = load i32, i32* %283, align 4
  br label %1530

1530:                                             ; preds = %1528, %1515
  %1531 = phi i32 [ %1529, %1528 ], [ %1525, %1515 ]
  %1532 = load i64*, i64** %282, align 8
  %1533 = load i64, i64* %1532, align 8
  %1534 = add nsw i32 %1531, 1
  store i32 %1534, i32* %283, align 4
  %1535 = shl nsw i32 %1531, 1
  %1536 = sext i32 %1535 to i64
  %1537 = add i64 %1533, 11
  %1538 = add i64 %1537, %1536
  %1539 = inttoptr i64 %1538 to i16*
  store i16 40, i16* %1539, align 2
  %1540 = load i32, i32* %283, align 4
  %1541 = load i32, i32* %284, align 8
  %1542 = icmp eq i32 %1540, %1541
  br i1 %1542, label %1543, label %335

1543:                                             ; preds = %1530
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %8) #11
  br label %335

1544:                                             ; preds = %958
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1545 = load i32, i32* %933, align 4
  br label %1546

1546:                                             ; preds = %1544, %958
  %1547 = phi i32 [ %1545, %1544 ], [ %967, %958 ]
  %1548 = load i64*, i64** %932, align 8
  %1549 = load i64, i64* %1548, align 8
  %1550 = add nsw i32 %1547, 1
  store i32 %1550, i32* %933, align 4
  %1551 = sext i32 %1547 to i64
  %1552 = add i64 %1549, 11
  %1553 = add i64 %1552, %1551
  %1554 = inttoptr i64 %1553 to i8*
  store i8 98, i8* %1554, align 1
  %1555 = load i32, i32* %933, align 4
  %1556 = load i32, i32* %934, align 8
  %1557 = icmp eq i32 %1555, %1556
  br i1 %1557, label %1558, label %1560

1558:                                             ; preds = %1546
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1559 = load i32, i32* %933, align 4
  br label %1560

1560:                                             ; preds = %1558, %1546
  %1561 = phi i32 [ %1559, %1558 ], [ %1555, %1546 ]
  %1562 = load i64*, i64** %932, align 8
  %1563 = load i64, i64* %1562, align 8
  %1564 = add nsw i32 %1561, 1
  store i32 %1564, i32* %933, align 4
  %1565 = sext i32 %1561 to i64
  %1566 = add i64 %1563, 11
  %1567 = add i64 %1566, %1565
  %1568 = inttoptr i64 %1567 to i8*
  store i8 106, i8* %1568, align 1
  %1569 = load i32, i32* %933, align 4
  %1570 = load i32, i32* %934, align 8
  %1571 = icmp eq i32 %1569, %1570
  br i1 %1571, label %1572, label %1574

1572:                                             ; preds = %1560
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1573 = load i32, i32* %933, align 4
  br label %1574

1574:                                             ; preds = %1572, %1560
  %1575 = phi i32 [ %1573, %1572 ], [ %1569, %1560 ]
  %1576 = load i64*, i64** %932, align 8
  %1577 = load i64, i64* %1576, align 8
  %1578 = add nsw i32 %1575, 1
  store i32 %1578, i32* %933, align 4
  %1579 = sext i32 %1575 to i64
  %1580 = add i64 %1577, 11
  %1581 = add i64 %1580, %1579
  %1582 = inttoptr i64 %1581 to i8*
  store i8 101, i8* %1582, align 1
  %1583 = load i32, i32* %933, align 4
  %1584 = load i32, i32* %934, align 8
  %1585 = icmp eq i32 %1583, %1584
  br i1 %1585, label %1586, label %1588

1586:                                             ; preds = %1574
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1587 = load i32, i32* %933, align 4
  br label %1588

1588:                                             ; preds = %1586, %1574
  %1589 = phi i32 [ %1587, %1586 ], [ %1583, %1574 ]
  %1590 = load i64*, i64** %932, align 8
  %1591 = load i64, i64* %1590, align 8
  %1592 = add nsw i32 %1589, 1
  store i32 %1592, i32* %933, align 4
  %1593 = sext i32 %1589 to i64
  %1594 = add i64 %1591, 11
  %1595 = add i64 %1594, %1593
  %1596 = inttoptr i64 %1595 to i8*
  store i8 99, i8* %1596, align 1
  %1597 = load i32, i32* %933, align 4
  %1598 = load i32, i32* %934, align 8
  %1599 = icmp eq i32 %1597, %1598
  br i1 %1599, label %1600, label %1602

1600:                                             ; preds = %1588
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1601 = load i32, i32* %933, align 4
  br label %1602

1602:                                             ; preds = %1600, %1588
  %1603 = phi i32 [ %1601, %1600 ], [ %1597, %1588 ]
  %1604 = load i64*, i64** %932, align 8
  %1605 = load i64, i64* %1604, align 8
  %1606 = add nsw i32 %1603, 1
  store i32 %1606, i32* %933, align 4
  %1607 = sext i32 %1603 to i64
  %1608 = add i64 %1605, 11
  %1609 = add i64 %1608, %1607
  %1610 = inttoptr i64 %1609 to i8*
  store i8 116, i8* %1610, align 1
  %1611 = load i32, i32* %933, align 4
  %1612 = load i32, i32* %934, align 8
  %1613 = icmp eq i32 %1611, %1612
  br i1 %1613, label %1614, label %1616

1614:                                             ; preds = %1602
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1615 = load i32, i32* %933, align 4
  br label %1616

1616:                                             ; preds = %1614, %1602
  %1617 = phi i32 [ %1615, %1614 ], [ %1611, %1602 ]
  %1618 = load i64*, i64** %932, align 8
  %1619 = load i64, i64* %1618, align 8
  %1620 = add nsw i32 %1617, 1
  store i32 %1620, i32* %933, align 4
  %1621 = sext i32 %1617 to i64
  %1622 = add i64 %1619, 11
  %1623 = add i64 %1622, %1621
  %1624 = inttoptr i64 %1623 to i8*
  store i8 32, i8* %1624, align 1
  %1625 = load i32, i32* %933, align 4
  %1626 = load i32, i32* %934, align 8
  %1627 = icmp eq i32 %1625, %1626
  br i1 %1627, label %1628, label %985

1628:                                             ; preds = %1616
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  br label %985

1629:                                             ; preds = %972
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1630 = load i32, i32* %933, align 4
  br label %1631

1631:                                             ; preds = %1629, %972
  %1632 = phi i32 [ %1630, %1629 ], [ %982, %972 ]
  %1633 = load i64*, i64** %932, align 8
  %1634 = load i64, i64* %1633, align 8
  %1635 = add nsw i32 %1632, 1
  store i32 %1635, i32* %933, align 4
  %1636 = shl nsw i32 %1632, 1
  %1637 = sext i32 %1636 to i64
  %1638 = add i64 %1634, 11
  %1639 = add i64 %1638, %1637
  %1640 = inttoptr i64 %1639 to i16*
  store i16 98, i16* %1640, align 2
  %1641 = load i32, i32* %933, align 4
  %1642 = load i32, i32* %934, align 8
  %1643 = icmp eq i32 %1641, %1642
  br i1 %1643, label %1644, label %1646

1644:                                             ; preds = %1631
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1645 = load i32, i32* %933, align 4
  br label %1646

1646:                                             ; preds = %1644, %1631
  %1647 = phi i32 [ %1645, %1644 ], [ %1641, %1631 ]
  %1648 = load i64*, i64** %932, align 8
  %1649 = load i64, i64* %1648, align 8
  %1650 = add nsw i32 %1647, 1
  store i32 %1650, i32* %933, align 4
  %1651 = shl nsw i32 %1647, 1
  %1652 = sext i32 %1651 to i64
  %1653 = add i64 %1649, 11
  %1654 = add i64 %1653, %1652
  %1655 = inttoptr i64 %1654 to i16*
  store i16 106, i16* %1655, align 2
  %1656 = load i32, i32* %933, align 4
  %1657 = load i32, i32* %934, align 8
  %1658 = icmp eq i32 %1656, %1657
  br i1 %1658, label %1659, label %1661

1659:                                             ; preds = %1646
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1660 = load i32, i32* %933, align 4
  br label %1661

1661:                                             ; preds = %1659, %1646
  %1662 = phi i32 [ %1660, %1659 ], [ %1656, %1646 ]
  %1663 = load i64*, i64** %932, align 8
  %1664 = load i64, i64* %1663, align 8
  %1665 = add nsw i32 %1662, 1
  store i32 %1665, i32* %933, align 4
  %1666 = shl nsw i32 %1662, 1
  %1667 = sext i32 %1666 to i64
  %1668 = add i64 %1664, 11
  %1669 = add i64 %1668, %1667
  %1670 = inttoptr i64 %1669 to i16*
  store i16 101, i16* %1670, align 2
  %1671 = load i32, i32* %933, align 4
  %1672 = load i32, i32* %934, align 8
  %1673 = icmp eq i32 %1671, %1672
  br i1 %1673, label %1674, label %1676

1674:                                             ; preds = %1661
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1675 = load i32, i32* %933, align 4
  br label %1676

1676:                                             ; preds = %1674, %1661
  %1677 = phi i32 [ %1675, %1674 ], [ %1671, %1661 ]
  %1678 = load i64*, i64** %932, align 8
  %1679 = load i64, i64* %1678, align 8
  %1680 = add nsw i32 %1677, 1
  store i32 %1680, i32* %933, align 4
  %1681 = shl nsw i32 %1677, 1
  %1682 = sext i32 %1681 to i64
  %1683 = add i64 %1679, 11
  %1684 = add i64 %1683, %1682
  %1685 = inttoptr i64 %1684 to i16*
  store i16 99, i16* %1685, align 2
  %1686 = load i32, i32* %933, align 4
  %1687 = load i32, i32* %934, align 8
  %1688 = icmp eq i32 %1686, %1687
  br i1 %1688, label %1689, label %1691

1689:                                             ; preds = %1676
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1690 = load i32, i32* %933, align 4
  br label %1691

1691:                                             ; preds = %1689, %1676
  %1692 = phi i32 [ %1690, %1689 ], [ %1686, %1676 ]
  %1693 = load i64*, i64** %932, align 8
  %1694 = load i64, i64* %1693, align 8
  %1695 = add nsw i32 %1692, 1
  store i32 %1695, i32* %933, align 4
  %1696 = shl nsw i32 %1692, 1
  %1697 = sext i32 %1696 to i64
  %1698 = add i64 %1694, 11
  %1699 = add i64 %1698, %1697
  %1700 = inttoptr i64 %1699 to i16*
  store i16 116, i16* %1700, align 2
  %1701 = load i32, i32* %933, align 4
  %1702 = load i32, i32* %934, align 8
  %1703 = icmp eq i32 %1701, %1702
  br i1 %1703, label %1704, label %1706

1704:                                             ; preds = %1691
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  %1705 = load i32, i32* %933, align 4
  br label %1706

1706:                                             ; preds = %1704, %1691
  %1707 = phi i32 [ %1705, %1704 ], [ %1701, %1691 ]
  %1708 = load i64*, i64** %932, align 8
  %1709 = load i64, i64* %1708, align 8
  %1710 = add nsw i32 %1707, 1
  store i32 %1710, i32* %933, align 4
  %1711 = shl nsw i32 %1707, 1
  %1712 = sext i32 %1711 to i64
  %1713 = add i64 %1709, 11
  %1714 = add i64 %1713, %1712
  %1715 = inttoptr i64 %1714 to i16*
  store i16 32, i16* %1715, align 2
  %1716 = load i32, i32* %933, align 4
  %1717 = load i32, i32* %934, align 8
  %1718 = icmp eq i32 %1716, %1717
  br i1 %1718, label %1719, label %985

1719:                                             ; preds = %1706
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #11
  br label %985

1720:                                             ; preds = %786
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9) #11
  br label %813

1721:                                             ; preds = %800
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %9) #11
  br label %813
}

declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"*, %"class.v8::internal::Isolate"*) unnamed_addr #1

declare i64* @_ZN2v88internal15JSBoundFunction8ToStringENS0_6HandleIS1_EE(i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal10JSFunction8ToStringENS0_6HandleIS1_EE(i64*) local_unnamed_addr #1

declare void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::Isolate"*) unnamed_addr #1

declare void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"*, i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JSReceiver15GetDataPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #11
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = ptrtoint i64* %0 to i64
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %14 = icmp eq i64* %1, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %2
  %16 = load i64, i64* null, align 536870912
  %17 = add i64 %16, -1
  %18 = inttoptr i64 %17 to i32*
  br label %40

19:                                               ; preds = %2
  %20 = load i64, i64* %1, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i64 %22, 4294967295
  %27 = icmp eq i64 %26, 0
  tail call void @llvm.assume(i1 %27) #11
  %28 = zext i32 %25 to i64
  %29 = or i64 %22, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 64
  br i1 %33, label %34, label %40

34:                                               ; preds = %19
  %35 = add i64 %20, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %15, %34, %19
  %41 = phi i32* [ %18, %15 ], [ %24, %34 ], [ %24, %19 ]
  %42 = phi i64 [ %16, %15 ], [ %20, %34 ], [ %20, %19 ]
  br label %43

43:                                               ; preds = %40, %34
  %44 = phi i32* [ %41, %40 ], [ %24, %34 ]
  %45 = phi i64 [ %42, %40 ], [ %20, %34 ]
  %46 = phi i32 [ 2, %40 ], [ 0, %34 ]
  store i32 %46, i32* %13, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %1, i64** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %57 = bitcast %"class.v8::internal::Handle.1220"* %56 to i64*
  store i64 %12, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %59 = bitcast i64* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 -1, i64 16, i1 false) #11
  %60 = and i64 %45, -4294967296
  %61 = load atomic i32, i32* %44 monotonic, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %60, %62
  %64 = add i64 %63, 7
  %65 = inttoptr i64 %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = and i16 %66, -32
  %68 = icmp eq i16 %67, 32
  br i1 %68, label %69, label %73

69:                                               ; preds = %43
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  %71 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %70, align 8
  %72 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %71, %"class.v8::internal::Isolate"* %11, i64* %1) #11
  br label %73

73:                                               ; preds = %43, %69
  %74 = phi i64* [ %72, %69 ], [ %1, %43 ]
  store i64* %74, i64** %52, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #11
  %75 = load i32, i32* %47, align 4
  %76 = icmp eq i32 %75, 4
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::internal::Isolate"** %51 to %"class.v8::internal::Factory"**
  %79 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %79, i64 160
  %81 = bitcast %"class.v8::internal::Factory"* %80 to i64*
  br label %84

82:                                               ; preds = %73
  %83 = call i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nonnull %3, i32 0) #11
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i64* [ %83, %82 ], [ %81, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #11
  ret i64* %85
}

declare i64* @_ZN2v88internal15JSBoundFunction7GetNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal10JSFunction7GetNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare i64 @_ZN2v88internal10JSReceiver10class_nameEv(%"class.v8::internal::JSReceiver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 66
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  %18 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0) #11
  br label %19

19:                                               ; preds = %2, %6, %17
  %20 = phi i64* [ %18, %17 ], [ %1, %6 ], [ %1, %2 ]
  %21 = icmp eq i64* %20, null
  br i1 %21, label %133, label %22

22:                                               ; preds = %19
  %23 = load i64, i64* %20, align 8
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %52

26:                                               ; preds = %22
  %27 = trunc i64 %23 to i32
  %28 = ashr i32 %27, 1
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  %31 = shl nuw nsw i32 %30, 1
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %26
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #11
  %38 = ptrtoint i64* %37 to i64
  br label %133

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %32, i64* %48, align 8
  br label %133

52:                                               ; preds = %22
  %53 = add i64 %23, 3
  %54 = inttoptr i64 %53 to double*
  %55 = load double, double* %54, align 1
  %56 = fcmp uno double %55, 0.000000e+00
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = tail call double @llvm.fabs.f64(double %55) #19
  %59 = fcmp ueq double %58, 0x7FF0000000000000
  br i1 %59, label %67, label %60

60:                                               ; preds = %57
  %61 = fcmp oeq double %55, 0.000000e+00
  br i1 %61, label %70, label %62

62:                                               ; preds = %60
  %63 = fcmp oge double %55, 0.000000e+00
  %64 = tail call double @llvm.floor.f64(double %55) #11
  %65 = tail call double @llvm.ceil.f64(double %55) #11
  %66 = select i1 %63, double %64, double %65
  br label %67

67:                                               ; preds = %57, %62
  %68 = phi double [ %66, %62 ], [ %55, %57 ]
  %69 = fcmp ugt double %68, 0.000000e+00
  br i1 %69, label %90, label %70

70:                                               ; preds = %60, %52, %67
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %72 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %71, align 8
  %73 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %72, i64 0) #11
  %76 = ptrtoint i64* %75 to i64
  br label %133

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %81 = load i64*, i64** %80, align 8
  %82 = icmp eq i64* %79, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %85

85:                                               ; preds = %83, %77
  %86 = phi i64* [ %84, %83 ], [ %79, %77 ]
  %87 = ptrtoint i64* %86 to i64
  %88 = add i64 %87, 8
  %89 = inttoptr i64 %88 to i64*
  store i64* %89, i64** %78, align 8
  store i64 0, i64* %86, align 8
  br label %133

90:                                               ; preds = %67
  %91 = fcmp oge double %68, 0x433FFFFFFFFFFFFF
  %92 = select i1 %91, double 0x433FFFFFFFFFFFFF, double %68
  %93 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %94 = fcmp ult double %92, 0xC1D0000000000000
  %95 = fcmp ugt double %92, 0x41CFFFFFFF800000
  %96 = or i1 %95, %94
  %97 = bitcast double %92 to i64
  %98 = icmp eq i64 %97, -9223372036854775808
  %99 = or i1 %96, %98
  br i1 %99, label %125, label %100

100:                                              ; preds = %90
  %101 = fptosi double %92 to i32
  %102 = sitofp i32 %101 to double
  %103 = fcmp oeq double %92, %102
  br i1 %103, label %104, label %125

104:                                              ; preds = %100
  %105 = sext i32 %101 to i64
  %106 = shl nsw i64 %105, 1
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %108 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %107, align 8
  %109 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %104
  %111 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %108, i64 %106) #11
  br label %130

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %114 = load i64*, i64** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %116 = load i64*, i64** %115, align 8
  %117 = icmp eq i64* %114, %116
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  %119 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i64* [ %119, %118 ], [ %114, %112 ]
  %122 = ptrtoint i64* %121 to i64
  %123 = add i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  store i64* %124, i64** %113, align 8
  store i64 %106, i64* %121, align 8
  br label %130

125:                                              ; preds = %100, %90
  %126 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %93) #11
  %127 = load i64, i64* %126, align 8
  %128 = add i64 %127, 3
  %129 = inttoptr i64 %128 to double*
  store double %92, double* %129, align 1
  br label %130

130:                                              ; preds = %110, %120, %125
  %131 = phi i64* [ %126, %125 ], [ %111, %110 ], [ %121, %120 ]
  %132 = ptrtoint i64* %131 to i64
  br label %133

133:                                              ; preds = %85, %74, %47, %36, %19, %130
  %134 = phi i64 [ %132, %130 ], [ 0, %19 ], [ %38, %36 ], [ %49, %47 ], [ %76, %74 ], [ %87, %85 ]
  %135 = inttoptr i64 %134 to i64*
  ret i64* %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object14ConvertToIndexEPNS0_7IsolateENS0_6HandleIS1_EENS0_15MessageTemplateE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %4 to i32
  %8 = trunc i64 %6 to i32
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %10, label %30

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 0) #11
  %16 = ptrtoint i64* %15 to i64
  br label %127

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %25

25:                                               ; preds = %23, %17
  %26 = phi i64* [ %24, %23 ], [ %19, %17 ]
  %27 = ptrtoint i64* %26 to i64
  %28 = add i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  store i64* %29, i64** %18, align 8
  store i64 0, i64* %26, align 8
  br label %127

30:                                               ; preds = %3
  %31 = and i64 %4, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %46, label %33

33:                                               ; preds = %30
  %34 = and i64 %4, -4294967296
  %35 = add i64 %4, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %34, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = icmp eq i16 %42, 66
  br i1 %43, label %46, label %44

44:                                               ; preds = %33
  %45 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0) #11
  br label %46

46:                                               ; preds = %30, %33, %44
  %47 = phi i64* [ %45, %44 ], [ %1, %33 ], [ %1, %30 ]
  %48 = icmp eq i64* %47, null
  br i1 %48, label %127, label %49

49:                                               ; preds = %46
  %50 = load i64, i64* %47, align 8
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %49
  %54 = ptrtoint i64* %47 to i64
  %55 = trunc i64 %50 to i32
  %56 = icmp sgt i32 %55, -1
  br i1 %56, label %127, label %57

57:                                               ; preds = %53
  %58 = ashr i32 %55, 1
  %59 = sitofp i32 %58 to double
  br label %65

60:                                               ; preds = %49
  %61 = add i64 %50, 3
  %62 = inttoptr i64 %61 to double*
  %63 = load double, double* %62, align 1
  %64 = fcmp uno double %63, 0.000000e+00
  br i1 %64, label %76, label %65

65:                                               ; preds = %57, %60
  %66 = phi double [ %59, %57 ], [ %63, %60 ]
  %67 = tail call double @llvm.fabs.f64(double %66) #19
  %68 = fcmp ueq double %67, 0x7FF0000000000000
  br i1 %68, label %76, label %69

69:                                               ; preds = %65
  %70 = fcmp oeq double %66, 0.000000e+00
  br i1 %70, label %76, label %71

71:                                               ; preds = %69
  %72 = fcmp oge double %66, 0.000000e+00
  %73 = tail call double @llvm.floor.f64(double %66) #11
  %74 = tail call double @llvm.ceil.f64(double %66) #11
  %75 = select i1 %72, double %73, double %74
  br label %76

76:                                               ; preds = %60, %65, %69, %71
  %77 = phi double [ %75, %71 ], [ 0.000000e+00, %60 ], [ %66, %65 ], [ 0.000000e+00, %69 ]
  %78 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %79 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %80 = fcmp ult double %77, 0xC1D0000000000000
  %81 = fcmp ugt double %77, 0x41CFFFFFFF800000
  %82 = or i1 %81, %80
  %83 = bitcast double %77 to i64
  %84 = icmp eq i64 %83, -9223372036854775808
  %85 = or i1 %82, %84
  br i1 %85, label %111, label %86

86:                                               ; preds = %76
  %87 = fptosi double %77 to i32
  %88 = sitofp i32 %87 to double
  %89 = fcmp oeq double %77, %88
  br i1 %89, label %90, label %111

90:                                               ; preds = %86
  %91 = sext i32 %87 to i64
  %92 = shl nsw i64 %91, 1
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %94 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %93, align 8
  %95 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %90
  %97 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %94, i64 %92) #11
  br label %116

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %102 = load i64*, i64** %101, align 8
  %103 = icmp eq i64* %100, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %98
  %105 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %106

106:                                              ; preds = %104, %98
  %107 = phi i64* [ %105, %104 ], [ %100, %98 ]
  %108 = ptrtoint i64* %107 to i64
  %109 = add i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  store i64* %110, i64** %99, align 8
  store i64 %92, i64* %107, align 8
  br label %116

111:                                              ; preds = %86, %76
  %112 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %79) #11
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 3
  %115 = inttoptr i64 %114 to double*
  store double %77, double* %115, align 1
  br label %116

116:                                              ; preds = %96, %106, %111
  %117 = phi i64* [ %112, %111 ], [ %97, %96 ], [ %107, %106 ]
  %118 = fcmp olt double %77, 0.000000e+00
  %119 = fcmp ogt double %77, 0x433FFFFFFFFFFFFF
  %120 = or i1 %118, %119
  br i1 %120, label %121, label %125

121:                                              ; preds = %116
  %122 = tail call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %78, i32 %2, i64* %117, i64* null, i64* null) #11
  %123 = load i64, i64* %122, align 8
  %124 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %123, %"class.v8::internal::MessageLocation"* null) #11
  br label %127

125:                                              ; preds = %116
  %126 = ptrtoint i64* %117 to i64
  br label %127

127:                                              ; preds = %25, %14, %53, %46, %121, %125
  %128 = phi i64 [ 0, %121 ], [ %126, %125 ], [ 0, %46 ], [ %54, %53 ], [ %16, %14 ], [ %27, %25 ]
  %129 = inttoptr i64 %128 to i64*
  ret i64* %129
}

declare i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = trunc i64 %4 to i32
  %9 = icmp ugt i32 %8, 1
  br label %97

10:                                               ; preds = %2
  %11 = and i64 %4, -4294967296
  %12 = add i64 %4, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 67
  br i1 %20, label %21, label %34

21:                                               ; preds = %10
  %22 = add i64 %4, 23
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = lshr i32 %24, 1
  %26 = trunc i32 %25 to i8
  %27 = icmp ult i8 %26, 2
  br i1 %27, label %28, label %34

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 7
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %4 to i32
  %32 = trunc i64 %30 to i32
  %33 = icmp eq i32 %31, %32
  br label %97

34:                                               ; preds = %10, %21
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 6
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %4 to i32
  %38 = trunc i64 %36 to i32
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %97, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %37, %43
  br i1 %44, label %97, label %45

45:                                               ; preds = %40
  %46 = and i64 %4, -4294967296
  %47 = add i64 %4, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = add i64 %51, 9
  %53 = inttoptr i64 %52 to i8*
  %54 = load atomic i8, i8* %53 monotonic, align 1
  %55 = and i8 %54, 16
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %97

57:                                               ; preds = %45
  %58 = load atomic i32, i32* %48 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %46, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp ult i16 %63, 64
  br i1 %64, label %65, label %70

65:                                               ; preds = %57
  %66 = add i64 %4, 7
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 0
  br label %97

70:                                               ; preds = %57
  %71 = load atomic i32, i32* %48 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %46, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp eq i16 %76, 66
  br i1 %77, label %78, label %83

78:                                               ; preds = %70
  %79 = add i64 %4, 3
  %80 = inttoptr i64 %79 to double*
  %81 = load double, double* %80, align 1
  %82 = tail call zeroext i1 @_ZN2v88internal15DoubleToBooleanEd(double %81) #11
  br label %97

83:                                               ; preds = %70
  %84 = load atomic i32, i32* %48 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %46, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = icmp eq i16 %89, 65
  br i1 %90, label %91, label %97

91:                                               ; preds = %83
  %92 = add i64 %4, 3
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2147483646
  %96 = icmp ne i32 %95, 0
  br label %97

97:                                               ; preds = %45, %40, %34, %83, %91, %78, %65, %28, %7
  %98 = phi i1 [ %9, %7 ], [ %33, %28 ], [ %69, %65 ], [ %82, %78 ], [ %96, %91 ], [ false, %40 ], [ false, %45 ], [ true, %83 ], [ false, %34 ]
  ret i1 %98
}

declare zeroext i1 @_ZN2v88internal15DoubleToBooleanEd(double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6Object9ToBooleanEPNS0_7IsolateE(%"class.v8::internal::Object"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = and i64 %4, -4294967296
  %9 = add i64 %4, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 67
  br i1 %17, label %18, label %25

18:                                               ; preds = %7
  %19 = add i64 %4, 23
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 1
  %23 = trunc i32 %22 to i8
  %24 = icmp ult i8 %23, 2
  br i1 %24, label %35, label %25

25:                                               ; preds = %7, %2, %18
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %27 = tail call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* %0, %"class.v8::internal::Isolate"* %1)
  %28 = ptrtoint %"class.v8::internal::Heap"* %26 to i64
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 7
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 8
  %33 = select i1 %27, i64* %31, i64* %32
  %34 = load i64, i64* %33, align 8
  br label %35

35:                                               ; preds = %18, %25
  %36 = phi i64 [ %34, %25 ], [ %4, %18 ]
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6Object7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = and i64 %4, -4294967296
  %9 = add i64 %4, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp ult i16 %16, 68
  br i1 %17, label %20, label %18

18:                                               ; preds = %7
  %19 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %1, i32 1) #11
  br label %20

20:                                               ; preds = %3, %7, %18
  %21 = phi i64* [ %19, %18 ], [ %1, %7 ], [ %1, %3 ]
  %22 = icmp eq i64* %21, null
  br i1 %22, label %265, label %23

23:                                               ; preds = %20
  %24 = load i64, i64* %2, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = and i64 %24, -4294967296
  %29 = add i64 %24, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = icmp ult i16 %36, 68
  br i1 %37, label %40, label %38

38:                                               ; preds = %27
  %39 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %2, i32 1) #11
  br label %40

40:                                               ; preds = %23, %27, %38
  %41 = phi i64* [ %39, %38 ], [ %2, %27 ], [ %2, %23 ]
  %42 = icmp eq i64* %41, null
  br i1 %42, label %265, label %43

43:                                               ; preds = %40
  %44 = load i64, i64* %21, align 8
  %45 = and i64 %44, 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %156, label %47

47:                                               ; preds = %43
  %48 = and i64 %44, -4294967296
  %49 = add i64 %44, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = icmp ult i16 %56, 64
  br i1 %57, label %58, label %78

58:                                               ; preds = %47
  %59 = load i64, i64* %41, align 8
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %58
  %63 = and i64 %59, -4294967296
  %64 = add i64 %59, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp ult i16 %71, 64
  br i1 %72, label %73, label %78

73:                                               ; preds = %62
  %74 = tail call i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %0, i64* nonnull %21, i64* nonnull %41) #11
  %75 = zext i32 %74 to i64
  %76 = shl nuw i64 %75, 32
  %77 = or i64 %76, 1
  br label %265

78:                                               ; preds = %58, %62, %47
  %79 = load atomic i32, i32* %50 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %48, %80
  %82 = add i64 %81, 7
  %83 = inttoptr i64 %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = icmp eq i16 %84, 65
  br i1 %85, label %86, label %103

86:                                               ; preds = %78
  %87 = load i64, i64* %41, align 8
  %88 = and i64 %87, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = and i64 %87, -4294967296
  %92 = add i64 %87, -1
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %91, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = icmp ult i16 %99, 64
  br i1 %100, label %101, label %103

101:                                              ; preds = %90
  %102 = tail call i64 @_ZN2v88internal6BigInt15CompareToStringEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %21, i64* nonnull %41) #11
  br label %265

103:                                              ; preds = %86, %90, %78
  %104 = load atomic i32, i32* %50 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %48, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = icmp ult i16 %109, 64
  br i1 %110, label %111, label %137

111:                                              ; preds = %103
  %112 = load i64, i64* %41, align 8
  %113 = and i64 %112, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %137, label %115

115:                                              ; preds = %111
  %116 = and i64 %112, -4294967296
  %117 = add i64 %112, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %116, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = icmp eq i16 %124, 65
  br i1 %125, label %126, label %137

126:                                              ; preds = %115
  %127 = tail call i64 @_ZN2v88internal6BigInt15CompareToStringEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %0, i64* nonnull %41, i64* nonnull %21) #11
  %128 = trunc i64 %127 to i8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %265, label %130, !prof !3

130:                                              ; preds = %126
  %131 = lshr i64 %127, 32
  %132 = trunc i64 %131 to i32
  switch i32 %132, label %134 [
    i32 0, label %265
    i32 2, label %133
  ]

133:                                              ; preds = %130
  br label %265

134:                                              ; preds = %130
  %135 = and i64 %127, -4294967296
  %136 = or i64 %135, 1
  br label %265

137:                                              ; preds = %111, %103, %115
  %138 = load atomic i32, i32* %50 monotonic, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %48, %139
  %141 = add i64 %140, 7
  %142 = inttoptr i64 %141 to i16*
  %143 = load atomic i16, i16* %142 monotonic, align 2
  %144 = icmp eq i16 %143, 66
  br i1 %144, label %156, label %145

145:                                              ; preds = %137
  %146 = load atomic i32, i32* %50 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %48, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = icmp eq i16 %151, 65
  br i1 %152, label %156, label %153

153:                                              ; preds = %145
  %154 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* nonnull %21, i32 1) #11
  %155 = icmp eq i64* %154, null
  br i1 %155, label %265, label %156

156:                                              ; preds = %43, %145, %137, %153
  %157 = phi i64* [ %154, %153 ], [ %21, %137 ], [ %21, %145 ], [ %21, %43 ]
  %158 = load i64, i64* %41, align 8
  %159 = and i64 %158, 1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %183, label %161

161:                                              ; preds = %156
  %162 = and i64 %158, -4294967296
  %163 = add i64 %158, -1
  %164 = inttoptr i64 %163 to i32*
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = zext i32 %165 to i64
  %167 = or i64 %162, %166
  %168 = add i64 %167, 7
  %169 = inttoptr i64 %168 to i16*
  %170 = load atomic i16, i16* %169 monotonic, align 2
  %171 = icmp eq i16 %170, 66
  br i1 %171, label %183, label %172

172:                                              ; preds = %161
  %173 = load atomic i32, i32* %164 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %162, %174
  %176 = add i64 %175, 7
  %177 = inttoptr i64 %176 to i16*
  %178 = load atomic i16, i16* %177 monotonic, align 2
  %179 = icmp eq i16 %178, 65
  br i1 %179, label %183, label %180

180:                                              ; preds = %172
  %181 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* nonnull %41, i32 1) #11
  %182 = icmp eq i64* %181, null
  br i1 %182, label %265, label %183

183:                                              ; preds = %156, %172, %161, %180
  %184 = phi i64* [ %181, %180 ], [ %41, %161 ], [ %41, %172 ], [ %41, %156 ]
  %185 = load i64, i64* %157, align 8
  %186 = and i64 %185, 1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %199, label %188

188:                                              ; preds = %183
  %189 = and i64 %185, -4294967296
  %190 = add i64 %185, -1
  %191 = inttoptr i64 %190 to i32*
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = zext i32 %192 to i64
  %194 = or i64 %189, %193
  %195 = add i64 %194, 7
  %196 = inttoptr i64 %195 to i16*
  %197 = load atomic i16, i16* %196 monotonic, align 2
  %198 = icmp eq i16 %197, 66
  br label %199

199:                                              ; preds = %183, %188
  %200 = phi i1 [ %198, %188 ], [ true, %183 ]
  %201 = load i64, i64* %184, align 8
  %202 = and i64 %201, 1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %215, label %204

204:                                              ; preds = %199
  %205 = and i64 %201, -4294967296
  %206 = add i64 %201, -1
  %207 = inttoptr i64 %206 to i32*
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = zext i32 %208 to i64
  %210 = or i64 %205, %209
  %211 = add i64 %210, 7
  %212 = inttoptr i64 %211 to i16*
  %213 = load atomic i16, i16* %212 monotonic, align 2
  %214 = icmp eq i16 %213, 66
  br label %215

215:                                              ; preds = %199, %204
  %216 = phi i1 [ %214, %204 ], [ true, %199 ]
  %217 = and i1 %200, %216
  br i1 %217, label %218, label %245

218:                                              ; preds = %215
  br i1 %187, label %219, label %223

219:                                              ; preds = %218
  %220 = trunc i64 %185 to i32
  %221 = ashr i32 %220, 1
  %222 = sitofp i32 %221 to double
  br label %227

223:                                              ; preds = %218
  %224 = add i64 %185, 3
  %225 = inttoptr i64 %224 to double*
  %226 = load double, double* %225, align 1
  br label %227

227:                                              ; preds = %219, %223
  %228 = phi double [ %222, %219 ], [ %226, %223 ]
  br i1 %203, label %229, label %233

229:                                              ; preds = %227
  %230 = trunc i64 %201 to i32
  %231 = ashr i32 %230, 1
  %232 = sitofp i32 %231 to double
  br label %237

233:                                              ; preds = %227
  %234 = add i64 %201, 3
  %235 = inttoptr i64 %234 to double*
  %236 = load double, double* %235, align 1
  br label %237

237:                                              ; preds = %229, %233
  %238 = phi double [ %232, %229 ], [ %236, %233 ]
  %239 = fcmp uno double %228, %238
  br i1 %239, label %265, label %240

240:                                              ; preds = %237
  %241 = fcmp olt double %228, %238
  br i1 %241, label %265, label %242

242:                                              ; preds = %240
  %243 = fcmp ogt double %228, %238
  %244 = select i1 %243, i64 8589934593, i64 4294967297
  br label %265

245:                                              ; preds = %215
  %246 = or i1 %200, %216
  br i1 %246, label %252, label %247

247:                                              ; preds = %245
  %248 = tail call i32 @_ZN2v88internal6BigInt15CompareToBigIntENS0_6HandleIS1_EES3_(i64* nonnull %157, i64* nonnull %184) #11
  %249 = zext i32 %248 to i64
  %250 = shl nuw i64 %249, 32
  %251 = or i64 %250, 1
  br label %265

252:                                              ; preds = %245
  br i1 %200, label %253, label %260

253:                                              ; preds = %252
  %254 = tail call i32 @_ZN2v88internal6BigInt15CompareToNumberENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* nonnull %184, i64* nonnull %157) #11
  switch i32 %254, label %256 [
    i32 0, label %265
    i32 2, label %255
  ]

255:                                              ; preds = %253
  br label %265

256:                                              ; preds = %253
  %257 = zext i32 %254 to i64
  %258 = shl nuw i64 %257, 32
  %259 = or i64 %258, 1
  br label %265

260:                                              ; preds = %252
  %261 = tail call i32 @_ZN2v88internal6BigInt15CompareToNumberENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* nonnull %157, i64* nonnull %184) #11
  %262 = zext i32 %261 to i64
  %263 = shl nuw i64 %262, 32
  %264 = or i64 %263, 1
  br label %265

265:                                              ; preds = %256, %255, %253, %242, %240, %237, %134, %133, %130, %180, %153, %126, %40, %20, %247, %260, %101, %73
  %266 = phi i64 [ %77, %73 ], [ %102, %101 ], [ %264, %260 ], [ %251, %247 ], [ 0, %20 ], [ 0, %40 ], [ 0, %126 ], [ 0, %153 ], [ 0, %180 ], [ 1, %133 ], [ %136, %134 ], [ 8589934593, %130 ], [ 12884901889, %237 ], [ 1, %240 ], [ %244, %242 ], [ 1, %255 ], [ %259, %256 ], [ 8589934593, %253 ]
  ret i64 %266
}

declare i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1

declare i64 @_ZN2v88internal6BigInt15CompareToStringEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1

declare i32 @_ZN2v88internal6BigInt15CompareToBigIntENS0_6HandleIS1_EES3_(i64*, i64*) local_unnamed_addr #1

declare i32 @_ZN2v88internal6BigInt15CompareToNumberENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object6EqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %7

7:                                                ; preds = %667, %3
  %8 = phi i64* [ %1, %3 ], [ %663, %667 ]
  %9 = phi i64* [ %2, %3 ], [ %662, %667 ]
  %10 = ptrtoint i64* %8 to i64
  %11 = ptrtoint i64* %9 to i64
  br label %12

12:                                               ; preds = %782, %7
  %13 = phi i64 [ %11, %7 ], [ %783, %782 ]
  %14 = phi i64 [ %10, %7 ], [ %784, %782 ]
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %12
  %20 = and i64 %16, -4294967296
  %21 = add i64 %16, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp eq i16 %28, 66
  br i1 %29, label %30, label %200

30:                                               ; preds = %12, %19
  %31 = inttoptr i64 %13 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %30
  %36 = and i64 %32, -4294967296
  %37 = add i64 %32, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp eq i16 %44, 66
  br i1 %45, label %46, label %76

46:                                               ; preds = %30, %35
  %47 = phi i1 [ true, %30 ], [ false, %35 ]
  br i1 %18, label %48, label %52

48:                                               ; preds = %46
  %49 = trunc i64 %16 to i32
  %50 = ashr i32 %49, 1
  %51 = sitofp i32 %50 to double
  br label %56

52:                                               ; preds = %46
  %53 = add i64 %16, 3
  %54 = inttoptr i64 %53 to double*
  %55 = load double, double* %54, align 1
  br label %56

56:                                               ; preds = %52, %48
  %57 = phi double [ %51, %48 ], [ %55, %52 ]
  br i1 %47, label %58, label %62

58:                                               ; preds = %56
  %59 = trunc i64 %32 to i32
  %60 = ashr i32 %59, 1
  %61 = sitofp i32 %60 to double
  br label %66

62:                                               ; preds = %56
  %63 = add i64 %32, 3
  %64 = inttoptr i64 %63 to double*
  %65 = load double, double* %64, align 1
  br label %66

66:                                               ; preds = %62, %58
  %67 = phi double [ %61, %58 ], [ %65, %62 ]
  %68 = fcmp uno double %57, 0.000000e+00
  br i1 %68, label %820, label %69

69:                                               ; preds = %66
  %70 = fcmp ord double %67, 0.000000e+00
  %71 = fcmp oeq double %57, %67
  %72 = and i1 %71, %70
  %73 = zext i1 %72 to i16
  %74 = shl nuw nsw i16 %73, 8
  %75 = or i16 %74, 1
  br label %820

76:                                               ; preds = %35
  %77 = load atomic i32, i32* %38 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %36, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = icmp eq i16 %82, 67
  br i1 %83, label %84, label %126

84:                                               ; preds = %76
  %85 = add i64 %32, 23
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = lshr i32 %87, 1
  %89 = trunc i32 %88 to i8
  %90 = icmp ult i8 %89, 2
  br i1 %90, label %91, label %126

91:                                               ; preds = %84
  %92 = add i64 %32, 15
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %36, %95
  br i1 %18, label %97, label %101

97:                                               ; preds = %91
  %98 = trunc i64 %16 to i32
  %99 = ashr i32 %98, 1
  %100 = sitofp i32 %99 to double
  br label %105

101:                                              ; preds = %91
  %102 = add i64 %16, 3
  %103 = inttoptr i64 %102 to double*
  %104 = load double, double* %103, align 1
  br label %105

105:                                              ; preds = %101, %97
  %106 = phi double [ %100, %97 ], [ %104, %101 ]
  %107 = and i64 %95, 1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %105
  %110 = ashr i32 %94, 1
  %111 = sitofp i32 %110 to double
  br label %116

112:                                              ; preds = %105
  %113 = add i64 %96, 3
  %114 = inttoptr i64 %113 to double*
  %115 = load double, double* %114, align 1
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi double [ %111, %109 ], [ %115, %112 ]
  %118 = fcmp uno double %106, 0.000000e+00
  br i1 %118, label %820, label %119

119:                                              ; preds = %116
  %120 = fcmp ord double %117, 0.000000e+00
  %121 = fcmp oeq double %106, %117
  %122 = and i1 %121, %120
  %123 = zext i1 %122 to i16
  %124 = shl nuw nsw i16 %123, 8
  %125 = or i16 %124, 1
  br label %820

126:                                              ; preds = %76, %84
  %127 = load atomic i32, i32* %38 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %36, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp ult i16 %132, 64
  br i1 %133, label %134, label %172

134:                                              ; preds = %126
  %135 = inttoptr i64 %14 to i64*
  %136 = inttoptr i64 %13 to i64*
  %137 = tail call i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %136) #11
  %138 = load i64, i64* %135, align 8
  %139 = load i64, i64* %137, align 8
  %140 = and i64 %138, 1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %134
  %143 = trunc i64 %138 to i32
  %144 = ashr i32 %143, 1
  %145 = sitofp i32 %144 to double
  br label %150

146:                                              ; preds = %134
  %147 = add i64 %138, 3
  %148 = inttoptr i64 %147 to double*
  %149 = load double, double* %148, align 1
  br label %150

150:                                              ; preds = %146, %142
  %151 = phi double [ %145, %142 ], [ %149, %146 ]
  %152 = and i64 %139, 1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %150
  %155 = trunc i64 %139 to i32
  %156 = ashr i32 %155, 1
  %157 = sitofp i32 %156 to double
  br label %162

158:                                              ; preds = %150
  %159 = add i64 %139, 3
  %160 = inttoptr i64 %159 to double*
  %161 = load double, double* %160, align 1
  br label %162

162:                                              ; preds = %158, %154
  %163 = phi double [ %157, %154 ], [ %161, %158 ]
  %164 = fcmp uno double %151, 0.000000e+00
  br i1 %164, label %820, label %165

165:                                              ; preds = %162
  %166 = fcmp ord double %163, 0.000000e+00
  %167 = fcmp oeq double %151, %163
  %168 = and i1 %167, %166
  %169 = zext i1 %168 to i16
  %170 = shl nuw nsw i16 %169, 8
  %171 = or i16 %170, 1
  br label %820

172:                                              ; preds = %126
  %173 = load atomic i32, i32* %38 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %36, %174
  %176 = add i64 %175, 7
  %177 = inttoptr i64 %176 to i16*
  %178 = load atomic i16, i16* %177 monotonic, align 2
  %179 = icmp eq i16 %178, 65
  br i1 %179, label %180, label %187

180:                                              ; preds = %172
  %181 = inttoptr i64 %14 to i64*
  %182 = inttoptr i64 %13 to i64*
  %183 = tail call zeroext i1 @_ZN2v88internal6BigInt13EqualToNumberENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %182, i64* %181) #11
  %184 = zext i1 %183 to i16
  %185 = shl nuw nsw i16 %184, 8
  %186 = or i16 %185, 1
  br label %820

187:                                              ; preds = %172
  %188 = load atomic i32, i32* %38 monotonic, align 4
  %189 = zext i32 %188 to i64
  %190 = or i64 %36, %189
  %191 = add i64 %190, 7
  %192 = inttoptr i64 %191 to i16*
  %193 = load atomic i16, i16* %192 monotonic, align 2
  %194 = icmp ugt i16 %193, 185
  br i1 %194, label %195, label %820

195:                                              ; preds = %187
  %196 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %31, i32 0) #11
  %197 = icmp eq i64* %196, null
  br i1 %197, label %820, label %198

198:                                              ; preds = %195
  %199 = ptrtoint i64* %196 to i64
  br label %782

200:                                              ; preds = %19
  %201 = load atomic i32, i32* %22 monotonic, align 4
  %202 = zext i32 %201 to i64
  %203 = or i64 %20, %202
  %204 = add i64 %203, 7
  %205 = inttoptr i64 %204 to i16*
  %206 = load atomic i16, i16* %205 monotonic, align 2
  %207 = icmp ult i16 %206, 64
  br i1 %207, label %208, label %388

208:                                              ; preds = %200
  %209 = inttoptr i64 %13 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, 1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %267, label %213

213:                                              ; preds = %208
  %214 = and i64 %210, -4294967296
  %215 = add i64 %210, -1
  %216 = inttoptr i64 %215 to i32*
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = zext i32 %217 to i64
  %219 = or i64 %214, %218
  %220 = add i64 %219, 7
  %221 = inttoptr i64 %220 to i16*
  %222 = load atomic i16, i16* %221 monotonic, align 2
  %223 = icmp ult i16 %222, 64
  br i1 %223, label %224, label %259

224:                                              ; preds = %213
  %225 = inttoptr i64 %14 to i64*
  %226 = inttoptr i64 %21 to i32*
  %227 = inttoptr i64 %13 to i64*
  %228 = inttoptr i64 %215 to i32*
  %229 = icmp eq i64* %225, %227
  br i1 %229, label %820, label %230

230:                                              ; preds = %224
  %231 = icmp eq i64 %14, 0
  %232 = icmp eq i64 %13, 0
  %233 = or i1 %232, %231
  br i1 %233, label %238, label %234

234:                                              ; preds = %230
  %235 = trunc i64 %16 to i32
  %236 = trunc i64 %210 to i32
  %237 = icmp eq i32 %235, %236
  br i1 %237, label %820, label %238

238:                                              ; preds = %234, %230
  %239 = load atomic i32, i32* %226 monotonic, align 4
  %240 = zext i32 %239 to i64
  %241 = or i64 %20, %240
  %242 = add i64 %241, 7
  %243 = inttoptr i64 %242 to i16*
  %244 = load atomic i16, i16* %243 monotonic, align 2
  %245 = icmp ult i16 %244, 32
  br i1 %245, label %246, label %254

246:                                              ; preds = %238
  %247 = load atomic i32, i32* %228 monotonic, align 4
  %248 = zext i32 %247 to i64
  %249 = or i64 %214, %248
  %250 = add i64 %249, 7
  %251 = inttoptr i64 %250 to i16*
  %252 = load atomic i16, i16* %251 monotonic, align 2
  %253 = icmp ult i16 %252, 32
  br i1 %253, label %820, label %254

254:                                              ; preds = %246, %238
  %255 = tail call zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %0, i64* %225, i64* %227) #11
  %256 = zext i1 %255 to i16
  %257 = shl nuw nsw i16 %256, 8
  %258 = or i16 %257, 1
  br label %820

259:                                              ; preds = %213
  %260 = load atomic i32, i32* %216 monotonic, align 4
  %261 = zext i32 %260 to i64
  %262 = or i64 %214, %261
  %263 = add i64 %262, 7
  %264 = inttoptr i64 %263 to i16*
  %265 = load atomic i16, i16* %264 monotonic, align 2
  %266 = icmp eq i16 %265, 66
  br i1 %266, label %267, label %305

267:                                              ; preds = %208, %259
  %268 = inttoptr i64 %14 to i64*
  %269 = inttoptr i64 %13 to i64*
  %270 = tail call i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %268) #11
  %271 = load i64, i64* %270, align 8
  %272 = load i64, i64* %269, align 8
  %273 = and i64 %271, 1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %279

275:                                              ; preds = %267
  %276 = trunc i64 %271 to i32
  %277 = ashr i32 %276, 1
  %278 = sitofp i32 %277 to double
  br label %283

279:                                              ; preds = %267
  %280 = add i64 %271, 3
  %281 = inttoptr i64 %280 to double*
  %282 = load double, double* %281, align 1
  br label %283

283:                                              ; preds = %279, %275
  %284 = phi double [ %278, %275 ], [ %282, %279 ]
  %285 = and i64 %272, 1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %291

287:                                              ; preds = %283
  %288 = trunc i64 %272 to i32
  %289 = ashr i32 %288, 1
  %290 = sitofp i32 %289 to double
  br label %295

291:                                              ; preds = %283
  %292 = add i64 %272, 3
  %293 = inttoptr i64 %292 to double*
  %294 = load double, double* %293, align 1
  br label %295

295:                                              ; preds = %291, %287
  %296 = phi double [ %290, %287 ], [ %294, %291 ]
  %297 = fcmp uno double %284, 0.000000e+00
  br i1 %297, label %820, label %298

298:                                              ; preds = %295
  %299 = fcmp ord double %296, 0.000000e+00
  %300 = fcmp oeq double %284, %296
  %301 = and i1 %300, %299
  %302 = zext i1 %301 to i16
  %303 = shl nuw nsw i16 %302, 8
  %304 = or i16 %303, 1
  br label %820

305:                                              ; preds = %259
  %306 = load atomic i32, i32* %216 monotonic, align 4
  %307 = zext i32 %306 to i64
  %308 = or i64 %214, %307
  %309 = add i64 %308, 7
  %310 = inttoptr i64 %309 to i16*
  %311 = load atomic i16, i16* %310 monotonic, align 2
  %312 = icmp eq i16 %311, 67
  br i1 %312, label %313, label %363

313:                                              ; preds = %305
  %314 = add i64 %210, 23
  %315 = inttoptr i64 %314 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = lshr i32 %316, 1
  %318 = trunc i32 %317 to i8
  %319 = icmp ult i8 %318, 2
  br i1 %319, label %320, label %363

320:                                              ; preds = %313
  %321 = inttoptr i64 %14 to i64*
  %322 = inttoptr i64 %13 to i64*
  %323 = tail call i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %321) #11
  %324 = load i64, i64* %323, align 8
  %325 = load i64, i64* %322, align 8
  %326 = and i64 %325, -4294967296
  %327 = add i64 %325, 15
  %328 = inttoptr i64 %327 to i32*
  %329 = load i32, i32* %328, align 4
  %330 = zext i32 %329 to i64
  %331 = or i64 %326, %330
  %332 = and i64 %324, 1
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %320
  %335 = trunc i64 %324 to i32
  %336 = ashr i32 %335, 1
  %337 = sitofp i32 %336 to double
  br label %342

338:                                              ; preds = %320
  %339 = add i64 %324, 3
  %340 = inttoptr i64 %339 to double*
  %341 = load double, double* %340, align 1
  br label %342

342:                                              ; preds = %338, %334
  %343 = phi double [ %337, %334 ], [ %341, %338 ]
  %344 = and i64 %330, 1
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %349

346:                                              ; preds = %342
  %347 = ashr i32 %329, 1
  %348 = sitofp i32 %347 to double
  br label %353

349:                                              ; preds = %342
  %350 = add i64 %331, 3
  %351 = inttoptr i64 %350 to double*
  %352 = load double, double* %351, align 1
  br label %353

353:                                              ; preds = %349, %346
  %354 = phi double [ %348, %346 ], [ %352, %349 ]
  %355 = fcmp uno double %343, 0.000000e+00
  br i1 %355, label %820, label %356

356:                                              ; preds = %353
  %357 = fcmp ord double %354, 0.000000e+00
  %358 = fcmp oeq double %343, %354
  %359 = and i1 %358, %357
  %360 = zext i1 %359 to i16
  %361 = shl nuw nsw i16 %360, 8
  %362 = or i16 %361, 1
  br label %820

363:                                              ; preds = %305, %313
  %364 = load atomic i32, i32* %216 monotonic, align 4
  %365 = zext i32 %364 to i64
  %366 = or i64 %214, %365
  %367 = add i64 %366, 7
  %368 = inttoptr i64 %367 to i16*
  %369 = load atomic i16, i16* %368 monotonic, align 2
  %370 = icmp eq i16 %369, 65
  br i1 %370, label %371, label %375

371:                                              ; preds = %363
  %372 = inttoptr i64 %14 to i64*
  %373 = inttoptr i64 %13 to i64*
  %374 = tail call i16 @_ZN2v88internal6BigInt13EqualToStringEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"* %0, i64* %373, i64* %372) #11
  br label %820

375:                                              ; preds = %363
  %376 = load atomic i32, i32* %216 monotonic, align 4
  %377 = zext i32 %376 to i64
  %378 = or i64 %214, %377
  %379 = add i64 %378, 7
  %380 = inttoptr i64 %379 to i16*
  %381 = load atomic i16, i16* %380 monotonic, align 2
  %382 = icmp ugt i16 %381, 185
  br i1 %382, label %383, label %820

383:                                              ; preds = %375
  %384 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %209, i32 0) #11
  %385 = icmp eq i64* %384, null
  br i1 %385, label %820, label %386

386:                                              ; preds = %383
  %387 = ptrtoint i64* %384 to i64
  br label %782

388:                                              ; preds = %200
  %389 = load atomic i32, i32* %22 monotonic, align 4
  %390 = zext i32 %389 to i64
  %391 = or i64 %20, %390
  %392 = add i64 %391, 7
  %393 = inttoptr i64 %392 to i16*
  %394 = load atomic i16, i16* %393 monotonic, align 2
  %395 = icmp eq i16 %394, 67
  br i1 %395, label %396, label %601

396:                                              ; preds = %388
  %397 = add i64 %16, 23
  %398 = inttoptr i64 %397 to i32*
  %399 = load i32, i32* %398, align 4
  %400 = lshr i32 %399, 1
  %401 = trunc i32 %400 to i8
  %402 = icmp ult i8 %401, 2
  br i1 %402, label %403, label %601

403:                                              ; preds = %396
  %404 = inttoptr i64 %13 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = and i64 %405, 1
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %442, label %408

408:                                              ; preds = %403
  %409 = and i64 %405, -4294967296
  %410 = add i64 %405, -1
  %411 = inttoptr i64 %410 to i32*
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = zext i32 %412 to i64
  %414 = or i64 %409, %413
  %415 = add i64 %414, 7
  %416 = inttoptr i64 %415 to i16*
  %417 = load atomic i16, i16* %416 monotonic, align 2
  %418 = icmp eq i16 %417, 67
  br i1 %418, label %419, label %434

419:                                              ; preds = %408
  %420 = inttoptr i64 %14 to i64*
  %421 = inttoptr i64 %13 to i64*
  %422 = icmp eq i64* %420, %421
  br i1 %422, label %820, label %423

423:                                              ; preds = %419
  %424 = icmp eq i64 %14, 0
  %425 = icmp eq i64 %13, 0
  %426 = or i1 %425, %424
  br i1 %426, label %820, label %427

427:                                              ; preds = %423
  %428 = trunc i64 %16 to i32
  %429 = trunc i64 %405 to i32
  %430 = icmp eq i32 %428, %429
  %431 = zext i1 %430 to i16
  %432 = shl nuw nsw i16 %431, 8
  %433 = or i16 %432, 1
  br label %820

434:                                              ; preds = %408
  %435 = load atomic i32, i32* %411 monotonic, align 4
  %436 = zext i32 %435 to i64
  %437 = or i64 %409, %436
  %438 = add i64 %437, 7
  %439 = inttoptr i64 %438 to i16*
  %440 = load atomic i16, i16* %439 monotonic, align 2
  %441 = icmp eq i16 %440, 66
  br i1 %441, label %442, label %478

442:                                              ; preds = %403, %434
  %443 = phi i1 [ true, %403 ], [ false, %434 ]
  %444 = add i64 %16, 15
  %445 = inttoptr i64 %444 to i32*
  %446 = load i32, i32* %445, align 4
  %447 = zext i32 %446 to i64
  %448 = and i64 %447, 1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %453

450:                                              ; preds = %442
  %451 = ashr i32 %446, 1
  %452 = sitofp i32 %451 to double
  br label %458

453:                                              ; preds = %442
  %454 = or i64 %20, %447
  %455 = add i64 %454, 3
  %456 = inttoptr i64 %455 to double*
  %457 = load double, double* %456, align 1
  br label %458

458:                                              ; preds = %453, %450
  %459 = phi double [ %452, %450 ], [ %457, %453 ]
  br i1 %443, label %460, label %464

460:                                              ; preds = %458
  %461 = trunc i64 %405 to i32
  %462 = ashr i32 %461, 1
  %463 = sitofp i32 %462 to double
  br label %468

464:                                              ; preds = %458
  %465 = add i64 %405, 3
  %466 = inttoptr i64 %465 to double*
  %467 = load double, double* %466, align 1
  br label %468

468:                                              ; preds = %464, %460
  %469 = phi double [ %463, %460 ], [ %467, %464 ]
  %470 = fcmp uno double %459, 0.000000e+00
  br i1 %470, label %820, label %471

471:                                              ; preds = %468
  %472 = fcmp ord double %469, 0.000000e+00
  %473 = fcmp oeq double %459, %469
  %474 = and i1 %473, %472
  %475 = zext i1 %474 to i16
  %476 = shl nuw nsw i16 %475, 8
  %477 = or i16 %476, 1
  br label %820

478:                                              ; preds = %434
  %479 = load atomic i32, i32* %411 monotonic, align 4
  %480 = zext i32 %479 to i64
  %481 = or i64 %409, %480
  %482 = add i64 %481, 7
  %483 = inttoptr i64 %482 to i16*
  %484 = load atomic i16, i16* %483 monotonic, align 2
  %485 = icmp ult i16 %484, 64
  br i1 %485, label %486, label %529

486:                                              ; preds = %478
  %487 = inttoptr i64 %14 to i64*
  %488 = inttoptr i64 %13 to i64*
  %489 = tail call i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %488) #11
  %490 = load i64, i64* %487, align 8
  %491 = add i64 %490, 15
  %492 = inttoptr i64 %491 to i32*
  %493 = load i32, i32* %492, align 4
  %494 = zext i32 %493 to i64
  %495 = load i64, i64* %489, align 8
  %496 = and i64 %494, 1
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %498, label %501

498:                                              ; preds = %486
  %499 = ashr i32 %493, 1
  %500 = sitofp i32 %499 to double
  br label %507

501:                                              ; preds = %486
  %502 = and i64 %490, -4294967296
  %503 = or i64 %502, %494
  %504 = add i64 %503, 3
  %505 = inttoptr i64 %504 to double*
  %506 = load double, double* %505, align 1
  br label %507

507:                                              ; preds = %501, %498
  %508 = phi double [ %500, %498 ], [ %506, %501 ]
  %509 = and i64 %495, 1
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %511, label %515

511:                                              ; preds = %507
  %512 = trunc i64 %495 to i32
  %513 = ashr i32 %512, 1
  %514 = sitofp i32 %513 to double
  br label %519

515:                                              ; preds = %507
  %516 = add i64 %495, 3
  %517 = inttoptr i64 %516 to double*
  %518 = load double, double* %517, align 1
  br label %519

519:                                              ; preds = %515, %511
  %520 = phi double [ %514, %511 ], [ %518, %515 ]
  %521 = fcmp uno double %508, 0.000000e+00
  br i1 %521, label %820, label %522

522:                                              ; preds = %519
  %523 = fcmp ord double %520, 0.000000e+00
  %524 = fcmp oeq double %508, %520
  %525 = and i1 %524, %523
  %526 = zext i1 %525 to i16
  %527 = shl nuw nsw i16 %526, 8
  %528 = or i16 %527, 1
  br label %820

529:                                              ; preds = %478
  %530 = load atomic i32, i32* %411 monotonic, align 4
  %531 = zext i32 %530 to i64
  %532 = or i64 %409, %531
  %533 = add i64 %532, 7
  %534 = inttoptr i64 %533 to i16*
  %535 = load atomic i16, i16* %534 monotonic, align 2
  %536 = icmp eq i16 %535, 65
  br i1 %536, label %537, label %565

537:                                              ; preds = %529
  %538 = inttoptr i64 %13 to i64*
  %539 = add i64 %16, 15
  %540 = inttoptr i64 %539 to i32*
  %541 = load i32, i32* %540, align 4
  %542 = zext i32 %541 to i64
  %543 = or i64 %20, %542
  %544 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %4, align 8
  %545 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %544, null
  br i1 %545, label %548, label %546

546:                                              ; preds = %537
  %547 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %544, i64 %543) #11
  br label %559

548:                                              ; preds = %537
  %549 = load i64*, i64** %5, align 8
  %550 = load i64*, i64** %6, align 8
  %551 = icmp eq i64* %549, %550
  br i1 %551, label %552, label %554

552:                                              ; preds = %548
  %553 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %554

554:                                              ; preds = %552, %548
  %555 = phi i64* [ %553, %552 ], [ %549, %548 ]
  %556 = ptrtoint i64* %555 to i64
  %557 = add i64 %556, 8
  %558 = inttoptr i64 %557 to i64*
  store i64* %558, i64** %5, align 8
  store i64 %543, i64* %555, align 8
  br label %559

559:                                              ; preds = %546, %554
  %560 = phi i64* [ %547, %546 ], [ %555, %554 ]
  %561 = tail call zeroext i1 @_ZN2v88internal6BigInt13EqualToNumberENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %538, i64* %560) #11
  %562 = zext i1 %561 to i16
  %563 = shl nuw nsw i16 %562, 8
  %564 = or i16 %563, 1
  br label %820

565:                                              ; preds = %529
  %566 = load atomic i32, i32* %411 monotonic, align 4
  %567 = zext i32 %566 to i64
  %568 = or i64 %409, %567
  %569 = add i64 %568, 7
  %570 = inttoptr i64 %569 to i16*
  %571 = load atomic i16, i16* %570 monotonic, align 2
  %572 = icmp ugt i16 %571, 185
  br i1 %572, label %573, label %820

573:                                              ; preds = %565
  %574 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %404, i32 0) #11
  %575 = icmp eq i64* %574, null
  br i1 %575, label %820, label %576

576:                                              ; preds = %573
  %577 = ptrtoint i64* %574 to i64
  %578 = load i64, i64* %15, align 8
  %579 = and i64 %578, -4294967296
  %580 = add i64 %578, 15
  %581 = inttoptr i64 %580 to i32*
  %582 = load i32, i32* %581, align 4
  %583 = zext i32 %582 to i64
  %584 = or i64 %579, %583
  %585 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %4, align 8
  %586 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %585, null
  br i1 %586, label %590, label %587

587:                                              ; preds = %576
  %588 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %585, i64 %584) #11
  %589 = ptrtoint i64* %588 to i64
  br label %782

590:                                              ; preds = %576
  %591 = load i64*, i64** %5, align 8
  %592 = load i64*, i64** %6, align 8
  %593 = icmp eq i64* %591, %592
  br i1 %593, label %594, label %596

594:                                              ; preds = %590
  %595 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %596

596:                                              ; preds = %594, %590
  %597 = phi i64* [ %595, %594 ], [ %591, %590 ]
  %598 = ptrtoint i64* %597 to i64
  %599 = add i64 %598, 8
  %600 = inttoptr i64 %599 to i64*
  store i64* %600, i64** %5, align 8
  store i64 %584, i64* %597, align 8
  br label %782

601:                                              ; preds = %388, %396
  %602 = load atomic i32, i32* %22 monotonic, align 4
  %603 = zext i32 %602 to i64
  %604 = or i64 %20, %603
  %605 = add i64 %604, 7
  %606 = inttoptr i64 %605 to i16*
  %607 = load atomic i16, i16* %606 monotonic, align 2
  %608 = icmp eq i16 %607, 64
  br i1 %608, label %609, label %653

609:                                              ; preds = %601
  %610 = inttoptr i64 %13 to i64*
  %611 = load i64, i64* %610, align 8
  %612 = and i64 %611, 1
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %820, label %614

614:                                              ; preds = %609
  %615 = and i64 %611, -4294967296
  %616 = add i64 %611, -1
  %617 = inttoptr i64 %616 to i32*
  %618 = load atomic i32, i32* %617 monotonic, align 4
  %619 = zext i32 %618 to i64
  %620 = or i64 %615, %619
  %621 = add i64 %620, 7
  %622 = inttoptr i64 %621 to i16*
  %623 = load atomic i16, i16* %622 monotonic, align 2
  %624 = icmp eq i16 %623, 64
  br i1 %624, label %625, label %640

625:                                              ; preds = %614
  %626 = inttoptr i64 %14 to i64*
  %627 = inttoptr i64 %13 to i64*
  %628 = icmp eq i64* %626, %627
  br i1 %628, label %820, label %629

629:                                              ; preds = %625
  %630 = icmp eq i64 %14, 0
  %631 = icmp eq i64 %13, 0
  %632 = or i1 %631, %630
  br i1 %632, label %820, label %633

633:                                              ; preds = %629
  %634 = trunc i64 %16 to i32
  %635 = trunc i64 %611 to i32
  %636 = icmp eq i32 %634, %635
  %637 = zext i1 %636 to i16
  %638 = shl nuw nsw i16 %637, 8
  %639 = or i16 %638, 1
  br label %820

640:                                              ; preds = %614
  %641 = load atomic i32, i32* %617 monotonic, align 4
  %642 = zext i32 %641 to i64
  %643 = or i64 %615, %642
  %644 = add i64 %643, 7
  %645 = inttoptr i64 %644 to i16*
  %646 = load atomic i16, i16* %645 monotonic, align 2
  %647 = icmp ugt i16 %646, 185
  br i1 %647, label %648, label %820

648:                                              ; preds = %640
  %649 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %610, i32 0) #11
  %650 = icmp eq i64* %649, null
  br i1 %650, label %820, label %651

651:                                              ; preds = %648
  %652 = ptrtoint i64* %649 to i64
  br label %782

653:                                              ; preds = %601
  %654 = load atomic i32, i32* %22 monotonic, align 4
  %655 = zext i32 %654 to i64
  %656 = or i64 %20, %655
  %657 = add i64 %656, 7
  %658 = inttoptr i64 %657 to i16*
  %659 = load atomic i16, i16* %658 monotonic, align 2
  %660 = icmp eq i16 %659, 65
  br i1 %660, label %661, label %684

661:                                              ; preds = %653
  %662 = inttoptr i64 %14 to i64*
  %663 = inttoptr i64 %13 to i64*
  %664 = load i64, i64* %663, align 8
  %665 = and i64 %664, 1
  %666 = icmp eq i64 %665, 0
  br i1 %666, label %667, label %668

667:                                              ; preds = %661, %668
  br label %7

668:                                              ; preds = %661
  %669 = and i64 %664, -4294967296
  %670 = add i64 %664, -1
  %671 = inttoptr i64 %670 to i32*
  %672 = load atomic i32, i32* %671 monotonic, align 4
  %673 = zext i32 %672 to i64
  %674 = or i64 %669, %673
  %675 = add i64 %674, 7
  %676 = inttoptr i64 %675 to i16*
  %677 = load atomic i16, i16* %676 monotonic, align 2
  %678 = icmp eq i16 %677, 65
  br i1 %678, label %679, label %667

679:                                              ; preds = %668
  %680 = tail call zeroext i1 @_ZN2v88internal6BigInt13EqualToBigIntES1_S1_(i64 %16, i64 %664) #11
  %681 = zext i1 %680 to i16
  %682 = shl nuw nsw i16 %681, 8
  %683 = or i16 %682, 1
  br label %820

684:                                              ; preds = %653
  %685 = load atomic i32, i32* %22 monotonic, align 4
  %686 = zext i32 %685 to i64
  %687 = or i64 %20, %686
  %688 = add i64 %687, 7
  %689 = inttoptr i64 %688 to i16*
  %690 = load atomic i16, i16* %689 monotonic, align 2
  %691 = icmp ugt i16 %690, 185
  br i1 %691, label %692, label %790

692:                                              ; preds = %684
  %693 = inttoptr i64 %13 to i64*
  %694 = load i64, i64* %693, align 8
  %695 = and i64 %694, 1
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %785, label %697

697:                                              ; preds = %692
  %698 = and i64 %694, -4294967296
  %699 = add i64 %694, -1
  %700 = inttoptr i64 %699 to i32*
  %701 = load atomic i32, i32* %700 monotonic, align 4
  %702 = zext i32 %701 to i64
  %703 = or i64 %698, %702
  %704 = add i64 %703, 7
  %705 = inttoptr i64 %704 to i16*
  %706 = load atomic i16, i16* %705 monotonic, align 2
  %707 = icmp ugt i16 %706, 185
  br i1 %707, label %708, label %723

708:                                              ; preds = %697
  %709 = inttoptr i64 %14 to i64*
  %710 = inttoptr i64 %13 to i64*
  %711 = icmp eq i64* %709, %710
  br i1 %711, label %820, label %712

712:                                              ; preds = %708
  %713 = icmp eq i64 %14, 0
  %714 = icmp eq i64 %13, 0
  %715 = or i1 %714, %713
  br i1 %715, label %820, label %716

716:                                              ; preds = %712
  %717 = trunc i64 %16 to i32
  %718 = trunc i64 %694 to i32
  %719 = icmp eq i32 %717, %718
  %720 = zext i1 %719 to i16
  %721 = shl nuw nsw i16 %720, 8
  %722 = or i16 %721, 1
  br label %820

723:                                              ; preds = %697
  %724 = load atomic i32, i32* %700 monotonic, align 4
  %725 = zext i32 %724 to i64
  %726 = or i64 %698, %725
  %727 = add i64 %726, 9
  %728 = inttoptr i64 %727 to i8*
  %729 = load atomic i8, i8* %728 monotonic, align 1
  %730 = and i8 %729, 16
  %731 = icmp eq i8 %730, 0
  br i1 %731, label %745, label %732

732:                                              ; preds = %723
  %733 = inttoptr i64 %21 to i32*
  %734 = load atomic i32, i32* %733 monotonic, align 4
  %735 = zext i32 %734 to i64
  %736 = or i64 %20, %735
  %737 = add i64 %736, 9
  %738 = inttoptr i64 %737 to i8*
  %739 = load atomic i8, i8* %738 monotonic, align 1
  %740 = lshr i8 %739, 4
  %741 = and i8 %740, 1
  %742 = zext i8 %741 to i16
  %743 = shl nuw nsw i16 %742, 8
  %744 = or i16 %743, 1
  br label %820

745:                                              ; preds = %723
  %746 = load atomic i32, i32* %700 monotonic, align 4
  %747 = zext i32 %746 to i64
  %748 = or i64 %698, %747
  %749 = add i64 %748, 7
  %750 = inttoptr i64 %749 to i16*
  %751 = load atomic i16, i16* %750 monotonic, align 2
  %752 = icmp eq i16 %751, 67
  br i1 %752, label %753, label %785

753:                                              ; preds = %745
  %754 = add i64 %694, 23
  %755 = inttoptr i64 %754 to i32*
  %756 = load i32, i32* %755, align 4
  %757 = lshr i32 %756, 1
  %758 = trunc i32 %757 to i8
  %759 = icmp ult i8 %758, 2
  br i1 %759, label %760, label %785

760:                                              ; preds = %753
  %761 = add i64 %694, 15
  %762 = inttoptr i64 %761 to i32*
  %763 = load i32, i32* %762, align 4
  %764 = zext i32 %763 to i64
  %765 = or i64 %698, %764
  %766 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %4, align 8
  %767 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %766, null
  br i1 %767, label %771, label %768

768:                                              ; preds = %760
  %769 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %766, i64 %765) #11
  %770 = ptrtoint i64* %769 to i64
  br label %782

771:                                              ; preds = %760
  %772 = load i64*, i64** %5, align 8
  %773 = load i64*, i64** %6, align 8
  %774 = icmp eq i64* %772, %773
  br i1 %774, label %775, label %777

775:                                              ; preds = %771
  %776 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %777

777:                                              ; preds = %775, %771
  %778 = phi i64* [ %776, %775 ], [ %772, %771 ]
  %779 = ptrtoint i64* %778 to i64
  %780 = add i64 %779, 8
  %781 = inttoptr i64 %780 to i64*
  store i64* %781, i64** %5, align 8
  store i64 %765, i64* %778, align 8
  br label %782

782:                                              ; preds = %777, %768, %596, %587, %788, %651, %386, %198
  %783 = phi i64 [ %199, %198 ], [ %387, %386 ], [ %652, %651 ], [ %13, %788 ], [ %577, %587 ], [ %577, %596 ], [ %770, %768 ], [ %779, %777 ]
  %784 = phi i64 [ %14, %198 ], [ %14, %386 ], [ %14, %651 ], [ %789, %788 ], [ %589, %587 ], [ %598, %596 ], [ %14, %768 ], [ %14, %777 ]
  br label %12

785:                                              ; preds = %692, %745, %753
  %786 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %15, i32 0) #11
  %787 = icmp eq i64* %786, null
  br i1 %787, label %820, label %788

788:                                              ; preds = %785
  %789 = ptrtoint i64* %786 to i64
  br label %782

790:                                              ; preds = %684
  %791 = inttoptr i64 %21 to i32*
  %792 = load atomic i32, i32* %791 monotonic, align 4
  %793 = zext i32 %792 to i64
  %794 = or i64 %20, %793
  %795 = add i64 %794, 9
  %796 = inttoptr i64 %795 to i8*
  %797 = load atomic i8, i8* %796 monotonic, align 1
  %798 = and i8 %797, 16
  %799 = icmp eq i8 %798, 0
  br i1 %799, label %820, label %800

800:                                              ; preds = %790
  %801 = inttoptr i64 %13 to i64*
  %802 = load i64, i64* %801, align 8
  %803 = and i64 %802, 1
  %804 = icmp eq i64 %803, 0
  br i1 %804, label %820, label %805

805:                                              ; preds = %800
  %806 = and i64 %802, -4294967296
  %807 = add i64 %802, -1
  %808 = inttoptr i64 %807 to i32*
  %809 = load atomic i32, i32* %808 monotonic, align 4
  %810 = zext i32 %809 to i64
  %811 = or i64 %806, %810
  %812 = add i64 %811, 9
  %813 = inttoptr i64 %812 to i8*
  %814 = load atomic i8, i8* %813 monotonic, align 1
  %815 = lshr i8 %814, 4
  %816 = and i8 %815, 1
  %817 = zext i8 %816 to i16
  %818 = shl nuw nsw i16 %817, 8
  %819 = or i16 %818, 1
  br label %820

820:                                              ; preds = %609, %785, %640, %648, %565, %573, %375, %383, %187, %195, %790, %800, %805, %716, %712, %708, %633, %629, %625, %522, %519, %471, %468, %427, %423, %419, %356, %353, %298, %295, %254, %246, %234, %224, %165, %162, %119, %116, %69, %66, %732, %679, %559, %371, %180
  %821 = phi i16 [ %186, %180 ], [ %374, %371 ], [ %564, %559 ], [ %683, %679 ], [ %744, %732 ], [ %75, %69 ], [ 1, %66 ], [ %125, %119 ], [ 1, %116 ], [ %171, %165 ], [ 1, %162 ], [ %258, %254 ], [ 257, %234 ], [ 1, %246 ], [ 257, %224 ], [ %304, %298 ], [ 1, %295 ], [ %362, %356 ], [ 1, %353 ], [ %433, %427 ], [ 257, %419 ], [ 1, %423 ], [ %477, %471 ], [ 1, %468 ], [ %528, %522 ], [ 1, %519 ], [ %639, %633 ], [ 257, %625 ], [ 1, %629 ], [ %722, %716 ], [ 257, %708 ], [ 1, %712 ], [ 1, %790 ], [ 1, %800 ], [ %819, %805 ], [ 1, %609 ], [ 0, %785 ], [ 1, %640 ], [ 0, %648 ], [ 1, %565 ], [ 0, %573 ], [ 1, %375 ], [ 0, %383 ], [ 1, %187 ], [ 0, %195 ]
  ret i16 %821
}

declare zeroext i1 @_ZN2v88internal6BigInt13EqualToNumberENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64*, i64*) local_unnamed_addr #1

declare i16 @_ZN2v88internal6BigInt13EqualToStringEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal6BigInt13EqualToBigIntES1_S1_(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Object12StrictEqualsES1_(%"class.v8::internal::Object"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 66
  br i1 %18, label %19, label %59

19:                                               ; preds = %2, %8
  %20 = and i64 %1, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %19
  %23 = and i64 %1, -4294967296
  %24 = add i64 %1, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp eq i16 %31, 66
  br i1 %32, label %33, label %135

33:                                               ; preds = %19, %22
  br i1 %7, label %34, label %38

34:                                               ; preds = %33
  %35 = trunc i64 %5 to i32
  %36 = ashr i32 %35, 1
  %37 = sitofp i32 %36 to double
  br label %42

38:                                               ; preds = %33
  %39 = add i64 %5, 3
  %40 = inttoptr i64 %39 to double*
  %41 = load double, double* %40, align 1
  br label %42

42:                                               ; preds = %38, %34
  %43 = phi double [ %37, %34 ], [ %41, %38 ]
  br i1 %21, label %44, label %48

44:                                               ; preds = %42
  %45 = trunc i64 %1 to i32
  %46 = ashr i32 %45, 1
  %47 = sitofp i32 %46 to double
  br label %52

48:                                               ; preds = %42
  %49 = add i64 %1, 3
  %50 = inttoptr i64 %49 to double*
  %51 = load double, double* %50, align 1
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi double [ %47, %44 ], [ %51, %48 ]
  %54 = fcmp uno double %43, 0.000000e+00
  br i1 %54, label %135, label %55

55:                                               ; preds = %52
  %56 = fcmp ord double %53, 0.000000e+00
  %57 = fcmp oeq double %43, %53
  %58 = and i1 %57, %56
  br label %135

59:                                               ; preds = %8
  %60 = load atomic i32, i32* %11 monotonic, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %9, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = icmp ult i16 %65, 64
  br i1 %66, label %67, label %107

67:                                               ; preds = %59
  %68 = and i64 %1, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %135, label %70

70:                                               ; preds = %67
  %71 = and i64 %1, -4294967296
  %72 = add i64 %1, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %71, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = icmp ult i16 %79, 64
  br i1 %80, label %81, label %135

81:                                               ; preds = %70
  %82 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %83, align 8
  %84 = trunc i64 %1 to i32
  %85 = trunc i64 %5 to i32
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %105, label %87

87:                                               ; preds = %81
  %88 = load atomic i32, i32* %11 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %9, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i16*
  %93 = load atomic i16, i16* %92 monotonic, align 2
  %94 = icmp ult i16 %93, 32
  br i1 %94, label %95, label %103

95:                                               ; preds = %87
  %96 = load atomic i32, i32* %73 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %71, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = icmp ult i16 %101, 32
  br i1 %102, label %105, label %103

103:                                              ; preds = %95, %87
  %104 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %3, i64 %1) #11
  br label %105

105:                                              ; preds = %81, %95, %103
  %106 = phi i1 [ %104, %103 ], [ true, %81 ], [ false, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  br label %135

107:                                              ; preds = %59
  %108 = load atomic i32, i32* %11 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %9, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = icmp eq i16 %113, 65
  br i1 %114, label %115, label %131

115:                                              ; preds = %107
  %116 = and i64 %1, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %135, label %118

118:                                              ; preds = %115
  %119 = and i64 %1, -4294967296
  %120 = add i64 %1, -1
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %119, %123
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = icmp eq i16 %127, 65
  br i1 %128, label %129, label %135

129:                                              ; preds = %118
  %130 = tail call zeroext i1 @_ZN2v88internal6BigInt13EqualToBigIntES1_S1_(i64 %5, i64 %1) #11
  br label %135

131:                                              ; preds = %107
  %132 = trunc i64 %5 to i32
  %133 = trunc i64 %1 to i32
  %134 = icmp eq i32 %132, %133
  br label %135

135:                                              ; preds = %115, %67, %55, %52, %118, %70, %22, %131, %129, %105
  %136 = phi i1 [ %106, %105 ], [ %130, %129 ], [ %134, %131 ], [ false, %22 ], [ false, %70 ], [ false, %118 ], [ %58, %55 ], [ false, %52 ], [ false, %67 ], [ false, %115 ]
  ret i1 %136
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 66
  br i1 %16, label %17, label %19

17:                                               ; preds = %2, %6
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 392
  br label %105

19:                                               ; preds = %6
  %20 = load atomic i32, i32* %9 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %7, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 67
  br i1 %26, label %27, label %51

27:                                               ; preds = %19
  %28 = add i64 %3, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %7, %31
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %27
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #11
  br label %105

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %32, i64* %47, align 8
  br label %105

51:                                               ; preds = %19
  %52 = load atomic i32, i32* %9 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %7, %53
  %55 = add i64 %54, 9
  %56 = inttoptr i64 %55 to i8*
  %57 = load atomic i8, i8* %56 monotonic, align 1
  %58 = and i8 %57, 16
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 461
  br label %105

62:                                               ; preds = %51
  %63 = load atomic i32, i32* %9 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %7, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp ult i16 %68, 64
  br i1 %69, label %70, label %72

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 440
  br label %105

72:                                               ; preds = %62
  %73 = load atomic i32, i32* %9 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %7, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp eq i16 %78, 64
  br i1 %79, label %80, label %82

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 444
  br label %105

82:                                               ; preds = %72
  %83 = load atomic i32, i32* %9 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %7, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp eq i16 %88, 65
  br i1 %89, label %90, label %92

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 274
  br label %105

92:                                               ; preds = %82
  %93 = load atomic i32, i32* %9 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %7, %94
  %96 = add i64 %95, 9
  %97 = inttoptr i64 %96 to i8*
  %98 = load atomic i8, i8* %97 monotonic, align 1
  %99 = and i8 %98, 2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 334
  br label %105

103:                                              ; preds = %92
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 395
  br label %105

105:                                              ; preds = %46, %36, %103, %101, %90, %80, %70, %60, %17
  %106 = phi i64* [ %18, %17 ], [ %61, %60 ], [ %71, %70 ], [ %81, %80 ], [ %91, %90 ], [ %102, %101 ], [ %104, %103 ], [ %37, %36 ], [ %47, %46 ]
  ret i64* %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object3AddEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = and i64 %4, -4294967296
  %9 = add i64 %4, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 66
  br i1 %17, label %18, label %100

18:                                               ; preds = %3, %7
  %19 = load i64, i64* %2, align 8
  %20 = and i64 %19, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %18
  %23 = and i64 %19, -4294967296
  %24 = add i64 %19, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp eq i16 %31, 66
  br i1 %32, label %33, label %95

33:                                               ; preds = %18, %22
  %34 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  br i1 %6, label %35, label %39

35:                                               ; preds = %33
  %36 = trunc i64 %4 to i32
  %37 = ashr i32 %36, 1
  %38 = sitofp i32 %37 to double
  br label %43

39:                                               ; preds = %33
  %40 = add i64 %4, 3
  %41 = inttoptr i64 %40 to double*
  %42 = load double, double* %41, align 1
  br label %43

43:                                               ; preds = %35, %39
  %44 = phi double [ %38, %35 ], [ %42, %39 ]
  br i1 %21, label %45, label %49

45:                                               ; preds = %43
  %46 = trunc i64 %19 to i32
  %47 = ashr i32 %46, 1
  %48 = sitofp i32 %47 to double
  br label %53

49:                                               ; preds = %43
  %50 = add i64 %19, 3
  %51 = inttoptr i64 %50 to double*
  %52 = load double, double* %51, align 1
  br label %53

53:                                               ; preds = %45, %49
  %54 = phi double [ %48, %45 ], [ %52, %49 ]
  %55 = fadd double %44, %54
  %56 = fcmp ult double %55, 0xC1D0000000000000
  %57 = fcmp ugt double %55, 0x41CFFFFFFF800000
  %58 = or i1 %57, %56
  %59 = bitcast double %55 to i64
  %60 = icmp eq i64 %59, -9223372036854775808
  %61 = or i1 %58, %60
  br i1 %61, label %87, label %62

62:                                               ; preds = %53
  %63 = fptosi double %55 to i32
  %64 = sitofp i32 %63 to double
  %65 = fcmp oeq double %55, %64
  br i1 %65, label %66, label %87

66:                                               ; preds = %62
  %67 = sext i32 %63 to i64
  %68 = shl nsw i64 %67, 1
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %70 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %69, align 8
  %71 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %66
  %73 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %70, i64 %68) #11
  br label %92

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = icmp eq i64* %76, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %74
  %81 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %82

82:                                               ; preds = %80, %74
  %83 = phi i64* [ %81, %80 ], [ %76, %74 ]
  %84 = ptrtoint i64* %83 to i64
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  store i64* %86, i64** %75, align 8
  store i64 %68, i64* %83, align 8
  br label %92

87:                                               ; preds = %62, %53
  %88 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %34) #11
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 3
  %91 = inttoptr i64 %90 to double*
  store double %55, double* %91, align 1
  br label %92

92:                                               ; preds = %72, %82, %87
  %93 = phi i64* [ %88, %87 ], [ %73, %72 ], [ %83, %82 ]
  %94 = ptrtoint i64* %93 to i64
  br label %334

95:                                               ; preds = %22
  br i1 %6, label %139, label %96

96:                                               ; preds = %95
  %97 = and i64 %4, -4294967296
  %98 = add i64 %4, -1
  %99 = inttoptr i64 %98 to i32*
  br label %100

100:                                              ; preds = %96, %7
  %101 = phi i32* [ %99, %96 ], [ %10, %7 ]
  %102 = phi i64 [ %97, %96 ], [ %8, %7 ]
  %103 = load atomic i32, i32* %101 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %102, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = icmp ult i16 %108, 64
  br i1 %109, label %110, label %129

110:                                              ; preds = %100
  %111 = load i64, i64* %2, align 8
  %112 = and i64 %111, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %129, label %114

114:                                              ; preds = %110
  %115 = and i64 %111, -4294967296
  %116 = add i64 %111, -1
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %115, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load atomic i16, i16* %122 monotonic, align 2
  %124 = icmp ult i16 %123, 64
  br i1 %124, label %125, label %129

125:                                              ; preds = %114
  %126 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %127 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %126, i64* %1, i64* %2, i8 zeroext 0) #11
  %128 = ptrtoint i64* %127 to i64
  br label %334

129:                                              ; preds = %110, %100, %114
  %130 = load atomic i32, i32* %101 monotonic, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %102, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = icmp ult i16 %135, 68
  br i1 %136, label %139, label %137

137:                                              ; preds = %129
  %138 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %1, i32 0) #11
  br label %139

139:                                              ; preds = %95, %129, %137
  %140 = phi i64* [ %138, %137 ], [ %1, %129 ], [ %1, %95 ]
  %141 = icmp eq i64* %140, null
  br i1 %141, label %334, label %142

142:                                              ; preds = %139
  %143 = load i64, i64* %2, align 8
  %144 = and i64 %143, 1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = and i64 %143, -4294967296
  %148 = add i64 %143, -1
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %147, %151
  %153 = add i64 %152, 7
  %154 = inttoptr i64 %153 to i16*
  %155 = load atomic i16, i16* %154 monotonic, align 2
  %156 = icmp ult i16 %155, 68
  br i1 %156, label %159, label %157

157:                                              ; preds = %146
  %158 = tail call i64* @_ZN2v88internal10JSReceiver11ToPrimitiveENS0_6HandleIS1_EENS0_15ToPrimitiveHintE(i64* %2, i32 0) #11
  br label %159

159:                                              ; preds = %142, %146, %157
  %160 = phi i64* [ %158, %157 ], [ %2, %146 ], [ %2, %142 ]
  %161 = icmp eq i64* %160, null
  br i1 %161, label %334, label %162

162:                                              ; preds = %159
  %163 = load i64, i64* %140, align 8
  %164 = and i64 %163, 1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %177, label %166

166:                                              ; preds = %162
  %167 = and i64 %163, -4294967296
  %168 = add i64 %163, -1
  %169 = inttoptr i64 %168 to i32*
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %167, %171
  %173 = add i64 %172, 7
  %174 = inttoptr i64 %173 to i16*
  %175 = load atomic i16, i16* %174 monotonic, align 2
  %176 = icmp ult i16 %175, 64
  br i1 %176, label %192, label %177

177:                                              ; preds = %162, %166
  %178 = load i64, i64* %160, align 8
  %179 = and i64 %178, 1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %246, label %181

181:                                              ; preds = %177
  %182 = and i64 %178, -4294967296
  %183 = add i64 %178, -1
  %184 = inttoptr i64 %183 to i32*
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %182, %186
  %188 = add i64 %187, 7
  %189 = inttoptr i64 %188 to i16*
  %190 = load atomic i16, i16* %189 monotonic, align 2
  %191 = icmp ult i16 %190, 64
  br i1 %191, label %196, label %235

192:                                              ; preds = %166
  %193 = load i64, i64* %160, align 8
  %194 = and i64 %193, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %208, label %196

196:                                              ; preds = %181, %192
  %197 = phi i64 [ %193, %192 ], [ %178, %181 ]
  %198 = and i64 %197, -4294967296
  %199 = add i64 %197, -1
  %200 = inttoptr i64 %199 to i32*
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = zext i32 %201 to i64
  %203 = or i64 %198, %202
  %204 = add i64 %203, 7
  %205 = inttoptr i64 %204 to i16*
  %206 = load atomic i16, i16* %205 monotonic, align 2
  %207 = icmp ult i16 %206, 64
  br i1 %207, label %211, label %208

208:                                              ; preds = %192, %196
  %209 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %160) #11
  %210 = icmp eq i64* %209, null
  br i1 %210, label %334, label %211

211:                                              ; preds = %196, %208
  %212 = phi i64* [ %209, %208 ], [ %160, %196 ]
  %213 = load i64, i64* %140, align 8
  %214 = and i64 %213, 1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %227, label %216

216:                                              ; preds = %211
  %217 = and i64 %213, -4294967296
  %218 = add i64 %213, -1
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %217, %221
  %223 = add i64 %222, 7
  %224 = inttoptr i64 %223 to i16*
  %225 = load atomic i16, i16* %224 monotonic, align 2
  %226 = icmp ult i16 %225, 64
  br i1 %226, label %230, label %227

227:                                              ; preds = %211, %216
  %228 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %140) #11
  %229 = icmp eq i64* %228, null
  br i1 %229, label %334, label %230

230:                                              ; preds = %216, %227
  %231 = phi i64* [ %228, %227 ], [ %140, %216 ]
  %232 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %233 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %232, i64* nonnull %231, i64* nonnull %212, i8 zeroext 0) #11
  %234 = ptrtoint i64* %233 to i64
  br label %334

235:                                              ; preds = %181
  %236 = load atomic i32, i32* %184 monotonic, align 4
  %237 = zext i32 %236 to i64
  %238 = or i64 %182, %237
  %239 = add i64 %238, 7
  %240 = inttoptr i64 %239 to i16*
  %241 = load atomic i16, i16* %240 monotonic, align 2
  %242 = icmp eq i16 %241, 66
  br i1 %242, label %246, label %243

243:                                              ; preds = %235
  %244 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* nonnull %160, i32 0) #11
  %245 = icmp eq i64* %244, null
  br i1 %245, label %334, label %246

246:                                              ; preds = %177, %235, %243
  %247 = phi i64* [ %244, %243 ], [ %160, %235 ], [ %160, %177 ]
  %248 = load i64, i64* %140, align 8
  %249 = and i64 %248, 1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %265, label %251

251:                                              ; preds = %246
  %252 = and i64 %248, -4294967296
  %253 = add i64 %248, -1
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %252, %256
  %258 = add i64 %257, 7
  %259 = inttoptr i64 %258 to i16*
  %260 = load atomic i16, i16* %259 monotonic, align 2
  %261 = icmp eq i16 %260, 66
  br i1 %261, label %265, label %262

262:                                              ; preds = %251
  %263 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* nonnull %140, i32 0) #11
  %264 = icmp eq i64* %263, null
  br i1 %264, label %334, label %265

265:                                              ; preds = %246, %251, %262
  %266 = phi i64* [ %263, %262 ], [ %140, %251 ], [ %140, %246 ]
  %267 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %268 = load i64, i64* %266, align 8
  %269 = and i64 %268, 1
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %275

271:                                              ; preds = %265
  %272 = trunc i64 %268 to i32
  %273 = ashr i32 %272, 1
  %274 = sitofp i32 %273 to double
  br label %279

275:                                              ; preds = %265
  %276 = add i64 %268, 3
  %277 = inttoptr i64 %276 to double*
  %278 = load double, double* %277, align 1
  br label %279

279:                                              ; preds = %271, %275
  %280 = phi double [ %274, %271 ], [ %278, %275 ]
  %281 = load i64, i64* %247, align 8
  %282 = and i64 %281, 1
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %284, label %288

284:                                              ; preds = %279
  %285 = trunc i64 %281 to i32
  %286 = ashr i32 %285, 1
  %287 = sitofp i32 %286 to double
  br label %292

288:                                              ; preds = %279
  %289 = add i64 %281, 3
  %290 = inttoptr i64 %289 to double*
  %291 = load double, double* %290, align 1
  br label %292

292:                                              ; preds = %284, %288
  %293 = phi double [ %287, %284 ], [ %291, %288 ]
  %294 = fadd double %280, %293
  %295 = fcmp ult double %294, 0xC1D0000000000000
  %296 = fcmp ugt double %294, 0x41CFFFFFFF800000
  %297 = or i1 %296, %295
  %298 = bitcast double %294 to i64
  %299 = icmp eq i64 %298, -9223372036854775808
  %300 = or i1 %297, %299
  br i1 %300, label %326, label %301

301:                                              ; preds = %292
  %302 = fptosi double %294 to i32
  %303 = sitofp i32 %302 to double
  %304 = fcmp oeq double %294, %303
  br i1 %304, label %305, label %326

305:                                              ; preds = %301
  %306 = sext i32 %302 to i64
  %307 = shl nsw i64 %306, 1
  %308 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %309 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %308, align 8
  %310 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %305
  %312 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %309, i64 %307) #11
  br label %331

313:                                              ; preds = %305
  %314 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %315 = load i64*, i64** %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %315, %317
  br i1 %318, label %319, label %321

319:                                              ; preds = %313
  %320 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %321

321:                                              ; preds = %319, %313
  %322 = phi i64* [ %320, %319 ], [ %315, %313 ]
  %323 = ptrtoint i64* %322 to i64
  %324 = add i64 %323, 8
  %325 = inttoptr i64 %324 to i64*
  store i64* %325, i64** %314, align 8
  store i64 %307, i64* %322, align 8
  br label %331

326:                                              ; preds = %301, %292
  %327 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %267) #11
  %328 = load i64, i64* %327, align 8
  %329 = add i64 %328, 3
  %330 = inttoptr i64 %329 to double*
  store double %294, double* %330, align 1
  br label %331

331:                                              ; preds = %311, %321, %326
  %332 = phi i64* [ %327, %326 ], [ %312, %311 ], [ %322, %321 ]
  %333 = ptrtoint i64* %332 to i64
  br label %334

334:                                              ; preds = %262, %243, %227, %208, %159, %139, %331, %230, %125, %92
  %335 = phi i64 [ %94, %92 ], [ %128, %125 ], [ %234, %230 ], [ %333, %331 ], [ 0, %139 ], [ 0, %159 ], [ 0, %208 ], [ 0, %227 ], [ 0, %243 ], [ 0, %262 ]
  %336 = inttoptr i64 %335 to i64*
  ret i64* %336
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewConsStringENS0_6HandleINS0_6StringEEES6_NS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i64*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object19OrdinaryHasInstanceEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 9
  %16 = inttoptr i64 %15 to i8*
  %17 = load atomic i8, i8* %16 monotonic, align 1
  %18 = and i8 %17, 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %8, %3
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 8
  %22 = ptrtoint i64* %21 to i64
  br label %204

23:                                               ; preds = %8
  %24 = load atomic i32, i32* %11 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %9, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 1058
  br i1 %30, label %31, label %78

31:                                               ; preds = %23
  %32 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp ult i64 %32, %34
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #11
  br label %204

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %45 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %44) #11
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  %47 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #11
  br label %204

48:                                               ; preds = %31, %43
  %49 = load i64, i64* %1, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, 11
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %56, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %48
  %60 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %55) #11
  br label %74

61:                                               ; preds = %48
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %69

69:                                               ; preds = %67, %61
  %70 = phi i64* [ %68, %67 ], [ %63, %61 ]
  %71 = ptrtoint i64* %70 to i64
  %72 = add i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  store i64* %73, i64** %62, align 8
  store i64 %55, i64* %70, align 8
  br label %74

74:                                               ; preds = %59, %69
  %75 = phi i64* [ %60, %59 ], [ %70, %69 ]
  %76 = tail call i64* @_ZN2v88internal6Object10InstanceOfEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %75)
  %77 = ptrtoint i64* %76 to i64
  br label %204

78:                                               ; preds = %23
  %79 = load i64, i64* %2, align 8
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %93, label %82

82:                                               ; preds = %78
  %83 = and i64 %79, -4294967296
  %84 = add i64 %79, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = icmp ugt i16 %91, 185
  br i1 %92, label %96, label %93

93:                                               ; preds = %78, %82
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 8
  %95 = ptrtoint i64* %94 to i64
  br label %204

96:                                               ; preds = %82
  %97 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 408
  %99 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %99) #11
  %100 = ptrtoint i64* %1 to i64
  %101 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %102 = icmp eq i64* %98, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %96
  %104 = load i64, i64* null, align 536870912
  %105 = add i64 %104, -1
  %106 = inttoptr i64 %105 to i32*
  br label %128

107:                                              ; preds = %96
  %108 = load i64, i64* %98, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %108, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i64 %110, 4294967295
  %115 = icmp eq i64 %114, 0
  tail call void @llvm.assume(i1 %115) #11
  %116 = zext i32 %113 to i64
  %117 = or i64 %110, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = icmp eq i16 %120, 64
  br i1 %121, label %122, label %128

122:                                              ; preds = %107
  %123 = add i64 %108, 7
  %124 = inttoptr i64 %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %122, %107, %103
  %129 = phi i32* [ %106, %103 ], [ %112, %122 ], [ %112, %107 ]
  %130 = phi i64 [ %104, %103 ], [ %108, %122 ], [ %108, %107 ]
  br label %131

131:                                              ; preds = %128, %122
  %132 = phi i32* [ %129, %128 ], [ %112, %122 ]
  %133 = phi i64 [ %130, %128 ], [ %108, %122 ]
  %134 = phi i32 [ 3, %128 ], [ 0, %122 ]
  store i32 %134, i32* %101, align 8
  %135 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %98, i64** %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %145 = bitcast %"class.v8::internal::Handle.1220"* %144 to i64*
  store i64 %100, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %147 = bitcast i64* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 -1, i64 16, i1 false) #11
  %148 = and i64 %133, -4294967296
  %149 = load atomic i32, i32* %132 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %148, %150
  %152 = add i64 %151, 7
  %153 = inttoptr i64 %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = and i16 %154, -32
  %156 = icmp eq i16 %155, 32
  br i1 %156, label %157, label %161

157:                                              ; preds = %131
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %159 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %158, align 8
  %160 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %159, %"class.v8::internal::Isolate"* %0, i64* %98) #11
  br label %161

161:                                              ; preds = %157, %131
  %162 = phi i64* [ %160, %157 ], [ %98, %131 ]
  store i64* %162, i64** %140, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #11
  %163 = load i32, i32* %135, align 4
  %164 = icmp eq i32 %163, 4
  br i1 %164, label %165, label %170

165:                                              ; preds = %161
  %166 = bitcast %"class.v8::internal::Isolate"** %139 to %"class.v8::internal::Factory"**
  %167 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %167, i64 160
  %169 = bitcast %"class.v8::internal::Factory"* %168 to i64*
  br label %172

170:                                              ; preds = %161
  %171 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #11
  br label %172

172:                                              ; preds = %165, %170
  %173 = phi i64* [ %171, %170 ], [ %169, %165 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %99) #11
  %174 = icmp eq i64* %173, null
  br i1 %174, label %204, label %175

175:                                              ; preds = %172
  %176 = load i64, i64* %173, align 8
  %177 = and i64 %176, 1
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %175
  %180 = and i64 %176, -4294967296
  %181 = add i64 %176, -1
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = zext i32 %183 to i64
  %185 = or i64 %180, %184
  %186 = add i64 %185, 7
  %187 = inttoptr i64 %186 to i16*
  %188 = load atomic i16, i16* %187 monotonic, align 2
  %189 = icmp ugt i16 %188, 185
  br i1 %189, label %194, label %190

190:                                              ; preds = %175, %179
  %191 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %97, i32 65, i64* nonnull %173, i64* null, i64* null) #11
  %192 = load i64, i64* %191, align 8
  %193 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %192, %"class.v8::internal::MessageLocation"* null) #11
  br label %204

194:                                              ; preds = %179
  %195 = call i16 @_ZN2v88internal10JSReceiver19HasInPrototypeChainEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %2, i64* nonnull %173) #11
  %196 = trunc i16 %195 to i8
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %194
  %199 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %200 = icmp ugt i16 %195, 255
  %201 = select i1 %200, i64 184, i64 192
  %202 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %199, i64 %201
  %203 = ptrtoint %"class.v8::internal::FactoryBase"* %202 to i64
  br label %204

204:                                              ; preds = %190, %172, %194, %198, %46, %41, %93, %74, %20
  %205 = phi i64 [ 0, %41 ], [ 0, %46 ], [ %77, %74 ], [ %95, %93 ], [ %22, %20 ], [ 0, %190 ], [ 0, %172 ], [ %203, %198 ], [ 0, %194 ]
  %206 = inttoptr i64 %205 to i64*
  ret i64* %206
}

declare i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"*) local_unnamed_addr #1

declare i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object10InstanceOfEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::Handle.1220", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Handle.1220", %"class.v8::internal::Handle.1220"* %5, i64 0, i32 0, i32 0
  store i64* %1, i64** %7, align 8
  %8 = load i64, i64* %2, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ugt i16 %20, 185
  br i1 %21, label %27, label %22

22:                                               ; preds = %3, %11
  %23 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %24 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %23, i32 87, i64* null, i64* null, i64* null) #11
  %25 = load i64, i64* %24, align 8
  %26 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %25, %"class.v8::internal::MessageLocation"* null) #11
  br label %197

27:                                               ; preds = %11
  %28 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 520
  %30 = and i64 %8, -262144
  %31 = or i64 %30, 16
  %32 = inttoptr i64 %31 to i64*
  %33 = load i64, i64* %32, align 16
  %34 = add i64 %33, -41416
  %35 = inttoptr i64 %34 to %"class.v8::internal::Isolate"*
  %36 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %36) #11
  %37 = ptrtoint i64* %2 to i64
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %39 = icmp eq i64* %29, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %27
  %41 = load i64, i64* null, align 536870912
  %42 = add i64 %41, -1
  %43 = inttoptr i64 %42 to i32*
  br label %65

44:                                               ; preds = %27
  %45 = load i64, i64* %29, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 4
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %45, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i64 %47, 4294967295
  %52 = icmp eq i64 %51, 0
  tail call void @llvm.assume(i1 %52) #11
  %53 = zext i32 %50 to i64
  %54 = or i64 %47, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp eq i16 %57, 64
  br i1 %58, label %59, label %65

59:                                               ; preds = %44
  %60 = add i64 %45, 7
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59, %44, %40
  %66 = phi i32* [ %43, %40 ], [ %49, %59 ], [ %49, %44 ]
  %67 = phi i64 [ %41, %40 ], [ %45, %59 ], [ %45, %44 ]
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32* [ %66, %65 ], [ %49, %59 ]
  %70 = phi i64 [ %67, %65 ], [ %45, %59 ]
  %71 = phi i32 [ 3, %65 ], [ 0, %59 ]
  store i32 %71, i32* %38, align 8
  %72 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %72, align 4
  %73 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %35, %"class.v8::internal::Isolate"** %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %29, i64** %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %82 = bitcast %"class.v8::internal::Handle.1220"* %81 to i64*
  store i64 %37, i64* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %84 = bitcast i64* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 -1, i64 16, i1 false) #11
  %85 = and i64 %70, -4294967296
  %86 = load atomic i32, i32* %69 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %85, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, -32
  %93 = icmp eq i16 %92, 32
  br i1 %93, label %94, label %98

94:                                               ; preds = %68
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  %96 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %95, align 8
  %97 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %96, %"class.v8::internal::Isolate"* %35, i64* %29) #11
  br label %98

98:                                               ; preds = %94, %68
  %99 = phi i64* [ %97, %94 ], [ %29, %68 ]
  store i64* %99, i64** %77, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #11
  %100 = load i32, i32* %72, align 4
  %101 = icmp eq i32 %100, 4
  br i1 %101, label %102, label %107

102:                                              ; preds = %98
  %103 = bitcast %"class.v8::internal::Isolate"** %76 to %"class.v8::internal::Factory"**
  %104 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %104, i64 160
  %106 = bitcast %"class.v8::internal::Factory"* %105 to i64*
  br label %109

107:                                              ; preds = %98
  %108 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #11
  br label %109

109:                                              ; preds = %102, %107
  %110 = phi i64* [ %108, %107 ], [ %106, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %36) #11
  %111 = icmp eq i64* %110, null
  br i1 %111, label %197, label %112

112:                                              ; preds = %109
  %113 = ptrtoint i64* %110 to i64
  %114 = load i64, i64* %110, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 7, i32 0, i64 6
  %116 = load i64, i64* %115, align 8
  %117 = trunc i64 %114 to i32
  %118 = trunc i64 %116 to i32
  %119 = icmp eq i32 %117, %118
  br i1 %119, label %125, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 7, i32 0, i64 4
  %122 = load i64, i64* %121, align 8
  %123 = trunc i64 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %129

125:                                              ; preds = %120, %112
  %126 = inttoptr i64 %34 to %"class.v8::internal::Factory"*
  %127 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %126, i64 160
  %128 = ptrtoint %"class.v8::internal::Factory"* %127 to i64
  br label %149

129:                                              ; preds = %120
  %130 = and i64 %114, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %144, label %132

132:                                              ; preds = %129
  %133 = and i64 %114, -4294967296
  %134 = add i64 %114, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %133, %137
  %139 = add i64 %138, 9
  %140 = inttoptr i64 %139 to i8*
  %141 = load atomic i8, i8* %140 monotonic, align 1
  %142 = and i8 %141, 2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %149

144:                                              ; preds = %132, %129
  %145 = inttoptr i64 %34 to %"class.v8::internal::Factory"*
  %146 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %145, i32 121, i64* nonnull %110, i64* %29, i64* %2) #11
  %147 = load i64, i64* %146, align 8
  %148 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %35, i64 %147, %"class.v8::internal::MessageLocation"* null) #11
  br label %197

149:                                              ; preds = %125, %132
  %150 = phi i64 [ %128, %125 ], [ %113, %132 ]
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %197, label %152

152:                                              ; preds = %149
  %153 = inttoptr i64 %150 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %156 = load i64, i64* %155, align 8
  %157 = trunc i64 %154 to i32
  %158 = trunc i64 %156 to i32
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %173, label %160

160:                                              ; preds = %152
  %161 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %0, i64* %153, i64* %2, i32 1, %"class.v8::internal::Handle.1220"* nonnull %5) #11
  %162 = icmp eq i64* %161, null
  br i1 %162, label %197, label %163

163:                                              ; preds = %160
  %164 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %165 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #11
  %166 = load i64, i64* %161, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  %169 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %168, %"class.v8::internal::Isolate"* %0)
  %170 = select i1 %169, i64 184, i64 192
  %171 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %164, i64 %170
  %172 = ptrtoint %"class.v8::internal::FactoryBase"* %171 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #11
  br label %197

173:                                              ; preds = %152
  %174 = load i64, i64* %2, align 8
  %175 = and i64 %174, 1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %189, label %177

177:                                              ; preds = %173
  %178 = and i64 %174, -4294967296
  %179 = add i64 %174, -1
  %180 = inttoptr i64 %179 to i32*
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = zext i32 %181 to i64
  %183 = or i64 %178, %182
  %184 = add i64 %183, 9
  %185 = inttoptr i64 %184 to i8*
  %186 = load atomic i8, i8* %185 monotonic, align 1
  %187 = and i8 %186, 2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %177, %173
  %190 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %28, i32 82, i64* null, i64* null, i64* null) #11
  %191 = load i64, i64* %190, align 8
  %192 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %191, %"class.v8::internal::MessageLocation"* null) #11
  br label %197

193:                                              ; preds = %177
  %194 = load i64*, i64** %7, align 8
  %195 = call i64* @_ZN2v88internal6Object19OrdinaryHasInstanceEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %194)
  %196 = ptrtoint i64* %195 to i64
  br label %197

197:                                              ; preds = %193, %109, %144, %189, %149, %160, %163, %22
  %198 = phi i64 [ 0, %22 ], [ 0, %189 ], [ 0, %149 ], [ %172, %163 ], [ 0, %160 ], [ 0, %144 ], [ 0, %109 ], [ %196, %193 ]
  %199 = inttoptr i64 %198 to i64*
  ret i64* %199
}

declare i16 @_ZN2v88internal10JSReceiver19HasInPrototypeChainEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object9GetMethodENS0_6HandleINS0_10JSReceiverEEENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = tail call i64* @_ZN2v88internal10JSReceiver11GetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %9, i64* %0, i64* %1)
  %11 = icmp eq i64* %10, null
  br i1 %11, label %49, label %12

12:                                               ; preds = %2
  %13 = ptrtoint i64* %10 to i64
  %14 = load i64, i64* %10, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 6
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %14 to i32
  %18 = trunc i64 %16 to i32
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 7, i32 0, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = icmp eq i32 %17, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %12, %20
  %26 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %27 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %26, i64 160
  %28 = ptrtoint %"class.v8::internal::Factory"* %27 to i64
  br label %49

29:                                               ; preds = %20
  %30 = and i64 %14, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  %33 = and i64 %14, -4294967296
  %34 = add i64 %14, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %33, %37
  %39 = add i64 %38, 9
  %40 = inttoptr i64 %39 to i8*
  %41 = load atomic i8, i8* %40 monotonic, align 1
  %42 = and i8 %41, 2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32, %29
  %45 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %46 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %45, i32 121, i64* nonnull %10, i64* %1, i64* %0) #11
  %47 = load i64, i64* %46, align 8
  %48 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %9, i64 %47, %"class.v8::internal::MessageLocation"* null) #11
  br label %49

49:                                               ; preds = %32, %2, %44, %25
  %50 = phi i64 [ %28, %25 ], [ 0, %44 ], [ 0, %2 ], [ %13, %32 ]
  %51 = inttoptr i64 %50 to i64*
  ret i64* %51
}

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1220"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10JSReceiver11GetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #11
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %8 = icmp eq i64* %2, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = load i64, i64* null, align 536870912
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  br label %34

13:                                               ; preds = %3
  %14 = load i64, i64* %2, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i64 %16, 4294967295
  %21 = icmp eq i64 %20, 0
  tail call void @llvm.assume(i1 %21) #11
  %22 = zext i32 %19 to i64
  %23 = or i64 %16, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 64
  br i1 %27, label %28, label %34

28:                                               ; preds = %13
  %29 = add i64 %14, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %9, %28, %13
  %35 = phi i32* [ %12, %9 ], [ %18, %28 ], [ %18, %13 ]
  %36 = phi i64 [ %10, %9 ], [ %14, %28 ], [ %14, %13 ]
  br label %37

37:                                               ; preds = %34, %28
  %38 = phi i32* [ %35, %34 ], [ %18, %28 ]
  %39 = phi i64 [ %36, %34 ], [ %14, %28 ]
  %40 = phi i32 [ 3, %34 ], [ 0, %28 ]
  store i32 %40, i32* %7, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %41, align 4
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %2, i64** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %51 = bitcast %"class.v8::internal::Handle.1220"* %50 to i64*
  store i64 %6, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %53 = bitcast i64* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 -1, i64 16, i1 false) #11
  %54 = and i64 %39, -4294967296
  %55 = load atomic i32, i32* %38 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %54, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = and i16 %60, -32
  %62 = icmp eq i16 %61, 32
  br i1 %62, label %63, label %67

63:                                               ; preds = %37
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %64, align 8
  %66 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %65, %"class.v8::internal::Isolate"* %0, i64* %2) #11
  br label %67

67:                                               ; preds = %37, %63
  %68 = phi i64* [ %66, %63 ], [ %2, %37 ]
  store i64* %68, i64** %46, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #11
  %69 = load i32, i32* %41, align 4
  %70 = icmp eq i32 %69, 4
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = bitcast %"class.v8::internal::Isolate"** %45 to %"class.v8::internal::Factory"**
  %73 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %73, i64 160
  %75 = bitcast %"class.v8::internal::Factory"* %74 to i64*
  br label %78

76:                                               ; preds = %67
  %77 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false)
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi i64* [ %77, %76 ], [ %75, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #11
  ret i64* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object23CreateListFromArrayLikeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementTypesE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::Vector.1009", align 8
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %7, label %223

7:                                                ; preds = %3
  %8 = load i64, i64* %1, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %223, label %11

11:                                               ; preds = %7
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 1085
  %22 = load atomic i32, i32* %14 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %12, %23
  br i1 %21, label %25, label %180

25:                                               ; preds = %11
  %26 = add i64 %24, 15
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, -4294967296
  %32 = add i64 %30, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 19
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %31, %40
  %42 = add i64 %41, 315
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %31, %45
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %25
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %46) #11
  %52 = load i64, i64* %51, align 8
  br label %66

53:                                               ; preds = %25
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = icmp eq i64* %55, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %53
  %60 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %61

61:                                               ; preds = %59, %53
  %62 = phi i64* [ %60, %59 ], [ %55, %53 ]
  %63 = ptrtoint i64* %62 to i64
  %64 = add i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  store i64* %65, i64** %54, align 8
  store i64 %46, i64* %62, align 8
  br label %66

66:                                               ; preds = %61, %50
  %67 = phi i64 [ %52, %50 ], [ %46, %61 ]
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %28, %68
  br i1 %69, label %70, label %223

70:                                               ; preds = %66
  %71 = load i64, i64* %1, align 8
  %72 = and i64 %71, -4294967296
  %73 = add i64 %71, 11
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %72, %76
  %78 = and i64 %76, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %70
  %81 = icmp slt i32 %75, 0
  br i1 %81, label %223, label %82

82:                                               ; preds = %80
  %83 = lshr i32 %75, 1
  br label %106

84:                                               ; preds = %70
  %85 = add i64 %77, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %72, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp eq i16 %92, 66
  br i1 %93, label %94, label %223

94:                                               ; preds = %84
  %95 = add i64 %77, 3
  %96 = inttoptr i64 %95 to double*
  %97 = load double, double* %96, align 1
  %98 = fadd double %97, 0x4330000000000000
  %99 = bitcast double %98 to i64
  %100 = and i64 %99, -4294967296
  %101 = icmp eq i64 %100, 4841369599423283200
  br i1 %101, label %102, label %223

102:                                              ; preds = %94
  %103 = trunc i64 %99 to i32
  %104 = uitofp i32 %103 to double
  %105 = fcmp oeq double %97, %104
  br i1 %105, label %106, label %223

106:                                              ; preds = %102, %82
  %107 = phi i32 [ %83, %82 ], [ %103, %102 ]
  %108 = add i64 %71, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %72, %111
  %113 = add i64 %112, 10
  %114 = inttoptr i64 %113 to i8*
  %115 = load i8, i8* %114, align 1
  %116 = icmp ult i8 %115, 24
  br i1 %116, label %117, label %223

117:                                              ; preds = %106
  %118 = load atomic i32, i32* %109 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %72, %119
  %121 = add i64 %120, 15
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %125 = load i64, i64* %124, align 8
  %126 = trunc i64 %125 to i32
  %127 = icmp eq i32 %123, %126
  br i1 %127, label %163, label %128

128:                                              ; preds = %117
  %129 = zext i32 %123 to i64
  %130 = or i64 %72, %129
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 111
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 29
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %134 to i32
  %136 = trunc i64 %132 to i32
  br label %137

137:                                              ; preds = %156, %128
  %138 = phi i64 [ %130, %128 ], [ %161, %156 ]
  %139 = and i64 %138, -4294967296
  %140 = add i64 %138, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = zext i32 %142 to i64
  %144 = or i64 %139, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load atomic i16, i16* %146 monotonic, align 2
  %148 = icmp ult i16 %147, 1042
  br i1 %148, label %223, label %149

149:                                              ; preds = %137
  %150 = add i64 %138, 7
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = icmp ne i32 %152, %135
  %154 = icmp ne i32 %152, %136
  %155 = and i1 %153, %154
  br i1 %155, label %223, label %156

156:                                              ; preds = %149
  %157 = add i64 %144, 15
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %139, %160
  %162 = icmp eq i32 %159, %126
  br i1 %162, label %163, label %137

163:                                              ; preds = %156, %117
  %164 = load atomic i32, i32* %109 monotonic, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %72, %165
  %167 = add i64 %166, 10
  %168 = inttoptr i64 %167 to i8*
  %169 = load i8, i8* %168, align 1
  %170 = lshr i8 %169, 2
  %171 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %172 = zext i8 %170 to i64
  %173 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %171, i64 %172
  %174 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %173, align 8
  %175 = bitcast %"class.v8::internal::ElementsAccessor"* %174 to i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)***
  %176 = load i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)**, i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)*** %175, align 8
  %177 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)*, i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)** %176, i64 31
  %178 = load i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)*, i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)** %177, align 8
  %179 = tail call i64* %178(%"class.v8::internal::ElementsAccessor"* %174, %"class.v8::internal::Isolate"* %0, i64* %1, i32 %107) #11
  br label %219

180:                                              ; preds = %11
  %181 = add i64 %24, 7
  %182 = inttoptr i64 %181 to i16*
  %183 = load atomic i16, i16* %182 monotonic, align 2
  %184 = icmp eq i16 %183, 1080
  br i1 %184, label %185, label %223

185:                                              ; preds = %180
  %186 = add i64 %8, 31
  %187 = inttoptr i64 %186 to i64*
  %188 = load i64, i64* %187, align 1
  %189 = add i64 %8, 11
  %190 = inttoptr i64 %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  %193 = or i64 %12, %192
  %194 = add i64 %193, 43
  %195 = inttoptr i64 %194 to i32*
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 4
  %198 = icmp ne i32 %197, 0
  %199 = icmp ugt i64 %188, 134217725
  %200 = or i1 %199, %198
  br i1 %200, label %223, label %201

201:                                              ; preds = %185
  %202 = load atomic i32, i32* %14 monotonic, align 4
  %203 = zext i32 %202 to i64
  %204 = or i64 %12, %203
  %205 = add i64 %204, 10
  %206 = inttoptr i64 %205 to i8*
  %207 = load i8, i8* %206, align 1
  %208 = lshr i8 %207, 2
  %209 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %210 = zext i8 %208 to i64
  %211 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %209, i64 %210
  %212 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %211, align 8
  %213 = trunc i64 %188 to i32
  %214 = bitcast %"class.v8::internal::ElementsAccessor"* %212 to i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)***
  %215 = load i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)**, i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)*** %214, align 8
  %216 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)*, i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)** %215, i64 31
  %217 = load i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)*, i64* (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i32)** %216, align 8
  %218 = tail call i64* %217(%"class.v8::internal::ElementsAccessor"* %212, %"class.v8::internal::Isolate"* %0, i64* %1, i32 %213) #11
  br label %219

219:                                              ; preds = %163, %201
  %220 = phi i64* [ %179, %163 ], [ %218, %201 ]
  %221 = ptrtoint i64* %220 to i64
  %222 = icmp eq i64* %220, null
  br i1 %222, label %223, label %445

223:                                              ; preds = %137, %149, %94, %84, %80, %7, %3, %180, %185, %106, %102, %66, %219
  %224 = load i64, i64* %1, align 8
  %225 = and i64 %224, 1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %238, label %227

227:                                              ; preds = %223
  %228 = and i64 %224, -4294967296
  %229 = add i64 %224, -1
  %230 = inttoptr i64 %229 to i32*
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %228, %232
  %234 = add i64 %233, 7
  %235 = inttoptr i64 %234 to i16*
  %236 = load atomic i16, i16* %235 monotonic, align 2
  %237 = icmp ugt i16 %236, 185
  br i1 %237, label %250, label %238

238:                                              ; preds = %223, %227
  %239 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %240 = bitcast %"class.v8::internal::Vector.1009"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %240) #11
  %241 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.241, i64 0, i64 0), i8** %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %5, i64 0, i32 1
  store i64 23, i64* %242, align 8
  %243 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %239, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %5, i8 zeroext 0) #11
  %244 = icmp eq i64* %243, null
  br i1 %244, label %245, label %246, !prof !3

245:                                              ; preds = %238
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

246:                                              ; preds = %238
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %240) #11
  %247 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %239, i32 26, i64* nonnull %243, i64* null, i64* null) #11
  %248 = load i64, i64* %247, align 8
  %249 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %248, %"class.v8::internal::MessageLocation"* null) #11
  br label %445

250:                                              ; preds = %227
  %251 = tail call i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %252 = icmp eq i64* %251, null
  br i1 %252, label %445, label %253

253:                                              ; preds = %250
  %254 = load i64, i64* %251, align 8
  %255 = and i64 %254, 1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %262

257:                                              ; preds = %253
  %258 = trunc i64 %254 to i32
  %259 = icmp slt i32 %258, 0
  br i1 %259, label %290, label %260

260:                                              ; preds = %257
  %261 = lshr i32 %258, 1
  br label %285

262:                                              ; preds = %253
  %263 = and i64 %254, -4294967296
  %264 = add i64 %254, -1
  %265 = inttoptr i64 %264 to i32*
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = zext i32 %266 to i64
  %268 = or i64 %263, %267
  %269 = add i64 %268, 7
  %270 = inttoptr i64 %269 to i16*
  %271 = load atomic i16, i16* %270 monotonic, align 2
  %272 = icmp eq i16 %271, 66
  br i1 %272, label %273, label %290

273:                                              ; preds = %262
  %274 = add i64 %254, 3
  %275 = inttoptr i64 %274 to double*
  %276 = load double, double* %275, align 1
  %277 = fadd double %276, 0x4330000000000000
  %278 = bitcast double %277 to i64
  %279 = and i64 %278, -4294967296
  %280 = icmp eq i64 %279, 4841369599423283200
  br i1 %280, label %281, label %290

281:                                              ; preds = %273
  %282 = trunc i64 %278 to i32
  %283 = uitofp i32 %282 to double
  %284 = fcmp une double %276, %283
  br label %285

285:                                              ; preds = %260, %281
  %286 = phi i32 [ %261, %260 ], [ %282, %281 ]
  %287 = phi i1 [ false, %260 ], [ %284, %281 ]
  %288 = icmp ugt i32 %286, 134217725
  %289 = or i1 %288, %287
  br i1 %289, label %290, label %295

290:                                              ; preds = %273, %262, %257, %285
  %291 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %292 = tail call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %291, i32 199, i64* null, i64* null, i64* null) #11
  %293 = load i64, i64* %292, align 8
  %294 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %293, %"class.v8::internal::MessageLocation"* null) #11
  br label %445

295:                                              ; preds = %285
  %296 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %297 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %298 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %297, i32 %286, i8 zeroext 0) #11
  %299 = icmp eq i32 %286, 0
  br i1 %299, label %443, label %300

300:                                              ; preds = %295
  %301 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  %302 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  %303 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  %304 = bitcast %"class.v8::internal::Isolate"** %303 to %"class.v8::internal::Factory"**
  %305 = icmp eq i32 %2, 1
  %306 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %307 = zext i32 %286 to i64
  br i1 %305, label %308, label %388

308:                                              ; preds = %300, %385
  %309 = phi i64 [ %386, %385 ], [ 0, %300 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %301) #11
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %0, i64* %1, i64* null, i64 %309, i64* %1, i32 3) #11
  %310 = load i32, i32* %302, align 4
  %311 = icmp eq i32 %310, 4
  br i1 %311, label %314, label %312

312:                                              ; preds = %308
  %313 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #11
  br label %318

314:                                              ; preds = %308
  %315 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %304, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %315, i64 160
  %317 = bitcast %"class.v8::internal::Factory"* %316 to i64*
  br label %318

318:                                              ; preds = %314, %312
  %319 = phi i64* [ %313, %312 ], [ %317, %314 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %301) #11
  %320 = icmp eq i64* %319, null
  br i1 %320, label %445, label %321

321:                                              ; preds = %318
  %322 = load i64, i64* %319, align 8
  %323 = and i64 %322, 1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %401, label %325

325:                                              ; preds = %321
  %326 = and i64 %322, -4294967296
  %327 = add i64 %322, -1
  %328 = inttoptr i64 %327 to i32*
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = zext i32 %329 to i64
  %331 = or i64 %326, %330
  %332 = add i64 %331, 7
  %333 = inttoptr i64 %332 to i16*
  %334 = load atomic i16, i16* %333 monotonic, align 2
  %335 = icmp ult i16 %334, 65
  br i1 %335, label %336, label %401

336:                                              ; preds = %325
  %337 = load atomic i32, i32* %328 monotonic, align 4
  %338 = zext i32 %337 to i64
  %339 = or i64 %326, %338
  %340 = add i64 %339, 7
  %341 = inttoptr i64 %340 to i16*
  %342 = load atomic i16, i16* %341 monotonic, align 2
  %343 = and i16 %342, -32
  %344 = icmp eq i16 %343, 32
  br i1 %344, label %345, label %350

345:                                              ; preds = %336
  %346 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %306, align 8
  %347 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %346, %"class.v8::internal::Isolate"* %0, i64* nonnull %319) #11
  %348 = load i64, i64* %347, align 8
  %349 = and i64 %348, 1
  br label %350

350:                                              ; preds = %345, %336
  %351 = phi i64 [ %349, %345 ], [ 1, %336 ]
  %352 = phi i64 [ %348, %345 ], [ %322, %336 ]
  %353 = load i64, i64* %298, align 8
  %354 = trunc i64 %309 to i32
  %355 = shl i32 %354, 2
  %356 = sext i32 %355 to i64
  %357 = add nsw i64 %356, 7
  %358 = add i64 %357, %353
  %359 = inttoptr i64 %358 to i32*
  %360 = trunc i64 %352 to i32
  store atomic volatile i32 %360, i32* %359 monotonic, align 4
  %361 = icmp eq i64 %351, 0
  br i1 %361, label %385, label %362

362:                                              ; preds = %350
  %363 = and i64 %353, -262144
  %364 = or i64 %363, 8
  %365 = inttoptr i64 %364 to i64*
  %366 = load i64, i64* %365, align 8
  %367 = and i64 %366, 262144
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %373, label %369

369:                                              ; preds = %362
  %370 = or i64 %363, 16
  %371 = inttoptr i64 %370 to %"class.v8::internal::Heap"**
  %372 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %371, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %372, i64 %353, i64 %358, i64 %352) #11
  br label %373

373:                                              ; preds = %369, %362
  %374 = and i64 %352, -262144
  %375 = or i64 %374, 8
  %376 = inttoptr i64 %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = and i64 %377, 24
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %385, label %380

380:                                              ; preds = %373
  %381 = load i64, i64* %365, align 8
  %382 = and i64 %381, 24
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %380
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %353, i64 %358, i64 %352) #11
  br label %385

385:                                              ; preds = %384, %380, %373, %350
  %386 = add nuw nsw i64 %309, 1
  %387 = icmp eq i64 %386, %307
  br i1 %387, label %443, label %308

388:                                              ; preds = %300, %440
  %389 = phi i64 [ %441, %440 ], [ 0, %300 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %301) #11
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %4, %"class.v8::internal::Isolate"* %0, i64* %1, i64* null, i64 %389, i64* %1, i32 3) #11
  %390 = load i32, i32* %302, align 4
  %391 = icmp eq i32 %390, 4
  br i1 %391, label %392, label %396

392:                                              ; preds = %388
  %393 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %304, align 8
  %394 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %393, i64 160
  %395 = bitcast %"class.v8::internal::Factory"* %394 to i64*
  br label %398

396:                                              ; preds = %388
  %397 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #11
  br label %398

398:                                              ; preds = %392, %396
  %399 = phi i64* [ %397, %396 ], [ %395, %392 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %301) #11
  %400 = icmp eq i64* %399, null
  br i1 %400, label %445, label %405

401:                                              ; preds = %321, %325
  %402 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %296, i32 104, i64* nonnull %319, i64* null, i64* null) #11
  %403 = load i64, i64* %402, align 8
  %404 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %403, %"class.v8::internal::MessageLocation"* null) #11
  br label %445

405:                                              ; preds = %398
  %406 = load i64, i64* %298, align 8
  %407 = load i64, i64* %399, align 8
  %408 = trunc i64 %389 to i32
  %409 = shl i32 %408, 2
  %410 = sext i32 %409 to i64
  %411 = add nsw i64 %410, 7
  %412 = add i64 %411, %406
  %413 = inttoptr i64 %412 to i32*
  %414 = trunc i64 %407 to i32
  store atomic volatile i32 %414, i32* %413 monotonic, align 4
  %415 = and i64 %407, 1
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %440, label %417

417:                                              ; preds = %405
  %418 = and i64 %406, -262144
  %419 = or i64 %418, 8
  %420 = inttoptr i64 %419 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = and i64 %421, 262144
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %428, label %424

424:                                              ; preds = %417
  %425 = or i64 %418, 16
  %426 = inttoptr i64 %425 to %"class.v8::internal::Heap"**
  %427 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %426, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %427, i64 %406, i64 %412, i64 %407) #11
  br label %428

428:                                              ; preds = %424, %417
  %429 = and i64 %407, -262144
  %430 = or i64 %429, 8
  %431 = inttoptr i64 %430 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = and i64 %432, 24
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %440, label %435

435:                                              ; preds = %428
  %436 = load i64, i64* %420, align 8
  %437 = and i64 %436, 24
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %439, label %440

439:                                              ; preds = %435
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %406, i64 %412, i64 %407) #11
  br label %440

440:                                              ; preds = %405, %428, %435, %439
  %441 = add nuw nsw i64 %389, 1
  %442 = icmp eq i64 %441, %307
  br i1 %442, label %443, label %388

443:                                              ; preds = %440, %385, %295
  %444 = ptrtoint i64* %298 to i64
  br label %445

445:                                              ; preds = %398, %318, %401, %250, %443, %290, %219, %246
  %446 = phi i64 [ 0, %246 ], [ %221, %219 ], [ 0, %250 ], [ 0, %290 ], [ %444, %443 ], [ 0, %401 ], [ 0, %318 ], [ 0, %398 ]
  %447 = inttoptr i64 %446 to i64*
  ret i64* %447
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object22GetLengthFromArrayLikeEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %5 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #11
  %6 = ptrtoint i64* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %8 = icmp eq i64* %4, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = load i64, i64* null, align 536870912
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  br label %34

13:                                               ; preds = %2
  %14 = load i64, i64* %4, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i64 %16, 4294967295
  %21 = icmp eq i64 %20, 0
  tail call void @llvm.assume(i1 %21) #11
  %22 = zext i32 %19 to i64
  %23 = or i64 %16, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 64
  br i1 %27, label %28, label %34

28:                                               ; preds = %13
  %29 = add i64 %14, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28, %13, %9
  %35 = phi i32* [ %12, %9 ], [ %18, %28 ], [ %18, %13 ]
  %36 = phi i64 [ %10, %9 ], [ %14, %28 ], [ %14, %13 ]
  br label %37

37:                                               ; preds = %34, %28
  %38 = phi i32* [ %35, %34 ], [ %18, %28 ]
  %39 = phi i64 [ %36, %34 ], [ %14, %28 ]
  %40 = phi i32 [ 3, %34 ], [ 0, %28 ]
  store i32 %40, i32* %7, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %41, align 4
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %4, i64** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %51 = bitcast %"class.v8::internal::Handle.1220"* %50 to i64*
  store i64 %6, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %53 = bitcast i64* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 -1, i64 16, i1 false) #11
  %54 = and i64 %39, -4294967296
  %55 = load atomic i32, i32* %38 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %54, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = and i16 %60, -32
  %62 = icmp eq i16 %61, 32
  br i1 %62, label %63, label %67

63:                                               ; preds = %37
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %65 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %64, align 8
  %66 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %65, %"class.v8::internal::Isolate"* %0, i64* %4) #11
  br label %67

67:                                               ; preds = %63, %37
  %68 = phi i64* [ %66, %63 ], [ %4, %37 ]
  store i64* %68, i64** %46, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #11
  %69 = load i32, i32* %41, align 4
  %70 = icmp eq i32 %69, 4
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  %72 = bitcast %"class.v8::internal::Isolate"** %45 to %"class.v8::internal::Factory"**
  %73 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %73, i64 160
  %75 = bitcast %"class.v8::internal::Factory"* %74 to i64*
  br label %78

76:                                               ; preds = %67
  %77 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #11
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi i64* [ %77, %76 ], [ %75, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #11
  %80 = icmp eq i64* %79, null
  br i1 %80, label %112, label %81

81:                                               ; preds = %78
  %82 = load i64, i64* %79, align 8
  %83 = and i64 %82, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %110

85:                                               ; preds = %81
  %86 = trunc i64 %82 to i32
  %87 = ashr i32 %86, 1
  %88 = icmp sgt i32 %87, 0
  %89 = select i1 %88, i32 %87, i32 0
  %90 = shl nuw nsw i32 %89, 1
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %93 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %92, align 8
  %94 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %85
  %96 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %93, i64 %91) #11
  br label %112

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %99, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  %104 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %105

105:                                              ; preds = %103, %97
  %106 = phi i64* [ %104, %103 ], [ %99, %97 ]
  %107 = ptrtoint i64* %106 to i64
  %108 = add i64 %107, 8
  %109 = inttoptr i64 %108 to i64*
  store i64* %109, i64** %98, align 8
  store i64 %91, i64* %106, align 8
  br label %112

110:                                              ; preds = %81
  %111 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %79) #11
  br label %112

112:                                              ; preds = %110, %105, %95, %78
  %113 = phi i64* [ null, %78 ], [ %111, %110 ], [ %96, %95 ], [ %106, %105 ]
  ret i64* %113
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %6

6:                                                ; preds = %141, %2
  %7 = load i32, i32* %5, align 4
  switch i32 %7, label %141 [
    i32 4, label %142
    i32 6, label %138
    i32 7, label %8
    i32 3, label %9
    i32 2, label %114
    i32 0, label %124
    i32 5, label %129
    i32 1, label %132
  ]

8:                                                ; preds = %6
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %11 to i64
  %13 = load i64, i64* %11, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %54, label %16

16:                                               ; preds = %9
  %17 = and i64 %13, -4294967296
  %18 = add i64 %13, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 189
  br i1 %26, label %27, label %54

27:                                               ; preds = %16
  %28 = add i64 %13, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %17, %31
  %33 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %34 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 4
  %36 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %35, align 8
  %37 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %27
  %39 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %36, i64 %32) #11
  %40 = ptrtoint i64* %39 to i64
  br label %54

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 31, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %34) #11
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i64* [ %48, %47 ], [ %43, %41 ]
  %51 = ptrtoint i64* %50 to i64
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  store i64* %53, i64** %42, align 8
  store i64 %32, i64* %50, align 8
  br label %54

54:                                               ; preds = %49, %38, %9, %16
  %55 = phi i64 [ %12, %16 ], [ %12, %9 ], [ %40, %38 ], [ %51, %49 ]
  br i1 %1, label %56, label %85

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %60 = load i64*, i64** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %62 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %61, i64 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %63, null
  br i1 %64, label %65, label %72

65:                                               ; preds = %56
  %66 = bitcast %"class.v8::internal::Isolate"* %58 to %"class.v8::internal::Factory"*
  %67 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %68 = load i64, i64* %67, align 8
  %69 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %66, i64 %68, i1 zeroext true) #11
  %70 = ptrtoint i64* %69 to i64
  %71 = bitcast %"class.v8::internal::Handle.1234"* %61 to i64*
  store i64 %70, i64* %71, align 8
  br label %72

72:                                               ; preds = %56, %65
  %73 = phi i64* [ %69, %65 ], [ %63, %56 ]
  %74 = call i16 @_ZN2v88internal7JSProxy11HasPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %58, i64* %60, i64* %73)
  %75 = trunc i16 %74 to i8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %112, label %77

77:                                               ; preds = %72
  %78 = icmp ugt i16 %74, 255
  br i1 %78, label %85, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %80, align 8
  store i32 4, i32* %5, align 4
  %81 = bitcast %"class.v8::internal::Isolate"** %57 to %"class.v8::internal::Factory"**
  %82 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %82, i64 160
  %84 = ptrtoint %"class.v8::internal::Factory"* %83 to i64
  br label %112

85:                                               ; preds = %77, %54
  %86 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %91 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %90, i64 0, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = icmp eq i64* %92, null
  br i1 %93, label %94, label %101

94:                                               ; preds = %85
  %95 = bitcast %"class.v8::internal::Isolate"* %87 to %"class.v8::internal::Factory"*
  %96 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %97 = load i64, i64* %96, align 8
  %98 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %95, i64 %97, i1 zeroext true) #11
  %99 = ptrtoint i64* %98 to i64
  %100 = bitcast %"class.v8::internal::Handle.1234"* %90 to i64*
  store i64 %99, i64* %100, align 8
  br label %101

101:                                              ; preds = %85, %94
  %102 = phi i64* [ %98, %94 ], [ %92, %85 ]
  %103 = inttoptr i64 %55 to i64*
  %104 = call i64* @_ZN2v88internal7JSProxy11GetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEEPb(%"class.v8::internal::Isolate"* %87, i64* %89, i64* %102, i64* %103, i8* nonnull %3)
  %105 = load i8, i8* %3, align 1, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = or i1 %106, %1
  br i1 %107, label %110, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %109, align 8
  store i32 4, i32* %5, align 4
  br label %110

110:                                              ; preds = %101, %108
  %111 = ptrtoint i64* %104 to i64
  br label %112

112:                                              ; preds = %72, %79, %110
  %113 = phi i64 [ %111, %110 ], [ %84, %79 ], [ 0, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  br label %148

114:                                              ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  %115 = call i64* @_ZN2v88internal8JSObject26GetPropertyWithInterceptorEPNS0_14LookupIteratorEPb(%"class.v8::internal::LookupIterator"* %0, i8* nonnull %4) #11
  %116 = icmp eq i64* %115, null
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br label %148

118:                                              ; preds = %114
  %119 = load i8, i8* %4, align 1, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %118
  %122 = ptrtoint i64* %115 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br label %148

123:                                              ; preds = %118
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br label %141

124:                                              ; preds = %6
  %125 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #11
  br i1 %125, label %141, label %126

126:                                              ; preds = %124
  %127 = call i64* @_ZN2v88internal8JSObject32GetPropertyWithFailedAccessCheckEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0) #11
  %128 = ptrtoint i64* %127 to i64
  br label %148

129:                                              ; preds = %6
  %130 = call i64* @_ZN2v88internal6Object23GetPropertyWithAccessorEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0)
  %131 = ptrtoint i64* %130 to i64
  br label %148

132:                                              ; preds = %6
  %133 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %134 = bitcast %"class.v8::internal::Isolate"** %133 to %"class.v8::internal::Factory"**
  %135 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %135, i64 160
  %137 = ptrtoint %"class.v8::internal::Factory"* %136 to i64
  br label %148

138:                                              ; preds = %6
  %139 = call i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* %0, i32 0) #11
  %140 = ptrtoint i64* %139 to i64
  br label %148

141:                                              ; preds = %6, %123, %124
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #11
  br label %6

142:                                              ; preds = %6
  %143 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %144 = bitcast %"class.v8::internal::Isolate"** %143 to %"class.v8::internal::Factory"**
  %145 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %145, i64 160
  %147 = ptrtoint %"class.v8::internal::Factory"* %146 to i64
  br label %148

148:                                              ; preds = %121, %117, %142, %138, %132, %129, %126, %112
  %149 = phi i64 [ %140, %138 ], [ %137, %132 ], [ %131, %129 ], [ %128, %126 ], [ %122, %121 ], [ 0, %117 ], [ %113, %112 ], [ %147, %142 ]
  %150 = inttoptr i64 %149 to i64*
  ret i64* %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy11HasPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x %"class.v8::internal::Handle.1220"], align 16
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %6 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = icmp ult i64 %6, %8
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #11
  br label %132

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %19 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %18) #11
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #11
  br label %132

22:                                               ; preds = %17, %3
  %23 = load i64, i64* %1, align 8
  %24 = and i64 %23, -4294967296
  %25 = add i64 %23, 11
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %31 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %32 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %31, i64 %29) #11
  br label %48

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %39 = load i64*, i64** %38, align 8
  %40 = icmp eq i64* %37, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %43

43:                                               ; preds = %41, %35
  %44 = phi i64* [ %42, %41 ], [ %37, %35 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %36, align 8
  store i64 %29, i64* %44, align 8
  br label %48

48:                                               ; preds = %33, %43
  %49 = phi i64* [ %34, %33 ], [ %44, %43 ]
  %50 = load i64, i64* %1, align 8
  %51 = and i64 %50, -4294967296
  %52 = add i64 %50, 11
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = add i64 %56, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %51, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp ult i16 %64, 186
  br i1 %65, label %66, label %72

66:                                               ; preds = %48
  %67 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 345
  %69 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %67, i32 150, i64* %68, i64* null, i64* null) #11
  %70 = load i64, i64* %69, align 8
  %71 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %70, %"class.v8::internal::MessageLocation"* null) #11
  br label %132

72:                                               ; preds = %48
  %73 = add i64 %50, 7
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %51, %76
  %78 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %30, align 8
  %79 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  %81 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %78, i64 %77) #11
  br label %95

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %84, %86
  br i1 %87, label %88, label %90

88:                                               ; preds = %82
  %89 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %90

90:                                               ; preds = %88, %82
  %91 = phi i64* [ %89, %88 ], [ %84, %82 ]
  %92 = ptrtoint i64* %91 to i64
  %93 = add i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  store i64* %94, i64** %83, align 8
  store i64 %77, i64* %91, align 8
  br label %95

95:                                               ; preds = %80, %90
  %96 = phi i64* [ %81, %80 ], [ %91, %90 ]
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 345
  %98 = tail call i64* @_ZN2v88internal6Object9GetMethodENS0_6HandleINS0_10JSReceiverEEENS2_INS0_4NameEEE(i64* %49, i64* %97)
  %99 = icmp eq i64* %98, null
  br i1 %99, label %132, label %100

100:                                              ; preds = %95
  %101 = load i64, i64* %98, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %103 = load i64, i64* %102, align 8
  %104 = trunc i64 %101 to i32
  %105 = trunc i64 %103 to i32
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %100
  %108 = tail call i16 @_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %96, i64* %2)
  br label %132

109:                                              ; preds = %100
  %110 = bitcast [2 x %"class.v8::internal::Handle.1220"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #11
  %111 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %4, i64 0, i64 0
  %112 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %4, i64 0, i64 0, i32 0, i32 0
  store i64* %96, i64** %112, align 16
  %113 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %4, i64 0, i64 1, i32 0, i32 0
  store i64* %2, i64** %113, align 8
  %114 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %0, i64* nonnull %98, i64* %49, i32 2, %"class.v8::internal::Handle.1220"* nonnull %111) #11
  %115 = icmp eq i64* %114, null
  br i1 %115, label %130, label %116

116:                                              ; preds = %109
  %117 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #11
  %118 = load i64, i64* %114, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0
  %121 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %120, %"class.v8::internal::Isolate"* %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #11
  br i1 %121, label %126, label %122

122:                                              ; preds = %116
  %123 = call i16 @_ZN2v88internal7JSProxy12CheckHasTrapEPNS0_7IsolateENS0_6HandleINS0_4NameEEENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %96)
  %124 = trunc i16 %123 to i8
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %122, %116
  %127 = zext i1 %121 to i16
  %128 = shl nuw nsw i16 %127, 8
  %129 = or i16 %128, 1
  br label %130

130:                                              ; preds = %126, %122, %109
  %131 = phi i16 [ 0, %109 ], [ %129, %126 ], [ 0, %122 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #11
  br label %132

132:                                              ; preds = %66, %95, %130, %107, %15, %20
  %133 = phi i16 [ 0, %20 ], [ 0, %15 ], [ 0, %66 ], [ %108, %107 ], [ %131, %130 ], [ 0, %95 ]
  ret i16 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal7JSProxy11GetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEEPb(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %8 = alloca %"class.v8::internal::LookupIterator", align 8
  %9 = alloca [3 x %"class.v8::internal::Handle.1220"], align 16
  store i8 1, i8* %4, align 1
  %10 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %12 = load atomic i64, i64* %11 monotonic, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %5
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #11
  br label %193

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %23 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %22) #11
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #11
  br label %193

26:                                               ; preds = %5, %21
  %27 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 338
  %29 = load i64, i64* %1, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, 11
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %37 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %36, align 8
  %38 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %26
  %40 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %37, i64 %35) #11
  br label %54

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = icmp eq i64* %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i64* [ %48, %47 ], [ %43, %41 ]
  %51 = ptrtoint i64* %50 to i64
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  store i64* %53, i64** %42, align 8
  store i64 %35, i64* %50, align 8
  br label %54

54:                                               ; preds = %39, %49
  %55 = phi i64* [ %40, %39 ], [ %50, %49 ]
  %56 = load i64, i64* %1, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 11
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = add i64 %62, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %57, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp ult i16 %70, 186
  br i1 %71, label %72, label %76

72:                                               ; preds = %54
  %73 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %27, i32 150, i64* %28, i64* null, i64* null) #11
  %74 = load i64, i64* %73, align 8
  %75 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %74, %"class.v8::internal::MessageLocation"* null) #11
  br label %193

76:                                               ; preds = %54
  %77 = add i64 %56, 7
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %57, %80
  %82 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %36, align 8
  %83 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %76
  %85 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %82, i64 %81) #11
  br label %99

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %90 = load i64*, i64** %89, align 8
  %91 = icmp eq i64* %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  %93 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %94

94:                                               ; preds = %92, %86
  %95 = phi i64* [ %93, %92 ], [ %88, %86 ]
  %96 = ptrtoint i64* %95 to i64
  %97 = add i64 %96, 8
  %98 = inttoptr i64 %97 to i64*
  store i64* %98, i64** %87, align 8
  store i64 %81, i64* %95, align 8
  br label %99

99:                                               ; preds = %84, %94
  %100 = phi i64* [ %85, %84 ], [ %95, %94 ]
  %101 = tail call i64* @_ZN2v88internal6Object9GetMethodENS0_6HandleINS0_10JSReceiverEEENS2_INS0_4NameEEE(i64* %55, i64* %28)
  %102 = icmp eq i64* %101, null
  br i1 %102, label %193, label %103

103:                                              ; preds = %99
  %104 = load i64, i64* %101, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %106 = load i64, i64* %105, align 8
  %107 = trunc i64 %104 to i32
  %108 = trunc i64 %106 to i32
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %178

110:                                              ; preds = %103
  %111 = bitcast %"class.v8::internal::LookupIterator::Key"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #11
  %112 = ptrtoint i64* %2 to i64
  %113 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %7, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %113, align 8
  %114 = load i64, i64* %2, align 8
  %115 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %7, i64 0, i32 1
  %116 = and i64 %114, -4294967296
  %117 = add i64 %114, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %116, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = icmp ult i16 %124, 64
  %126 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #11
  br i1 %125, label %127, label %141

127:                                              ; preds = %110
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %114, i64* %128, align 8
  %129 = add i64 %114, 3
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, -536870910
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %127
  %135 = lshr i32 %131, 2
  %136 = and i32 %135, 16777215
  %137 = zext i32 %136 to i64
  store i64 %137, i64* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  br label %149

138:                                              ; preds = %127
  %139 = and i32 %131, 3
  %140 = icmp eq i32 %139, 2
  br i1 %140, label %141, label %142

141:                                              ; preds = %138, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  br label %151

142:                                              ; preds = %138
  %143 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %6, i64* %115) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  br i1 %143, label %149, label %144

144:                                              ; preds = %142
  %145 = load i64, i64* %2, align 8
  %146 = and i64 %145, -4294967296
  %147 = add i64 %145, -1
  %148 = inttoptr i64 %147 to i32*
  br label %151

149:                                              ; preds = %142, %134
  %150 = bitcast %"class.v8::internal::LookupIterator::Key"* %7 to i64*
  store i64 %112, i64* %150, align 8
  br label %168

151:                                              ; preds = %144, %141
  %152 = phi i32* [ %148, %144 ], [ %118, %141 ]
  %153 = phi i64 [ %146, %144 ], [ %116, %141 ]
  store i64 -1, i64* %115, align 8
  %154 = load atomic i32, i32* %152 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %153, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = and i16 %159, -32
  %161 = icmp eq i16 %160, 32
  br i1 %161, label %162, label %166

162:                                              ; preds = %151
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %164 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %163, align 8
  %165 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %164, %"class.v8::internal::Isolate"* %0, i64* %2) #11
  br label %166

166:                                              ; preds = %162, %151
  %167 = phi i64* [ %165, %162 ], [ %2, %151 ]
  store i64* %167, i64** %113, align 8
  br label %168

168:                                              ; preds = %149, %166
  %169 = phi i64* [ %2, %149 ], [ %167, %166 ]
  %170 = bitcast %"class.v8::internal::LookupIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %170) #11
  %171 = load i64, i64* %115, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %8, %"class.v8::internal::Isolate"* %0, i64* %3, i64* %169, i64 %171, i64* %100, i32 3) #11
  %172 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %8, i1 zeroext false)
  %173 = ptrtoint i64* %172 to i64
  %174 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %8, i64 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = icmp ne i32 %175, 4
  %177 = zext i1 %176 to i8
  store i8 %177, i8* %4, align 1
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %170) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #11
  br label %193

178:                                              ; preds = %103
  %179 = bitcast [3 x %"class.v8::internal::Handle.1220"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #11
  %180 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1220"], [3 x %"class.v8::internal::Handle.1220"]* %9, i64 0, i64 0
  %181 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1220"], [3 x %"class.v8::internal::Handle.1220"]* %9, i64 0, i64 0, i32 0, i32 0
  store i64* %100, i64** %181, align 16
  %182 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1220"], [3 x %"class.v8::internal::Handle.1220"]* %9, i64 0, i64 1, i32 0, i32 0
  store i64* %2, i64** %182, align 8
  %183 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1220"], [3 x %"class.v8::internal::Handle.1220"]* %9, i64 0, i64 2, i32 0, i32 0
  store i64* %3, i64** %183, align 16
  %184 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %0, i64* nonnull %101, i64* %55, i32 3, %"class.v8::internal::Handle.1220"* nonnull %180) #11
  %185 = icmp eq i64* %184, null
  br i1 %185, label %191, label %186

186:                                              ; preds = %178
  %187 = call i64* @_ZN2v88internal7JSProxy21CheckGetSetTrapResultEPNS0_7IsolateENS0_6HandleINS0_4NameEEENS4_INS0_10JSReceiverEEENS4_INS0_6ObjectEEENS1_10AccessKindE(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %100, i64* nonnull %184, i32 0)
  %188 = icmp eq i64* %187, null
  %189 = select i1 %188, i64* null, i64* %184
  %190 = ptrtoint i64* %189 to i64
  br label %191

191:                                              ; preds = %186, %178
  %192 = phi i64 [ 0, %178 ], [ %190, %186 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #11
  br label %193

193:                                              ; preds = %72, %99, %191, %168, %24, %19
  %194 = phi i64 [ 0, %19 ], [ 0, %24 ], [ 0, %72 ], [ %173, %168 ], [ %192, %191 ], [ 0, %99 ]
  %195 = inttoptr i64 %194 to i64*
  ret i64* %195
}

declare i64* @_ZN2v88internal8JSObject26GetPropertyWithInterceptorEPNS0_14LookupIteratorEPb(%"class.v8::internal::LookupIterator"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal8JSObject32GetPropertyWithFailedAccessCheckEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object23GetPropertyWithAccessorEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::StackLimitCheck", align 8
  %3 = alloca %"class.v8::internal::FunctionTemplateInfo", align 8
  %4 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %5 = alloca %"class.v8::internal::SaveAndSwitchContext", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = tail call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #11
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %11 to i64
  %13 = load i64, i64* %11, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %52, label %16

16:                                               ; preds = %1
  %17 = and i64 %13, -4294967296
  %18 = add i64 %13, -1
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp eq i16 %25, 189
  br i1 %26, label %27, label %52

27:                                               ; preds = %16
  %28 = add i64 %13, 15
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %17, %31
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %27
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #11
  %38 = ptrtoint i64* %37 to i64
  br label %52

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #11
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %32, i64* %48, align 8
  br label %52

52:                                               ; preds = %47, %36, %1, %16
  %53 = phi i64 [ %12, %16 ], [ %12, %1 ], [ %38, %36 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = load i64, i64* %9, align 8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %257, label %59

59:                                               ; preds = %52
  %60 = and i64 %56, -4294967296
  %61 = add i64 %56, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 86
  br i1 %69, label %70, label %257

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %72 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %71, i64 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %85

75:                                               ; preds = %70
  %76 = bitcast %"class.v8::internal::Isolate"** %7 to %"class.v8::internal::Factory"**
  %77 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %79 = load i64, i64* %78, align 8
  %80 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %77, i64 %79, i1 zeroext true) #11
  %81 = ptrtoint i64* %80 to i64
  %82 = bitcast %"class.v8::internal::Handle.1234"* %71 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load i64, i64* %9, align 8
  %84 = and i64 %83, -4294967296
  br label %85

85:                                               ; preds = %70, %75
  %86 = phi i64 [ %60, %70 ], [ %84, %75 ]
  %87 = phi i64 [ %56, %70 ], [ %83, %75 ]
  %88 = phi i64* [ %73, %70 ], [ %80, %75 ]
  %89 = inttoptr i64 %53 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %87, 11
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %136, label %97

97:                                               ; preds = %85
  %98 = or i64 %86, %94
  %99 = add i64 %98, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %86, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp eq i16 %106, 83
  br i1 %107, label %108, label %136

108:                                              ; preds = %97
  %109 = and i64 %90, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %131, label %111

111:                                              ; preds = %108
  %112 = and i64 %90, -4294967296
  %113 = add i64 %90, -1
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %112, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = icmp ugt i16 %120, 188
  br i1 %121, label %122, label %131

122:                                              ; preds = %111
  %123 = bitcast %"class.v8::internal::FunctionTemplateInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #11
  %124 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %98, i64* %124, align 8
  %125 = load atomic i32, i32* %114 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %112, %126
  %128 = call zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"* nonnull %3, i64 %127) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #11
  br i1 %128, label %129, label %131

129:                                              ; preds = %122
  %130 = load i64, i64* %9, align 8
  br label %136

131:                                              ; preds = %108, %111, %122
  %132 = bitcast %"class.v8::internal::Isolate"* %8 to %"class.v8::internal::Factory"*
  %133 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %132, i32 64, i64* %88, i64* %89, i64* null) #11
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %8, i64 %134, %"class.v8::internal::MessageLocation"* null) #11
  br label %352

136:                                              ; preds = %129, %85, %97
  %137 = phi i64 [ %130, %129 ], [ %87, %85 ], [ %87, %97 ]
  %138 = add i64 %137, 19
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 4
  %144 = ptrtoint i64* %143 to i64
  br label %352

145:                                              ; preds = %136
  %146 = add i64 %137, 7
  %147 = inttoptr i64 %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 16
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %171, label %151

151:                                              ; preds = %145
  %152 = load i64, i64* %89, align 8
  %153 = and i64 %152, 1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %166, label %155

155:                                              ; preds = %151
  %156 = and i64 %152, -4294967296
  %157 = add i64 %152, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %156, %160
  %162 = add i64 %161, 7
  %163 = inttoptr i64 %162 to i16*
  %164 = load atomic i16, i16* %163 monotonic, align 2
  %165 = icmp ugt i16 %164, 185
  br i1 %165, label %171, label %166

166:                                              ; preds = %151, %155
  %167 = tail call i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %8, i64* %89)
  %168 = icmp eq i64* %167, null
  br i1 %168, label %352, label %169

169:                                              ; preds = %166
  %170 = load i64, i64* %9, align 8
  br label %171

171:                                              ; preds = %169, %145, %155
  %172 = phi i64 [ %137, %155 ], [ %137, %145 ], [ %170, %169 ]
  %173 = phi i64* [ %89, %155 ], [ %89, %145 ], [ %167, %169 ]
  %174 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %174) #11
  %175 = and i64 %172, -4294967296
  %176 = add i64 %172, 27
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = or i64 %175, %179
  %181 = load i64, i64* %173, align 8
  %182 = load i64, i64* %55, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %4, %"class.v8::internal::Isolate"* %8, i64 %180, i64 %181, i64 %182, i64 4294967297) #11
  %183 = call i64* @_ZN2v88internal25PropertyCallbackArguments18CallAccessorGetterENS0_6HandleINS0_12AccessorInfoEEENS2_INS0_4NameEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %4, i64* %9, i64* %88)
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 5
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %187 = load i64, i64* %186, align 8
  %188 = trunc i64 %187 to i32
  %189 = trunc i64 %185 to i32
  %190 = icmp eq i32 %188, %189
  br i1 %190, label %193, label %191

191:                                              ; preds = %171
  %192 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %8) #11
  br label %246

193:                                              ; preds = %171
  %194 = icmp eq i64* %183, null
  br i1 %194, label %195, label %198

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 4
  %197 = ptrtoint i64* %196 to i64
  br label %246

198:                                              ; preds = %193
  %199 = load i64, i64* %183, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %201 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %200, align 8
  %202 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %198
  %204 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %201, i64 %199) #11
  br label %218

205:                                              ; preds = %198
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %207 = load i64*, i64** %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %209 = load i64*, i64** %208, align 8
  %210 = icmp eq i64* %207, %209
  br i1 %210, label %211, label %213

211:                                              ; preds = %205
  %212 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #11
  br label %213

213:                                              ; preds = %211, %205
  %214 = phi i64* [ %212, %211 ], [ %207, %205 ]
  %215 = ptrtoint i64* %214 to i64
  %216 = add i64 %215, 8
  %217 = inttoptr i64 %216 to i64*
  store i64* %217, i64** %206, align 8
  store i64 %199, i64* %214, align 8
  br label %218

218:                                              ; preds = %203, %213
  %219 = phi i64* [ %204, %203 ], [ %214, %213 ]
  %220 = load i64, i64* %9, align 8
  %221 = add i64 %220, 7
  %222 = inttoptr i64 %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = and i32 %223, 32
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %244, label %226

226:                                              ; preds = %218
  %227 = load i64, i64* %173, align 8
  %228 = and i64 %227, 1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %244, label %230

230:                                              ; preds = %226
  %231 = and i64 %227, -4294967296
  %232 = add i64 %227, -1
  %233 = inttoptr i64 %232 to i32*
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = zext i32 %234 to i64
  %236 = or i64 %231, %235
  %237 = add i64 %236, 7
  %238 = inttoptr i64 %237 to i16*
  %239 = load atomic i16, i16* %238 monotonic, align 2
  %240 = icmp ugt i16 %239, 185
  br i1 %240, label %241, label %244

241:                                              ; preds = %230
  %242 = call i64* @_ZN2v88internal9Accessors31ReplaceAccessorWithDataPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_8JSObjectEEENS4_INS0_4NameEEES6_(%"class.v8::internal::Isolate"* %8, i64* %173, i64* %55, i64* %88, i64* nonnull %183) #11
  %243 = icmp eq i64* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %218, %226, %241, %230
  %245 = ptrtoint i64* %219 to i64
  br label %246

246:                                              ; preds = %241, %244, %191, %195
  %247 = phi i64 [ 0, %191 ], [ %197, %195 ], [ %245, %244 ], [ 0, %241 ]
  %248 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %4, i64 0, i32 0, i32 1, i64 4
  store i64 1994495044801650351, i64* %249, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %248, align 8
  %250 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %251 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %250, align 8
  %252 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %253 = bitcast %"class.v8::internal::Relocatable"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %251, i64 0, i32 91
  %256 = bitcast %"class.v8::internal::Relocatable"** %255 to i64*
  store i64 %254, i64* %256, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %174) #11
  br label %352

257:                                              ; preds = %52, %59
  %258 = tail call zeroext i1 @_ZN2v88internal14LookupIterator23TryLookupCachedPropertyENS0_6HandleINS0_12AccessorPairEEE(%"class.v8::internal::LookupIterator"* %0, i64* %9) #11
  br i1 %258, label %259, label %262

259:                                              ; preds = %257
  %260 = tail call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* %0, i1 zeroext false)
  %261 = ptrtoint i64* %260 to i64
  br label %352

262:                                              ; preds = %257
  %263 = load i64, i64* %9, align 8
  %264 = and i64 %263, -4294967296
  %265 = add i64 %263, 3
  %266 = inttoptr i64 %265 to i32*
  %267 = load i32, i32* %266, align 4
  %268 = zext i32 %267 to i64
  %269 = or i64 %264, %268
  %270 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 4
  %271 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %270, align 8
  %272 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %271, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %262
  %274 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %271, i64 %269) #11
  %275 = load i64, i64* %274, align 8
  br label %289

276:                                              ; preds = %262
  %277 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 0
  %278 = load i64*, i64** %277, align 8
  %279 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %280 = load i64*, i64** %279, align 8
  %281 = icmp eq i64* %278, %280
  br i1 %281, label %282, label %284

282:                                              ; preds = %276
  %283 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %8) #11
  br label %284

284:                                              ; preds = %282, %276
  %285 = phi i64* [ %283, %282 ], [ %278, %276 ]
  %286 = ptrtoint i64* %285 to i64
  %287 = add i64 %286, 8
  %288 = inttoptr i64 %287 to i64*
  store i64* %288, i64** %277, align 8
  store i64 %269, i64* %285, align 8
  br label %289

289:                                              ; preds = %273, %284
  %290 = phi i64 [ %275, %273 ], [ %269, %284 ]
  %291 = phi i64* [ %274, %273 ], [ %285, %284 ]
  %292 = and i64 %290, 1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %349, label %294

294:                                              ; preds = %289
  %295 = and i64 %290, -4294967296
  %296 = add i64 %290, -1
  %297 = inttoptr i64 %296 to i32*
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = zext i32 %298 to i64
  %300 = or i64 %295, %299
  %301 = add i64 %300, 7
  %302 = inttoptr i64 %301 to i16*
  %303 = load atomic i16, i16* %302 monotonic, align 2
  %304 = icmp eq i16 %303, 83
  br i1 %304, label %305, label %322

305:                                              ; preds = %294
  %306 = bitcast %"class.v8::internal::SaveAndSwitchContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #11
  %307 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #11
  %308 = load i64, i64* %55, align 8
  %309 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %308, i64* %309, align 8
  %310 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %311 = call i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"* nonnull %310) #11
  %312 = icmp eq i64* %311, null
  br i1 %312, label %313, label %314, !prof !3

313:                                              ; preds = %305
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

314:                                              ; preds = %305
  %315 = load i64, i64* %311, align 8
  call void @_ZN2v88internal20SaveAndSwitchContextC1EPNS0_7IsolateENS0_7ContextE(%"class.v8::internal::SaveAndSwitchContext"* nonnull %5, %"class.v8::internal::Isolate"* %8, i64 %315) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #11
  %316 = inttoptr i64 %53 to i64*
  %317 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 4
  %318 = ptrtoint i64* %317 to i64
  %319 = call i64* @_ZN2v88internal8Builtins17InvokeApiFunctionEPNS0_7IsolateEbNS0_6HandleINS0_10HeapObjectEEENS4_INS0_6ObjectEEEiPS8_S6_(%"class.v8::internal::Isolate"* %8, i1 zeroext false, i64* %291, i64* %316, i32 0, %"class.v8::internal::Handle.1220"* null, i64 %318) #11
  %320 = ptrtoint i64* %319 to i64
  %321 = getelementptr inbounds %"class.v8::internal::SaveAndSwitchContext", %"class.v8::internal::SaveAndSwitchContext"* %5, i64 0, i32 0
  call void @_ZN2v88internal11SaveContextD2Ev(%"class.v8::internal::SaveContext"* nonnull %321) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #11
  br label %352

322:                                              ; preds = %294
  %323 = load atomic i32, i32* %297 monotonic, align 4
  %324 = zext i32 %323 to i64
  %325 = or i64 %295, %324
  %326 = add i64 %325, 9
  %327 = inttoptr i64 %326 to i8*
  %328 = load atomic i8, i8* %327 monotonic, align 1
  %329 = and i8 %328, 2
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %349, label %331

331:                                              ; preds = %322
  %332 = and i64 %290, -262144
  %333 = or i64 %332, 16
  %334 = inttoptr i64 %333 to i64*
  %335 = load i64, i64* %334, align 16
  %336 = add i64 %335, -41416
  %337 = inttoptr i64 %336 to %"class.v8::internal::Isolate"*
  %338 = bitcast %"class.v8::internal::StackLimitCheck"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"class.v8::internal::StackLimitCheck", %"class.v8::internal::StackLimitCheck"* %2, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %337, %"class.v8::internal::Isolate"** %339, align 8
  %340 = call zeroext i1 @_ZNK2v88internal15StackLimitCheck15JsHasOverflowedEm(%"class.v8::internal::StackLimitCheck"* nonnull %2, i64 0) #11
  br i1 %340, label %341, label %343

341:                                              ; preds = %331
  %342 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %337) #11
  br label %347

343:                                              ; preds = %331
  %344 = inttoptr i64 %53 to i64*
  %345 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %337, i64* %291, i64* %344, i32 0, %"class.v8::internal::Handle.1220"* null) #11
  %346 = ptrtoint i64* %345 to i64
  br label %347

347:                                              ; preds = %341, %343
  %348 = phi i64 [ 0, %341 ], [ %346, %343 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %338) #11
  br label %352

349:                                              ; preds = %322, %289
  %350 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 0, i32 7, i32 0, i64 4
  %351 = ptrtoint i64* %350 to i64
  br label %352

352:                                              ; preds = %259, %349, %347, %314, %131, %142, %246, %166
  %353 = phi i64 [ %247, %246 ], [ %144, %142 ], [ 0, %131 ], [ 0, %166 ], [ %261, %259 ], [ %320, %314 ], [ %348, %347 ], [ %351, %349 ]
  %354 = inttoptr i64 %353 to i64*
  ret i64* %354
}

declare i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal7JSProxy21CheckGetSetTrapResultEPNS0_7IsolateENS0_6HandleINS0_4NameEEENS4_INS0_10JSReceiverEEENS4_INS0_6ObjectEEENS1_10AccessKindE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast i64** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #11
  %11 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %1, %"class.v8::internal::PropertyDescriptor"* nonnull %6) #11
  %12 = trunc i16 %11 to i8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %102, label %14

14:                                               ; preds = %5
  %15 = icmp ugt i16 %11, 255
  br i1 %15, label %16, label %100

16:                                               ; preds = %14
  %17 = load i64*, i64** %9, align 8
  %18 = icmp eq i64* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = load i8, i8* %8, align 8
  br label %27

22:                                               ; preds = %16
  %23 = load i8, i8* %8, align 8
  %24 = and i8 %23, 32
  %25 = icmp eq i8 %24, 0
  %26 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  br i1 %25, label %32, label %27

27:                                               ; preds = %22, %19
  %28 = phi i8 [ %21, %19 ], [ %23, %22 ]
  %29 = phi i8* [ %20, %19 ], [ %26, %22 ]
  %30 = and i8 %28, 20
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %22, %27
  %33 = phi i8* [ %26, %22 ], [ %29, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %34 = icmp eq i32 %4, 0
  br label %53

35:                                               ; preds = %27
  %36 = load i64, i64* %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0
  %39 = load i64, i64* %17, align 8
  %40 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %38, i64 %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  %41 = icmp eq i32 %4, 0
  br i1 %40, label %53, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %41, label %44, label %49

44:                                               ; preds = %42
  %45 = load i64*, i64** %9, align 8
  %46 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %43, i32 131, i64* %1, i64* %45, i64* %3) #11
  %47 = load i64, i64* %46, align 8
  %48 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %47, %"class.v8::internal::MessageLocation"* null) #11
  br label %102

49:                                               ; preds = %42
  %50 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %43, i32 151, i64* %1, i64* null, i64* null) #11
  %51 = load i64, i64* %50, align 8
  %52 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %51, %"class.v8::internal::MessageLocation"* null) #11
  br label %102

53:                                               ; preds = %35, %32
  %54 = phi i1 [ %34, %32 ], [ %41, %35 ]
  %55 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 2, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = icmp ne i64* %56, null
  %58 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %6, i64 0, i32 3, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = icmp ne i64* %59, null
  %61 = or i1 %57, %60
  br i1 %54, label %62, label %78

62:                                               ; preds = %53
  br i1 %61, label %63, label %100

63:                                               ; preds = %62
  %64 = load i8, i8* %8, align 8
  %65 = and i8 %64, 4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %100

67:                                               ; preds = %63
  %68 = load i64, i64* %56, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %68 to i32
  %72 = trunc i64 %70 to i32
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %74, label %100

74:                                               ; preds = %67
  %75 = load i64, i64* %3, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %76, %71
  br i1 %77, label %100, label %90

78:                                               ; preds = %53
  br i1 %61, label %79, label %100

79:                                               ; preds = %78
  %80 = load i8, i8* %8, align 8
  %81 = and i8 %80, 4
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %100

83:                                               ; preds = %79
  %84 = load i64, i64* %59, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %86 = load i64, i64* %85, align 8
  %87 = trunc i64 %84 to i32
  %88 = trunc i64 %86 to i32
  %89 = icmp eq i32 %87, %88
  br i1 %89, label %95, label %100

90:                                               ; preds = %74
  %91 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %92 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %91, i32 132, i64* %1, i64* %3, i64* null) #11
  %93 = load i64, i64* %92, align 8
  %94 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %93, %"class.v8::internal::MessageLocation"* null) #11
  br label %102

95:                                               ; preds = %83
  %96 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %97 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %96, i32 152, i64* %1, i64* null, i64* null) #11
  %98 = load i64, i64* %97, align 8
  %99 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %98, %"class.v8::internal::MessageLocation"* null) #11
  br label %102

100:                                              ; preds = %74, %63, %79, %78, %62, %67, %83, %14
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %102

102:                                              ; preds = %5, %95, %90, %49, %44, %100
  %103 = phi i64* [ null, %44 ], [ null, %49 ], [ null, %90 ], [ null, %95 ], [ %101, %100 ], [ null, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  ret i64* %103
}

declare i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %1 to i32
  %7 = trunc i64 %5 to i32
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %141, label %9

9:                                                ; preds = %2
  %10 = and i64 %5, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %9
  %13 = and i64 %5, -4294967296
  %14 = add i64 %5, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 66
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = and i64 %1, 1
  %25 = icmp eq i64 %24, 0
  br label %74

26:                                               ; preds = %9, %12
  %27 = and i64 %1, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %26
  %30 = and i64 %1, -4294967296
  %31 = add i64 %1, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 66
  br i1 %39, label %40, label %69

40:                                               ; preds = %26, %29
  br i1 %11, label %41, label %44

41:                                               ; preds = %40
  %42 = ashr i32 %7, 1
  %43 = sitofp i32 %42 to double
  br label %48

44:                                               ; preds = %40
  %45 = add i64 %5, 3
  %46 = inttoptr i64 %45 to double*
  %47 = load double, double* %46, align 1
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi double [ %43, %41 ], [ %47, %44 ]
  br i1 %28, label %50, label %53

50:                                               ; preds = %48
  %51 = ashr i32 %6, 1
  %52 = sitofp i32 %51 to double
  br label %57

53:                                               ; preds = %48
  %54 = add i64 %1, 3
  %55 = inttoptr i64 %54 to double*
  %56 = load double, double* %55, align 1
  br label %57

57:                                               ; preds = %50, %53
  %58 = phi double [ %52, %50 ], [ %56, %53 ]
  %59 = fcmp une double %49, %58
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = fcmp uno double %49, 0.000000e+00
  br i1 %61, label %62, label %141

62:                                               ; preds = %60
  %63 = fcmp uno double %58, 0.000000e+00
  br label %141

64:                                               ; preds = %57
  %65 = bitcast double %49 to i64
  %66 = bitcast double %58 to i64
  %67 = xor i64 %66, %65
  %68 = icmp sgt i64 %67, -1
  br label %141

69:                                               ; preds = %29
  br i1 %11, label %141, label %70

70:                                               ; preds = %69
  %71 = and i64 %5, -4294967296
  %72 = add i64 %5, -1
  %73 = inttoptr i64 %72 to i32*
  br label %74

74:                                               ; preds = %70, %23
  %75 = phi i1 [ false, %70 ], [ %25, %23 ]
  %76 = phi i32* [ %73, %70 ], [ %15, %23 ]
  %77 = phi i64 [ %71, %70 ], [ %13, %23 ]
  %78 = load atomic i32, i32* %76 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %77, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ugt i16 %83, 63
  %85 = or i1 %75, %84
  br i1 %85, label %119, label %86

86:                                               ; preds = %74
  %87 = and i64 %1, -4294967296
  %88 = add i64 %1, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %87, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp ult i16 %95, 64
  br i1 %96, label %97, label %119

97:                                               ; preds = %86
  %98 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #11
  %99 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %99, align 8
  %100 = load atomic i32, i32* %76 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %77, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = icmp ult i16 %105, 32
  br i1 %106, label %107, label %115

107:                                              ; preds = %97
  %108 = load atomic i32, i32* %89 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %87, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i16*
  %113 = load atomic i16, i16* %112 monotonic, align 2
  %114 = icmp ult i16 %113, 32
  br i1 %114, label %117, label %115

115:                                              ; preds = %107, %97
  %116 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %3, i64 %1) #11
  br label %117

117:                                              ; preds = %107, %115
  %118 = phi i1 [ %116, %115 ], [ false, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #11
  br label %141

119:                                              ; preds = %74, %86
  %120 = load atomic i32, i32* %76 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %77, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = icmp ne i16 %125, 65
  %127 = or i1 %75, %126
  br i1 %127, label %141, label %128

128:                                              ; preds = %119
  %129 = and i64 %1, -4294967296
  %130 = add i64 %1, -1
  %131 = inttoptr i64 %130 to i32*
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %129, %133
  %135 = add i64 %134, 7
  %136 = inttoptr i64 %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = icmp eq i16 %137, 65
  br i1 %138, label %139, label %141

139:                                              ; preds = %128
  %140 = tail call zeroext i1 @_ZN2v88internal6BigInt13EqualToBigIntES1_S1_(i64 %5, i64 %1) #11
  br label %141

141:                                              ; preds = %119, %69, %64, %62, %60, %128, %2, %139, %117
  %142 = phi i1 [ %118, %117 ], [ %140, %139 ], [ true, %2 ], [ false, %128 ], [ false, %119 ], [ %68, %64 ], [ false, %60 ], [ %63, %62 ], [ false, %69 ]
  ret i1 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Object7ToInt32EPi(%"class.v8::internal::Object"* nocapture readonly, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = trunc i64 %4 to i32
  %9 = ashr i32 %8, 1
  store i32 %9, i32* %1, align 4
  br label %33

10:                                               ; preds = %2
  %11 = and i64 %4, -4294967296
  %12 = add i64 %4, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 66
  br i1 %20, label %21, label %33

21:                                               ; preds = %10
  %22 = add i64 %4, 3
  %23 = inttoptr i64 %22 to double*
  %24 = load double, double* %23, align 1
  %25 = fcmp oge double %24, 0xC1E0000000000000
  %26 = fcmp ole double %24, 0x41DFFFFFFFC00000
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %21
  %29 = fptosi double %24 to i32
  %30 = sitofp i32 %29 to double
  %31 = fcmp oeq double %24, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i32 %29, i32* %1, align 4
  br label %33

33:                                               ; preds = %10, %21, %28, %32, %7
  %34 = phi i1 [ true, %7 ], [ true, %32 ], [ false, %28 ], [ false, %21 ], [ false, %10 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal20FunctionTemplateInfo29GetOrCreateSharedFunctionInfoEPNS0_7IsolateENS0_6HandleIS1_EENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 39
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = and i64 %9, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %3
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 179
  br i1 %22, label %23, label %42

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %25 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %24, align 8
  %26 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %25, i64 %10) #11
  br label %148

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %33 = load i64*, i64** %32, align 8
  %34 = icmp eq i64* %31, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %37

37:                                               ; preds = %35, %29
  %38 = phi i64* [ %36, %35 ], [ %31, %29 ]
  %39 = ptrtoint i64* %38 to i64
  %40 = add i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  store i64* %41, i64** %30, align 8
  store i64 %10, i64* %38, align 8
  br label %148

42:                                               ; preds = %3, %13
  %43 = icmp eq i64* %2, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %42
  %45 = load i64, i64* %2, align 8
  %46 = and i64 %45, -4294967296
  %47 = add i64 %45, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %46, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = icmp ult i16 %54, 64
  br i1 %55, label %92, label %56

56:                                               ; preds = %42, %44
  %57 = add i64 %4, 27
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %5, %60
  %62 = add i64 %61, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %5, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp ult i16 %69, 64
  br i1 %70, label %71, label %90

71:                                               ; preds = %56
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %73 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %72, align 8
  %74 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %73, i64 %61) #11
  br label %92

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %81 = load i64*, i64** %80, align 8
  %82 = icmp eq i64* %79, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %85

85:                                               ; preds = %83, %77
  %86 = phi i64* [ %84, %83 ], [ %79, %77 ]
  %87 = ptrtoint i64* %86 to i64
  %88 = add i64 %87, 8
  %89 = inttoptr i64 %88 to i64*
  store i64* %89, i64** %78, align 8
  store i64 %61, i64* %86, align 8
  br label %92

90:                                               ; preds = %56
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %92

92:                                               ; preds = %85, %75, %44, %90
  %93 = phi i64* [ %91, %90 ], [ %2, %44 ], [ %76, %75 ], [ %86, %85 ]
  %94 = load i64, i64* %1, align 8
  %95 = add i64 %94, 43
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 16
  %99 = icmp eq i32 %98, 0
  %100 = select i1 %99, i8 0, i8 22
  %101 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %102 = tail call i64* @_ZN2v88internal7Factory35NewSharedFunctionInfoForApiFunctionENS0_11MaybeHandleINS0_6StringEEENS0_6HandleINS0_20FunctionTemplateInfoEEENS0_12FunctionKindE(%"class.v8::internal::Factory"* %101, i64* %93, i64* %1, i8 zeroext %100) #11
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %1, align 8
  %105 = add i64 %104, 47
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = lshr i32 %107, 1
  %109 = trunc i32 %108 to i16
  %110 = add i64 %103, 19
  %111 = inttoptr i64 %110 to i16*
  store i16 %109, i16* %111, align 2
  %112 = load i64, i64* %102, align 8
  %113 = add i64 %112, 21
  %114 = inttoptr i64 %113 to i16*
  store i16 -1, i16* %114, align 2
  %115 = load i64, i64* %1, align 8
  %116 = load i64, i64* %102, align 8
  %117 = add i64 %115, 39
  %118 = inttoptr i64 %117 to i32*
  %119 = trunc i64 %116 to i32
  store atomic volatile i32 %119, i32* %118 monotonic, align 4
  %120 = and i64 %116, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %133, label %122

122:                                              ; preds = %92
  %123 = and i64 %115, -262144
  %124 = or i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 262144
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %122
  %130 = or i64 %123, 16
  %131 = inttoptr i64 %130 to %"class.v8::internal::Heap"**
  %132 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %131, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %132, i64 %115, i64 %117, i64 %116) #11
  br label %133

133:                                              ; preds = %129, %122, %92
  %134 = and i64 %116, -262144
  %135 = or i64 %134, 8
  %136 = inttoptr i64 %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, 24
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %133
  %141 = and i64 %115, -262144
  %142 = or i64 %141, 8
  %143 = inttoptr i64 %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, 24
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %140
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %115, i64 %117, i64 %116) #11
  br label %148

148:                                              ; preds = %147, %140, %133, %37, %27
  %149 = phi i64* [ %28, %27 ], [ %38, %37 ], [ %102, %133 ], [ %102, %140 ], [ %102, %147 ]
  ret i64* %149
}

declare i64* @_ZN2v88internal7Factory35NewSharedFunctionInfoForApiFunctionENS0_11MaybeHandleINS0_6StringEEENS0_6HandleINS0_20FunctionTemplateInfoEEENS0_12FunctionKindE(%"class.v8::internal::Factory"*, i64*, i64*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %4 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  %5 = tail call %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() #11
  %6 = icmp eq %"class.v8::internal::LocalHeap"* %5, null
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, -262144
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 16
  %14 = add i64 %13, -41416
  %15 = inttoptr i64 %14 to %"class.v8::internal::Isolate"*
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 14, i32 0
  %17 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %17, i64 0, i32 757
  br label %26

19:                                               ; preds = %2
  %20 = tail call %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() #11
  %21 = ptrtoint %"class.v8::internal::LocalHeap"* %20 to i64
  %22 = add i64 %21, -8
  %23 = inttoptr i64 %22 to %"class.v8::internal::LocalIsolate"*
  %24 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %23, i64 0, i32 6
  %25 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %24, align 8
  br label %26

26:                                               ; preds = %19, %7
  %27 = phi %"class.v8::internal::RuntimeCallStats"* [ %18, %7 ], [ %25, %19 ]
  %28 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 40, i1 false) #11
  %29 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1619", %"struct.std::__1::atomic.1619"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  %31 = icmp eq %"class.v8::internal::RuntimeCallStats"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %35, label %33, !prof !5

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  store %"class.v8::internal::RuntimeCallStats"* %27, %"class.v8::internal::RuntimeCallStats"** %34, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* nonnull %27, %"class.v8::internal::RuntimeCallTimer"* %28, i32 176) #11
  br label %35

35:                                               ; preds = %26, %33
  %36 = add i64 %1, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp ugt i16 %38, 188
  br i1 %39, label %40, label %214

40:                                               ; preds = %35
  %41 = and i64 %1, -4294967296
  %42 = add i64 %1, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %119, label %49

49:                                               ; preds = %40
  %50 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %51 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %50, null
  %52 = and i64 %1, -262144
  %53 = or i64 %52, 16
  %54 = inttoptr i64 %53 to i64*
  br i1 %51, label %84, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %50, i64 0, i32 0, i32 1
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %50, i64 0, i32 1, i64 10
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  br label %105

63:                                               ; preds = %55
  %64 = load i64, i64* %54, align 16
  %65 = add i64 %64, -41416
  %66 = inttoptr i64 %65 to %"class.v8::internal::Isolate"*
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 0, i32 7, i32 0, i64 10
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %76, %63
  %71 = phi i64 [ %81, %76 ], [ %46, %63 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %69
  br i1 %75, label %76, label %119

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %41, %80
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %119, label %70

84:                                               ; preds = %49
  %85 = load i64, i64* %54, align 16
  %86 = add i64 %85, -41416
  %87 = inttoptr i64 %86 to %"class.v8::internal::Isolate"*
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 0, i32 7, i32 0, i64 10
  %89 = load i64, i64* %88, align 8
  %90 = trunc i64 %89 to i32
  br label %91

91:                                               ; preds = %97, %84
  %92 = phi i64 [ %102, %97 ], [ %46, %84 ]
  %93 = add i64 %92, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = icmp eq i32 %95, %90
  br i1 %96, label %97, label %119

97:                                               ; preds = %91
  %98 = add i64 %92, 19
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %41, %101
  %103 = and i64 %101, 1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %119, label %91

105:                                              ; preds = %111, %59
  %106 = phi i64 [ %116, %111 ], [ %46, %59 ]
  %107 = add i64 %106, -1
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = icmp eq i32 %109, %62
  br i1 %110, label %111, label %119

111:                                              ; preds = %105
  %112 = add i64 %106, 19
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %41, %115
  %117 = and i64 %115, 1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %105

119:                                              ; preds = %105, %111, %70, %76, %91, %97, %40
  %120 = phi i64 [ %46, %40 ], [ %102, %97 ], [ %92, %91 ], [ %71, %70 ], [ %81, %76 ], [ %106, %105 ], [ %116, %111 ]
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %214, label %123

123:                                              ; preds = %119
  %124 = and i64 %120, -4294967296
  %125 = add i64 %120, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %124, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = add i16 %132, -1059
  %134 = icmp ult i16 %133, 15
  br i1 %134, label %143, label %135

135:                                              ; preds = %123
  %136 = load atomic i32, i32* %126 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %124, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = icmp eq i16 %141, 83
  br i1 %142, label %156, label %214

143:                                              ; preds = %123
  %144 = add i64 %120, 11
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %124, %147
  %149 = add i64 %148, 3
  %150 = inttoptr i64 %149 to i32*
  %151 = load atomic i32, i32* %150 acquire, align 4
  %152 = zext i32 %151 to i64
  %153 = or i64 %124, %152
  %154 = and i64 %152, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %214, label %156

156:                                              ; preds = %135, %143
  %157 = phi i64 [ %153, %143 ], [ %120, %135 ]
  %158 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %159

159:                                              ; preds = %156, %210
  %160 = phi i64 [ %211, %210 ], [ %157, %156 ]
  %161 = and i64 %160, -4294967296
  %162 = add i64 %160, -1
  %163 = inttoptr i64 %162 to i32*
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %161, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load atomic i16, i16* %168 monotonic, align 2
  %170 = icmp eq i16 %169, 83
  br i1 %170, label %171, label %214

171:                                              ; preds = %159
  %172 = load i64, i64* %158, align 8
  %173 = trunc i64 %160 to i32
  %174 = trunc i64 %172 to i32
  %175 = icmp eq i32 %173, %174
  br i1 %175, label %214, label %176

176:                                              ; preds = %171
  %177 = add i64 %160, 35
  %178 = inttoptr i64 %177 to i32*
  %179 = load atomic i32, i32* %178 acquire, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %161, %180
  %182 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %183 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %182, null
  br i1 %183, label %190, label %184

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %182, i64 0, i32 0, i32 1
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %182, i64 0, i32 1, i64 0
  br label %198

190:                                              ; preds = %184, %176
  %191 = and i64 %160, -262144
  %192 = or i64 %191, 16
  %193 = inttoptr i64 %192 to i64*
  %194 = load i64, i64* %193, align 16
  %195 = add i64 %194, -41416
  %196 = inttoptr i64 %195 to %"class.v8::internal::Isolate"*
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %196, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %198

198:                                              ; preds = %190, %188
  %199 = phi i64* [ %197, %190 ], [ %189, %188 ]
  %200 = getelementptr inbounds i64, i64* %199, i64 4
  %201 = load i64, i64* %200, align 8
  %202 = trunc i64 %201 to i32
  %203 = icmp eq i32 %179, %202
  br i1 %203, label %210, label %204

204:                                              ; preds = %198
  %205 = add i64 %181, 11
  %206 = inttoptr i64 %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i64
  %209 = or i64 %161, %208
  br label %210

210:                                              ; preds = %198, %204
  %211 = phi i64 [ %209, %204 ], [ %201, %198 ]
  %212 = and i64 %211, 1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %159

214:                                              ; preds = %159, %171, %210, %143, %119, %135, %35
  %215 = phi i1 [ false, %35 ], [ false, %135 ], [ false, %119 ], [ false, %143 ], [ false, %159 ], [ true, %171 ], [ false, %210 ]
  %216 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %3, i64 0, i32 0
  %217 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %216, align 8
  %218 = icmp eq %"class.v8::internal::RuntimeCallStats"* %217, null
  br i1 %218, label %220, label %219, !prof !5

219:                                              ; preds = %214
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %217, %"class.v8::internal::RuntimeCallTimer"* %28) #11
  br label %220

220:                                              ; preds = %214, %219
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  ret i1 %215
}

declare %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo26IsLeafTemplateForApiObjectENS0_6ObjectE(%"class.v8::internal::FunctionTemplateInfo"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = and i64 %1, 1
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %140, label %5

5:                                                ; preds = %2
  %6 = and i64 %1, -4294967296
  %7 = add i64 %1, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 1056
  br i1 %15, label %16, label %140

16:                                               ; preds = %5
  %17 = load atomic i32, i32* %8 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 19
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %6, %23
  %25 = and i64 %23, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %97, label %27

27:                                               ; preds = %16
  %28 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %29 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %28, null
  %30 = and i64 %19, -262144
  %31 = or i64 %30, 16
  %32 = inttoptr i64 %31 to i64*
  br i1 %29, label %62, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %28, i64 0, i32 0, i32 1
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %28, i64 0, i32 1, i64 10
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  br label %83

41:                                               ; preds = %33
  %42 = load i64, i64* %32, align 16
  %43 = add i64 %42, -41416
  %44 = inttoptr i64 %43 to %"class.v8::internal::Isolate"*
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 0, i32 7, i32 0, i64 10
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  br label %48

48:                                               ; preds = %54, %41
  %49 = phi i64 [ %59, %54 ], [ %24, %41 ]
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = icmp eq i32 %52, %47
  br i1 %53, label %54, label %97

54:                                               ; preds = %48
  %55 = add i64 %49, 19
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %6, %58
  %60 = and i64 %58, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %97, label %48

62:                                               ; preds = %27
  %63 = load i64, i64* %32, align 16
  %64 = add i64 %63, -41416
  %65 = inttoptr i64 %64 to %"class.v8::internal::Isolate"*
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 0, i32 7, i32 0, i64 10
  %67 = load i64, i64* %66, align 8
  %68 = trunc i64 %67 to i32
  br label %69

69:                                               ; preds = %75, %62
  %70 = phi i64 [ %80, %75 ], [ %24, %62 ]
  %71 = add i64 %70, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = icmp eq i32 %73, %68
  br i1 %74, label %75, label %97

75:                                               ; preds = %69
  %76 = add i64 %70, 19
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %6, %79
  %81 = and i64 %79, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %97, label %69

83:                                               ; preds = %89, %37
  %84 = phi i64 [ %94, %89 ], [ %24, %37 ]
  %85 = add i64 %84, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = icmp eq i32 %87, %40
  br i1 %88, label %89, label %97

89:                                               ; preds = %83
  %90 = add i64 %84, 19
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %6, %93
  %95 = and i64 %93, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %83

97:                                               ; preds = %83, %89, %48, %54, %69, %75, %16
  %98 = phi i64 [ %24, %16 ], [ %80, %75 ], [ %70, %69 ], [ %49, %48 ], [ %59, %54 ], [ %84, %83 ], [ %94, %89 ]
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %140, label %101

101:                                              ; preds = %97
  %102 = and i64 %98, -4294967296
  %103 = add i64 %98, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = add i16 %110, -1059
  %112 = icmp ult i16 %111, 15
  br i1 %112, label %113, label %126

113:                                              ; preds = %101
  %114 = add i64 %98, 11
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %102, %117
  %119 = add i64 %118, 3
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 acquire, align 4
  %122 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = trunc i64 %123 to i32
  %125 = icmp eq i32 %121, %124
  br label %140

126:                                              ; preds = %101
  %127 = load atomic i32, i32* %104 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %102, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp eq i16 %132, 83
  br i1 %133, label %134, label %140

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = trunc i64 %136 to i32
  %138 = trunc i64 %98 to i32
  %139 = icmp eq i32 %137, %138
  br label %140

140:                                              ; preds = %97, %2, %113, %134, %126, %5
  %141 = phi i1 [ false, %5 ], [ %125, %113 ], [ %139, %134 ], [ false, %126 ], [ false, %2 ], [ false, %97 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal20FunctionTemplateInfo32AllocateFunctionTemplateRareDataEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %4 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE27NewFunctionTemplateRareDataEv(%"class.v8::internal::FactoryBase"* %3) #11
  %5 = load i64, i64* %1, align 8
  %6 = load i64, i64* %4, align 8
  %7 = add i64 %5, 35
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %6 to i32
  store atomic volatile i32 %9, i32* %8 release, align 4
  %10 = and i64 %6, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %2
  %13 = and i64 %5, -262144
  %14 = or i64 %13, 8
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 262144
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = or i64 %13, 16
  %21 = inttoptr i64 %20 to %"class.v8::internal::Heap"**
  %22 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %21, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %22, i64 %5, i64 %7, i64 %6) #11
  br label %23

23:                                               ; preds = %19, %12, %2
  %24 = and i64 %6, -262144
  %25 = or i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 24
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %23
  %31 = and i64 %5, -262144
  %32 = or i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 24
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %30
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %5, i64 %7, i64 %6) #11
  br label %38

38:                                               ; preds = %23, %30, %37
  %39 = load i64, i64* %4, align 8
  ret i64 %39
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE27NewFunctionTemplateRareDataEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12TemplateList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %4 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3, i32 %1, i8 zeroext 0) #11
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  store atomic volatile i32 0, i32* %7 monotonic, align 4
  ret i64* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12TemplateList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = ashr i32 %7, 1
  %9 = add nsw i32 %8, 1
  %10 = tail call i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %9, i64* %2)
  %11 = load i64, i64* %10, align 8
  %12 = shl i32 %9, 1
  %13 = add i64 %11, 7
  %14 = inttoptr i64 %13 to i32*
  store atomic volatile i32 %12, i32* %14 monotonic, align 4
  ret i64* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10FixedArray10SetAndGrowEPNS0_7IsolateENS0_6HandleIS1_EEiNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = icmp sgt i32 %10, %2
  br i1 %11, label %12, label %45

12:                                               ; preds = %4
  %13 = load i64, i64* %3, align 8
  %14 = shl i32 %2, 2
  %15 = sext i32 %14 to i64
  %16 = add nsw i64 %15, 7
  %17 = add i64 %16, %6
  %18 = inttoptr i64 %17 to i32*
  %19 = trunc i64 %13 to i32
  store atomic volatile i32 %19, i32* %18 monotonic, align 4
  %20 = and i64 %13, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %144, label %22

22:                                               ; preds = %12
  %23 = and i64 %6, -262144
  %24 = or i64 %23, 8
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 262144
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = or i64 %23, 16
  %31 = inttoptr i64 %30 to %"class.v8::internal::Heap"**
  %32 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %31, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %32, i64 %6, i64 %17, i64 %13) #11
  br label %33

33:                                               ; preds = %29, %22
  %34 = and i64 %13, -262144
  %35 = or i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 24
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %144, label %40

40:                                               ; preds = %33
  %41 = load i64, i64* %25, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %144

44:                                               ; preds = %40
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %6, i64 %17, i64 %13) #11
  br label %144

45:                                               ; preds = %4, %45
  %46 = phi i32 [ %49, %45 ], [ %10, %4 ]
  %47 = lshr i32 %46, 1
  %48 = add i32 %46, 16
  %49 = add i32 %48, %47
  %50 = icmp sgt i32 %49, %2
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %53 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %52, i32 %49, i8 zeroext 0) #11
  %54 = bitcast %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = load i64, i64* %1, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArray>::ObjectRef"* %5, i64 0, i32 0
  %58 = load i64, i64* %53, align 8
  %59 = add i64 %55, 3
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = ashr i32 %61, 1
  call void @_ZNK2v88internal10FixedArray6CopyToEiS1_ii(%"class.v8::internal::FixedArray"* nonnull %57, i32 0, i64 %58, i32 0, i32 %62)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %63 = load i64, i64* %53, align 8
  %64 = load i64, i64* %1, align 8
  %65 = add i64 %64, 3
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = ashr i32 %67, 1
  %69 = add i64 %63, 3
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = ashr i32 %71, 1
  %73 = icmp slt i32 %68, %72
  br i1 %73, label %74, label %110

74:                                               ; preds = %51
  %75 = sext i32 %68 to i64
  %76 = and i64 %63, -262144
  %77 = or i64 %76, 16
  %78 = inttoptr i64 %77 to i64*
  %79 = add i64 %63, 7
  br label %80

80:                                               ; preds = %95, %74
  %81 = phi i64 [ %75, %74 ], [ %105, %95 ]
  %82 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %83 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %82, i64 0, i32 0, i32 1
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %82, i64 0, i32 1, i64 0
  br label %95

90:                                               ; preds = %84, %80
  %91 = load i64, i64* %78, align 16
  %92 = add i64 %91, -41416
  %93 = inttoptr i64 %92 to %"class.v8::internal::Isolate"*
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %93, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %95

95:                                               ; preds = %90, %88
  %96 = phi i64* [ %94, %90 ], [ %89, %88 ]
  %97 = getelementptr inbounds i64, i64* %96, i64 5
  %98 = load i64, i64* %97, align 8
  %99 = trunc i64 %81 to i32
  %100 = shl i32 %99, 2
  %101 = sext i32 %100 to i64
  %102 = add i64 %79, %101
  %103 = inttoptr i64 %102 to i32*
  %104 = trunc i64 %98 to i32
  store atomic volatile i32 %104, i32* %103 monotonic, align 4
  %105 = add nsw i64 %81, 1
  %106 = trunc i64 %105 to i32
  %107 = icmp eq i32 %72, %106
  br i1 %107, label %108, label %80

108:                                              ; preds = %95
  %109 = load i64, i64* %53, align 8
  br label %110

110:                                              ; preds = %108, %51
  %111 = phi i64 [ %109, %108 ], [ %63, %51 ]
  %112 = load i64, i64* %3, align 8
  %113 = shl i32 %2, 2
  %114 = sext i32 %113 to i64
  %115 = add nsw i64 %114, 7
  %116 = add i64 %115, %111
  %117 = inttoptr i64 %116 to i32*
  %118 = trunc i64 %112 to i32
  store atomic volatile i32 %118, i32* %117 monotonic, align 4
  %119 = and i64 %112, 1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %144, label %121

121:                                              ; preds = %110
  %122 = and i64 %111, -262144
  %123 = or i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 262144
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %121
  %129 = or i64 %122, 16
  %130 = inttoptr i64 %129 to %"class.v8::internal::Heap"**
  %131 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %130, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %131, i64 %111, i64 %116, i64 %112) #11
  br label %132

132:                                              ; preds = %128, %121
  %133 = and i64 %112, -262144
  %134 = or i64 %133, 8
  %135 = inttoptr i64 %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 24
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i64, i64* %124, align 8
  %141 = and i64 %140, 24
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %139
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %111, i64 %116, i64 %112) #11
  br label %144

144:                                              ; preds = %143, %139, %132, %110, %44, %40, %33, %12
  %145 = phi i64* [ %1, %12 ], [ %1, %33 ], [ %1, %40 ], [ %1, %44 ], [ %53, %110 ], [ %53, %132 ], [ %53, %139 ], [ %53, %143 ]
  ret i64* %145
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal7JSProxy12GetPrototypeENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::LookupIterator", align 8
  %3 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %4 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %5 = alloca [1 x %"class.v8::internal::Handle.1220"], align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %15 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %14, i64 2848
  %16 = bitcast %"class.v8::internal::Factory"* %15 to i64*
  %17 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 6, i32 1, i32 3
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %21, label %33

21:                                               ; preds = %1
  %22 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 6, i32 1, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %13) #11
  br label %352

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 6
  %30 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %29) #11
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %13) #11
  br label %352

33:                                               ; preds = %1, %28
  %34 = load i64, i64* %0, align 8
  %35 = and i64 %34, -4294967296
  %36 = add i64 %34, 11
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %35, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp ult i16 %48, 186
  br i1 %49, label %50, label %54

50:                                               ; preds = %33
  %51 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %14, i32 150, i64* %16, i64* null, i64* null) #11
  %52 = load i64, i64* %51, align 8
  %53 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %52, %"class.v8::internal::MessageLocation"* null) #11
  br label %352

54:                                               ; preds = %33
  %55 = add i64 %34, 7
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %35, %58
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %61 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %62 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  %64 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %61, i64 %59) #11
  br label %78

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %69 = load i64*, i64** %68, align 8
  %70 = icmp eq i64* %67, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %65
  %72 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #11
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i64* [ %72, %71 ], [ %67, %65 ]
  %75 = ptrtoint i64* %74 to i64
  %76 = add i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  store i64* %77, i64** %66, align 8
  store i64 %59, i64* %74, align 8
  br label %78

78:                                               ; preds = %63, %73
  %79 = phi i64* [ %64, %63 ], [ %74, %73 ]
  %80 = load i64, i64* %0, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, 11
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %88 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %78
  %90 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %87, i64 %86) #11
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i64* %90 to i64
  br label %106

93:                                               ; preds = %78
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %95, %97
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #11
  br label %101

101:                                              ; preds = %99, %93
  %102 = phi i64* [ %100, %99 ], [ %95, %93 ]
  %103 = ptrtoint i64* %102 to i64
  %104 = add i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  store i64* %105, i64** %94, align 8
  store i64 %86, i64* %102, align 8
  br label %106

106:                                              ; preds = %89, %101
  %107 = phi i64 [ %92, %89 ], [ %103, %101 ]
  %108 = phi i64 [ %91, %89 ], [ %86, %101 ]
  %109 = phi i64* [ %90, %89 ], [ %102, %101 ]
  %110 = and i64 %108, -262144
  %111 = or i64 %110, 16
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 16
  %114 = add i64 %113, -41416
  %115 = inttoptr i64 %114 to %"class.v8::internal::Isolate"*
  %116 = bitcast %"class.v8::internal::LookupIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 0
  %118 = icmp eq %"class.v8::internal::Factory"* %15, null
  br i1 %118, label %119, label %123

119:                                              ; preds = %106
  %120 = load i64, i64* null, align 536870912
  %121 = add i64 %120, -1
  %122 = inttoptr i64 %121 to i32*
  br label %144

123:                                              ; preds = %106
  %124 = load i64, i64* %16, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 0, i32 4
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %124, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i64 %126, 4294967295
  %131 = icmp eq i64 %130, 0
  tail call void @llvm.assume(i1 %131) #11
  %132 = zext i32 %129 to i64
  %133 = or i64 %126, %132
  %134 = add i64 %133, 7
  %135 = inttoptr i64 %134 to i16*
  %136 = load atomic i16, i16* %135 monotonic, align 2
  %137 = icmp eq i16 %136, 64
  br i1 %137, label %138, label %144

138:                                              ; preds = %123
  %139 = add i64 %124, 7
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138, %123, %119
  %145 = phi i32* [ %122, %119 ], [ %128, %138 ], [ %128, %123 ]
  %146 = phi i64 [ %120, %119 ], [ %124, %138 ], [ %124, %123 ]
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32* [ %145, %144 ], [ %128, %138 ]
  %149 = phi i64 [ %146, %144 ], [ %124, %138 ]
  %150 = phi i32 [ 3, %144 ], [ 0, %138 ]
  store i32 %150, i32* %117, align 8
  %151 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 1
  store i32 4, i32* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 2
  store i8 0, i8* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 3
  store i32 0, i32* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 4, i32 0
  store i32 0, i32* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %115, %"class.v8::internal::Isolate"** %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 6, i32 0, i32 0
  %157 = bitcast i64** %156 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %15, %"class.v8::internal::Factory"** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 8, i32 0, i32 0
  store i64* %109, i64** %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 10
  %162 = bitcast %"class.v8::internal::Handle.1220"* %161 to i64*
  store i64 %107, i64* %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 11
  %164 = bitcast i64* %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 -1, i64 16, i1 false) #11
  %165 = and i64 %149, -4294967296
  %166 = load atomic i32, i32* %148 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %165, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = and i16 %171, -32
  %173 = icmp eq i16 %172, 32
  br i1 %173, label %174, label %178

174:                                              ; preds = %147
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 5, i32 0, i32 0, i32 0
  %176 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %175, align 8
  %177 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %176, %"class.v8::internal::Isolate"* %115, i64* %16) #11
  br label %178

178:                                              ; preds = %174, %147
  %179 = phi i64* [ %177, %174 ], [ %16, %147 ]
  store i64* %179, i64** %156, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %2) #11
  %180 = load i32, i32* %151, align 4
  %181 = icmp eq i32 %180, 4
  br i1 %181, label %182, label %187

182:                                              ; preds = %178
  %183 = bitcast %"class.v8::internal::Isolate"** %155 to %"class.v8::internal::Factory"**
  %184 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %184, i64 160
  %186 = bitcast %"class.v8::internal::Factory"* %185 to i64*
  br label %189

187:                                              ; preds = %178
  %188 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %2, i1 zeroext false) #11
  br label %189

189:                                              ; preds = %182, %187
  %190 = phi i64* [ %188, %187 ], [ %186, %182 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %116) #11
  %191 = icmp eq i64* %190, null
  br i1 %191, label %352, label %192

192:                                              ; preds = %189
  %193 = ptrtoint i64* %190 to i64
  %194 = load i64, i64* %190, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 0, i32 7, i32 0, i64 6
  %196 = load i64, i64* %195, align 8
  %197 = trunc i64 %194 to i32
  %198 = trunc i64 %196 to i32
  %199 = icmp eq i32 %197, %198
  br i1 %199, label %205, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 0, i32 7, i32 0, i64 4
  %202 = load i64, i64* %201, align 8
  %203 = trunc i64 %202 to i32
  %204 = icmp eq i32 %197, %203
  br i1 %204, label %205, label %209

205:                                              ; preds = %200, %192
  %206 = inttoptr i64 %114 to %"class.v8::internal::Factory"*
  %207 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %206, i64 160
  %208 = ptrtoint %"class.v8::internal::Factory"* %207 to i64
  br label %229

209:                                              ; preds = %200
  %210 = and i64 %194, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %224, label %212

212:                                              ; preds = %209
  %213 = and i64 %194, -4294967296
  %214 = add i64 %194, -1
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = zext i32 %216 to i64
  %218 = or i64 %213, %217
  %219 = add i64 %218, 9
  %220 = inttoptr i64 %219 to i8*
  %221 = load atomic i8, i8* %220 monotonic, align 1
  %222 = and i8 %221, 2
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %224, label %229

224:                                              ; preds = %212, %209
  %225 = inttoptr i64 %114 to %"class.v8::internal::Factory"*
  %226 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %225, i32 121, i64* nonnull %190, i64* %16, i64* %109) #11
  %227 = load i64, i64* %226, align 8
  %228 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %115, i64 %227, %"class.v8::internal::MessageLocation"* null) #11
  br label %352

229:                                              ; preds = %205, %212
  %230 = phi i64 [ %208, %205 ], [ %193, %212 ]
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %352, label %232

232:                                              ; preds = %229
  %233 = inttoptr i64 %230 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 4
  %236 = load i64, i64* %235, align 8
  %237 = trunc i64 %234 to i32
  %238 = trunc i64 %236 to i32
  %239 = icmp eq i32 %237, %238
  br i1 %239, label %240, label %269

240:                                              ; preds = %232
  %241 = bitcast %"class.v8::internal::PrototypeIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %241) #11
  %242 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %243, align 8
  %244 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 2, i32 0, i32 0
  store i64* %79, i64** %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 3
  store i32 1, i32* %245, align 8
  %246 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 4
  store i8 0, i8* %246, align 4
  %247 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 6
  store i32 0, i32* %247, align 8
  %248 = icmp eq i64* %79, null
  br i1 %248, label %249, label %250, !prof !3

249:                                              ; preds = %240
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.421, i64 0, i64 0)) #16
  unreachable

250:                                              ; preds = %240, %261
  %251 = call zeroext i1 @_ZNK2v88internal17PrototypeIterator9HasAccessEv(%"class.v8::internal::PrototypeIterator"* nonnull %3) #11
  br i1 %251, label %259, label %252

252:                                              ; preds = %250
  %253 = bitcast %"class.v8::internal::PrototypeIterator"* %3 to %"class.v8::internal::Factory"**
  %254 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %253, align 8
  %255 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %254, i64 176
  %256 = ptrtoint %"class.v8::internal::Factory"* %255 to i64
  %257 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %3, i64 0, i32 2
  %258 = bitcast %"class.v8::internal::Handle.742"* %257 to i64*
  store i64 %256, i64* %258, align 8
  store i8 1, i8* %246, align 4
  br label %267

259:                                              ; preds = %250
  %260 = call zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"* nonnull %3) #11
  br i1 %260, label %261, label %267

261:                                              ; preds = %259
  %262 = load i8, i8* %246, align 4
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %250, label %264

264:                                              ; preds = %261
  %265 = bitcast i64** %244 to i64*
  %266 = load i64, i64* %265, align 8
  br label %267

267:                                              ; preds = %259, %252, %264
  %268 = phi i64 [ %266, %264 ], [ %256, %252 ], [ 0, %259 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %241) #11
  br label %352

269:                                              ; preds = %232
  %270 = bitcast [1 x %"class.v8::internal::Handle.1220"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #11
  %271 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 0
  %272 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64* %79, i64** %272, align 8
  %273 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %13, i64* %233, i64* %109, i32 1, %"class.v8::internal::Handle.1220"* nonnull %271) #11
  %274 = icmp eq i64* %273, null
  br i1 %274, label %350, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i64* %273 to i64
  %277 = load i64, i64* %273, align 8
  %278 = and i64 %277, 1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %291, label %280

280:                                              ; preds = %275
  %281 = and i64 %277, -4294967296
  %282 = add i64 %277, -1
  %283 = inttoptr i64 %282 to i32*
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = zext i32 %284 to i64
  %286 = or i64 %281, %285
  %287 = add i64 %286, 7
  %288 = inttoptr i64 %287 to i16*
  %289 = load atomic i16, i16* %288 monotonic, align 2
  %290 = icmp ugt i16 %289, 185
  br i1 %290, label %301, label %291

291:                                              ; preds = %275, %280
  %292 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 6
  %293 = load i64, i64* %292, align 8
  %294 = trunc i64 %277 to i32
  %295 = trunc i64 %293 to i32
  %296 = icmp eq i32 %294, %295
  br i1 %296, label %301, label %297

297:                                              ; preds = %291
  %298 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %14, i32 139, i64* null, i64* null, i64* null) #11
  %299 = load i64, i64* %298, align 8
  %300 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %299, %"class.v8::internal::MessageLocation"* null) #11
  br label %350

301:                                              ; preds = %291, %280
  %302 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %79) #11
  %303 = trunc i16 %302 to i8
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %350, label %305

305:                                              ; preds = %301
  %306 = icmp ugt i16 %302, 255
  br i1 %306, label %350, label %307

307:                                              ; preds = %305
  %308 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %308) #11
  %309 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %13, %"class.v8::internal::Isolate"** %309, align 8
  %310 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2, i32 0, i32 0
  store i64* %79, i64** %311, align 8
  %312 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 3
  store i32 1, i32* %312, align 8
  %313 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 4
  store i8 0, i8* %313, align 4
  %314 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 6
  store i32 0, i32* %314, align 8
  %315 = icmp eq i64* %79, null
  br i1 %315, label %316, label %317, !prof !3

316:                                              ; preds = %307
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.421, i64 0, i64 0)) #16
  unreachable

317:                                              ; preds = %307, %329
  %318 = call zeroext i1 @_ZNK2v88internal17PrototypeIterator9HasAccessEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #11
  br i1 %318, label %326, label %319

319:                                              ; preds = %317
  %320 = bitcast %"class.v8::internal::PrototypeIterator"* %4 to %"class.v8::internal::Factory"**
  %321 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %320, align 8
  %322 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %321, i64 176
  %323 = ptrtoint %"class.v8::internal::Factory"* %322 to i64
  %324 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %4, i64 0, i32 2
  %325 = bitcast %"class.v8::internal::Handle.742"* %324 to i64*
  store i64 %323, i64* %325, align 8
  store i8 1, i8* %313, align 4
  br label %335

326:                                              ; preds = %317
  %327 = call zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"* nonnull %4) #11
  br i1 %327, label %329, label %328

328:                                              ; preds = %326
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %308) #11
  br label %350

329:                                              ; preds = %326
  %330 = load i8, i8* %313, align 4
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %317, label %332

332:                                              ; preds = %329
  %333 = bitcast i64** %311 to i64*
  %334 = load i64, i64* %333, align 8
  br label %335

335:                                              ; preds = %332, %319
  %336 = phi i64 [ %334, %332 ], [ %323, %319 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %308) #11
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %350, label %338

338:                                              ; preds = %335
  %339 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %339) #11
  %340 = load i64, i64* %273, align 8
  %341 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %340, i64* %341, align 8
  %342 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  %343 = inttoptr i64 %336 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %342, i64 %344)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %339) #11
  br i1 %345, label %350, label %346

346:                                              ; preds = %338
  %347 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %14, i32 140, i64* null, i64* null, i64* null) #11
  %348 = load i64, i64* %347, align 8
  %349 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %348, %"class.v8::internal::MessageLocation"* null) #11
  br label %350

350:                                              ; preds = %301, %305, %338, %335, %328, %346, %269, %297
  %351 = phi i64 [ 0, %297 ], [ 0, %269 ], [ 0, %301 ], [ %276, %305 ], [ 0, %346 ], [ 0, %328 ], [ 0, %335 ], [ %276, %338 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #11
  br label %352

352:                                              ; preds = %189, %224, %267, %350, %229, %31, %26, %50
  %353 = phi i64 [ 0, %26 ], [ 0, %31 ], [ 0, %50 ], [ %268, %267 ], [ %351, %350 ], [ 0, %229 ], [ 0, %224 ], [ 0, %189 ]
  %354 = inttoptr i64 %353 to i64*
  ret i64* %354
}

declare i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64*) local_unnamed_addr #1

declare i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

declare void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"*, %"class.v8::internal::Isolate"*, i64, i64, i64, i64) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments18CallAccessorGetterENS0_6HandleINS0_12AccessorInfoEEENS2_INS0_4NameEEE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %5 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %6 = bitcast i64* %5 to %"class.v8::internal::Isolate"**
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #11
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1619", %"struct.std::__1::atomic.1619"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !5

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 124) #11
  br label %17

17:                                               ; preds = %3, %11
  %18 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 21
  %22 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %2, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.422, i64 0, i64 0), i64 %24, i64 %25) #11
  br label %26

26:                                               ; preds = %17, %20
  %27 = load i64, i64* %1, align 8
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %26
  %33 = and i64 %27, -4294967296
  %34 = zext i32 %30 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 3
  %37 = inttoptr i64 %36 to void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)**
  %38 = load void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)** %37, align 1
  br label %39

39:                                               ; preds = %26, %32
  %40 = phi void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* [ %38, %32 ], [ null, %26 ]
  %41 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 6
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 4
  %44 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %43, align 8
  %45 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %39
  %47 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %44, i64 %42) #11
  br label %61

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 31, i32 1
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %7) #11
  br label %56

56:                                               ; preds = %54, %48
  %57 = phi i64* [ %55, %54 ], [ %50, %48 ]
  %58 = ptrtoint i64* %57 to i64
  %59 = add i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  store i64* %60, i64** %49, align 8
  store i64 %42, i64* %57, align 8
  br label %61

61:                                               ; preds = %46, %56
  %62 = phi i64* [ %47, %46 ], [ %57, %56 ]
  %63 = call i64* @_ZN2v88internal25PropertyCallbackArguments28BasicCallNamedGetterCallbackEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEENS0_6HandleINS0_4NameEEENSC_INS0_6ObjectEEESG_(%"class.v8::internal::PropertyCallbackArguments"* %0, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %40, i64* %2, i64* %1, i64* %62)
  %64 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 0
  %65 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %64, align 8
  %66 = icmp eq %"class.v8::internal::RuntimeCallStats"* %65, null
  br i1 %66, label %69, label %67, !prof !5

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %4, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %65, %"class.v8::internal::RuntimeCallTimer"* %68) #11
  br label %69

69:                                               ; preds = %61, %67
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  ret i64* %63
}

declare i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal9Accessors31ReplaceAccessorWithDataPropertyEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_8JSObjectEEENS4_INS0_4NameEEES6_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i64*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal14LookupIterator23TryLookupCachedPropertyENS0_6HandleINS0_12AccessorPairEEE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"*) local_unnamed_addr #1

declare void @_ZN2v88internal20SaveAndSwitchContextC1EPNS0_7IsolateENS0_7ContextE(%"class.v8::internal::SaveAndSwitchContext"*, %"class.v8::internal::Isolate"*, i64) unnamed_addr #1

declare i64* @_ZN2v88internal8Builtins17InvokeApiFunctionEPNS0_7IsolateEbNS0_6HandleINS0_10HeapObjectEEENS4_INS0_6ObjectEEEiPS8_S6_(%"class.v8::internal::Isolate"*, i1 zeroext, i64*, i64*, i32, %"class.v8::internal::Handle.1220"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal11SaveContextD2Ev(%"class.v8::internal::SaveContext"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object28GetPropertyWithDefinedGetterENS0_6HandleIS1_EENS2_INS0_10JSReceiverEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::StackLimitCheck", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = bitcast %"class.v8::internal::StackLimitCheck"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::StackLimitCheck", %"class.v8::internal::StackLimitCheck"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %12, align 8
  %13 = call zeroext i1 @_ZNK2v88internal15StackLimitCheck15JsHasOverflowedEm(%"class.v8::internal::StackLimitCheck"* nonnull %3, i64 0) #11
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %10) #11
  br label %18

16:                                               ; preds = %2
  %17 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %10, i64* %1, i64* %0, i32 0, %"class.v8::internal::Handle.1220"* null) #11
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64* [ null, %14 ], [ %17, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  ret i64* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal12AccessorInfo8redirectEmNS0_17AccessorComponentE(i64, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::ApiFunction", align 8
  %4 = bitcast %"class.v8::ApiFunction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::ApiFunction", %"class.v8::ApiFunction"* %3, i64 0, i32 0
  store i64 %0, i64* %5, align 8
  %6 = call i64 @_ZN2v88internal17ExternalReference6CreateEPNS_11ApiFunctionENS1_4TypeE(%"class.v8::ApiFunction"* nonnull %3, i32 8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret i64 %6
}

declare i64 @_ZN2v88internal17ExternalReference6CreateEPNS_11ApiFunctionENS1_4TypeE(%"class.v8::ApiFunction"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal12AccessorInfo17redirected_getterEv(%"class.v8::internal::AccessorInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::ApiFunction", align 8
  %3 = getelementptr inbounds %"class.v8::internal::AccessorInfo", %"class.v8::internal::AccessorInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1
  %10 = and i64 %4, -4294967296
  %11 = zext i32 %7 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = bitcast %"class.v8::ApiFunction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.v8::ApiFunction", %"class.v8::ApiFunction"* %2, i64 0, i32 0
  store i64 %15, i64* %19, align 8
  %20 = call i64 @_ZN2v88internal17ExternalReference6CreateEPNS_11ApiFunctionENS1_4TypeE(%"class.v8::ApiFunction"* nonnull %2, i32 8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %21

21:                                               ; preds = %1, %9, %17
  %22 = phi i64 [ %20, %17 ], [ 0, %9 ], [ 0, %1 ]
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal15CallHandlerInfo19redirected_callbackEv(%"class.v8::internal::CallHandlerInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::ApiFunction", align 8
  %3 = getelementptr inbounds %"class.v8::internal::CallHandlerInfo", %"class.v8::internal::CallHandlerInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = and i64 %4, -4294967296
  %11 = zext i32 %7 to i64
  %12 = or i64 %10, %11
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 1
  br label %16

16:                                               ; preds = %1, %9
  %17 = phi i64 [ %15, %9 ], [ 0, %1 ]
  %18 = bitcast %"class.v8::ApiFunction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.v8::ApiFunction", %"class.v8::ApiFunction"* %2, i64 0, i32 0
  store i64 %17, i64* %19, align 8
  %20 = call i64 @_ZN2v88internal17ExternalReference6CreateEPNS_11ApiFunctionENS1_4TypeE(%"class.v8::ApiFunction"* nonnull %2, i32 6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12AccessorInfo23IsCompatibleReceiverMapENS0_6HandleIS1_EENS2_INS0_3MapEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::FunctionTemplateInfo", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %2
  %13 = or i64 %5, %9
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 83
  br i1 %22, label %23, label %33

23:                                               ; preds = %12
  %24 = load i64, i64* %1, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp ugt i16 %27, 188
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = bitcast %"class.v8::internal::FunctionTemplateInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %31, align 8
  %32 = call zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"* nonnull %3, i64 %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %33

33:                                               ; preds = %2, %23, %12, %29
  %34 = phi i1 [ %32, %29 ], [ true, %12 ], [ false, %23 ], [ true, %2 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object23SetPropertyWithAccessorEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::FunctionTemplateInfo", align 8
  %5 = alloca [1 x %"class.v8::internal::Handle.1220"], align 8
  %6 = alloca %"class.v8::internal::PropertyCallbackArguments", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::SaveAndSwitchContext", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %10 = alloca [1 x %"class.v8::internal::Handle.1220"], align 8
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = tail call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #11
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = ptrtoint i64* %15 to i64
  %17 = load i64, i64* %15, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %56, label %20

20:                                               ; preds = %3
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 189
  br i1 %30, label %31, label %56

31:                                               ; preds = %20
  %32 = add i64 %17, 15
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %21, %35
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %38 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %39 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %31
  %41 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %38, i64 %36) #11
  %42 = ptrtoint i64* %41 to i64
  br label %56

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %45, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #11
  br label %51

51:                                               ; preds = %49, %43
  %52 = phi i64* [ %50, %49 ], [ %45, %43 ]
  %53 = ptrtoint i64* %52 to i64
  %54 = add i64 %53, 8
  %55 = inttoptr i64 %54 to i64*
  store i64* %55, i64** %44, align 8
  store i64 %36, i64* %52, align 8
  br label %56

56:                                               ; preds = %51, %40, %3, %20
  %57 = phi i64 [ %16, %20 ], [ %16, %3 ], [ %42, %40 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = load i64, i64* %13, align 8
  %61 = and i64 %60, 1
  %62 = icmp eq i64 %61, 0
  %63 = and i64 %60, -4294967296
  br i1 %62, label %216, label %64

64:                                               ; preds = %56
  %65 = add i64 %60, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %63, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = icmp eq i16 %72, 86
  br i1 %73, label %74, label %216

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %76 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %75, i64 0, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = icmp eq i64* %77, null
  br i1 %78, label %79, label %89

79:                                               ; preds = %74
  %80 = bitcast %"class.v8::internal::Isolate"** %11 to %"class.v8::internal::Factory"**
  %81 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %83 = load i64, i64* %82, align 8
  %84 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %81, i64 %83, i1 zeroext true) #11
  %85 = ptrtoint i64* %84 to i64
  %86 = bitcast %"class.v8::internal::Handle.1234"* %75 to i64*
  store i64 %85, i64* %86, align 8
  %87 = load i64, i64* %13, align 8
  %88 = and i64 %87, -4294967296
  br label %89

89:                                               ; preds = %74, %79
  %90 = phi i64 [ %63, %74 ], [ %88, %79 ]
  %91 = phi i64 [ %60, %74 ], [ %87, %79 ]
  %92 = phi i64* [ %77, %74 ], [ %84, %79 ]
  %93 = inttoptr i64 %57 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %91, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %140, label %101

101:                                              ; preds = %89
  %102 = or i64 %90, %98
  %103 = add i64 %102, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %90, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp eq i16 %110, 83
  br i1 %111, label %112, label %140

112:                                              ; preds = %101
  %113 = and i64 %94, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %135, label %115

115:                                              ; preds = %112
  %116 = and i64 %94, -4294967296
  %117 = add i64 %94, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %116, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = icmp ugt i16 %124, 188
  br i1 %125, label %126, label %135

126:                                              ; preds = %115
  %127 = bitcast %"class.v8::internal::FunctionTemplateInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #11
  %128 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %102, i64* %128, align 8
  %129 = load atomic i32, i32* %118 monotonic, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %116, %130
  %132 = call zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"* nonnull %4, i64 %131) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #11
  br i1 %132, label %133, label %135

133:                                              ; preds = %126
  %134 = load i64, i64* %13, align 8
  br label %140

135:                                              ; preds = %112, %115, %126
  %136 = bitcast %"class.v8::internal::Isolate"* %12 to %"class.v8::internal::Factory"*
  %137 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %136, i32 64, i64* %92, i64* %93, i64* null) #11
  %138 = load i64, i64* %137, align 8
  %139 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %12, i64 %138, %"class.v8::internal::MessageLocation"* null) #11
  br label %324

140:                                              ; preds = %133, %89, %101
  %141 = phi i64 [ %134, %133 ], [ %91, %89 ], [ %91, %101 ]
  %142 = add i64 %141, 15
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %324, label %146

146:                                              ; preds = %140
  %147 = add i64 %141, 7
  %148 = inttoptr i64 %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 16
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %172, label %152

152:                                              ; preds = %146
  %153 = load i64, i64* %93, align 8
  %154 = and i64 %153, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %167, label %156

156:                                              ; preds = %152
  %157 = and i64 %153, -4294967296
  %158 = add i64 %153, -1
  %159 = inttoptr i64 %158 to i32*
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = zext i32 %160 to i64
  %162 = or i64 %157, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load atomic i16, i16* %164 monotonic, align 2
  %166 = icmp ugt i16 %165, 185
  br i1 %166, label %172, label %167

167:                                              ; preds = %152, %156
  %168 = tail call i64* @_ZN2v88internal6Object15ConvertReceiverEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %12, i64* %93)
  %169 = icmp eq i64* %168, null
  br i1 %169, label %324, label %170

170:                                              ; preds = %167
  %171 = load i64, i64* %13, align 8
  br label %172

172:                                              ; preds = %170, %146, %156
  %173 = phi i64 [ %141, %156 ], [ %141, %146 ], [ %171, %170 ]
  %174 = phi i64* [ %93, %156 ], [ %93, %146 ], [ %168, %170 ]
  %175 = bitcast %"class.v8::internal::PropertyCallbackArguments"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %175) #11
  %176 = and i64 %173, -4294967296
  %177 = add i64 %173, 27
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %176, %180
  %182 = load i64, i64* %174, align 8
  %183 = load i64, i64* %59, align 8
  call void @_ZN2v88internal25PropertyCallbackArgumentsC1EPNS0_7IsolateENS0_6ObjectES4_NS0_8JSObjectENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %6, %"class.v8::internal::Isolate"* %12, i64 %181, i64 %182, i64 %183, i64 %2) #11
  %184 = call i64* @_ZN2v88internal25PropertyCallbackArguments18CallAccessorSetterENS0_6HandleINS0_12AccessorInfoEEENS2_INS0_4NameEEENS2_INS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"* nonnull %6, i64* %13, i64* %92, i64* %1)
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 5
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 9, i32 14, i32 0, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = trunc i64 %188 to i32
  %190 = trunc i64 %186 to i32
  %191 = icmp eq i32 %189, %190
  br i1 %191, label %194, label %192

192:                                              ; preds = %172
  %193 = call i64 @_ZN2v88internal7Isolate25PromoteScheduledExceptionEv(%"class.v8::internal::Isolate"* %12) #11
  br label %205

194:                                              ; preds = %172
  %195 = icmp eq i64* %184, null
  br i1 %195, label %205, label %196

196:                                              ; preds = %194
  %197 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #11
  %198 = load i64, i64* %184, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0
  %201 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %200, %"class.v8::internal::Isolate"* %12)
  %202 = zext i1 %201 to i16
  %203 = shl nuw nsw i16 %202, 8
  %204 = or i16 %203, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #11
  br label %205

205:                                              ; preds = %194, %192, %196
  %206 = phi i16 [ %204, %196 ], [ 0, %192 ], [ 257, %194 ]
  %207 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 1, i64 4
  store i64 1994495044801650351, i64* %208, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %207, align 8
  %209 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %210 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %212 = bitcast %"class.v8::internal::Relocatable"** %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %210, i64 0, i32 91
  %215 = bitcast %"class.v8::internal::Relocatable"** %214 to i64*
  store i64 %213, i64* %215, align 8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %175) #11
  br label %324

216:                                              ; preds = %56, %64
  %217 = add i64 %60, 7
  %218 = inttoptr i64 %217 to i32*
  %219 = load i32, i32* %218, align 4
  %220 = zext i32 %219 to i64
  %221 = or i64 %63, %220
  %222 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %223 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %222, align 8
  %224 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %216
  %226 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %223, i64 %221) #11
  %227 = load i64, i64* %226, align 8
  br label %241

228:                                              ; preds = %216
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %230 = load i64*, i64** %229, align 8
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %232 = load i64*, i64** %231, align 8
  %233 = icmp eq i64* %230, %232
  br i1 %233, label %234, label %236

234:                                              ; preds = %228
  %235 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #11
  br label %236

236:                                              ; preds = %234, %228
  %237 = phi i64* [ %235, %234 ], [ %230, %228 ]
  %238 = ptrtoint i64* %237 to i64
  %239 = add i64 %238, 8
  %240 = inttoptr i64 %239 to i64*
  store i64* %240, i64** %229, align 8
  store i64 %221, i64* %237, align 8
  br label %241

241:                                              ; preds = %225, %236
  %242 = phi i64 [ %227, %225 ], [ %221, %236 ]
  %243 = phi i64* [ %226, %225 ], [ %237, %236 ]
  %244 = and i64 %242, 1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %301, label %246

246:                                              ; preds = %241
  %247 = and i64 %242, -4294967296
  %248 = add i64 %242, -1
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = zext i32 %250 to i64
  %252 = or i64 %247, %251
  %253 = add i64 %252, 7
  %254 = inttoptr i64 %253 to i16*
  %255 = load atomic i16, i16* %254 monotonic, align 2
  %256 = icmp eq i16 %255, 83
  br i1 %256, label %257, label %278

257:                                              ; preds = %246
  %258 = bitcast %"class.v8::internal::SaveAndSwitchContext"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %258) #11
  %259 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #11
  %260 = load i64, i64* %59, align 8
  %261 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0
  %263 = call i64* @_ZN2v88internal10JSReceiver18GetCreationContextEv(%"class.v8::internal::JSReceiver"* nonnull %262) #11
  %264 = icmp eq i64* %263, null
  br i1 %264, label %265, label %266, !prof !3

265:                                              ; preds = %257
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

266:                                              ; preds = %257
  %267 = load i64, i64* %263, align 8
  call void @_ZN2v88internal20SaveAndSwitchContextC1EPNS0_7IsolateENS0_7ContextE(%"class.v8::internal::SaveAndSwitchContext"* nonnull %8, %"class.v8::internal::Isolate"* %12, i64 %267) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #11
  %268 = bitcast [1 x %"class.v8::internal::Handle.1220"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %268) #11
  %269 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %10, i64 0, i64 0, i32 0, i32 0
  store i64* %1, i64** %269, align 8
  %270 = inttoptr i64 %57 to i64*
  %271 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %10, i64 0, i64 0
  %272 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 4
  %273 = ptrtoint i64* %272 to i64
  %274 = call i64* @_ZN2v88internal8Builtins17InvokeApiFunctionEPNS0_7IsolateEbNS0_6HandleINS0_10HeapObjectEEENS4_INS0_6ObjectEEEiPS8_S6_(%"class.v8::internal::Isolate"* %12, i1 zeroext false, i64* %243, i64* %270, i32 1, %"class.v8::internal::Handle.1220"* nonnull %271, i64 %273) #11
  %275 = icmp eq i64* %274, null
  %276 = select i1 %275, i16 0, i16 257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %268) #11
  %277 = getelementptr inbounds %"class.v8::internal::SaveAndSwitchContext", %"class.v8::internal::SaveAndSwitchContext"* %8, i64 0, i32 0
  call void @_ZN2v88internal11SaveContextD2Ev(%"class.v8::internal::SaveContext"* nonnull %277) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %258) #11
  br label %324

278:                                              ; preds = %246
  %279 = load atomic i32, i32* %249 monotonic, align 4
  %280 = zext i32 %279 to i64
  %281 = or i64 %247, %280
  %282 = add i64 %281, 9
  %283 = inttoptr i64 %282 to i8*
  %284 = load atomic i8, i8* %283 monotonic, align 1
  %285 = and i8 %284, 2
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %301, label %287

287:                                              ; preds = %278
  %288 = inttoptr i64 %57 to i64*
  %289 = and i64 %242, -262144
  %290 = or i64 %289, 16
  %291 = inttoptr i64 %290 to i64*
  %292 = load i64, i64* %291, align 16
  %293 = add i64 %292, -41416
  %294 = inttoptr i64 %293 to %"class.v8::internal::Isolate"*
  %295 = bitcast [1 x %"class.v8::internal::Handle.1220"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295) #11
  %296 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64* %1, i64** %296, align 8
  %297 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 0
  %298 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %294, i64* %243, i64* %288, i32 1, %"class.v8::internal::Handle.1220"* nonnull %297) #11
  %299 = icmp eq i64* %298, null
  %300 = select i1 %299, i16 0, i16 257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295) #11
  br label %324

301:                                              ; preds = %278, %241
  %302 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %12, i64 %2)
  %303 = icmp eq i32 %302, 1
  br i1 %303, label %324, label %304

304:                                              ; preds = %301
  %305 = bitcast %"class.v8::internal::Isolate"* %12 to %"class.v8::internal::Factory"*
  %306 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %307 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %306, i64 0, i32 0, i32 0
  %308 = load i64*, i64** %307, align 8
  %309 = icmp eq i64* %308, null
  br i1 %309, label %310, label %318

310:                                              ; preds = %304
  %311 = bitcast %"class.v8::internal::Isolate"** %11 to %"class.v8::internal::Factory"**
  %312 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %314 = load i64, i64* %313, align 8
  %315 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %312, i64 %314, i1 zeroext true) #11
  %316 = ptrtoint i64* %315 to i64
  %317 = bitcast %"class.v8::internal::Handle.1234"* %306 to i64*
  store i64 %316, i64* %317, align 8
  br label %318

318:                                              ; preds = %304, %310
  %319 = phi i64* [ %315, %310 ], [ %308, %304 ]
  %320 = load i64*, i64** %58, align 8
  %321 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %305, i32 92, i64* %319, i64* %320, i64* null) #11
  %322 = load i64, i64* %321, align 8
  %323 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %12, i64 %322, %"class.v8::internal::MessageLocation"* null) #11
  br label %324

324:                                              ; preds = %140, %266, %287, %318, %301, %135, %205, %167
  %325 = phi i16 [ 0, %135 ], [ %206, %205 ], [ 257, %140 ], [ 0, %167 ], [ %276, %266 ], [ %300, %287 ], [ 0, %318 ], [ 1, %301 ]
  ret i16 %325
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments18CallAccessorSetterENS0_6HandleINS0_12AccessorInfoEEENS2_INS0_4NameEEENS2_INS0_6ObjectEEE(%"class.v8::internal::PropertyCallbackArguments"*, i64*, i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %5 = alloca [2 x %"class.std::__1::unique_ptr.1625"], align 16
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %8 = alloca %"class.v8::PropertyCallbackInfo.1631", align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %10 = bitcast i64* %9 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 40, i1 false) #11
  %13 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1619", %"struct.std::__1::atomic.1619"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %21, label %15, !prof !5

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 14, i32 0
  %19 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %19, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %20, %"class.v8::internal::RuntimeCallStats"** %16, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %20, %"class.v8::internal::RuntimeCallTimer"* %17, i32 125) #11
  br label %21

21:                                               ; preds = %4, %15
  %22 = load i64, i64* %1, align 8
  %23 = add i64 %22, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = and i64 %22, -4294967296
  %29 = zext i32 %25 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 3
  %32 = inttoptr i64 %31 to void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1631"*)**
  %33 = load void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1631"*)*, void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1631"*)** %32, align 1
  br label %34

34:                                               ; preds = %21, %27
  %35 = phi void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1631"*)* [ %33, %27 ], [ null, %21 ]
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 108
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 32
  br i1 %38, label %39, label %65

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 68
  %41 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 6
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %45 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %46 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  %48 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %45, i64 %43) #11
  br label %62

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %53 = load i64*, i64** %52, align 8
  %54 = icmp eq i64* %51, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #11
  br label %57

57:                                               ; preds = %55, %49
  %58 = phi i64* [ %56, %55 ], [ %51, %49 ]
  %59 = ptrtoint i64* %58 to i64
  %60 = add i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  store i64* %61, i64** %50, align 8
  store i64 %43, i64* %58, align 8
  br label %62

62:                                               ; preds = %47, %57
  %63 = phi i64* [ %48, %47 ], [ %58, %57 ]
  %64 = call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %41, i64* %1, i64* %63, i32 2) #11
  br i1 %64, label %65, label %191

65:                                               ; preds = %62, %34
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 22
  %67 = load i32, i32* %66, align 8
  store i32 6, i32* %66, align 8
  %68 = bitcast %"class.v8::internal::ExternalCallbackScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  %69 = ptrtoint void (%"class.v8::Name"*, %"class.v8::Value"*, %"class.v8::PropertyCallbackInfo.1631"*)* %35 to i64
  %70 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 1
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 2
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 21
  %74 = bitcast %"class.v8::internal::ExternalCallbackScope"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.v8::internal::ExternalCallbackScope"** %72 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %7, %"class.v8::internal::ExternalCallbackScope"** %73, align 8
  %77 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %78 = inttoptr i64 %77 to i8*
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %65
  %81 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %82 = bitcast %"class.v8::TracingController"* %81 to i8* (%"class.v8::TracingController"*, i8*)***
  %83 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %82, align 8
  %84 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %83, i64 2
  %85 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %84, align 8
  %86 = call i8* %85(%"class.v8::TracingController"* %81, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.423, i64 0, i64 0)) #11
  %87 = ptrtoint i8* %86 to i64
  store atomic volatile i64 %87, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %88

88:                                               ; preds = %80, %65
  %89 = phi i8* [ %78, %65 ], [ %86, %80 ]
  %90 = load atomic i8, i8* %89 monotonic, align 1
  %91 = and i8 %90, 5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %120, label %93

93:                                               ; preds = %88
  %94 = bitcast [2 x %"class.std::__1::unique_ptr.1625"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #11
  %95 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %94, i8 0, i64 16, i1 false) #11
  %96 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %97 = bitcast %"class.v8::TracingController"* %96 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)***
  %98 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*** %97, align 8
  %99 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)** %98, i64 3
  %100 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)** %99, align 8
  %101 = call i64 %100(%"class.v8::TracingController"* %96, i8 signext 66, i8* %89, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.424, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1625"* nonnull %95, i32 0) #11
  %102 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %103 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %102, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %102, align 8
  %104 = icmp eq %"class.v8::ConvertableToTraceFormat"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %93
  %106 = bitcast %"class.v8::ConvertableToTraceFormat"* %103 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %107 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %107, i64 1
  %109 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %108, align 8
  call void %109(%"class.v8::ConvertableToTraceFormat"* nonnull %103) #11
  br label %110

110:                                              ; preds = %105, %93
  %111 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %111, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %111, align 16
  %113 = icmp eq %"class.v8::ConvertableToTraceFormat"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = bitcast %"class.v8::ConvertableToTraceFormat"* %112 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %116 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %116, i64 1
  %118 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %117, align 8
  call void %118(%"class.v8::ConvertableToTraceFormat"* nonnull %112) #11
  br label %119

119:                                              ; preds = %114, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #11
  br label %120

120:                                              ; preds = %88, %119
  %121 = bitcast %"class.v8::PropertyCallbackInfo.1631"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #11
  %122 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %123 = getelementptr inbounds %"class.v8::PropertyCallbackInfo.1631", %"class.v8::PropertyCallbackInfo.1631"* %8, i64 0, i32 0
  store i64* %122, i64** %123, align 8
  %124 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %132, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 21
  %128 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 1
  %130 = load i64, i64* %129, align 8
  %131 = load i64, i64* %2, align 8
  call void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"* %128, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.425, i64 0, i64 0), i64 %130, i64 %131) #11
  br label %132

132:                                              ; preds = %120, %126
  %133 = bitcast i64* %2 to %"class.v8::Name"*
  %134 = bitcast i64* %3 to %"class.v8::Value"*
  call void %35(%"class.v8::Name"* %133, %"class.v8::Value"* %134, %"class.v8::PropertyCallbackInfo.1631"* nonnull dereferenceable(8) %8) #11
  %135 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 5
  %138 = load i64, i64* %137, align 8
  %139 = trunc i64 %136 to i32
  %140 = trunc i64 %138 to i32
  %141 = icmp eq i32 %139, %140
  %142 = select i1 %141, i64* null, i64* %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #11
  %143 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %70, align 8
  %144 = load i64, i64* %76, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %143, i64 0, i32 0, i32 9, i32 21
  %146 = bitcast %"class.v8::internal::ExternalCallbackScope"** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %148 = inttoptr i64 %147 to i8*
  %149 = icmp eq i64 %147, 0
  br i1 %149, label %150, label %158

150:                                              ; preds = %132
  %151 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %152 = bitcast %"class.v8::TracingController"* %151 to i8* (%"class.v8::TracingController"*, i8*)***
  %153 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %152, align 8
  %154 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %153, i64 2
  %155 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %154, align 8
  %156 = call i8* %155(%"class.v8::TracingController"* %151, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.423, i64 0, i64 0)) #11
  %157 = ptrtoint i8* %156 to i64
  store atomic volatile i64 %157, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %158

158:                                              ; preds = %150, %132
  %159 = phi i8* [ %148, %132 ], [ %156, %150 ]
  %160 = load atomic i8, i8* %159 monotonic, align 1
  %161 = and i8 %160, 5
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %190, label %163

163:                                              ; preds = %158
  %164 = bitcast [2 x %"class.std::__1::unique_ptr.1625"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #11
  %165 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %164, i8 0, i64 16, i1 false) #11
  %166 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %167 = bitcast %"class.v8::TracingController"* %166 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)***
  %168 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*** %167, align 8
  %169 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)** %168, i64 3
  %170 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)** %169, align 8
  %171 = call i64 %170(%"class.v8::TracingController"* %166, i8 signext 69, i8* %159, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.424, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1625"* nonnull %165, i32 0) #11
  %172 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %173 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %172, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %172, align 8
  %174 = icmp eq %"class.v8::ConvertableToTraceFormat"* %173, null
  br i1 %174, label %180, label %175

175:                                              ; preds = %163
  %176 = bitcast %"class.v8::ConvertableToTraceFormat"* %173 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %177 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %177, i64 1
  %179 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %178, align 8
  call void %179(%"class.v8::ConvertableToTraceFormat"* nonnull %173) #11
  br label %180

180:                                              ; preds = %175, %163
  %181 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %182 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %181, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %181, align 16
  %183 = icmp eq %"class.v8::ConvertableToTraceFormat"* %182, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %180
  %185 = bitcast %"class.v8::ConvertableToTraceFormat"* %182 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %186 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %186, i64 1
  %188 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %187, align 8
  call void %188(%"class.v8::ConvertableToTraceFormat"* nonnull %182) #11
  br label %189

189:                                              ; preds = %184, %180
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #11
  br label %190

190:                                              ; preds = %158, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  store i32 %67, i32* %66, align 8
  br label %191

191:                                              ; preds = %62, %190
  %192 = phi i64* [ %142, %190 ], [ null, %62 ]
  %193 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %194 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %193, align 8
  %195 = icmp eq %"class.v8::internal::RuntimeCallStats"* %194, null
  br i1 %195, label %198, label %196, !prof !5

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %194, %"class.v8::internal::RuntimeCallTimer"* %197) #11
  br label %198

198:                                              ; preds = %191, %196
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #11
  ret i64* %192
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object28SetPropertyWithDefinedSetterENS0_6HandleIS1_EENS2_INS0_10JSReceiverEEES3_NS_5MaybeINS0_11ShouldThrowEEE(i64*, i64*, i64*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca [1 x %"class.v8::internal::Handle.1220"], align 8
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast [1 x %"class.v8::internal::Handle.1220"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 0
  %16 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %12, i64* %1, i64* %0, i32 1, %"class.v8::internal::Handle.1220"* nonnull %15) #11
  %17 = icmp eq i64* %16, null
  %18 = select i1 %17, i16 0, i16 257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i16 %18
}

declare zeroext i1 @_ZNK2v88internal15StackLimitCheck15JsHasOverflowedEm(%"class.v8::internal::StackLimitCheck"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal6Object24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Object"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Map", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 19
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %11, %20
  %22 = add i64 %21, 567
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %11, %25
  %27 = add i64 %26, 27
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 acquire, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %11, %30
  br label %42

32:                                               ; preds = %2
  %33 = bitcast %"class.v8::internal::Map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = and i64 %5, -4294967296
  %35 = add i64 %5, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %34, %38
  %40 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = call i64 @_ZNK2v88internal3Map24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Map"* nonnull %3, %"class.v8::internal::Isolate"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  br label %42

42:                                               ; preds = %32, %8
  %43 = phi i64 [ %31, %8 ], [ %41, %32 ]
  ret i64 %43
}

declare i64 @_ZNK2v88internal3Map24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.v8::internal::String", align 8
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = and i64 %0, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %24

7:                                                ; preds = %1
  %8 = trunc i64 %0 to i32
  %9 = ashr i32 %8, 1
  %10 = xor i32 %9, -1
  %11 = shl i32 %9, 15
  %12 = add i32 %11, %10
  %13 = lshr i32 %12, 12
  %14 = xor i32 %13, %12
  %15 = mul i32 %14, 5
  %16 = lshr i32 %15, 4
  %17 = xor i32 %16, %15
  %18 = mul i32 %17, 2057
  %19 = lshr i32 %18, 16
  %20 = and i32 %18, 1073741823
  %21 = xor i32 %20, %19
  %22 = shl nuw nsw i32 %21, 1
  %23 = zext i32 %22 to i64
  br label %180

24:                                               ; preds = %1
  %25 = and i64 %0, -4294967296
  %26 = add i64 %0, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %25, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 66
  br i1 %34, label %35, label %81

35:                                               ; preds = %24
  %36 = add i64 %0, 3
  %37 = inttoptr i64 %36 to double*
  %38 = load double, double* %37, align 1
  %39 = fcmp uno double %38, 0.000000e+00
  br i1 %39, label %180, label %40

40:                                               ; preds = %35
  %41 = fcmp oge double %38, 0xC1E0000000000000
  %42 = fcmp ole double %38, 0x41DFFFFFFFC00000
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %61

44:                                               ; preds = %40
  %45 = fptosi double %38 to i32
  %46 = sitofp i32 %45 to double
  %47 = fcmp oeq double %38, %46
  br i1 %47, label %48, label %61

48:                                               ; preds = %44
  %49 = xor i32 %45, -1
  %50 = shl i32 %45, 15
  %51 = add i32 %50, %49
  %52 = lshr i32 %51, 12
  %53 = xor i32 %52, %51
  %54 = mul i32 %53, 5
  %55 = lshr i32 %54, 4
  %56 = xor i32 %55, %54
  %57 = mul i32 %56, 2057
  %58 = lshr i32 %57, 16
  %59 = and i32 %57, 1073741823
  %60 = xor i32 %59, %58
  br label %76

61:                                               ; preds = %44, %40
  %62 = bitcast double %38 to i64
  %63 = xor i64 %62, -1
  %64 = shl i64 %62, 18
  %65 = add i64 %64, %63
  %66 = lshr i64 %65, 31
  %67 = xor i64 %66, %65
  %68 = mul i64 %67, 21
  %69 = lshr i64 %68, 11
  %70 = xor i64 %69, %68
  %71 = mul i64 %70, 65
  %72 = lshr i64 %71, 22
  %73 = xor i64 %72, %71
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 1073741823
  br label %76

76:                                               ; preds = %61, %48
  %77 = phi i32 [ %60, %48 ], [ %75, %61 ]
  %78 = shl nsw i32 %77, 1
  %79 = and i32 %78, 2147483646
  %80 = zext i32 %79 to i64
  br label %180

81:                                               ; preds = %24
  %82 = load atomic i32, i32* %27 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %25, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp ult i16 %87, 65
  br i1 %88, label %89, label %105

89:                                               ; preds = %81
  %90 = add i64 %0, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = lshr i32 %92, 2
  br label %101

97:                                               ; preds = %89
  %98 = bitcast %"class.v8::internal::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #11
  %99 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %99, align 8
  %100 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #11
  br label %101

101:                                              ; preds = %95, %97
  %102 = phi i32 [ %96, %95 ], [ %100, %97 ]
  %103 = sext i32 %102 to i64
  %104 = shl nsw i64 %103, 1
  br label %180

105:                                              ; preds = %81
  %106 = load atomic i32, i32* %27 monotonic, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %25, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 67
  br i1 %112, label %113, label %134

113:                                              ; preds = %105
  %114 = add i64 %0, 11
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %25, %117
  %119 = add i64 %118, 3
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %113
  %125 = lshr i32 %121, 2
  br label %130

126:                                              ; preds = %113
  %127 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #11
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %118, i64* %128, align 8
  %129 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #11
  br label %130

130:                                              ; preds = %124, %126
  %131 = phi i32 [ %125, %124 ], [ %129, %126 ]
  %132 = sext i32 %131 to i64
  %133 = shl nsw i64 %132, 1
  br label %180

134:                                              ; preds = %105
  %135 = load atomic i32, i32* %27 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %25, %136
  %138 = add i64 %137, 7
  %139 = inttoptr i64 %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = icmp eq i16 %140, 65
  br i1 %141, label %142, label %165

142:                                              ; preds = %134
  %143 = add i64 %0, 3
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2147483646
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %180, label %148

148:                                              ; preds = %142
  %149 = add i64 %0, 7
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 1
  %152 = xor i64 %151, -1
  %153 = shl i64 %151, 18
  %154 = add i64 %153, %152
  %155 = lshr i64 %154, 31
  %156 = xor i64 %155, %154
  %157 = mul i64 %156, 21
  %158 = lshr i64 %157, 11
  %159 = xor i64 %158, %157
  %160 = mul i64 %159, 65
  %161 = lshr i64 %160, 22
  %162 = xor i64 %161, %160
  %163 = shl i64 %162, 1
  %164 = and i64 %163, 2147483646
  br label %180

165:                                              ; preds = %134
  %166 = load atomic i32, i32* %27 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %25, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = icmp eq i16 %171, 179
  br i1 %172, label %173, label %180

173:                                              ; preds = %165
  %174 = bitcast %"class.v8::internal::SharedFunctionInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #11
  %175 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %175, align 8
  %176 = call i32 @_ZN2v88internal18SharedFunctionInfo4HashEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #11
  %177 = shl i32 %176, 1
  %178 = and i32 %177, 2147483646
  %179 = zext i32 %178 to i64
  br label %180

180:                                              ; preds = %148, %142, %165, %35, %76, %173, %130, %101, %7
  %181 = phi i64 [ %23, %7 ], [ %104, %101 ], [ %133, %130 ], [ %179, %173 ], [ %80, %76 ], [ 2147483646, %35 ], [ %0, %165 ], [ %164, %148 ], [ 0, %142 ]
  ret i64 %181
}

declare i64 @_ZN2v88internal10JSReceiver23GetOrCreateIdentityHashEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Object13SameValueZeroES1_(%"class.v8::internal::Object"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %1 to i32
  %7 = trunc i64 %5 to i32
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %136, label %9

9:                                                ; preds = %2
  %10 = and i64 %5, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %9
  %13 = and i64 %5, -4294967296
  %14 = add i64 %5, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 66
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = and i64 %1, 1
  %25 = icmp eq i64 %24, 0
  br label %69

26:                                               ; preds = %9, %12
  %27 = and i64 %1, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %26
  %30 = and i64 %1, -4294967296
  %31 = add i64 %1, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 66
  br i1 %39, label %40, label %64

40:                                               ; preds = %26, %29
  br i1 %11, label %41, label %44

41:                                               ; preds = %40
  %42 = ashr i32 %7, 1
  %43 = sitofp i32 %42 to double
  br label %48

44:                                               ; preds = %40
  %45 = add i64 %5, 3
  %46 = inttoptr i64 %45 to double*
  %47 = load double, double* %46, align 1
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi double [ %43, %41 ], [ %47, %44 ]
  br i1 %28, label %50, label %53

50:                                               ; preds = %48
  %51 = ashr i32 %6, 1
  %52 = sitofp i32 %51 to double
  br label %57

53:                                               ; preds = %48
  %54 = add i64 %1, 3
  %55 = inttoptr i64 %54 to double*
  %56 = load double, double* %55, align 1
  br label %57

57:                                               ; preds = %50, %53
  %58 = phi double [ %52, %50 ], [ %56, %53 ]
  %59 = fcmp oeq double %49, %58
  br i1 %59, label %136, label %60

60:                                               ; preds = %57
  %61 = fcmp uno double %49, 0.000000e+00
  br i1 %61, label %62, label %136

62:                                               ; preds = %60
  %63 = fcmp uno double %58, 0.000000e+00
  br label %136

64:                                               ; preds = %29
  br i1 %11, label %136, label %65

65:                                               ; preds = %64
  %66 = and i64 %5, -4294967296
  %67 = add i64 %5, -1
  %68 = inttoptr i64 %67 to i32*
  br label %69

69:                                               ; preds = %65, %23
  %70 = phi i1 [ false, %65 ], [ %25, %23 ]
  %71 = phi i32* [ %68, %65 ], [ %15, %23 ]
  %72 = phi i64 [ %66, %65 ], [ %13, %23 ]
  %73 = load atomic i32, i32* %71 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %72, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp ugt i16 %78, 63
  %80 = or i1 %70, %79
  br i1 %80, label %114, label %81

81:                                               ; preds = %69
  %82 = and i64 %1, -4294967296
  %83 = add i64 %1, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp ult i16 %90, 64
  br i1 %91, label %92, label %114

92:                                               ; preds = %81
  %93 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  %94 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %94, align 8
  %95 = load atomic i32, i32* %71 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %72, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = icmp ult i16 %100, 32
  br i1 %101, label %102, label %110

102:                                              ; preds = %92
  %103 = load atomic i32, i32* %84 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %82, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = icmp ult i16 %108, 32
  br i1 %109, label %112, label %110

110:                                              ; preds = %102, %92
  %111 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %3, i64 %1) #11
  br label %112

112:                                              ; preds = %102, %110
  %113 = phi i1 [ %111, %110 ], [ false, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  br label %136

114:                                              ; preds = %69, %81
  %115 = load atomic i32, i32* %71 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %72, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = icmp ne i16 %120, 65
  %122 = or i1 %70, %121
  br i1 %122, label %136, label %123

123:                                              ; preds = %114
  %124 = and i64 %1, -4294967296
  %125 = add i64 %1, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %124, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp eq i16 %132, 65
  br i1 %133, label %134, label %136

134:                                              ; preds = %123
  %135 = tail call zeroext i1 @_ZN2v88internal6BigInt13EqualToBigIntES1_S1_(i64 %5, i64 %1) #11
  br label %136

136:                                              ; preds = %114, %64, %123, %57, %62, %60, %2, %134, %112
  %137 = phi i1 [ %113, %112 ], [ %135, %134 ], [ true, %2 ], [ true, %57 ], [ false, %60 ], [ %63, %62 ], [ false, %123 ], [ false, %114 ], [ false, %64 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object23ArraySpeciesConstructorEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 19
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = add i64 %17, 179
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %7, %21
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %24 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %25 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %2
  %27 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %24, i64 %22) #11
  br label %41

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi i64* [ %35, %34 ], [ %30, %28 ]
  %38 = ptrtoint i64* %37 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  store i64* %40, i64** %29, align 8
  store i64 %22, i64* %37, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i64* [ %27, %26 ], [ %37, %36 ]
  %43 = load i8, i8* @_ZN2v88internal24FLAG_builtin_subclassingE, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = ptrtoint i64* %42 to i64
  br label %425

47:                                               ; preds = %41
  %48 = load i64, i64* %1, align 8
  %49 = and i64 %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %117, label %51

51:                                               ; preds = %47
  %52 = and i64 %48, -4294967296
  %53 = add i64 %48, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp eq i16 %60, 1085
  br i1 %61, label %62, label %117

62:                                               ; preds = %51
  %63 = load atomic i32, i32* %54 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %52, %64
  %66 = add i64 %65, 15
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = load i64, i64* %5, align 8
  %70 = and i64 %69, -4294967296
  %71 = add i64 %69, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %70, %74
  %76 = add i64 %75, 19
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %70, %79
  %81 = add i64 %80, 315
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %70, %84
  %86 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %87 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %62
  %89 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %86, i64 %85) #11
  %90 = load i64, i64* %89, align 8
  br label %104

91:                                               ; preds = %62
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %95 = load i64*, i64** %94, align 8
  %96 = icmp eq i64* %93, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  %98 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %99

99:                                               ; preds = %97, %91
  %100 = phi i64* [ %98, %97 ], [ %93, %91 ]
  %101 = ptrtoint i64* %100 to i64
  %102 = add i64 %101, 8
  %103 = inttoptr i64 %102 to i64*
  store i64* %103, i64** %92, align 8
  store i64 %85, i64* %100, align 8
  br label %104

104:                                              ; preds = %88, %99
  %105 = phi i64 [ %90, %88 ], [ %85, %99 ]
  %106 = trunc i64 %105 to i32
  %107 = icmp eq i32 %68, %106
  br i1 %107, label %108, label %117

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 607
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, 11
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 2
  br i1 %114, label %115, label %117

115:                                              ; preds = %108
  %116 = ptrtoint i64* %42 to i64
  br label %425

117:                                              ; preds = %47, %51, %104, %108
  %118 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %120 = ptrtoint i64* %119 to i64
  %121 = load i64, i64* %1, align 8
  %122 = and i64 %121, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %396, label %124

124:                                              ; preds = %117
  %125 = and i64 %121, -4294967296
  %126 = add i64 %121, -1
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = zext i32 %128 to i64
  %130 = or i64 %125, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = icmp eq i16 %133, 1085
  br i1 %134, label %149, label %135

135:                                              ; preds = %124
  %136 = load atomic i32, i32* %127 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %125, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = icmp eq i16 %141, 188
  br i1 %142, label %143, label %396

143:                                              ; preds = %135
  %144 = tail call i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64* %1) #11
  %145 = trunc i16 %144 to i8
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %425, label %147

147:                                              ; preds = %143
  %148 = icmp ult i16 %144, 256
  br i1 %148, label %396, label %149

149:                                              ; preds = %124, %147
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 297
  %151 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %151) #11
  %152 = ptrtoint i64* %1 to i64
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %154 = icmp eq i64* %150, null
  br i1 %154, label %155, label %159

155:                                              ; preds = %149
  %156 = load i64, i64* null, align 536870912
  %157 = add i64 %156, -1
  %158 = inttoptr i64 %157 to i32*
  br label %180

159:                                              ; preds = %149
  %160 = load i64, i64* %150, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %160, -1
  %164 = inttoptr i64 %163 to i32*
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i64 %162, 4294967295
  %167 = icmp eq i64 %166, 0
  tail call void @llvm.assume(i1 %167) #11
  %168 = zext i32 %165 to i64
  %169 = or i64 %162, %168
  %170 = add i64 %169, 7
  %171 = inttoptr i64 %170 to i16*
  %172 = load atomic i16, i16* %171 monotonic, align 2
  %173 = icmp eq i16 %172, 64
  br i1 %173, label %174, label %180

174:                                              ; preds = %159
  %175 = add i64 %160, 7
  %176 = inttoptr i64 %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %174, %159, %155
  %181 = phi i32* [ %158, %155 ], [ %164, %174 ], [ %164, %159 ]
  %182 = phi i64 [ %156, %155 ], [ %160, %174 ], [ %160, %159 ]
  br label %183

183:                                              ; preds = %180, %174
  %184 = phi i32* [ %181, %180 ], [ %164, %174 ]
  %185 = phi i64 [ %182, %180 ], [ %160, %174 ]
  %186 = phi i32 [ 3, %180 ], [ 0, %174 ]
  store i32 %186, i32* %153, align 8
  %187 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %188, align 8
  %189 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %191, align 8
  %192 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  store i64* %150, i64** %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %193, align 8
  %194 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %197 = bitcast %"class.v8::internal::Handle.1220"* %196 to i64*
  store i64 %152, i64* %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %199 = bitcast i64* %198 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 -1, i64 16, i1 false) #11
  %200 = and i64 %185, -4294967296
  %201 = load atomic i32, i32* %184 monotonic, align 4
  %202 = zext i32 %201 to i64
  %203 = or i64 %200, %202
  %204 = add i64 %203, 7
  %205 = inttoptr i64 %204 to i16*
  %206 = load atomic i16, i16* %205 monotonic, align 2
  %207 = and i16 %206, -32
  %208 = icmp eq i16 %207, 32
  br i1 %208, label %209, label %213

209:                                              ; preds = %183
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %211 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %210, align 8
  %212 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %211, %"class.v8::internal::Isolate"* %0, i64* %150) #11
  br label %213

213:                                              ; preds = %209, %183
  %214 = phi i64* [ %212, %209 ], [ %150, %183 ]
  store i64* %214, i64** %192, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #11
  %215 = load i32, i32* %187, align 4
  %216 = icmp eq i32 %215, 4
  br i1 %216, label %217, label %222

217:                                              ; preds = %213
  %218 = bitcast %"class.v8::internal::Isolate"** %191 to %"class.v8::internal::Factory"**
  %219 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %219, i64 160
  %221 = bitcast %"class.v8::internal::Factory"* %220 to i64*
  br label %224

222:                                              ; preds = %213
  %223 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #11
  br label %224

224:                                              ; preds = %217, %222
  %225 = phi i64* [ %223, %222 ], [ %221, %217 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %151) #11
  %226 = icmp eq i64* %225, null
  br i1 %226, label %425, label %227

227:                                              ; preds = %224
  %228 = ptrtoint i64* %225 to i64
  %229 = load i64, i64* %225, align 8
  %230 = and i64 %229, 1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %293, label %232

232:                                              ; preds = %227
  %233 = and i64 %229, -4294967296
  %234 = add i64 %229, -1
  %235 = inttoptr i64 %234 to i32*
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = zext i32 %236 to i64
  %238 = or i64 %233, %237
  %239 = add i64 %238, 9
  %240 = inttoptr i64 %239 to i8*
  %241 = load atomic i8, i8* %240 monotonic, align 1
  %242 = and i8 %241, 64
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %293, label %244

244:                                              ; preds = %232
  %245 = call i64* @_ZN2v88internal10JSReceiver16GetFunctionRealmENS0_6HandleIS1_EE(i64* nonnull %225) #11
  %246 = icmp eq i64* %245, null
  br i1 %246, label %425, label %247

247:                                              ; preds = %244
  %248 = load i64, i64* %245, align 8
  %249 = load i64, i64* %5, align 8
  %250 = and i64 %249, -4294967296
  %251 = add i64 %249, -1
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = zext i32 %253 to i64
  %255 = or i64 %250, %254
  %256 = add i64 %255, 19
  %257 = inttoptr i64 %256 to i32*
  %258 = load i32, i32* %257, align 4
  %259 = zext i32 %258 to i64
  %260 = or i64 %250, %259
  %261 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %262 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %261, null
  br i1 %262, label %266, label %263

263:                                              ; preds = %247
  %264 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %261, i64 %260) #11
  %265 = load i64, i64* %264, align 8
  br label %279

266:                                              ; preds = %247
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %268 = load i64*, i64** %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %270 = load i64*, i64** %269, align 8
  %271 = icmp eq i64* %268, %270
  br i1 %271, label %272, label %274

272:                                              ; preds = %266
  %273 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %274

274:                                              ; preds = %272, %266
  %275 = phi i64* [ %273, %272 ], [ %268, %266 ]
  %276 = ptrtoint i64* %275 to i64
  %277 = add i64 %276, 8
  %278 = inttoptr i64 %277 to i64*
  store i64* %278, i64** %267, align 8
  store i64 %260, i64* %275, align 8
  br label %279

279:                                              ; preds = %263, %274
  %280 = phi i64 [ %265, %263 ], [ %260, %274 ]
  %281 = trunc i64 %248 to i32
  %282 = trunc i64 %280 to i32
  %283 = icmp eq i32 %281, %282
  br i1 %283, label %293, label %284

284:                                              ; preds = %279
  %285 = load i64, i64* %225, align 8
  %286 = load i64, i64* %245, align 8
  %287 = add i64 %286, 179
  %288 = inttoptr i64 %287 to i32*
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = trunc i64 %285 to i32
  %291 = icmp eq i32 %289, %290
  %292 = select i1 %291, i64 %120, i64 %228
  br label %293

293:                                              ; preds = %279, %232, %284, %227
  %294 = phi i64 [ %228, %232 ], [ %228, %279 ], [ %228, %227 ], [ %292, %284 ]
  %295 = inttoptr i64 %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = and i64 %296, 1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %396, label %299

299:                                              ; preds = %293
  %300 = and i64 %296, -4294967296
  %301 = add i64 %296, -1
  %302 = inttoptr i64 %301 to i32*
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = zext i32 %303 to i64
  %305 = or i64 %300, %304
  %306 = add i64 %305, 7
  %307 = inttoptr i64 %306 to i16*
  %308 = load atomic i16, i16* %307 monotonic, align 2
  %309 = icmp ugt i16 %308, 185
  br i1 %309, label %310, label %396

310:                                              ; preds = %299
  %311 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 516
  %312 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %312) #11
  %313 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %314 = icmp eq i64* %311, null
  br i1 %314, label %315, label %319

315:                                              ; preds = %310
  %316 = load i64, i64* null, align 536870912
  %317 = add i64 %316, -1
  %318 = inttoptr i64 %317 to i32*
  br label %340

319:                                              ; preds = %310
  %320 = load i64, i64* %311, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %322 = load i64, i64* %321, align 8
  %323 = add i64 %320, -1
  %324 = inttoptr i64 %323 to i32*
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i64 %322, 4294967295
  %327 = icmp eq i64 %326, 0
  call void @llvm.assume(i1 %327) #11
  %328 = zext i32 %325 to i64
  %329 = or i64 %322, %328
  %330 = add i64 %329, 7
  %331 = inttoptr i64 %330 to i16*
  %332 = load atomic i16, i16* %331 monotonic, align 2
  %333 = icmp eq i16 %332, 64
  br i1 %333, label %334, label %340

334:                                              ; preds = %319
  %335 = add i64 %320, 7
  %336 = inttoptr i64 %335 to i32*
  %337 = load i32, i32* %336, align 4
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %343

340:                                              ; preds = %334, %319, %315
  %341 = phi i32* [ %318, %315 ], [ %324, %334 ], [ %324, %319 ]
  %342 = phi i64 [ %316, %315 ], [ %320, %334 ], [ %320, %319 ]
  br label %343

343:                                              ; preds = %340, %334
  %344 = phi i32* [ %341, %340 ], [ %324, %334 ]
  %345 = phi i64 [ %342, %340 ], [ %320, %334 ]
  %346 = phi i32 [ 3, %340 ], [ 0, %334 ]
  store i32 %346, i32* %313, align 8
  %347 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %347, align 4
  %348 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %348, align 8
  %349 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %349, align 4
  %350 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %350, align 8
  %351 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %351, align 8
  %352 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %311, i64** %352, align 8
  %353 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %353, align 8
  %354 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %295, i64** %354, align 8
  %355 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %355, align 8
  %356 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %357 = bitcast %"class.v8::internal::Handle.1220"* %356 to i64*
  store i64 %294, i64* %357, align 8
  %358 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %359 = bitcast i64* %358 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %359, i8 -1, i64 16, i1 false) #11
  %360 = and i64 %345, -4294967296
  %361 = load atomic i32, i32* %344 monotonic, align 4
  %362 = zext i32 %361 to i64
  %363 = or i64 %360, %362
  %364 = add i64 %363, 7
  %365 = inttoptr i64 %364 to i16*
  %366 = load atomic i16, i16* %365 monotonic, align 2
  %367 = and i16 %366, -32
  %368 = icmp eq i16 %367, 32
  br i1 %368, label %369, label %373

369:                                              ; preds = %343
  %370 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %371 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %370, align 8
  %372 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %371, %"class.v8::internal::Isolate"* %0, i64* %311) #11
  br label %373

373:                                              ; preds = %369, %343
  %374 = phi i64* [ %372, %369 ], [ %311, %343 ]
  store i64* %374, i64** %352, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #11
  %375 = load i32, i32* %347, align 4
  %376 = icmp eq i32 %375, 4
  br i1 %376, label %377, label %382

377:                                              ; preds = %373
  %378 = bitcast %"class.v8::internal::Isolate"** %351 to %"class.v8::internal::Factory"**
  %379 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %379, i64 160
  %381 = bitcast %"class.v8::internal::Factory"* %380 to i64*
  br label %384

382:                                              ; preds = %373
  %383 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #11
  br label %384

384:                                              ; preds = %377, %382
  %385 = phi i64* [ %383, %382 ], [ %381, %377 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %312) #11
  %386 = icmp eq i64* %385, null
  br i1 %386, label %425, label %387

387:                                              ; preds = %384
  %388 = ptrtoint i64* %385 to i64
  %389 = load i64, i64* %385, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %391 = load i64, i64* %390, align 8
  %392 = trunc i64 %389 to i32
  %393 = trunc i64 %391 to i32
  %394 = icmp eq i32 %392, %393
  %395 = select i1 %394, i64 %120, i64 %388
  br label %396

396:                                              ; preds = %117, %135, %147, %387, %293, %299
  %397 = phi i64 [ %294, %299 ], [ %120, %147 ], [ %294, %293 ], [ %395, %387 ], [ %120, %135 ], [ %120, %117 ]
  %398 = inttoptr i64 %397 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = load i64, i64* %119, align 8
  %401 = trunc i64 %399 to i32
  %402 = trunc i64 %400 to i32
  %403 = icmp eq i32 %401, %402
  br i1 %403, label %404, label %406

404:                                              ; preds = %396
  %405 = ptrtoint i64* %42 to i64
  br label %425

406:                                              ; preds = %396
  %407 = and i64 %399, 1
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %421, label %409

409:                                              ; preds = %406
  %410 = and i64 %399, -4294967296
  %411 = add i64 %399, -1
  %412 = inttoptr i64 %411 to i32*
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = zext i32 %413 to i64
  %415 = or i64 %410, %414
  %416 = add i64 %415, 9
  %417 = inttoptr i64 %416 to i8*
  %418 = load atomic i8, i8* %417 monotonic, align 1
  %419 = and i8 %418, 64
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %421, label %425

421:                                              ; preds = %409, %406
  %422 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %118, i32 309, i64* null, i64* null, i64* null) #11
  %423 = load i64, i64* %422, align 8
  %424 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %423, %"class.v8::internal::MessageLocation"* null) #11
  br label %425

425:                                              ; preds = %409, %404, %421, %143, %224, %244, %384, %115, %45
  %426 = phi i64 [ %46, %45 ], [ %116, %115 ], [ %405, %404 ], [ 0, %421 ], [ 0, %143 ], [ 0, %224 ], [ 0, %244 ], [ 0, %384 ], [ %397, %409 ]
  %427 = inttoptr i64 %426 to i64*
  ret i64* %427
}

declare i64* @_ZN2v88internal10JSReceiver16GetFunctionRealmENS0_6HandleIS1_EE(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object18SpeciesConstructorEPNS0_7IsolateENS0_6HandleINS0_10JSReceiverEEENS4_INS0_10JSFunctionEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 297
  %8 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #11
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %11 = icmp eq i64* %7, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = load i64, i64* null, align 536870912
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  br label %37

16:                                               ; preds = %3
  %17 = load i64, i64* %7, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i64 %19, 4294967295
  %24 = icmp eq i64 %23, 0
  tail call void @llvm.assume(i1 %24) #11
  %25 = zext i32 %22 to i64
  %26 = or i64 %19, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 64
  br i1 %30, label %31, label %37

31:                                               ; preds = %16
  %32 = add i64 %17, 7
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31, %16, %12
  %38 = phi i32* [ %15, %12 ], [ %21, %31 ], [ %21, %16 ]
  %39 = phi i64 [ %13, %12 ], [ %17, %31 ], [ %17, %16 ]
  br label %40

40:                                               ; preds = %37, %31
  %41 = phi i32* [ %38, %37 ], [ %21, %31 ]
  %42 = phi i64 [ %39, %37 ], [ %17, %31 ]
  %43 = phi i32 [ 3, %37 ], [ 0, %31 ]
  store i32 %43, i32* %10, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %44, align 4
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %7, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %54 = bitcast %"class.v8::internal::Handle.1220"* %53 to i64*
  store i64 %9, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %56 = bitcast i64* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 -1, i64 16, i1 false) #11
  %57 = and i64 %42, -4294967296
  %58 = load atomic i32, i32* %41 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %57, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = and i16 %63, -32
  %65 = icmp eq i16 %64, 32
  br i1 %65, label %66, label %70

66:                                               ; preds = %40
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %68 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %67, align 8
  %69 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %68, %"class.v8::internal::Isolate"* %0, i64* %7) #11
  br label %70

70:                                               ; preds = %66, %40
  %71 = phi i64* [ %69, %66 ], [ %7, %40 ]
  store i64* %71, i64** %49, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #11
  %72 = load i32, i32* %44, align 4
  %73 = icmp eq i32 %72, 4
  br i1 %73, label %74, label %79

74:                                               ; preds = %70
  %75 = bitcast %"class.v8::internal::Isolate"** %48 to %"class.v8::internal::Factory"**
  %76 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %76, i64 160
  %78 = bitcast %"class.v8::internal::Factory"* %77 to i64*
  br label %81

79:                                               ; preds = %70
  %80 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #11
  br label %81

81:                                               ; preds = %74, %79
  %82 = phi i64* [ %80, %79 ], [ %78, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #11
  %83 = icmp eq i64* %82, null
  br i1 %83, label %222, label %84

84:                                               ; preds = %81
  %85 = ptrtoint i64* %82 to i64
  %86 = load i64, i64* %82, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %86 to i32
  %90 = trunc i64 %88 to i32
  %91 = icmp eq i32 %89, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %84
  %93 = ptrtoint i64* %2 to i64
  br label %222

94:                                               ; preds = %84
  %95 = and i64 %86, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %108, label %97

97:                                               ; preds = %94
  %98 = and i64 %86, -4294967296
  %99 = add i64 %86, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %98, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp ugt i16 %106, 185
  br i1 %107, label %112, label %108

108:                                              ; preds = %94, %97
  %109 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %6, i32 42, i64* null, i64* null, i64* null) #11
  %110 = load i64, i64* %109, align 8
  %111 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %110, %"class.v8::internal::MessageLocation"* null) #11
  br label %222

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 516
  %114 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %114) #11
  %115 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %116 = icmp eq i64* %113, null
  br i1 %116, label %117, label %121

117:                                              ; preds = %112
  %118 = load i64, i64* null, align 536870912
  %119 = add i64 %118, -1
  %120 = inttoptr i64 %119 to i32*
  br label %142

121:                                              ; preds = %112
  %122 = load i64, i64* %113, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %122, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i64 %124, 4294967295
  %129 = icmp eq i64 %128, 0
  call void @llvm.assume(i1 %129) #11
  %130 = zext i32 %127 to i64
  %131 = or i64 %124, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = icmp eq i16 %134, 64
  br i1 %135, label %136, label %142

136:                                              ; preds = %121
  %137 = add i64 %122, 7
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136, %121, %117
  %143 = phi i32* [ %120, %117 ], [ %126, %136 ], [ %126, %121 ]
  %144 = phi i64 [ %118, %117 ], [ %122, %136 ], [ %122, %121 ]
  br label %145

145:                                              ; preds = %142, %136
  %146 = phi i32* [ %143, %142 ], [ %126, %136 ]
  %147 = phi i64 [ %144, %142 ], [ %122, %136 ]
  %148 = phi i32 [ 3, %142 ], [ 0, %136 ]
  store i32 %148, i32* %115, align 8
  %149 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  store i64* %113, i64** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %82, i64** %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %159 = bitcast %"class.v8::internal::Handle.1220"* %158 to i64*
  store i64 %85, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %161 = bitcast i64* %160 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 -1, i64 16, i1 false) #11
  %162 = and i64 %147, -4294967296
  %163 = load atomic i32, i32* %146 monotonic, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %162, %164
  %166 = add i64 %165, 7
  %167 = inttoptr i64 %166 to i16*
  %168 = load atomic i16, i16* %167 monotonic, align 2
  %169 = and i16 %168, -32
  %170 = icmp eq i16 %169, 32
  br i1 %170, label %171, label %175

171:                                              ; preds = %145
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %173 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %172, align 8
  %174 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %173, %"class.v8::internal::Isolate"* %0, i64* %113) #11
  br label %175

175:                                              ; preds = %171, %145
  %176 = phi i64* [ %174, %171 ], [ %113, %145 ]
  store i64* %176, i64** %154, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #11
  %177 = load i32, i32* %149, align 4
  %178 = icmp eq i32 %177, 4
  br i1 %178, label %179, label %184

179:                                              ; preds = %175
  %180 = bitcast %"class.v8::internal::Isolate"** %153 to %"class.v8::internal::Factory"**
  %181 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %181, i64 160
  %183 = bitcast %"class.v8::internal::Factory"* %182 to i64*
  br label %186

184:                                              ; preds = %175
  %185 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #11
  br label %186

186:                                              ; preds = %179, %184
  %187 = phi i64* [ %185, %184 ], [ %183, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %114) #11
  %188 = icmp eq i64* %187, null
  br i1 %188, label %222, label %189

189:                                              ; preds = %186
  %190 = ptrtoint i64* %187 to i64
  %191 = load i64, i64* %187, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %193 = load i64, i64* %192, align 8
  %194 = trunc i64 %191 to i32
  %195 = trunc i64 %193 to i32
  %196 = icmp eq i32 %194, %195
  br i1 %196, label %201, label %197

197:                                              ; preds = %189
  %198 = load i64, i64* %87, align 8
  %199 = trunc i64 %198 to i32
  %200 = icmp eq i32 %194, %199
  br i1 %200, label %201, label %203

201:                                              ; preds = %189, %197
  %202 = ptrtoint i64* %2 to i64
  br label %222

203:                                              ; preds = %197
  %204 = and i64 %191, 1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %218, label %206

206:                                              ; preds = %203
  %207 = and i64 %191, -4294967296
  %208 = add i64 %191, -1
  %209 = inttoptr i64 %208 to i32*
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = zext i32 %210 to i64
  %212 = or i64 %207, %211
  %213 = add i64 %212, 9
  %214 = inttoptr i64 %213 to i8*
  %215 = load atomic i8, i8* %214 monotonic, align 1
  %216 = and i8 %215, 64
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %222

218:                                              ; preds = %206, %203
  %219 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %6, i32 309, i64* null, i64* null, i64* null) #11
  %220 = load i64, i64* %219, align 8
  %221 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %220, %"class.v8::internal::MessageLocation"* null) #11
  br label %222

222:                                              ; preds = %206, %201, %218, %186, %81, %108, %92
  %223 = phi i64 [ %93, %92 ], [ 0, %108 ], [ 0, %81 ], [ %202, %201 ], [ 0, %218 ], [ 0, %186 ], [ %190, %206 ]
  %224 = inttoptr i64 %223 to i64*
  ret i64* %224
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Object29IterationHasObservableEffectsEv(%"class.v8::internal::Object"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %96, label %6

6:                                                ; preds = %1
  %7 = and i64 %3, -4294967296
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 1085
  br i1 %16, label %17, label %96

17:                                               ; preds = %6
  %18 = and i64 %3, -262144
  %19 = or i64 %18, 16
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = add i64 %21, -41416
  %23 = inttoptr i64 %22 to %"class.v8::internal::Isolate"*
  %24 = load atomic i32, i32* %9 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %7, %25
  %27 = add i64 %26, 15
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %7, %30
  %32 = add i64 %31, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %7, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp ugt i16 %39, 188
  br i1 %40, label %41, label %96

41:                                               ; preds = %17
  %42 = load atomic i32, i32* %9 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %7, %43
  %45 = add i64 %44, 15
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = add i64 %55, 19
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %50, %59
  %61 = add i64 %60, 315
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = icmp eq i32 %63, %47
  br i1 %64, label %65, label %96

65:                                               ; preds = %41
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 0, i32 7, i32 0, i64 612
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 11
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %72, label %96

72:                                               ; preds = %65
  %73 = load atomic i32, i32* %9 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %7, %74
  %76 = add i64 %75, 10
  %77 = inttoptr i64 %76 to i8*
  %78 = load i8, i8* %77, align 1
  %79 = lshr i8 %78, 2
  %80 = and i8 %79, 1
  %81 = icmp eq i8 %80, 0
  %82 = icmp ult i8 %78, 20
  %83 = and i1 %82, %81
  br i1 %83, label %96, label %84

84:                                               ; preds = %72
  %85 = icmp ne i8 %80, 0
  %86 = icmp ult i8 %78, 24
  %87 = and i1 %86, %85
  br i1 %87, label %88, label %95

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 0, i32 7, i32 0, i64 604
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 11
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %96, label %95

95:                                               ; preds = %88, %84
  br label %96

96:                                               ; preds = %1, %17, %95, %72, %88, %65, %41, %6
  %97 = phi i1 [ true, %6 ], [ true, %17 ], [ true, %41 ], [ true, %65 ], [ true, %95 ], [ false, %72 ], [ false, %88 ], [ true, %1 ]
  ret i1 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal6Object10IsCodeLikeEPNS0_7IsolateE(%"class.v8::internal::Object"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JSReceiver", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  br label %25

10:                                               ; preds = %2
  %11 = and i64 %5, -4294967296
  %12 = add i64 %5, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp ugt i16 %19, 185
  %21 = bitcast %"class.v8::internal::JSReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  br i1 %20, label %22, label %25

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %23, align 8
  %24 = call zeroext i1 @_ZNK2v88internal10JSReceiver10IsCodeLikeEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nonnull %3, %"class.v8::internal::Isolate"* %1) #11
  br label %25

25:                                               ; preds = %8, %22, %10
  %26 = phi i8* [ %21, %10 ], [ %21, %22 ], [ %9, %8 ]
  %27 = phi i1 [ false, %10 ], [ %24, %22 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  ret i1 %27
}

declare zeroext i1 @_ZNK2v88internal10JSReceiver10IsCodeLikeEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nocapture readonly, %struct._IO_FILE*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::OFStream", align 8
  %4 = alloca %"struct.v8::internal::Brief", align 8
  %5 = bitcast %"class.v8::internal::OFStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %5) #11
  call void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %3, %struct._IO_FILE* %1) #11
  %6 = bitcast %"class.v8::internal::OFStream"* %3 to %"class.std::__1::basic_ostream"*
  %7 = bitcast %"struct.v8::internal::Brief"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %4, i64 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %6, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %12 = bitcast %"class.v8::internal::OFStream"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %3, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_ios.base"* %13 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %3, i64 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %15) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %16 = bitcast %"class.std::__1::basic_ios.base"* %13 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %16) #11
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %5) #11
  ret void
}

declare void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"*, %struct._IO_FILE*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"struct.v8::internal::Brief"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::internal::HeapObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = and i64 %5, 1
  %9 = icmp eq i64 %8, 0
  %10 = trunc i64 %5 to i32
  br i1 %9, label %11, label %14

11:                                               ; preds = %2
  %12 = ashr i32 %10, 1
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %12) #11
  br label %25

14:                                               ; preds = %2
  %15 = icmp eq i32 %10, 3
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.242, i64 0, i64 0), i64 9) #11
  br label %25

18:                                               ; preds = %14
  %19 = and i64 %5, 3
  switch i64 %19, label %24 [
    i64 3, label %20
    i64 1, label %23
  ]

20:                                               ; preds = %18
  %21 = and i64 %5, -3
  store i64 %21, i64* %7, align 8
  %22 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.243, i64 0, i64 0), i64 7) #11
  call void @_ZN2v88internal10HeapObject20HeapObjectShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::HeapObject"* nonnull %3, %"class.std::__1::basic_ostream"* dereferenceable(160) %0)
  br label %25

23:                                               ; preds = %18
  store i64 %5, i64* %7, align 8
  call void @_ZN2v88internal10HeapObject20HeapObjectShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::HeapObject"* nonnull %3, %"class.std::__1::basic_ostream"* dereferenceable(160) %0)
  br label %25

24:                                               ; preds = %18
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

25:                                               ; preds = %16, %23, %20, %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #11
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"* nocapture readonly, %"class.v8::internal::StringStream"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = alloca %"struct.v8::internal::Brief", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %6, i64 %18
  %20 = bitcast i8* %19 to i64*
  store i64 %13, i64* %20, align 8
  %21 = load i8*, i8** %14, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %6, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27) #11
  %28 = getelementptr inbounds i8, i8* %25, i64 136
  %29 = bitcast i8* %28 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 144
  %31 = bitcast i8* %30 to i32*
  store i32 -1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #11
  store i32 16, i32* %34, align 8
  %36 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %37 = bitcast %"struct.v8::internal::Brief"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %4, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_stringbuf"* %9) #11
  %43 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = select i1 %46, i8* %48, i8* %42
  %50 = call i64 @strlen(i8* %49) #18
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* %49, i64 %50, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #11
  %51 = load i8, i8* %44, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %2
  %54 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %54) #17
  br label %55

55:                                               ; preds = %2, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  %56 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %56, i64* %12, align 8
  %57 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %58 = inttoptr i64 %56 to i8*
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %6, i64 %61
  %63 = bitcast i8* %62 to i64*
  store i64 %57, i64* %63, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %55
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #17
  br label %71

71:                                               ; preds = %55, %68
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %10) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %36, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #11
  %72 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_ios.base"* %72 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %73) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal6Object10ShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::Object"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Brief", align 8
  %4 = bitcast %"struct.v8::internal::Brief"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %3, i64 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6ObjectE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.v8::internal::Object"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"struct.v8::internal::Brief", align 8
  %4 = bitcast %"struct.v8::internal::Brief"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %3, i64 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal3Smi8SmiPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::Smi"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Smi", %"class.v8::internal::Smi"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = ashr i32 %5, 1
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %1, i32 %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10HeapObject20HeapObjectShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::HeapObject"* readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Brief", align 8
  %4 = alloca %"struct.v8::internal::Brief", align 8
  %5 = alloca %"struct.v8::internal::Brief", align 8
  %6 = alloca %"struct.v8::internal::Brief", align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"struct.v8::internal::AsHex"*
  %12 = alloca %"class.v8::internal::HeapStringAllocator", align 8
  %13 = alloca %"class.v8::internal::StringStream", align 8
  %14 = alloca %"class.v8::internal::String", align 8
  %15 = alloca %"class.v8::internal::HeapStringAllocator", align 8
  %16 = alloca %"class.v8::internal::StringStream", align 8
  %17 = alloca %"class.v8::internal::JSObject", align 8
  %18 = alloca %"class.v8::internal::HeapStringAllocator", align 8
  %19 = alloca %"class.v8::internal::StringStream", align 8
  %20 = alloca %"class.v8::internal::HeapObject", align 8
  %21 = alloca %"struct.v8::internal::Brief", align 8
  %22 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %23 = alloca %"class.v8::internal::ArrayBoilerplateDescription", align 8
  %24 = alloca %"class.v8::internal::RegExpBoilerplateDescription", align 8
  %25 = alloca %"class.v8::internal::ScopeInfo", align 8
  %26 = alloca %"class.v8::internal::String", align 8
  %27 = alloca %"class.v8::internal::Symbol", align 8
  %28 = alloca %"class.v8::internal::HeapNumber", align 8
  %29 = alloca %"class.v8::internal::BigInt", align 8
  %30 = alloca %"class.v8::internal::HeapStringAllocator", align 8
  %31 = alloca %"class.v8::internal::StringStream", align 8
  %32 = alloca %"class.v8::internal::Object", align 8
  %33 = alloca %"class.v8::internal::HeapStringAllocator", align 8
  %34 = alloca %"class.v8::internal::StringStream", align 8
  %35 = alloca %"class.v8::internal::Object", align 8
  %36 = alloca %"struct.v8::internal::Brief", align 8
  %37 = alloca %"struct.v8::internal::Brief", align 8
  %38 = alloca %"struct.v8::internal::Brief", align 8
  %39 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  store i64 268, i64* %43, align 8
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5AsHexE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"struct.v8::internal::AsHex"* nonnull dereferenceable(16) %11) #11
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #11
  %46 = load i64, i64* %40, align 8
  %47 = and i64 %46, -4294967296
  %48 = add i64 %46, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp ult i16 %55, 64
  br i1 %56, label %57, label %83

57:                                               ; preds = %2
  %58 = bitcast %"class.v8::internal::HeapStringAllocator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #11
  %59 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = bitcast %"class.v8::internal::StringStream"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %12, i64 0, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %13, i64 0, i32 0
  store %"class.v8::internal::StringAllocator"* %61, %"class.v8::internal::StringAllocator"** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %13, i64 0, i32 1
  store i32 1, i32* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %13, i64 0, i32 2
  store i32 16, i32* %64, align 4
  %65 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %13, i64 0, i32 3
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %13, i64 0, i32 4
  %67 = load i8* (%"class.v8::internal::StringAllocator"*, i32)*, i8* (%"class.v8::internal::StringAllocator"*, i32)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 4) to i8* (%"class.v8::internal::StringAllocator"*, i32)**), align 8
  %68 = call i8* %67(%"class.v8::internal::StringAllocator"* nonnull %61, i32 16) #11
  store i8* %68, i8** %66, align 8
  store i8 0, i8* %68, align 1
  %69 = bitcast %"class.v8::internal::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  %70 = load i64, i64* %40, align 8
  %71 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %70, i64* %71, align 8
  call void @_ZN2v88internal6String16StringShortPrintEPNS0_12StringStreamE(%"class.v8::internal::String"* nonnull %14, %"class.v8::internal::StringStream"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %72 = call i8* @_ZNK2v88internal12StringStream9ToCStringEv(%"class.v8::internal::StringStream"* nonnull %13) #11
  %73 = call i64 @strlen(i8* %72) #11
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* %72, i64 %73) #11
  %75 = icmp eq i8* %72, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %57
  call void @_ZdaPv(i8* nonnull %72) #17
  br label %77

77:                                               ; preds = %57, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %78 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %12, i64 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %77
  call void @_ZdaPv(i8* nonnull %79) #17
  br label %82

82:                                               ; preds = %77, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #11
  br label %1076

83:                                               ; preds = %2
  %84 = load atomic i32, i32* %49 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %47, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = icmp ugt i16 %89, 188
  br i1 %90, label %91, label %117

91:                                               ; preds = %83
  %92 = bitcast %"class.v8::internal::HeapStringAllocator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #11
  %93 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = bitcast %"class.v8::internal::StringStream"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %15, i64 0, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %16, i64 0, i32 0
  store %"class.v8::internal::StringAllocator"* %95, %"class.v8::internal::StringAllocator"** %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %16, i64 0, i32 1
  store i32 1, i32* %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %16, i64 0, i32 2
  store i32 16, i32* %98, align 4
  %99 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %16, i64 0, i32 3
  store i32 0, i32* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %16, i64 0, i32 4
  %101 = load i8* (%"class.v8::internal::StringAllocator"*, i32)*, i8* (%"class.v8::internal::StringAllocator"*, i32)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 4) to i8* (%"class.v8::internal::StringAllocator"*, i32)**), align 8
  %102 = call i8* %101(%"class.v8::internal::StringAllocator"* nonnull %95, i32 16) #11
  store i8* %102, i8** %100, align 8
  store i8 0, i8* %102, align 1
  %103 = bitcast %"class.v8::internal::JSObject"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  %104 = load i64, i64* %40, align 8
  %105 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %104, i64* %105, align 8
  call void @_ZN2v88internal8JSObject18JSObjectShortPrintEPNS0_12StringStreamE(%"class.v8::internal::JSObject"* nonnull %17, %"class.v8::internal::StringStream"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  %106 = call i8* @_ZNK2v88internal12StringStream9ToCStringEv(%"class.v8::internal::StringStream"* nonnull %16) #11
  %107 = call i64 @strlen(i8* %106) #11
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* %106, i64 %107) #11
  %109 = icmp eq i8* %106, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %91
  call void @_ZdaPv(i8* nonnull %106) #17
  br label %111

111:                                              ; preds = %91, %110
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %112 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %15, i64 0, i32 1
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  call void @_ZdaPv(i8* nonnull %113) #17
  br label %116

116:                                              ; preds = %111, %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #11
  br label %1076

117:                                              ; preds = %83
  %118 = load atomic i32, i32* %49 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %47, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load atomic i16, i16* %122 monotonic, align 2
  switch i16 %123, label %1062 [
    i16 172, label %124
    i16 137, label %155
    i16 138, label %190
    i16 139, label %199
    i16 140, label %208
    i16 141, label %217
    i16 142, label %226
    i16 143, label %235
    i16 144, label %244
    i16 145, label %253
    i16 146, label %262
    i16 131, label %271
    i16 120, label %280
    i16 125, label %289
    i16 126, label %298
    i16 127, label %307
    i16 123, label %316
    i16 183, label %325
    i16 122, label %333
    i16 124, label %342
    i16 128, label %351
    i16 119, label %360
    i16 130, label %369
    i16 134, label %378
    i16 132, label %387
    i16 133, label %396
    i16 153, label %405
    i16 160, label %413
    i16 176, label %422
    i16 102, label %432
    i16 129, label %487
    i16 167, label %496
    i16 169, label %504
    i16 175, label %513
    i16 158, label %525
    i16 157, label %537
    i16 179, label %558
    i16 1098, label %575
    i16 76, label %577
    i16 77, label %580
    i16 78, label %583
    i16 79, label %597
    i16 80, label %600
    i16 83, label %603
    i16 84, label %606
    i16 85, label %609
    i16 86, label %612
    i16 87, label %615
    i16 88, label %618
    i16 89, label %621
    i16 91, label %624
    i16 92, label %630
    i16 93, label %633
    i16 94, label %636
    i16 95, label %639
    i16 96, label %642
    i16 97, label %645
    i16 99, label %648
    i16 100, label %664
    i16 101, label %667
    i16 103, label %670
    i16 104, label %673
    i16 105, label %676
    i16 106, label %679
    i16 107, label %682
    i16 108, label %685
    i16 109, label %688
    i16 110, label %691
    i16 111, label %694
    i16 112, label %700
    i16 113, label %703
    i16 114, label %706
    i16 115, label %709
    i16 116, label %712
    i16 117, label %735
    i16 118, label %738
    i16 90, label %741
    i16 178, label %744
    i16 162, label %755
    i16 67, label %776
    i16 64, label %912
    i16 66, label %915
    i16 65, label %921
    i16 188, label %927
    i16 70, label %929
    i16 161, label %931
    i16 177, label %965
    i16 98, label %1006
  ]

124:                                              ; preds = %117
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.245, i64 0, i64 0), i64 4) #11
  %126 = load i64, i64* %40, align 8
  %127 = add i64 %126, 7
  %128 = inttoptr i64 %127 to i16*
  %129 = load atomic i16, i16* %128 monotonic, align 2
  %130 = icmp ugt i16 %129, 188
  br i1 %130, label %131, label %141

131:                                              ; preds = %124
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.246, i64 0, i64 0), i64 1) #11
  %133 = add i64 %126, 10
  %134 = inttoptr i64 %133 to i8*
  %135 = load i8, i8* %134, align 1
  %136 = lshr i8 %135, 2
  %137 = call i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext %136) #11
  %138 = call i64 @strlen(i8* %137) #11
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %132, i8* %137, i64 %138) #11
  %140 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i64 0, i64 0), i64 1) #11
  br label %153

141:                                              ; preds = %124
  %142 = add i64 %126, 3
  %143 = inttoptr i64 %142 to i8*
  %144 = load atomic i8, i8* %143 monotonic, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %153, label %146

146:                                              ; preds = %141
  %147 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.248, i64 0, i64 0), i64 1) #11
  %148 = load atomic i8, i8* %143 monotonic, align 1
  %149 = zext i8 %148 to i32
  %150 = shl nuw nsw i32 %149, 2
  %151 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %147, i32 %150) #11
  %152 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %151, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.240, i64 0, i64 0), i64 1) #11
  br label %153

153:                                              ; preds = %141, %146, %131
  %154 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

155:                                              ; preds = %117
  %156 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.249, i64 0, i64 0), i64 25) #11
  %157 = bitcast %"class.v8::internal::HeapStringAllocator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #11
  %158 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %18, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %159 = bitcast %"class.v8::internal::StringStream"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %159) #11
  %160 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %18, i64 0, i32 0
  %161 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %19, i64 0, i32 0
  store %"class.v8::internal::StringAllocator"* %160, %"class.v8::internal::StringAllocator"** %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %19, i64 0, i32 1
  store i32 1, i32* %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %19, i64 0, i32 2
  store i32 16, i32* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %19, i64 0, i32 3
  store i32 0, i32* %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %19, i64 0, i32 4
  %166 = load i8* (%"class.v8::internal::StringAllocator"*, i32)*, i8* (%"class.v8::internal::StringAllocator"*, i32)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 4) to i8* (%"class.v8::internal::StringAllocator"*, i32)**), align 8
  %167 = call i8* %166(%"class.v8::internal::StringAllocator"* nonnull %160, i32 16) #11
  store i8* %167, i8** %165, align 8
  store i8 0, i8* %167, align 1
  %168 = bitcast %"class.v8::internal::HeapObject"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #11
  %169 = load i64, i64* %40, align 8
  %170 = and i64 %169, -4294967296
  %171 = add i64 %169, 15
  %172 = inttoptr i64 %171 to i32*
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %170, %174
  %176 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %20, i64 0, i32 0, i32 0, i32 0
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %20, i64 0, i32 0
  call void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"* nonnull %177, %"class.v8::internal::StringStream"* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #11
  %178 = call i8* @_ZNK2v88internal12StringStream9ToCStringEv(%"class.v8::internal::StringStream"* nonnull %19) #11
  %179 = call i64 @strlen(i8* %178) #11
  %180 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* %178, i64 %179) #11
  %181 = icmp eq i8* %178, null
  br i1 %181, label %183, label %182

182:                                              ; preds = %155
  call void @_ZdaPv(i8* nonnull %178) #17
  br label %183

183:                                              ; preds = %155, %182
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9)
  store i8 62, i8* %9, align 1
  %184 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %9, i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %159) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %185 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %18, i64 0, i32 1
  %186 = load i8*, i8** %185, align 8
  %187 = icmp eq i8* %186, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %183
  call void @_ZdaPv(i8* nonnull %186) #17
  br label %189

189:                                              ; preds = %183, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #11
  br label %1076

190:                                              ; preds = %117
  %191 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.250, i64 0, i64 0), i64 14) #11
  %192 = load i64, i64* %40, align 8
  %193 = add i64 %192, 3
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = ashr i32 %195, 1
  %197 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %191, i32 %196) #11
  %198 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %197, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

199:                                              ; preds = %117
  %200 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.252, i64 0, i64 0), i64 14) #11
  %201 = load i64, i64* %40, align 8
  %202 = add i64 %201, 3
  %203 = inttoptr i64 %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = ashr i32 %204, 1
  %206 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %200, i32 %205) #11
  %207 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %206, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

208:                                              ; preds = %117
  %209 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.253, i64 0, i64 0), i64 22) #11
  %210 = load i64, i64* %40, align 8
  %211 = add i64 %210, 3
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = ashr i32 %213, 1
  %215 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %209, i32 %214) #11
  %216 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %215, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

217:                                              ; preds = %117
  %218 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.254, i64 0, i64 0), i64 13) #11
  %219 = load i64, i64* %40, align 8
  %220 = add i64 %219, 3
  %221 = inttoptr i64 %220 to i32*
  %222 = load i32, i32* %221, align 4
  %223 = ashr i32 %222, 1
  %224 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %218, i32 %223) #11
  %225 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %224, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

226:                                              ; preds = %117
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.255, i64 0, i64 0), i64 17) #11
  %228 = load i64, i64* %40, align 8
  %229 = add i64 %228, 3
  %230 = inttoptr i64 %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = ashr i32 %231, 1
  %233 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %227, i32 %232) #11
  %234 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

235:                                              ; preds = %117
  %236 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.256, i64 0, i64 0), i64 15) #11
  %237 = load i64, i64* %40, align 8
  %238 = add i64 %237, 3
  %239 = inttoptr i64 %238 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = ashr i32 %240, 1
  %242 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %236, i32 %241) #11
  %243 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %242, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

244:                                              ; preds = %117
  %245 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.257, i64 0, i64 0), i64 15) #11
  %246 = load i64, i64* %40, align 8
  %247 = add i64 %246, 3
  %248 = inttoptr i64 %247 to i32*
  %249 = load i32, i32* %248, align 4
  %250 = ashr i32 %249, 1
  %251 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %245, i32 %250) #11
  %252 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %251, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

253:                                              ; preds = %117
  %254 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.258, i64 0, i64 0), i64 15) #11
  %255 = load i64, i64* %40, align 8
  %256 = add i64 %255, 3
  %257 = inttoptr i64 %256 to i32*
  %258 = load i32, i32* %257, align 4
  %259 = ashr i32 %258, 1
  %260 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %254, i32 %259) #11
  %261 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %260, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

262:                                              ; preds = %117
  %263 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.259, i64 0, i64 0), i64 13) #11
  %264 = load i64, i64* %40, align 8
  %265 = add i64 %264, 3
  %266 = inttoptr i64 %265 to i32*
  %267 = load i32, i32* %266, align 4
  %268 = ashr i32 %267, 1
  %269 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %263, i32 %268) #11
  %270 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %269, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

271:                                              ; preds = %117
  %272 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.260, i64 0, i64 0), i64 20) #11
  %273 = load i64, i64* %40, align 8
  %274 = add i64 %273, 3
  %275 = inttoptr i64 %274 to i32*
  %276 = load i32, i32* %275, align 4
  %277 = ashr i32 %276, 1
  %278 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %272, i32 %277) #11
  %279 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %278, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

280:                                              ; preds = %117
  %281 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.261, i64 0, i64 0), i64 11) #11
  %282 = load i64, i64* %40, align 8
  %283 = add i64 %282, 3
  %284 = inttoptr i64 %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = ashr i32 %285, 1
  %287 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %281, i32 %286) #11
  %288 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %287, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

289:                                              ; preds = %117
  %290 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.262, i64 0, i64 0), i64 16) #11
  %291 = load i64, i64* %40, align 8
  %292 = add i64 %291, 3
  %293 = inttoptr i64 %292 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = ashr i32 %294, 1
  %296 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %290, i32 %295) #11
  %297 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %296, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

298:                                              ; preds = %117
  %299 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.263, i64 0, i64 0), i64 16) #11
  %300 = load i64, i64* %40, align 8
  %301 = add i64 %300, 3
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = ashr i32 %303, 1
  %305 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %299, i32 %304) #11
  %306 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %305, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

307:                                              ; preds = %117
  %308 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.264, i64 0, i64 0), i64 23) #11
  %309 = load i64, i64* %40, align 8
  %310 = add i64 %309, 3
  %311 = inttoptr i64 %310 to i32*
  %312 = load i32, i32* %311, align 4
  %313 = ashr i32 %312, 1
  %314 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %308, i32 %313) #11
  %315 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %314, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

316:                                              ; preds = %117
  %317 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.265, i64 0, i64 0), i64 16) #11
  %318 = load i64, i64* %40, align 8
  %319 = add i64 %318, 3
  %320 = inttoptr i64 %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = ashr i32 %321, 1
  %323 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %317, i32 %322) #11
  %324 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %323, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

325:                                              ; preds = %117
  %326 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.266, i64 0, i64 0), i64 21) #11
  %327 = load i64, i64* %40, align 8
  %328 = add i64 %327, 7
  %329 = inttoptr i64 %328 to i32*
  %330 = load i32, i32* %329, align 4
  %331 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %326, i32 %330) #11
  %332 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %331, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

333:                                              ; preds = %117
  %334 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.267, i64 0, i64 0), i64 18) #11
  %335 = load i64, i64* %40, align 8
  %336 = add i64 %335, 3
  %337 = inttoptr i64 %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = ashr i32 %338, 1
  %340 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %334, i32 %339) #11
  %341 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %340, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

342:                                              ; preds = %117
  %343 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.268, i64 0, i64 0), i64 18) #11
  %344 = load i64, i64* %40, align 8
  %345 = add i64 %344, 3
  %346 = inttoptr i64 %345 to i32*
  %347 = load i32, i32* %346, align 4
  %348 = ashr i32 %347, 1
  %349 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %343, i32 %348) #11
  %350 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %349, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

351:                                              ; preds = %117
  %352 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.269, i64 0, i64 0), i64 24) #11
  %353 = load i64, i64* %40, align 8
  %354 = add i64 %353, 3
  %355 = inttoptr i64 %354 to i32*
  %356 = load i32, i32* %355, align 4
  %357 = ashr i32 %356, 1
  %358 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %352, i32 %357) #11
  %359 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %358, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

360:                                              ; preds = %117
  %361 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.270, i64 0, i64 0), i64 12) #11
  %362 = load i64, i64* %40, align 8
  %363 = add i64 %362, 3
  %364 = inttoptr i64 %363 to i32*
  %365 = load i32, i32* %364, align 4
  %366 = ashr i32 %365, 1
  %367 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %361, i32 %366) #11
  %368 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %367, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

369:                                              ; preds = %117
  %370 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.271, i64 0, i64 0), i64 30) #11
  %371 = load i64, i64* %40, align 8
  %372 = add i64 %371, 3
  %373 = inttoptr i64 %372 to i32*
  %374 = load i32, i32* %373, align 4
  %375 = ashr i32 %374, 1
  %376 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %370, i32 %375) #11
  %377 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %376, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

378:                                              ; preds = %117
  %379 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.272, i64 0, i64 0), i64 18) #11
  %380 = load i64, i64* %40, align 8
  %381 = add i64 %380, 3
  %382 = inttoptr i64 %381 to i32*
  %383 = load i32, i32* %382, align 4
  %384 = ashr i32 %383, 1
  %385 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %379, i32 %384) #11
  %386 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %385, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

387:                                              ; preds = %117
  %388 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.273, i64 0, i64 0), i64 11) #11
  %389 = load i64, i64* %40, align 8
  %390 = add i64 %389, 3
  %391 = inttoptr i64 %390 to i32*
  %392 = load i32, i32* %391, align 4
  %393 = ashr i32 %392, 1
  %394 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %388, i32 %393) #11
  %395 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %394, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

396:                                              ; preds = %117
  %397 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.274, i64 0, i64 0), i64 15) #11
  %398 = load i64, i64* %40, align 8
  %399 = add i64 %398, 3
  %400 = inttoptr i64 %399 to i32*
  %401 = load i32, i32* %400, align 4
  %402 = ashr i32 %401, 1
  %403 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %397, i32 %402) #11
  %404 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %403, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

405:                                              ; preds = %117
  %406 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.275, i64 0, i64 0), i64 17) #11
  %407 = load i64, i64* %40, align 8
  %408 = add i64 %407, 5
  %409 = inttoptr i64 %408 to i16*
  %410 = load atomic i16, i16* %409 monotonic, align 2
  %411 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEs(%"class.std::__1::basic_ostream"* %406, i16 signext %410) #11
  %412 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %411, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

413:                                              ; preds = %117
  %414 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.276, i64 0, i64 0), i64 17) #11
  %415 = load i64, i64* %40, align 8
  %416 = add i64 %415, 3
  %417 = inttoptr i64 %416 to i32*
  %418 = load i32, i32* %417, align 4
  %419 = ashr i32 %418, 1
  %420 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %414, i32 %419) #11
  %421 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %420, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

422:                                              ; preds = %117
  %423 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.277, i64 0, i64 0), i64 15) #11
  %424 = load i64, i64* %40, align 8
  %425 = add i64 %424, 3
  %426 = inttoptr i64 %425 to i32*
  %427 = load i32, i32* %426, align 4
  %428 = lshr i32 %427, 1
  %429 = and i32 %428, 1023
  %430 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %423, i32 %429) #11
  %431 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %430, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

432:                                              ; preds = %117
  %433 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %434 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %433, null
  br i1 %434, label %441, label %435

435:                                              ; preds = %432
  %436 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %433, i64 0, i32 0, i32 1
  %437 = load i8, i8* %436, align 8, !range !2
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %435
  %440 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %433, i64 0, i32 1, i64 0
  br label %449

441:                                              ; preds = %435, %432
  %442 = and i64 %46, -262144
  %443 = or i64 %442, 16
  %444 = inttoptr i64 %443 to i64*
  %445 = load i64, i64* %444, align 16
  %446 = add i64 %445, -41416
  %447 = inttoptr i64 %446 to %"class.v8::internal::Isolate"*
  %448 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %447, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %449

449:                                              ; preds = %439, %441
  %450 = phi i64* [ %448, %441 ], [ %440, %439 ]
  %451 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.278, i64 0, i64 0), i64 14) #11
  %452 = load i64, i64* %40, align 8
  %453 = add i64 %452, -1
  %454 = inttoptr i64 %453 to i32*
  %455 = load atomic i32, i32* %454 monotonic, align 4
  %456 = getelementptr inbounds i64, i64* %450, i64 51
  %457 = load i64, i64* %456, align 8
  %458 = trunc i64 %457 to i32
  %459 = icmp eq i32 %455, %458
  br i1 %459, label %460, label %462

460:                                              ; preds = %449
  %461 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.279, i64 0, i64 0), i64 11) #11
  br label %485

462:                                              ; preds = %449
  %463 = load atomic i32, i32* %454 monotonic, align 4
  %464 = icmp eq i32 %463, %458
  br i1 %464, label %465, label %467

465:                                              ; preds = %462
  %466 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.280, i64 0, i64 0), i64 11) #11
  br label %485

467:                                              ; preds = %462
  %468 = load atomic i32, i32* %454 monotonic, align 4
  %469 = getelementptr inbounds i64, i64* %450, i64 53
  %470 = load i64, i64* %469, align 8
  %471 = trunc i64 %470 to i32
  %472 = icmp eq i32 %468, %471
  br i1 %472, label %473, label %475

473:                                              ; preds = %467
  %474 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.281, i64 0, i64 0), i64 11) #11
  br label %485

475:                                              ; preds = %467
  %476 = load atomic i32, i32* %454 monotonic, align 4
  %477 = getelementptr inbounds i64, i64* %450, i64 47
  %478 = load i64, i64* %477, align 8
  %479 = trunc i64 %478 to i32
  %480 = icmp eq i32 %476, %479
  br i1 %480, label %481, label %483

481:                                              ; preds = %475
  %482 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.282, i64 0, i64 0), i64 13) #11
  br label %485

483:                                              ; preds = %475
  %484 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.283, i64 0, i64 0), i64 17) #11
  br label %485

485:                                              ; preds = %465, %481, %483, %473, %460
  %486 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

487:                                              ; preds = %117
  %488 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.284, i64 0, i64 0), i64 26) #11
  %489 = load i64, i64* %40, align 8
  %490 = add i64 %489, 3
  %491 = inttoptr i64 %490 to i32*
  %492 = load i32, i32* %491, align 4
  %493 = ashr i32 %492, 1
  %494 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %488, i32 %493) #11
  %495 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %494, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

496:                                              ; preds = %117
  %497 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.285, i64 0, i64 0), i64 16) #11
  %498 = load i64, i64* %40, align 8
  %499 = add i64 %498, 3
  %500 = inttoptr i64 %499 to i32*
  %501 = load i32, i32* %500, align 4
  %502 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %497, i32 %501) #11
  %503 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %502, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

504:                                              ; preds = %117
  %505 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.286, i64 0, i64 0), i64 11) #11
  %506 = load i64, i64* %40, align 8
  %507 = add i64 %506, 3
  %508 = inttoptr i64 %507 to i32*
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = ashr i32 %509, 1
  %511 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %505, i32 %510) #11
  %512 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %511, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

513:                                              ; preds = %117
  %514 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.287, i64 0, i64 0), i64 19) #11
  %515 = add i64 %46, 3
  %516 = inttoptr i64 %515 to i32*
  %517 = load i32, i32* %516, align 4
  %518 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %514, i32 %517) #11
  %519 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %518, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.288, i64 0, i64 0), i64 10) #11
  %520 = add i64 %46, 7
  %521 = inttoptr i64 %520 to i32*
  %522 = load i32, i32* %521, align 4
  %523 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %519, i32 %522) #11
  %524 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %523, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0), i64 2) #11
  br label %1076

525:                                              ; preds = %117
  %526 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.289, i64 0, i64 0), i64 36) #11
  %527 = add i64 %46, 7
  %528 = inttoptr i64 %527 to i32*
  %529 = load i32, i32* %528, align 4
  %530 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %526, i32 %529) #11
  %531 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %530, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.290, i64 0, i64 0), i64 2) #11
  %532 = add i64 %46, 11
  %533 = inttoptr i64 %532 to i32*
  %534 = load i32, i32* %533, align 4
  %535 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %531, i32 %534) #11
  %536 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %535, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.291, i64 0, i64 0), i64 3) #11
  br label %1076

537:                                              ; preds = %117
  %538 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.292, i64 0, i64 0), i64 33) #11
  %539 = add i64 %46, 7
  %540 = inttoptr i64 %539 to i32*
  %541 = load i32, i32* %540, align 4
  %542 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %538, i32 %541) #11
  %543 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %542, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.290, i64 0, i64 0), i64 2) #11
  %544 = add i64 %46, 11
  %545 = inttoptr i64 %544 to i32*
  %546 = load i32, i32* %545, align 4
  %547 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %543, i32 %546) #11
  %548 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %547, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.293, i64 0, i64 0), i64 12) #11
  %549 = bitcast %"struct.v8::internal::Brief"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %549) #11
  %550 = add i64 %46, 15
  %551 = inttoptr i64 %550 to i32*
  %552 = load i32, i32* %551, align 4
  %553 = zext i32 %552 to i64
  %554 = or i64 %47, %553
  %555 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %21, i64 0, i32 0
  store i64 %554, i64* %555, align 8
  %556 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %548, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %21)
  %557 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %556, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %549) #11
  br label %1076

558:                                              ; preds = %117
  %559 = bitcast %"class.v8::internal::SharedFunctionInfo"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %559) #11
  %560 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %46, i64* %560, align 8
  %561 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %22) #11
  %562 = load i8, i8* %561, align 1
  %563 = icmp eq i8 %562, 0
  br i1 %563, label %569, label %564

564:                                              ; preds = %558
  %565 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.294, i64 0, i64 0), i64 20) #11
  %566 = call i64 @strlen(i8* %561) #11
  %567 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %565, i8* %561, i64 %566) #11
  %568 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %567, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %571

569:                                              ; preds = %558
  %570 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.295, i64 0, i64 0), i64 20) #11
  br label %571

571:                                              ; preds = %569, %564
  %572 = icmp eq i8* %561, null
  br i1 %572, label %574, label %573

573:                                              ; preds = %571
  call void @_ZdaPv(i8* nonnull %561) #17
  br label %574

574:                                              ; preds = %571, %573
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %559) #11
  br label %1076

575:                                              ; preds = %117
  %576 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.296, i64 0, i64 0), i64 17) #11
  br label %1076

577:                                              ; preds = %117
  %578 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.297, i64 0, i64 0), i64 30) #11
  %579 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

580:                                              ; preds = %117
  %581 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.298, i64 0, i64 0), i64 29) #11
  %582 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

583:                                              ; preds = %117
  %584 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.299, i64 0, i64 0), i64 13) #11
  %585 = load i64, i64* %40, align 8
  %586 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.359, i64 0, i64 0), i64 10) #11
  %587 = bitcast %"struct.v8::internal::Brief"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587) #11
  %588 = and i64 %585, -4294967296
  %589 = add i64 %585, 3
  %590 = inttoptr i64 %589 to i32*
  %591 = load i32, i32* %590, align 4
  %592 = zext i32 %591 to i64
  %593 = or i64 %588, %592
  %594 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %3, i64 0, i32 0
  store i64 %593, i64* %594, align 8
  %595 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %586, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #11
  %596 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

597:                                              ; preds = %117
  %598 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.300, i64 0, i64 0), i64 13) #11
  %599 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

600:                                              ; preds = %117
  %601 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.301, i64 0, i64 0), i64 30) #11
  %602 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

603:                                              ; preds = %117
  %604 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.302, i64 0, i64 0), i64 21) #11
  %605 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

606:                                              ; preds = %117
  %607 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.303, i64 0, i64 0), i64 19) #11
  %608 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

609:                                              ; preds = %117
  %610 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.304, i64 0, i64 0), i64 16) #11
  %611 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

612:                                              ; preds = %117
  %613 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.305, i64 0, i64 0), i64 13) #11
  %614 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

615:                                              ; preds = %117
  %616 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.306, i64 0, i64 0), i64 13) #11
  %617 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

618:                                              ; preds = %117
  %619 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.307, i64 0, i64 0), i64 22) #11
  %620 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

621:                                              ; preds = %117
  %622 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.308, i64 0, i64 0), i64 18) #11
  %623 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

624:                                              ; preds = %117
  %625 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.309, i64 0, i64 0), i64 28) #11
  %626 = bitcast %"class.v8::internal::ArrayBoilerplateDescription"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %626) #11
  %627 = load i64, i64* %40, align 8
  %628 = getelementptr inbounds %"class.v8::internal::ArrayBoilerplateDescription", %"class.v8::internal::ArrayBoilerplateDescription"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %627, i64* %628, align 8
  call void @_ZN2v88internal27ArrayBoilerplateDescription17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::ArrayBoilerplateDescription"* nonnull %23, %"class.std::__1::basic_ostream"* dereferenceable(160) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %626) #11
  %629 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

630:                                              ; preds = %117
  %631 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.310, i64 0, i64 0), i64 12) #11
  %632 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

633:                                              ; preds = %117
  %634 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.311, i64 0, i64 0), i64 22) #11
  %635 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

636:                                              ; preds = %117
  %637 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.312, i64 0, i64 0), i64 13) #11
  %638 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

639:                                              ; preds = %117
  %640 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.313, i64 0, i64 0), i64 11) #11
  %641 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

642:                                              ; preds = %117
  %643 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.314, i64 0, i64 0), i64 15) #11
  %644 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

645:                                              ; preds = %117
  %646 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.315, i64 0, i64 0), i64 21) #11
  %647 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

648:                                              ; preds = %117
  %649 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.316, i64 0, i64 0), i64 15) #11
  %650 = load i64, i64* %40, align 8
  %651 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  %652 = add i64 %650, 3
  %653 = inttoptr i64 %652 to i32*
  %654 = load i32, i32* %653, align 4
  %655 = ashr i32 %654, 1
  %656 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %651, i32 %655) #11
  %657 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %656, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.290, i64 0, i64 0), i64 2) #11
  %658 = add i64 %650, 7
  %659 = inttoptr i64 %658 to i32*
  %660 = load i32, i32* %659, align 4
  %661 = ashr i32 %660, 1
  %662 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %657, i32 %661) #11
  %663 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

664:                                              ; preds = %117
  %665 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.317, i64 0, i64 0), i64 10) #11
  %666 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

667:                                              ; preds = %117
  %668 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.318, i64 0, i64 0), i64 10) #11
  %669 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

670:                                              ; preds = %117
  %671 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.319, i64 0, i64 0), i64 25) #11
  %672 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

673:                                              ; preds = %117
  %674 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.320, i64 0, i64 0), i64 16) #11
  %675 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

676:                                              ; preds = %117
  %677 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.321, i64 0, i64 0), i64 16) #11
  %678 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

679:                                              ; preds = %117
  %680 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i64 0, i64 0), i64 14) #11
  %681 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

682:                                              ; preds = %117
  %683 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.323, i64 0, i64 0), i64 18) #11
  %684 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

685:                                              ; preds = %117
  %686 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.324, i64 0, i64 0), i64 16) #11
  %687 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

688:                                              ; preds = %117
  %689 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.325, i64 0, i64 0), i64 25) #11
  %690 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

691:                                              ; preds = %117
  %692 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.326, i64 0, i64 0), i64 14) #11
  %693 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

694:                                              ; preds = %117
  %695 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i64 0, i64 0), i64 29) #11
  %696 = bitcast %"class.v8::internal::RegExpBoilerplateDescription"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %696) #11
  %697 = load i64, i64* %40, align 8
  %698 = getelementptr inbounds %"class.v8::internal::RegExpBoilerplateDescription", %"class.v8::internal::RegExpBoilerplateDescription"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %697, i64* %698, align 8
  call void @_ZN2v88internal28RegExpBoilerplateDescription17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::RegExpBoilerplateDescription"* nonnull %24, %"class.std::__1::basic_ostream"* dereferenceable(160) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %696) #11
  %699 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

700:                                              ; preds = %117
  %701 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.328, i64 0, i64 0), i64 7) #11
  %702 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

703:                                              ; preds = %117
  %704 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.329, i64 0, i64 0), i64 26) #11
  %705 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

706:                                              ; preds = %117
  %707 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.330, i64 0, i64 0), i64 15) #11
  %708 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

709:                                              ; preds = %117
  %710 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.331, i64 0, i64 0), i64 26) #11
  %711 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

712:                                              ; preds = %117
  %713 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.332, i64 0, i64 0), i64 7) #11
  %714 = load i64, i64* %40, align 8
  %715 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  %716 = bitcast %"struct.v8::internal::Brief"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %716) #11
  %717 = and i64 %714, -4294967296
  %718 = add i64 %714, 3
  %719 = inttoptr i64 %718 to i32*
  %720 = load i32, i32* %719, align 4
  %721 = zext i32 %720 to i64
  %722 = or i64 %717, %721
  %723 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %4, i64 0, i32 0
  store i64 %722, i64* %723, align 8
  %724 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %715, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %4) #11
  %725 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %724, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.290, i64 0, i64 0), i64 2) #11
  %726 = bitcast %"struct.v8::internal::Brief"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %726) #11
  %727 = add i64 %714, 7
  %728 = inttoptr i64 %727 to i32*
  %729 = load i32, i32* %728, align 4
  %730 = zext i32 %729 to i64
  %731 = or i64 %717, %730
  %732 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %5, i64 0, i32 0
  store i64 %731, i64* %732, align 8
  %733 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %725, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %726) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %716) #11
  %734 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

735:                                              ; preds = %117
  %736 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.333, i64 0, i64 0), i64 17) #11
  %737 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

738:                                              ; preds = %117
  %739 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.334, i64 0, i64 0), i64 26) #11
  %740 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

741:                                              ; preds = %117
  %742 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.335, i64 0, i64 0), i64 15) #11
  %743 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

744:                                              ; preds = %117
  %745 = bitcast %"class.v8::internal::ScopeInfo"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %745) #11
  %746 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %46, i64* %746, align 8
  %747 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.336, i64 0, i64 0), i64 10) #11
  %748 = call zeroext i1 @_ZNK2v88internal9ScopeInfo7IsEmptyEv(%"class.v8::internal::ScopeInfo"* nonnull %25) #11
  br i1 %748, label %753, label %749

749:                                              ; preds = %744
  %750 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  %751 = call zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"* nonnull %25) #11
  %752 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_9ScopeTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %750, i8 zeroext %751)
  br label %753

753:                                              ; preds = %749, %744
  %754 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %745) #11
  br label %1076

755:                                              ; preds = %117
  %756 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.337, i64 0, i64 0), i64 6) #11
  %757 = add i64 %46, 27
  %758 = inttoptr i64 %757 to i32*
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = and i32 %759, 15
  %761 = call i8* @_ZN2v88internal16CodeKindToStringENS0_8CodeKindE(i32 %760) #11
  %762 = call i64 @strlen(i8* %761) #11
  %763 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %756, i8* %761, i64 %762) #11
  %764 = add i64 %46, 31
  %765 = inttoptr i64 %764 to i32*
  %766 = load atomic i32, i32* %765 monotonic, align 4
  %767 = icmp eq i32 %766, -1
  br i1 %767, label %774, label %768

768:                                              ; preds = %755
  %769 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  %770 = load atomic i32, i32* %765 monotonic, align 4
  %771 = call i8* @_ZN2v88internal8Builtins4nameEi(i32 %770) #11
  %772 = call i64 @strlen(i8* %771) #11
  %773 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %769, i8* %771, i64 %772) #11
  br label %774

774:                                              ; preds = %755, %768
  %775 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

776:                                              ; preds = %117
  %777 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %778 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %777, null
  br i1 %778, label %785, label %779

779:                                              ; preds = %776
  %780 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 0, i32 1
  %781 = load i8, i8* %780, align 8, !range !2
  %782 = icmp eq i8 %781, 0
  br i1 %782, label %785, label %783

783:                                              ; preds = %779
  %784 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 1, i64 0
  br label %793

785:                                              ; preds = %779, %776
  %786 = and i64 %46, -262144
  %787 = or i64 %786, 16
  %788 = inttoptr i64 %787 to i64*
  %789 = load i64, i64* %788, align 16
  %790 = add i64 %789, -41416
  %791 = inttoptr i64 %790 to %"class.v8::internal::Isolate"*
  %792 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %791, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %793

793:                                              ; preds = %783, %785
  %794 = phi i64* [ %792, %785 ], [ %784, %783 ]
  %795 = getelementptr inbounds i64, i64* %794, i64 4
  %796 = load i64, i64* %795, align 8
  %797 = trunc i64 %46 to i32
  %798 = trunc i64 %796 to i32
  %799 = icmp eq i32 %797, %798
  br i1 %799, label %800, label %802

800:                                              ; preds = %793
  %801 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.338, i64 0, i64 0), i64 11) #11
  br label %1076

802:                                              ; preds = %793
  br i1 %778, label %809, label %803

803:                                              ; preds = %802
  %804 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 0, i32 1
  %805 = load i8, i8* %804, align 8, !range !2
  %806 = icmp eq i8 %805, 0
  br i1 %806, label %809, label %807

807:                                              ; preds = %803
  %808 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 1, i64 0
  br label %817

809:                                              ; preds = %803, %802
  %810 = and i64 %46, -262144
  %811 = or i64 %810, 16
  %812 = inttoptr i64 %811 to i64*
  %813 = load i64, i64* %812, align 16
  %814 = add i64 %813, -41416
  %815 = inttoptr i64 %814 to %"class.v8::internal::Isolate"*
  %816 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %815, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %817

817:                                              ; preds = %807, %809
  %818 = phi i64* [ %816, %809 ], [ %808, %807 ]
  %819 = getelementptr inbounds i64, i64* %818, i64 5
  %820 = load i64, i64* %819, align 8
  %821 = trunc i64 %820 to i32
  %822 = icmp eq i32 %797, %821
  br i1 %822, label %823, label %825

823:                                              ; preds = %817
  %824 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.339, i64 0, i64 0), i64 10) #11
  br label %1076

825:                                              ; preds = %817
  br i1 %778, label %832, label %826

826:                                              ; preds = %825
  %827 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 0, i32 1
  %828 = load i8, i8* %827, align 8, !range !2
  %829 = icmp eq i8 %828, 0
  br i1 %829, label %832, label %830

830:                                              ; preds = %826
  %831 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 1, i64 0
  br label %840

832:                                              ; preds = %826, %825
  %833 = and i64 %46, -262144
  %834 = or i64 %833, 16
  %835 = inttoptr i64 %834 to i64*
  %836 = load i64, i64* %835, align 16
  %837 = add i64 %836, -41416
  %838 = inttoptr i64 %837 to %"class.v8::internal::Isolate"*
  %839 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %838, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %840

840:                                              ; preds = %830, %832
  %841 = phi i64* [ %839, %832 ], [ %831, %830 ]
  %842 = getelementptr inbounds i64, i64* %841, i64 6
  %843 = load i64, i64* %842, align 8
  %844 = trunc i64 %843 to i32
  %845 = icmp eq i32 %797, %844
  br i1 %845, label %846, label %848

846:                                              ; preds = %840
  %847 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.340, i64 0, i64 0), i64 6) #11
  br label %1076

848:                                              ; preds = %840
  br i1 %778, label %855, label %849

849:                                              ; preds = %848
  %850 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 0, i32 1
  %851 = load i8, i8* %850, align 8, !range !2
  %852 = icmp eq i8 %851, 0
  br i1 %852, label %855, label %853

853:                                              ; preds = %849
  %854 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 1, i64 0
  br label %863

855:                                              ; preds = %849, %848
  %856 = and i64 %46, -262144
  %857 = or i64 %856, 16
  %858 = inttoptr i64 %857 to i64*
  %859 = load i64, i64* %858, align 16
  %860 = add i64 %859, -41416
  %861 = inttoptr i64 %860 to %"class.v8::internal::Isolate"*
  %862 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %861, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %863

863:                                              ; preds = %853, %855
  %864 = phi i64* [ %862, %855 ], [ %854, %853 ]
  %865 = getelementptr inbounds i64, i64* %864, i64 7
  %866 = load i64, i64* %865, align 8
  %867 = trunc i64 %866 to i32
  %868 = icmp eq i32 %797, %867
  br i1 %868, label %869, label %871

869:                                              ; preds = %863
  %870 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.341, i64 0, i64 0), i64 6) #11
  br label %1076

871:                                              ; preds = %863
  br i1 %778, label %878, label %872

872:                                              ; preds = %871
  %873 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 0, i32 1
  %874 = load i8, i8* %873, align 8, !range !2
  %875 = icmp eq i8 %874, 0
  br i1 %875, label %878, label %876

876:                                              ; preds = %872
  %877 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %777, i64 0, i32 1, i64 0
  br label %886

878:                                              ; preds = %872, %871
  %879 = and i64 %46, -262144
  %880 = or i64 %879, 16
  %881 = inttoptr i64 %880 to i64*
  %882 = load i64, i64* %881, align 16
  %883 = add i64 %882, -41416
  %884 = inttoptr i64 %883 to %"class.v8::internal::Isolate"*
  %885 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %884, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %886

886:                                              ; preds = %876, %878
  %887 = phi i64* [ %885, %878 ], [ %877, %876 ]
  %888 = getelementptr inbounds i64, i64* %887, i64 8
  %889 = load i64, i64* %888, align 8
  %890 = trunc i64 %889 to i32
  %891 = icmp eq i32 %797, %890
  br i1 %891, label %892, label %894

892:                                              ; preds = %886
  %893 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.342, i64 0, i64 0), i64 7) #11
  br label %1076

894:                                              ; preds = %886
  %895 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.343, i64 0, i64 0), i64 14) #11
  %896 = bitcast %"class.v8::internal::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %896) #11
  %897 = load i64, i64* %40, align 8
  %898 = and i64 %897, -4294967296
  %899 = add i64 %897, 11
  %900 = inttoptr i64 %899 to i32*
  %901 = load i32, i32* %900, align 4
  %902 = zext i32 %901 to i64
  %903 = or i64 %898, %902
  %904 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %903, i64* %904, align 8
  %905 = call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"* nonnull %26, i32 1, i32 1, i32* null) #11
  %906 = call i64 @strlen(i8* %905) #11
  %907 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* %905, i64 %906) #11
  %908 = icmp eq i8* %905, null
  br i1 %908, label %910, label %909

909:                                              ; preds = %894
  call void @_ZdaPv(i8* nonnull %905) #17
  br label %910

910:                                              ; preds = %894, %909
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %896) #11
  %911 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

912:                                              ; preds = %117
  %913 = bitcast %"class.v8::internal::Symbol"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %913) #11
  %914 = getelementptr inbounds %"class.v8::internal::Symbol", %"class.v8::internal::Symbol"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %46, i64* %914, align 8
  call void @_ZN2v88internal6Symbol16SymbolShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::Symbol"* nonnull %27, %"class.std::__1::basic_ostream"* dereferenceable(160) %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %913) #11
  br label %1076

915:                                              ; preds = %117
  %916 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.344, i64 0, i64 0), i64 12) #11
  %917 = bitcast %"class.v8::internal::HeapNumber"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %917) #11
  %918 = load i64, i64* %40, align 8
  %919 = getelementptr inbounds %"class.v8::internal::HeapNumber", %"class.v8::internal::HeapNumber"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %918, i64* %919, align 8
  call void @_ZN2v88internal10HeapNumber20HeapNumberShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::HeapNumber"* nonnull %28, %"class.std::__1::basic_ostream"* dereferenceable(160) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %917) #11
  %920 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

921:                                              ; preds = %117
  %922 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.345, i64 0, i64 0), i64 8) #11
  %923 = bitcast %"class.v8::internal::BigInt"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %923) #11
  %924 = load i64, i64* %40, align 8
  %925 = getelementptr inbounds %"class.v8::internal::BigInt", %"class.v8::internal::BigInt"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %924, i64* %925, align 8
  call void @_ZN2v88internal6BigInt16BigIntShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::BigInt"* nonnull %29, %"class.std::__1::basic_ostream"* dereferenceable(160) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %923) #11
  %926 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  br label %1076

927:                                              ; preds = %117
  %928 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.346, i64 0, i64 0), i64 9) #11
  br label %1076

929:                                              ; preds = %117
  %930 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.347, i64 0, i64 0), i64 9) #11
  br label %1076

931:                                              ; preds = %117
  %932 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.348, i64 0, i64 0), i64 13) #11
  %933 = bitcast %"class.v8::internal::HeapStringAllocator"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %933) #11
  %934 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %30, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %934, align 8
  %935 = bitcast %"class.v8::internal::StringStream"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %935) #11
  %936 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %30, i64 0, i32 0
  %937 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %31, i64 0, i32 0
  store %"class.v8::internal::StringAllocator"* %936, %"class.v8::internal::StringAllocator"** %937, align 8
  %938 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %31, i64 0, i32 1
  store i32 1, i32* %938, align 8
  %939 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %31, i64 0, i32 2
  store i32 16, i32* %939, align 4
  %940 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %31, i64 0, i32 3
  store i32 0, i32* %940, align 8
  %941 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %31, i64 0, i32 4
  %942 = load i8* (%"class.v8::internal::StringAllocator"*, i32)*, i8* (%"class.v8::internal::StringAllocator"*, i32)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 4) to i8* (%"class.v8::internal::StringAllocator"*, i32)**), align 8
  %943 = call i8* %942(%"class.v8::internal::StringAllocator"* nonnull %936, i32 16) #11
  store i8* %943, i8** %941, align 8
  store i8 0, i8* %943, align 1
  %944 = bitcast %"class.v8::internal::Object"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %944) #11
  %945 = load i64, i64* %40, align 8
  %946 = and i64 %945, -4294967296
  %947 = add i64 %945, 3
  %948 = inttoptr i64 %947 to i32*
  %949 = load i32, i32* %948, align 4
  %950 = zext i32 %949 to i64
  %951 = or i64 %946, %950
  %952 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %32, i64 0, i32 0, i32 0
  store i64 %951, i64* %952, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"* nonnull %32, %"class.v8::internal::StringStream"* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %944) #11
  %953 = call i8* @_ZNK2v88internal12StringStream9ToCStringEv(%"class.v8::internal::StringStream"* nonnull %31) #11
  %954 = call i64 @strlen(i8* %953) #11
  %955 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* %953, i64 %954) #11
  %956 = icmp eq i8* %953, null
  br i1 %956, label %958, label %957

957:                                              ; preds = %931
  call void @_ZdaPv(i8* nonnull %953) #17
  br label %958

958:                                              ; preds = %931, %957
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8)
  store i8 62, i8* %8, align 1
  %959 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %8, i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %935) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %934, align 8
  %960 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %30, i64 0, i32 1
  %961 = load i8*, i8** %960, align 8
  %962 = icmp eq i8* %961, null
  br i1 %962, label %964, label %963

963:                                              ; preds = %958
  call void @_ZdaPv(i8* nonnull %961) #17
  br label %964

964:                                              ; preds = %958, %963
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %933) #11
  br label %1076

965:                                              ; preds = %117
  %966 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.349, i64 0, i64 0), i64 19) #11
  %967 = add i64 %46, 3
  %968 = inttoptr i64 %967 to i32*
  %969 = load i32, i32* %968, align 4
  %970 = zext i32 %969 to i64
  %971 = or i64 %47, %970
  %972 = bitcast %"struct.v8::internal::Brief"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %972) #11
  %973 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %6, i64 0, i32 0
  store i64 %971, i64* %973, align 8
  %974 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %972) #11
  %975 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.350, i64 0, i64 0), i64 7) #11
  %976 = bitcast %"class.v8::internal::HeapStringAllocator"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %976) #11
  %977 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %33, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %977, align 8
  %978 = bitcast %"class.v8::internal::StringStream"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %978) #11
  %979 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %33, i64 0, i32 0
  %980 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %34, i64 0, i32 0
  store %"class.v8::internal::StringAllocator"* %979, %"class.v8::internal::StringAllocator"** %980, align 8
  %981 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %34, i64 0, i32 1
  store i32 1, i32* %981, align 8
  %982 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %34, i64 0, i32 2
  store i32 16, i32* %982, align 4
  %983 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %34, i64 0, i32 3
  store i32 0, i32* %983, align 8
  %984 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %34, i64 0, i32 4
  %985 = load i8* (%"class.v8::internal::StringAllocator"*, i32)*, i8* (%"class.v8::internal::StringAllocator"*, i32)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 4) to i8* (%"class.v8::internal::StringAllocator"*, i32)**), align 8
  %986 = call i8* %985(%"class.v8::internal::StringAllocator"* nonnull %979, i32 16) #11
  store i8* %986, i8** %984, align 8
  store i8 0, i8* %986, align 1
  %987 = bitcast %"class.v8::internal::Object"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %987) #11
  %988 = add i64 %46, 11
  %989 = inttoptr i64 %988 to i32*
  %990 = load atomic i32, i32* %989 acquire, align 4
  %991 = zext i32 %990 to i64
  %992 = or i64 %47, %991
  %993 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %35, i64 0, i32 0, i32 0
  store i64 %992, i64* %993, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"* nonnull %35, %"class.v8::internal::StringStream"* nonnull %34)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %987) #11
  %994 = call i8* @_ZNK2v88internal12StringStream9ToCStringEv(%"class.v8::internal::StringStream"* nonnull %34) #11
  %995 = call i64 @strlen(i8* %994) #11
  %996 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* %994, i64 %995) #11
  %997 = icmp eq i8* %994, null
  br i1 %997, label %999, label %998

998:                                              ; preds = %965
  call void @_ZdaPv(i8* nonnull %994) #17
  br label %999

999:                                              ; preds = %965, %998
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7)
  store i8 62, i8* %7, align 1
  %1000 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %7, i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %978) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %977, align 8
  %1001 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %33, i64 0, i32 1
  %1002 = load i8*, i8** %1001, align 8
  %1003 = icmp eq i8* %1002, null
  br i1 %1003, label %1005, label %1004

1004:                                             ; preds = %999
  call void @_ZdaPv(i8* nonnull %1002) #17
  br label %1005

1005:                                             ; preds = %999, %1004
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %976) #11
  br label %1076

1006:                                             ; preds = %117
  %1007 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.351, i64 0, i64 0), i64 17) #11
  %1008 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.352, i64 0, i64 0), i64 10) #11
  %1009 = bitcast %"struct.v8::internal::Brief"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1009) #11
  %1010 = add i64 %46, 3
  %1011 = inttoptr i64 %1010 to i32*
  %1012 = load i32, i32* %1011, align 4
  %1013 = zext i32 %1012 to i64
  %1014 = or i64 %47, %1013
  %1015 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %36, i64 0, i32 0
  store i64 %1014, i64* %1015, align 8
  %1016 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1008, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %36)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1009) #11
  %1017 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i64 0, i64 0), i64 15) #11
  %1018 = bitcast %"struct.v8::internal::Brief"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1018) #11
  %1019 = add i64 %46, 7
  %1020 = inttoptr i64 %1019 to i32*
  %1021 = load i32, i32* %1020, align 4
  %1022 = zext i32 %1021 to i64
  %1023 = or i64 %47, %1022
  %1024 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %37, i64 0, i32 0
  store i64 %1023, i64* %1024, align 8
  %1025 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1017, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1018) #11
  %1026 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.354, i64 0, i64 0), i64 8) #11
  %1027 = bitcast %"struct.v8::internal::Brief"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1027) #11
  %1028 = add i64 %46, 11
  %1029 = inttoptr i64 %1028 to i32*
  %1030 = load i32, i32* %1029, align 4
  %1031 = zext i32 %1030 to i64
  %1032 = or i64 %47, %1031
  %1033 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %38, i64 0, i32 0
  store i64 %1032, i64* %1033, align 8
  %1034 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1026, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %38)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1027) #11
  %1035 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %1036 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %1035, null
  br i1 %1036, label %1043, label %1037

1037:                                             ; preds = %1006
  %1038 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1035, i64 0, i32 0, i32 1
  %1039 = load i8, i8* %1038, align 8, !range !2
  %1040 = icmp eq i8 %1039, 0
  br i1 %1040, label %1043, label %1041

1041:                                             ; preds = %1037
  %1042 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %1035, i64 0, i32 1, i64 0
  br label %1051

1043:                                             ; preds = %1037, %1006
  %1044 = and i64 %46, -262144
  %1045 = or i64 %1044, 16
  %1046 = inttoptr i64 %1045 to i64*
  %1047 = load i64, i64* %1046, align 16
  %1048 = add i64 %1047, -41416
  %1049 = inttoptr i64 %1048 to %"class.v8::internal::Isolate"*
  %1050 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1049, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %1051

1051:                                             ; preds = %1041, %1043
  %1052 = phi i64* [ %1050, %1043 ], [ %1042, %1041 ]
  %1053 = load atomic i32, i32* %49 monotonic, align 4
  %1054 = getelementptr inbounds i64, i64* %1052, i64 60
  %1055 = load i64, i64* %1054, align 8
  %1056 = trunc i64 %1055 to i32
  %1057 = icmp eq i32 %1053, %1056
  br i1 %1057, label %1058, label %1060

1058:                                             ; preds = %1051
  %1059 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.355, i64 0, i64 0), i64 25) #11
  br label %1076

1060:                                             ; preds = %1051
  %1061 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.356, i64 0, i64 0), i64 26) #11
  br label %1076

1062:                                             ; preds = %117
  %1063 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.357, i64 0, i64 0), i64 20) #11
  %1064 = load i64, i64* %40, align 8
  %1065 = and i64 %1064, -4294967296
  %1066 = add i64 %1064, -1
  %1067 = inttoptr i64 %1066 to i32*
  %1068 = load atomic i32, i32* %1067 monotonic, align 4
  %1069 = zext i32 %1068 to i64
  %1070 = or i64 %1065, %1069
  %1071 = add i64 %1070, 7
  %1072 = inttoptr i64 %1071 to i16*
  %1073 = load atomic i16, i16* %1072 monotonic, align 2
  %1074 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_12InstanceTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1063, i16 zeroext %1073)
  %1075 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1074, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.358, i64 0, i64 0), i64 2) #11
  br label %1076

1076:                                             ; preds = %1058, %1060, %800, %846, %892, %910, %869, %823, %82, %116, %1062, %1005, %964, %929, %927, %921, %915, %912, %774, %753, %741, %738, %735, %712, %709, %706, %703, %700, %694, %691, %688, %685, %682, %679, %676, %673, %670, %667, %664, %648, %645, %642, %639, %636, %633, %630, %624, %621, %618, %615, %612, %609, %606, %603, %600, %597, %583, %580, %577, %575, %574, %537, %525, %513, %504, %496, %487, %485, %422, %413, %405, %396, %387, %378, %369, %360, %351, %342, %333, %325, %316, %307, %298, %289, %280, %271, %262, %253, %244, %235, %226, %217, %208, %199, %190, %189, %153
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5AsHexE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::AsHex"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2v88internal6String16StringShortPrintEPNS0_12StringStreamE(%"class.v8::internal::String"*, %"class.v8::internal::StringStream"*) local_unnamed_addr #1

declare i8* @_ZNK2v88internal12StringStream9ToCStringEv(%"class.v8::internal::StringStream"*) local_unnamed_addr #1

declare void @_ZN2v88internal8JSObject18JSObjectShortPrintEPNS0_12StringStreamE(%"class.v8::internal::JSObject"*, %"class.v8::internal::StringStream"*) local_unnamed_addr #1

declare i8* @_ZN2v88internal20ElementsKindToStringENS0_12ElementsKindE(i8 zeroext) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEs(%"class.std::__1::basic_ostream"*, i16 signext) local_unnamed_addr #1

declare i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal6Struct17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::Struct"* nocapture, %"class.std::__1::basic_ostream"* nocapture dereferenceable(160)) local_unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12CallableTask17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::CallableTask"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Brief", align 8
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.359, i64 0, i64 0), i64 10) #11
  %5 = bitcast %"struct.v8::internal::Brief"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.v8::internal::CallableTask", %"class.v8::internal::CallableTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %3, i64 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %4, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

declare void @_ZN2v88internal27ArrayBoilerplateDescription17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::ArrayBoilerplateDescription"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14ClassPositions17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::ClassPositions"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  %4 = getelementptr inbounds %"class.v8::internal::ClassPositions", %"class.v8::internal::ClassPositions"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %3, i32 %9) #11
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.290, i64 0, i64 0), i64 2) #11
  %12 = load i64, i64* %4, align 8
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = ashr i32 %15, 1
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %11, i32 %16) #11
  ret void
}

declare void @_ZN2v88internal28RegExpBoilerplateDescription17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::RegExpBoilerplateDescription"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Tuple217BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::Tuple2"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Brief", align 8
  %4 = alloca %"struct.v8::internal::Brief", align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  %6 = bitcast %"struct.v8::internal::Brief"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.v8::internal::Tuple2", %"class.v8::internal::Tuple2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %3, i64 0, i32 0
  store i64 %14, i64* %15, align 8
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %3)
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.290, i64 0, i64 0), i64 2) #11
  %18 = bitcast %"struct.v8::internal::Brief"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = load i64, i64* %7, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %4, i64 0, i32 0
  store i64 %25, i64* %26, align 8
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

declare zeroext i1 @_ZNK2v88internal9ScopeInfo7IsEmptyEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_9ScopeTypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8 zeroext) local_unnamed_addr #5 comdat {
  switch i8 %1, label %19 [
    i8 1, label %3
    i8 2, label %5
    i8 3, label %7
    i8 4, label %9
    i8 5, label %11
    i8 6, label %13
    i8 0, label %15
    i8 7, label %17
  ]

3:                                                ; preds = %2
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.426, i64 0, i64 0), i64 10) #11
  br label %20

5:                                                ; preds = %2
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.427, i64 0, i64 0), i64 14) #11
  br label %20

7:                                                ; preds = %2
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.428, i64 0, i64 0), i64 12) #11
  br label %20

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.429, i64 0, i64 0), i64 12) #11
  br label %20

11:                                               ; preds = %2
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.430, i64 0, i64 0), i64 11) #11
  br label %20

13:                                               ; preds = %2
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.431, i64 0, i64 0), i64 11) #11
  br label %20

15:                                               ; preds = %2
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.432, i64 0, i64 0), i64 11) #11
  br label %20

17:                                               ; preds = %2
  %18 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.433, i64 0, i64 0), i64 10) #11
  br label %20

19:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

20:                                               ; preds = %17, %15, %13, %11, %9, %7, %5, %3
  %21 = phi %"class.std::__1::basic_ostream"* [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"class.std::__1::basic_ostream"* %21
}

declare zeroext i8 @_ZNK2v88internal9ScopeInfo10scope_typeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #1

declare i8* @_ZN2v88internal16CodeKindToStringENS0_8CodeKindE(i32) local_unnamed_addr #1

declare i8* @_ZN2v88internal8Builtins4nameEi(i32) local_unnamed_addr #1

declare i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"*, i32, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6Symbol16SymbolShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::Symbol"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.408, i64 0, i64 0), i64 8) #11
  %5 = getelementptr inbounds %"class.v8::internal::Symbol", %"class.v8::internal::Symbol"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 11
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %12 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %11, i64 0, i32 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %11, i64 0, i32 1, i64 0
  br label %29

19:                                               ; preds = %13, %2
  %20 = and i32 %10, -262144
  %21 = zext i32 %20 to i64
  %22 = or i64 %7, %21
  %23 = or i64 %22, 16
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %24, align 16
  %26 = add i64 %25, -41416
  %27 = inttoptr i64 %26 to %"class.v8::internal::Isolate"*
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %29

29:                                               ; preds = %17, %19
  %30 = phi i64* [ %28, %19 ], [ %18, %17 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 4
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %10, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %29
  %36 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  %37 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = load i64, i64* %5, align 8
  %39 = and i64 %38, -4294967296
  %40 = add i64 %38, 11
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %39, %43
  %45 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %44, i64* %45, align 8
  %46 = add i64 %44, 7
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  call void @_ZN2v88internal6String9PrintUC16ERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEEii(%"class.v8::internal::String"* nonnull %3, %"class.std::__1::basic_ostream"* dereferenceable(160) %1, i32 0, i32 %48) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br label %55

49:                                               ; preds = %29
  %50 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.409, i64 0, i64 0), i64 2) #11
  %51 = tail call i8* @_ZNK2v88internal6Symbol19PrivateSymbolToNameEv(%"class.v8::internal::Symbol"* %0)
  %52 = tail call i64 @strlen(i8* %51) #11
  %53 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* %51, i64 %52) #11
  %54 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.247, i64 0, i64 0), i64 1) #11
  br label %55

55:                                               ; preds = %49, %35
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #11
  ret void
}

declare void @_ZN2v88internal10HeapNumber20HeapNumberShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::HeapNumber"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #1

declare void @_ZN2v88internal6BigInt16BigIntShortPrintERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::BigInt"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14MegaDomHandler17BriefPrintDetailsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::MegaDomHandler"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Brief", align 8
  %4 = alloca %"struct.v8::internal::Brief", align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.244, i64 0, i64 0), i64 1) #11
  %6 = bitcast %"struct.v8::internal::Brief"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.v8::internal::MegaDomHandler", %"class.v8::internal::MegaDomHandler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %3, i64 0, i32 0
  store i64 %14, i64* %15, align 8
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %5, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %3)
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.290, i64 0, i64 0), i64 2) #11
  %18 = bitcast %"struct.v8::internal::Brief"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = load i64, i64* %7, align 8
  %20 = and i64 %19, -4294967296
  %21 = add i64 %19, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %4, i64 0, i32 0
  store i64 %25, i64* %26, align 8
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10HeapObject7IterateEPNS0_13ObjectVisitorE(%"class.v8::internal::HeapObject"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %1 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %6, i64 17
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %1, i64 %4) #11
  %9 = load i64, i64* %3, align 8
  %10 = and i64 %9, -4294967296
  %11 = add i64 %9, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = tail call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %0, i64 %15) #11
  %17 = add i64 %15, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = load i64, i64* %3, align 8
  tail call void @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_13ObjectVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext %19, i64 %15, i64 %20, i32 %16, %"class.v8::internal::ObjectVisitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10HeapObject11IterateBodyEPNS0_13ObjectVisitorE(%"class.v8::internal::HeapObject"*, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = tail call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %0, i64 %10)
  %12 = add i64 %10, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = load i64, i64* %3, align 8
  tail call void @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_13ObjectVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext %14, i64 %10, i64 %15, i32 %11, %"class.v8::internal::ObjectVisitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = add i64 %1, 3
  %4 = inttoptr i64 %3 to i8*
  %5 = load atomic i8, i8* %4 monotonic, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw nsw i32 %6, 2
  %8 = icmp eq i8 %5, 0
  br i1 %8, label %9, label %454

9:                                                ; preds = %2
  %10 = add i64 %1, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = add i16 %12, -119
  %14 = icmp ult i16 %13, 13
  br i1 %14, label %15, label %24

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 3
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 acquire, align 4
  %21 = lshr i32 %20, 1
  %22 = shl i32 %21, 2
  %23 = add nsw i32 %22, 8
  br label %454

24:                                               ; preds = %9
  %25 = add i16 %12, -137
  %26 = icmp ult i16 %25, 10
  br i1 %26, label %27, label %38

27:                                               ; preds = %24
  %28 = icmp eq i16 %12, 144
  br i1 %28, label %454, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 3
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = lshr i32 %34, 1
  %36 = shl i32 %35, 2
  %37 = add nsw i32 %36, 8
  br label %454

38:                                               ; preds = %24
  switch i16 %12, label %103 [
    i16 40, label %39
    i16 8, label %39
    i16 132, label %47
    i16 133, label %56
    i16 169, label %65
    i16 32, label %72
    i16 0, label %72
    i16 134, label %81
    i16 166, label %90
  ]

39:                                               ; preds = %38, %38
  %40 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 acquire, align 4
  %45 = add i32 %44, 15
  %46 = and i32 %45, -4
  br label %454

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 3
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = ashr i32 %52, 1
  %54 = add nsw i32 %53, 11
  %55 = and i32 %54, -4
  br label %454

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 3
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 acquire, align 4
  %62 = ashr i32 %61, 1
  %63 = add nsw i32 %62, 37
  %64 = and i32 %63, -4
  br label %454

65:                                               ; preds = %38
  %66 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 3
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = ashr i32 %70, 1
  br label %454

72:                                               ; preds = %38, %38
  %73 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 acquire, align 4
  %78 = shl i32 %77, 1
  %79 = add i32 %78, 15
  %80 = and i32 %79, -4
  br label %454

81:                                               ; preds = %38
  %82 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 3
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 acquire, align 4
  %87 = lshr i32 %86, 1
  %88 = shl i32 %87, 3
  %89 = add nsw i32 %88, 8
  br label %454

90:                                               ; preds = %38
  %91 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 3
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 acquire, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %454, label %97

97:                                               ; preds = %90
  %98 = add nsw i32 %95, -1
  %99 = sdiv i32 %98, 6
  %100 = shl nsw i32 %99, 2
  %101 = add i32 %100, 19
  %102 = and i32 %101, -4
  br label %454

103:                                              ; preds = %38
  %104 = add i16 %12, -153
  %105 = icmp ult i16 %104, 2
  br i1 %105, label %106, label %115

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 3
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = sext i16 %111 to i32
  %113 = mul nsw i32 %112, 12
  %114 = add nsw i32 %113, 16
  br label %454

115:                                              ; preds = %103
  %116 = add i16 %12, -159
  %117 = icmp ult i16 %116, 2
  br i1 %117, label %118, label %127

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 3
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 acquire, align 4
  %124 = lshr i32 %123, 1
  %125 = shl i32 %124, 2
  %126 = add nsw i32 %125, 8
  br label %454

127:                                              ; preds = %115
  switch i16 %12, label %445 [
    i16 184, label %128
    i16 151, label %137
    i16 150, label %148
    i16 152, label %159
    i16 183, label %170
    i16 176, label %179
    i16 167, label %188
    i16 65, label %196
    i16 175, label %205
    i16 67, label %454
    i16 186, label %411
    i16 159, label %218
    i16 136, label %227
    i16 178, label %236
    i16 153, label %310
    i16 154, label %319
    i16 173, label %328
    i16 179, label %329
    i16 158, label %330
    i16 157, label %331
    i16 174, label %454
    i16 170, label %332
    i16 181, label %333
    i16 180, label %334
    i16 147, label %335
    i16 148, label %336
    i16 68, label %337
    i16 69, label %338
    i16 135, label %339
    i16 171, label %348
    i16 149, label %357
    i16 182, label %358
    i16 162, label %359
    i16 164, label %371
    i16 187, label %379
  ]

128:                                              ; preds = %127
  %129 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 3
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = lshr i32 %133, 1
  %135 = shl i32 %134, 2
  %136 = add nsw i32 %135, 12
  br label %454

137:                                              ; preds = %127
  %138 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 5
  %141 = inttoptr i64 %140 to i8*
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = mul nuw nsw i32 %143, 10
  %145 = add nuw nsw i32 %143, 11
  %146 = add nuw nsw i32 %145, %144
  %147 = and i32 %146, 8188
  br label %454

148:                                              ; preds = %127
  %149 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 5
  %152 = inttoptr i64 %151 to i8*
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i32
  %155 = mul nuw nsw i32 %154, 18
  %156 = add nuw nsw i32 %154, 11
  %157 = add nuw nsw i32 %156, %155
  %158 = and i32 %157, 16380
  br label %454

159:                                              ; preds = %127
  %160 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, 9
  %163 = inttoptr i64 %162 to i8*
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i32
  %166 = mul nuw nsw i32 %165, 26
  %167 = add nuw nsw i32 %165, 15
  %168 = add nuw nsw i32 %167, %166
  %169 = and i32 %168, 16380
  br label %454

170:                                              ; preds = %127
  %171 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = add i64 %172, 7
  %174 = inttoptr i64 %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = mul i32 %175, 9
  %177 = add i32 %175, 32
  %178 = add i32 %177, %176
  br label %454

179:                                              ; preds = %127
  %180 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 3
  %183 = inttoptr i64 %182 to i32*
  %184 = load atomic i32, i32* %183 acquire, align 4
  %185 = shl i32 %184, 1
  %186 = and i32 %185, 4092
  %187 = add nuw nsw i32 %186, 8
  br label %454

188:                                              ; preds = %127
  %189 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = add i64 %190, 3
  %192 = inttoptr i64 %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = shl i32 %193, 2
  %195 = add nsw i32 %194, 32
  br label %454

196:                                              ; preds = %127
  %197 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %198 = load i64, i64* %197, align 8
  %199 = add i64 %198, 3
  %200 = inttoptr i64 %199 to i32*
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = lshr i32 %201, 1
  %203 = shl i32 %202, 3
  %204 = add nsw i32 %203, 8
  br label %454

205:                                              ; preds = %127
  %206 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %207 = load i64, i64* %206, align 8
  %208 = add i64 %207, 3
  %209 = inttoptr i64 %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = add i64 %207, 7
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = add i32 %210, 15
  %215 = and i32 %214, -4
  %216 = shl i32 %213, 2
  %217 = add nsw i32 %215, %216
  br label %454

218:                                              ; preds = %127
  %219 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %220 = load i64, i64* %219, align 8
  %221 = add i64 %220, 3
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 acquire, align 4
  %224 = lshr i32 %223, 1
  %225 = shl i32 %224, 2
  %226 = add nsw i32 %225, 8
  br label %454

227:                                              ; preds = %127
  %228 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %229 = load i64, i64* %228, align 8
  %230 = add i64 %229, 3
  %231 = inttoptr i64 %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = lshr i32 %232, 1
  %234 = shl i32 %233, 2
  %235 = add nsw i32 %234, 16
  br label %454

236:                                              ; preds = %127
  %237 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %238 = load i64, i64* %237, align 8
  %239 = add i64 %238, 11
  %240 = inttoptr i64 %239 to i32*
  %241 = load i32, i32* %240, align 4, !noalias !6
  %242 = ashr i32 %241, 1
  %243 = sext i32 %242 to i64
  %244 = shl nsw i64 %243, 3
  %245 = add nsw i64 %244, 16
  %246 = add i64 %238, 3
  %247 = inttoptr i64 %246 to i32*
  %248 = load i32, i32* %247, align 4, !noalias !29
  %249 = lshr i32 %248, 9
  %250 = and i32 %249, 4
  %251 = zext i32 %250 to i64
  %252 = or i64 %245, %251
  %253 = lshr i32 %248, 8
  %254 = and i32 %253, 3
  %255 = add nsw i32 %254, -1
  %256 = icmp ult i32 %255, 2
  %257 = zext i1 %256 to i64
  %258 = and i32 %248, 24576
  %259 = icmp ne i32 %258, 0
  %260 = zext i1 %259 to i64
  %261 = shl nuw nsw i64 %260, 3
  %262 = lshr i32 %248, 13
  %263 = and i32 %262, 4
  %264 = lshr i32 %248, 1
  %265 = and i32 %264, 15
  switch i32 %265, label %266 [
    i32 2, label %270
    i32 4, label %270
    i32 1, label %270
  ]

266:                                              ; preds = %236
  %267 = icmp eq i32 %265, 3
  %268 = zext i1 %267 to i64
  %269 = shl nuw nsw i64 %268, 3
  br label %270

270:                                              ; preds = %266, %236, %236, %236
  %271 = phi i64 [ 8, %236 ], [ %269, %266 ], [ 8, %236 ], [ 8, %236 ]
  %272 = lshr i32 %248, 21
  %273 = and i32 %272, 4
  %274 = add nuw nsw i32 %273, %263
  %275 = lshr i32 %248, 27
  %276 = and i32 %275, 4
  %277 = add nuw nsw i32 %274, %276
  %278 = zext i32 %277 to i64
  %279 = and i32 %248, 30
  %280 = icmp eq i32 %279, 6
  %281 = zext i1 %280 to i64
  %282 = add nuw nsw i64 %257, %281
  %283 = shl nuw nsw i64 %282, 2
  %284 = add nsw i64 %261, %252
  %285 = add nsw i64 %284, %278
  %286 = add nsw i64 %285, %283
  %287 = shl nuw nsw i64 %281, 2
  %288 = add i64 %286, %287
  %289 = add i64 %288, %271
  br i1 %280, label %290, label %306

290:                                              ; preds = %270
  switch i32 %265, label %291 [
    i32 2, label %295
    i32 4, label %295
    i32 1, label %295
  ]

291:                                              ; preds = %290
  %292 = icmp eq i32 %265, 3
  %293 = zext i1 %292 to i64
  %294 = shl nuw nsw i64 %293, 3
  br label %295

295:                                              ; preds = %291, %290, %290, %290
  %296 = phi i64 [ 8, %290 ], [ %294, %291 ], [ 8, %290 ], [ 8, %290 ]
  %297 = add i64 %296, %286
  %298 = add i64 %238, -1
  %299 = shl i64 %297, 32
  %300 = ashr exact i64 %299, 32
  %301 = add i64 %298, %300
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4, !noalias !30
  %304 = ashr i32 %303, 1
  %305 = mul i32 %304, 12
  br label %306

306:                                              ; preds = %270, %295
  %307 = phi i32 [ %305, %295 ], [ 0, %270 ]
  %308 = trunc i64 %289 to i32
  %309 = add nsw i32 %307, %308
  br label %454

310:                                              ; preds = %127
  %311 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %312 = load i64, i64* %311, align 8
  %313 = add i64 %312, 3
  %314 = inttoptr i64 %313 to i16*
  %315 = load i16, i16* %314, align 2
  %316 = zext i16 %315 to i32
  %317 = mul nuw nsw i32 %316, 12
  %318 = add nuw nsw i32 %317, 16
  br label %454

319:                                              ; preds = %127
  %320 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 3
  %323 = inttoptr i64 %322 to i16*
  %324 = load atomic i16, i16* %323 monotonic, align 2
  %325 = sext i16 %324 to i32
  %326 = mul nsw i32 %325, 12
  %327 = add nsw i32 %326, 16
  br label %454

328:                                              ; preds = %127
  br label %454

329:                                              ; preds = %127
  br label %454

330:                                              ; preds = %127
  br label %454

331:                                              ; preds = %127
  br label %454

332:                                              ; preds = %127
  br label %454

333:                                              ; preds = %127
  br label %454

334:                                              ; preds = %127
  br label %454

335:                                              ; preds = %127
  br label %454

336:                                              ; preds = %127
  br label %454

337:                                              ; preds = %127
  br label %454

338:                                              ; preds = %127
  br label %454

339:                                              ; preds = %127
  %340 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %341 = load i64, i64* %340, align 8
  %342 = add i64 %341, 3
  %343 = inttoptr i64 %342 to i32*
  %344 = load i32, i32* %343, align 4
  %345 = lshr i32 %344, 1
  %346 = shl i32 %345, 2
  %347 = add nsw i32 %346, 16
  br label %454

348:                                              ; preds = %127
  %349 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %350 = load i64, i64* %349, align 8
  %351 = add i64 %350, 11
  %352 = inttoptr i64 %351 to i32*
  %353 = load i32, i32* %352, align 4
  %354 = ashr i32 %353, 1
  %355 = mul i32 %354, 12
  %356 = add i32 %355, 24
  br label %454

357:                                              ; preds = %127
  br label %454

358:                                              ; preds = %127
  br label %454

359:                                              ; preds = %127
  %360 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %361 = load i64, i64* %360, align 8
  %362 = add i64 %361, 19
  %363 = inttoptr i64 %362 to i32*
  %364 = load i32, i32* %363, align 4
  %365 = add i64 %361, 23
  %366 = inttoptr i64 %365 to i32*
  %367 = load i32, i32* %366, align 4
  %368 = add i32 %364, 95
  %369 = add i32 %368, %367
  %370 = and i32 %369, -32
  br label %454

371:                                              ; preds = %127
  %372 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %373 = load i64, i64* %372, align 8
  %374 = add i64 %373, 3
  %375 = inttoptr i64 %374 to i32*
  %376 = load i32, i32* %375, align 4
  %377 = shl nsw i32 %376, 4
  %378 = or i32 %377, 8
  br label %454

379:                                              ; preds = %127
  %380 = and i64 %1, -4294967296
  %381 = add i64 %1, 19
  %382 = inttoptr i64 %381 to i32*
  %383 = load i32, i32* %382, align 4
  %384 = zext i32 %383 to i64
  %385 = or i64 %380, %384
  %386 = add i64 %385, -1
  %387 = inttoptr i64 %386 to i32*
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = zext i32 %388 to i64
  %390 = or i64 %380, %389
  %391 = and i64 %389, 3
  %392 = icmp eq i64 %391, 0
  %393 = add i64 %390, 1
  %394 = select i1 %392, i64 %393, i64 %385
  %395 = add i64 %394, 3
  %396 = inttoptr i64 %395 to %"class.v8::internal::wasm::StructType"**
  %397 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %396, align 1
  %398 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %397, i64 0, i32 0
  %399 = load i32, i32* %398, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %454, label %401

401:                                              ; preds = %379
  %402 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %397, i64 0, i32 1
  %403 = load i32*, i32** %402, align 8
  %404 = add i32 %399, -1
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds i32, i32* %403, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = add i32 %407, 8
  %409 = icmp sgt i32 %408, 8
  %410 = select i1 %409, i32 %408, i32 8
  br label %454

411:                                              ; preds = %127
  %412 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %413 = load i64, i64* %412, align 8
  %414 = add i64 %413, 7
  %415 = inttoptr i64 %414 to i32*
  %416 = load i32, i32* %415, align 4
  %417 = and i64 %1, -4294967296
  %418 = add i64 %1, 19
  %419 = inttoptr i64 %418 to i32*
  %420 = load i32, i32* %419, align 4
  %421 = zext i32 %420 to i64
  %422 = or i64 %417, %421
  %423 = add i64 %422, -1
  %424 = inttoptr i64 %423 to i32*
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = zext i32 %425 to i64
  %427 = or i64 %417, %426
  %428 = and i64 %426, 3
  %429 = icmp eq i64 %428, 0
  %430 = add i64 %427, 1
  %431 = select i1 %429, i64 %430, i64 %422
  %432 = add i64 %431, 3
  %433 = inttoptr i64 %432 to %"class.v8::internal::wasm::ArrayType"**
  %434 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %433, align 1
  %435 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %434, i64 0, i32 0, i32 0
  %436 = load i32, i32* %435, align 4
  %437 = and i32 %436, 31
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize, i64 0, i64 %438
  %440 = load i8, i8* %439, align 1
  %441 = sext i8 %440 to i32
  %442 = mul nsw i32 %416, %441
  %443 = add i32 %442, 15
  %444 = and i32 %443, -4
  br label %454

445:                                              ; preds = %127
  %446 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %447 = load i64, i64* %446, align 8
  %448 = add i64 %447, 3
  %449 = inttoptr i64 %448 to i32*
  %450 = load i32, i32* %449, align 4
  %451 = lshr i32 %450, 1
  %452 = shl i32 %451, 3
  %453 = add nsw i32 %452, 8
  br label %454

454:                                              ; preds = %127, %127, %401, %379, %97, %90, %15, %29, %39, %47, %56, %65, %72, %81, %106, %118, %128, %137, %148, %159, %170, %179, %188, %196, %205, %218, %227, %306, %310, %319, %328, %329, %330, %331, %332, %333, %334, %335, %336, %337, %338, %339, %348, %357, %358, %359, %371, %411, %445, %27, %2
  %455 = phi i32 [ %7, %2 ], [ %23, %15 ], [ %37, %29 ], [ %46, %39 ], [ %55, %47 ], [ %64, %56 ], [ %71, %65 ], [ %80, %72 ], [ %89, %81 ], [ %114, %106 ], [ %126, %118 ], [ %136, %128 ], [ %147, %137 ], [ %158, %148 ], [ %169, %159 ], [ %178, %170 ], [ %187, %179 ], [ %195, %188 ], [ %204, %196 ], [ %217, %205 ], [ %226, %218 ], [ %235, %227 ], [ %309, %306 ], [ %318, %310 ], [ %327, %319 ], [ 12, %328 ], [ 36, %329 ], [ 16, %330 ], [ 20, %331 ], [ 12, %332 ], [ 12, %333 ], [ 12, %334 ], [ 12, %335 ], [ 24, %336 ], [ 4, %337 ], [ 4, %338 ], [ %347, %339 ], [ %356, %348 ], [ 24, %357 ], [ 68, %358 ], [ %370, %359 ], [ %378, %371 ], [ %444, %411 ], [ %453, %445 ], [ 1036, %27 ], [ %102, %97 ], [ 12, %90 ], [ %410, %401 ], [ 8, %379 ], [ 28, %127 ], [ 28, %127 ]
  ret i32 %455
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10HeapObject11IterateBodyENS0_3MapEiPNS0_13ObjectVisitorE(%"class.v8::internal::HeapObject"* nocapture readonly, i64, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 align 2 {
  %5 = add i64 %1, 7
  %6 = inttoptr i64 %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_13ObjectVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext %7, i64 %1, i64 %9, i32 %2, %"class.v8::internal::ObjectVisitor"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10HeapObject11IsValidSlotENS0_3MapEi(%"class.v8::internal::HeapObject"* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = add i64 %1, 7
  %5 = inttoptr i64 %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = tail call zeroext i1 @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIsValidSlotEbNS0_3MapENS0_10HeapObjectEiiEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext %6, i64 %1, i64 %8, i32 %2, i32 0)
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIsValidSlotEbNS0_3MapENS0_10HeapObjectEiiEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext, i64, i64, i32, i32) local_unnamed_addr #0 comdat {
  %6 = zext i16 %0 to i32
  %7 = icmp ult i16 %0, 64
  br i1 %7, label %8, label %17

8:                                                ; preds = %5
  %9 = and i32 %6, 7
  switch i32 %9, label %16 [
    i32 0, label %443
    i32 1, label %10
    i32 5, label %12
    i32 3, label %14
    i32 2, label %443
  ]

10:                                               ; preds = %8
  %11 = icmp sgt i32 %3, 11
  br label %443

12:                                               ; preds = %8
  %13 = icmp sgt i32 %3, 11
  br label %443

14:                                               ; preds = %8
  %15 = icmp sgt i32 %3, 11
  br label %443

16:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

17:                                               ; preds = %5
  switch i16 %0, label %442 [
    i16 165, label %18
    i16 130, label %23
    i16 129, label %23
    i16 120, label %23
    i16 125, label %23
    i16 126, label %23
    i16 127, label %23
    i16 123, label %23
    i16 122, label %23
    i16 124, label %23
    i16 128, label %23
    i16 131, label %23
    i16 121, label %25
    i16 137, label %27
    i16 138, label %27
    i16 139, label %27
    i16 140, label %27
    i16 141, label %27
    i16 142, label %27
    i16 143, label %27
    i16 145, label %27
    i16 146, label %27
    i16 144, label %29
    i16 134, label %443
    i16 166, label %443
    i16 176, label %31
    i16 160, label %33
    i16 102, label %35
    i16 164, label %443
    i16 186, label %38
    i16 72, label %39
    i16 73, label %40
    i16 74, label %41
    i16 187, label %42
    i16 75, label %43
    i16 1056, label %44
    i16 1055, label %44
    i16 1042, label %44
    i16 1087, label %44
    i16 1085, label %44
    i16 1088, label %44
    i16 1053, label %44
    i16 1054, label %44
    i16 1058, label %44
    i16 1090, label %44
    i16 1091, label %44
    i16 1094, label %44
    i16 1095, label %44
    i16 1052, label %44
    i16 189, label %44
    i16 190, label %44
    i16 1043, label %44
    i16 1044, label %44
    i16 1074, label %44
    i16 1075, label %44
    i16 1081, label %44
    i16 1076, label %44
    i16 1098, label %44
    i16 191, label %44
    i16 1045, label %44
    i16 1057, label %44
    i16 1041, label %44
    i16 1046, label %44
    i16 1101, label %44
    i16 1047, label %44
    i16 1103, label %44
    i16 1102, label %44
    i16 1048, label %44
    i16 1077, label %44
    i16 1049, label %44
    i16 1082, label %44
    i16 1078, label %44
    i16 1040, label %44
    i16 1050, label %44
    i16 1108, label %44
    i16 1051, label %44
    i16 1109, label %44
    i16 1089, label %44
    i16 1092, label %44
    i16 1093, label %44
    i16 1096, label %44
    i16 1097, label %44
    i16 1099, label %44
    i16 1100, label %44
    i16 1104, label %44
    i16 1105, label %44
    i16 1106, label %44
    i16 1107, label %44
    i16 1111, label %44
    i16 1112, label %44
    i16 1114, label %44
    i16 1115, label %44
    i16 1116, label %44
    i16 1117, label %44
    i16 1113, label %71
    i16 1083, label %118
    i16 1084, label %118
    i16 1086, label %143
    i16 1079, label %172
    i16 1080, label %201
    i16 1059, label %232
    i16 1072, label %232
    i16 1073, label %232
    i16 1071, label %232
    i16 1070, label %232
    i16 1066, label %232
    i16 1067, label %232
    i16 1064, label %232
    i16 1068, label %232
    i16 1065, label %232
    i16 1062, label %232
    i16 1063, label %232
    i16 1069, label %232
    i16 1061, label %232
    i16 1060, label %232
    i16 185, label %259
    i16 1110, label %261
    i16 188, label %286
    i16 70, label %443
    i16 172, label %289
    i16 162, label %292
    i16 161, label %293
    i16 177, label %296
    i16 64, label %299
    i16 133, label %302
    i16 151, label %305
    i16 150, label %315
    i16 152, label %325
    i16 183, label %335
    i16 163, label %344
    i16 175, label %347
    i16 66, label %443
    i16 168, label %443
    i16 132, label %443
    i16 169, label %443
    i16 65, label %443
    i16 90, label %354
    i16 76, label %364
    i16 77, label %364
    i16 78, label %364
    i16 79, label %364
    i16 80, label %364
    i16 83, label %364
    i16 84, label %364
    i16 85, label %364
    i16 86, label %364
    i16 87, label %364
    i16 88, label %364
    i16 89, label %364
    i16 91, label %364
    i16 92, label %364
    i16 93, label %364
    i16 94, label %364
    i16 95, label %364
    i16 96, label %364
    i16 97, label %364
    i16 99, label %364
    i16 100, label %364
    i16 101, label %364
    i16 103, label %364
    i16 104, label %364
    i16 105, label %364
    i16 106, label %364
    i16 107, label %364
    i16 108, label %364
    i16 109, label %364
    i16 110, label %364
    i16 111, label %364
    i16 112, label %364
    i16 113, label %364
    i16 114, label %364
    i16 115, label %364
    i16 116, label %364
    i16 117, label %364
    i16 118, label %364
    i16 98, label %371
    i16 81, label %373
    i16 82, label %373
    i16 155, label %375
    i16 156, label %381
    i16 67, label %387
    i16 119, label %389
    i16 159, label %391
    i16 136, label %393
    i16 178, label %395
    i16 153, label %397
    i16 154, label %399
    i16 167, label %401
    i16 184, label %403
    i16 173, label %405
    i16 179, label %407
    i16 158, label %409
    i16 157, label %412
    i16 174, label %416
    i16 170, label %418
    i16 181, label %420
    i16 180, label %422
    i16 147, label %424
    i16 148, label %426
    i16 68, label %443
    i16 69, label %443
    i16 135, label %431
    i16 171, label %433
    i16 149, label %435
    i16 182, label %440
  ]

18:                                               ; preds = %17
  %19 = icmp slt i32 %3, 8
  %20 = and i32 %3, 7
  %21 = icmp eq i32 %20, 0
  %22 = or i1 %19, %21
  br label %443

23:                                               ; preds = %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17
  %24 = icmp sgt i32 %3, 3
  br label %443

25:                                               ; preds = %17
  %26 = icmp sgt i32 %3, 7
  br label %443

27:                                               ; preds = %17, %17, %17, %17, %17, %17, %17, %17, %17
  %28 = icmp sgt i32 %3, 3
  br label %443

29:                                               ; preds = %17
  %30 = icmp slt i32 %3, 1028
  br label %443

31:                                               ; preds = %17
  %32 = icmp sgt i32 %3, 7
  br label %443

33:                                               ; preds = %17
  %34 = icmp sgt i32 %3, 3
  br label %443

35:                                               ; preds = %17
  %36 = and i32 %3, -4
  %37 = icmp eq i32 %36, 4
  br label %443

38:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

39:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

40:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

41:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

42:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

43:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

44:                                               ; preds = %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17
  %45 = icmp slt i32 %3, 4
  br i1 %45, label %443, label %46

46:                                               ; preds = %44
  %47 = add i64 %1, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 1057
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = add i64 %1, 9
  %53 = inttoptr i64 %52 to i8*
  %54 = load atomic i8, i8* %53 monotonic, align 1
  %55 = icmp slt i8 %54, 0
  %56 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %49, i1 zeroext %55) #11
  br label %57

57:                                               ; preds = %51, %46
  %58 = phi i32 [ %56, %51 ], [ 12, %46 ]
  %59 = add i64 %1, 4
  %60 = inttoptr i64 %59 to i8*
  %61 = load atomic i8, i8* %60 monotonic, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 2
  %64 = icmp sle i32 %58, %3
  %65 = icmp sgt i32 %63, %3
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %443

67:                                               ; preds = %57
  %68 = sub nsw i32 %3, %58
  %69 = and i32 %68, 7
  %70 = icmp eq i32 %69, 0
  br label %443

71:                                               ; preds = %17
  %72 = icmp slt i32 %3, 16
  br i1 %72, label %73, label %93

73:                                               ; preds = %71
  %74 = trunc i32 %3 to i16
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i16* [ getelementptr inbounds ([15 x i16], [15 x i16]* @_ZN2v88internal18WasmInstanceObject19kTaggedFieldOffsetsE, i64 0, i64 0), %73 ], [ %86, %75 ]
  %77 = phi i64 [ 15, %73 ], [ %85, %75 ]
  %78 = lshr i64 %77, 1
  %79 = getelementptr inbounds i16, i16* %76, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp ult i16 %80, %74
  %82 = getelementptr inbounds i16, i16* %79, i64 1
  %83 = xor i64 %78, -1
  %84 = add i64 %77, %83
  %85 = select i1 %81, i64 %84, i64 %78
  %86 = select i1 %81, i16* %82, i16* %76
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %75
  %89 = icmp eq i16* %86, getelementptr inbounds ([15 x i16], [15 x i16]* @_ZN2v88internal18WasmInstanceObject19kTaggedFieldOffsetsE, i64 1, i64 0)
  br i1 %89, label %93, label %90

90:                                               ; preds = %88
  %91 = load i16, i16* %86, align 2
  %92 = icmp ugt i16 %91, %74
  br i1 %92, label %93, label %443

93:                                               ; preds = %90, %88, %71
  %94 = add i64 %1, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = icmp eq i16 %96, 1057
  br i1 %97, label %104, label %98

98:                                               ; preds = %93
  %99 = add i64 %1, 9
  %100 = inttoptr i64 %99 to i8*
  %101 = load atomic i8, i8* %100 monotonic, align 1
  %102 = icmp slt i8 %101, 0
  %103 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %96, i1 zeroext %102) #11
  br label %104

104:                                              ; preds = %98, %93
  %105 = phi i32 [ %103, %98 ], [ 12, %93 ]
  %106 = add i64 %1, 4
  %107 = inttoptr i64 %106 to i8*
  %108 = load atomic i8, i8* %107 monotonic, align 1
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 2
  %111 = icmp sle i32 %105, %3
  %112 = icmp sgt i32 %110, %3
  %113 = and i1 %111, %112
  br i1 %113, label %114, label %443

114:                                              ; preds = %104
  %115 = sub nsw i32 %3, %105
  %116 = and i32 %115, 7
  %117 = icmp eq i32 %116, 0
  br label %443

118:                                              ; preds = %17, %17
  %119 = add i64 %1, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load atomic i16, i16* %120 monotonic, align 2
  %122 = icmp eq i16 %121, 1057
  br i1 %122, label %129, label %123

123:                                              ; preds = %118
  %124 = add i64 %1, 9
  %125 = inttoptr i64 %124 to i8*
  %126 = load atomic i8, i8* %125 monotonic, align 1
  %127 = icmp slt i8 %126, 0
  %128 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %121, i1 zeroext %127) #11
  br label %129

129:                                              ; preds = %123, %118
  %130 = phi i32 [ %128, %123 ], [ 12, %118 ]
  %131 = add i64 %1, 4
  %132 = inttoptr i64 %131 to i8*
  %133 = load atomic i8, i8* %132 monotonic, align 1
  %134 = zext i8 %133 to i32
  %135 = shl nuw nsw i32 %134, 2
  %136 = icmp sle i32 %130, %3
  %137 = icmp sgt i32 %135, %3
  %138 = and i1 %136, %137
  br i1 %138, label %139, label %443

139:                                              ; preds = %129
  %140 = sub nsw i32 %3, %130
  %141 = and i32 %140, 7
  %142 = icmp eq i32 %141, 0
  br label %443

143:                                              ; preds = %17
  %144 = icmp slt i32 %3, 12
  br i1 %144, label %443, label %145

145:                                              ; preds = %143
  %146 = icmp slt i32 %3, 48
  br i1 %146, label %443, label %147

147:                                              ; preds = %145
  %148 = add i64 %1, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = icmp eq i16 %150, 1057
  br i1 %151, label %158, label %152

152:                                              ; preds = %147
  %153 = add i64 %1, 9
  %154 = inttoptr i64 %153 to i8*
  %155 = load atomic i8, i8* %154 monotonic, align 1
  %156 = icmp slt i8 %155, 0
  %157 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %150, i1 zeroext %156) #11
  br label %158

158:                                              ; preds = %152, %147
  %159 = phi i32 [ %157, %152 ], [ 12, %147 ]
  %160 = add i64 %1, 4
  %161 = inttoptr i64 %160 to i8*
  %162 = load atomic i8, i8* %161 monotonic, align 1
  %163 = zext i8 %162 to i32
  %164 = shl nuw nsw i32 %163, 2
  %165 = icmp sle i32 %159, %3
  %166 = icmp sgt i32 %164, %3
  %167 = and i1 %165, %166
  br i1 %167, label %168, label %443

168:                                              ; preds = %158
  %169 = sub nsw i32 %3, %159
  %170 = and i32 %169, 7
  %171 = icmp eq i32 %170, 0
  br label %443

172:                                              ; preds = %17
  %173 = icmp slt i32 %3, 16
  br i1 %173, label %443, label %174

174:                                              ; preds = %172
  %175 = icmp slt i32 %3, 40
  br i1 %175, label %443, label %176

176:                                              ; preds = %174
  %177 = add i64 %1, 7
  %178 = inttoptr i64 %177 to i16*
  %179 = load atomic i16, i16* %178 monotonic, align 2
  %180 = icmp eq i16 %179, 1057
  br i1 %180, label %187, label %181

181:                                              ; preds = %176
  %182 = add i64 %1, 9
  %183 = inttoptr i64 %182 to i8*
  %184 = load atomic i8, i8* %183 monotonic, align 1
  %185 = icmp slt i8 %184, 0
  %186 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %179, i1 zeroext %185) #11
  br label %187

187:                                              ; preds = %181, %176
  %188 = phi i32 [ %186, %181 ], [ 12, %176 ]
  %189 = add i64 %1, 4
  %190 = inttoptr i64 %189 to i8*
  %191 = load atomic i8, i8* %190 monotonic, align 1
  %192 = zext i8 %191 to i32
  %193 = shl nuw nsw i32 %192, 2
  %194 = icmp sle i32 %188, %3
  %195 = icmp sgt i32 %193, %3
  %196 = and i1 %194, %195
  br i1 %196, label %197, label %443

197:                                              ; preds = %187
  %198 = sub nsw i32 %3, %188
  %199 = and i32 %198, 7
  %200 = icmp eq i32 %199, 0
  br label %443

201:                                              ; preds = %17
  %202 = icmp slt i32 %3, 16
  %203 = icmp eq i32 %3, 48
  %204 = or i1 %202, %203
  br i1 %204, label %443, label %205

205:                                              ; preds = %201
  %206 = icmp slt i32 %3, 56
  br i1 %206, label %443, label %207

207:                                              ; preds = %205
  %208 = add i64 %1, 7
  %209 = inttoptr i64 %208 to i16*
  %210 = load atomic i16, i16* %209 monotonic, align 2
  %211 = icmp eq i16 %210, 1057
  br i1 %211, label %218, label %212

212:                                              ; preds = %207
  %213 = add i64 %1, 9
  %214 = inttoptr i64 %213 to i8*
  %215 = load atomic i8, i8* %214 monotonic, align 1
  %216 = icmp slt i8 %215, 0
  %217 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %210, i1 zeroext %216) #11
  br label %218

218:                                              ; preds = %212, %207
  %219 = phi i32 [ %217, %212 ], [ 12, %207 ]
  %220 = add i64 %1, 4
  %221 = inttoptr i64 %220 to i8*
  %222 = load atomic i8, i8* %221 monotonic, align 1
  %223 = zext i8 %222 to i32
  %224 = shl nuw nsw i32 %223, 2
  %225 = icmp sle i32 %219, %3
  %226 = icmp sgt i32 %224, %3
  %227 = and i1 %225, %226
  br i1 %227, label %228, label %443

228:                                              ; preds = %218
  %229 = sub nsw i32 %3, %219
  %230 = and i32 %229, 7
  %231 = icmp eq i32 %230, 0
  br label %443

232:                                              ; preds = %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17
  %233 = icmp slt i32 %3, 4
  br i1 %233, label %443, label %234

234:                                              ; preds = %232
  %235 = add i64 %1, 7
  %236 = inttoptr i64 %235 to i16*
  %237 = load atomic i16, i16* %236 monotonic, align 2
  %238 = icmp eq i16 %237, 1057
  br i1 %238, label %245, label %239

239:                                              ; preds = %234
  %240 = add i64 %1, 9
  %241 = inttoptr i64 %240 to i8*
  %242 = load atomic i8, i8* %241 monotonic, align 1
  %243 = icmp slt i8 %242, 0
  %244 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %237, i1 zeroext %243) #11
  br label %245

245:                                              ; preds = %239, %234
  %246 = phi i32 [ %244, %239 ], [ 12, %234 ]
  %247 = add i64 %1, 4
  %248 = inttoptr i64 %247 to i8*
  %249 = load atomic i8, i8* %248 monotonic, align 1
  %250 = zext i8 %249 to i32
  %251 = shl nuw nsw i32 %250, 2
  %252 = icmp sle i32 %246, %3
  %253 = icmp sgt i32 %251, %3
  %254 = and i1 %252, %253
  br i1 %254, label %255, label %443

255:                                              ; preds = %245
  %256 = sub nsw i32 %3, %246
  %257 = and i32 %256, 7
  %258 = icmp eq i32 %257, 0
  br label %443

259:                                              ; preds = %17
  %260 = icmp sgt i32 %3, 3
  br label %443

261:                                              ; preds = %17
  %262 = add i64 %1, 7
  %263 = inttoptr i64 %262 to i16*
  %264 = load atomic i16, i16* %263 monotonic, align 2
  %265 = icmp eq i16 %264, 1057
  br i1 %265, label %272, label %266

266:                                              ; preds = %261
  %267 = add i64 %1, 9
  %268 = inttoptr i64 %267 to i8*
  %269 = load atomic i8, i8* %268 monotonic, align 1
  %270 = icmp slt i8 %269, 0
  %271 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %264, i1 zeroext %270) #11
  br label %272

272:                                              ; preds = %266, %261
  %273 = phi i32 [ %271, %266 ], [ 12, %261 ]
  %274 = add i64 %1, 4
  %275 = inttoptr i64 %274 to i8*
  %276 = load atomic i8, i8* %275 monotonic, align 1
  %277 = zext i8 %276 to i32
  %278 = shl nuw nsw i32 %277, 2
  %279 = icmp sle i32 %273, %3
  %280 = icmp sgt i32 %278, %3
  %281 = and i1 %279, %280
  br i1 %281, label %282, label %443

282:                                              ; preds = %272
  %283 = sub nsw i32 %3, %273
  %284 = and i32 %283, 7
  %285 = icmp eq i32 %284, 0
  br label %443

286:                                              ; preds = %17
  %287 = add i32 %3, -4
  %288 = icmp ult i32 %287, 12
  br label %443

289:                                              ; preds = %17
  %290 = add i32 %3, -16
  %291 = icmp ult i32 %290, 24
  br label %443

292:                                              ; preds = %17
  br label %443

293:                                              ; preds = %17
  %294 = and i32 %3, -4
  %295 = icmp eq i32 %294, 4
  br label %443

296:                                              ; preds = %17
  %297 = add i32 %3, -4
  %298 = icmp ult i32 %297, 16
  br label %443

299:                                              ; preds = %17
  %300 = and i32 %3, -4
  %301 = icmp eq i32 %300, 12
  br label %443

302:                                              ; preds = %17
  %303 = add i32 %3, -8
  %304 = icmp ult i32 %303, 9
  br label %443

305:                                              ; preds = %17
  %306 = icmp slt i32 %3, 8
  br i1 %306, label %443, label %307

307:                                              ; preds = %305
  %308 = add i64 %2, 5
  %309 = inttoptr i64 %308 to i8*
  %310 = load i8, i8* %309, align 1
  %311 = zext i8 %310 to i32
  %312 = shl nuw nsw i32 %311, 3
  %313 = add nuw nsw i32 %312, 8
  %314 = icmp sgt i32 %313, %3
  br label %443

315:                                              ; preds = %17
  %316 = icmp slt i32 %3, 8
  br i1 %316, label %443, label %317

317:                                              ; preds = %315
  %318 = add i64 %2, 5
  %319 = inttoptr i64 %318 to i8*
  %320 = load i8, i8* %319, align 1
  %321 = zext i8 %320 to i32
  %322 = shl nuw nsw i32 %321, 4
  %323 = or i32 %322, 8
  %324 = icmp sgt i32 %323, %3
  br label %443

325:                                              ; preds = %17
  %326 = icmp slt i32 %3, 12
  br i1 %326, label %443, label %327

327:                                              ; preds = %325
  %328 = add i64 %2, 9
  %329 = inttoptr i64 %328 to i8*
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = mul nuw nsw i32 %331, 24
  %333 = add nuw nsw i32 %332, 12
  %334 = icmp sgt i32 %333, %3
  br label %443

335:                                              ; preds = %17
  %336 = icmp slt i32 %3, 12
  br i1 %336, label %443, label %337

337:                                              ; preds = %335
  %338 = add i64 %2, 7
  %339 = inttoptr i64 %338 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = shl i32 %340, 3
  %342 = add nsw i32 %341, 16
  %343 = icmp sgt i32 %342, %3
  br label %443

344:                                              ; preds = %17
  %345 = add i32 %3, -4
  %346 = icmp ult i32 %345, 8
  br label %443

347:                                              ; preds = %17
  %348 = add i64 %2, 3
  %349 = inttoptr i64 %348 to i32*
  %350 = load i32, i32* %349, align 4
  %351 = add i32 %350, 15
  %352 = and i32 %351, -4
  %353 = icmp sle i32 %352, %3
  br label %443

354:                                              ; preds = %17
  %355 = add i32 %3, -4
  %356 = icmp ult i32 %355, 12
  br i1 %356, label %443, label %357

357:                                              ; preds = %354
  %358 = add i64 %1, 3
  %359 = inttoptr i64 %358 to i8*
  %360 = load atomic i8, i8* %359 monotonic, align 1
  %361 = icmp eq i8 %360, 7
  %362 = icmp eq i32 %3, 24
  %363 = and i1 %362, %361
  br label %443

364:                                              ; preds = %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17
  switch i16 %0, label %369 [
    i16 110, label %365
    i16 118, label %367
  ]

365:                                              ; preds = %364
  %366 = icmp sgt i32 %3, 3
  br label %443

367:                                              ; preds = %364
  %368 = icmp sgt i32 %3, 23
  br label %443

369:                                              ; preds = %364
  %370 = icmp sgt i32 %3, 3
  br label %443

371:                                              ; preds = %17
  %372 = icmp sgt i32 %3, 3
  br label %443

373:                                              ; preds = %17, %17
  %374 = icmp sgt i32 %3, 3
  br label %443

375:                                              ; preds = %17
  %376 = add i32 %3, -4
  %377 = icmp ult i32 %376, 24
  %378 = add i32 %3, -28
  %379 = icmp ult i32 %378, 44
  %380 = or i1 %377, %379
  br label %443

381:                                              ; preds = %17
  %382 = add i32 %3, -4
  %383 = icmp ult i32 %382, 24
  %384 = add i32 %3, -28
  %385 = icmp ult i32 %384, 12
  %386 = or i1 %383, %385
  br label %443

387:                                              ; preds = %17
  %388 = icmp sgt i32 %3, 11
  br label %443

389:                                              ; preds = %17
  %390 = icmp sgt i32 %3, 3
  br label %443

391:                                              ; preds = %17
  %392 = icmp sgt i32 %3, 3
  br label %443

393:                                              ; preds = %17
  %394 = icmp sgt i32 %3, 3
  br label %443

395:                                              ; preds = %17
  %396 = icmp sgt i32 %3, 3
  br label %443

397:                                              ; preds = %17
  %398 = icmp sgt i32 %3, 11
  br label %443

399:                                              ; preds = %17
  %400 = icmp sgt i32 %3, 11
  br label %443

401:                                              ; preds = %17
  %402 = icmp sgt i32 %3, 19
  br label %443

403:                                              ; preds = %17
  %404 = icmp sgt i32 %3, 3
  br label %443

405:                                              ; preds = %17
  %406 = icmp sgt i32 %3, 3
  br label %443

407:                                              ; preds = %17
  %408 = icmp ult i32 %3, 20
  br label %443

409:                                              ; preds = %17
  %410 = and i32 %3, -4
  %411 = icmp eq i32 %410, 4
  br label %443

412:                                              ; preds = %17
  %413 = lshr i32 %3, 2
  %414 = or i32 %413, 1
  %415 = icmp ne i32 %414, 3
  br label %443

416:                                              ; preds = %17
  %417 = icmp sgt i32 %3, 3
  br label %443

418:                                              ; preds = %17
  %419 = icmp sgt i32 %3, 3
  br label %443

420:                                              ; preds = %17
  %421 = icmp sgt i32 %3, 3
  br label %443

422:                                              ; preds = %17
  %423 = icmp sgt i32 %3, 3
  br label %443

424:                                              ; preds = %17
  %425 = icmp sgt i32 %3, 3
  br label %443

426:                                              ; preds = %17
  %427 = lshr i32 %3, 2
  %428 = zext i32 %427 to i64
  %429 = add nsw i64 %428, -3
  %430 = icmp ugt i64 %429, 1
  br label %443

431:                                              ; preds = %17
  %432 = icmp sgt i32 %3, 3
  br label %443

433:                                              ; preds = %17
  %434 = icmp sgt i32 %3, 11
  br label %443

435:                                              ; preds = %17
  %436 = lshr i32 %3, 2
  %437 = zext i32 %436 to i64
  %438 = add nsw i64 %437, -3
  %439 = icmp ugt i64 %438, 1
  br label %443

440:                                              ; preds = %17
  %441 = icmp sgt i32 %3, 3
  br label %443

442:                                              ; preds = %17
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.436, i64 0, i64 0), i32 %6) #11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

443:                                              ; preds = %8, %17, %17, %357, %354, %337, %335, %327, %325, %317, %315, %307, %305, %17, %282, %272, %255, %245, %232, %228, %218, %205, %201, %197, %187, %174, %172, %168, %158, %145, %143, %139, %129, %114, %104, %90, %67, %57, %44, %17, %17, %17, %17, %17, %17, %17, %17, %8, %440, %435, %433, %431, %426, %424, %422, %420, %418, %416, %412, %409, %407, %405, %403, %401, %399, %397, %395, %393, %391, %389, %387, %381, %375, %373, %371, %369, %367, %365, %347, %344, %302, %299, %296, %293, %292, %289, %286, %259, %35, %33, %31, %29, %27, %25, %23, %18, %14, %12, %10
  %444 = phi i1 [ %15, %14 ], [ %13, %12 ], [ %11, %10 ], [ %441, %440 ], [ %439, %435 ], [ %434, %433 ], [ %432, %431 ], [ %430, %426 ], [ %425, %424 ], [ %423, %422 ], [ %421, %420 ], [ %419, %418 ], [ %417, %416 ], [ %415, %412 ], [ %411, %409 ], [ %408, %407 ], [ %406, %405 ], [ %404, %403 ], [ %402, %401 ], [ %400, %399 ], [ %398, %397 ], [ %396, %395 ], [ %394, %393 ], [ %392, %391 ], [ %390, %389 ], [ %388, %387 ], [ %386, %381 ], [ %380, %375 ], [ %374, %373 ], [ %372, %371 ], [ %366, %365 ], [ %368, %367 ], [ %370, %369 ], [ %353, %347 ], [ %346, %344 ], [ %304, %302 ], [ %301, %299 ], [ %298, %296 ], [ %295, %293 ], [ true, %292 ], [ %291, %289 ], [ %288, %286 ], [ %260, %259 ], [ %37, %35 ], [ %34, %33 ], [ %32, %31 ], [ %30, %29 ], [ %28, %27 ], [ %26, %25 ], [ %24, %23 ], [ %22, %18 ], [ false, %8 ], [ false, %17 ], [ false, %17 ], [ false, %17 ], [ false, %17 ], [ false, %17 ], [ false, %17 ], [ false, %17 ], [ false, %17 ], [ false, %44 ], [ %70, %67 ], [ true, %57 ], [ true, %90 ], [ %117, %114 ], [ true, %104 ], [ %142, %139 ], [ true, %129 ], [ true, %143 ], [ false, %145 ], [ %171, %168 ], [ true, %158 ], [ true, %172 ], [ false, %174 ], [ %200, %197 ], [ true, %187 ], [ true, %201 ], [ false, %205 ], [ %231, %228 ], [ true, %218 ], [ false, %232 ], [ %258, %255 ], [ true, %245 ], [ %285, %282 ], [ true, %272 ], [ false, %17 ], [ false, %305 ], [ %314, %307 ], [ false, %315 ], [ %324, %317 ], [ false, %325 ], [ %334, %327 ], [ false, %335 ], [ %343, %337 ], [ true, %354 ], [ %363, %357 ], [ false, %17 ], [ false, %17 ], [ false, %8 ]
  ret i1 %444
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal10HeapObject14NeedsRehashingEv(%"class.v8::internal::HeapObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  switch i16 %12, label %29 [
    i16 153, label %13
    i16 154, label %13
    i16 160, label %18
    i16 1082, label %28
    i16 1081, label %28
    i16 123, label %28
    i16 122, label %28
    i16 124, label %28
    i16 128, label %28
    i16 120, label %28
    i16 150, label %28
    i16 151, label %28
    i16 152, label %28
    i16 183, label %28
  ]

13:                                               ; preds = %1, %1
  %14 = add i64 %3, 5
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp sgt i16 %16, 1
  br label %29

18:                                               ; preds = %1
  %19 = add i64 %3, 3
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = add i64 %3, 11
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = icmp sgt i32 %26, 3
  br label %29

28:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %29

29:                                               ; preds = %1, %13, %18, %23, %28
  %30 = phi i1 [ true, %28 ], [ %17, %13 ], [ false, %1 ], [ %27, %23 ], [ false, %18 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal10HeapObject14NeedsRehashingENS0_12InstanceTypeE(%"class.v8::internal::HeapObject"* nocapture readonly, i16 zeroext) local_unnamed_addr #0 align 2 {
  switch i16 %1, label %23 [
    i16 153, label %3
    i16 154, label %3
    i16 160, label %10
    i16 1082, label %22
    i16 1081, label %22
    i16 123, label %22
    i16 122, label %22
    i16 124, label %22
    i16 128, label %22
    i16 120, label %22
    i16 150, label %22
    i16 151, label %22
    i16 152, label %22
    i16 183, label %22
  ]

3:                                                ; preds = %2, %2
  %4 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 5
  %7 = inttoptr i64 %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = icmp sgt i16 %8, 1
  br label %23

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 3
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 4
  br i1 %16, label %23, label %17

17:                                               ; preds = %10
  %18 = add i64 %12, 11
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = icmp sgt i32 %20, 3
  br label %23

22:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  br label %23

23:                                               ; preds = %17, %10, %2, %22, %3
  %24 = phi i1 [ true, %22 ], [ %9, %3 ], [ false, %2 ], [ %21, %17 ], [ false, %10 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal10HeapObject13CanBeRehashedEv(%"class.v8::internal::HeapObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  switch i16 %12, label %30 [
    i16 1081, label %31
    i16 1082, label %31
    i16 125, label %13
    i16 126, label %13
    i16 127, label %14
    i16 123, label %31
    i16 122, label %31
    i16 124, label %31
    i16 128, label %31
    i16 183, label %31
    i16 153, label %31
    i16 154, label %31
    i16 160, label %31
    i16 150, label %15
    i16 151, label %20
    i16 152, label %25
  ]

13:                                               ; preds = %1, %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

14:                                               ; preds = %1
  br label %31

15:                                               ; preds = %1
  %16 = add i64 %3, 3
  %17 = inttoptr i64 %16 to i8*
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br label %31

20:                                               ; preds = %1
  %21 = add i64 %3, 3
  %22 = inttoptr i64 %21 to i8*
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br label %31

25:                                               ; preds = %1
  %26 = add i64 %3, 7
  %27 = inttoptr i64 %26 to i8*
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br label %31

30:                                               ; preds = %1
  br label %31

31:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %30, %25, %20, %15, %14
  %32 = phi i1 [ false, %30 ], [ %29, %25 ], [ %24, %20 ], [ %19, %15 ], [ false, %14 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10HeapObject16RehashBasedOnMapEPNS0_7IsolateE(%"class.v8::internal::HeapObject"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::NameDictionary", align 8
  %5 = alloca %"class.v8::internal::SwissNameDictionary", align 8
  %6 = alloca %"class.v8::internal::GlobalDictionary", align 8
  %7 = alloca %"class.v8::internal::NumberDictionary", align 8
  %8 = alloca %"class.v8::internal::SimpleNumberDictionary", align 8
  %9 = alloca %"class.v8::internal::DescriptorArray", align 8
  %10 = alloca %"class.v8::internal::TransitionArray", align 8
  %11 = alloca %"class.v8::internal::JSMap", align 8
  %12 = alloca %"class.v8::internal::JSSet", align 8
  %13 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -4294967296
  %16 = add i64 %14, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  switch i16 %23, label %75 [
    i16 120, label %24
    i16 123, label %25
    i16 183, label %31
    i16 122, label %34
    i16 124, label %40
    i16 128, label %46
    i16 153, label %52
    i16 160, label %55
    i16 150, label %76
    i16 151, label %76
    i16 125, label %58
    i16 126, label %58
    i16 1081, label %59
    i16 1082, label %62
    i16 152, label %76
    i16 8, label %65
    i16 0, label %65
  ]

24:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

25:                                               ; preds = %2
  %26 = bitcast %"class.v8::internal::NameDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::NameDictionary", %"class.v8::internal::NameDictionary"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %30 = load i64, i64* %29, align 8
  call void @_ZN2v88internal9HashTableINS0_14NameDictionaryENS0_19NameDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1233"* nonnull %28, i64 %30)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %76

31:                                               ; preds = %2
  %32 = bitcast %"class.v8::internal::SwissNameDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.v8::internal::SwissNameDictionary", %"class.v8::internal::SwissNameDictionary"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %33, align 8
  call void @_ZN2v88internal19SwissNameDictionary6RehashEPNS0_7IsolateE(%"class.v8::internal::SwissNameDictionary"* nonnull %5, %"class.v8::internal::Isolate"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %76

34:                                               ; preds = %2
  %35 = bitcast %"class.v8::internal::GlobalDictionary"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.v8::internal::GlobalDictionary", %"class.v8::internal::GlobalDictionary"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::GlobalDictionary", %"class.v8::internal::GlobalDictionary"* %6, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %39 = load i64, i64* %38, align 8
  call void @_ZN2v88internal9HashTableINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1238"* nonnull %37, i64 %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  br label %76

40:                                               ; preds = %2
  %41 = bitcast %"class.v8::internal::NumberDictionary"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %7, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %45 = load i64, i64* %44, align 8
  call void @_ZN2v88internal9HashTableINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1230"* nonnull %43, i64 %45)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  br label %76

46:                                               ; preds = %2
  %47 = bitcast %"class.v8::internal::SimpleNumberDictionary"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.v8::internal::SimpleNumberDictionary", %"class.v8::internal::SimpleNumberDictionary"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::SimpleNumberDictionary", %"class.v8::internal::SimpleNumberDictionary"* %8, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %51 = load i64, i64* %50, align 8
  call void @_ZN2v88internal9HashTableINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE6RehashENS0_16PtrComprCageBaseE(%"class.v8::internal::HashTable.1227"* nonnull %49, i64 %51)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %76

52:                                               ; preds = %2
  %53 = bitcast %"class.v8::internal::DescriptorArray"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  %54 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %54, align 8
  call void @_ZN2v88internal15DescriptorArray4SortEv(%"class.v8::internal::DescriptorArray"* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  br label %76

55:                                               ; preds = %2
  %56 = bitcast %"class.v8::internal::TransitionArray"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.v8::internal::TransitionArray", %"class.v8::internal::TransitionArray"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %57, align 8
  call void @_ZN2v88internal15TransitionArray4SortEv(%"class.v8::internal::TransitionArray"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %76

58:                                               ; preds = %2, %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

59:                                               ; preds = %2
  %60 = bitcast %"class.v8::internal::JSMap"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.v8::internal::JSMap", %"class.v8::internal::JSMap"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %61, align 8
  call void @_ZN2v88internal5JSMap6RehashEPNS0_7IsolateE(%"class.v8::internal::JSMap"* nonnull %11, %"class.v8::internal::Isolate"* %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  br label %76

62:                                               ; preds = %2
  %63 = bitcast %"class.v8::internal::JSSet"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.v8::internal::JSSet", %"class.v8::internal::JSSet"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %64, align 8
  call void @_ZN2v88internal5JSSet6RehashEPNS0_7IsolateE(%"class.v8::internal::JSSet"* nonnull %12, %"class.v8::internal::Isolate"* %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br label %76

65:                                               ; preds = %2, %2
  %66 = add i64 %14, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %14, i64* %73, align 8
  %74 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %76

75:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

76:                                               ; preds = %65, %71, %2, %2, %2, %62, %59, %55, %52, %46, %40, %34, %31, %25
  ret void
}

declare void @_ZN2v88internal19SwissNameDictionary6RehashEPNS0_7IsolateE(%"class.v8::internal::SwissNameDictionary"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15DescriptorArray4SortEv(%"class.v8::internal::DescriptorArray"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 5
  %5 = inttoptr i64 %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = sext i16 %6 to i32
  %8 = icmp sgt i16 %6, 0
  br i1 %8, label %9, label %206

9:                                                ; preds = %1
  %10 = add i64 %3, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, -1047554
  store atomic volatile i32 %13, i32* %11 monotonic, align 4
  %14 = icmp eq i16 %6, 1
  br i1 %14, label %38, label %15

15:                                               ; preds = %9
  %16 = zext i32 %7 to i64
  %17 = add nsw i64 %16, -1
  %18 = and i64 %17, 1
  %19 = icmp eq i16 %6, 2
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = sub nsw i64 %17, %18
  br label %43

22:                                               ; preds = %43, %15
  %23 = phi i64 [ 1, %15 ], [ %71, %43 ]
  %24 = icmp eq i64 %18, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = load i64, i64* %2, align 8
  %27 = mul nuw nsw i64 %23, 51539607552
  %28 = add nuw nsw i64 %27, 68719476736
  %29 = lshr exact i64 %28, 32
  %30 = or i64 %29, 3
  %31 = add i64 %26, %30
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, -1047554
  %35 = trunc i64 %23 to i32
  %36 = shl i32 %35, 10
  %37 = or i32 %34, %36
  store atomic volatile i32 %37, i32* %32 monotonic, align 4
  br label %38

38:                                               ; preds = %25, %22, %9
  %39 = sdiv i32 %7, 2
  %40 = icmp sgt i16 %6, 1
  br i1 %40, label %41, label %206

41:                                               ; preds = %38
  %42 = sext i32 %39 to i64
  br label %79

43:                                               ; preds = %43, %20
  %44 = phi i64 [ 1, %20 ], [ %71, %43 ]
  %45 = phi i64 [ %21, %20 ], [ %72, %43 ]
  %46 = load i64, i64* %2, align 8
  %47 = mul nuw nsw i64 %44, 51539607552
  %48 = add nuw nsw i64 %47, 68719476736
  %49 = lshr exact i64 %48, 32
  %50 = or i64 %49, 3
  %51 = add i64 %46, %50
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, -1047554
  %55 = trunc i64 %44 to i32
  %56 = shl i32 %55, 10
  %57 = or i32 %54, %56
  store atomic volatile i32 %57, i32* %52 monotonic, align 4
  %58 = add nuw nsw i64 %44, 1
  %59 = load i64, i64* %2, align 8
  %60 = mul nuw nsw i64 %58, 51539607552
  %61 = add nuw nsw i64 %60, 68719476736
  %62 = lshr exact i64 %61, 32
  %63 = or i64 %62, 3
  %64 = add i64 %59, %63
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, -1047554
  %68 = trunc i64 %58 to i32
  %69 = shl i32 %68, 10
  %70 = or i32 %67, %69
  store atomic volatile i32 %70, i32* %65 monotonic, align 4
  %71 = add nuw nsw i64 %44, 2
  %72 = add i64 %45, -2
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %22, label %43

74:                                               ; preds = %204
  %75 = icmp sgt i16 %6, 1
  br i1 %75, label %76, label %206

76:                                               ; preds = %74
  %77 = sext i16 %6 to i64
  %78 = add nsw i64 %77, -1
  br label %207

79:                                               ; preds = %41, %204
  %80 = phi i64 [ %42, %41 ], [ %81, %204 ]
  %81 = add nsw i64 %80, -1
  %82 = load i64, i64* %2, align 8
  %83 = and i64 %82, -4294967296
  %84 = mul i64 %81, 51539607552
  %85 = add i64 %84, 68719476736
  %86 = ashr exact i64 %85, 32
  %87 = or i64 %86, 3
  %88 = add i64 %82, %87
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = lshr i32 %90, 10
  %92 = and i32 %91, 1023
  %93 = zext i32 %92 to i64
  %94 = mul nuw nsw i64 %93, 51539607552
  %95 = add nuw nsw i64 %94, 68719476736
  %96 = lshr exact i64 %95, 32
  %97 = add i64 %82, -1
  %98 = add i64 %97, %96
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %83, %101
  %103 = add i64 %102, 3
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = lshr i32 %105, 2
  %107 = icmp sgt i64 %80, %42
  br i1 %107, label %204, label %108

108:                                              ; preds = %79
  %109 = trunc i64 %81 to i32
  br label %110

110:                                              ; preds = %202, %108
  %111 = phi i64 [ %203, %202 ], [ %82, %108 ]
  %112 = phi i32 [ %170, %202 ], [ %109, %108 ]
  %113 = shl nsw i32 %112, 1
  %114 = or i32 %113, 1
  %115 = and i64 %111, -4294967296
  %116 = sext i32 %114 to i64
  %117 = mul i64 %116, 51539607552
  %118 = add i64 %117, 68719476736
  %119 = ashr exact i64 %118, 32
  %120 = or i64 %119, 3
  %121 = add i64 %111, %120
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = lshr i32 %123, 10
  %125 = and i32 %124, 1023
  %126 = zext i32 %125 to i64
  %127 = mul nuw nsw i64 %126, 51539607552
  %128 = add nuw nsw i64 %127, 68719476736
  %129 = lshr exact i64 %128, 32
  %130 = add i64 %111, -1
  %131 = add i64 %129, %130
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %115, %134
  %136 = add i64 %135, 3
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = lshr i32 %138, 2
  %140 = add nsw i32 %114, 1
  %141 = icmp slt i32 %140, %7
  br i1 %141, label %142, label %169

142:                                              ; preds = %110
  %143 = sext i32 %140 to i64
  %144 = mul i64 %143, 51539607552
  %145 = add i64 %144, 68719476736
  %146 = ashr exact i64 %145, 32
  %147 = or i64 %146, 3
  %148 = add i64 %111, %147
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = lshr i32 %150, 10
  %152 = and i32 %151, 1023
  %153 = zext i32 %152 to i64
  %154 = mul nuw nsw i64 %153, 51539607552
  %155 = add nuw nsw i64 %154, 68719476736
  %156 = lshr exact i64 %155, 32
  %157 = add i64 %156, %130
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %115, %160
  %162 = add i64 %161, 3
  %163 = inttoptr i64 %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = lshr i32 %164, 2
  %166 = icmp ugt i32 %165, %139
  %167 = select i1 %166, i32 %140, i32 %114
  %168 = select i1 %166, i32 %165, i32 %139
  br label %169

169:                                              ; preds = %142, %110
  %170 = phi i32 [ %167, %142 ], [ %114, %110 ]
  %171 = phi i32 [ %168, %142 ], [ %139, %110 ]
  %172 = icmp ugt i32 %171, %106
  br i1 %172, label %173, label %204

173:                                              ; preds = %169
  %174 = sext i32 %112 to i64
  %175 = mul i64 %174, 51539607552
  %176 = add i64 %175, 68719476736
  %177 = ashr exact i64 %176, 32
  %178 = or i64 %177, 3
  %179 = add i64 %111, %178
  %180 = inttoptr i64 %179 to i32*
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 1047552
  %183 = sext i32 %170 to i64
  %184 = mul i64 %183, 51539607552
  %185 = add i64 %184, 68719476736
  %186 = ashr exact i64 %185, 32
  %187 = or i64 %186, 3
  %188 = add i64 %187, %111
  %189 = inttoptr i64 %188 to i32*
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 1047552
  %192 = load atomic i32, i32* %180 monotonic, align 4
  %193 = and i32 %192, -1047554
  %194 = or i32 %193, %191
  store atomic volatile i32 %194, i32* %180 monotonic, align 4
  %195 = load i64, i64* %2, align 8
  %196 = add i64 %195, %187
  %197 = inttoptr i64 %196 to i32*
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, -1047554
  %200 = or i32 %199, %182
  store atomic volatile i32 %200, i32* %197 monotonic, align 4
  %201 = icmp slt i32 %170, %39
  br i1 %201, label %202, label %204

202:                                              ; preds = %173
  %203 = load i64, i64* %2, align 8
  br label %110

204:                                              ; preds = %173, %169, %79
  %205 = icmp sgt i64 %81, 0
  br i1 %205, label %79, label %74

206:                                              ; preds = %349, %1, %38, %74
  ret void

207:                                              ; preds = %76, %349
  %208 = phi i64 [ %78, %76 ], [ %350, %349 ]
  %209 = load i64, i64* %2, align 8
  %210 = add i64 %209, 19
  %211 = inttoptr i64 %210 to i32*
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 1047552
  %214 = mul i64 %208, 51539607552
  %215 = add i64 %214, 68719476736
  %216 = ashr exact i64 %215, 32
  %217 = or i64 %216, 3
  %218 = add i64 %209, %217
  %219 = inttoptr i64 %218 to i32*
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 1047552
  %222 = load atomic i32, i32* %211 monotonic, align 4
  %223 = and i32 %222, -1047554
  %224 = or i32 %223, %221
  store atomic volatile i32 %224, i32* %211 monotonic, align 4
  %225 = load i64, i64* %2, align 8
  %226 = add i64 %225, %217
  %227 = inttoptr i64 %226 to i32*
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, -1047554
  %230 = or i32 %229, %213
  store atomic volatile i32 %230, i32* %227 monotonic, align 4
  %231 = load i64, i64* %2, align 8
  %232 = and i64 %231, -4294967296
  %233 = add i64 %231, 19
  %234 = inttoptr i64 %233 to i32*
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = lshr i32 %235, 10
  %237 = and i32 %236, 1023
  %238 = zext i32 %237 to i64
  %239 = mul nuw nsw i64 %238, 51539607552
  %240 = add nuw nsw i64 %239, 68719476736
  %241 = lshr exact i64 %240, 32
  %242 = add i64 %231, -1
  %243 = add i64 %242, %241
  %244 = inttoptr i64 %243 to i32*
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = zext i32 %245 to i64
  %247 = or i64 %232, %246
  %248 = add i64 %247, 3
  %249 = inttoptr i64 %248 to i32*
  %250 = load i32, i32* %249, align 4
  %251 = lshr i32 %250, 2
  %252 = trunc i64 %208 to i32
  %253 = lshr i32 %252, 1
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %349, label %255

255:                                              ; preds = %207, %347
  %256 = phi i64 [ %348, %347 ], [ %231, %207 ]
  %257 = phi i32 [ %315, %347 ], [ 0, %207 ]
  %258 = shl nsw i32 %257, 1
  %259 = or i32 %258, 1
  %260 = and i64 %256, -4294967296
  %261 = sext i32 %259 to i64
  %262 = mul i64 %261, 51539607552
  %263 = add i64 %262, 68719476736
  %264 = ashr exact i64 %263, 32
  %265 = or i64 %264, 3
  %266 = add i64 %256, %265
  %267 = inttoptr i64 %266 to i32*
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = lshr i32 %268, 10
  %270 = and i32 %269, 1023
  %271 = zext i32 %270 to i64
  %272 = mul nuw nsw i64 %271, 51539607552
  %273 = add nuw nsw i64 %272, 68719476736
  %274 = lshr exact i64 %273, 32
  %275 = add i64 %256, -1
  %276 = add i64 %274, %275
  %277 = inttoptr i64 %276 to i32*
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = zext i32 %278 to i64
  %280 = or i64 %260, %279
  %281 = add i64 %280, 3
  %282 = inttoptr i64 %281 to i32*
  %283 = load i32, i32* %282, align 4
  %284 = lshr i32 %283, 2
  %285 = add nsw i32 %259, 1
  %286 = sext i32 %285 to i64
  %287 = icmp sgt i64 %208, %286
  br i1 %287, label %288, label %314

288:                                              ; preds = %255
  %289 = mul i64 %286, 51539607552
  %290 = add i64 %289, 68719476736
  %291 = ashr exact i64 %290, 32
  %292 = or i64 %291, 3
  %293 = add i64 %256, %292
  %294 = inttoptr i64 %293 to i32*
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = lshr i32 %295, 10
  %297 = and i32 %296, 1023
  %298 = zext i32 %297 to i64
  %299 = mul nuw nsw i64 %298, 51539607552
  %300 = add nuw nsw i64 %299, 68719476736
  %301 = lshr exact i64 %300, 32
  %302 = add i64 %301, %275
  %303 = inttoptr i64 %302 to i32*
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = zext i32 %304 to i64
  %306 = or i64 %260, %305
  %307 = add i64 %306, 3
  %308 = inttoptr i64 %307 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = lshr i32 %309, 2
  %311 = icmp ugt i32 %310, %284
  %312 = select i1 %311, i32 %285, i32 %259
  %313 = select i1 %311, i32 %310, i32 %284
  br label %314

314:                                              ; preds = %288, %255
  %315 = phi i32 [ %312, %288 ], [ %259, %255 ]
  %316 = phi i32 [ %313, %288 ], [ %284, %255 ]
  %317 = icmp ugt i32 %316, %251
  br i1 %317, label %318, label %349

318:                                              ; preds = %314
  %319 = sext i32 %257 to i64
  %320 = mul i64 %319, 51539607552
  %321 = add i64 %320, 68719476736
  %322 = ashr exact i64 %321, 32
  %323 = or i64 %322, 3
  %324 = add i64 %256, %323
  %325 = inttoptr i64 %324 to i32*
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 1047552
  %328 = sext i32 %315 to i64
  %329 = mul i64 %328, 51539607552
  %330 = add i64 %329, 68719476736
  %331 = ashr exact i64 %330, 32
  %332 = or i64 %331, 3
  %333 = add i64 %332, %256
  %334 = inttoptr i64 %333 to i32*
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 1047552
  %337 = load atomic i32, i32* %325 monotonic, align 4
  %338 = and i32 %337, -1047554
  %339 = or i32 %338, %336
  store atomic volatile i32 %339, i32* %325 monotonic, align 4
  %340 = load i64, i64* %2, align 8
  %341 = add i64 %340, %332
  %342 = inttoptr i64 %341 to i32*
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = and i32 %343, -1047554
  %345 = or i32 %344, %327
  store atomic volatile i32 %345, i32* %342 monotonic, align 4
  %346 = icmp slt i32 %315, %253
  br i1 %346, label %347, label %349

347:                                              ; preds = %318
  %348 = load i64, i64* %2, align 8
  br label %255

349:                                              ; preds = %318, %314, %207
  %350 = add i64 %208, -1
  %351 = icmp sgt i64 %350, 0
  br i1 %351, label %207, label %206
}

declare void @_ZN2v88internal15TransitionArray4SortEv(%"class.v8::internal::TransitionArray"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5JSMap6RehashEPNS0_7IsolateE(%"class.v8::internal::JSMap"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSMap", %"class.v8::internal::JSMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #11
  br label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i64* [ %23, %22 ], [ %18, %16 ]
  %26 = ptrtoint i64* %25 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  store i64* %28, i64** %17, align 8
  store i64 %10, i64* %25, align 8
  br label %29

29:                                               ; preds = %14, %24
  %30 = phi i64* [ %15, %14 ], [ %25, %24 ]
  %31 = tail call i64* @_ZN2v88internal14OrderedHashMap6RehashEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %1, i64* %30) #11
  %32 = icmp eq i64* %31, null
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

34:                                               ; preds = %29
  %35 = load i64, i64* %31, align 8
  %36 = load i64, i64* %3, align 8
  %37 = add i64 %36, 11
  %38 = inttoptr i64 %37 to i32*
  %39 = trunc i64 %35 to i32
  store atomic volatile i32 %39, i32* %38 monotonic, align 4
  %40 = load i64, i64* %3, align 8
  %41 = add i64 %40, 11
  %42 = and i64 %35, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %74, label %44

44:                                               ; preds = %34
  %45 = and i64 %40, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 262144
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %44
  %52 = or i64 %45, 16
  %53 = inttoptr i64 %52 to %"class.v8::internal::Heap"**
  %54 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %53, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %54, i64 %40, i64 %41, i64 %35) #11
  %55 = load i64, i64* %3, align 8
  %56 = add i64 %55, 11
  br label %57

57:                                               ; preds = %51, %44
  %58 = phi i64 [ %56, %51 ], [ %41, %44 ]
  %59 = phi i64 [ %55, %51 ], [ %40, %44 ]
  %60 = and i64 %35, -262144
  %61 = or i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 24
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %57
  %67 = and i64 %59, -262144
  %68 = or i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 24
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %66
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %59, i64 %58, i64 %35) #11
  br label %74

74:                                               ; preds = %34, %57, %66, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5JSSet6RehashEPNS0_7IsolateE(%"class.v8::internal::JSSet"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSSet", %"class.v8::internal::JSSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %12 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %11, align 8
  %13 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %12, i64 %10) #11
  br label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #11
  br label %24

24:                                               ; preds = %22, %16
  %25 = phi i64* [ %23, %22 ], [ %18, %16 ]
  %26 = ptrtoint i64* %25 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to i64*
  store i64* %28, i64** %17, align 8
  store i64 %10, i64* %25, align 8
  br label %29

29:                                               ; preds = %14, %24
  %30 = phi i64* [ %15, %14 ], [ %25, %24 ]
  %31 = tail call i64* @_ZN2v88internal14OrderedHashSet6RehashEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %1, i64* %30) #11
  %32 = icmp eq i64* %31, null
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

34:                                               ; preds = %29
  %35 = load i64, i64* %31, align 8
  %36 = load i64, i64* %3, align 8
  %37 = add i64 %36, 11
  %38 = inttoptr i64 %37 to i32*
  %39 = trunc i64 %35 to i32
  store atomic volatile i32 %39, i32* %38 monotonic, align 4
  %40 = load i64, i64* %3, align 8
  %41 = add i64 %40, 11
  %42 = and i64 %35, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %74, label %44

44:                                               ; preds = %34
  %45 = and i64 %40, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 262144
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %44
  %52 = or i64 %45, 16
  %53 = inttoptr i64 %52 to %"class.v8::internal::Heap"**
  %54 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %53, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %54, i64 %40, i64 %41, i64 %35) #11
  %55 = load i64, i64* %3, align 8
  %56 = add i64 %55, 11
  br label %57

57:                                               ; preds = %51, %44
  %58 = phi i64 [ %56, %51 ], [ %41, %44 ]
  %59 = phi i64 [ %55, %51 ], [ %40, %44 ]
  %60 = and i64 %35, -262144
  %61 = or i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 24
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %57
  %67 = and i64 %59, -262144
  %68 = or i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 24
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %66
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %59, i64 %58, i64 %35) #11
  br label %74

74:                                               ; preds = %34, %57, %66, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal10HeapObject10IsExternalEPNS0_7IsolateE(%"class.v8::internal::HeapObject"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Map", align 8
  %4 = bitcast %"class.v8::internal::Map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = call i64 @_ZNK2v88internal3Map11FindRootMapEPNS0_7IsolateE(%"class.v8::internal::Map"* nonnull %3, %"class.v8::internal::Isolate"* %1) #11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %16 = ptrtoint %"class.v8::internal::Heap"* %15 to i64
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 598
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %14 to i32
  %22 = trunc i64 %20 to i32
  %23 = icmp eq i32 %21, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret i1 %23
}

declare i64 @_ZNK2v88internal3Map11FindRootMapEPNS0_7IsolateE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15DescriptorArray19GeneralizeAllFieldsEv(%"class.v8::internal::DescriptorArray"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 5
  %5 = inttoptr i64 %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = sext i16 %6 to i64
  %8 = icmp eq i16 %6, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %72, %1
  ret void

10:                                               ; preds = %1, %80
  %11 = phi i64 [ %81, %80 ], [ %3, %1 ]
  %12 = phi i64 [ %78, %80 ], [ 0, %1 ]
  %13 = mul i64 %12, 51539607552
  %14 = add i64 %13, 68719476736
  %15 = ashr exact i64 %14, 32
  %16 = or i64 %15, 3
  %17 = add i64 %11, %16
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = ashr i32 %19, 1
  %21 = and i32 %20, -449
  %22 = or i32 %21, 256
  %23 = and i32 %19, 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %72

25:                                               ; preds = %10
  %26 = and i32 %22, -197
  %27 = tail call i64 @_ZN2v88internal9FieldType3AnyEv() #11
  %28 = load i64, i64* %2, align 8
  %29 = ashr exact i64 %13, 32
  %30 = add nsw i64 %29, 23
  %31 = add i64 %28, %30
  %32 = inttoptr i64 %31 to i32*
  %33 = trunc i64 %27 to i32
  store atomic volatile i32 %33, i32* %32 monotonic, align 4
  %34 = load i64, i64* %2, align 8
  %35 = add i64 %34, %30
  %36 = and i64 %27, 1
  %37 = icmp ne i64 %36, 0
  %38 = icmp ne i32 %33, 3
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %72

40:                                               ; preds = %25
  %41 = and i64 %34, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 262144
  %46 = icmp eq i64 %45, 0
  %47 = and i64 %27, -3
  br i1 %46, label %54, label %48

48:                                               ; preds = %40
  %49 = or i64 %41, 16
  %50 = inttoptr i64 %49 to %"class.v8::internal::Heap"**
  %51 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %50, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %51, i64 %34, i64 %35, i64 %47) #11
  %52 = load i64, i64* %2, align 8
  %53 = add i64 %52, %30
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i64 [ %53, %48 ], [ %35, %40 ]
  %56 = phi i64 [ %52, %48 ], [ %34, %40 ]
  %57 = and i64 %27, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 24
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %54
  %64 = and i64 %56, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 24
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %56, i64 %55, i64 %47) #11
  %71 = load i64, i64* %2, align 8
  br label %72

72:                                               ; preds = %70, %63, %54, %25, %10
  %73 = phi i64 [ %11, %10 ], [ %34, %25 ], [ %56, %54 ], [ %56, %63 ], [ %71, %70 ]
  %74 = phi i32 [ %22, %10 ], [ %26, %25 ], [ %26, %54 ], [ %26, %63 ], [ %26, %70 ]
  %75 = shl i32 %74, 1
  %76 = add i64 %73, %16
  %77 = inttoptr i64 %76 to i32*
  store atomic volatile i32 %75, i32* %77 monotonic, align 4
  %78 = add i64 %12, 1
  %79 = icmp eq i64 %78, %7
  br i1 %79, label %9, label %80

80:                                               ; preds = %72
  %81 = load i64, i64* %2, align 8
  br label %10
}

declare i64 @_ZN2v88internal9FieldType3AnyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #11
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 0
  %11 = icmp eq i64* %2, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %6
  %13 = load i64, i64* null, align 536870912
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  br label %37

16:                                               ; preds = %6
  %17 = load i64, i64* %2, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i64 %19, 4294967295
  %24 = icmp eq i64 %23, 0
  tail call void @llvm.assume(i1 %24) #11
  %25 = zext i32 %22 to i64
  %26 = or i64 %19, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 64
  br i1 %30, label %31, label %37

31:                                               ; preds = %16
  %32 = add i64 %17, 7
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %12, %31, %16
  %38 = phi i32* [ %15, %12 ], [ %21, %31 ], [ %21, %16 ]
  %39 = phi i64 [ %13, %12 ], [ %17, %31 ], [ %17, %16 ]
  br label %40

40:                                               ; preds = %37, %31
  %41 = phi i32* [ %38, %37 ], [ %21, %31 ]
  %42 = phi i64 [ %39, %37 ], [ %17, %31 ]
  %43 = phi i32 [ 3, %37 ], [ 0, %31 ]
  store i32 %43, i32* %10, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  store i32 4, i32* %44, align 4
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 2
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 3
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 4, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 6, i32 0, i32 0
  store i64* %2, i64** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 10
  %54 = bitcast %"class.v8::internal::Handle.1220"* %53 to i64*
  store i64 %9, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 11
  %56 = bitcast i64* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 -1, i64 16, i1 false) #11
  %57 = and i64 %42, -4294967296
  %58 = load atomic i32, i32* %41 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %57, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = and i16 %63, -32
  %65 = icmp eq i16 %64, 32
  br i1 %65, label %66, label %70

66:                                               ; preds = %40
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %68 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %67, align 8
  %69 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %68, %"class.v8::internal::Isolate"* %0, i64* %2) #11
  br label %70

70:                                               ; preds = %40, %66
  %71 = phi i64* [ %69, %66 ], [ %2, %40 ]
  store i64* %71, i64** %49, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %7) #11
  %72 = call i16 @_ZN2v88internal6Object11SetPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %3, i32 %4, i64 %5)
  %73 = trunc i16 %72 to i8
  %74 = icmp eq i8 %73, 0
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #11
  %75 = select i1 %74, i64* null, i64* %3
  ret i64* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object11SetPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %14, label %10

10:                                               ; preds = %4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 1, i8* %5, align 1
  %11 = call i16 @_ZN2v88internal6Object19SetPropertyInternalEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginEPb(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %3, i32 undef, i8* nonnull %5)
  %12 = load i8, i8* %5, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  br i1 %13, label %14, label %68

14:                                               ; preds = %4, %10
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %66, label %20

20:                                               ; preds = %14
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 189
  br i1 %30, label %31, label %66

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %33, i64 %3)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %66

36:                                               ; preds = %31
  %37 = load i32, i32* %7, align 4
  %38 = icmp eq i32 %37, 7
  br i1 %38, label %39, label %48

39:                                               ; preds = %36
  %40 = bitcast %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %6, i64 0, i32 0
  %46 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %46, i64 0, i32 0, i32 7, i32 0, i64 0
  call void @_ZN2v88internal12PropertyCell18ClearAndInvalidateENS0_13ReadOnlyRootsE(%"class.v8::internal::PropertyCell"* nonnull %45, i64* %47)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  br label %48

48:                                               ; preds = %39, %36
  %49 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %50 = bitcast %"class.v8::internal::Isolate"* %49 to %"class.v8::internal::Factory"*
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %52 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %51, i64 0, i32 0, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = icmp eq i64* %53, null
  br i1 %54, label %55, label %61

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %57 = load i64, i64* %56, align 8
  %58 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %50, i64 %57, i1 zeroext true) #11
  %59 = ptrtoint i64* %58 to i64
  %60 = bitcast %"class.v8::internal::Handle.1234"* %51 to i64*
  store i64 %59, i64* %60, align 8
  br label %61

61:                                               ; preds = %48, %55
  %62 = phi i64* [ %58, %55 ], [ %53, %48 ]
  %63 = tail call i64* @_ZN2v88internal7Factory17NewReferenceErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %50, i32 184, i64* %62, i64* null, i64* null) #11
  %64 = load i64, i64* %63, align 8
  %65 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %49, i64 %64, %"class.v8::internal::MessageLocation"* null) #11
  br label %68

66:                                               ; preds = %14, %20, %31
  %67 = tail call i16 @_ZN2v88internal6Object15AddDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i32 0, i64 %3, i32 %2)
  br label %68

68:                                               ; preds = %10, %66, %61
  %69 = phi i16 [ 0, %61 ], [ %67, %66 ], [ %11, %10 ]
  ret i16 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object19SetPropertyInternalEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginEPb(%"class.v8::internal::LookupIterator"*, i64*, i64, i32, i8* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef", align 8
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %12, label %73

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 40, i1 false) #11
  %20 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1619", %"struct.std::__1::atomic.1619"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %28, label %22, !prof !5

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 14, i32 0
  %26 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %26, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %27, %"class.v8::internal::RuntimeCallStats"** %23, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %27, %"class.v8::internal::RuntimeCallTimer"* %24, i32 207) #11
  br label %28

28:                                               ; preds = %22, %12
  %29 = load i64, i64* %18, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 521
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %29 to i32
  %33 = trunc i64 %31 to i32
  %34 = icmp eq i32 %32, %33
  br i1 %34, label %65, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 297
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %32, %38
  br i1 %39, label %65, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 383
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i32 %32, %43
  br i1 %44, label %65, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 516
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %32, %48
  br i1 %49, label %65, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 510
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %32, %53
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 420
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %32, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 0, i32 7, i32 0, i64 447
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i32 %32, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %60, %55, %50, %45, %40, %35, %28
  call void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %14, i64* %16, i64* %18) #11
  br label %66

66:                                               ; preds = %65, %60
  %67 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %68 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %67, align 8
  %69 = icmp eq %"class.v8::internal::RuntimeCallStats"* %68, null
  br i1 %69, label %72, label %70, !prof !5

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %68, %"class.v8::internal::RuntimeCallTimer"* %71) #11
  br label %72

72:                                               ; preds = %70, %66
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #11
  br label %73

73:                                               ; preds = %5, %72
  %74 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %75 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  br label %77

77:                                               ; preds = %270, %73
  %78 = phi i32 [ %271, %270 ], [ %76, %73 ]
  switch i32 %78, label %270 [
    i32 4, label %79
    i32 0, label %80
    i32 3, label %85
    i32 2, label %149
    i32 5, label %173
    i32 1, label %212
    i32 6, label %256
    i32 7, label %269
  ]

79:                                               ; preds = %77
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

80:                                               ; preds = %77
  %81 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* %0) #11
  br i1 %81, label %270, label %82

82:                                               ; preds = %80
  %83 = call i16 @_ZN2v88internal8JSObject32SetPropertyWithFailedAccessCheckEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %2) #11
  %84 = lshr i16 %83, 8
  br label %274

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = ptrtoint i64* %87 to i64
  %89 = load i64, i64* %87, align 8
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %129, label %92

92:                                               ; preds = %85
  %93 = and i64 %89, -4294967296
  %94 = add i64 %89, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %93, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = icmp eq i16 %101, 189
  br i1 %102, label %103, label %129

103:                                              ; preds = %92
  %104 = add i64 %89, 15
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %93, %107
  %109 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %74, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %109, i64 0, i32 31, i32 4
  %111 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %110, align 8
  %112 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %103
  %114 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %111, i64 %108) #11
  %115 = ptrtoint i64* %114 to i64
  br label %129

116:                                              ; preds = %103
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %109, i64 0, i32 31, i32 0
  %118 = load i64*, i64** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %109, i64 0, i32 31, i32 1
  %120 = load i64*, i64** %119, align 8
  %121 = icmp eq i64* %118, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %116
  %123 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %109) #11
  br label %124

124:                                              ; preds = %122, %116
  %125 = phi i64* [ %123, %122 ], [ %118, %116 ]
  %126 = ptrtoint i64* %125 to i64
  %127 = add i64 %126, 8
  %128 = inttoptr i64 %127 to i64*
  store i64* %128, i64** %117, align 8
  store i64 %108, i64* %125, align 8
  br label %129

129:                                              ; preds = %124, %113, %85, %92
  %130 = phi i64 [ %88, %92 ], [ %88, %85 ], [ %115, %113 ], [ %126, %124 ]
  %131 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %134 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %133, i64 0, i32 0, i32 0
  %135 = load i64*, i64** %134, align 8
  %136 = icmp eq i64* %135, null
  br i1 %136, label %137, label %144

137:                                              ; preds = %129
  %138 = bitcast %"class.v8::internal::Isolate"** %74 to %"class.v8::internal::Factory"**
  %139 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %138, align 8
  %140 = load i64, i64* %9, align 8
  %141 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %139, i64 %140, i1 zeroext true) #11
  %142 = ptrtoint i64* %141 to i64
  %143 = bitcast %"class.v8::internal::Handle.1234"* %133 to i64*
  store i64 %142, i64* %143, align 8
  br label %144

144:                                              ; preds = %129, %137
  %145 = phi i64* [ %141, %137 ], [ %135, %129 ]
  %146 = inttoptr i64 %130 to i64*
  %147 = call i16 @_ZN2v88internal7JSProxy11SetPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEES7_NS_5MaybeINS0_11ShouldThrowEEE(i64* %132, i64* %145, i64* %1, i64* %146, i64 %2)
  %148 = lshr i16 %147, 8
  br label %274

149:                                              ; preds = %77
  %150 = call zeroext i1 @_ZNK2v88internal14LookupIterator33HolderIsReceiverOrHiddenPrototypeEv(%"class.v8::internal::LookupIterator"* %0) #11
  br i1 %150, label %151, label %158

151:                                              ; preds = %149
  %152 = call i16 @_ZN2v88internal8JSObject26SetPropertyWithInterceptorEPNS0_14LookupIteratorENS_5MaybeINS0_11ShouldThrowEEENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator"* %0, i64 %2, i64* %1) #11
  %153 = trunc i16 %152 to i8
  %154 = lshr i16 %152, 8
  %155 = icmp eq i8 %153, 0
  br i1 %155, label %274, label %156

156:                                              ; preds = %151
  %157 = icmp eq i16 %154, 0
  br i1 %157, label %270, label %274

158:                                              ; preds = %149
  %159 = call i64 @_ZN2v88internal8JSObject36GetPropertyAttributesWithInterceptorEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* %0) #11
  %160 = trunc i64 %159 to i8
  %161 = lshr i64 %159, 32
  %162 = trunc i64 %161 to i32
  %163 = icmp eq i8 %160, 0
  br i1 %163, label %274, label %164

164:                                              ; preds = %158
  %165 = and i32 %162, 1
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %164
  %168 = call i16 @_ZN2v88internal6Object23WriteToReadOnlyPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %2)
  %169 = lshr i16 %168, 8
  br label %274

170:                                              ; preds = %164
  %171 = icmp eq i32 %162, 64
  br i1 %171, label %270, label %172

172:                                              ; preds = %170
  store i8 0, i8* %4, align 1
  br label %274

173:                                              ; preds = %77
  %174 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %173
  %179 = call i16 @_ZN2v88internal6Object23WriteToReadOnlyPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %2)
  %180 = lshr i16 %179, 8
  br label %274

181:                                              ; preds = %173
  %182 = call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* %0) #11
  %183 = load i64, i64* %182, align 8
  %184 = and i64 %183, 1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %207, label %186

186:                                              ; preds = %181
  %187 = and i64 %183, -4294967296
  %188 = add i64 %183, -1
  %189 = inttoptr i64 %188 to i32*
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = zext i32 %190 to i64
  %192 = or i64 %187, %191
  %193 = add i64 %192, 7
  %194 = inttoptr i64 %193 to i16*
  %195 = load atomic i16, i16* %194 monotonic, align 2
  %196 = icmp eq i16 %195, 86
  br i1 %196, label %197, label %207

197:                                              ; preds = %186
  %198 = call zeroext i1 @_ZNK2v88internal14LookupIterator33HolderIsReceiverOrHiddenPrototypeEv(%"class.v8::internal::LookupIterator"* %0) #11
  br i1 %198, label %207, label %199

199:                                              ; preds = %197
  %200 = load i64, i64* %182, align 8
  %201 = add i64 %200, 7
  %202 = inttoptr i64 %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = and i32 %203, 8
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %207, label %206

206:                                              ; preds = %199
  store i8 0, i8* %4, align 1
  br label %209

207:                                              ; preds = %199, %181, %186, %197
  %208 = call i16 @_ZN2v88internal6Object23SetPropertyWithAccessorEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %2)
  br label %209

209:                                              ; preds = %207, %206
  %210 = phi i16 [ 0, %206 ], [ %208, %207 ]
  %211 = lshr i16 %210, 8
  br label %274

212:                                              ; preds = %77
  %213 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %214 = load i64*, i64** %213, align 8
  %215 = bitcast %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #11
  %216 = load i64, i64* %214, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef"* %7, i64 0, i32 0
  %219 = call i32 @_ZN2v88internal12JSTypedArray4typeEv(%"class.v8::internal::JSTypedArray"* nonnull %218) #11
  %220 = icmp eq i32 %219, 10
  %221 = bitcast %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221) #11
  br i1 %220, label %228, label %222

222:                                              ; preds = %212
  %223 = load i64, i64* %214, align 8
  %224 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSTypedArray>::ObjectRef"* %8, i64 0, i32 0
  %226 = call i32 @_ZN2v88internal12JSTypedArray4typeEv(%"class.v8::internal::JSTypedArray"* nonnull %225) #11
  %227 = icmp eq i32 %226, 11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #11
  br i1 %227, label %229, label %234

228:                                              ; preds = %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #11
  br label %229

229:                                              ; preds = %222, %228
  %230 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %74, align 8
  %231 = call i64* @_ZN2v88internal6BigInt10FromObjectEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %230, i64* %1) #11
  %232 = icmp ne i64* %231, null
  %233 = zext i1 %232 to i16
  br label %274

234:                                              ; preds = %222
  %235 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %74, align 8
  %236 = load i64, i64* %1, align 8
  %237 = and i64 %236, 1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %252, label %239

239:                                              ; preds = %234
  %240 = and i64 %236, -4294967296
  %241 = add i64 %236, -1
  %242 = inttoptr i64 %241 to i32*
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = zext i32 %243 to i64
  %245 = or i64 %240, %244
  %246 = add i64 %245, 7
  %247 = inttoptr i64 %246 to i16*
  %248 = load atomic i16, i16* %247 monotonic, align 2
  %249 = icmp eq i16 %248, 66
  br i1 %249, label %252, label %250

250:                                              ; preds = %239
  %251 = call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %235, i64* %1, i32 0) #11
  br label %252

252:                                              ; preds = %234, %239, %250
  %253 = phi i64* [ %251, %250 ], [ %1, %239 ], [ %1, %234 ]
  %254 = icmp ne i64* %253, null
  %255 = zext i1 %254 to i16
  br label %274

256:                                              ; preds = %77
  %257 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %258 = load i32, i32* %257, align 8
  %259 = and i32 %258, 8
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %264, label %261

261:                                              ; preds = %256
  %262 = call i16 @_ZN2v88internal6Object23WriteToReadOnlyPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %2)
  %263 = lshr i16 %262, 8
  br label %274

264:                                              ; preds = %256
  %265 = call zeroext i1 @_ZNK2v88internal14LookupIterator33HolderIsReceiverOrHiddenPrototypeEv(%"class.v8::internal::LookupIterator"* %0) #11
  br i1 %265, label %266, label %269

266:                                              ; preds = %264
  %267 = call i16 @_ZN2v88internal6Object15SetDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EE(%"class.v8::internal::LookupIterator"* %0, i64* %1)
  %268 = lshr i16 %267, 8
  br label %274

269:                                              ; preds = %77, %264
  store i8 0, i8* %4, align 1
  br label %274

270:                                              ; preds = %156, %170, %80, %77
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* %0) #11
  %271 = load i32, i32* %75, align 4
  %272 = icmp eq i32 %271, 4
  br i1 %272, label %273, label %77

273:                                              ; preds = %270
  store i8 0, i8* %4, align 1
  br label %274

274:                                              ; preds = %156, %158, %151, %252, %229, %172, %167, %273, %269, %266, %261, %209, %178, %144, %82
  %275 = phi i16 [ 0, %273 ], [ 0, %269 ], [ %262, %261 ], [ %267, %266 ], [ %179, %178 ], [ %210, %209 ], [ 0, %172 ], [ %168, %167 ], [ %147, %144 ], [ %83, %82 ], [ %233, %229 ], [ %255, %252 ], [ 0, %158 ], [ %152, %156 ], [ 0, %151 ]
  %276 = phi i16 [ 0, %273 ], [ 0, %269 ], [ %263, %261 ], [ %268, %266 ], [ %180, %178 ], [ %211, %209 ], [ 0, %172 ], [ %169, %167 ], [ %148, %144 ], [ %84, %82 ], [ %233, %229 ], [ %255, %252 ], [ 0, %158 ], [ %154, %156 ], [ %154, %151 ]
  %277 = shl nuw i16 %276, 8
  %278 = and i16 %275, 255
  %279 = or i16 %277, %278
  ret i16 %279
}

declare i16 @_ZN2v88internal8JSObject32SetPropertyWithFailedAccessCheckEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy11SetPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEES7_NS_5MaybeINS0_11ShouldThrowEEE(i64*, i64*, i64*, i64*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %9 = alloca %"class.v8::internal::LookupIterator", align 8
  %10 = alloca [4 x %"class.v8::internal::Handle.1220"], align 16
  %11 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %12 = load i64, i64* %0, align 8
  %13 = and i64 %12, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 6, i32 1, i32 3
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %23, label %35

23:                                               ; preds = %5
  %24 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 6, i32 1, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %18) #11
  br label %336

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 6
  %32 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %31) #11
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %18) #11
  br label %336

35:                                               ; preds = %30, %5
  %36 = inttoptr i64 %17 to %"class.v8::internal::Factory"*
  %37 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %36, i64 3568
  %38 = bitcast %"class.v8::internal::Factory"* %37 to i64*
  %39 = load i64, i64* %0, align 8
  %40 = and i64 %39, -4294967296
  %41 = add i64 %39, 11
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %40, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp ult i16 %53, 186
  br i1 %54, label %55, label %59

55:                                               ; preds = %35
  %56 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %36, i32 150, i64* %38, i64* null, i64* null) #11
  %57 = load i64, i64* %56, align 8
  %58 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %18, i64 %57, %"class.v8::internal::MessageLocation"* null) #11
  br label %336

59:                                               ; preds = %35
  %60 = add i64 %39, 7
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %40, %63
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 4
  %66 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %67 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %59
  %69 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %66, i64 %64) #11
  br label %83

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %18) #11
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 %64, i64* %79, align 8
  br label %83

83:                                               ; preds = %68, %78
  %84 = phi i64* [ %69, %68 ], [ %79, %78 ]
  %85 = load i64, i64* %0, align 8
  %86 = and i64 %85, -4294967296
  %87 = add i64 %85, 11
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %86, %90
  %92 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %93 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %83
  %95 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %92, i64 %91) #11
  %96 = load i64, i64* %95, align 8
  %97 = ptrtoint i64* %95 to i64
  br label %111

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 31, i32 1
  %102 = load i64*, i64** %101, align 8
  %103 = icmp eq i64* %100, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %98
  %105 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %18) #11
  br label %106

106:                                              ; preds = %104, %98
  %107 = phi i64* [ %105, %104 ], [ %100, %98 ]
  %108 = ptrtoint i64* %107 to i64
  %109 = add i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  store i64* %110, i64** %99, align 8
  store i64 %91, i64* %107, align 8
  br label %111

111:                                              ; preds = %94, %106
  %112 = phi i64 [ %97, %94 ], [ %108, %106 ]
  %113 = phi i64 [ %96, %94 ], [ %91, %106 ]
  %114 = phi i64* [ %95, %94 ], [ %107, %106 ]
  %115 = and i64 %113, -262144
  %116 = or i64 %115, 16
  %117 = inttoptr i64 %116 to i64*
  %118 = load i64, i64* %117, align 16
  %119 = add i64 %118, -41416
  %120 = inttoptr i64 %119 to %"class.v8::internal::Isolate"*
  %121 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %121) #11
  %122 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 0
  %123 = icmp eq %"class.v8::internal::Factory"* %37, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %111
  %125 = load i64, i64* null, align 536870912
  %126 = add i64 %125, -1
  %127 = inttoptr i64 %126 to i32*
  br label %149

128:                                              ; preds = %111
  %129 = load i64, i64* %38, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %120, i64 0, i32 0, i32 4
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %129, -1
  %133 = inttoptr i64 %132 to i32*
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i64 %131, 4294967295
  %136 = icmp eq i64 %135, 0
  tail call void @llvm.assume(i1 %136) #11
  %137 = zext i32 %134 to i64
  %138 = or i64 %131, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = icmp eq i16 %141, 64
  br i1 %142, label %143, label %149

143:                                              ; preds = %128
  %144 = add i64 %129, 7
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %143, %128, %124
  %150 = phi i32* [ %127, %124 ], [ %133, %143 ], [ %133, %128 ]
  %151 = phi i64 [ %125, %124 ], [ %129, %143 ], [ %129, %128 ]
  br label %152

152:                                              ; preds = %149, %143
  %153 = phi i32* [ %150, %149 ], [ %133, %143 ]
  %154 = phi i64 [ %151, %149 ], [ %129, %143 ]
  %155 = phi i32 [ 3, %149 ], [ 0, %143 ]
  store i32 %155, i32* %122, align 8
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  store i32 4, i32* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 2
  store i8 0, i8* %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 3
  store i32 0, i32* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 4, i32 0
  store i32 0, i32* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %120, %"class.v8::internal::Isolate"** %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 6, i32 0, i32 0
  %162 = bitcast i64** %161 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %37, %"class.v8::internal::Factory"** %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 8, i32 0, i32 0
  store i64* %114, i64** %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 10
  %167 = bitcast %"class.v8::internal::Handle.1220"* %166 to i64*
  store i64 %112, i64* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 11
  %169 = bitcast i64* %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 -1, i64 16, i1 false) #11
  %170 = and i64 %154, -4294967296
  %171 = load atomic i32, i32* %153 monotonic, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %170, %172
  %174 = add i64 %173, 7
  %175 = inttoptr i64 %174 to i16*
  %176 = load atomic i16, i16* %175 monotonic, align 2
  %177 = and i16 %176, -32
  %178 = icmp eq i16 %177, 32
  br i1 %178, label %179, label %183

179:                                              ; preds = %152
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %120, i64 0, i32 5, i32 0, i32 0, i32 0
  %181 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %180, align 8
  %182 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %181, %"class.v8::internal::Isolate"* %120, i64* %38) #11
  br label %183

183:                                              ; preds = %179, %152
  %184 = phi i64* [ %182, %179 ], [ %38, %152 ]
  store i64* %184, i64** %161, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %6) #11
  %185 = load i32, i32* %156, align 4
  %186 = icmp eq i32 %185, 4
  br i1 %186, label %187, label %192

187:                                              ; preds = %183
  %188 = bitcast %"class.v8::internal::Isolate"** %160 to %"class.v8::internal::Factory"**
  %189 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %188, align 8
  %190 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %189, i64 160
  %191 = bitcast %"class.v8::internal::Factory"* %190 to i64*
  br label %194

192:                                              ; preds = %183
  %193 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #11
  br label %194

194:                                              ; preds = %187, %192
  %195 = phi i64* [ %193, %192 ], [ %191, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %121) #11
  %196 = icmp eq i64* %195, null
  br i1 %196, label %336, label %197

197:                                              ; preds = %194
  %198 = ptrtoint i64* %195 to i64
  %199 = load i64, i64* %195, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %120, i64 0, i32 0, i32 7, i32 0, i64 6
  %201 = load i64, i64* %200, align 8
  %202 = trunc i64 %199 to i32
  %203 = trunc i64 %201 to i32
  %204 = icmp eq i32 %202, %203
  br i1 %204, label %210, label %205

205:                                              ; preds = %197
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %120, i64 0, i32 0, i32 7, i32 0, i64 4
  %207 = load i64, i64* %206, align 8
  %208 = trunc i64 %207 to i32
  %209 = icmp eq i32 %202, %208
  br i1 %209, label %210, label %214

210:                                              ; preds = %205, %197
  %211 = inttoptr i64 %119 to %"class.v8::internal::Factory"*
  %212 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %211, i64 160
  %213 = ptrtoint %"class.v8::internal::Factory"* %212 to i64
  br label %234

214:                                              ; preds = %205
  %215 = and i64 %199, 1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %229, label %217

217:                                              ; preds = %214
  %218 = and i64 %199, -4294967296
  %219 = add i64 %199, -1
  %220 = inttoptr i64 %219 to i32*
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = zext i32 %221 to i64
  %223 = or i64 %218, %222
  %224 = add i64 %223, 9
  %225 = inttoptr i64 %224 to i8*
  %226 = load atomic i8, i8* %225 monotonic, align 1
  %227 = and i8 %226, 2
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %234

229:                                              ; preds = %217, %214
  %230 = inttoptr i64 %119 to %"class.v8::internal::Factory"*
  %231 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %230, i32 121, i64* nonnull %195, i64* %38, i64* %114) #11
  %232 = load i64, i64* %231, align 8
  %233 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %120, i64 %232, %"class.v8::internal::MessageLocation"* null) #11
  br label %336

234:                                              ; preds = %210, %217
  %235 = phi i64 [ %213, %210 ], [ %198, %217 ]
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %336, label %237

237:                                              ; preds = %234
  %238 = inttoptr i64 %235 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 4
  %241 = load i64, i64* %240, align 8
  %242 = trunc i64 %239 to i32
  %243 = trunc i64 %241 to i32
  %244 = icmp eq i32 %242, %243
  br i1 %244, label %245, label %308

245:                                              ; preds = %237
  %246 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #11
  %247 = ptrtoint i64* %1 to i64
  %248 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %248, align 8
  %249 = load i64, i64* %1, align 8
  %250 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %8, i64 0, i32 1
  %251 = and i64 %249, -4294967296
  %252 = add i64 %249, -1
  %253 = inttoptr i64 %252 to i32*
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = zext i32 %254 to i64
  %256 = or i64 %251, %255
  %257 = add i64 %256, 7
  %258 = inttoptr i64 %257 to i16*
  %259 = load atomic i16, i16* %258 monotonic, align 2
  %260 = icmp ult i16 %259, 64
  %261 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #11
  br i1 %260, label %262, label %276

262:                                              ; preds = %245
  %263 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %249, i64* %263, align 8
  %264 = add i64 %249, 3
  %265 = inttoptr i64 %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = and i32 %266, -536870910
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %273

269:                                              ; preds = %262
  %270 = lshr i32 %266, 2
  %271 = and i32 %270, 16777215
  %272 = zext i32 %271 to i64
  store i64 %272, i64* %250, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #11
  br label %284

273:                                              ; preds = %262
  %274 = and i32 %266, 3
  %275 = icmp eq i32 %274, 2
  br i1 %275, label %276, label %277

276:                                              ; preds = %273, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #11
  br label %286

277:                                              ; preds = %273
  %278 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %7, i64* %250) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #11
  br i1 %278, label %284, label %279

279:                                              ; preds = %277
  %280 = load i64, i64* %1, align 8
  %281 = and i64 %280, -4294967296
  %282 = add i64 %280, -1
  %283 = inttoptr i64 %282 to i32*
  br label %286

284:                                              ; preds = %277, %269
  %285 = bitcast %"class.v8::internal::LookupIterator::Key"* %8 to i64*
  store i64 %247, i64* %285, align 8
  br label %303

286:                                              ; preds = %279, %276
  %287 = phi i32* [ %283, %279 ], [ %253, %276 ]
  %288 = phi i64 [ %281, %279 ], [ %251, %276 ]
  store i64 -1, i64* %250, align 8
  %289 = load atomic i32, i32* %287 monotonic, align 4
  %290 = zext i32 %289 to i64
  %291 = or i64 %288, %290
  %292 = add i64 %291, 7
  %293 = inttoptr i64 %292 to i16*
  %294 = load atomic i16, i16* %293 monotonic, align 2
  %295 = and i16 %294, -32
  %296 = icmp eq i16 %295, 32
  br i1 %296, label %297, label %301

297:                                              ; preds = %286
  %298 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 5, i32 0, i32 0, i32 0
  %299 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %298, align 8
  %300 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %299, %"class.v8::internal::Isolate"* %18, i64* %1) #11
  br label %301

301:                                              ; preds = %297, %286
  %302 = phi i64* [ %300, %297 ], [ %1, %286 ]
  store i64* %302, i64** %248, align 8
  br label %303

303:                                              ; preds = %284, %301
  %304 = phi i64* [ %1, %284 ], [ %302, %301 ]
  %305 = bitcast %"class.v8::internal::LookupIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %305) #11
  %306 = load i64, i64* %250, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %9, %"class.v8::internal::Isolate"* %18, i64* %3, i64* %304, i64 %306, i64* %84, i32 3) #11
  %307 = call i16 @_ZN2v88internal6Object16SetSuperPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %9, i64* %2, i32 0, i64 %4)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %305) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #11
  br label %336

308:                                              ; preds = %237
  %309 = bitcast [4 x %"class.v8::internal::Handle.1220"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %309) #11
  %310 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1220"], [4 x %"class.v8::internal::Handle.1220"]* %10, i64 0, i64 0
  %311 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1220"], [4 x %"class.v8::internal::Handle.1220"]* %10, i64 0, i64 0, i32 0, i32 0
  store i64* %84, i64** %311, align 16
  %312 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1220"], [4 x %"class.v8::internal::Handle.1220"]* %10, i64 0, i64 1, i32 0, i32 0
  store i64* %1, i64** %312, align 8
  %313 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1220"], [4 x %"class.v8::internal::Handle.1220"]* %10, i64 0, i64 2, i32 0, i32 0
  store i64* %2, i64** %313, align 16
  %314 = getelementptr inbounds [4 x %"class.v8::internal::Handle.1220"], [4 x %"class.v8::internal::Handle.1220"]* %10, i64 0, i64 3, i32 0, i32 0
  store i64* %3, i64** %314, align 8
  %315 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %18, i64* %238, i64* %114, i32 4, %"class.v8::internal::Handle.1220"* nonnull %310) #11
  %316 = icmp eq i64* %315, null
  br i1 %316, label %334, label %317

317:                                              ; preds = %308
  %318 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #11
  %319 = load i64, i64* %315, align 8
  %320 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 %319, i64* %320, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %11, i64 0, i32 0
  %322 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %321, %"class.v8::internal::Isolate"* %18)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #11
  br i1 %322, label %330, label %323

323:                                              ; preds = %317
  %324 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %18, i64 %4)
  %325 = icmp eq i32 %324, 1
  br i1 %325, label %334, label %326

326:                                              ; preds = %323
  %327 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %36, i32 155, i64* %38, i64* %1, i64* null) #11
  %328 = load i64, i64* %327, align 8
  %329 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %18, i64 %328, %"class.v8::internal::MessageLocation"* null) #11
  br label %334

330:                                              ; preds = %317
  %331 = call i64* @_ZN2v88internal7JSProxy21CheckGetSetTrapResultEPNS0_7IsolateENS0_6HandleINS0_4NameEEENS4_INS0_10JSReceiverEEENS4_INS0_6ObjectEEENS1_10AccessKindE(%"class.v8::internal::Isolate"* %18, i64* %1, i64* %84, i64* %2, i32 1)
  %332 = icmp eq i64* %331, null
  %333 = select i1 %332, i16 0, i16 257
  br label %334

334:                                              ; preds = %330, %323, %308, %326
  %335 = phi i16 [ 0, %326 ], [ 0, %308 ], [ 1, %323 ], [ %333, %330 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %309) #11
  br label %336

336:                                              ; preds = %194, %229, %303, %334, %234, %28, %33, %55
  %337 = phi i16 [ 0, %55 ], [ 0, %33 ], [ 0, %28 ], [ %307, %303 ], [ %335, %334 ], [ 0, %234 ], [ 0, %229 ], [ 0, %194 ]
  ret i16 %337
}

declare zeroext i1 @_ZNK2v88internal14LookupIterator33HolderIsReceiverOrHiddenPrototypeEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

declare i16 @_ZN2v88internal8JSObject26SetPropertyWithInterceptorEPNS0_14LookupIteratorENS_5MaybeINS0_11ShouldThrowEEENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator"*, i64, i64*) local_unnamed_addr #1

declare i64 @_ZN2v88internal8JSObject36GetPropertyAttributesWithInterceptorEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object23WriteToReadOnlyPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %5, i64 %2)
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZNK2v88internal14LookupIterator16HolderIsReceiverEv(%"class.v8::internal::LookupIterator"* %0) #11
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = icmp eq i32 %6, 0
  %14 = select i1 %13, i32 70, i32 69
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  tail call void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"* %15, i32 %14) #11
  br label %16

16:                                               ; preds = %3, %12, %10
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %18 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %20, i64 0, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %22, null
  %24 = bitcast %"class.v8::internal::Isolate"* %17 to %"class.v8::internal::Factory"*
  br i1 %23, label %25, label %31

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %27 = load i64, i64* %26, align 8
  %28 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %24, i64 %27, i1 zeroext true) #11
  %29 = ptrtoint i64* %28 to i64
  %30 = bitcast %"class.v8::internal::Handle.1234"* %20 to i64*
  store i64 %29, i64* %30, align 8
  br label %31

31:                                               ; preds = %16, %25
  %32 = phi i64* [ %28, %25 ], [ %22, %16 ]
  %33 = icmp eq i32 %6, 1
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = tail call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %17, i64* %19) #11
  %36 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %24, i32 171, i64* %32, i64* %35, i64* %19) #11
  %37 = load i64, i64* %36, align 8
  %38 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %17, i64 %37, %"class.v8::internal::MessageLocation"* null) #11
  br label %39

39:                                               ; preds = %31, %34
  %40 = phi i16 [ 0, %34 ], [ 1, %31 ]
  ret i16 %40
}

declare i32 @_ZN2v88internal12JSTypedArray4typeEv(%"class.v8::internal::JSTypedArray"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal6BigInt10FromObjectEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object15SetDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint i64* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, -1
  br i1 %8, label %109, label %9

9:                                                ; preds = %2
  %10 = load i64, i64* %5, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp ugt i16 %19, 188
  br i1 %20, label %21, label %109

21:                                               ; preds = %9
  %22 = load atomic i32, i32* %13 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %11, %23
  %25 = add i64 %24, 10
  %26 = inttoptr i64 %25 to i8*
  %27 = load i8, i8* %26, align 1
  %28 = lshr i8 %27, 2
  %29 = add nsw i8 %28, -17
  %30 = icmp ult i8 %29, 11
  br i1 %30, label %31, label %109

31:                                               ; preds = %21
  %32 = load atomic i32, i32* %13 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %11, %33
  %35 = add i64 %34, 10
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, -8
  %39 = icmp eq i8 %38, 104
  br i1 %39, label %40, label %59

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = tail call i64* @_ZN2v88internal6BigInt10FromObjectEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %42, i64* %1) #11
  %44 = icmp eq i64* %43, null
  br i1 %44, label %112, label %45

45:                                               ; preds = %40
  %46 = ptrtoint i64* %43 to i64
  %47 = load i64, i64* %5, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, 11
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %48, %52
  %54 = add i64 %53, 43
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %109, label %112

59:                                               ; preds = %31
  %60 = load i64, i64* %1, align 8
  %61 = and i64 %60, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %109, label %63

63:                                               ; preds = %59
  %64 = and i64 %60, -4294967296
  %65 = add i64 %60, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %64, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = icmp eq i16 %72, 66
  br i1 %73, label %109, label %74

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %76 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 0, i32 7, i32 0, i64 4
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %60 to i32
  %80 = trunc i64 %78 to i32
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %109, label %82

82:                                               ; preds = %74
  %83 = load atomic i32, i32* %66 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %64, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp eq i16 %88, 66
  br i1 %89, label %92, label %90

90:                                               ; preds = %82
  %91 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %76, i64* %1, i32 0) #11
  br label %92

92:                                               ; preds = %82, %90
  %93 = phi i64* [ %91, %90 ], [ %1, %82 ]
  %94 = icmp eq i64* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %92
  %96 = ptrtoint i64* %93 to i64
  %97 = load i64, i64* %5, align 8
  %98 = and i64 %97, -4294967296
  %99 = add i64 %97, 11
  %100 = inttoptr i64 %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %98, %102
  %104 = add i64 %103, 43
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %45, %95, %2, %59, %63, %74, %9, %21
  %110 = phi i64 [ %3, %21 ], [ %3, %9 ], [ %3, %2 ], [ %3, %63 ], [ %96, %95 ], [ %3, %74 ], [ %46, %45 ], [ %3, %59 ]
  %111 = inttoptr i64 %110 to i64*
  tail call void @_ZN2v88internal14LookupIterator22PrepareForDataPropertyENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator"* %0, i64* %111) #11
  tail call void @_ZN2v88internal14LookupIterator14WriteDataValueENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::LookupIterator"* %0, i64* %111, i1 zeroext false) #11
  br label %112

112:                                              ; preds = %45, %95, %40, %92, %109
  %113 = phi i16 [ 257, %109 ], [ 0, %40 ], [ 0, %92 ], [ 257, %45 ], [ 257, %95 ]
  ret i16 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12PropertyCell18ClearAndInvalidateENS0_13ReadOnlyRootsE(%"class.v8::internal::PropertyCell"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::DependentCode", align 8
  %4 = getelementptr inbounds %"class.v8::internal::PropertyCell", %"class.v8::internal::PropertyCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, -386
  %10 = or i32 %9, 256
  %11 = getelementptr inbounds i64, i64* %1, i64 5
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %5, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = trunc i64 %12 to i32
  store atomic volatile i32 %15, i32* %14 release, align 4
  %16 = load i64, i64* %4, align 8
  %17 = add i64 %16, 11
  %18 = and i64 %12, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %51, label %20

20:                                               ; preds = %2
  %21 = and i64 %16, -262144
  %22 = or i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 262144
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = or i64 %21, 16
  %29 = inttoptr i64 %28 to %"class.v8::internal::Heap"**
  %30 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %29, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %30, i64 %16, i64 %17, i64 %12) #11
  %31 = load i64, i64* %4, align 8
  %32 = add i64 %31, 11
  br label %33

33:                                               ; preds = %27, %20
  %34 = phi i64 [ %32, %27 ], [ %17, %20 ]
  %35 = phi i64 [ %31, %27 ], [ %16, %20 ]
  %36 = and i64 %12, -262144
  %37 = or i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 24
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %33
  %43 = and i64 %35, -262144
  %44 = or i64 %43, 8
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 24
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %35, i64 %34, i64 %12) #11
  %50 = load i64, i64* %4, align 8
  br label %51

51:                                               ; preds = %2, %33, %42, %49
  %52 = phi i64 [ %50, %49 ], [ %35, %42 ], [ %35, %33 ], [ %16, %2 ]
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i32*
  store atomic volatile i32 %10, i32* %54 release, align 4
  %55 = bitcast %"class.v8::internal::DependentCode"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = load i64, i64* %4, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %62, i64* %63, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %3, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  ret void
}

declare i64* @_ZN2v88internal7Factory17NewReferenceErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object15AddDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"*, i64*, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %5
  %13 = and i64 %9, -4294967296
  %14 = add i64 %9, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp ugt i16 %21, 185
  br i1 %22, label %46, label %23

23:                                               ; preds = %5, %12
  %24 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %26, i64 0, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %28, null
  %30 = bitcast %"class.v8::internal::Isolate"* %25 to %"class.v8::internal::Factory"*
  br i1 %29, label %31, label %37

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %30, i64 %33, i1 zeroext true) #11
  %35 = ptrtoint i64* %34 to i64
  %36 = bitcast %"class.v8::internal::Handle.1234"* %26 to i64*
  store i64 %35, i64* %36, align 8
  br label %37

37:                                               ; preds = %23, %31
  %38 = phi i64* [ %34, %31 ], [ %28, %23 ]
  %39 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %25, i64 %3) #11
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %402, label %41

41:                                               ; preds = %37
  %42 = tail call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %25, i64* %8) #11
  %43 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %30, i32 172, i64* %38, i64* %42, i64* %8) #11
  %44 = load i64, i64* %43, align 8
  %45 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %25, i64 %44, %"class.v8::internal::MessageLocation"* null) #11
  br label %402

46:                                               ; preds = %12
  %47 = load atomic i32, i32* %15 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %13, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp eq i16 %52, 188
  br i1 %53, label %54, label %128

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %56 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %55, i64 0, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = icmp eq i64* %57, null
  br i1 %58, label %59, label %68

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %61 = bitcast %"class.v8::internal::Isolate"** %60 to %"class.v8::internal::Factory"**
  %62 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %64 = load i64, i64* %63, align 8
  %65 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %62, i64 %64, i1 zeroext true) #11
  %66 = ptrtoint i64* %65 to i64
  %67 = bitcast %"class.v8::internal::Handle.1234"* %55 to i64*
  store i64 %66, i64* %67, align 8
  br label %68

68:                                               ; preds = %54, %59
  %69 = phi i64* [ %65, %59 ], [ %57, %54 ]
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, -4294967296
  %72 = add i64 %70, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %71, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = icmp eq i16 %79, 64
  br i1 %80, label %81, label %128

81:                                               ; preds = %68
  %82 = add i64 %70, 7
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %128, label %87

87:                                               ; preds = %81
  %88 = icmp eq i64* %69, null
  br i1 %88, label %89, label %98

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %91 = bitcast %"class.v8::internal::Isolate"** %90 to %"class.v8::internal::Factory"**
  %92 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %94 = load i64, i64* %93, align 8
  %95 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %92, i64 %94, i1 zeroext true) #11
  %96 = ptrtoint i64* %95 to i64
  %97 = bitcast %"class.v8::internal::Handle.1234"* %55 to i64*
  store i64 %96, i64* %97, align 8
  br label %98

98:                                               ; preds = %87, %89
  %99 = phi i64* [ %95, %89 ], [ %69, %87 ]
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, -4294967296
  %102 = add i64 %100, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = zext i32 %104 to i64
  %106 = or i64 %101, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = icmp eq i16 %109, 64
  br i1 %110, label %111, label %117

111:                                              ; preds = %98
  %112 = add i64 %100, 7
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 16
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %128

117:                                              ; preds = %98, %111
  %118 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %119 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %118, align 8
  %120 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %119, i64 %3)
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %402, label %122

122:                                              ; preds = %117
  %123 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %118, align 8
  %124 = bitcast %"class.v8::internal::Isolate"* %123 to %"class.v8::internal::Factory"*
  %125 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %124, i32 149, i64* null, i64* null, i64* null) #11
  %126 = load i64, i64* %125, align 8
  %127 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %123, i64 %126, %"class.v8::internal::MessageLocation"* null) #11
  br label %402

128:                                              ; preds = %81, %68, %46, %111
  %129 = load i64*, i64** %7, align 8
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %132 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 4
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %130, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %187, label %137

137:                                              ; preds = %128
  %138 = add i64 %130, -1
  %139 = inttoptr i64 %138 to i32*
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i64 %134, 4294967295
  %142 = icmp eq i64 %141, 0
  tail call void @llvm.assume(i1 %142) #11
  %143 = zext i32 %140 to i64
  %144 = or i64 %134, %143
  %145 = add i64 %144, 7
  %146 = inttoptr i64 %145 to i16*
  %147 = load atomic i16, i16* %146 monotonic, align 2
  %148 = icmp eq i16 %147, 190
  br i1 %148, label %149, label %187

149:                                              ; preds = %137
  %150 = load atomic i32, i32* %139 monotonic, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %134, %151
  %153 = add i64 %152, 15
  %154 = inttoptr i64 %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  %157 = or i64 %134, %156
  %158 = add i64 %157, -1
  %159 = inttoptr i64 %158 to i32*
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = zext i32 %160 to i64
  %162 = or i64 %134, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load atomic i16, i16* %164 monotonic, align 2
  %166 = icmp eq i16 %165, 189
  br i1 %166, label %167, label %187

167:                                              ; preds = %149
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 31, i32 4
  %169 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %168, align 8
  %170 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %169, null
  br i1 %170, label %174, label %171

171:                                              ; preds = %167
  %172 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %169, i64 %157) #11
  %173 = load i64, i64* %172, align 8
  br label %187

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 31, i32 0
  %176 = load i64*, i64** %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 31, i32 1
  %178 = load i64*, i64** %177, align 8
  %179 = icmp eq i64* %176, %178
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %132) #11
  br label %182

182:                                              ; preds = %180, %174
  %183 = phi i64* [ %181, %180 ], [ %176, %174 ]
  %184 = ptrtoint i64* %183 to i64
  %185 = add i64 %184, 8
  %186 = inttoptr i64 %185 to i64*
  store i64* %186, i64** %175, align 8
  store i64 %157, i64* %183, align 8
  br label %187

187:                                              ; preds = %128, %137, %149, %171, %182
  %188 = phi i64 [ %173, %171 ], [ %157, %182 ], [ %130, %128 ], [ %130, %149 ], [ %130, %137 ]
  %189 = phi i64* [ %172, %171 ], [ %183, %182 ], [ %129, %128 ], [ %129, %149 ], [ %129, %137 ]
  %190 = and i64 %188, -4294967296
  %191 = add i64 %188, -1
  %192 = inttoptr i64 %191 to i32*
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = zext i32 %193 to i64
  %195 = or i64 %190, %194
  %196 = add i64 %195, 7
  %197 = inttoptr i64 %196 to i16*
  %198 = load atomic i16, i16* %197 monotonic, align 2
  %199 = icmp eq i16 %198, 190
  br i1 %199, label %402, label %200

200:                                              ; preds = %187
  %201 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %131, align 8
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 4
  %203 = load i64, i64* %202, align 8
  %204 = load atomic i32, i32* %192 monotonic, align 4
  %205 = and i64 %203, 4294967295
  %206 = icmp eq i64 %205, 0
  tail call void @llvm.assume(i1 %206) #11
  %207 = zext i32 %204 to i64
  %208 = or i64 %203, %207
  %209 = add i64 %208, 11
  %210 = inttoptr i64 %209 to i32*
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 134217728
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %215 = load i64, i64* %214, align 8
  br i1 %213, label %216, label %258

216:                                              ; preds = %200
  %217 = icmp eq i64 %215, -1
  br i1 %217, label %218, label %237

218:                                              ; preds = %216
  %219 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %220 = load i64*, i64** %219, align 8
  %221 = load i64, i64* %220, align 8
  %222 = add i64 %221, -1
  %223 = inttoptr i64 %222 to i32*
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = zext i32 %224 to i64
  %226 = or i64 %203, %225
  %227 = add i64 %226, 7
  %228 = inttoptr i64 %227 to i16*
  %229 = load atomic i16, i16* %228 monotonic, align 2
  %230 = icmp eq i16 %229, 64
  br i1 %230, label %231, label %237

231:                                              ; preds = %218
  %232 = add i64 %221, 7
  %233 = inttoptr i64 %232 to i32*
  %234 = load i32, i32* %233, align 4
  %235 = and i32 %234, 1
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %343

237:                                              ; preds = %218, %216, %231
  %238 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %201, i64 %3)
  %239 = icmp eq i32 %238, 1
  br i1 %239, label %402, label %240

240:                                              ; preds = %237
  %241 = bitcast %"class.v8::internal::Isolate"* %201 to %"class.v8::internal::Factory"*
  %242 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %243 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %242, i64 0, i32 0, i32 0
  %244 = load i64*, i64** %243, align 8
  %245 = icmp eq i64* %244, null
  br i1 %245, label %246, label %253

246:                                              ; preds = %240
  %247 = bitcast %"class.v8::internal::Isolate"** %131 to %"class.v8::internal::Factory"**
  %248 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %247, align 8
  %249 = load i64, i64* %214, align 8
  %250 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %248, i64 %249, i1 zeroext true) #11
  %251 = ptrtoint i64* %250 to i64
  %252 = bitcast %"class.v8::internal::Handle.1234"* %242 to i64*
  store i64 %251, i64* %252, align 8
  br label %253

253:                                              ; preds = %240, %246
  %254 = phi i64* [ %250, %246 ], [ %244, %240 ]
  %255 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %241, i32 113, i64* %254, i64* null, i64* null) #11
  %256 = load i64, i64* %255, align 8
  %257 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %201, i64 %256, %"class.v8::internal::MessageLocation"* null) #11
  br label %402

258:                                              ; preds = %200
  %259 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %260 = icmp ult i64 %215, 4294967295
  br i1 %260, label %273, label %261

261:                                              ; preds = %258
  %262 = icmp eq i64 %215, -1
  br i1 %262, label %343, label %263

263:                                              ; preds = %261
  %264 = load atomic i32, i32* %192 monotonic, align 4
  %265 = zext i32 %264 to i64
  %266 = or i64 %190, %265
  %267 = add i64 %266, 10
  %268 = inttoptr i64 %267 to i8*
  %269 = load i8, i8* %268, align 1
  %270 = lshr i8 %269, 2
  %271 = add nsw i8 %270, -17
  %272 = icmp ult i8 %271, 22
  br i1 %272, label %273, label %401

273:                                              ; preds = %258, %263
  %274 = load atomic i32, i32* %192 monotonic, align 4
  %275 = zext i32 %274 to i64
  %276 = or i64 %190, %275
  %277 = add i64 %276, 7
  %278 = inttoptr i64 %277 to i16*
  %279 = load atomic i16, i16* %278 monotonic, align 2
  %280 = icmp eq i16 %279, 1085
  br i1 %280, label %281, label %335

281:                                              ; preds = %273
  %282 = trunc i64 %215 to i32
  %283 = add i64 %188, 11
  %284 = inttoptr i64 %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = zext i32 %285 to i64
  %287 = or i64 %190, %286
  %288 = and i64 %286, 1
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %294

290:                                              ; preds = %281
  %291 = icmp slt i32 %285, 0
  br i1 %291, label %316, label %292, !prof !31

292:                                              ; preds = %290
  %293 = lshr i32 %285, 1
  br label %317

294:                                              ; preds = %281
  %295 = add i64 %287, -1
  %296 = inttoptr i64 %295 to i32*
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = zext i32 %297 to i64
  %299 = or i64 %190, %298
  %300 = add i64 %299, 7
  %301 = inttoptr i64 %300 to i16*
  %302 = load atomic i16, i16* %301 monotonic, align 2
  %303 = icmp eq i16 %302, 66
  br i1 %303, label %304, label %316, !prof !32

304:                                              ; preds = %294
  %305 = add i64 %287, 3
  %306 = inttoptr i64 %305 to double*
  %307 = load double, double* %306, align 1
  %308 = fadd double %307, 0x4330000000000000
  %309 = bitcast double %308 to i64
  %310 = and i64 %309, -4294967296
  %311 = icmp eq i64 %310, 4841369599423283200
  br i1 %311, label %312, label %316, !prof !32

312:                                              ; preds = %304
  %313 = trunc i64 %309 to i32
  %314 = uitofp i32 %313 to double
  %315 = fcmp oeq double %307, %314
  br i1 %315, label %317, label %316, !prof !5

316:                                              ; preds = %312, %304, %294, %290
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.371, i64 0, i64 0)) #16
  unreachable

317:                                              ; preds = %312, %292
  %318 = phi i32 [ %293, %292 ], [ %313, %312 ]
  %319 = icmp ugt i32 %318, %282
  br i1 %319, label %335, label %320

320:                                              ; preds = %317
  %321 = tail call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* %189) #11
  br i1 %321, label %324, label %322

322:                                              ; preds = %320
  %323 = load i64, i64* %259, align 8
  br label %335

324:                                              ; preds = %320
  %325 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %131, align 8
  %326 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %325, i64 %3)
  %327 = icmp eq i32 %326, 1
  br i1 %327, label %402, label %328

328:                                              ; preds = %324
  %329 = bitcast %"class.v8::internal::Isolate"* %201 to %"class.v8::internal::Factory"*
  %330 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 363
  %331 = tail call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %201, i64* %189)
  %332 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %329, i32 171, i64* %330, i64* %331, i64* %189) #11
  %333 = load i64, i64* %332, align 8
  %334 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %201, i64 %333, %"class.v8::internal::MessageLocation"* null) #11
  br label %402

335:                                              ; preds = %322, %317, %273
  %336 = phi i64 [ %323, %322 ], [ %215, %317 ], [ %215, %273 ]
  %337 = trunc i64 %336 to i32
  %338 = tail call i16 @_ZN2v88internal8JSObject14AddDataElementENS0_6HandleIS1_EEjNS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64* %189, i32 %337, i64* %1, i32 %2) #11
  %339 = trunc i16 %338 to i8
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %402, label %341

341:                                              ; preds = %335
  %342 = load i64, i64* %189, align 8
  tail call void @_ZN2v88internal8JSObject16ValidateElementsES1_(i64 %342) #11
  br label %402

343:                                              ; preds = %231, %261
  %344 = load i64*, i64** %7, align 8
  %345 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %346 = load i64*, i64** %345, align 8
  %347 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %347) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 0, i64 40, i1 false) #11
  %348 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1619", %"struct.std::__1::atomic.1619"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %356, label %350, !prof !5

350:                                              ; preds = %343
  %351 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %352 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %353 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 14, i32 0
  %354 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %353, align 8
  %355 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %354, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %355, %"class.v8::internal::RuntimeCallStats"** %351, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %355, %"class.v8::internal::RuntimeCallTimer"* %352, i32 207) #11
  br label %356

356:                                              ; preds = %350, %343
  %357 = load i64, i64* %346, align 8
  %358 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 521
  %359 = load i64, i64* %358, align 8
  %360 = trunc i64 %357 to i32
  %361 = trunc i64 %359 to i32
  %362 = icmp eq i32 %360, %361
  br i1 %362, label %393, label %363

363:                                              ; preds = %356
  %364 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 297
  %365 = load i64, i64* %364, align 8
  %366 = trunc i64 %365 to i32
  %367 = icmp eq i32 %360, %366
  br i1 %367, label %393, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 383
  %370 = load i64, i64* %369, align 8
  %371 = trunc i64 %370 to i32
  %372 = icmp eq i32 %360, %371
  br i1 %372, label %393, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 516
  %375 = load i64, i64* %374, align 8
  %376 = trunc i64 %375 to i32
  %377 = icmp eq i32 %360, %376
  br i1 %377, label %393, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 510
  %380 = load i64, i64* %379, align 8
  %381 = trunc i64 %380 to i32
  %382 = icmp eq i32 %360, %381
  br i1 %382, label %393, label %383

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 420
  %385 = load i64, i64* %384, align 8
  %386 = trunc i64 %385 to i32
  %387 = icmp eq i32 %360, %386
  br i1 %387, label %393, label %388

388:                                              ; preds = %383
  %389 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %201, i64 0, i32 0, i32 7, i32 0, i64 447
  %390 = load i64, i64* %389, align 8
  %391 = trunc i64 %390 to i32
  %392 = icmp eq i32 %360, %391
  br i1 %392, label %393, label %394

393:                                              ; preds = %388, %383, %378, %373, %368, %363, %356
  call void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %201, i64* %344, i64* %346) #11
  br label %394

394:                                              ; preds = %393, %388
  %395 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %396 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %395, align 8
  %397 = icmp eq %"class.v8::internal::RuntimeCallStats"* %396, null
  br i1 %397, label %400, label %398, !prof !5

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %396, %"class.v8::internal::RuntimeCallTimer"* %399) #11
  br label %400

400:                                              ; preds = %398, %394
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %347) #11
  br label %401

401:                                              ; preds = %263, %400
  call void @_ZN2v88internal14LookupIterator31PrepareTransitionToDataPropertyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"* %0, i64* %189, i64* %1, i32 %2, i32 %4) #11
  call void @_ZN2v88internal14LookupIterator29ApplyTransitionToDataPropertyENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::LookupIterator"* %0, i64* %189) #11
  call void @_ZN2v88internal14LookupIterator14WriteDataValueENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::LookupIterator"* %0, i64* %1, i1 zeroext true) #11
  br label %402

402:                                              ; preds = %401, %253, %187, %237, %324, %328, %335, %341, %117, %41, %37, %122
  %403 = phi i16 [ 0, %122 ], [ 0, %41 ], [ 1, %37 ], [ 1, %117 ], [ 0, %253 ], [ 257, %401 ], [ 257, %187 ], [ 1, %237 ], [ 0, %328 ], [ 1, %324 ], [ 257, %341 ], [ 0, %335 ]
  ret i16 %403
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object16SetSuperPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.v8::internal::LookupIterator", align 8
  %8 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %9 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 1, i8* %6, align 1
  %16 = call i16 @_ZN2v88internal6Object19SetPropertyInternalEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginEPb(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %3, i32 undef, i8* nonnull %6)
  %17 = load i8, i8* %6, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  br i1 %18, label %19, label %302

19:                                               ; preds = %4, %15
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, -1
  br i1 %22, label %23, label %83

23:                                               ; preds = %19
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %25 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 40, i1 false) #11
  %30 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1619", %"struct.std::__1::atomic.1619"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32, !prof !5

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 14, i32 0
  %36 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %36, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %37, %"class.v8::internal::RuntimeCallStats"** %33, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %37, %"class.v8::internal::RuntimeCallTimer"* %34, i32 207) #11
  br label %38

38:                                               ; preds = %32, %23
  %39 = load i64, i64* %28, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 521
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %39 to i32
  %43 = trunc i64 %41 to i32
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %75, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 297
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %42, %48
  br i1 %49, label %75, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 383
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %42, %53
  br i1 %54, label %75, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 516
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %42, %58
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 510
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i32 %42, %63
  br i1 %64, label %75, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 420
  %67 = load i64, i64* %66, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %42, %68
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 447
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %42, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %70, %65, %60, %55, %50, %45, %38
  call void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"* %24, i64* %26, i64* %28) #11
  br label %76

76:                                               ; preds = %75, %70
  %77 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %78 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %77, align 8
  %79 = icmp eq %"class.v8::internal::RuntimeCallStats"* %78, null
  br i1 %79, label %82, label %80, !prof !5

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %78, %"class.v8::internal::RuntimeCallTimer"* %81) #11
  br label %82

82:                                               ; preds = %80, %76
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #11
  br label %83

83:                                               ; preds = %19, %82
  %84 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %83
  %90 = and i64 %86, -4294967296
  %91 = add i64 %86, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %90, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = icmp ugt i16 %98, 185
  br i1 %99, label %102, label %100

100:                                              ; preds = %83, %89
  %101 = call i16 @_ZN2v88internal6Object23WriteToReadOnlyPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1, i64 %3)
  br label %302

102:                                              ; preds = %89
  %103 = bitcast %"class.v8::internal::LookupIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %103) #11
  %104 = load i64, i64* %20, align 8
  %105 = icmp eq i64 %104, -1
  br i1 %105, label %107, label %106

106:                                              ; preds = %102
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::Isolate"* %11, i64* %85, i64* null, i64 %104, i64* %85, i32 1) #11
  br label %168

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = ptrtoint i64* %85 to i64
  %111 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 0
  %112 = icmp eq i64* %109, null
  br i1 %112, label %134, label %113

113:                                              ; preds = %107
  %114 = load i64, i64* %109, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 4
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %114, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i64 %116, 4294967295
  %121 = icmp eq i64 %120, 0
  call void @llvm.assume(i1 %121) #11
  %122 = zext i32 %119 to i64
  %123 = or i64 %116, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = icmp eq i16 %126, 64
  br i1 %127, label %128, label %134

128:                                              ; preds = %113
  %129 = add i64 %114, 7
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %128, %113, %107
  br label %135

135:                                              ; preds = %134, %128
  %136 = phi i32 [ 1, %134 ], [ 0, %128 ]
  store i32 %136, i32* %111, align 8
  %137 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  store i32 4, i32* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 2
  store i8 0, i8* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 3
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 4, i32 0
  store i32 0, i32* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 6, i32 0, i32 0
  store i64* %109, i64** %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 8, i32 0, i32 0
  store i64* %85, i64** %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 10
  %147 = bitcast %"class.v8::internal::Handle.1220"* %146 to i64*
  store i64 %110, i64* %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 11
  %149 = bitcast i64* %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 -1, i64 16, i1 false) #11
  %150 = load i64, i64* %109, align 8
  %151 = and i64 %150, -4294967296
  %152 = add i64 %150, -1
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %151, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = and i16 %159, -32
  %161 = icmp eq i16 %160, 32
  br i1 %161, label %162, label %166

162:                                              ; preds = %135
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  %164 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %163, align 8
  %165 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %164, %"class.v8::internal::Isolate"* %11, i64* %109) #11
  br label %166

166:                                              ; preds = %135, %162
  %167 = phi i64* [ %165, %162 ], [ %109, %135 ]
  store i64* %167, i64** %142, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %7) #11
  br label %168

168:                                              ; preds = %166, %106
  %169 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 1
  br label %170

170:                                              ; preds = %297, %168
  %171 = load i32, i32* %169, align 4
  switch i32 %171, label %297 [
    i32 4, label %298
    i32 0, label %172
    i32 5, label %176
    i32 1, label %201
    i32 6, label %222
    i32 2, label %231
    i32 3, label %231
    i32 7, label %296
  ]

172:                                              ; preds = %170
  %173 = call zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* nonnull %7) #11
  br i1 %173, label %297, label %174

174:                                              ; preds = %172
  %175 = call i16 @_ZN2v88internal8JSObject32SetPropertyWithFailedAccessCheckEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %1, i64 %3) #11
  br label %300

176:                                              ; preds = %170
  %177 = call i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* nonnull %7) #11
  %178 = load i64, i64* %177, align 8
  %179 = and i64 %178, 1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %201, label %181

181:                                              ; preds = %176
  %182 = and i64 %178, -4294967296
  %183 = add i64 %178, -1
  %184 = inttoptr i64 %183 to i32*
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %182, %186
  %188 = add i64 %187, 7
  %189 = inttoptr i64 %188 to i16*
  %190 = load atomic i16, i16* %189 monotonic, align 2
  %191 = icmp eq i16 %190, 86
  br i1 %191, label %192, label %201

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 4, i32 0
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %192
  %198 = call i16 @_ZN2v88internal6Object23WriteToReadOnlyPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %1, i64 %3)
  br label %300

199:                                              ; preds = %192
  %200 = call i16 @_ZN2v88internal6Object23SetPropertyWithAccessorEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %1, i64 %3)
  br label %300

201:                                              ; preds = %170, %176, %181
  %202 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %203 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %202, i64 0, i32 0, i32 0
  %204 = load i64*, i64** %203, align 8
  %205 = icmp eq i64* %204, null
  br i1 %205, label %206, label %213

206:                                              ; preds = %201
  %207 = bitcast %"class.v8::internal::Isolate"** %10 to %"class.v8::internal::Factory"**
  %208 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %207, align 8
  %209 = load i64, i64* %20, align 8
  %210 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %208, i64 %209, i1 zeroext true) #11
  %211 = ptrtoint i64* %210 to i64
  %212 = bitcast %"class.v8::internal::Handle.1234"* %202 to i64*
  store i64 %211, i64* %212, align 8
  br label %213

213:                                              ; preds = %201, %206
  %214 = phi i64* [ %210, %206 ], [ %204, %201 ]
  %215 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %11, i64 %3) #11
  %216 = icmp eq i32 %215, 1
  br i1 %216, label %300, label %217

217:                                              ; preds = %213
  %218 = bitcast %"class.v8::internal::Isolate"* %11 to %"class.v8::internal::Factory"*
  %219 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %218, i32 156, i64* %214, i64* null, i64* null) #11
  %220 = load i64, i64* %219, align 8
  %221 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %11, i64 %220, %"class.v8::internal::MessageLocation"* null) #11
  br label %300

222:                                              ; preds = %170
  %223 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %7, i64 0, i32 4, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = and i32 %224, 8
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %222
  %228 = call i16 @_ZN2v88internal6Object23WriteToReadOnlyPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %1, i64 %3)
  br label %300

229:                                              ; preds = %222
  %230 = call i16 @_ZN2v88internal6Object15SetDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %1)
  br label %300

231:                                              ; preds = %170, %170
  %232 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %232) #11
  store i8 0, i8* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 1, i32 0, i32 0
  %234 = bitcast i64** %233 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 32, i1 false) #11
  %235 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"* nonnull %7, %"class.v8::internal::PropertyDescriptor"* nonnull %8) #11
  %236 = trunc i16 %235 to i8
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %294, label %238

238:                                              ; preds = %231
  %239 = icmp ugt i16 %235, 255
  br i1 %239, label %242, label %240

240:                                              ; preds = %238
  %241 = call i16 @_ZN2v88internal10JSReceiver18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %1, i64 %3) #11
  br label %294

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 2, i32 0, i32 0
  %244 = load i64*, i64** %243, align 8
  %245 = icmp eq i64* %244, null
  br i1 %245, label %246, label %254

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 3, i32 0, i32 0
  %248 = load i64*, i64** %247, align 8
  %249 = icmp eq i64* %248, null
  br i1 %249, label %250, label %254

250:                                              ; preds = %246
  %251 = load i8, i8* %232, align 8
  %252 = and i8 %251, 16
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %254, label %275

254:                                              ; preds = %250, %246, %242
  %255 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %256 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %255, i64 0, i32 0, i32 0
  %257 = load i64*, i64** %256, align 8
  %258 = icmp eq i64* %257, null
  br i1 %258, label %259, label %266

259:                                              ; preds = %254
  %260 = bitcast %"class.v8::internal::Isolate"** %10 to %"class.v8::internal::Factory"**
  %261 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %260, align 8
  %262 = load i64, i64* %20, align 8
  %263 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %261, i64 %262, i1 zeroext true) #11
  %264 = ptrtoint i64* %263 to i64
  %265 = bitcast %"class.v8::internal::Handle.1234"* %255 to i64*
  store i64 %264, i64* %265, align 8
  br label %266

266:                                              ; preds = %254, %259
  %267 = phi i64* [ %263, %259 ], [ %257, %254 ]
  %268 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %11, i64 %3) #11
  %269 = icmp eq i32 %268, 1
  br i1 %269, label %294, label %270

270:                                              ; preds = %266
  %271 = bitcast %"class.v8::internal::Isolate"* %11 to %"class.v8::internal::Factory"*
  %272 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %271, i32 156, i64* %267, i64* null, i64* null) #11
  %273 = load i64, i64* %272, align 8
  %274 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %11, i64 %273, %"class.v8::internal::MessageLocation"* null) #11
  br label %294

275:                                              ; preds = %250
  %276 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %276) #11
  store i8 0, i8* %276, align 8
  %277 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %9, i64 0, i32 1, i32 0, i32 0
  %278 = getelementptr inbounds i64*, i64** %277, i64 1
  %279 = bitcast i64** %278 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 24, i1 false) #11
  store i64* %1, i64** %277, align 8
  %280 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %281 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %280, i64 0, i32 0, i32 0
  %282 = load i64*, i64** %281, align 8
  %283 = icmp eq i64* %282, null
  br i1 %283, label %284, label %291

284:                                              ; preds = %275
  %285 = bitcast %"class.v8::internal::Isolate"** %10 to %"class.v8::internal::Factory"**
  %286 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %285, align 8
  %287 = load i64, i64* %20, align 8
  %288 = call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %286, i64 %287, i1 zeroext true) #11
  %289 = ptrtoint i64* %288 to i64
  %290 = bitcast %"class.v8::internal::Handle.1234"* %280 to i64*
  store i64 %289, i64* %290, align 8
  br label %291

291:                                              ; preds = %275, %284
  %292 = phi i64* [ %288, %284 ], [ %282, %275 ]
  %293 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %11, i64* %85, i64* %292, %"class.v8::internal::PropertyDescriptor"* nonnull %9, i64 %3) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %276) #11
  br label %294

294:                                              ; preds = %270, %266, %231, %291, %240
  %295 = phi i16 [ %293, %291 ], [ %241, %240 ], [ 0, %231 ], [ 0, %270 ], [ 1, %266 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %232) #11
  br label %300

296:                                              ; preds = %170
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

297:                                              ; preds = %170, %172
  call void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"* nonnull %7) #11
  br label %170

298:                                              ; preds = %170
  %299 = call i16 @_ZN2v88internal6Object15AddDataPropertyEPNS0_14LookupIteratorENS0_6HandleIS1_EENS0_18PropertyAttributesENS_5MaybeINS0_11ShouldThrowEEENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"* nonnull %7, i64* %1, i32 0, i64 %3, i32 %2)
  br label %300

300:                                              ; preds = %217, %213, %298, %294, %229, %227, %199, %197, %174
  %301 = phi i16 [ %295, %294 ], [ %228, %227 ], [ %230, %229 ], [ %198, %197 ], [ %200, %199 ], [ %175, %174 ], [ %299, %298 ], [ 0, %217 ], [ 1, %213 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %103) #11
  br label %302

302:                                              ; preds = %15, %300, %100
  %303 = phi i16 [ %101, %100 ], [ %301, %300 ], [ %16, %15 ]
  ret i16 %303
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object28RedefineIncompatiblePropertyEPNS0_7IsolateENS0_6HandleIS1_EES5_NS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %3)
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %9 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %8, i32 156, i64* %1, i64* null, i64* null) #11
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %10, %"class.v8::internal::MessageLocation"* null) #11
  br label %12

12:                                               ; preds = %4, %7
  %13 = phi i16 [ 0, %7 ], [ 1, %4 ]
  ret i16 %13
}

declare i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_14LookupIteratorEPNS0_18PropertyDescriptorE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #1

declare i16 @_ZN2v88internal10JSReceiver18CreateDataPropertyEPNS0_14LookupIteratorENS0_6HandleINS0_6ObjectEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::LookupIterator"*, i64*, i64) local_unnamed_addr #1

declare i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object20CannotCreatePropertyEPNS0_7IsolateENS0_6HandleIS1_EES5_S5_NS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %4)
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %10 = tail call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %11 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %9, i32 172, i64* %2, i64* %10, i64* %1) #11
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %12, %"class.v8::internal::MessageLocation"* null) #11
  br label %14

14:                                               ; preds = %5, %8
  %15 = phi i16 [ 0, %8 ], [ 1, %5 ]
  ret i16 %15
}

declare zeroext i1 @_ZNK2v88internal14LookupIterator16HolderIsReceiverEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

declare void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal6Object23WriteToReadOnlyPropertyEPNS0_7IsolateENS0_6HandleIS1_EES5_S5_NS0_11ShouldThrowE(%"class.v8::internal::Isolate"*, i64*, i64*, i64* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %4, 1
  br i1 %6, label %13, label %7

7:                                                ; preds = %5
  %8 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %9 = tail call i64* @_ZN2v88internal6Object6TypeOfEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %10 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %8, i32 171, i64* %2, i64* %9, i64* %1) #11
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %11, %"class.v8::internal::MessageLocation"* null) #11
  br label %13

13:                                               ; preds = %5, %7
  %14 = phi i16 [ 0, %7 ], [ 1, %5 ]
  ret i16 %14
}

declare void @_ZN2v88internal14LookupIterator22PrepareForDataPropertyENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #1

declare void @_ZN2v88internal14LookupIterator14WriteDataValueENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::LookupIterator"*, i64*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7JSArray25WouldChangeReadOnlyLengthENS0_6HandleIS1_EEj(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = and i64 %8, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = icmp slt i32 %7, 0
  br i1 %13, label %38, label %14, !prof !31

14:                                               ; preds = %12
  %15 = lshr i32 %7, 1
  br label %39

16:                                               ; preds = %2
  %17 = add i64 %9, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %4, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 66
  br i1 %25, label %26, label %38, !prof !32

26:                                               ; preds = %16
  %27 = add i64 %9, 3
  %28 = inttoptr i64 %27 to double*
  %29 = load double, double* %28, align 1
  %30 = fadd double %29, 0x4330000000000000
  %31 = bitcast double %30 to i64
  %32 = and i64 %31, -4294967296
  %33 = icmp eq i64 %32, 4841369599423283200
  br i1 %33, label %34, label %38, !prof !32

34:                                               ; preds = %26
  %35 = trunc i64 %31 to i32
  %36 = uitofp i32 %35 to double
  %37 = fcmp oeq double %29, %36
  br i1 %37, label %39, label %38, !prof !5

38:                                               ; preds = %26, %16, %12, %34
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.371, i64 0, i64 0)) #16
  unreachable

39:                                               ; preds = %14, %34
  %40 = phi i32 [ %15, %14 ], [ %35, %34 ]
  %41 = icmp ugt i32 %40, %1
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = tail call zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64* %0)
  br label %44

44:                                               ; preds = %39, %42
  %45 = phi i1 [ %43, %42 ], [ false, %39 ]
  ret i1 %45
}

declare i16 @_ZN2v88internal8JSObject14AddDataElementENS0_6HandleIS1_EEjNS2_INS0_6ObjectEEENS0_18PropertyAttributesE(i64*, i32, i64*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal8JSObject16ValidateElementsES1_(i64) local_unnamed_addr #1

declare void @_ZN2v88internal14LookupIterator31PrepareTransitionToDataPropertyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"*, i64*, i64*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal14LookupIterator29ApplyTransitionToDataPropertyENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal12AccessorInfo12AppendUniqueEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_10FixedArrayEEEi(%"class.v8::internal::Isolate"*, i64* nocapture readonly, i64* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = icmp sgt i32 %8, 1
  br i1 %9, label %10, label %142

10:                                               ; preds = %4
  %11 = lshr i32 %8, 1
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %15 = zext i32 %11 to i64
  br label %16

16:                                               ; preds = %140, %10
  %17 = phi i64 [ %5, %10 ], [ %141, %140 ]
  %18 = phi i64 [ %15, %10 ], [ %20, %140 ]
  %19 = phi i32 [ %3, %10 ], [ %138, %140 ]
  %20 = add nsw i64 %18, -1
  %21 = and i64 %17, -4294967296
  %22 = trunc i64 %20 to i32
  %23 = shl i32 %22, 2
  %24 = add i32 %23, 4
  %25 = sext i32 %24 to i64
  %26 = add i64 %17, 7
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %21, %30
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %16
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %31) #11
  %36 = load i64, i64* %35, align 8
  br label %48

37:                                               ; preds = %16
  %38 = load i64*, i64** %13, align 8
  %39 = load i64*, i64** %14, align 8
  %40 = icmp eq i64* %38, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %43

43:                                               ; preds = %41, %37
  %44 = phi i64* [ %42, %41 ], [ %38, %37 ]
  %45 = ptrtoint i64* %44 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  store i64* %47, i64** %13, align 8
  store i64 %31, i64* %44, align 8
  br label %48

48:                                               ; preds = %43, %34
  %49 = phi i64 [ %36, %34 ], [ %31, %43 ]
  %50 = phi i64* [ %35, %34 ], [ %44, %43 ]
  %51 = and i64 %49, -4294967296
  %52 = add i64 %49, 3
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %58 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %48
  %60 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %57, i64 %56) #11
  br label %72

61:                                               ; preds = %48
  %62 = load i64*, i64** %13, align 8
  %63 = load i64*, i64** %14, align 8
  %64 = icmp eq i64* %62, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %67

67:                                               ; preds = %65, %61
  %68 = phi i64* [ %66, %65 ], [ %62, %61 ]
  %69 = ptrtoint i64* %68 to i64
  %70 = add i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  store i64* %71, i64** %13, align 8
  store i64 %56, i64* %68, align 8
  br label %72

72:                                               ; preds = %67, %59
  %73 = phi i64* [ %60, %59 ], [ %68, %67 ]
  %74 = icmp sgt i32 %19, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %2, align 8
  br label %101

77:                                               ; preds = %72
  %78 = load i64, i64* %73, align 8
  %79 = load i64, i64* %2, align 8
  %80 = and i64 %79, -4294967296
  %81 = trunc i64 %78 to i32
  %82 = zext i32 %19 to i64
  %83 = add i64 %79, 7
  br label %86

84:                                               ; preds = %86
  %85 = icmp eq i64 %100, %82
  br i1 %85, label %101, label %86

86:                                               ; preds = %84, %77
  %87 = phi i64 [ 0, %77 ], [ %100, %84 ]
  %88 = trunc i64 %87 to i32
  %89 = shl i32 %88, 2
  %90 = sext i32 %89 to i64
  %91 = add i64 %83, %90
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %80, %94
  %96 = add i64 %95, 3
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, %81
  %100 = add nuw nsw i64 %87, 1
  br i1 %99, label %137, label %84

101:                                              ; preds = %84, %75
  %102 = phi i64 [ %76, %75 ], [ %79, %84 ]
  %103 = load i64, i64* %50, align 8
  %104 = shl i32 %19, 2
  %105 = sext i32 %104 to i64
  %106 = add nsw i64 %105, 7
  %107 = add i64 %106, %102
  %108 = inttoptr i64 %107 to i32*
  %109 = trunc i64 %103 to i32
  store atomic volatile i32 %109, i32* %108 monotonic, align 4
  %110 = and i64 %103, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %101
  %113 = and i64 %102, -262144
  %114 = or i64 %113, 8
  %115 = inttoptr i64 %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = and i64 %116, 262144
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %112
  %120 = or i64 %113, 16
  %121 = inttoptr i64 %120 to %"class.v8::internal::Heap"**
  %122 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %121, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %122, i64 %102, i64 %107, i64 %103) #11
  br label %123

123:                                              ; preds = %119, %112
  %124 = and i64 %103, -262144
  %125 = or i64 %124, 8
  %126 = inttoptr i64 %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 24
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %123
  %131 = load i64, i64* %115, align 8
  %132 = and i64 %131, 24
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %102, i64 %107, i64 %103) #11
  br label %135

135:                                              ; preds = %134, %130, %123, %101
  %136 = add nsw i32 %19, 1
  br label %137

137:                                              ; preds = %86, %135
  %138 = phi i32 [ %136, %135 ], [ %19, %86 ]
  %139 = icmp sgt i64 %20, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %137
  %141 = load i64, i64* %1, align 8
  br label %16

142:                                              ; preds = %137, %4
  %143 = phi i32 [ %3, %4 ], [ %138, %137 ]
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7JSProxy6RevokeENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -262144
  %4 = or i64 %3, 16
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5, align 16
  %7 = and i64 %2, -4294967296
  %8 = add i64 %2, 11
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %7, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ult i16 %20, 186
  br i1 %21, label %89, label %22

22:                                               ; preds = %1
  %23 = add i64 %6, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 6
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %2, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = trunc i64 %26 to i32
  store atomic volatile i32 %29, i32* %28 monotonic, align 4
  %30 = and i64 %26, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %22
  %33 = or i64 %3, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 262144
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = inttoptr i64 %4 to %"class.v8::internal::Heap"**
  %40 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %39, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %40, i64 %2, i64 %27, i64 %26) #11
  br label %41

41:                                               ; preds = %38, %32, %22
  %42 = and i64 %26, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %41
  %49 = or i64 %3, 8
  %50 = inttoptr i64 %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, 24
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %48
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %27, i64 %26) #11
  br label %55

55:                                               ; preds = %41, %48, %54
  %56 = load i64, i64* %0, align 8
  %57 = load i64, i64* %25, align 8
  %58 = add i64 %56, 11
  %59 = inttoptr i64 %58 to i32*
  %60 = trunc i64 %57 to i32
  store atomic volatile i32 %60, i32* %59 monotonic, align 4
  %61 = and i64 %57, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %55
  %64 = and i64 %56, -262144
  %65 = or i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 262144
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %63
  %71 = or i64 %64, 16
  %72 = inttoptr i64 %71 to %"class.v8::internal::Heap"**
  %73 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %72, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %73, i64 %56, i64 %58, i64 %57) #11
  br label %74

74:                                               ; preds = %70, %63, %55
  %75 = and i64 %57, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %74
  %82 = and i64 %56, -262144
  %83 = or i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = and i64 %85, 24
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %81
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %56, i64 %58, i64 %57) #11
  br label %89

89:                                               ; preds = %88, %81, %74, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Vector.1009", align 8
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  br label %15

13:                                               ; preds = %79
  %14 = icmp eq i32 %87, 102400
  br i1 %14, label %88, label %15

15:                                               ; preds = %13, %1
  %16 = phi i64 [ %3, %1 ], [ %68, %13 ]
  %17 = phi i32 [ 0, %1 ], [ %87, %13 ]
  %18 = and i64 %16, -4294967296
  %19 = add i64 %16, 11
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %18, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp ult i16 %31, 186
  br i1 %32, label %33, label %45

33:                                               ; preds = %15
  %34 = inttoptr i64 %8 to %"class.v8::internal::Factory"*
  %35 = bitcast %"class.v8::internal::Vector.1009"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.360, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Vector.1009", %"class.v8::internal::Vector.1009"* %2, i64 0, i32 1
  store i64 7, i64* %37, align 8
  %38 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %34, %"class.v8::internal::Vector.1009"* nonnull dereferenceable(16) %2, i8 zeroext 0) #11
  %39 = icmp eq i64* %38, null
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

41:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #11
  %42 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %34, i32 150, i64* nonnull %38, i64* null, i64* null) #11
  %43 = load i64, i64* %42, align 8
  %44 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %9, i64 %43, %"class.v8::internal::MessageLocation"* null) #11
  br label %90

45:                                               ; preds = %15
  %46 = add i64 %16, 7
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %18, %49
  %51 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %52 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %45
  %54 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %51, i64 %50) #11
  %55 = load i64, i64* %54, align 8
  br label %67

56:                                               ; preds = %45
  %57 = load i64*, i64** %11, align 8
  %58 = load i64*, i64** %12, align 8
  %59 = icmp eq i64* %57, %58
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #11
  br label %62

62:                                               ; preds = %60, %56
  %63 = phi i64* [ %61, %60 ], [ %57, %56 ]
  %64 = ptrtoint i64* %63 to i64
  %65 = add i64 %64, 8
  %66 = inttoptr i64 %65 to i64*
  store i64* %66, i64** %11, align 8
  store i64 %50, i64* %63, align 8
  br label %67

67:                                               ; preds = %53, %62
  %68 = phi i64 [ %55, %53 ], [ %50, %62 ]
  %69 = and i64 %68, -4294967296
  %70 = add i64 %68, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %69, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = icmp eq i16 %77, 1085
  br i1 %78, label %90, label %79

79:                                               ; preds = %67
  %80 = load atomic i32, i32* %71 monotonic, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %69, %81
  %83 = add i64 %82, 7
  %84 = inttoptr i64 %83 to i16*
  %85 = load atomic i16, i16* %84 monotonic, align 2
  %86 = icmp eq i16 %85, 188
  %87 = add nuw nsw i32 %17, 1
  br i1 %86, label %13, label %90

88:                                               ; preds = %13
  %89 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %9) #11
  br label %90

90:                                               ; preds = %79, %67, %41, %88
  %91 = phi i16 [ 0, %88 ], [ 0, %41 ], [ 1, %79 ], [ 257, %67 ]
  ret i16 %91
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZN2v88internal10JSReceiver11HasPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = ptrtoint i64* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 1
  %18 = and i64 %16, -4294967296
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  %28 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  br i1 %27, label %29, label %43

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %30, align 8
  %31 = add i64 %16, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -536870910
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = lshr i32 %33, 2
  %38 = and i32 %37, 16777215
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %51

40:                                               ; preds = %29
  %41 = and i32 %33, 3
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %53

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %3, i64* %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, -1
  %50 = inttoptr i64 %49 to i32*
  br label %53

51:                                               ; preds = %44, %36
  %52 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i64*
  store i64 %14, i64* %52, align 8
  br label %70

53:                                               ; preds = %46, %43
  %54 = phi i32* [ %50, %46 ], [ %20, %43 ]
  %55 = phi i64 [ %48, %46 ], [ %18, %43 ]
  store i64 -1, i64* %17, align 8
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, -32
  %63 = icmp eq i16 %62, 32
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %65, align 8
  %67 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %66, %"class.v8::internal::Isolate"* %12, i64* %1) #11
  br label %68

68:                                               ; preds = %64, %53
  %69 = phi i64* [ %67, %64 ], [ %1, %53 ]
  store i64* %69, i64** %15, align 8
  br label %70

70:                                               ; preds = %51, %68
  %71 = phi i64* [ %1, %51 ], [ %69, %68 ]
  %72 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %72) #11
  %73 = load i64, i64* %17, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %12, i64* %0, i64* %71, i64 %73, i64* %0, i32 3) #11
  %74 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %72) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  ret i16 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy12CheckHasTrapEPNS0_7IsolateENS0_6HandleINS0_4NameEEENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %5 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast i64** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #11
  %8 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %1, %"class.v8::internal::PropertyDescriptor"* nonnull %4) #11
  %9 = trunc i16 %8 to i8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %3
  %12 = icmp ugt i16 %8, 255
  br i1 %12, label %13, label %33

13:                                               ; preds = %11
  %14 = load i8, i8* %5, align 8
  %15 = and i8 %14, 4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %19 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %18, i32 141, i64* %1, i64* null, i64* null) #11
  %20 = load i64, i64* %19, align 8
  %21 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %20, %"class.v8::internal::MessageLocation"* null) #11
  br label %33

22:                                               ; preds = %13
  %23 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %2) #11
  %24 = trunc i16 %23 to i8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = icmp ugt i16 %23, 255
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %30 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %29, i32 142, i64* %1, i64* null, i64* null) #11
  %31 = load i64, i64* %30, align 8
  %32 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %31, %"class.v8::internal::MessageLocation"* null) #11
  br label %33

33:                                               ; preds = %22, %28, %11, %26, %3, %17
  %34 = phi i16 [ 0, %17 ], [ 0, %3 ], [ 257, %26 ], [ 257, %11 ], [ 0, %28 ], [ 0, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret i16 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64*, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca [2 x %"class.v8::internal::Handle.1220"], align 16
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = load i64, i64* %0, align 8
  %8 = and i64 %7, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 6, i32 1, i32 3
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %18, label %30

18:                                               ; preds = %3
  %19 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 6, i32 1, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %13) #11
  br label %264

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 6
  %27 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %26) #11
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %13) #11
  br label %264

30:                                               ; preds = %25, %3
  %31 = inttoptr i64 %12 to %"class.v8::internal::Factory"*
  %32 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %31, i64 2552
  %33 = bitcast %"class.v8::internal::Factory"* %32 to i64*
  %34 = load i64, i64* %0, align 8
  %35 = and i64 %34, -4294967296
  %36 = add i64 %34, 11
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %35, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp ult i16 %48, 186
  br i1 %49, label %50, label %54

50:                                               ; preds = %30
  %51 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %31, i32 150, i64* %33, i64* null, i64* null) #11
  %52 = load i64, i64* %51, align 8
  %53 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %52, %"class.v8::internal::MessageLocation"* null) #11
  br label %264

54:                                               ; preds = %30
  %55 = add i64 %34, 7
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %35, %58
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %61 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %62 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  %64 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %61, i64 %59) #11
  br label %78

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %69 = load i64*, i64** %68, align 8
  %70 = icmp eq i64* %67, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %65
  %72 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #11
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i64* [ %72, %71 ], [ %67, %65 ]
  %75 = ptrtoint i64* %74 to i64
  %76 = add i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  store i64* %77, i64** %66, align 8
  store i64 %59, i64* %74, align 8
  br label %78

78:                                               ; preds = %63, %73
  %79 = phi i64* [ %64, %63 ], [ %74, %73 ]
  %80 = load i64, i64* %0, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, 11
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %88 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %78
  %90 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %87, i64 %86) #11
  %91 = load i64, i64* %90, align 8
  %92 = ptrtoint i64* %90 to i64
  br label %106

93:                                               ; preds = %78
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %95, %97
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #11
  br label %101

101:                                              ; preds = %99, %93
  %102 = phi i64* [ %100, %99 ], [ %95, %93 ]
  %103 = ptrtoint i64* %102 to i64
  %104 = add i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  store i64* %105, i64** %94, align 8
  store i64 %86, i64* %102, align 8
  br label %106

106:                                              ; preds = %89, %101
  %107 = phi i64 [ %92, %89 ], [ %103, %101 ]
  %108 = phi i64 [ %91, %89 ], [ %86, %101 ]
  %109 = phi i64* [ %90, %89 ], [ %102, %101 ]
  %110 = and i64 %108, -262144
  %111 = or i64 %110, 16
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 16
  %114 = add i64 %113, -41416
  %115 = inttoptr i64 %114 to %"class.v8::internal::Isolate"*
  %116 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %118 = icmp eq %"class.v8::internal::Factory"* %32, null
  br i1 %118, label %119, label %123

119:                                              ; preds = %106
  %120 = load i64, i64* null, align 536870912
  %121 = add i64 %120, -1
  %122 = inttoptr i64 %121 to i32*
  br label %144

123:                                              ; preds = %106
  %124 = load i64, i64* %33, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 0, i32 4
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %124, -1
  %128 = inttoptr i64 %127 to i32*
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i64 %126, 4294967295
  %131 = icmp eq i64 %130, 0
  tail call void @llvm.assume(i1 %131) #11
  %132 = zext i32 %129 to i64
  %133 = or i64 %126, %132
  %134 = add i64 %133, 7
  %135 = inttoptr i64 %134 to i16*
  %136 = load atomic i16, i16* %135 monotonic, align 2
  %137 = icmp eq i16 %136, 64
  br i1 %137, label %138, label %144

138:                                              ; preds = %123
  %139 = add i64 %124, 7
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138, %123, %119
  %145 = phi i32* [ %122, %119 ], [ %128, %138 ], [ %128, %123 ]
  %146 = phi i64 [ %120, %119 ], [ %124, %138 ], [ %124, %123 ]
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32* [ %145, %144 ], [ %128, %138 ]
  %149 = phi i64 [ %146, %144 ], [ %124, %138 ]
  %150 = phi i32 [ 3, %144 ], [ 0, %138 ]
  store i32 %150, i32* %117, align 8
  %151 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %115, %"class.v8::internal::Isolate"** %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  %157 = bitcast i64** %156 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %32, %"class.v8::internal::Factory"** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %109, i64** %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %162 = bitcast %"class.v8::internal::Handle.1220"* %161 to i64*
  store i64 %107, i64* %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %164 = bitcast i64* %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 -1, i64 16, i1 false) #11
  %165 = and i64 %149, -4294967296
  %166 = load atomic i32, i32* %148 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %165, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = and i16 %171, -32
  %173 = icmp eq i16 %172, 32
  br i1 %173, label %174, label %178

174:                                              ; preds = %147
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 5, i32 0, i32 0, i32 0
  %176 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %175, align 8
  %177 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %176, %"class.v8::internal::Isolate"* %115, i64* %33) #11
  br label %178

178:                                              ; preds = %174, %147
  %179 = phi i64* [ %177, %174 ], [ %33, %147 ]
  store i64* %179, i64** %156, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #11
  %180 = load i32, i32* %151, align 4
  %181 = icmp eq i32 %180, 4
  br i1 %181, label %182, label %187

182:                                              ; preds = %178
  %183 = bitcast %"class.v8::internal::Isolate"** %155 to %"class.v8::internal::Factory"**
  %184 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %184, i64 160
  %186 = bitcast %"class.v8::internal::Factory"* %185 to i64*
  br label %189

187:                                              ; preds = %178
  %188 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #11
  br label %189

189:                                              ; preds = %182, %187
  %190 = phi i64* [ %188, %187 ], [ %186, %182 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %116) #11
  %191 = icmp eq i64* %190, null
  br i1 %191, label %264, label %192

192:                                              ; preds = %189
  %193 = ptrtoint i64* %190 to i64
  %194 = load i64, i64* %190, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 0, i32 7, i32 0, i64 6
  %196 = load i64, i64* %195, align 8
  %197 = trunc i64 %194 to i32
  %198 = trunc i64 %196 to i32
  %199 = icmp eq i32 %197, %198
  br i1 %199, label %205, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %115, i64 0, i32 0, i32 7, i32 0, i64 4
  %202 = load i64, i64* %201, align 8
  %203 = trunc i64 %202 to i32
  %204 = icmp eq i32 %197, %203
  br i1 %204, label %205, label %209

205:                                              ; preds = %200, %192
  %206 = inttoptr i64 %114 to %"class.v8::internal::Factory"*
  %207 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %206, i64 160
  %208 = ptrtoint %"class.v8::internal::Factory"* %207 to i64
  br label %229

209:                                              ; preds = %200
  %210 = and i64 %194, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %224, label %212

212:                                              ; preds = %209
  %213 = and i64 %194, -4294967296
  %214 = add i64 %194, -1
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = zext i32 %216 to i64
  %218 = or i64 %213, %217
  %219 = add i64 %218, 9
  %220 = inttoptr i64 %219 to i8*
  %221 = load atomic i8, i8* %220 monotonic, align 1
  %222 = and i8 %221, 2
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %224, label %229

224:                                              ; preds = %212, %209
  %225 = inttoptr i64 %114 to %"class.v8::internal::Factory"*
  %226 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %225, i32 121, i64* nonnull %190, i64* %33, i64* %109) #11
  %227 = load i64, i64* %226, align 8
  %228 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %115, i64 %227, %"class.v8::internal::MessageLocation"* null) #11
  br label %264

229:                                              ; preds = %205, %212
  %230 = phi i64 [ %208, %205 ], [ %193, %212 ]
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %264, label %232

232:                                              ; preds = %229
  %233 = inttoptr i64 %230 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 7, i32 0, i64 4
  %236 = load i64, i64* %235, align 8
  %237 = trunc i64 %234 to i32
  %238 = trunc i64 %236 to i32
  %239 = icmp eq i32 %237, %238
  br i1 %239, label %240, label %242

240:                                              ; preds = %232
  %241 = call i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64* %79, i64* %1, i1 zeroext %2) #11
  br label %264

242:                                              ; preds = %232
  %243 = bitcast [2 x %"class.v8::internal::Handle.1220"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %243) #11
  %244 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 0
  %245 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64* %79, i64** %245, align 16
  %246 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %5, i64 0, i64 1, i32 0, i32 0
  store i64* %1, i64** %246, align 8
  %247 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %13, i64* %233, i64* %109, i32 2, %"class.v8::internal::Handle.1220"* nonnull %244) #11
  %248 = icmp eq i64* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %242
  %250 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #11
  %251 = load i64, i64* %247, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  %254 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %253, %"class.v8::internal::Isolate"* %13)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #11
  br i1 %254, label %260, label %255

255:                                              ; preds = %249
  br i1 %2, label %256, label %262

256:                                              ; preds = %255
  %257 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %31, i32 155, i64* %33, i64* %1, i64* null) #11
  %258 = load i64, i64* %257, align 8
  %259 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %13, i64 %258, %"class.v8::internal::MessageLocation"* null) #11
  br label %262

260:                                              ; preds = %249
  %261 = call i16 @_ZN2v88internal7JSProxy15CheckDeleteTrapEPNS0_7IsolateENS0_6HandleINS0_4NameEEENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %13, i64* %1, i64* %79)
  br label %262

262:                                              ; preds = %255, %242, %260, %256
  %263 = phi i16 [ 0, %256 ], [ %261, %260 ], [ 0, %242 ], [ 1, %255 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %243) #11
  br label %264

264:                                              ; preds = %189, %224, %240, %262, %229, %23, %28, %50
  %265 = phi i16 [ 0, %50 ], [ 0, %28 ], [ 0, %23 ], [ %241, %240 ], [ %263, %262 ], [ 0, %229 ], [ 0, %224 ], [ 0, %189 ]
  ret i16 %265
}

declare i16 @_ZN2v88internal10JSReceiver23DeletePropertyOrElementENS0_6HandleIS1_EENS2_INS0_4NameEEENS0_12LanguageModeE(i64*, i64*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy15CheckDeleteTrapEPNS0_7IsolateENS0_6HandleINS0_4NameEEENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %5 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %4, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast i64** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #11
  %8 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %0, i64* %2, i64* %1, %"class.v8::internal::PropertyDescriptor"* nonnull %4) #11
  %9 = trunc i16 %8 to i8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %3
  %12 = icmp ugt i16 %8, 255
  br i1 %12, label %13, label %33

13:                                               ; preds = %11
  %14 = load i8, i8* %5, align 8
  %15 = and i8 %14, 4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %19 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %18, i32 129, i64* %1, i64* null, i64* null) #11
  %20 = load i64, i64* %19, align 8
  %21 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %20, %"class.v8::internal::MessageLocation"* null) #11
  br label %33

22:                                               ; preds = %13
  %23 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %2) #11
  %24 = trunc i16 %23 to i8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = icmp ugt i16 %23, 255
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %30 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %29, i32 130, i64* %1, i64* null, i64* null) #11
  %31 = load i64, i64* %30, align 8
  %32 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %31, %"class.v8::internal::MessageLocation"* null) #11
  br label %33

33:                                               ; preds = %22, %28, %11, %26, %3, %17
  %34 = phi i16 [ 0, %17 ], [ 0, %3 ], [ 257, %26 ], [ 257, %11 ], [ 0, %28 ], [ 0, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret i16 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal7JSProxy3NewEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = and i64 %4, -4294967296
  %9 = add i64 %4, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp ugt i16 %16, 185
  br i1 %17, label %23, label %18

18:                                               ; preds = %3, %7
  %19 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %20 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %19, i32 144, i64* null, i64* null, i64* null) #11
  %21 = load i64, i64* %20, align 8
  %22 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %21, %"class.v8::internal::MessageLocation"* null) #11
  br label %48

23:                                               ; preds = %7
  %24 = load i64, i64* %2, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br label %41

29:                                               ; preds = %23
  %30 = and i64 %24, -4294967296
  %31 = add i64 %24, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp ugt i16 %38, 185
  %40 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  br i1 %39, label %46, label %41

41:                                               ; preds = %27, %29
  %42 = phi %"class.v8::internal::Factory"* [ %28, %27 ], [ %40, %29 ]
  %43 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %42, i32 144, i64* null, i64* null, i64* null) #11
  %44 = load i64, i64* %43, align 8
  %45 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %44, %"class.v8::internal::MessageLocation"* null) #11
  br label %48

46:                                               ; preds = %29
  %47 = tail call i64* @_ZN2v88internal7Factory10NewJSProxyENS0_6HandleINS0_10JSReceiverEEES4_(%"class.v8::internal::Factory"* %40, i64* %1, i64* %2) #11
  br label %48

48:                                               ; preds = %46, %41, %18
  %49 = phi i64* [ %47, %46 ], [ null, %41 ], [ null, %18 ]
  ret i64* %49
}

declare i64* @_ZN2v88internal7Factory10NewJSProxyENS0_6HandleINS0_10JSReceiverEEES4_(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal7JSProxy16GetFunctionRealmENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* %0, align 8
  %3 = and i64 %2, -4294967296
  %4 = add i64 %2, 11
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = or i64 %3, %7
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %3, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp ult i16 %16, 186
  br i1 %17, label %18, label %29

18:                                               ; preds = %1
  %19 = and i64 %2, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = inttoptr i64 %23 to %"class.v8::internal::Factory"*
  %26 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %25, i32 150, i64* null, i64* null, i64* null) #11
  %27 = load i64, i64* %26, align 8
  %28 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %24, i64 %27, %"class.v8::internal::MessageLocation"* null) #11
  br label %62

29:                                               ; preds = %1
  %30 = add i64 %2, 7
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %3, %33
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 16
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 16
  %39 = add i64 %38, -41416
  %40 = inttoptr i64 %39 to %"class.v8::internal::Isolate"*
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 4
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %29
  %45 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %34) #11
  br label %59

46:                                               ; preds = %29
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 1
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %48, %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %40) #11
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i64* [ %53, %52 ], [ %48, %46 ]
  %56 = ptrtoint i64* %55 to i64
  %57 = add i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  store i64* %58, i64** %47, align 8
  store i64 %34, i64* %55, align 8
  br label %59

59:                                               ; preds = %44, %54
  %60 = phi i64* [ %45, %44 ], [ %55, %54 ]
  %61 = tail call i64* @_ZN2v88internal10JSReceiver16GetFunctionRealmENS0_6HandleIS1_EE(i64* %60) #11
  br label %62

62:                                               ; preds = %59, %18
  %63 = phi i64* [ null, %18 ], [ %61, %59 ]
  ret i64* %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7JSProxy21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %3 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #11
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %2, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast i64** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #11
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.v8::internal::Handle.1234", %"class.v8::internal::Handle.1234"* %10, i64 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %1
  %15 = bitcast %"class.v8::internal::Isolate"* %7 to %"class.v8::internal::Factory"*
  %16 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %17 = load i64, i64* %16, align 8
  %18 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %15, i64 %17, i1 zeroext true) #11
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast %"class.v8::internal::Handle.1234"* %10 to i64*
  store i64 %19, i64* %20, align 8
  br label %21

21:                                               ; preds = %1, %14
  %22 = phi i64* [ %18, %14 ], [ %12, %1 ]
  %23 = call i16 @_ZN2v88internal7JSProxy24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %7, i64* %9, i64* %22, %"class.v8::internal::PropertyDescriptor"* nonnull %2)
  %24 = trunc i16 %23 to i8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %60, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i16 %23, 255
  br i1 %27, label %28, label %60

28:                                               ; preds = %26
  %29 = load i8, i8* %3, align 8
  %30 = and i8 %29, 2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = shl i8 %29, 1
  %34 = and i8 %33, 2
  %35 = xor i8 %34, 2
  %36 = zext i8 %35 to i64
  br label %37

37:                                               ; preds = %32, %28
  %38 = phi i64 [ 0, %28 ], [ %36, %32 ]
  %39 = and i8 %29, 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = and i8 %29, 4
  %43 = xor i8 %42, 4
  %44 = zext i8 %43 to i64
  br label %45

45:                                               ; preds = %41, %37
  %46 = phi i64 [ 0, %37 ], [ %44, %41 ]
  %47 = or i64 %46, %38
  %48 = and i8 %29, 32
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = lshr i8 %29, 4
  %52 = and i8 %51, 1
  %53 = xor i8 %52, 1
  %54 = zext i8 %53 to i64
  br label %55

55:                                               ; preds = %45, %50
  %56 = phi i64 [ 0, %45 ], [ %54, %50 ]
  %57 = or i64 %47, %56
  %58 = shl nuw nsw i64 %57, 32
  %59 = or i64 %58, 1
  br label %60

60:                                               ; preds = %26, %21, %55
  %61 = phi i64 [ %59, %55 ], [ 0, %21 ], [ 274877906945, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #11
  ret i64 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca [2 x %"class.v8::internal::Handle.1220"], align 16
  %7 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %8 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %4
  %13 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #11
  br label %354

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %21 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %20) #11
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #11
  br label %354

24:                                               ; preds = %19, %4
  %25 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 339
  %27 = load i64, i64* %1, align 8
  %28 = and i64 %27, -4294967296
  %29 = add i64 %27, 11
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %28, %32
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %24
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %33) #11
  br label %52

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %33, i64* %48, align 8
  br label %52

52:                                               ; preds = %37, %47
  %53 = phi i64* [ %38, %37 ], [ %48, %47 ]
  %54 = load i64, i64* %1, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, 11
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = add i64 %60, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %55, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp ult i16 %68, 186
  br i1 %69, label %70, label %74

70:                                               ; preds = %52
  %71 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %25, i32 150, i64* %26, i64* null, i64* null) #11
  %72 = load i64, i64* %71, align 8
  %73 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %72, %"class.v8::internal::MessageLocation"* null) #11
  br label %354

74:                                               ; preds = %52
  %75 = add i64 %54, 7
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %55, %78
  %80 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %81 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %74
  %83 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %80, i64 %79) #11
  br label %97

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %88 = load i64*, i64** %87, align 8
  %89 = icmp eq i64* %86, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %84
  %91 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %92

92:                                               ; preds = %90, %84
  %93 = phi i64* [ %91, %90 ], [ %86, %84 ]
  %94 = ptrtoint i64* %93 to i64
  %95 = add i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  store i64* %96, i64** %85, align 8
  store i64 %79, i64* %93, align 8
  br label %97

97:                                               ; preds = %82, %92
  %98 = phi i64* [ %83, %82 ], [ %93, %92 ]
  %99 = load i64, i64* %53, align 8
  %100 = and i64 %99, -262144
  %101 = or i64 %100, 16
  %102 = inttoptr i64 %101 to i64*
  %103 = load i64, i64* %102, align 16
  %104 = add i64 %103, -41416
  %105 = inttoptr i64 %104 to %"class.v8::internal::Isolate"*
  %106 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %106) #11
  %107 = ptrtoint i64* %53 to i64
  %108 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %109 = icmp eq i64* %26, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %97
  %111 = load i64, i64* null, align 536870912
  %112 = add i64 %111, -1
  %113 = inttoptr i64 %112 to i32*
  br label %135

114:                                              ; preds = %97
  %115 = load i64, i64* %26, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 4
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %115, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i64 %117, 4294967295
  %122 = icmp eq i64 %121, 0
  tail call void @llvm.assume(i1 %122) #11
  %123 = zext i32 %120 to i64
  %124 = or i64 %117, %123
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = icmp eq i16 %127, 64
  br i1 %128, label %129, label %135

129:                                              ; preds = %114
  %130 = add i64 %115, 7
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %129, %114, %110
  %136 = phi i32* [ %113, %110 ], [ %119, %129 ], [ %119, %114 ]
  %137 = phi i64 [ %111, %110 ], [ %115, %129 ], [ %115, %114 ]
  br label %138

138:                                              ; preds = %135, %129
  %139 = phi i32* [ %136, %135 ], [ %119, %129 ]
  %140 = phi i64 [ %137, %135 ], [ %115, %129 ]
  %141 = phi i32 [ 3, %135 ], [ 0, %129 ]
  store i32 %141, i32* %108, align 8
  %142 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %105, %"class.v8::internal::Isolate"** %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  store i64* %26, i64** %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %53, i64** %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %152 = bitcast %"class.v8::internal::Handle.1220"* %151 to i64*
  store i64 %107, i64* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %154 = bitcast i64* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 -1, i64 16, i1 false) #11
  %155 = and i64 %140, -4294967296
  %156 = load atomic i32, i32* %139 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %155, %157
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i16*
  %161 = load atomic i16, i16* %160 monotonic, align 2
  %162 = and i16 %161, -32
  %163 = icmp eq i16 %162, 32
  br i1 %163, label %164, label %168

164:                                              ; preds = %138
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 5, i32 0, i32 0, i32 0
  %166 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %165, align 8
  %167 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %166, %"class.v8::internal::Isolate"* %105, i64* %26) #11
  br label %168

168:                                              ; preds = %164, %138
  %169 = phi i64* [ %167, %164 ], [ %26, %138 ]
  store i64* %169, i64** %147, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #11
  %170 = load i32, i32* %142, align 4
  %171 = icmp eq i32 %170, 4
  br i1 %171, label %172, label %177

172:                                              ; preds = %168
  %173 = bitcast %"class.v8::internal::Isolate"** %146 to %"class.v8::internal::Factory"**
  %174 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %174, i64 160
  %176 = bitcast %"class.v8::internal::Factory"* %175 to i64*
  br label %179

177:                                              ; preds = %168
  %178 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #11
  br label %179

179:                                              ; preds = %172, %177
  %180 = phi i64* [ %178, %177 ], [ %176, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %106) #11
  %181 = icmp eq i64* %180, null
  br i1 %181, label %354, label %182

182:                                              ; preds = %179
  %183 = ptrtoint i64* %180 to i64
  %184 = load i64, i64* %180, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 7, i32 0, i64 6
  %186 = load i64, i64* %185, align 8
  %187 = trunc i64 %184 to i32
  %188 = trunc i64 %186 to i32
  %189 = icmp eq i32 %187, %188
  br i1 %189, label %195, label %190

190:                                              ; preds = %182
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 7, i32 0, i64 4
  %192 = load i64, i64* %191, align 8
  %193 = trunc i64 %192 to i32
  %194 = icmp eq i32 %187, %193
  br i1 %194, label %195, label %199

195:                                              ; preds = %190, %182
  %196 = inttoptr i64 %104 to %"class.v8::internal::Factory"*
  %197 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %196, i64 160
  %198 = ptrtoint %"class.v8::internal::Factory"* %197 to i64
  br label %219

199:                                              ; preds = %190
  %200 = and i64 %184, 1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %214, label %202

202:                                              ; preds = %199
  %203 = and i64 %184, -4294967296
  %204 = add i64 %184, -1
  %205 = inttoptr i64 %204 to i32*
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = zext i32 %206 to i64
  %208 = or i64 %203, %207
  %209 = add i64 %208, 9
  %210 = inttoptr i64 %209 to i8*
  %211 = load atomic i8, i8* %210 monotonic, align 1
  %212 = and i8 %211, 2
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %219

214:                                              ; preds = %202, %199
  %215 = inttoptr i64 %104 to %"class.v8::internal::Factory"*
  %216 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %215, i32 121, i64* nonnull %180, i64* %26, i64* %53) #11
  %217 = load i64, i64* %216, align 8
  %218 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %105, i64 %217, %"class.v8::internal::MessageLocation"* null) #11
  br label %354

219:                                              ; preds = %195, %202
  %220 = phi i64 [ %198, %195 ], [ %183, %202 ]
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %354, label %222

222:                                              ; preds = %219
  %223 = inttoptr i64 %220 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %226 = load i64, i64* %225, align 8
  %227 = trunc i64 %224 to i32
  %228 = trunc i64 %226 to i32
  %229 = icmp eq i32 %227, %228
  br i1 %229, label %230, label %232

230:                                              ; preds = %222
  %231 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %0, i64* %98, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3) #11
  br label %354

232:                                              ; preds = %222
  %233 = bitcast [2 x %"class.v8::internal::Handle.1220"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %233) #11
  %234 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %6, i64 0, i64 0
  %235 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %6, i64 0, i64 0, i32 0, i32 0
  store i64* %98, i64** %235, align 16
  %236 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %6, i64 0, i64 1, i32 0, i32 0
  store i64* %2, i64** %236, align 8
  %237 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %0, i64* %223, i64* %53, i32 2, %"class.v8::internal::Handle.1220"* nonnull %234) #11
  %238 = icmp eq i64* %237, null
  br i1 %238, label %352, label %239

239:                                              ; preds = %232
  %240 = load i64, i64* %237, align 8
  %241 = and i64 %240, 1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %254, label %243

243:                                              ; preds = %239
  %244 = and i64 %240, -4294967296
  %245 = add i64 %240, -1
  %246 = inttoptr i64 %245 to i32*
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = zext i32 %247 to i64
  %249 = or i64 %244, %248
  %250 = add i64 %249, 7
  %251 = inttoptr i64 %250 to i16*
  %252 = load atomic i16, i16* %251 monotonic, align 2
  %253 = icmp ugt i16 %252, 185
  br i1 %253, label %263, label %254

254:                                              ; preds = %239, %243
  %255 = load i64, i64* %225, align 8
  %256 = trunc i64 %240 to i32
  %257 = trunc i64 %255 to i32
  %258 = icmp eq i32 %256, %257
  br i1 %258, label %263, label %259

259:                                              ; preds = %254
  %260 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %25, i32 134, i64* %2, i64* null, i64* null) #11
  %261 = load i64, i64* %260, align 8
  %262 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %261, %"class.v8::internal::MessageLocation"* null) #11
  br label %352

263:                                              ; preds = %243, %254
  %264 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %264) #11
  store i8 0, i8* %264, align 8
  %265 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 1, i32 0, i32 0
  %266 = bitcast i64** %265 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 32, i1 false) #11
  %267 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %0, i64* %98, i64* %2, %"class.v8::internal::PropertyDescriptor"* nonnull %7) #11
  %268 = trunc i16 %267 to i8
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %350, label %270

270:                                              ; preds = %263
  %271 = load i64, i64* %237, align 8
  %272 = load i64, i64* %225, align 8
  %273 = trunc i64 %271 to i32
  %274 = trunc i64 %272 to i32
  %275 = icmp eq i32 %273, %274
  br i1 %275, label %276, label %296

276:                                              ; preds = %270
  %277 = icmp ugt i16 %267, 255
  br i1 %277, label %278, label %350

278:                                              ; preds = %276
  %279 = load i8, i8* %264, align 8
  %280 = and i8 %279, 4
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  %283 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %25, i32 138, i64* %2, i64* null, i64* null) #11
  %284 = load i64, i64* %283, align 8
  %285 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %284, %"class.v8::internal::MessageLocation"* null) #11
  br label %350

286:                                              ; preds = %278
  %287 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %98) #11
  %288 = trunc i16 %287 to i8
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %350, label %290

290:                                              ; preds = %286
  %291 = icmp ugt i16 %287, 255
  br i1 %291, label %350, label %292

292:                                              ; preds = %290
  %293 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %25, i32 137, i64* %2, i64* null, i64* null) #11
  %294 = load i64, i64* %293, align 8
  %295 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %294, %"class.v8::internal::MessageLocation"* null) #11
  br label %350

296:                                              ; preds = %270
  %297 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %98) #11
  %298 = trunc i16 %297 to i8
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %350, label %300

300:                                              ; preds = %296
  %301 = call zeroext i1 @_ZN2v88internal18PropertyDescriptor20ToPropertyDescriptorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPS1_(%"class.v8::internal::Isolate"* %0, i64* nonnull %237, %"class.v8::internal::PropertyDescriptor"* %3) #11
  br i1 %301, label %302, label %350

302:                                              ; preds = %300
  call void @_ZN2v88internal18PropertyDescriptor26CompletePropertyDescriptorEPNS0_7IsolateEPS1_(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::PropertyDescriptor"* %3) #11
  %303 = icmp ugt i16 %297, 255
  %304 = call i16 @_ZN2v88internal10JSReceiver30IsCompatiblePropertyDescriptorEPNS0_7IsolateEbPNS0_18PropertyDescriptorES5_NS0_6HandleINS0_4NameEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i1 zeroext %303, %"class.v8::internal::PropertyDescriptor"* %3, %"class.v8::internal::PropertyDescriptor"* nonnull %7, i64* %2, i64 4294967297) #11
  %305 = trunc i16 %304 to i8
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %350, label %307

307:                                              ; preds = %302
  %308 = icmp ugt i16 %304, 255
  br i1 %308, label %313, label %309

309:                                              ; preds = %307
  %310 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %25, i32 133, i64* %2, i64* null, i64* null) #11
  %311 = load i64, i64* %310, align 8
  %312 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %311, %"class.v8::internal::MessageLocation"* null) #11
  br label %350

313:                                              ; preds = %307
  %314 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 0
  %315 = load i8, i8* %314, align 8
  %316 = and i8 %315, 4
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %318, label %350

318:                                              ; preds = %313
  %319 = load i8, i8* %264, align 8
  %320 = and i8 %319, 42
  %321 = icmp eq i8 %320, 0
  %322 = load i64*, i64** %265, align 8
  %323 = icmp eq i64* %322, null
  %324 = and i1 %321, %323
  br i1 %324, label %325, label %333

325:                                              ; preds = %318
  %326 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 2, i32 0, i32 0
  %327 = load i64*, i64** %326, align 8
  %328 = icmp eq i64* %327, null
  br i1 %328, label %329, label %333

329:                                              ; preds = %325
  %330 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 3, i32 0, i32 0
  %331 = load i64*, i64** %330, align 8
  %332 = icmp eq i64* %331, null
  br i1 %332, label %336, label %333

333:                                              ; preds = %318, %325, %329
  %334 = and i8 %319, 4
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %340, label %336

336:                                              ; preds = %333, %329
  %337 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %25, i32 135, i64* %2, i64* null, i64* null) #11
  %338 = load i64, i64* %337, align 8
  %339 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %338, %"class.v8::internal::MessageLocation"* null) #11
  br label %350

340:                                              ; preds = %333
  %341 = and i8 %315, 48
  %342 = icmp eq i8 %341, 32
  %343 = and i8 %319, 16
  %344 = icmp ne i8 %343, 0
  %345 = and i1 %342, %344
  br i1 %345, label %346, label %350

346:                                              ; preds = %340
  %347 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %25, i32 136, i64* %2, i64* null, i64* null) #11
  %348 = load i64, i64* %347, align 8
  %349 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %348, %"class.v8::internal::MessageLocation"* null) #11
  br label %350

350:                                              ; preds = %313, %340, %296, %300, %302, %346, %336, %309, %292, %286, %290, %276, %263, %282
  %351 = phi i16 [ 0, %282 ], [ 0, %263 ], [ 1, %276 ], [ 0, %292 ], [ 0, %286 ], [ 1, %290 ], [ 0, %296 ], [ 0, %300 ], [ 0, %336 ], [ 0, %346 ], [ 0, %309 ], [ 0, %302 ], [ 257, %340 ], [ 257, %313 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %264) #11
  br label %352

352:                                              ; preds = %232, %350, %259
  %353 = phi i16 [ %351, %350 ], [ 0, %259 ], [ 0, %232 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %233) #11
  br label %354

354:                                              ; preds = %179, %214, %70, %219, %352, %230, %17, %22
  %355 = phi i16 [ 0, %22 ], [ 0, %17 ], [ 0, %70 ], [ %231, %230 ], [ %353, %352 ], [ 0, %219 ], [ 0, %214 ], [ 0, %179 ]
  ret i16 %355
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal24PropertyKeyToArrayLengthENS0_6HandleINS0_6ObjectEEEPj(i64*, i32*) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = trunc i64 %4 to i32
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %69, label %10

10:                                               ; preds = %7
  %11 = lshr i32 %8, 1
  store i32 %11, i32* %1, align 4
  br label %69

12:                                               ; preds = %2
  %13 = and i64 %4, -4294967296
  %14 = add i64 %4, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 66
  br i1 %22, label %23, label %39

23:                                               ; preds = %12
  %24 = add i64 %4, 3
  %25 = inttoptr i64 %24 to double*
  %26 = load double, double* %25, align 1
  %27 = fadd double %26, 0x4330000000000000
  %28 = bitcast double %27 to i64
  %29 = and i64 %28, -4294967296
  %30 = icmp eq i64 %29, 4841369599423283200
  br i1 %30, label %31, label %39

31:                                               ; preds = %23
  %32 = trunc i64 %28 to i32
  store i32 %32, i32* %1, align 4
  %33 = uitofp i32 %32 to double
  %34 = fcmp oeq double %26, %33
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = load i64, i64* %0, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %69, label %39

39:                                               ; preds = %12, %23, %35
  %40 = phi i64 [ %36, %35 ], [ %4, %23 ], [ %4, %12 ]
  %41 = and i64 %40, -4294967296
  %42 = add i64 %40, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp ult i16 %49, 64
  br i1 %50, label %51, label %69

51:                                               ; preds = %39
  %52 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %53 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %40, i64* %53, align 8
  %54 = add i64 %40, 3
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, -536870910
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = lshr i32 %56, 2
  %61 = and i32 %60, 16777215
  store i32 %61, i32* %1, align 4
  br label %67

62:                                               ; preds = %51
  %63 = and i32 %56, 3
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = call zeroext i1 @_ZN2v88internal6String16SlowAsArrayIndexEPj(%"class.v8::internal::String"* nonnull %3, i32* %1) #11
  br label %67

67:                                               ; preds = %59, %62, %65
  %68 = phi i1 [ true, %59 ], [ %66, %65 ], [ false, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %69

69:                                               ; preds = %7, %35, %10, %39, %31, %67
  %70 = phi i1 [ %68, %67 ], [ true, %31 ], [ false, %39 ], [ true, %10 ], [ false, %35 ], [ false, %7 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal23PropertyKeyToArrayIndexENS0_6HandleINS0_6ObjectEEEPj(i64*, i32*) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN2v88internal24PropertyKeyToArrayLengthENS0_6HandleINS0_6ObjectEEEPj(i64* %0, i32* %1)
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = load i32, i32* %1, align 4
  %6 = icmp ne i32 %5, -1
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i1 [ false, %2 ], [ %6, %4 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSArray17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %8 = load i64, i64* %2, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %8 to i32
  %12 = trunc i64 %10 to i32
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = tail call i16 @_ZN2v88internal7JSArray14ArraySetLengthEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4)
  br label %125

16:                                               ; preds = %5
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 0, i32* %6, align 4
  %18 = call zeroext i1 @_ZN2v88internal24PropertyKeyToArrayLengthENS0_6HandleINS0_6ObjectEEEPj(i64* %2, i32* nonnull %6) #11
  %19 = load i32, i32* %6, align 4
  %20 = icmp ne i32 %19, -1
  %21 = and i1 %18, %20
  br i1 %21, label %22, label %121

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #11
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 1, i32 0, i32 0
  %25 = bitcast i64** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #11
  %26 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %27 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %9, %"class.v8::internal::PropertyDescriptor"* nonnull %7) #11
  %28 = load i64*, i64** %24, align 8
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %22
  %33 = trunc i64 %29 to i32
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %60, label %35, !prof !31

35:                                               ; preds = %32
  %36 = lshr i32 %33, 1
  br label %61

37:                                               ; preds = %22
  %38 = and i64 %29, -4294967296
  %39 = add i64 %29, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 66
  br i1 %47, label %48, label %60, !prof !32

48:                                               ; preds = %37
  %49 = add i64 %29, 3
  %50 = inttoptr i64 %49 to double*
  %51 = load double, double* %50, align 1
  %52 = fadd double %51, 0x4330000000000000
  %53 = bitcast double %52 to i64
  %54 = and i64 %53, -4294967296
  %55 = icmp eq i64 %54, 4841369599423283200
  br i1 %55, label %56, label %60, !prof !32

56:                                               ; preds = %48
  %57 = trunc i64 %53 to i32
  %58 = uitofp i32 %57 to double
  %59 = fcmp oeq double %51, %58
  br i1 %59, label %61, label %60, !prof !5

60:                                               ; preds = %48, %37, %32, %56
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.361, i64 0, i64 0)) #16
  unreachable

61:                                               ; preds = %35, %56
  %62 = phi i32 [ %36, %35 ], [ %57, %56 ]
  %63 = load i32, i32* %6, align 4
  %64 = icmp ult i32 %63, %62
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = load i8, i8* %23, align 8
  %67 = and i8 %66, 48
  %68 = icmp eq i8 %67, 32
  br i1 %68, label %69, label %76

69:                                               ; preds = %65
  %70 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %4)
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %119, label %72

72:                                               ; preds = %69
  %73 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %26, i32 50, i64* %2, i64* null, i64* null) #11
  %74 = load i64, i64* %73, align 8
  %75 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %74, %"class.v8::internal::MessageLocation"* null) #11
  br label %119

76:                                               ; preds = %65, %61
  %77 = call i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4) #11
  %78 = trunc i16 %77 to i8
  %79 = icmp ne i8 %78, 0
  %80 = icmp ugt i16 %77, 255
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %119

82:                                               ; preds = %76
  %83 = load i32, i32* %6, align 4
  %84 = icmp ult i32 %83, %62
  br i1 %84, label %119, label %85

85:                                               ; preds = %82
  %86 = add i32 %83, 1
  %87 = icmp ult i32 %86, 1073741824
  br i1 %87, label %88, label %109

88:                                               ; preds = %85
  %89 = sext i32 %86 to i64
  %90 = shl nsw i64 %89, 1
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %92 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %91, align 8
  %93 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %88
  %95 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %92, i64 %90) #11
  br label %116

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %100 = load i64*, i64** %99, align 8
  %101 = icmp eq i64* %98, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %96
  %103 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %104

104:                                              ; preds = %102, %96
  %105 = phi i64* [ %103, %102 ], [ %98, %96 ]
  %106 = ptrtoint i64* %105 to i64
  %107 = add i64 %106, 8
  %108 = inttoptr i64 %107 to i64*
  store i64* %108, i64** %97, align 8
  store i64 %90, i64* %105, align 8
  br label %116

109:                                              ; preds = %85
  %110 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %111 = uitofp i32 %86 to double
  %112 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %110) #11
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 3
  %115 = inttoptr i64 %114 to double*
  store double %111, double* %115, align 1
  br label %116

116:                                              ; preds = %94, %104, %109
  %117 = phi i64* [ %112, %109 ], [ %95, %94 ], [ %105, %104 ]
  store i64* %117, i64** %24, align 8
  %118 = call i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %9, %"class.v8::internal::PropertyDescriptor"* nonnull %7, i64 %4) #11
  br label %119

119:                                              ; preds = %76, %82, %116, %69, %72
  %120 = phi i16 [ 0, %72 ], [ 1, %69 ], [ 257, %82 ], [ 257, %116 ], [ %77, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #11
  br label %123

121:                                              ; preds = %16
  %122 = call i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4) #11
  br label %123

123:                                              ; preds = %121, %119
  %124 = phi i16 [ %120, %119 ], [ %122, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  br label %125

125:                                              ; preds = %123, %14
  %126 = phi i16 [ %15, %14 ], [ %124, %123 ]
  ret i16 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSArray14ArraySetLengthEPNS0_7IsolateENS0_6HandleIS1_EEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %8 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %2, i64 0, i32 1, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %14 = tail call i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %13, %"class.v8::internal::PropertyDescriptor"* %2, i64 %3) #11
  br label %243

15:                                               ; preds = %4
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 0, i32* %6, align 4
  %17 = call zeroext i1 @_ZN2v88internal7JSArray21AnythingToArrayLengthEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPj(%"class.v8::internal::Isolate"* %0, i64* nonnull %10, i32* nonnull %6)
  br i1 %17, label %18, label %241

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #11
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %7, i64 0, i32 1, i32 0, i32 0
  %21 = bitcast i64** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #11
  %22 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 363
  %24 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %23, %"class.v8::internal::PropertyDescriptor"* nonnull %7) #11
  %25 = load i64*, i64** %20, align 8
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %18
  %30 = trunc i64 %26 to i32
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %57, label %32, !prof !31

32:                                               ; preds = %29
  %33 = lshr i32 %30, 1
  br label %58

34:                                               ; preds = %18
  %35 = and i64 %26, -4294967296
  %36 = add i64 %26, -1
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp eq i16 %43, 66
  br i1 %44, label %45, label %57, !prof !32

45:                                               ; preds = %34
  %46 = add i64 %26, 3
  %47 = inttoptr i64 %46 to double*
  %48 = load double, double* %47, align 1
  %49 = fadd double %48, 0x4330000000000000
  %50 = bitcast double %49 to i64
  %51 = and i64 %50, -4294967296
  %52 = icmp eq i64 %51, 4841369599423283200
  br i1 %52, label %53, label %57, !prof !32

53:                                               ; preds = %45
  %54 = trunc i64 %50 to i32
  %55 = uitofp i32 %54 to double
  %56 = fcmp oeq double %48, %55
  br i1 %56, label %58, label %57, !prof !5

57:                                               ; preds = %45, %34, %29, %53
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.361, i64 0, i64 0)) #16
  unreachable

58:                                               ; preds = %32, %53
  %59 = phi i32 [ %33, %32 ], [ %54, %53 ]
  %60 = load i32, i32* %6, align 4
  %61 = icmp ult i32 %60, %59
  br i1 %61, label %95, label %62

62:                                               ; preds = %58
  %63 = icmp ult i32 %60, 1073741824
  br i1 %63, label %64, label %85

64:                                               ; preds = %62
  %65 = sext i32 %60 to i64
  %66 = shl nsw i64 %65, 1
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %64
  %71 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %66) #11
  br label %92

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %66, i64* %81, align 8
  br label %92

85:                                               ; preds = %62
  %86 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %87 = uitofp i32 %60 to double
  %88 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %86) #11
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 3
  %91 = inttoptr i64 %90 to double*
  store double %87, double* %91, align 1
  br label %92

92:                                               ; preds = %70, %80, %85
  %93 = phi i64* [ %88, %85 ], [ %71, %70 ], [ %81, %80 ]
  store i64* %93, i64** %9, align 8
  %94 = call i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %23, %"class.v8::internal::PropertyDescriptor"* %2, i64 %3) #11
  br label %239

95:                                               ; preds = %58
  %96 = load i8, i8* %19, align 8
  %97 = and i8 %96, 16
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %113, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %2, i64 0, i32 0
  %101 = load i8, i8* %100, align 8
  %102 = and i8 %101, 4
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %113

104:                                              ; preds = %99
  %105 = and i8 %101, 2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = and i8 %96, 1
  %109 = icmp ne i8 %108, 0
  %110 = and i8 %101, 1
  %111 = icmp ne i8 %110, 0
  %112 = xor i1 %109, %111
  br i1 %112, label %113, label %120

113:                                              ; preds = %99, %95, %107
  %114 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %3)
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %239, label %116

116:                                              ; preds = %113
  %117 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %22, i32 156, i64* %23, i64* null, i64* null) #11
  %118 = load i64, i64* %117, align 8
  %119 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %118, %"class.v8::internal::MessageLocation"* null) #11
  br label %239

120:                                              ; preds = %104, %107
  %121 = and i8 %101, 48
  %122 = icmp eq i8 %121, 32
  %123 = bitcast %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #11
  %124 = load i64, i64* %1, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef"* %5, i64 0, i32 0
  %127 = call zeroext i1 @_ZN2v88internal7JSArray23SetLengthWouldNormalizeEj(%"class.v8::internal::JSArray"* nonnull %126, i32 %60) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #11
  br i1 %127, label %128, label %130

128:                                              ; preds = %120
  %129 = call i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64* %1) #11
  br label %130

130:                                              ; preds = %120, %128
  %131 = load i64, i64* %1, align 8
  %132 = and i64 %131, -4294967296
  %133 = add i64 %131, -1
  %134 = inttoptr i64 %133 to i32*
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %132, %136
  %138 = add i64 %137, 10
  %139 = inttoptr i64 %138 to i8*
  %140 = load i8, i8* %139, align 1
  %141 = lshr i8 %140, 2
  %142 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %143 = zext i8 %141 to i64
  %144 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %142, i64 %143
  %145 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %144, align 8
  %146 = bitcast %"class.v8::internal::ElementsAccessor"* %145 to i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)***
  %147 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)**, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*** %146, align 8
  %148 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %147, i64 8
  %149 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %148, align 8
  %150 = call i16 %149(%"class.v8::internal::ElementsAccessor"* %145, i64* %1, i32 %60) #11
  %151 = trunc i16 %150 to i8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %239, label %153

153:                                              ; preds = %130
  br i1 %122, label %154, label %159

154:                                              ; preds = %153
  %155 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %155) #11
  %156 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %8, i64 0, i32 1, i32 0, i32 0
  %157 = bitcast i64** %156 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 32, i1 false) #11
  store i8 32, i8* %155, align 8
  %158 = call i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %23, %"class.v8::internal::PropertyDescriptor"* nonnull %8, i64 %3) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %155) #11
  br label %159

159:                                              ; preds = %153, %154
  %160 = load i64, i64* %1, align 8
  %161 = and i64 %160, -4294967296
  %162 = add i64 %160, 11
  %163 = inttoptr i64 %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %161, %165
  %167 = and i64 %165, 1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %159
  %170 = icmp slt i32 %164, 0
  br i1 %170, label %195, label %171, !prof !31

171:                                              ; preds = %169
  %172 = lshr i32 %164, 1
  br label %196

173:                                              ; preds = %159
  %174 = add i64 %166, -1
  %175 = inttoptr i64 %174 to i32*
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = zext i32 %176 to i64
  %178 = or i64 %161, %177
  %179 = add i64 %178, 7
  %180 = inttoptr i64 %179 to i16*
  %181 = load atomic i16, i16* %180 monotonic, align 2
  %182 = icmp eq i16 %181, 66
  br i1 %182, label %183, label %195, !prof !32

183:                                              ; preds = %173
  %184 = add i64 %166, 3
  %185 = inttoptr i64 %184 to double*
  %186 = load double, double* %185, align 1
  %187 = fadd double %186, 0x4330000000000000
  %188 = bitcast double %187 to i64
  %189 = and i64 %188, -4294967296
  %190 = icmp eq i64 %189, 4841369599423283200
  br i1 %190, label %191, label %195, !prof !32

191:                                              ; preds = %183
  %192 = trunc i64 %188 to i32
  %193 = uitofp i32 %192 to double
  %194 = fcmp oeq double %186, %193
  br i1 %194, label %196, label %195, !prof !5

195:                                              ; preds = %183, %173, %169, %191
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.363, i64 0, i64 0)) #16
  unreachable

196:                                              ; preds = %171, %191
  %197 = phi i32 [ %172, %171 ], [ %192, %191 ]
  %198 = load i32, i32* %6, align 4
  %199 = icmp eq i32 %197, %198
  br i1 %199, label %239, label %200

200:                                              ; preds = %196
  %201 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %3)
  %202 = icmp eq i32 %201, 1
  br i1 %202, label %239, label %203

203:                                              ; preds = %200
  %204 = add i32 %197, -1
  %205 = icmp ult i32 %204, 1073741824
  br i1 %205, label %206, label %227

206:                                              ; preds = %203
  %207 = sext i32 %204 to i64
  %208 = shl nsw i64 %207, 1
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %210 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %209, align 8
  %211 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %210, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %206
  %213 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %210, i64 %208) #11
  br label %234

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %216 = load i64*, i64** %215, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %218 = load i64*, i64** %217, align 8
  %219 = icmp eq i64* %216, %218
  br i1 %219, label %220, label %222

220:                                              ; preds = %214
  %221 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %222

222:                                              ; preds = %220, %214
  %223 = phi i64* [ %221, %220 ], [ %216, %214 ]
  %224 = ptrtoint i64* %223 to i64
  %225 = add i64 %224, 8
  %226 = inttoptr i64 %225 to i64*
  store i64* %226, i64** %215, align 8
  store i64 %208, i64* %223, align 8
  br label %234

227:                                              ; preds = %203
  %228 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %229 = uitofp i32 %204 to double
  %230 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %228) #11
  %231 = load i64, i64* %230, align 8
  %232 = add i64 %231, 3
  %233 = inttoptr i64 %232 to double*
  store double %229, double* %233, align 1
  br label %234

234:                                              ; preds = %212, %222, %227
  %235 = phi i64* [ %230, %227 ], [ %213, %212 ], [ %223, %222 ]
  %236 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %22, i32 169, i64* %235, i64* %1, i64* null) #11
  %237 = load i64, i64* %236, align 8
  %238 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %237, %"class.v8::internal::MessageLocation"* null) #11
  br label %239

239:                                              ; preds = %196, %234, %200, %130, %113, %116, %92
  %240 = phi i16 [ %94, %92 ], [ 0, %116 ], [ 1, %113 ], [ 0, %130 ], [ 0, %234 ], [ 1, %200 ], [ 257, %196 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #11
  br label %241

241:                                              ; preds = %15, %239
  %242 = phi i16 [ %240, %239 ], [ 0, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  br label %243

243:                                              ; preds = %241, %12
  %244 = phi i16 [ %242, %241 ], [ %14, %12 ]
  ret i16 %244
}

declare i16 @_ZN2v88internal10JSReceiver25OrdinaryDefineOwnPropertyEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7JSArray21AnythingToArrayLengthEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPj(%"class.v8::internal::Isolate"*, i64*, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = trunc i64 %5 to i32
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %38, label %11

11:                                               ; preds = %8
  %12 = lshr i32 %9, 1
  store i32 %12, i32* %2, align 4
  br label %194

13:                                               ; preds = %3
  %14 = and i64 %5, -4294967296
  %15 = add i64 %5, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 66
  br i1 %23, label %24, label %38

24:                                               ; preds = %13
  %25 = add i64 %5, 3
  %26 = inttoptr i64 %25 to double*
  %27 = load double, double* %26, align 1
  %28 = fadd double %27, 0x4330000000000000
  %29 = bitcast double %28 to i64
  %30 = and i64 %29, -4294967296
  %31 = icmp eq i64 %30, 4841369599423283200
  br i1 %31, label %32, label %38

32:                                               ; preds = %24
  %33 = trunc i64 %29 to i32
  store i32 %33, i32* %2, align 4
  %34 = uitofp i32 %33 to double
  %35 = fcmp oeq double %27, %34
  br i1 %35, label %194, label %36

36:                                               ; preds = %32
  %37 = load i64, i64* %1, align 8
  br label %38

38:                                               ; preds = %36, %24, %13, %8
  %39 = phi i64 [ %37, %36 ], [ %5, %24 ], [ %5, %13 ], [ %5, %8 ]
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  br label %75

44:                                               ; preds = %38
  %45 = and i64 %39, -4294967296
  %46 = add i64 %39, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp ult i16 %53, 64
  %55 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  br i1 %54, label %56, label %75

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %39, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  %59 = add i64 %39, 3
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, -536870910
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = lshr i32 %61, 2
  %66 = and i32 %65, 16777215
  store i32 %66, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %194

67:                                               ; preds = %56
  %68 = and i32 %61, 3
  %69 = icmp eq i32 %68, 2
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %77

71:                                               ; preds = %67
  %72 = call zeroext i1 @_ZN2v88internal6String16SlowAsArrayIndexEPj(%"class.v8::internal::String"* nonnull %58, i32* %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br i1 %72, label %194, label %73

73:                                               ; preds = %71
  %74 = load i64, i64* %1, align 8
  br label %77

75:                                               ; preds = %42, %44
  %76 = phi i8* [ %43, %42 ], [ %55, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  br label %77

77:                                               ; preds = %73, %70, %75
  %78 = phi i64 [ %74, %73 ], [ %39, %70 ], [ %39, %75 ]
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %106

81:                                               ; preds = %77
  %82 = trunc i64 %78 to i32
  %83 = ashr i32 %82, 1
  %84 = icmp slt i32 %82, 2
  %85 = sext i32 %83 to i64
  %86 = shl nsw i64 %85, 1
  %87 = select i1 %84, i64 0, i64 %86
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %89 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %88, align 8
  %90 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %81
  %92 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %89, i64 %87) #11
  br label %108

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %97 = load i64*, i64** %96, align 8
  %98 = icmp eq i64* %95, %97
  br i1 %98, label %99, label %101

99:                                               ; preds = %93
  %100 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %101

101:                                              ; preds = %99, %93
  %102 = phi i64* [ %100, %99 ], [ %95, %93 ]
  %103 = ptrtoint i64* %102 to i64
  %104 = add i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  store i64* %105, i64** %94, align 8
  store i64 %87, i64* %102, align 8
  br label %108

106:                                              ; preds = %77
  %107 = call i64* @_ZN2v88internal6Object15ConvertToUint32EPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #11
  br label %108

108:                                              ; preds = %91, %101, %106
  %109 = phi i64* [ %107, %106 ], [ %92, %91 ], [ %102, %101 ]
  %110 = icmp eq i64* %109, null
  br i1 %110, label %194, label %111

111:                                              ; preds = %108
  %112 = load i64, i64* %1, align 8
  %113 = and i64 %112, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %128, label %115

115:                                              ; preds = %111
  %116 = and i64 %112, -4294967296
  %117 = add i64 %112, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %116, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = icmp eq i16 %124, 66
  br i1 %125, label %128, label %126

126:                                              ; preds = %115
  %127 = call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 0) #11
  br label %128

128:                                              ; preds = %111, %115, %126
  %129 = phi i64* [ %127, %126 ], [ %1, %115 ], [ %1, %111 ]
  %130 = icmp eq i64* %129, null
  br i1 %130, label %194, label %131

131:                                              ; preds = %128
  %132 = load i64, i64* %109, align 8
  %133 = and i64 %132, 1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %131
  %136 = trunc i64 %132 to i32
  %137 = ashr i32 %136, 1
  %138 = sitofp i32 %137 to double
  br label %143

139:                                              ; preds = %131
  %140 = add i64 %132, 3
  %141 = inttoptr i64 %140 to double*
  %142 = load double, double* %141, align 1
  br label %143

143:                                              ; preds = %135, %139
  %144 = phi double [ %138, %135 ], [ %142, %139 ]
  %145 = load i64, i64* %129, align 8
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %143
  %149 = trunc i64 %145 to i32
  %150 = ashr i32 %149, 1
  %151 = sitofp i32 %150 to double
  br label %156

152:                                              ; preds = %143
  %153 = add i64 %145, 3
  %154 = inttoptr i64 %153 to double*
  %155 = load double, double* %154, align 1
  br label %156

156:                                              ; preds = %148, %152
  %157 = phi double [ %151, %148 ], [ %155, %152 ]
  %158 = fcmp une double %144, %157
  br i1 %158, label %159, label %164

159:                                              ; preds = %156
  %160 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %161 = call i64* @_ZN2v88internal7Factory13NewRangeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %160, i32 199, i64* null, i64* null, i64* null) #11
  %162 = load i64, i64* %161, align 8
  %163 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %162, %"class.v8::internal::MessageLocation"* null) #11
  br label %194

164:                                              ; preds = %156
  br i1 %134, label %165, label %170

165:                                              ; preds = %164
  %166 = trunc i64 %132 to i32
  %167 = icmp slt i32 %166, 0
  br i1 %167, label %193, label %168, !prof !31

168:                                              ; preds = %165
  %169 = lshr i32 %166, 1
  store i32 %169, i32* %2, align 4
  br label %194

170:                                              ; preds = %164
  %171 = and i64 %132, -4294967296
  %172 = add i64 %132, -1
  %173 = inttoptr i64 %172 to i32*
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = zext i32 %174 to i64
  %176 = or i64 %171, %175
  %177 = add i64 %176, 7
  %178 = inttoptr i64 %177 to i16*
  %179 = load atomic i16, i16* %178 monotonic, align 2
  %180 = icmp eq i16 %179, 66
  br i1 %180, label %181, label %193, !prof !32

181:                                              ; preds = %170
  %182 = add i64 %132, 3
  %183 = inttoptr i64 %182 to double*
  %184 = load double, double* %183, align 1
  %185 = fadd double %184, 0x4330000000000000
  %186 = bitcast double %185 to i64
  %187 = and i64 %186, -4294967296
  %188 = icmp eq i64 %187, 4841369599423283200
  br i1 %188, label %189, label %193, !prof !32

189:                                              ; preds = %181
  %190 = trunc i64 %186 to i32
  store i32 %190, i32* %2, align 4
  %191 = uitofp i32 %190 to double
  %192 = fcmp oeq double %184, %191
  br i1 %192, label %194, label %193, !prof !5

193:                                              ; preds = %181, %170, %165, %189
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.362, i64 0, i64 0)) #16
  unreachable

194:                                              ; preds = %108, %168, %128, %189, %159, %64, %11, %71, %32
  %195 = phi i1 [ true, %32 ], [ true, %71 ], [ true, %11 ], [ true, %64 ], [ false, %108 ], [ false, %159 ], [ true, %189 ], [ false, %128 ], [ true, %168 ]
  ret i1 %195
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSArray9SetLengthENS0_6HandleIS1_EEj(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef", align 8
  %4 = bitcast %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = load i64, i64* %0, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSArray>::ObjectRef"* %3, i64 0, i32 0
  %8 = call zeroext i1 @_ZN2v88internal7JSArray23SetLengthWouldNormalizeEj(%"class.v8::internal::JSArray"* nonnull %7, i32 %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64* %0) #11
  br label %11

11:                                               ; preds = %9, %2
  %12 = load i64, i64* %0, align 8
  %13 = and i64 %12, -4294967296
  %14 = add i64 %12, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 10
  %20 = inttoptr i64 %19 to i8*
  %21 = load i8, i8* %20, align 1
  %22 = lshr i8 %21, 2
  %23 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %24 = zext i8 %22 to i64
  %25 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %23, i64 %24
  %26 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %25, align 8
  %27 = bitcast %"class.v8::internal::ElementsAccessor"* %26 to i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)***
  %28 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)**, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*** %27, align 8
  %29 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %28, i64 8
  %30 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %29, align 8
  %31 = tail call i16 %30(%"class.v8::internal::ElementsAccessor"* %26, i64* %0, i32 %1) #11
  ret i16 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca [3 x %"class.v8::internal::Handle.1220"], align 16
  %8 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::PropertyDescriptor", align 8
  %10 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 3
  %12 = load atomic i64, i64* %11 monotonic, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %5
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %0) #11
  br label %374

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6
  %23 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %22) #11
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %0) #11
  br label %374

26:                                               ; preds = %21, %5
  %27 = load i64, i64* %2, align 8
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %26
  %31 = and i64 %27, -4294967296
  %32 = add i64 %27, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp eq i16 %39, 64
  br i1 %40, label %41, label %57

41:                                               ; preds = %30
  %42 = load atomic i32, i32* %33 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %31, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp eq i16 %47, 64
  br i1 %48, label %49, label %57

49:                                               ; preds = %41
  %50 = add i64 %27, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  %56 = tail call i16 @_ZN2v88internal7JSProxy16SetPrivateSymbolEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6SymbolEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4)
  br label %374

57:                                               ; preds = %49, %41, %26, %30
  %58 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 302
  %60 = load i64, i64* %1, align 8
  %61 = and i64 %60, -4294967296
  %62 = add i64 %60, 11
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %57
  %71 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %66) #11
  br label %85

72:                                               ; preds = %57
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %66, i64* %81, align 8
  br label %85

85:                                               ; preds = %70, %80
  %86 = phi i64* [ %71, %70 ], [ %81, %80 ]
  %87 = load i64, i64* %1, align 8
  %88 = and i64 %87, -4294967296
  %89 = add i64 %87, 11
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %88, %92
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %88, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = icmp ult i16 %101, 186
  br i1 %102, label %103, label %107

103:                                              ; preds = %85
  %104 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %58, i32 150, i64* %59, i64* null, i64* null) #11
  %105 = load i64, i64* %104, align 8
  %106 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %105, %"class.v8::internal::MessageLocation"* null) #11
  br label %374

107:                                              ; preds = %85
  %108 = add i64 %87, 7
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %88, %111
  %113 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %114 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %107
  %116 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %113, i64 %112) #11
  br label %130

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %121 = load i64*, i64** %120, align 8
  %122 = icmp eq i64* %119, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %125

125:                                              ; preds = %123, %117
  %126 = phi i64* [ %124, %123 ], [ %119, %117 ]
  %127 = ptrtoint i64* %126 to i64
  %128 = add i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  store i64* %129, i64** %118, align 8
  store i64 %112, i64* %126, align 8
  br label %130

130:                                              ; preds = %115, %125
  %131 = phi i64* [ %116, %115 ], [ %126, %125 ]
  %132 = load i64, i64* %86, align 8
  %133 = and i64 %132, -262144
  %134 = or i64 %133, 16
  %135 = inttoptr i64 %134 to i64*
  %136 = load i64, i64* %135, align 16
  %137 = add i64 %136, -41416
  %138 = inttoptr i64 %137 to %"class.v8::internal::Isolate"*
  %139 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %139) #11
  %140 = ptrtoint i64* %86 to i64
  %141 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 0
  %142 = icmp eq i64* %59, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %130
  %144 = load i64, i64* null, align 536870912
  %145 = add i64 %144, -1
  %146 = inttoptr i64 %145 to i32*
  br label %168

147:                                              ; preds = %130
  %148 = load i64, i64* %59, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %138, i64 0, i32 0, i32 4
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %148, -1
  %152 = inttoptr i64 %151 to i32*
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i64 %150, 4294967295
  %155 = icmp eq i64 %154, 0
  tail call void @llvm.assume(i1 %155) #11
  %156 = zext i32 %153 to i64
  %157 = or i64 %150, %156
  %158 = add i64 %157, 7
  %159 = inttoptr i64 %158 to i16*
  %160 = load atomic i16, i16* %159 monotonic, align 2
  %161 = icmp eq i16 %160, 64
  br i1 %161, label %162, label %168

162:                                              ; preds = %147
  %163 = add i64 %148, 7
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %162, %147, %143
  %169 = phi i32* [ %146, %143 ], [ %152, %162 ], [ %152, %147 ]
  %170 = phi i64 [ %144, %143 ], [ %148, %162 ], [ %148, %147 ]
  br label %171

171:                                              ; preds = %168, %162
  %172 = phi i32* [ %169, %168 ], [ %152, %162 ]
  %173 = phi i64 [ %170, %168 ], [ %148, %162 ]
  %174 = phi i32 [ 3, %168 ], [ 0, %162 ]
  store i32 %174, i32* %141, align 8
  %175 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  store i32 4, i32* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 2
  store i8 0, i8* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 3
  store i32 0, i32* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 4, i32 0
  store i32 0, i32* %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %138, %"class.v8::internal::Isolate"** %179, align 8
  %180 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 6, i32 0, i32 0
  store i64* %59, i64** %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %181, align 8
  %182 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 8, i32 0, i32 0
  store i64* %86, i64** %182, align 8
  %183 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 10
  %185 = bitcast %"class.v8::internal::Handle.1220"* %184 to i64*
  store i64 %140, i64* %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 11
  %187 = bitcast i64* %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 -1, i64 16, i1 false) #11
  %188 = and i64 %173, -4294967296
  %189 = load atomic i32, i32* %172 monotonic, align 4
  %190 = zext i32 %189 to i64
  %191 = or i64 %188, %190
  %192 = add i64 %191, 7
  %193 = inttoptr i64 %192 to i16*
  %194 = load atomic i16, i16* %193 monotonic, align 2
  %195 = and i16 %194, -32
  %196 = icmp eq i16 %195, 32
  br i1 %196, label %197, label %201

197:                                              ; preds = %171
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %138, i64 0, i32 5, i32 0, i32 0, i32 0
  %199 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %198, align 8
  %200 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %199, %"class.v8::internal::Isolate"* %138, i64* %59) #11
  br label %201

201:                                              ; preds = %197, %171
  %202 = phi i64* [ %200, %197 ], [ %59, %171 ]
  store i64* %202, i64** %180, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %6) #11
  %203 = load i32, i32* %175, align 4
  %204 = icmp eq i32 %203, 4
  br i1 %204, label %205, label %210

205:                                              ; preds = %201
  %206 = bitcast %"class.v8::internal::Isolate"** %179 to %"class.v8::internal::Factory"**
  %207 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %207, i64 160
  %209 = bitcast %"class.v8::internal::Factory"* %208 to i64*
  br label %212

210:                                              ; preds = %201
  %211 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #11
  br label %212

212:                                              ; preds = %205, %210
  %213 = phi i64* [ %211, %210 ], [ %209, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %139) #11
  %214 = icmp eq i64* %213, null
  br i1 %214, label %374, label %215

215:                                              ; preds = %212
  %216 = ptrtoint i64* %213 to i64
  %217 = load i64, i64* %213, align 8
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %138, i64 0, i32 0, i32 7, i32 0, i64 6
  %219 = load i64, i64* %218, align 8
  %220 = trunc i64 %217 to i32
  %221 = trunc i64 %219 to i32
  %222 = icmp eq i32 %220, %221
  br i1 %222, label %228, label %223

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %138, i64 0, i32 0, i32 7, i32 0, i64 4
  %225 = load i64, i64* %224, align 8
  %226 = trunc i64 %225 to i32
  %227 = icmp eq i32 %220, %226
  br i1 %227, label %228, label %232

228:                                              ; preds = %223, %215
  %229 = inttoptr i64 %137 to %"class.v8::internal::Factory"*
  %230 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %229, i64 160
  %231 = ptrtoint %"class.v8::internal::Factory"* %230 to i64
  br label %252

232:                                              ; preds = %223
  %233 = and i64 %217, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %247, label %235

235:                                              ; preds = %232
  %236 = and i64 %217, -4294967296
  %237 = add i64 %217, -1
  %238 = inttoptr i64 %237 to i32*
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = zext i32 %239 to i64
  %241 = or i64 %236, %240
  %242 = add i64 %241, 9
  %243 = inttoptr i64 %242 to i8*
  %244 = load atomic i8, i8* %243 monotonic, align 1
  %245 = and i8 %244, 2
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %252

247:                                              ; preds = %235, %232
  %248 = inttoptr i64 %137 to %"class.v8::internal::Factory"*
  %249 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %248, i32 121, i64* nonnull %213, i64* %59, i64* %86) #11
  %250 = load i64, i64* %249, align 8
  %251 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %138, i64 %250, %"class.v8::internal::MessageLocation"* null) #11
  br label %374

252:                                              ; preds = %228, %235
  %253 = phi i64 [ %231, %228 ], [ %216, %235 ]
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %374, label %255

255:                                              ; preds = %252
  %256 = inttoptr i64 %253 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %259 = load i64, i64* %258, align 8
  %260 = trunc i64 %257 to i32
  %261 = trunc i64 %259 to i32
  %262 = icmp eq i32 %260, %261
  br i1 %262, label %263, label %265

263:                                              ; preds = %255
  %264 = call i16 @_ZN2v88internal10JSReceiver17DefineOwnPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64* %131, i64* %2, %"class.v8::internal::PropertyDescriptor"* %3, i64 %4) #11
  br label %374

265:                                              ; preds = %255
  %266 = call i64* @_ZN2v88internal18PropertyDescriptor8ToObjectEPNS0_7IsolateE(%"class.v8::internal::PropertyDescriptor"* %3, %"class.v8::internal::Isolate"* %0) #11
  %267 = load i64, i64* %2, align 8
  %268 = and i64 %267, 1
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %281, label %270

270:                                              ; preds = %265
  %271 = and i64 %267, -4294967296
  %272 = add i64 %267, -1
  %273 = inttoptr i64 %272 to i32*
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = zext i32 %274 to i64
  %276 = or i64 %271, %275
  %277 = add i64 %276, 7
  %278 = inttoptr i64 %277 to i16*
  %279 = load atomic i16, i16* %278 monotonic, align 2
  %280 = icmp ult i16 %279, 65
  br i1 %280, label %283, label %281

281:                                              ; preds = %265, %270
  %282 = call i64* @_ZN2v88internal7Factory14NumberToStringENS0_6HandleINS0_6ObjectEEENS0_15NumberCacheModeE(%"class.v8::internal::Factory"* %58, i64* %2, i32 2) #11
  br label %283

283:                                              ; preds = %270, %281
  %284 = phi i64* [ %282, %281 ], [ %2, %270 ]
  %285 = bitcast [3 x %"class.v8::internal::Handle.1220"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %285) #11
  %286 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1220"], [3 x %"class.v8::internal::Handle.1220"]* %7, i64 0, i64 0
  %287 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1220"], [3 x %"class.v8::internal::Handle.1220"]* %7, i64 0, i64 0, i32 0, i32 0
  store i64* %131, i64** %287, align 16
  %288 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1220"], [3 x %"class.v8::internal::Handle.1220"]* %7, i64 0, i64 1, i32 0, i32 0
  store i64* %284, i64** %288, align 8
  %289 = getelementptr inbounds [3 x %"class.v8::internal::Handle.1220"], [3 x %"class.v8::internal::Handle.1220"]* %7, i64 0, i64 2, i32 0, i32 0
  store i64* %266, i64** %289, align 16
  %290 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %0, i64* %256, i64* %86, i32 3, %"class.v8::internal::Handle.1220"* nonnull %286) #11
  %291 = icmp eq i64* %290, null
  br i1 %291, label %372, label %292

292:                                              ; preds = %283
  %293 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #11
  %294 = load i64, i64* %290, align 8
  %295 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8, i64 0, i32 0
  %297 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %296, %"class.v8::internal::Isolate"* %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #11
  br i1 %297, label %305, label %298

298:                                              ; preds = %292
  %299 = call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %4)
  %300 = icmp eq i32 %299, 1
  br i1 %300, label %372, label %301

301:                                              ; preds = %298
  %302 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %58, i32 155, i64* %59, i64* %284, i64* null) #11
  %303 = load i64, i64* %302, align 8
  %304 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %303, %"class.v8::internal::MessageLocation"* null) #11
  br label %372

305:                                              ; preds = %292
  %306 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %306) #11
  store i8 0, i8* %306, align 8
  %307 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %9, i64 0, i32 1, i32 0, i32 0
  %308 = bitcast i64** %307 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %308, i8 0, i64 32, i1 false) #11
  %309 = call i16 @_ZN2v88internal10JSReceiver24GetOwnPropertyDescriptorEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEEPNS0_18PropertyDescriptorE(%"class.v8::internal::Isolate"* %0, i64* %131, i64* %2, %"class.v8::internal::PropertyDescriptor"* nonnull %9) #11
  %310 = trunc i16 %309 to i8
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %370, label %312

312:                                              ; preds = %305
  %313 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %131) #11
  %314 = trunc i16 %313 to i8
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %370, label %316

316:                                              ; preds = %312
  %317 = icmp ugt i16 %313, 255
  %318 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 0
  %319 = load i8, i8* %318, align 8
  %320 = and i8 %319, 12
  %321 = icmp eq i8 %320, 8
  %322 = icmp ugt i16 %309, 255
  br i1 %322, label %333, label %323

323:                                              ; preds = %316
  br i1 %317, label %328, label %324

324:                                              ; preds = %323
  %325 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %58, i32 127, i64* %284, i64* null, i64* null) #11
  %326 = load i64, i64* %325, align 8
  %327 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %326, %"class.v8::internal::MessageLocation"* null) #11
  br label %370

328:                                              ; preds = %323
  br i1 %321, label %329, label %370

329:                                              ; preds = %328
  %330 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %58, i32 125, i64* %284, i64* null, i64* null) #11
  %331 = load i64, i64* %330, align 8
  %332 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %331, %"class.v8::internal::MessageLocation"* null) #11
  br label %370

333:                                              ; preds = %316
  %334 = call i16 @_ZN2v88internal10JSReceiver30IsCompatiblePropertyDescriptorEPNS0_7IsolateEbPNS0_18PropertyDescriptorES5_NS0_6HandleINS0_4NameEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i1 zeroext %317, %"class.v8::internal::PropertyDescriptor"* %3, %"class.v8::internal::PropertyDescriptor"* nonnull %9, i64* %284, i64 4294967297) #11
  %335 = trunc i16 %334 to i8
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %370, label %337

337:                                              ; preds = %333
  %338 = icmp ugt i16 %334, 255
  br i1 %338, label %343, label %339

339:                                              ; preds = %337
  %340 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %58, i32 128, i64* %284, i64* null, i64* null) #11
  %341 = load i64, i64* %340, align 8
  %342 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %341, %"class.v8::internal::MessageLocation"* null) #11
  br label %370

343:                                              ; preds = %337
  br i1 %321, label %344, label %352

344:                                              ; preds = %343
  %345 = load i8, i8* %306, align 8
  %346 = and i8 %345, 4
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %352, label %348

348:                                              ; preds = %344
  %349 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %58, i32 125, i64* %284, i64* null, i64* null) #11
  %350 = load i64, i64* %349, align 8
  %351 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %350, %"class.v8::internal::MessageLocation"* null) #11
  br label %370

352:                                              ; preds = %344, %343
  %353 = load i64*, i64** %307, align 8
  %354 = icmp ne i64* %353, null
  %355 = load i8, i8* %306, align 8
  %356 = and i8 %355, 32
  %357 = icmp ne i8 %356, 0
  %358 = or i1 %357, %354
  %359 = and i8 %355, 20
  %360 = icmp eq i8 %359, 16
  %361 = and i1 %358, %360
  br i1 %361, label %362, label %370

362:                                              ; preds = %352
  %363 = load i8, i8* %318, align 8
  %364 = and i8 %363, 48
  %365 = icmp eq i8 %364, 32
  br i1 %365, label %366, label %370

366:                                              ; preds = %362
  %367 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %58, i32 126, i64* %284, i64* null, i64* null) #11
  %368 = load i64, i64* %367, align 8
  %369 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %368, %"class.v8::internal::MessageLocation"* null) #11
  br label %370

370:                                              ; preds = %352, %362, %329, %324, %312, %333, %366, %348, %339, %328, %305
  %371 = phi i16 [ 0, %305 ], [ 0, %329 ], [ 0, %324 ], [ 0, %312 ], [ 0, %333 ], [ 0, %366 ], [ 0, %348 ], [ 0, %339 ], [ 257, %328 ], [ 257, %362 ], [ 257, %352 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %306) #11
  br label %372

372:                                              ; preds = %298, %283, %370, %301
  %373 = phi i16 [ 0, %301 ], [ %371, %370 ], [ 0, %283 ], [ 1, %298 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %285) #11
  br label %374

374:                                              ; preds = %212, %247, %103, %252, %372, %263, %19, %24, %55
  %375 = phi i16 [ %56, %55 ], [ 0, %24 ], [ 0, %19 ], [ 0, %103 ], [ %264, %263 ], [ %373, %372 ], [ 0, %252 ], [ 0, %247 ], [ 0, %212 ]
  ret i16 %375
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy16SetPrivateSymbolEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6SymbolEEEPNS0_18PropertyDescriptorENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.v8::internal::PropertyDescriptor"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::JSProxy>::ObjectRef", align 8
  %8 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 1, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = icmp eq i64* %9, null
  %11 = getelementptr inbounds %"class.v8::internal::PropertyDescriptor", %"class.v8::internal::PropertyDescriptor"* %3, i64 0, i32 0
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 32
  %14 = icmp eq i8 %13, 0
  %15 = and i1 %10, %14
  br i1 %15, label %46, label %16

16:                                               ; preds = %5
  %17 = and i8 %12, 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = shl i8 %12, 1
  %21 = and i8 %20, 2
  %22 = xor i8 %21, 2
  %23 = zext i8 %22 to i32
  br label %24

24:                                               ; preds = %19, %16
  %25 = phi i32 [ 0, %16 ], [ %23, %19 ]
  %26 = and i8 %12, 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = and i8 %12, 4
  %30 = xor i8 %29, 4
  %31 = zext i8 %30 to i32
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i32 [ 0, %24 ], [ %31, %28 ]
  %34 = or i32 %33, %25
  %35 = and i8 %12, 32
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = lshr i8 %12, 4
  %39 = and i8 %38, 1
  %40 = xor i8 %39, 1
  %41 = zext i8 %40 to i32
  br label %42

42:                                               ; preds = %32, %37
  %43 = phi i32 [ 0, %32 ], [ %41, %37 ]
  %44 = or i32 %34, %43
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %54, label %46

46:                                               ; preds = %5, %42
  %47 = tail call i32 @_ZN2v88internal14GetShouldThrowEPNS0_7IsolateENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %0, i64 %4)
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %196, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %51 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %50, i32 149, i64* null, i64* null, i64* null) #11
  %52 = load i64, i64* %51, align 8
  %53 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %52, %"class.v8::internal::MessageLocation"* null) #11
  br label %196

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %56 = select i1 %10, i64* %55, i64* %9
  %57 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %57) #11
  %58 = ptrtoint i64* %1 to i64
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 0
  %60 = icmp eq i64* %2, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %54
  %62 = load i64, i64* null, align 536870912
  %63 = add i64 %62, -1
  %64 = inttoptr i64 %63 to i32*
  br label %86

65:                                               ; preds = %54
  %66 = load i64, i64* %2, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %66, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i64 %68, 4294967295
  %73 = icmp eq i64 %72, 0
  tail call void @llvm.assume(i1 %73) #11
  %74 = zext i32 %71 to i64
  %75 = or i64 %68, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp eq i16 %78, 64
  br i1 %79, label %80, label %86

80:                                               ; preds = %65
  %81 = add i64 %66, 7
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %61, %80, %65
  %87 = phi i32* [ %64, %61 ], [ %70, %80 ], [ %70, %65 ]
  %88 = phi i64 [ %62, %61 ], [ %66, %80 ], [ %66, %65 ]
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32* [ %87, %86 ], [ %70, %80 ]
  %91 = phi i64 [ %88, %86 ], [ %66, %80 ]
  %92 = phi i32 [ 3, %86 ], [ 0, %80 ]
  store i32 %92, i32* %59, align 8
  %93 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 1
  store i32 4, i32* %93, align 4
  %94 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 2
  store i8 0, i8* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 3
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 4, i32 0
  store i32 0, i32* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 6, i32 0, i32 0
  store i64* %2, i64** %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 10
  %103 = bitcast %"class.v8::internal::Handle.1220"* %102 to i64*
  store i64 %58, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %6, i64 0, i32 11
  %105 = bitcast i64* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 -1, i64 16, i1 false) #11
  %106 = and i64 %91, -4294967296
  %107 = load atomic i32, i32* %90 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %106, %108
  %110 = add i64 %109, 7
  %111 = inttoptr i64 %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = and i16 %112, -32
  %114 = icmp eq i16 %113, 32
  br i1 %114, label %115, label %119

115:                                              ; preds = %89
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %117 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %116, align 8
  %118 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %117, %"class.v8::internal::Isolate"* %0, i64* %2) #11
  br label %119

119:                                              ; preds = %89, %115
  %120 = phi i64* [ %118, %115 ], [ %2, %89 ]
  store i64* %120, i64** %98, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %6) #11
  %121 = load i32, i32* %93, align 4
  %122 = icmp eq i32 %121, 4
  br i1 %122, label %124, label %123

123:                                              ; preds = %119
  call void @_ZN2v88internal14LookupIterator14WriteDataValueENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::LookupIterator"* nonnull %6, i64* %56, i1 zeroext false) #11
  br label %195

124:                                              ; preds = %119
  %125 = load i64, i64* %1, align 8
  %126 = and i64 %125, -4294967296
  %127 = add i64 %125, 3
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  %131 = or i64 %126, %130
  %132 = and i64 %130, 1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %155

134:                                              ; preds = %124
  %135 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %136 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %135, null
  br i1 %136, label %143, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %135, i64 0, i32 0, i32 1
  %139 = load i8, i8* %138, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %135, i64 0, i32 1, i64 0
  br label %151

143:                                              ; preds = %137, %134
  %144 = and i64 %125, -262144
  %145 = or i64 %144, 16
  %146 = inttoptr i64 %145 to i64*
  %147 = load i64, i64* %146, align 16
  %148 = add i64 %147, -41416
  %149 = inttoptr i64 %148 to %"class.v8::internal::Isolate"*
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %149, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %151

151:                                              ; preds = %143, %141
  %152 = phi i64* [ %150, %143 ], [ %142, %141 ]
  %153 = getelementptr inbounds i64, i64* %152, i64 115
  %154 = load i64, i64* %153, align 8
  br label %155

155:                                              ; preds = %124, %151
  %156 = phi i64 [ %154, %151 ], [ %131, %124 ]
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %158 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %157, align 8
  %159 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %155
  %161 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %158, i64 %156) #11
  br label %175

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %166 = load i64*, i64** %165, align 8
  %167 = icmp eq i64* %164, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %162
  %169 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %170

170:                                              ; preds = %168, %162
  %171 = phi i64* [ %169, %168 ], [ %164, %162 ]
  %172 = ptrtoint i64* %171 to i64
  %173 = add i64 %172, 8
  %174 = inttoptr i64 %173 to i64*
  store i64* %174, i64** %163, align 8
  store i64 %156, i64* %171, align 8
  br label %175

175:                                              ; preds = %160, %170
  %176 = phi i64* [ %161, %160 ], [ %171, %170 ]
  %177 = call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %0, i64* %176, i64* %2, i64* %56, i32 16, %"class.v8::internal::InternalIndex"* null)
  %178 = icmp eq i64* %176, %177
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = icmp eq i64* %176, null
  %181 = icmp eq i64* %177, null
  %182 = or i1 %180, %181
  br i1 %182, label %189, label %183

183:                                              ; preds = %179
  %184 = load i64, i64* %176, align 8
  %185 = load i64, i64* %177, align 8
  %186 = trunc i64 %184 to i32
  %187 = trunc i64 %185 to i32
  %188 = icmp eq i32 %186, %187
  br i1 %188, label %195, label %189

189:                                              ; preds = %179, %183
  %190 = bitcast %"class.v8::internal::Handle<v8::internal::JSProxy>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #11
  %191 = load i64, i64* %1, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSProxy>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSProxy>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSProxy>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSProxy>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  %194 = load i64, i64* %177, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %193, i64 %194) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #11
  br label %195

195:                                              ; preds = %175, %183, %189, %123
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %57) #11
  br label %196

196:                                              ; preds = %46, %195, %49
  %197 = phi i16 [ 0, %49 ], [ 257, %195 ], [ 1, %46 ]
  ret i16 %197
}

declare i64* @_ZN2v88internal18PropertyDescriptor8ToObjectEPNS0_7IsolateE(%"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i16 @_ZN2v88internal10JSReceiver30IsCompatiblePropertyDescriptorEPNS0_7IsolateEbPNS0_18PropertyDescriptorES5_NS0_6HandleINS0_4NameEEENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"*, i1 zeroext, %"class.v8::internal::PropertyDescriptor"*, %"class.v8::internal::PropertyDescriptor"*, i64*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal18PropertyDescriptor20ToPropertyDescriptorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPS1_(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #1

declare void @_ZN2v88internal18PropertyDescriptor26CompletePropertyDescriptorEPNS0_7IsolateEPS1_(%"class.v8::internal::Isolate"*, %"class.v8::internal::PropertyDescriptor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = alloca [1 x %"class.v8::internal::Handle.1220"], align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 6, i32 1, i32 3
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %29

17:                                               ; preds = %2
  %18 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 6, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %12) #11
  br label %271

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 6
  %26 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %25) #11
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %12) #11
  br label %271

29:                                               ; preds = %24, %2
  %30 = inttoptr i64 %11 to %"class.v8::internal::Factory"*
  %31 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %30, i64 3360
  %32 = bitcast %"class.v8::internal::Factory"* %31 to i64*
  %33 = load i64, i64* %0, align 8
  %34 = and i64 %33, -4294967296
  %35 = add i64 %33, 11
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %34, %38
  %40 = add i64 %39, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %34, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp ult i16 %47, 186
  br i1 %48, label %49, label %53

49:                                               ; preds = %29
  %50 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %30, i32 150, i64* %32, i64* null, i64* null) #11
  %51 = load i64, i64* %50, align 8
  %52 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %12, i64 %51, %"class.v8::internal::MessageLocation"* null) #11
  br label %271

53:                                               ; preds = %29
  %54 = add i64 %33, 7
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %34, %57
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %60 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %61 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %53
  %63 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %60, i64 %58) #11
  br label %77

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #11
  br label %72

72:                                               ; preds = %70, %64
  %73 = phi i64* [ %71, %70 ], [ %66, %64 ]
  %74 = ptrtoint i64* %73 to i64
  %75 = add i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  store i64* %76, i64** %65, align 8
  store i64 %58, i64* %73, align 8
  br label %77

77:                                               ; preds = %62, %72
  %78 = phi i64* [ %63, %62 ], [ %73, %72 ]
  %79 = load i64, i64* %0, align 8
  %80 = and i64 %79, -4294967296
  %81 = add i64 %79, 11
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %87 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %77
  %89 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %86, i64 %85) #11
  %90 = load i64, i64* %89, align 8
  %91 = ptrtoint i64* %89 to i64
  br label %105

92:                                               ; preds = %77
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %94, %96
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #11
  br label %100

100:                                              ; preds = %98, %92
  %101 = phi i64* [ %99, %98 ], [ %94, %92 ]
  %102 = ptrtoint i64* %101 to i64
  %103 = add i64 %102, 8
  %104 = inttoptr i64 %103 to i64*
  store i64* %104, i64** %93, align 8
  store i64 %85, i64* %101, align 8
  br label %105

105:                                              ; preds = %88, %100
  %106 = phi i64 [ %91, %88 ], [ %102, %100 ]
  %107 = phi i64 [ %90, %88 ], [ %85, %100 ]
  %108 = phi i64* [ %89, %88 ], [ %101, %100 ]
  %109 = and i64 %107, -262144
  %110 = or i64 %109, 16
  %111 = inttoptr i64 %110 to i64*
  %112 = load i64, i64* %111, align 16
  %113 = add i64 %112, -41416
  %114 = inttoptr i64 %113 to %"class.v8::internal::Isolate"*
  %115 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %117 = icmp eq %"class.v8::internal::Factory"* %31, null
  br i1 %117, label %118, label %122

118:                                              ; preds = %105
  %119 = load i64, i64* null, align 536870912
  %120 = add i64 %119, -1
  %121 = inttoptr i64 %120 to i32*
  br label %143

122:                                              ; preds = %105
  %123 = load i64, i64* %32, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %114, i64 0, i32 0, i32 4
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %123, -1
  %127 = inttoptr i64 %126 to i32*
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i64 %125, 4294967295
  %130 = icmp eq i64 %129, 0
  tail call void @llvm.assume(i1 %130) #11
  %131 = zext i32 %128 to i64
  %132 = or i64 %125, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = icmp eq i16 %135, 64
  br i1 %136, label %137, label %143

137:                                              ; preds = %122
  %138 = add i64 %123, 7
  %139 = inttoptr i64 %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %137, %122, %118
  %144 = phi i32* [ %121, %118 ], [ %127, %137 ], [ %127, %122 ]
  %145 = phi i64 [ %119, %118 ], [ %123, %137 ], [ %123, %122 ]
  br label %146

146:                                              ; preds = %143, %137
  %147 = phi i32* [ %144, %143 ], [ %127, %137 ]
  %148 = phi i64 [ %145, %143 ], [ %123, %137 ]
  %149 = phi i32 [ 3, %143 ], [ 0, %137 ]
  store i32 %149, i32* %116, align 8
  %150 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %114, %"class.v8::internal::Isolate"** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  %156 = bitcast i64** %155 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %31, %"class.v8::internal::Factory"** %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %108, i64** %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %161 = bitcast %"class.v8::internal::Handle.1220"* %160 to i64*
  store i64 %106, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %163 = bitcast i64* %162 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 -1, i64 16, i1 false) #11
  %164 = and i64 %148, -4294967296
  %165 = load atomic i32, i32* %147 monotonic, align 4
  %166 = zext i32 %165 to i64
  %167 = or i64 %164, %166
  %168 = add i64 %167, 7
  %169 = inttoptr i64 %168 to i16*
  %170 = load atomic i16, i16* %169 monotonic, align 2
  %171 = and i16 %170, -32
  %172 = icmp eq i16 %171, 32
  br i1 %172, label %173, label %177

173:                                              ; preds = %146
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %114, i64 0, i32 5, i32 0, i32 0, i32 0
  %175 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %174, align 8
  %176 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %175, %"class.v8::internal::Isolate"* %114, i64* %32) #11
  br label %177

177:                                              ; preds = %173, %146
  %178 = phi i64* [ %176, %173 ], [ %32, %146 ]
  store i64* %178, i64** %155, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #11
  %179 = load i32, i32* %150, align 4
  %180 = icmp eq i32 %179, 4
  br i1 %180, label %181, label %186

181:                                              ; preds = %177
  %182 = bitcast %"class.v8::internal::Isolate"** %154 to %"class.v8::internal::Factory"**
  %183 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %182, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %183, i64 160
  %185 = bitcast %"class.v8::internal::Factory"* %184 to i64*
  br label %188

186:                                              ; preds = %177
  %187 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #11
  br label %188

188:                                              ; preds = %181, %186
  %189 = phi i64* [ %187, %186 ], [ %185, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %115) #11
  %190 = icmp eq i64* %189, null
  br i1 %190, label %271, label %191

191:                                              ; preds = %188
  %192 = ptrtoint i64* %189 to i64
  %193 = load i64, i64* %189, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %114, i64 0, i32 0, i32 7, i32 0, i64 6
  %195 = load i64, i64* %194, align 8
  %196 = trunc i64 %193 to i32
  %197 = trunc i64 %195 to i32
  %198 = icmp eq i32 %196, %197
  br i1 %198, label %204, label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %114, i64 0, i32 0, i32 7, i32 0, i64 4
  %201 = load i64, i64* %200, align 8
  %202 = trunc i64 %201 to i32
  %203 = icmp eq i32 %196, %202
  br i1 %203, label %204, label %208

204:                                              ; preds = %199, %191
  %205 = inttoptr i64 %113 to %"class.v8::internal::Factory"*
  %206 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %205, i64 160
  %207 = ptrtoint %"class.v8::internal::Factory"* %206 to i64
  br label %228

208:                                              ; preds = %199
  %209 = and i64 %193, 1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %223, label %211

211:                                              ; preds = %208
  %212 = and i64 %193, -4294967296
  %213 = add i64 %193, -1
  %214 = inttoptr i64 %213 to i32*
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = zext i32 %215 to i64
  %217 = or i64 %212, %216
  %218 = add i64 %217, 9
  %219 = inttoptr i64 %218 to i8*
  %220 = load atomic i8, i8* %219 monotonic, align 1
  %221 = and i8 %220, 2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %211, %208
  %224 = inttoptr i64 %113 to %"class.v8::internal::Factory"*
  %225 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %224, i32 121, i64* nonnull %189, i64* %32, i64* %108) #11
  %226 = load i64, i64* %225, align 8
  %227 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %114, i64 %226, %"class.v8::internal::MessageLocation"* null) #11
  br label %271

228:                                              ; preds = %204, %211
  %229 = phi i64 [ %207, %204 ], [ %192, %211 ]
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %271, label %231

231:                                              ; preds = %228
  %232 = inttoptr i64 %229 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 4
  %235 = load i64, i64* %234, align 8
  %236 = trunc i64 %233 to i32
  %237 = trunc i64 %235 to i32
  %238 = icmp eq i32 %236, %237
  br i1 %238, label %239, label %241

239:                                              ; preds = %231
  %240 = call i16 @_ZN2v88internal10JSReceiver17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64* %78, i32 %1) #11
  br label %271

241:                                              ; preds = %231
  %242 = bitcast [1 x %"class.v8::internal::Handle.1220"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #11
  %243 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %4, i64 0, i64 0
  %244 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %4, i64 0, i64 0, i32 0, i32 0
  store i64* %78, i64** %244, align 8
  %245 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %12, i64* %232, i64* %108, i32 1, %"class.v8::internal::Handle.1220"* nonnull %243) #11
  %246 = icmp eq i64* %245, null
  br i1 %246, label %269, label %247

247:                                              ; preds = %241
  %248 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #11
  %249 = load i64, i64* %245, align 8
  %250 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %5, i64 0, i32 0
  %252 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %251, %"class.v8::internal::Isolate"* %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #11
  br i1 %252, label %259, label %253

253:                                              ; preds = %247
  %254 = icmp eq i32 %1, 1
  br i1 %254, label %269, label %255

255:                                              ; preds = %253
  %256 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %30, i32 154, i64* %32, i64* null, i64* null) #11
  %257 = load i64, i64* %256, align 8
  %258 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %12, i64 %257, %"class.v8::internal::MessageLocation"* null) #11
  br label %269

259:                                              ; preds = %247
  %260 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %78) #11
  %261 = trunc i16 %260 to i8
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %269, label %263

263:                                              ; preds = %259
  %264 = icmp ugt i16 %260, 255
  br i1 %264, label %265, label %269

265:                                              ; preds = %263
  %266 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %30, i32 148, i64* null, i64* null, i64* null) #11
  %267 = load i64, i64* %266, align 8
  %268 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %12, i64 %267, %"class.v8::internal::MessageLocation"* null) #11
  br label %269

269:                                              ; preds = %265, %259, %263, %253, %241, %255
  %270 = phi i16 [ 0, %255 ], [ 0, %241 ], [ 1, %253 ], [ 0, %265 ], [ 0, %259 ], [ 257, %263 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #11
  br label %271

271:                                              ; preds = %188, %223, %239, %269, %228, %22, %27, %49
  %272 = phi i16 [ 0, %49 ], [ 0, %27 ], [ 0, %22 ], [ %240, %239 ], [ %270, %269 ], [ 0, %228 ], [ 0, %223 ], [ 0, %188 ]
  ret i16 %272
}

declare i16 @_ZN2v88internal10JSReceiver17PreventExtensionsENS0_6HandleIS1_EENS0_11ShouldThrowE(i64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy12IsExtensibleENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::LookupIterator", align 8
  %3 = alloca [1 x %"class.v8::internal::Handle.1220"], align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 6, i32 1, i32 3
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %1
  %17 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 6, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %11) #11
  br label %268

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 6
  %25 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %24) #11
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %11) #11
  br label %268

28:                                               ; preds = %23, %1
  %29 = inttoptr i64 %10 to %"class.v8::internal::Factory"*
  %30 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %29, i64 2992
  %31 = bitcast %"class.v8::internal::Factory"* %30 to i64*
  %32 = load i64, i64* %0, align 8
  %33 = and i64 %32, -4294967296
  %34 = add i64 %32, 11
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %33, %37
  %39 = add i64 %38, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %33, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp ult i16 %46, 186
  br i1 %47, label %48, label %52

48:                                               ; preds = %28
  %49 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %29, i32 150, i64* %31, i64* null, i64* null) #11
  %50 = load i64, i64* %49, align 8
  %51 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %11, i64 %50, %"class.v8::internal::MessageLocation"* null) #11
  br label %268

52:                                               ; preds = %28
  %53 = add i64 %32, 7
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %33, %56
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %59 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %58, align 8
  %60 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %52
  %62 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %59, i64 %57) #11
  br label %76

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #11
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i64* [ %70, %69 ], [ %65, %63 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %64, align 8
  store i64 %57, i64* %72, align 8
  br label %76

76:                                               ; preds = %61, %71
  %77 = phi i64* [ %62, %61 ], [ %72, %71 ]
  %78 = load i64, i64* %0, align 8
  %79 = and i64 %78, -4294967296
  %80 = add i64 %78, 11
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %58, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %76
  %88 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %84) #11
  %89 = load i64, i64* %88, align 8
  %90 = ptrtoint i64* %88 to i64
  br label %104

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %95 = load i64*, i64** %94, align 8
  %96 = icmp eq i64* %93, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  %98 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #11
  br label %99

99:                                               ; preds = %97, %91
  %100 = phi i64* [ %98, %97 ], [ %93, %91 ]
  %101 = ptrtoint i64* %100 to i64
  %102 = add i64 %101, 8
  %103 = inttoptr i64 %102 to i64*
  store i64* %103, i64** %92, align 8
  store i64 %84, i64* %100, align 8
  br label %104

104:                                              ; preds = %87, %99
  %105 = phi i64 [ %90, %87 ], [ %101, %99 ]
  %106 = phi i64 [ %89, %87 ], [ %84, %99 ]
  %107 = phi i64* [ %88, %87 ], [ %100, %99 ]
  %108 = and i64 %106, -262144
  %109 = or i64 %108, 16
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 16
  %112 = add i64 %111, -41416
  %113 = inttoptr i64 %112 to %"class.v8::internal::Isolate"*
  %114 = bitcast %"class.v8::internal::LookupIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %114) #11
  %115 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 0
  %116 = icmp eq %"class.v8::internal::Factory"* %30, null
  br i1 %116, label %117, label %121

117:                                              ; preds = %104
  %118 = load i64, i64* null, align 536870912
  %119 = add i64 %118, -1
  %120 = inttoptr i64 %119 to i32*
  br label %142

121:                                              ; preds = %104
  %122 = load i64, i64* %31, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %113, i64 0, i32 0, i32 4
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %122, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i64 %124, 4294967295
  %129 = icmp eq i64 %128, 0
  tail call void @llvm.assume(i1 %129) #11
  %130 = zext i32 %127 to i64
  %131 = or i64 %124, %130
  %132 = add i64 %131, 7
  %133 = inttoptr i64 %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = icmp eq i16 %134, 64
  br i1 %135, label %136, label %142

136:                                              ; preds = %121
  %137 = add i64 %122, 7
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136, %121, %117
  %143 = phi i32* [ %120, %117 ], [ %126, %136 ], [ %126, %121 ]
  %144 = phi i64 [ %118, %117 ], [ %122, %136 ], [ %122, %121 ]
  br label %145

145:                                              ; preds = %142, %136
  %146 = phi i32* [ %143, %142 ], [ %126, %136 ]
  %147 = phi i64 [ %144, %142 ], [ %122, %136 ]
  %148 = phi i32 [ 3, %142 ], [ 0, %136 ]
  store i32 %148, i32* %115, align 8
  %149 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 1
  store i32 4, i32* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 2
  store i8 0, i8* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 3
  store i32 0, i32* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 4, i32 0
  store i32 0, i32* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %113, %"class.v8::internal::Isolate"** %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 6, i32 0, i32 0
  %155 = bitcast i64** %154 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %30, %"class.v8::internal::Factory"** %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 8, i32 0, i32 0
  store i64* %107, i64** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 10
  %160 = bitcast %"class.v8::internal::Handle.1220"* %159 to i64*
  store i64 %105, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 11
  %162 = bitcast i64* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 -1, i64 16, i1 false) #11
  %163 = and i64 %147, -4294967296
  %164 = load atomic i32, i32* %146 monotonic, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %163, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load atomic i16, i16* %168 monotonic, align 2
  %170 = and i16 %169, -32
  %171 = icmp eq i16 %170, 32
  br i1 %171, label %172, label %176

172:                                              ; preds = %145
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %113, i64 0, i32 5, i32 0, i32 0, i32 0
  %174 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %173, align 8
  %175 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %174, %"class.v8::internal::Isolate"* %113, i64* %31) #11
  br label %176

176:                                              ; preds = %172, %145
  %177 = phi i64* [ %175, %172 ], [ %31, %145 ]
  store i64* %177, i64** %154, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %2) #11
  %178 = load i32, i32* %149, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %185

180:                                              ; preds = %176
  %181 = bitcast %"class.v8::internal::Isolate"** %153 to %"class.v8::internal::Factory"**
  %182 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %182, i64 160
  %184 = bitcast %"class.v8::internal::Factory"* %183 to i64*
  br label %187

185:                                              ; preds = %176
  %186 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %2, i1 zeroext false) #11
  br label %187

187:                                              ; preds = %180, %185
  %188 = phi i64* [ %186, %185 ], [ %184, %180 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %114) #11
  %189 = icmp eq i64* %188, null
  br i1 %189, label %268, label %190

190:                                              ; preds = %187
  %191 = ptrtoint i64* %188 to i64
  %192 = load i64, i64* %188, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %113, i64 0, i32 0, i32 7, i32 0, i64 6
  %194 = load i64, i64* %193, align 8
  %195 = trunc i64 %192 to i32
  %196 = trunc i64 %194 to i32
  %197 = icmp eq i32 %195, %196
  br i1 %197, label %203, label %198

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %113, i64 0, i32 0, i32 7, i32 0, i64 4
  %200 = load i64, i64* %199, align 8
  %201 = trunc i64 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %207

203:                                              ; preds = %198, %190
  %204 = inttoptr i64 %112 to %"class.v8::internal::Factory"*
  %205 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %204, i64 160
  %206 = ptrtoint %"class.v8::internal::Factory"* %205 to i64
  br label %227

207:                                              ; preds = %198
  %208 = and i64 %192, 1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %222, label %210

210:                                              ; preds = %207
  %211 = and i64 %192, -4294967296
  %212 = add i64 %192, -1
  %213 = inttoptr i64 %212 to i32*
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = zext i32 %214 to i64
  %216 = or i64 %211, %215
  %217 = add i64 %216, 9
  %218 = inttoptr i64 %217 to i8*
  %219 = load atomic i8, i8* %218 monotonic, align 1
  %220 = and i8 %219, 2
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %227

222:                                              ; preds = %210, %207
  %223 = inttoptr i64 %112 to %"class.v8::internal::Factory"*
  %224 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %223, i32 121, i64* nonnull %188, i64* %31, i64* %107) #11
  %225 = load i64, i64* %224, align 8
  %226 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %113, i64 %225, %"class.v8::internal::MessageLocation"* null) #11
  br label %268

227:                                              ; preds = %203, %210
  %228 = phi i64 [ %206, %203 ], [ %191, %210 ]
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %268, label %230

230:                                              ; preds = %227
  %231 = inttoptr i64 %228 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 4
  %234 = load i64, i64* %233, align 8
  %235 = trunc i64 %232 to i32
  %236 = trunc i64 %234 to i32
  %237 = icmp eq i32 %235, %236
  br i1 %237, label %238, label %240

238:                                              ; preds = %230
  %239 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %77) #11
  br label %268

240:                                              ; preds = %230
  %241 = bitcast [1 x %"class.v8::internal::Handle.1220"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #11
  %242 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %3, i64 0, i64 0
  %243 = getelementptr inbounds [1 x %"class.v8::internal::Handle.1220"], [1 x %"class.v8::internal::Handle.1220"]* %3, i64 0, i64 0, i32 0, i32 0
  store i64* %77, i64** %243, align 8
  %244 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %11, i64* %231, i64* %107, i32 1, %"class.v8::internal::Handle.1220"* nonnull %242) #11
  %245 = icmp eq i64* %244, null
  br i1 %245, label %266, label %246

246:                                              ; preds = %240
  %247 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %77) #11
  %248 = trunc i16 %247 to i8
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %266, label %250

250:                                              ; preds = %246
  %251 = icmp ugt i16 %247, 255
  %252 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #11
  %253 = load i64, i64* %244, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0
  %256 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %255, %"class.v8::internal::Isolate"* %11)
  %257 = xor i1 %251, %256
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #11
  br i1 %257, label %258, label %266

258:                                              ; preds = %250
  %259 = inttoptr i64 %10 to %"class.v8::internal::FactoryBase"*
  %260 = select i1 %251, i64 184, i64 192
  %261 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %259, i64 %260
  %262 = bitcast %"class.v8::internal::FactoryBase"* %261 to i64*
  %263 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %29, i32 143, i64* %262, i64* null, i64* null) #11
  %264 = load i64, i64* %263, align 8
  %265 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %11, i64 %264, %"class.v8::internal::MessageLocation"* null) #11
  br label %266

266:                                              ; preds = %250, %258, %246, %240
  %267 = phi i16 [ 0, %240 ], [ 0, %258 ], [ 0, %246 ], [ %247, %250 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #11
  br label %268

268:                                              ; preds = %187, %222, %238, %266, %227, %21, %26, %48
  %269 = phi i16 [ 0, %48 ], [ 0, %26 ], [ 0, %21 ], [ %239, %238 ], [ %267, %266 ], [ 0, %227 ], [ 0, %222 ], [ 0, %187 ]
  ret i16 %269
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15DescriptorArray8CopyUpToEPNS0_7IsolateENS0_6HandleIS1_EEii(%"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call i64* @_ZN2v88internal15DescriptorArray21CopyUpToAddAttributesEPNS0_7IsolateENS0_6HandleIS1_EEiNS0_18PropertyAttributesEi(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i32 0, i32 %3)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15DescriptorArray21CopyUpToAddAttributesEPNS0_7IsolateENS0_6HandleIS1_EEiNS0_18PropertyAttributesEi(%"class.v8::internal::Isolate"*, i64*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %9 = sub i32 0, %4
  %10 = icmp eq i32 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 30
  br label %132

13:                                               ; preds = %5
  %14 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %15 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %14, i32 %2, i32 %4, i8 zeroext 0) #11
  %16 = icmp eq i32 %3, 0
  %17 = sext i32 %2 to i64
  %18 = icmp eq i32 %2, 0
  br i1 %16, label %24, label %19

19:                                               ; preds = %13
  br i1 %18, label %120, label %20

20:                                               ; preds = %19
  %21 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6 to i8*
  %22 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6, i64 0, i32 0
  br label %29

24:                                               ; preds = %13
  br i1 %18, label %120, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7 to i8*
  %27 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7, i64 0, i32 0
  br label %94

29:                                               ; preds = %20, %89
  %30 = phi i64 [ 0, %20 ], [ %92, %89 ]
  %31 = load i64, i64* %1, align 8
  %32 = and i64 %31, -4294967296
  %33 = mul i64 %30, 51539607552
  %34 = add i64 %33, 68719476736
  %35 = ashr exact i64 %34, 32
  %36 = add i64 %31, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %32, %40
  %42 = add i64 %36, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %32, %45
  %47 = or i64 %35, 3
  %48 = add i64 %31, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = ashr i32 %50, 1
  %52 = add i64 %46, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %32, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = icmp eq i16 %59, 64
  br i1 %60, label %61, label %67

61:                                               ; preds = %29
  %62 = add i64 %46, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %89

67:                                               ; preds = %61, %29
  %68 = and i32 %50, 2
  %69 = icmp ne i32 %68, 0
  %70 = and i64 %40, 3
  %71 = icmp eq i64 %70, 1
  %72 = and i1 %71, %69
  br i1 %72, label %73, label %83

73:                                               ; preds = %67
  %74 = add i64 %41, -1
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %32, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 87
  br i1 %82, label %84, label %83

83:                                               ; preds = %67, %73
  br label %84

84:                                               ; preds = %83, %73
  %85 = phi i32 [ 7, %83 ], [ 6, %73 ]
  %86 = and i32 %85, %3
  %87 = shl nuw nsw i32 %86, 3
  %88 = or i32 %51, %87
  br label %89

89:                                               ; preds = %61, %84
  %90 = phi i32 [ %51, %61 ], [ %88, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %91 = load i64, i64* %15, align 8
  store i64 %91, i64* %22, align 8
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %23, i64 %30, i64 %46, i64 %41, i32 %90)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %92 = add i64 %30, 1
  %93 = icmp eq i64 %92, %17
  br i1 %93, label %120, label %29

94:                                               ; preds = %25, %94
  %95 = phi i64 [ 0, %25 ], [ %118, %94 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %96 = load i64, i64* %15, align 8
  store i64 %96, i64* %27, align 8
  %97 = load i64, i64* %1, align 8
  %98 = mul i64 %95, 51539607552
  %99 = add i64 %98, 68719476736
  %100 = ashr exact i64 %99, 32
  %101 = or i64 %100, 3
  %102 = add i64 %97, %101
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = ashr i32 %104, 1
  %106 = and i64 %97, -4294967296
  %107 = add i64 %97, %100
  %108 = add i64 %107, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %106, %111
  %113 = add i64 %107, 7
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %106, %116
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %28, i64 %95, i64 %112, i64 %117, i32 %105) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %118 = add i64 %95, 1
  %119 = icmp eq i64 %118, %17
  br i1 %119, label %120, label %94

120:                                              ; preds = %89, %94, %19, %24
  %121 = load i64, i64* %1, align 8
  %122 = add i64 %121, 5
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = sext i16 %124 to i32
  %126 = icmp eq i32 %125, %2
  br i1 %126, label %132, label %127

127:                                              ; preds = %120
  %128 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #11
  %129 = load i64, i64* %15, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %8, i64 0, i32 0
  call void @_ZN2v88internal15DescriptorArray4SortEv(%"class.v8::internal::DescriptorArray"* nonnull %131)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #11
  br label %132

132:                                              ; preds = %127, %120, %11
  %133 = phi i64* [ %12, %11 ], [ %15, %120 ], [ %15, %127 ]
  ret i64* %133
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"*, i64, i64, i64, i32) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = mul i64 %1, 51539607552
  %9 = add i64 %8, 68719476736
  %10 = ashr exact i64 %9, 32
  %11 = add nsw i64 %10, -1
  %12 = add i64 %7, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  %15 = load i64, i64* %6, align 8
  %16 = add i64 %15, %11
  %17 = and i64 %2, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %5
  %20 = and i64 %15, -262144
  %21 = or i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 262144
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = or i64 %20, 16
  %28 = inttoptr i64 %27 to %"class.v8::internal::Heap"**
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %29, i64 %15, i64 %16, i64 %2) #11
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, %11
  br label %32

32:                                               ; preds = %26, %19, %5
  %33 = phi i64 [ %16, %5 ], [ %16, %19 ], [ %31, %26 ]
  %34 = phi i64 [ %15, %5 ], [ %15, %19 ], [ %30, %26 ]
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %32
  %42 = and i64 %34, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %34, i64 %33, i64 %2) #11
  %49 = load i64, i64* %6, align 8
  br label %50

50:                                               ; preds = %32, %41, %48
  %51 = phi i64 [ %34, %32 ], [ %34, %41 ], [ %49, %48 ]
  %52 = shl i32 %4, 1
  %53 = or i64 %10, 3
  %54 = add i64 %51, %53
  %55 = inttoptr i64 %54 to i32*
  store atomic volatile i32 %52, i32* %55 monotonic, align 4
  %56 = load i64, i64* %6, align 8
  %57 = ashr exact i64 %8, 32
  %58 = add nsw i64 %57, 23
  %59 = add i64 %56, %58
  %60 = inttoptr i64 %59 to i32*
  %61 = trunc i64 %3 to i32
  store atomic volatile i32 %61, i32* %60 monotonic, align 4
  %62 = load i64, i64* %6, align 8
  %63 = add i64 %62, %58
  %64 = and i64 %3, 1
  %65 = icmp ne i64 %64, 0
  %66 = icmp ne i32 %61, 3
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %99

68:                                               ; preds = %50
  %69 = and i64 %62, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 262144
  %74 = icmp eq i64 %73, 0
  %75 = and i64 %3, -3
  br i1 %74, label %82, label %76

76:                                               ; preds = %68
  %77 = or i64 %69, 16
  %78 = inttoptr i64 %77 to %"class.v8::internal::Heap"**
  %79 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %78, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %79, i64 %62, i64 %63, i64 %75) #11
  %80 = load i64, i64* %6, align 8
  %81 = add i64 %80, %58
  br label %82

82:                                               ; preds = %76, %68
  %83 = phi i64 [ %81, %76 ], [ %63, %68 ]
  %84 = phi i64 [ %80, %76 ], [ %62, %68 ]
  %85 = and i64 %3, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %82
  %92 = and i64 %84, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 24
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %91
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %83, i64 %75) #11
  br label %99

99:                                               ; preds = %50, %82, %91, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15DescriptorArray8CopyFromENS0_13InternalIndexES1_(%"class.v8::internal::DescriptorArray"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = mul i64 %1, 51539607552
  %5 = add i64 %4, 68719476736
  %6 = ashr exact i64 %5, 32
  %7 = or i64 %6, 3
  %8 = add i64 %7, %2
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %10, 1
  %12 = and i64 %2, -4294967296
  %13 = add i64 %6, %2
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %12, %17
  %19 = add i64 %13, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %12, %22
  tail call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* %0, i64 %1, i64 %18, i64 %23, i32 %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15DescriptorArray22CopyForFastObjectCloneEPNS0_7IsolateENS0_6HandleIS1_EEii(%"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %7 = sub i32 0, %3
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 30
  br label %70

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %13 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE18NewDescriptorArrayEiiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %12, i32 %2, i32 %3, i8 zeroext 0) #11
  %14 = sext i32 %2 to i64
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %5 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %5, i64 0, i32 0
  br label %25

20:                                               ; preds = %58, %11
  %21 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = load i64, i64* %13, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %6, i64 0, i32 0
  call void @_ZN2v88internal15DescriptorArray4SortEv(%"class.v8::internal::DescriptorArray"* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %70

25:                                               ; preds = %16, %58
  %26 = phi i64 [ 0, %16 ], [ %68, %58 ]
  %27 = load i64, i64* %1, align 8
  %28 = and i64 %27, -4294967296
  %29 = mul i64 %26, 51539607552
  %30 = add i64 %29, 68719476736
  %31 = ashr exact i64 %30, 32
  %32 = add i64 %27, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %28, %36
  %38 = or i64 %31, 3
  %39 = add i64 %27, %38
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = ashr i32 %41, 1
  %43 = lshr i32 %42, 6
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 7
  %46 = add i64 %32, 7
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %28, %49
  %51 = lshr i32 %42, 1
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %25
  %55 = call i64 @_ZN2v88internal9FieldType3AnyEv() #11
  %56 = icmp eq i8 %45, 5
  %57 = select i1 %56, i8 5, i8 4
  br label %58

58:                                               ; preds = %54, %25
  %59 = phi i8 [ %57, %54 ], [ %45, %25 ]
  %60 = phi i64 [ %55, %54 ], [ %50, %25 ]
  %61 = shl nuw nsw i32 %52, 1
  %62 = zext i8 %59 to i32
  %63 = shl nuw nsw i32 %62, 6
  %64 = and i32 %42, 536346628
  %65 = or i32 %64, %61
  %66 = or i32 %65, %63
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %67 = load i64, i64* %13, align 8
  store i64 %67, i64* %18, align 8
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %19, i64 %26, i64 %37, i64 %60, i32 %66)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %68 = add i64 %26, 1
  %69 = icmp eq i64 %68, %14
  br i1 %69, label %20, label %25

70:                                               ; preds = %20, %9
  %71 = phi i64* [ %10, %9 ], [ %13, %20 ]
  ret i64* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15DescriptorArray11IsEqualUpToES1_i(%"class.v8::internal::DescriptorArray"* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %2 to i64
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %48, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  br label %11

9:                                                ; preds = %44
  %10 = icmp eq i64 %47, %4
  br i1 %10, label %48, label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ 0, %6 ], [ %47, %9 ]
  %13 = mul i64 %12, 51539607552
  %14 = add i64 %13, 68719476736
  %15 = ashr exact i64 %14, 32
  %16 = add nsw i64 %15, -1
  %17 = add i64 %8, %16
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = add i64 %16, %1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %24, label %48

24:                                               ; preds = %11
  %25 = add nsw i64 %15, 7
  %26 = add i64 %8, %25
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = add i64 %25, %1
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = icmp eq i32 %28, %31
  br i1 %32, label %33, label %48

33:                                               ; preds = %24
  %34 = or i64 %15, 3
  %35 = add i64 %8, %34
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = add i64 %34, %1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = xor i32 %40, %37
  %42 = and i32 %41, 6
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %33
  %45 = and i32 %41, 896
  %46 = icmp eq i32 %45, 0
  %47 = add i64 %12, 1
  br i1 %46, label %9, label %48

48:                                               ; preds = %44, %33, %9, %11, %24, %3
  %49 = phi i1 [ true, %3 ], [ false, %24 ], [ false, %11 ], [ true, %9 ], [ false, %33 ], [ false, %44 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal10FixedArray6CopyToEiS1_ii(%"class.v8::internal::FixedArray"* nocapture readonly, i32, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %132, label %7

7:                                                ; preds = %5
  %8 = and i64 %2, -262144
  %9 = or i64 %8, 8
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 262144
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %7
  %15 = and i64 %11, 24
  %16 = icmp eq i64 %15, 0
  %17 = select i1 %16, i32 4, i32 0
  br label %18

18:                                               ; preds = %7, %14
  %19 = phi i32 [ 4, %7 ], [ %17, %14 ]
  %20 = icmp sgt i32 %4, 0
  br i1 %20, label %21, label %132

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = add i64 %2, 7
  %24 = icmp eq i32 %19, 0
  %25 = or i64 %8, 16
  %26 = inttoptr i64 %25 to %"class.v8::internal::Heap"**
  %27 = zext i32 %4 to i64
  br i1 %24, label %28, label %70

28:                                               ; preds = %21
  %29 = and i64 %27, 1
  %30 = icmp eq i32 %4, 1
  br i1 %30, label %115, label %31

31:                                               ; preds = %28
  %32 = sub nsw i64 %27, %29
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %67, %33 ]
  %35 = phi i64 [ %32, %31 ], [ %68, %33 ]
  %36 = load i64, i64* %22, align 8
  %37 = trunc i64 %34 to i32
  %38 = add i32 %37, %1
  %39 = shl i32 %38, 2
  %40 = sext i32 %39 to i64
  %41 = add nsw i64 %40, 7
  %42 = add i64 %41, %36
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = trunc i64 %34 to i32
  %46 = add i32 %45, %3
  %47 = shl i32 %46, 2
  %48 = sext i32 %47 to i64
  %49 = add i64 %23, %48
  %50 = inttoptr i64 %49 to i32*
  store atomic volatile i32 %44, i32* %50 monotonic, align 4
  %51 = or i64 %34, 1
  %52 = load i64, i64* %22, align 8
  %53 = trunc i64 %51 to i32
  %54 = add i32 %53, %1
  %55 = shl i32 %54, 2
  %56 = sext i32 %55 to i64
  %57 = add nsw i64 %56, 7
  %58 = add i64 %57, %52
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = trunc i64 %51 to i32
  %62 = add i32 %61, %3
  %63 = shl i32 %62, 2
  %64 = sext i32 %63 to i64
  %65 = add i64 %23, %64
  %66 = inttoptr i64 %65 to i32*
  store atomic volatile i32 %60, i32* %66 monotonic, align 4
  %67 = add nuw nsw i64 %34, 2
  %68 = add i64 %35, -2
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %113, label %33

70:                                               ; preds = %21, %110
  %71 = phi i64 [ %111, %110 ], [ 0, %21 ]
  %72 = load i64, i64* %22, align 8
  %73 = and i64 %72, -4294967296
  %74 = trunc i64 %71 to i32
  %75 = add i32 %74, %1
  %76 = shl i32 %75, 2
  %77 = sext i32 %76 to i64
  %78 = add nsw i64 %77, 7
  %79 = add i64 %78, %72
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %73, %82
  %84 = trunc i64 %71 to i32
  %85 = add i32 %84, %3
  %86 = shl i32 %85, 2
  %87 = sext i32 %86 to i64
  %88 = add i64 %23, %87
  %89 = inttoptr i64 %88 to i32*
  store atomic volatile i32 %81, i32* %89 monotonic, align 4
  %90 = and i64 %82, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %110, label %92

92:                                               ; preds = %70
  %93 = load i64, i64* %10, align 8
  %94 = and i64 %93, 262144
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %97, i64 %2, i64 %88, i64 %83) #11
  br label %98

98:                                               ; preds = %92, %96
  %99 = and i64 %83, -262144
  %100 = or i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 24
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %98
  %106 = load i64, i64* %10, align 8
  %107 = and i64 %106, 24
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %105
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %88, i64 %83) #11
  br label %110

110:                                              ; preds = %70, %98, %105, %109
  %111 = add nuw nsw i64 %71, 1
  %112 = icmp eq i64 %111, %27
  br i1 %112, label %132, label %70

113:                                              ; preds = %33
  %114 = trunc i64 %67 to i32
  br label %115

115:                                              ; preds = %113, %28
  %116 = phi i32 [ 0, %28 ], [ %114, %113 ]
  %117 = icmp eq i64 %29, 0
  br i1 %117, label %132, label %118

118:                                              ; preds = %115
  %119 = load i64, i64* %22, align 8
  %120 = add i32 %116, %1
  %121 = shl i32 %120, 2
  %122 = sext i32 %121 to i64
  %123 = add nsw i64 %122, 7
  %124 = add i64 %123, %119
  %125 = inttoptr i64 %124 to i32*
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = add i32 %116, %3
  %128 = shl i32 %127, 2
  %129 = sext i32 %128 to i64
  %130 = add i64 %23, %129
  %131 = inttoptr i64 %130 to i32*
  store atomic volatile i32 %126, i32* %131 monotonic, align 4
  br label %132

132:                                              ; preds = %110, %118, %115, %18, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10FixedArray6ShrinkEPNS0_7IsolateEi(%"class.v8::internal::FixedArray"* nocapture readonly, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::FixedArray", %"class.v8::internal::FixedArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = icmp sgt i32 %9, %2
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %13 = sub nsw i32 %9, %2
  tail call void @_ZN2v88internal4Heap19RightTrimFixedArrayENS0_14FixedArrayBaseEi(%"class.v8::internal::Heap"* %12, i64 %5, i32 %13) #11
  br label %14

14:                                               ; preds = %11, %3
  ret void
}

declare void @_ZN2v88internal4Heap19RightTrimFixedArrayENS0_14FixedArrayBaseEi(%"class.v8::internal::Heap"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9ArrayList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = add i64 %4, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  br label %14

14:                                               ; preds = %3, %9
  %15 = phi i32 [ %13, %9 ], [ 0, %3 ]
  %16 = add nsw i32 %15, 1
  %17 = ashr i32 %7, 1
  %18 = icmp eq i32 %17, 0
  %19 = add nsw i32 %15, 2
  %20 = icmp sgt i32 %17, %16
  br i1 %20, label %29, label %21

21:                                               ; preds = %14
  %22 = sdiv i32 %19, 2
  %23 = icmp sgt i32 %22, 2
  %24 = select i1 %23, i32 %22, i32 2
  %25 = sub i32 %19, %17
  %26 = add i32 %25, %24
  %27 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %28 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %27, i64* %1, i32 %26) #11
  br label %29

29:                                               ; preds = %21, %14
  %30 = phi i64* [ %28, %21 ], [ %1, %14 ]
  br i1 %18, label %31, label %60

31:                                               ; preds = %29
  %32 = load i64, i64* %30, align 8
  %33 = load i64, i64* %1, align 8
  %34 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %35 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 0, i32 1
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %34, i64 0, i32 1, i64 0
  br label %50

42:                                               ; preds = %36, %31
  %43 = and i64 %33, -262144
  %44 = or i64 %43, 16
  %45 = inttoptr i64 %44 to i64*
  %46 = load i64, i64* %45, align 16
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %50

50:                                               ; preds = %42, %40
  %51 = phi i64* [ %49, %42 ], [ %41, %40 ]
  %52 = getelementptr inbounds i64, i64* %51, i64 39
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %32, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = trunc i64 %53 to i32
  store atomic volatile i32 %56, i32* %55 monotonic, align 4
  %57 = load i64, i64* %30, align 8
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i32*
  store atomic volatile i32 0, i32* %59 monotonic, align 4
  br label %60

60:                                               ; preds = %29, %50
  %61 = load i64, i64* %30, align 8
  %62 = load i64, i64* %2, align 8
  %63 = shl i32 %15, 2
  %64 = add i32 %63, 4
  %65 = sext i32 %64 to i64
  %66 = add nsw i64 %65, 7
  %67 = add i64 %66, %61
  %68 = inttoptr i64 %67 to i32*
  %69 = trunc i64 %62 to i32
  store atomic volatile i32 %69, i32* %68 monotonic, align 4
  %70 = and i64 %62, 1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %95, label %72

72:                                               ; preds = %60
  %73 = and i64 %61, -262144
  %74 = or i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 262144
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %72
  %80 = or i64 %73, 16
  %81 = inttoptr i64 %80 to %"class.v8::internal::Heap"**
  %82 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %81, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %82, i64 %61, i64 %67, i64 %62) #11
  br label %83

83:                                               ; preds = %79, %72
  %84 = and i64 %62, -262144
  %85 = or i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = and i64 %87, 24
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %83
  %91 = load i64, i64* %75, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %61, i64 %67, i64 %62) #11
  br label %95

95:                                               ; preds = %60, %83, %90, %94
  %96 = load i64, i64* %30, align 8
  %97 = shl i32 %16, 1
  %98 = add i64 %96, 7
  %99 = inttoptr i64 %98 to i32*
  store atomic volatile i32 %97, i32* %99 monotonic, align 4
  ret i64* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9ArrayList11EnsureSpaceEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = ashr i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = add nsw i32 %2, 1
  %11 = icmp sgt i32 %8, %2
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = sdiv i32 %10, 2
  %14 = icmp sgt i32 %13, 2
  %15 = select i1 %14, i32 %13, i32 2
  %16 = add nsw i32 %15, %10
  %17 = sub i32 %16, %8
  %18 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %19 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %18, i64* %1, i32 %17) #11
  br label %20

20:                                               ; preds = %3, %12
  %21 = phi i64* [ %19, %12 ], [ %1, %3 ]
  br i1 %9, label %22, label %51

22:                                               ; preds = %20
  %23 = load i64, i64* %21, align 8
  %24 = load i64, i64* %1, align 8
  %25 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %26 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %25, i64 0, i32 0, i32 1
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %25, i64 0, i32 1, i64 0
  br label %41

33:                                               ; preds = %27, %22
  %34 = and i64 %24, -262144
  %35 = or i64 %34, 16
  %36 = inttoptr i64 %35 to i64*
  %37 = load i64, i64* %36, align 16
  %38 = add i64 %37, -41416
  %39 = inttoptr i64 %38 to %"class.v8::internal::Isolate"*
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %41

41:                                               ; preds = %31, %33
  %42 = phi i64* [ %40, %33 ], [ %32, %31 ]
  %43 = getelementptr inbounds i64, i64* %42, i64 39
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %23, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = trunc i64 %44 to i32
  store atomic volatile i32 %47, i32* %46 monotonic, align 4
  %48 = load i64, i64* %21, align 8
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i32*
  store atomic volatile i32 0, i32* %50 monotonic, align 4
  br label %51

51:                                               ; preds = %41, %20
  ret i64* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9ArrayList3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEES7_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %15, label %10

10:                                               ; preds = %4
  %11 = add i64 %5, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = ashr i32 %13, 1
  br label %15

15:                                               ; preds = %4, %10
  %16 = phi i32 [ %14, %10 ], [ 0, %4 ]
  %17 = add nsw i32 %16, 2
  %18 = ashr i32 %8, 1
  %19 = icmp eq i32 %18, 0
  %20 = add nsw i32 %16, 3
  %21 = icmp sgt i32 %18, %17
  br i1 %21, label %30, label %22

22:                                               ; preds = %15
  %23 = sdiv i32 %20, 2
  %24 = icmp sgt i32 %23, 2
  %25 = select i1 %24, i32 %23, i32 2
  %26 = sub i32 %20, %18
  %27 = add i32 %26, %25
  %28 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %29 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %28, i64* %1, i32 %27) #11
  br label %30

30:                                               ; preds = %22, %15
  %31 = phi i64* [ %29, %22 ], [ %1, %15 ]
  br i1 %19, label %32, label %61

32:                                               ; preds = %30
  %33 = load i64, i64* %31, align 8
  %34 = load i64, i64* %1, align 8
  %35 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %36 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %35, i64 0, i32 0, i32 1
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %35, i64 0, i32 1, i64 0
  br label %51

43:                                               ; preds = %37, %32
  %44 = and i64 %34, -262144
  %45 = or i64 %44, 16
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 16
  %48 = add i64 %47, -41416
  %49 = inttoptr i64 %48 to %"class.v8::internal::Isolate"*
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %49, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %51

51:                                               ; preds = %43, %41
  %52 = phi i64* [ %50, %43 ], [ %42, %41 ]
  %53 = getelementptr inbounds i64, i64* %52, i64 39
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %33, -1
  %56 = inttoptr i64 %55 to i32*
  %57 = trunc i64 %54 to i32
  store atomic volatile i32 %57, i32* %56 monotonic, align 4
  %58 = load i64, i64* %31, align 8
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i32*
  store atomic volatile i32 0, i32* %60 monotonic, align 4
  br label %61

61:                                               ; preds = %30, %51
  %62 = load i64, i64* %31, align 8
  %63 = load i64, i64* %2, align 8
  %64 = shl i32 %16, 2
  %65 = add i32 %64, 4
  %66 = sext i32 %65 to i64
  %67 = add nsw i64 %66, 7
  %68 = add i64 %67, %62
  %69 = inttoptr i64 %68 to i32*
  %70 = trunc i64 %63 to i32
  store atomic volatile i32 %70, i32* %69 monotonic, align 4
  %71 = and i64 %63, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %96, label %73

73:                                               ; preds = %61
  %74 = and i64 %62, -262144
  %75 = or i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 262144
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %73
  %81 = or i64 %74, 16
  %82 = inttoptr i64 %81 to %"class.v8::internal::Heap"**
  %83 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %82, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %83, i64 %62, i64 %68, i64 %63) #11
  br label %84

84:                                               ; preds = %80, %73
  %85 = and i64 %63, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %84
  %92 = load i64, i64* %76, align 8
  %93 = and i64 %92, 24
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %62, i64 %68, i64 %63) #11
  br label %96

96:                                               ; preds = %61, %84, %91, %95
  %97 = load i64, i64* %31, align 8
  %98 = load i64, i64* %3, align 8
  %99 = add i32 %64, 8
  %100 = sext i32 %99 to i64
  %101 = add nsw i64 %100, 7
  %102 = add i64 %101, %97
  %103 = inttoptr i64 %102 to i32*
  %104 = trunc i64 %98 to i32
  store atomic volatile i32 %104, i32* %103 monotonic, align 4
  %105 = and i64 %98, 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %130, label %107

107:                                              ; preds = %96
  %108 = and i64 %97, -262144
  %109 = or i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 262144
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %107
  %115 = or i64 %108, 16
  %116 = inttoptr i64 %115 to %"class.v8::internal::Heap"**
  %117 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %116, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %117, i64 %97, i64 %102, i64 %98) #11
  br label %118

118:                                              ; preds = %114, %107
  %119 = and i64 %98, -262144
  %120 = or i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, 24
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %118
  %126 = load i64, i64* %110, align 8
  %127 = and i64 %126, 24
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %97, i64 %102, i64 %98) #11
  br label %130

130:                                              ; preds = %96, %118, %125, %129
  %131 = load i64, i64* %31, align 8
  %132 = shl i32 %17, 1
  %133 = add i64 %131, 7
  %134 = inttoptr i64 %133 to i32*
  store atomic volatile i32 %132, i32* %134 monotonic, align 4
  ret i64* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9ArrayList3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %4 = add nsw i32 %1, 1
  %5 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3, i32 %4, i8 zeroext 0) #11
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 39
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = trunc i64 %8 to i32
  store atomic volatile i32 %11, i32* %10 monotonic, align 4
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i32*
  store atomic volatile i32 0, i32* %14 monotonic, align 4
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9ArrayList8ElementsEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::ArrayList>::ObjectRef", align 8
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = add i64 %4, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %12, 1
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i32 [ %13, %9 ], [ 0, %2 ]
  %16 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %17 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %16, i32 %15, i8 zeroext 0) #11
  %18 = bitcast %"class.v8::internal::Handle<v8::internal::ArrayList>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = load i64, i64* %1, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ArrayList>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ArrayList>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ArrayList>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ArrayList>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %17, align 8
  call void @_ZNK2v88internal10FixedArray6CopyToEiS1_ii(%"class.v8::internal::FixedArray"* nonnull %21, i32 1, i64 %22, i32 0, i32 %15)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  ret i64* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13WeakArrayList8AddToEndEPNS0_7IsolateENS0_6HandleIS1_EERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = add i64 %4, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = ashr i32 %7, 1
  %9 = add nsw i32 %8, 1
  %10 = add i64 %4, 3
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = ashr i32 %12, 1
  %14 = icmp sgt i32 %13, %8
  br i1 %14, label %26, label %15

15:                                               ; preds = %3
  %16 = sdiv i32 %9, 2
  %17 = icmp sgt i32 %16, 2
  %18 = select i1 %17, i32 %16, i32 2
  %19 = sub i32 %9, %13
  %20 = add i32 %19, %18
  %21 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %22 = tail call i64* @_ZN2v88internal7Factory24CopyWeakArrayListAndGrowENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %21, i64* %1, i32 %20, i8 zeroext 0) #11
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  br label %26

26:                                               ; preds = %3, %15
  %27 = phi i32* [ %6, %3 ], [ %25, %15 ]
  %28 = phi i64 [ %4, %3 ], [ %23, %15 ]
  %29 = phi i64* [ %1, %3 ], [ %22, %15 ]
  %30 = load i32, i32* %27, align 4
  %31 = lshr i32 %30, 1
  %32 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 1, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %36, null
  br i1 %34, label %38, label %43

38:                                               ; preds = %26
  br i1 %37, label %39, label %40, !prof !3

39:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

40:                                               ; preds = %38
  %41 = load i64, i64* %36, align 8
  %42 = or i64 %41, 2
  br label %47

43:                                               ; preds = %26
  br i1 %37, label %44, label %45, !prof !3

44:                                               ; preds = %43
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

45:                                               ; preds = %43
  %46 = load i64, i64* %36, align 8
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i64 [ %42, %40 ], [ %46, %45 ]
  %49 = shl i32 %31, 2
  %50 = sext i32 %49 to i64
  %51 = add i64 %28, 11
  %52 = add i64 %51, %50
  %53 = inttoptr i64 %52 to i32*
  %54 = trunc i64 %48 to i32
  store atomic volatile i32 %54, i32* %53 monotonic, align 4
  %55 = and i64 %48, 1
  %56 = icmp ne i64 %55, 0
  %57 = icmp ne i32 %54, 3
  %58 = and i1 %57, %56
  br i1 %58, label %59, label %87

59:                                               ; preds = %47
  %60 = and i64 %28, -262144
  %61 = or i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 262144
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %59
  %67 = and i64 %48, -3
  %68 = or i64 %60, 16
  %69 = inttoptr i64 %68 to %"class.v8::internal::Heap"**
  %70 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %69, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %70, i64 %28, i64 %52, i64 %67) #11
  br label %71

71:                                               ; preds = %66, %59
  %72 = and i64 %48, -3
  %73 = and i64 %48, -262144
  %74 = or i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = and i64 %76, 24
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %71
  %80 = and i64 %28, -262144
  %81 = or i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 24
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %79
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %28, i64 %52, i64 %72) #11
  br label %87

87:                                               ; preds = %47, %71, %79, %86
  %88 = load i64, i64* %29, align 8
  %89 = add i32 %30, 2
  %90 = and i32 %89, -2
  %91 = add i64 %88, 7
  %92 = inttoptr i64 %91 to i32*
  store atomic volatile i32 %90, i32* %92 monotonic, align 4
  ret i64* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13WeakArrayList11EnsureSpaceEPNS0_7IsolateENS0_6HandleIS1_EEiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = icmp slt i32 %9, %2
  br i1 %10, label %11, label %19

11:                                               ; preds = %4
  %12 = sdiv i32 %2, 2
  %13 = icmp sgt i32 %12, 2
  %14 = select i1 %13, i32 %12, i32 2
  %15 = add nsw i32 %14, %2
  %16 = sub i32 %15, %9
  %17 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %18 = tail call i64* @_ZN2v88internal7Factory24CopyWeakArrayListAndGrowENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %17, i64* %1, i32 %16, i8 zeroext %3) #11
  br label %19

19:                                               ; preds = %11, %4
  %20 = phi i64* [ %18, %11 ], [ %1, %4 ]
  ret i64* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13WeakArrayList8AddToEndEPNS0_7IsolateENS0_6HandleIS1_EERKNS0_17MaybeObjectHandleES8_(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16), %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = add nsw i32 %9, 2
  %11 = add i64 %5, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = ashr i32 %13, 1
  %15 = icmp sgt i32 %10, %14
  br i1 %15, label %16, label %27

16:                                               ; preds = %4
  %17 = sdiv i32 %10, 2
  %18 = icmp sgt i32 %17, 2
  %19 = select i1 %18, i32 %17, i32 2
  %20 = sub i32 %10, %14
  %21 = add i32 %20, %19
  %22 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %23 = tail call i64* @_ZN2v88internal7Factory24CopyWeakArrayListAndGrowENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %22, i64* %1, i32 %21, i8 zeroext 0) #11
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  br label %27

27:                                               ; preds = %4, %16
  %28 = phi i32* [ %7, %4 ], [ %26, %16 ]
  %29 = phi i64 [ %5, %4 ], [ %24, %16 ]
  %30 = phi i64* [ %1, %4 ], [ %23, %16 ]
  %31 = load i32, i32* %28, align 4
  %32 = lshr i32 %31, 1
  %33 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 1, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %37, null
  br i1 %35, label %39, label %44

39:                                               ; preds = %27
  br i1 %38, label %40, label %41, !prof !3

40:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

41:                                               ; preds = %39
  %42 = load i64, i64* %37, align 8
  %43 = or i64 %42, 2
  br label %48

44:                                               ; preds = %27
  br i1 %38, label %45, label %46, !prof !3

45:                                               ; preds = %44
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

46:                                               ; preds = %44
  %47 = load i64, i64* %37, align 8
  br label %48

48:                                               ; preds = %41, %46
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ]
  %50 = shl i32 %32, 2
  %51 = sext i32 %50 to i64
  %52 = add i64 %29, 11
  %53 = add i64 %52, %51
  %54 = inttoptr i64 %53 to i32*
  %55 = trunc i64 %49 to i32
  store atomic volatile i32 %55, i32* %54 monotonic, align 4
  %56 = and i64 %49, 1
  %57 = icmp ne i64 %56, 0
  %58 = icmp ne i32 %55, 3
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %88

60:                                               ; preds = %48
  %61 = and i64 %29, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 262144
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %60
  %68 = and i64 %49, -3
  %69 = or i64 %61, 16
  %70 = inttoptr i64 %69 to %"class.v8::internal::Heap"**
  %71 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %70, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %71, i64 %29, i64 %53, i64 %68) #11
  br label %72

72:                                               ; preds = %67, %60
  %73 = and i64 %49, -3
  %74 = and i64 %49, -262144
  %75 = or i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 24
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %72
  %81 = and i64 %29, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 24
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %80
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %29, i64 %53, i64 %73) #11
  br label %88

88:                                               ; preds = %48, %72, %80, %87
  %89 = load i64, i64* %30, align 8
  %90 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %3, i64 0, i32 1, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = icmp eq i64* %94, null
  br i1 %92, label %96, label %101

96:                                               ; preds = %88
  br i1 %95, label %97, label %98, !prof !3

97:                                               ; preds = %96
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

98:                                               ; preds = %96
  %99 = load i64, i64* %94, align 8
  %100 = or i64 %99, 2
  br label %105

101:                                              ; preds = %88
  br i1 %95, label %102, label %103, !prof !3

102:                                              ; preds = %101
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

103:                                              ; preds = %101
  %104 = load i64, i64* %94, align 8
  br label %105

105:                                              ; preds = %98, %103
  %106 = phi i64 [ %100, %98 ], [ %104, %103 ]
  %107 = add i32 %50, 4
  %108 = sext i32 %107 to i64
  %109 = add nsw i64 %108, 11
  %110 = add i64 %109, %89
  %111 = inttoptr i64 %110 to i32*
  %112 = trunc i64 %106 to i32
  store atomic volatile i32 %112, i32* %111 monotonic, align 4
  %113 = and i64 %106, 1
  %114 = icmp ne i64 %113, 0
  %115 = icmp ne i32 %112, 3
  %116 = and i1 %115, %114
  br i1 %116, label %117, label %145

117:                                              ; preds = %105
  %118 = and i64 %89, -262144
  %119 = or i64 %118, 8
  %120 = inttoptr i64 %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 262144
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %117
  %125 = and i64 %106, -3
  %126 = or i64 %118, 16
  %127 = inttoptr i64 %126 to %"class.v8::internal::Heap"**
  %128 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %127, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %128, i64 %89, i64 %110, i64 %125) #11
  br label %129

129:                                              ; preds = %124, %117
  %130 = and i64 %106, -3
  %131 = and i64 %106, -262144
  %132 = or i64 %131, 8
  %133 = inttoptr i64 %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 24
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %129
  %138 = and i64 %89, -262144
  %139 = or i64 %138, 8
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %141, 24
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %137
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %89, i64 %110, i64 %130) #11
  br label %145

145:                                              ; preds = %105, %129, %137, %144
  %146 = load i64, i64* %30, align 8
  %147 = add i32 %31, 4
  %148 = and i32 %147, -2
  %149 = add i64 %146, 7
  %150 = inttoptr i64 %149 to i32*
  store atomic volatile i32 %148, i32* %150 monotonic, align 4
  ret i64* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13WeakArrayList6AppendEPNS0_7IsolateENS0_6HandleIS1_EERKNS0_17MaybeObjectHandleENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16), i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::WeakArrayList>::ObjectRef", align 8
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = add i64 %6, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = ashr i32 %13, 1
  %15 = icmp slt i32 %10, %14
  br i1 %15, label %16, label %72

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 1, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %21, null
  br i1 %19, label %23, label %28

23:                                               ; preds = %16
  br i1 %22, label %24, label %25, !prof !3

24:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

25:                                               ; preds = %23
  %26 = load i64, i64* %21, align 8
  %27 = or i64 %26, 2
  br label %32

28:                                               ; preds = %16
  br i1 %22, label %29, label %30, !prof !3

29:                                               ; preds = %28
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %28
  %31 = load i64, i64* %21, align 8
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ]
  %34 = shl i32 %10, 2
  %35 = sext i32 %34 to i64
  %36 = add i64 %6, 11
  %37 = add i64 %36, %35
  %38 = inttoptr i64 %37 to i32*
  %39 = trunc i64 %33 to i32
  store atomic volatile i32 %39, i32* %38 monotonic, align 4
  %40 = and i64 %33, 1
  %41 = icmp ne i64 %40, 0
  %42 = icmp ne i32 %39, 3
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %173

44:                                               ; preds = %32
  %45 = and i64 %6, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 262144
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %44
  %52 = and i64 %33, -3
  %53 = or i64 %45, 16
  %54 = inttoptr i64 %53 to %"class.v8::internal::Heap"**
  %55 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %54, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %55, i64 %6, i64 %37, i64 %52) #11
  br label %56

56:                                               ; preds = %51, %44
  %57 = and i64 %33, -3
  %58 = and i64 %33, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %173, label %64

64:                                               ; preds = %56
  %65 = and i64 %6, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %173

71:                                               ; preds = %64
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %6, i64 %37, i64 %57) #11
  br label %173

72:                                               ; preds = %4
  %73 = icmp sgt i32 %9, 1
  br i1 %73, label %74, label %92

74:                                               ; preds = %72
  %75 = lshr i32 %9, 1
  %76 = zext i32 %75 to i64
  %77 = add i64 %6, 11
  br label %78

78:                                               ; preds = %78, %74
  %79 = phi i64 [ 0, %74 ], [ %90, %78 ]
  %80 = phi i32 [ 0, %74 ], [ %89, %78 ]
  %81 = trunc i64 %79 to i32
  %82 = shl i32 %81, 2
  %83 = sext i32 %82 to i64
  %84 = add i64 %77, %83
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = icmp ne i32 %86, 3
  %88 = zext i1 %87 to i32
  %89 = add nuw nsw i32 %80, %88
  %90 = add nuw nsw i64 %79, 1
  %91 = icmp ult i64 %90, %76
  br i1 %91, label %78, label %92

92:                                               ; preds = %78, %72
  %93 = phi i32 [ 0, %72 ], [ %89, %78 ]
  %94 = add nsw i32 %93, 1
  %95 = sdiv i32 %10, 4
  %96 = icmp sge i32 %94, %95
  %97 = mul nsw i32 %95, 3
  %98 = icmp sgt i32 %97, %93
  %99 = and i1 %98, %96
  br i1 %99, label %107, label %100

100:                                              ; preds = %92
  %101 = sdiv i32 %94, 2
  %102 = icmp sgt i32 %101, 2
  %103 = select i1 %102, i32 %101, i32 2
  %104 = add nsw i32 %103, %94
  %105 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %106 = tail call i64* @_ZN2v88internal7Factory20CompactWeakArrayListENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %105, i64* %1, i32 %104, i8 zeroext %3) #11
  br label %111

107:                                              ; preds = %92
  %108 = bitcast %"class.v8::internal::Handle<v8::internal::WeakArrayList>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WeakArrayList>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WeakArrayList>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::WeakArrayList>::ObjectRef", %"class.v8::internal::Handle<v8::internal::WeakArrayList>::ObjectRef"* %5, i64 0, i32 0
  call void @_ZN2v88internal13WeakArrayList7CompactEPNS0_7IsolateE(%"class.v8::internal::WeakArrayList"* nonnull %110, %"class.v8::internal::Isolate"* %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #11
  br label %111

111:                                              ; preds = %107, %100
  %112 = phi i64* [ %1, %107 ], [ %106, %100 ]
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 7
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = lshr i32 %116, 1
  %118 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %2, i64 0, i32 1, i32 0
  %122 = load i64*, i64** %121, align 8
  %123 = icmp eq i64* %122, null
  br i1 %120, label %124, label %129

124:                                              ; preds = %111
  br i1 %123, label %125, label %126, !prof !3

125:                                              ; preds = %124
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

126:                                              ; preds = %124
  %127 = load i64, i64* %122, align 8
  %128 = or i64 %127, 2
  br label %133

129:                                              ; preds = %111
  br i1 %123, label %130, label %131, !prof !3

130:                                              ; preds = %129
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

131:                                              ; preds = %129
  %132 = load i64, i64* %122, align 8
  br label %133

133:                                              ; preds = %126, %131
  %134 = phi i64 [ %128, %126 ], [ %132, %131 ]
  %135 = shl i32 %117, 2
  %136 = sext i32 %135 to i64
  %137 = add i64 %113, 11
  %138 = add i64 %137, %136
  %139 = inttoptr i64 %138 to i32*
  %140 = trunc i64 %134 to i32
  store atomic volatile i32 %140, i32* %139 monotonic, align 4
  %141 = and i64 %134, 1
  %142 = icmp ne i64 %141, 0
  %143 = icmp ne i32 %140, 3
  %144 = and i1 %143, %142
  br i1 %144, label %145, label %173

145:                                              ; preds = %133
  %146 = and i64 %113, -262144
  %147 = or i64 %146, 8
  %148 = inttoptr i64 %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = and i64 %149, 262144
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %145
  %153 = and i64 %134, -3
  %154 = or i64 %146, 16
  %155 = inttoptr i64 %154 to %"class.v8::internal::Heap"**
  %156 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %155, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %156, i64 %113, i64 %138, i64 %153) #11
  br label %157

157:                                              ; preds = %152, %145
  %158 = and i64 %134, -3
  %159 = and i64 %134, -262144
  %160 = or i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 24
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %157
  %166 = and i64 %113, -262144
  %167 = or i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, 24
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %165
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %113, i64 %138, i64 %158) #11
  br label %173

173:                                              ; preds = %172, %165, %157, %133, %71, %64, %56, %32
  %174 = phi i64* [ %1, %32 ], [ %1, %56 ], [ %1, %64 ], [ %1, %71 ], [ %112, %133 ], [ %112, %157 ], [ %112, %165 ], [ %112, %172 ]
  %175 = phi i32 [ %9, %32 ], [ %9, %56 ], [ %9, %64 ], [ %9, %71 ], [ %116, %133 ], [ %116, %157 ], [ %116, %165 ], [ %116, %172 ]
  %176 = load i64, i64* %174, align 8
  %177 = add i32 %175, 2
  %178 = and i32 %177, -2
  %179 = add i64 %176, 7
  %180 = inttoptr i64 %179 to i32*
  store atomic volatile i32 %178, i32* %180 monotonic, align 4
  ret i64* %174
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13WeakArrayList17CountLiveElementsEv(%"class.v8::internal::WeakArrayList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::WeakArrayList", %"class.v8::internal::WeakArrayList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 7
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 1
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = lshr i32 %6, 1
  %10 = zext i32 %9 to i64
  br label %13

11:                                               ; preds = %13, %1
  %12 = phi i32 [ 0, %1 ], [ %25, %13 ]
  ret i32 %12

13:                                               ; preds = %8, %13
  %14 = phi i64 [ 0, %8 ], [ %26, %13 ]
  %15 = phi i32 [ 0, %8 ], [ %25, %13 ]
  %16 = trunc i64 %14 to i32
  %17 = shl i32 %16, 2
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %18, 11
  %20 = add i64 %19, %3
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = icmp ne i32 %22, 3
  %24 = zext i1 %23 to i32
  %25 = add nuw nsw i32 %15, %24
  %26 = add nuw nsw i64 %14, 1
  %27 = icmp ult i64 %26, %10
  br i1 %27, label %13, label %11
}

declare i64* @_ZN2v88internal7Factory20CompactWeakArrayListENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13WeakArrayList7CompactEPNS0_7IsolateE(%"class.v8::internal::WeakArrayList"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::WeakArrayList", %"class.v8::internal::WeakArrayList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = lshr i32 %7, 1
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %12 = zext i32 %10 to i64
  br label %20

13:                                               ; preds = %84
  %14 = add i64 %88, 7
  %15 = inttoptr i64 %14 to i32*
  br label %16

16:                                               ; preds = %13, %2
  %17 = phi i32* [ %15, %13 ], [ %6, %2 ]
  %18 = phi i32 [ %85, %13 ], [ 0, %2 ]
  %19 = shl i32 %18, 1
  store atomic volatile i32 %19, i32* %17 monotonic, align 4
  ret void

20:                                               ; preds = %84, %9
  %21 = phi i64 [ %4, %9 ], [ %88, %84 ]
  %22 = phi i64 [ 0, %9 ], [ %86, %84 ]
  %23 = phi i32 [ 0, %9 ], [ %85, %84 ]
  %24 = load i64, i64* %11, align 8
  %25 = trunc i64 %22 to i32
  %26 = shl i32 %25, 2
  %27 = sext i32 %26 to i64
  %28 = add nsw i64 %27, 11
  %29 = add i64 %28, %21
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i64 %24, 4294967295
  %33 = icmp eq i64 %32, 0
  tail call void @llvm.assume(i1 %33) #11
  %34 = zext i32 %31 to i64
  %35 = or i64 %24, %34
  %36 = icmp eq i32 %31, 3
  br i1 %36, label %84, label %37

37:                                               ; preds = %20
  %38 = zext i32 %23 to i64
  %39 = icmp eq i64 %22, %38
  br i1 %39, label %82, label %40

40:                                               ; preds = %37
  %41 = shl i32 %23, 2
  %42 = sext i32 %41 to i64
  %43 = add nsw i64 %42, 11
  %44 = add i64 %21, %43
  %45 = inttoptr i64 %44 to i32*
  store atomic volatile i32 %31, i32* %45 monotonic, align 4
  %46 = load i64, i64* %3, align 8
  %47 = add i64 %46, %43
  %48 = and i64 %34, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %82, label %50

50:                                               ; preds = %40
  %51 = and i64 %46, -262144
  %52 = or i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 262144
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %50
  %58 = and i64 %35, -3
  %59 = or i64 %51, 16
  %60 = inttoptr i64 %59 to %"class.v8::internal::Heap"**
  %61 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %60, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %61, i64 %46, i64 %47, i64 %58) #11
  %62 = load i64, i64* %3, align 8
  %63 = add i64 %62, %43
  br label %64

64:                                               ; preds = %57, %50
  %65 = phi i64 [ %47, %50 ], [ %63, %57 ]
  %66 = phi i64 [ %46, %50 ], [ %62, %57 ]
  %67 = and i64 %35, -3
  %68 = and i64 %35, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %64
  %75 = and i64 %66, -262144
  %76 = or i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %78, 24
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %74
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %66, i64 %65, i64 %67) #11
  br label %82

82:                                               ; preds = %40, %81, %74, %64, %37
  %83 = add nsw i32 %23, 1
  br label %84

84:                                               ; preds = %82, %20
  %85 = phi i32 [ %23, %20 ], [ %83, %82 ]
  %86 = add nuw nsw i64 %22, 1
  %87 = icmp ult i64 %86, %12
  %88 = load i64, i64* %3, align 8
  br i1 %87, label %20, label %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13WeakArrayList6IsFullEv(%"class.v8::internal::WeakArrayList"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::WeakArrayList", %"class.v8::internal::WeakArrayList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 7
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = add i64 %3, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = xor i32 %9, %6
  %11 = icmp ult i32 %10, 2
  ret i1 %11
}

declare i64* @_ZN2v88internal7Factory24CopyWeakArrayListAndGrowENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal13WeakArrayList23CountLiveWeakReferencesEv(%"class.v8::internal::WeakArrayList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::WeakArrayList", %"class.v8::internal::WeakArrayList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 7
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 1
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = lshr i32 %6, 1
  %10 = zext i32 %9 to i64
  br label %13

11:                                               ; preds = %13, %1
  %12 = phi i32 [ 0, %1 ], [ %28, %13 ]
  ret i32 %12

13:                                               ; preds = %8, %13
  %14 = phi i64 [ 0, %8 ], [ %29, %13 ]
  %15 = phi i32 [ 0, %8 ], [ %28, %13 ]
  %16 = trunc i64 %14 to i32
  %17 = shl i32 %16, 2
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %18, 11
  %20 = add i64 %19, %3
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 3
  %24 = icmp eq i32 %23, 3
  %25 = icmp ne i32 %22, 3
  %26 = and i1 %25, %24
  %27 = zext i1 %26 to i32
  %28 = add nuw nsw i32 %15, %27
  %29 = add nuw nsw i64 %14, 1
  %30 = icmp ult i64 %29, %10
  br i1 %30, label %13, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal13WeakArrayList9RemoveOneERKNS0_17MaybeObjectHandleE(%"class.v8::internal::WeakArrayList"* nocapture readonly, %"class.v8::internal::MaybeObjectHandle"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::WeakArrayList", %"class.v8::internal::WeakArrayList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = ashr i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %143, label %10

10:                                               ; preds = %2
  %11 = and i64 %4, -262144
  %12 = or i64 %11, 16
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 16
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 4294967295
  %20 = icmp eq i64 %19, 0
  tail call void @llvm.assume(i1 %20) #11
  %21 = add nsw i32 %8, -1
  %22 = icmp sgt i32 %7, 1
  br i1 %22, label %23, label %143

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %1, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %1, i64 0, i32 1, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %28, null
  br i1 %26, label %30, label %57

30:                                               ; preds = %23
  br i1 %29, label %37, label %31, !prof !3

31:                                               ; preds = %30
  %32 = add nsw i32 %8, -1
  %33 = sext i32 %32 to i64
  %34 = load i64, i64* %28, align 8
  %35 = trunc i64 %34 to i32
  %36 = or i32 %35, 2
  br label %44

37:                                               ; preds = %30
  %38 = shl i32 %21, 2
  %39 = sext i32 %38 to i64
  %40 = add nsw i64 %39, 11
  %41 = add i64 %40, %4
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

44:                                               ; preds = %31, %54
  %45 = phi i64 [ %33, %31 ], [ %55, %54 ]
  %46 = trunc i64 %45 to i32
  %47 = shl i32 %46, 2
  %48 = sext i32 %47 to i64
  %49 = add nsw i64 %48, 11
  %50 = add i64 %49, %4
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = icmp eq i32 %52, %36
  br i1 %53, label %83, label %54

54:                                               ; preds = %44
  %55 = add i64 %45, -1
  %56 = icmp sgt i64 %45, 0
  br i1 %56, label %44, label %143

57:                                               ; preds = %23
  br i1 %29, label %63, label %58, !prof !3

58:                                               ; preds = %57
  %59 = add nsw i32 %8, -1
  %60 = sext i32 %59 to i64
  %61 = load i64, i64* %28, align 8
  %62 = trunc i64 %61 to i32
  br label %73

63:                                               ; preds = %57
  %64 = shl i32 %21, 2
  %65 = sext i32 %64 to i64
  %66 = add nsw i64 %65, 11
  %67 = add i64 %66, %4
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

70:                                               ; preds = %73
  %71 = add i64 %74, -1
  %72 = icmp sgt i64 %74, 0
  br i1 %72, label %73, label %143

73:                                               ; preds = %58, %70
  %74 = phi i64 [ %60, %58 ], [ %71, %70 ]
  %75 = trunc i64 %74 to i32
  %76 = shl i32 %75, 2
  %77 = sext i32 %76 to i64
  %78 = add nsw i64 %77, 11
  %79 = add i64 %78, %4
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = icmp eq i32 %81, %62
  br i1 %82, label %83, label %70

83:                                               ; preds = %73, %44
  %84 = phi i64 [ %50, %44 ], [ %79, %73 ]
  %85 = phi i64 [ %49, %44 ], [ %78, %73 ]
  %86 = inttoptr i64 %84 to i32*
  %87 = and i64 %4, -4294967296
  %88 = shl i32 %21, 2
  %89 = sext i32 %88 to i64
  %90 = add nsw i64 %89, 11
  %91 = add i64 %4, %90
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %87, %94
  store atomic volatile i32 %93, i32* %86 monotonic, align 4
  %96 = load i64, i64* %3, align 8
  %97 = add i64 %96, %85
  %98 = and i64 %94, 1
  %99 = icmp ne i64 %98, 0
  %100 = icmp ne i32 %93, 3
  %101 = and i1 %100, %99
  br i1 %101, label %102, label %135

102:                                              ; preds = %83
  %103 = and i64 %96, -262144
  %104 = or i64 %103, 8
  %105 = inttoptr i64 %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 262144
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %116, label %109

109:                                              ; preds = %102
  %110 = and i64 %95, -3
  %111 = or i64 %103, 16
  %112 = inttoptr i64 %111 to %"class.v8::internal::Heap"**
  %113 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %112, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %113, i64 %96, i64 %97, i64 %110) #11
  %114 = load i64, i64* %3, align 8
  %115 = add i64 %114, %85
  br label %116

116:                                              ; preds = %109, %102
  %117 = phi i64 [ %97, %102 ], [ %115, %109 ]
  %118 = phi i64 [ %96, %102 ], [ %114, %109 ]
  %119 = and i64 %95, -3
  %120 = and i64 %95, -262144
  %121 = or i64 %120, 8
  %122 = inttoptr i64 %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, 24
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %135, label %126

126:                                              ; preds = %116
  %127 = and i64 %118, -262144
  %128 = or i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = and i64 %130, 24
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %126
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %118, i64 %117, i64 %119) #11
  %134 = load i64, i64* %3, align 8
  br label %135

135:                                              ; preds = %83, %133, %126, %116
  %136 = phi i64 [ %134, %133 ], [ %118, %126 ], [ %118, %116 ], [ %96, %83 ]
  %137 = add i64 %136, %90
  %138 = inttoptr i64 %137 to i32*
  store atomic volatile i32 3, i32* %138 monotonic, align 4
  %139 = load i64, i64* %3, align 8
  %140 = shl i32 %21, 1
  %141 = add i64 %139, 7
  %142 = inttoptr i64 %141 to i32*
  store atomic volatile i32 %140, i32* %142 monotonic, align 4
  br label %143

143:                                              ; preds = %70, %54, %10, %135, %2
  %144 = phi i1 [ false, %2 ], [ true, %135 ], [ false, %10 ], [ false, %54 ], [ false, %70 ]
  ret i1 %144
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14PrototypeUsers3AddEPNS0_7IsolateENS0_6HandleINS0_13WeakArrayListEEENS4_INS0_3MapEEEPi(%"class.v8::internal::Isolate"*, i64*, i64*, i32*) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = add i64 %5, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  br i1 %10, label %14, label %71

14:                                               ; preds = %4
  %15 = icmp slt i32 %13, 4
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = ashr i32 %13, 1
  %18 = sub nsw i32 4, %17
  %19 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %20 = tail call i64* @_ZN2v88internal7Factory24CopyWeakArrayListAndGrowENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %19, i64* %1, i32 %18, i8 zeroext 0) #11
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i64 [ %21, %16 ], [ %5, %14 ]
  %24 = phi i64* [ %20, %16 ], [ %1, %14 ]
  %25 = add i64 %23, 11
  %26 = inttoptr i64 %25 to i32*
  store atomic volatile i32 0, i32* %26 monotonic, align 4
  %27 = load i64, i64* %24, align 8
  %28 = load i64, i64* %2, align 8
  %29 = add i64 %27, 15
  %30 = inttoptr i64 %29 to i32*
  %31 = trunc i64 %28 to i32
  %32 = or i32 %31, 2
  store atomic volatile i32 %32, i32* %30 monotonic, align 4
  %33 = and i64 %28, 1
  %34 = icmp ne i64 %33, 0
  %35 = icmp ne i32 %32, 3
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %65

37:                                               ; preds = %22
  %38 = and i64 %27, -262144
  %39 = or i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 262144
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %37
  %45 = and i64 %28, -3
  %46 = or i64 %38, 16
  %47 = inttoptr i64 %46 to %"class.v8::internal::Heap"**
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %47, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %48, i64 %27, i64 %29, i64 %45) #11
  br label %49

49:                                               ; preds = %44, %37
  %50 = and i64 %28, -3
  %51 = and i64 %28, -262144
  %52 = or i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 24
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %49
  %58 = and i64 %27, -262144
  %59 = or i64 %58, 8
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 24
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %57
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %27, i64 %29, i64 %50) #11
  br label %65

65:                                               ; preds = %22, %49, %57, %64
  %66 = load i64, i64* %24, align 8
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i32*
  store atomic volatile i32 4, i32* %68 monotonic, align 4
  %69 = icmp eq i32* %3, null
  br i1 %69, label %262, label %70

70:                                               ; preds = %65
  store i32 1, i32* %3, align 4
  br label %262

71:                                               ; preds = %4
  %72 = xor i32 %13, %8
  %73 = icmp ult i32 %72, 2
  br i1 %73, label %123, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %2, align 8
  %76 = shl i32 %9, 2
  %77 = sext i32 %76 to i64
  %78 = add i64 %5, 11
  %79 = add i64 %78, %77
  %80 = inttoptr i64 %79 to i32*
  %81 = trunc i64 %75 to i32
  %82 = or i32 %81, 2
  store atomic volatile i32 %82, i32* %80 monotonic, align 4
  %83 = and i64 %75, 1
  %84 = icmp ne i64 %83, 0
  %85 = icmp ne i32 %82, 3
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %115

87:                                               ; preds = %74
  %88 = and i64 %5, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 262144
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %87
  %95 = and i64 %75, -3
  %96 = or i64 %88, 16
  %97 = inttoptr i64 %96 to %"class.v8::internal::Heap"**
  %98 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %97, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %98, i64 %5, i64 %79, i64 %95) #11
  br label %99

99:                                               ; preds = %94, %87
  %100 = and i64 %75, -3
  %101 = and i64 %75, -262144
  %102 = or i64 %101, 8
  %103 = inttoptr i64 %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = and i64 %104, 24
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %99
  %108 = and i64 %5, -262144
  %109 = or i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 24
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %107
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %5, i64 %79, i64 %100) #11
  br label %115

115:                                              ; preds = %74, %99, %107, %114
  %116 = load i64, i64* %1, align 8
  %117 = add i32 %8, 2
  %118 = and i32 %117, -2
  %119 = add i64 %116, 7
  %120 = inttoptr i64 %119 to i32*
  store atomic volatile i32 %118, i32* %120 monotonic, align 4
  %121 = icmp eq i32* %3, null
  br i1 %121, label %262, label %122

122:                                              ; preds = %115
  store i32 %9, i32* %3, align 4
  br label %262

123:                                              ; preds = %71
  %124 = add i64 %5, 11
  %125 = inttoptr i64 %124 to i32*
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = ashr i32 %126, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %135

129:                                              ; preds = %123
  tail call void @_ZN2v88internal14PrototypeUsers17ScanForEmptySlotsENS0_13WeakArrayListE(i64 %5)
  %130 = load i64, i64* %1, align 8
  %131 = add i64 %130, 11
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = ashr i32 %133, 1
  br label %135

135:                                              ; preds = %129, %123
  %136 = phi i64 [ %130, %129 ], [ %5, %123 ]
  %137 = phi i32 [ %134, %129 ], [ %127, %123 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %196, label %139

139:                                              ; preds = %135
  %140 = add i64 %136, 7
  %141 = inttoptr i64 %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = ashr i32 %142, 1
  %144 = icmp slt i32 %137, %143
  br i1 %144, label %146, label %145, !prof !5

145:                                              ; preds = %139
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.364, i64 0, i64 0)) #16
  unreachable

146:                                              ; preds = %139
  %147 = shl i32 %137, 2
  %148 = sext i32 %147 to i64
  %149 = add nsw i64 %148, 11
  %150 = add i64 %149, %136
  %151 = inttoptr i64 %150 to i32*
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, -2
  %154 = load i64, i64* %2, align 8
  %155 = trunc i64 %154 to i32
  %156 = or i32 %155, 2
  store atomic volatile i32 %156, i32* %151 monotonic, align 4
  %157 = and i64 %154, 1
  %158 = icmp ne i64 %157, 0
  %159 = icmp ne i32 %156, 3
  %160 = and i1 %158, %159
  br i1 %160, label %161, label %189

161:                                              ; preds = %146
  %162 = and i64 %136, -262144
  %163 = or i64 %162, 8
  %164 = inttoptr i64 %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = and i64 %165, 262144
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %173, label %168

168:                                              ; preds = %161
  %169 = and i64 %154, -3
  %170 = or i64 %162, 16
  %171 = inttoptr i64 %170 to %"class.v8::internal::Heap"**
  %172 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %171, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %172, i64 %136, i64 %150, i64 %169) #11
  br label %173

173:                                              ; preds = %168, %161
  %174 = and i64 %154, -3
  %175 = and i64 %154, -262144
  %176 = or i64 %175, 8
  %177 = inttoptr i64 %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = and i64 %178, 24
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %189, label %181

181:                                              ; preds = %173
  %182 = and i64 %136, -262144
  %183 = or i64 %182, 8
  %184 = inttoptr i64 %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = and i64 %185, 24
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %181
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %136, i64 %150, i64 %174) #11
  br label %189

189:                                              ; preds = %146, %173, %181, %188
  %190 = icmp eq i32* %3, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %189
  store i32 %137, i32* %3, align 4
  br label %192

192:                                              ; preds = %189, %191
  %193 = load i64, i64* %1, align 8
  %194 = add i64 %193, 11
  %195 = inttoptr i64 %194 to i32*
  store atomic volatile i32 %153, i32* %195 monotonic, align 4
  br label %262

196:                                              ; preds = %135
  %197 = add nsw i32 %9, 1
  %198 = add i64 %136, 3
  %199 = inttoptr i64 %198 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = ashr i32 %200, 1
  %202 = icmp sgt i32 %201, %9
  br i1 %202, label %212, label %203

203:                                              ; preds = %196
  %204 = sdiv i32 %197, 2
  %205 = icmp sgt i32 %204, 2
  %206 = select i1 %205, i32 %204, i32 2
  %207 = add nsw i32 %206, %197
  %208 = sub i32 %207, %201
  %209 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %210 = tail call i64* @_ZN2v88internal7Factory24CopyWeakArrayListAndGrowENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %209, i64* %1, i32 %208, i8 zeroext 0) #11
  %211 = load i64, i64* %210, align 8
  br label %212

212:                                              ; preds = %196, %203
  %213 = phi i64 [ %211, %203 ], [ %136, %196 ]
  %214 = phi i64* [ %210, %203 ], [ %1, %196 ]
  %215 = load i64, i64* %2, align 8
  %216 = shl i32 %9, 2
  %217 = sext i32 %216 to i64
  %218 = add nsw i64 %217, 11
  %219 = add i64 %218, %213
  %220 = inttoptr i64 %219 to i32*
  %221 = trunc i64 %215 to i32
  %222 = or i32 %221, 2
  store atomic volatile i32 %222, i32* %220 monotonic, align 4
  %223 = and i64 %215, 1
  %224 = icmp ne i64 %223, 0
  %225 = icmp ne i32 %222, 3
  %226 = and i1 %224, %225
  br i1 %226, label %227, label %255

227:                                              ; preds = %212
  %228 = and i64 %213, -262144
  %229 = or i64 %228, 8
  %230 = inttoptr i64 %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = and i64 %231, 262144
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %239, label %234

234:                                              ; preds = %227
  %235 = and i64 %215, -3
  %236 = or i64 %228, 16
  %237 = inttoptr i64 %236 to %"class.v8::internal::Heap"**
  %238 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %237, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %238, i64 %213, i64 %219, i64 %235) #11
  br label %239

239:                                              ; preds = %234, %227
  %240 = and i64 %215, -3
  %241 = and i64 %215, -262144
  %242 = or i64 %241, 8
  %243 = inttoptr i64 %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = and i64 %244, 24
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %255, label %247

247:                                              ; preds = %239
  %248 = and i64 %213, -262144
  %249 = or i64 %248, 8
  %250 = inttoptr i64 %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = and i64 %251, 24
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %247
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %213, i64 %219, i64 %240) #11
  br label %255

255:                                              ; preds = %212, %239, %247, %254
  %256 = load i64, i64* %214, align 8
  %257 = shl i32 %197, 1
  %258 = add i64 %256, 7
  %259 = inttoptr i64 %258 to i32*
  store atomic volatile i32 %257, i32* %259 monotonic, align 4
  %260 = icmp eq i32* %3, null
  br i1 %260, label %262, label %261

261:                                              ; preds = %255
  store i32 %9, i32* %3, align 4
  br label %262

262:                                              ; preds = %261, %255, %122, %115, %70, %65, %192
  %263 = phi i64* [ %1, %192 ], [ %24, %65 ], [ %24, %70 ], [ %1, %115 ], [ %1, %122 ], [ %214, %255 ], [ %214, %261 ]
  ret i64* %263
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14PrototypeUsers17ScanForEmptySlotsENS0_13WeakArrayListE(i64) local_unnamed_addr #0 align 2 {
  %2 = add i64 %0, 7
  %3 = inttoptr i64 %2 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = add i64 %0, 11
  %8 = and i64 %0, -4294967296
  %9 = inttoptr i64 %7 to i32*
  %10 = and i64 %0, -262144
  %11 = or i64 %10, 8
  %12 = inttoptr i64 %11 to i64*
  %13 = or i64 %10, 16
  %14 = inttoptr i64 %13 to %"class.v8::internal::Heap"**
  br label %16

15:                                               ; preds = %57, %1
  ret void

16:                                               ; preds = %6, %57
  %17 = phi i32 [ %4, %6 ], [ %58, %57 ]
  %18 = phi i64 [ 1, %6 ], [ %59, %57 ]
  %19 = trunc i64 %18 to i32
  %20 = shl i32 %19, 2
  %21 = sext i32 %20 to i64
  %22 = add i64 %7, %21
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %26, label %57

26:                                               ; preds = %16
  %27 = load atomic i32, i32* %9 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %8, %28
  store atomic volatile i32 %27, i32* %23 monotonic, align 4
  %30 = and i64 %28, 1
  %31 = icmp ne i64 %30, 0
  %32 = icmp ne i32 %27, 3
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %53

34:                                               ; preds = %26
  %35 = load i64, i64* %12, align 8
  %36 = and i64 %35, 262144
  %37 = icmp eq i64 %36, 0
  %38 = and i64 %29, -3
  br i1 %37, label %41, label %39

39:                                               ; preds = %34
  %40 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %14, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %40, i64 %0, i64 %22, i64 %38) #11
  br label %41

41:                                               ; preds = %34, %39
  %42 = and i64 %29, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %41
  %49 = load i64, i64* %12, align 8
  %50 = and i64 %49, 24
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %0, i64 %22, i64 %38) #11
  br label %53

53:                                               ; preds = %26, %41, %48, %52
  %54 = trunc i64 %18 to i32
  %55 = shl i32 %54, 1
  store atomic volatile i32 %55, i32* %9 monotonic, align 4
  %56 = load i32, i32* %3, align 4
  br label %57

57:                                               ; preds = %16, %53
  %58 = phi i32 [ %17, %16 ], [ %56, %53 ]
  %59 = add nuw nsw i64 %18, 1
  %60 = ashr i32 %58, 1
  %61 = sext i32 %60 to i64
  %62 = icmp slt i64 %59, %61
  br i1 %62, label %16, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal14PrototypeUsers7CompactENS0_6HandleINS0_13WeakArrayListEEEPNS0_4HeapEPFvNS0_10HeapObjectEiiENS0_14AllocationTypeE(i64*, %"class.v8::internal::Heap"*, void (i64, i32, i32)* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %162, label %11

11:                                               ; preds = %4
  %12 = icmp sgt i32 %8, 1
  br i1 %12, label %13, label %34

13:                                               ; preds = %11
  %14 = lshr i32 %8, 1
  %15 = zext i32 %14 to i64
  %16 = add i64 %5, 11
  br label %17

17:                                               ; preds = %17, %13
  %18 = phi i64 [ 0, %13 ], [ %32, %17 ]
  %19 = phi i32 [ 0, %13 ], [ %31, %17 ]
  %20 = trunc i64 %18 to i32
  %21 = shl i32 %20, 2
  %22 = sext i32 %21 to i64
  %23 = add i64 %16, %22
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 3
  %27 = icmp eq i32 %26, 3
  %28 = icmp ne i32 %25, 3
  %29 = and i1 %28, %27
  %30 = zext i1 %29 to i32
  %31 = add nuw nsw i32 %19, %30
  %32 = add nuw nsw i64 %18, 1
  %33 = icmp ult i64 %32, %15
  br i1 %33, label %17, label %34

34:                                               ; preds = %17, %11
  %35 = phi i32 [ 0, %11 ], [ %31, %17 ]
  %36 = add nsw i32 %35, 1
  %37 = icmp eq i32 %36, %9
  br i1 %37, label %162, label %38

38:                                               ; preds = %34
  %39 = ptrtoint %"class.v8::internal::Heap"* %1 to i64
  %40 = add i64 %39, -41416
  %41 = inttoptr i64 %40 to %"class.v8::internal::Isolate"*
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 0, i32 7, i32 0, i64 120
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 31, i32 4
  %45 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %44, align 8
  %46 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %38
  %48 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %45, i64 %43) #11
  %49 = load i64, i64* %48, align 8
  br label %63

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %41) #11
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %43, i64* %59, align 8
  br label %63

63:                                               ; preds = %47, %58
  %64 = phi i64 [ %49, %47 ], [ %43, %58 ]
  %65 = phi i64* [ %48, %47 ], [ %59, %58 ]
  %66 = add i64 %64, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = ashr i32 %68, 1
  %70 = icmp sgt i32 %69, %35
  br i1 %70, label %79, label %71

71:                                               ; preds = %63
  %72 = sdiv i32 %36, 2
  %73 = icmp sgt i32 %72, 2
  %74 = select i1 %73, i32 %72, i32 2
  %75 = add nsw i32 %74, %36
  %76 = sub i32 %75, %69
  %77 = inttoptr i64 %40 to %"class.v8::internal::Factory"*
  %78 = tail call i64* @_ZN2v88internal7Factory24CopyWeakArrayListAndGrowENS0_6HandleINS0_13WeakArrayListEEEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %77, i64* %65, i32 %76, i8 zeroext %3) #11
  br label %79

79:                                               ; preds = %63, %71
  %80 = phi i64* [ %78, %71 ], [ %65, %63 ]
  %81 = load i64, i64* %0, align 8
  %82 = add i64 %81, 7
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, 3
  br i1 %85, label %96, label %86

86:                                               ; preds = %152, %79
  %87 = phi i32 [ 1, %79 ], [ %153, %152 ]
  %88 = load i64, i64* %80, align 8
  %89 = shl i32 %87, 1
  %90 = add i64 %88, 7
  %91 = inttoptr i64 %90 to i32*
  store atomic volatile i32 %89, i32* %91 monotonic, align 4
  %92 = load i64, i64* %80, align 8
  %93 = add i64 %92, 11
  %94 = inttoptr i64 %93 to i32*
  store atomic volatile i32 0, i32* %94 monotonic, align 4
  %95 = load i64, i64* %80, align 8
  br label %162

96:                                               ; preds = %79, %152
  %97 = phi i64 [ %154, %152 ], [ 1, %79 ]
  %98 = phi i64 [ %155, %152 ], [ %81, %79 ]
  %99 = phi i32 [ %153, %152 ], [ 1, %79 ]
  %100 = and i64 %98, -4294967296
  %101 = trunc i64 %97 to i32
  %102 = shl i32 %101, 2
  %103 = sext i32 %102 to i64
  %104 = add nsw i64 %103, 11
  %105 = add i64 %104, %98
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %100, %108
  %110 = and i64 %108, 3
  %111 = icmp eq i64 %110, 3
  %112 = icmp ne i32 %107, 3
  %113 = and i1 %112, %111
  br i1 %113, label %114, label %152

114:                                              ; preds = %96
  %115 = and i64 %109, -3
  %116 = trunc i64 %97 to i32
  tail call void %2(i64 %115, i32 %116, i32 %99) #11
  %117 = load i64, i64* %80, align 8
  %118 = add nsw i32 %99, 1
  %119 = shl i32 %99, 2
  %120 = sext i32 %119 to i64
  %121 = add nsw i64 %120, 11
  %122 = add i64 %121, %117
  %123 = inttoptr i64 %122 to i32*
  store atomic volatile i32 %107, i32* %123 monotonic, align 4
  %124 = and i64 %108, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %114
  %127 = and i64 %117, -262144
  %128 = or i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = and i64 %130, 262144
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %137, label %133

133:                                              ; preds = %126
  %134 = or i64 %127, 16
  %135 = inttoptr i64 %134 to %"class.v8::internal::Heap"**
  %136 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %135, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %136, i64 %117, i64 %122, i64 %115) #11
  br label %137

137:                                              ; preds = %133, %126
  %138 = and i64 %109, -262144
  %139 = or i64 %138, 8
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %141, 24
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %152, label %144

144:                                              ; preds = %137
  %145 = and i64 %117, -262144
  %146 = or i64 %145, 8
  %147 = inttoptr i64 %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 24
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %144
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %117, i64 %122, i64 %115) #11
  br label %152

152:                                              ; preds = %114, %151, %144, %137, %96
  %153 = phi i32 [ %99, %96 ], [ %118, %137 ], [ %118, %144 ], [ %118, %151 ], [ %118, %114 ]
  %154 = add nuw nsw i64 %97, 1
  %155 = load i64, i64* %0, align 8
  %156 = add i64 %155, 7
  %157 = inttoptr i64 %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = ashr i32 %158, 1
  %160 = sext i32 %159 to i64
  %161 = icmp slt i64 %154, %160
  br i1 %161, label %96, label %86

162:                                              ; preds = %34, %4, %86
  %163 = phi i64 [ %95, %86 ], [ %5, %4 ], [ %5, %34 ]
  ret i64 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15RegExpMatchInfo3NewEPNS0_7IsolateEi(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %4 = tail call i64* @_ZN2v88internal7Factory18NewRegExpMatchInfoEv(%"class.v8::internal::Factory"* %3) #11
  %5 = shl i32 %1, 1
  %6 = add i32 %5, 5
  %7 = load i64, i64* %4, align 8
  %8 = add i64 %7, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = ashr i32 %10, 1
  %12 = icmp slt i32 %11, %6
  br i1 %12, label %13, label %21

13:                                               ; preds = %2
  %14 = sdiv i32 %6, 2
  %15 = icmp sgt i32 %14, 2
  %16 = select i1 %15, i32 %14, i32 2
  %17 = add nsw i32 %16, %6
  %18 = sub i32 %17, %11
  %19 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %3, i64* %4, i32 %18) #11
  %20 = load i64, i64* %19, align 8
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi i64 [ %20, %13 ], [ %7, %2 ]
  %23 = phi i64* [ %19, %13 ], [ %4, %2 ]
  %24 = shl i32 %1, 2
  %25 = add i32 %24, 4
  %26 = add i64 %22, 7
  %27 = inttoptr i64 %26 to i32*
  store atomic volatile i32 %25, i32* %27 monotonic, align 4
  ret i64* %23
}

declare i64* @_ZN2v88internal7Factory18NewRegExpMatchInfoEv(%"class.v8::internal::Factory"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15RegExpMatchInfo15ReserveCapturesEPNS0_7IsolateENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = shl i32 %2, 1
  %5 = add i32 %4, 5
  %6 = load i64, i64* %1, align 8
  %7 = add i64 %6, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = ashr i32 %9, 1
  %11 = icmp slt i32 %10, %5
  br i1 %11, label %12, label %21

12:                                               ; preds = %3
  %13 = sdiv i32 %5, 2
  %14 = icmp sgt i32 %13, 2
  %15 = select i1 %14, i32 %13, i32 2
  %16 = add nsw i32 %15, %5
  %17 = sub i32 %16, %10
  %18 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %19 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %18, i64* %1, i32 %17) #11
  %20 = load i64, i64* %19, align 8
  br label %21

21:                                               ; preds = %3, %12
  %22 = phi i64 [ %20, %12 ], [ %6, %3 ]
  %23 = phi i64* [ %19, %12 ], [ %1, %3 ]
  %24 = shl i32 %2, 2
  %25 = add i32 %24, 4
  %26 = add i64 %22, 7
  %27 = inttoptr i64 %26 to i32*
  store atomic volatile i32 %25, i32* %27 monotonic, align 4
  ret i64* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15DescriptorArray10InitializeENS0_9EnumCacheENS0_10HeapObjectEii(%"class.v8::internal::DescriptorArray"* nocapture readonly, i64, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = add nsw i32 %4, %3
  %7 = trunc i32 %6 to i16
  %8 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 3
  %11 = inttoptr i64 %10 to i16*
  store atomic volatile i16 %7, i16* %11 monotonic, align 2
  %12 = trunc i32 %3 to i16
  %13 = load i64, i64* %8, align 8
  %14 = add i64 %13, 5
  %15 = inttoptr i64 %14 to i16*
  store atomic volatile i16 %12, i16* %15 monotonic, align 2
  %16 = load i64, i64* %8, align 8
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  store atomic volatile i16 0, i16* %18 monotonic, align 2
  %19 = load i64, i64* %8, align 8
  %20 = add i64 %19, 9
  %21 = inttoptr i64 %20 to i16*
  store atomic volatile i16 0, i16* %21 monotonic, align 2
  %22 = load i64, i64* %8, align 8
  %23 = add i64 %22, 11
  %24 = inttoptr i64 %23 to i32*
  %25 = trunc i64 %1 to i32
  store atomic volatile i32 %25, i32* %24 monotonic, align 4
  %26 = load i64, i64* %8, align 8
  %27 = add i64 %26, 15
  %28 = add i64 %26, 3
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = sext i16 %30 to i64
  %32 = mul nsw i64 %31, 3
  %33 = inttoptr i64 %27 to i32*
  %34 = trunc i64 %2 to i32
  %35 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %34, i64 %32, i32* %33) #11, !srcloc !33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15DescriptorArray14ClearEnumCacheEv(%"class.v8::internal::DescriptorArray"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %5 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 1, i64 0
  br label %20

12:                                               ; preds = %6, %1
  %13 = and i64 %3, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %20

20:                                               ; preds = %10, %12
  %21 = phi i64* [ %19, %12 ], [ %11, %10 ]
  %22 = getelementptr inbounds i64, i64* %21, i64 105
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %3, 11
  %25 = inttoptr i64 %24 to i32*
  %26 = trunc i64 %23 to i32
  store atomic volatile i32 %26, i32* %25 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15DescriptorArray7ReplaceENS0_13InternalIndexEPNS0_10DescriptorE(%"class.v8::internal::DescriptorArray"*, i64, %"class.v8::internal::Descriptor"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = shl i64 %1, 32
  %5 = ashr exact i64 %4, 32
  %6 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = mul i64 %5, 51539607552
  %9 = add i64 %8, 68719476736
  %10 = ashr exact i64 %9, 32
  %11 = or i64 %10, 3
  %12 = add i64 %7, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %2, i64 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, -523777
  %18 = lshr i32 %14, 1
  %19 = and i32 %18, 523776
  %20 = or i32 %17, %19
  store i32 %20, i32* %15, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %2, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %2, i64 0, i32 1, i32 1, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i32 %25, 0
  %29 = icmp eq i64* %27, null
  br i1 %28, label %30, label %35

30:                                               ; preds = %3
  br i1 %29, label %31, label %32, !prof !3

31:                                               ; preds = %30
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

32:                                               ; preds = %30
  %33 = load i64, i64* %27, align 8
  %34 = or i64 %33, 2
  br label %39

35:                                               ; preds = %3
  br i1 %29, label %36, label %37, !prof !3

36:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

37:                                               ; preds = %35
  %38 = load i64, i64* %27, align 8
  br label %39

39:                                               ; preds = %32, %37
  %40 = phi i64 [ %34, %32 ], [ %38, %37 ]
  tail call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* %0, i64 %1, i64 %23, i64 %40, i32 %20) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15DescriptorArray27InitializeOrChangeEnumCacheENS0_6HandleIS1_EEPNS0_7IsolateENS2_INS0_10FixedArrayEEES7_(i64*, %"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 105
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %9, %14
  br i1 %15, label %16, label %52

16:                                               ; preds = %4
  %17 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %18 = tail call i64* @_ZN2v88internal7Factory12NewEnumCacheENS0_6HandleINS0_10FixedArrayEEES4_(%"class.v8::internal::Factory"* %17, i64* %2, i64* %3) #11
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* %0, align 8
  %21 = add i64 %20, 11
  %22 = inttoptr i64 %21 to i32*
  %23 = trunc i64 %19 to i32
  store atomic volatile i32 %23, i32* %22 monotonic, align 4
  %24 = and i64 %19, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %16
  %27 = and i64 %20, -262144
  %28 = or i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 262144
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = or i64 %27, 16
  %35 = inttoptr i64 %34 to %"class.v8::internal::Heap"**
  %36 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %35, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %36, i64 %20, i64 %21, i64 %19) #11
  br label %37

37:                                               ; preds = %33, %26, %16
  %38 = and i64 %19, -262144
  %39 = or i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %118, label %44

44:                                               ; preds = %37
  %45 = and i64 %20, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 24
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %118

51:                                               ; preds = %44
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %20, i64 %21, i64 %19) #11
  br label %118

52:                                               ; preds = %4
  %53 = load i64, i64* %2, align 8
  %54 = add i64 %11, 3
  %55 = inttoptr i64 %54 to i32*
  %56 = trunc i64 %53 to i32
  store atomic volatile i32 %56, i32* %55 monotonic, align 4
  %57 = and i64 %53, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %52
  %60 = and i64 %11, -262144
  %61 = or i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 262144
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %59
  %67 = or i64 %60, 16
  %68 = inttoptr i64 %67 to %"class.v8::internal::Heap"**
  %69 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %68, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %69, i64 %11, i64 %54, i64 %53) #11
  br label %70

70:                                               ; preds = %66, %59, %52
  %71 = and i64 %53, -262144
  %72 = or i64 %71, 8
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, 24
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %70
  %78 = and i64 %11, -262144
  %79 = or i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 24
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %77
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %11, i64 %54, i64 %53) #11
  br label %85

85:                                               ; preds = %70, %77, %84
  %86 = load i64, i64* %3, align 8
  %87 = add i64 %11, 7
  %88 = inttoptr i64 %87 to i32*
  %89 = trunc i64 %86 to i32
  store atomic volatile i32 %89, i32* %88 monotonic, align 4
  %90 = and i64 %86, 1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = and i64 %11, -262144
  %94 = or i64 %93, 8
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 262144
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %92
  %100 = or i64 %93, 16
  %101 = inttoptr i64 %100 to %"class.v8::internal::Heap"**
  %102 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %101, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %102, i64 %11, i64 %87, i64 %86) #11
  br label %103

103:                                              ; preds = %99, %92, %85
  %104 = and i64 %86, -262144
  %105 = or i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 24
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %103
  %111 = and i64 %11, -262144
  %112 = or i64 %111, 8
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 24
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %110
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %11, i64 %87, i64 %86) #11
  br label %118

118:                                              ; preds = %117, %110, %103, %51, %44, %37
  ret void
}

declare i64* @_ZN2v88internal7Factory12NewEnumCacheENS0_6HandleINS0_10FixedArrayEEES4_(%"class.v8::internal::Factory"*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i16 @_ZN2v88internal15DescriptorArray31UpdateNumberOfMarkedDescriptorsEjs(%"class.v8::internal::DescriptorArray"* nocapture readonly, i32, i16 signext) local_unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = zext i16 %8 to i32
  %10 = lshr i16 %8, 2
  %11 = xor i32 %9, %1
  %12 = and i32 %11, 3
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i16 %10, i16 0
  %15 = and i32 %1, 3
  %16 = sext i16 %2 to i32
  %17 = shl nsw i32 %16, 2
  %18 = or i32 %17, %15
  %19 = trunc i32 %18 to i16
  %20 = icmp slt i16 %14, %2
  br i1 %20, label %21, label %44

21:                                               ; preds = %3
  %22 = add i64 %5, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = cmpxchg volatile i16* %23, i16 %8, i16 %19 monotonic monotonic
  %25 = extractvalue { i16, i1 } %24, 1
  br i1 %25, label %44, label %26

26:                                               ; preds = %21
  %27 = extractvalue { i16, i1 } %24, 0
  br label %28

28:                                               ; preds = %26, %37
  %29 = phi i16 [ %27, %26 ], [ %42, %37 ]
  %30 = zext i16 %29 to i32
  %31 = lshr i16 %29, 2
  %32 = xor i32 %30, %1
  %33 = and i32 %32, 3
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i16 %31, i16 0
  %36 = icmp slt i16 %35, %2
  br i1 %36, label %37, label %44

37:                                               ; preds = %28
  %38 = load i64, i64* %4, align 8
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = cmpxchg volatile i16* %40, i16 %29, i16 %19 monotonic monotonic
  %42 = extractvalue { i16, i1 } %41, 0
  %43 = extractvalue { i16, i1 } %41, 1
  br i1 %43, label %44, label %28

44:                                               ; preds = %37, %28, %21, %3
  %45 = phi i16 [ %14, %3 ], [ %14, %21 ], [ %35, %28 ], [ %35, %37 ]
  ret i16 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12AccessorPair4CopyEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %4 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %3) #11
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %5, 3
  %14 = inttoptr i64 %13 to i32*
  store atomic volatile i32 %10, i32* %14 monotonic, align 4
  %15 = and i64 %11, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %40, label %17

17:                                               ; preds = %2
  %18 = and i64 %5, -262144
  %19 = or i64 %18, 8
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 262144
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = or i64 %18, 16
  %26 = inttoptr i64 %25 to %"class.v8::internal::Heap"**
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %27, i64 %5, i64 %13, i64 %12) #11
  br label %28

28:                                               ; preds = %24, %17
  %29 = and i64 %12, -262144
  %30 = or i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 24
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = load i64, i64* %20, align 8
  %37 = and i64 %36, 24
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %5, i64 %13, i64 %12) #11
  br label %40

40:                                               ; preds = %2, %28, %35, %39
  %41 = load i64, i64* %4, align 8
  %42 = load i64, i64* %1, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, 7
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = add i64 %41, 7
  %50 = inttoptr i64 %49 to i32*
  store atomic volatile i32 %46, i32* %50 monotonic, align 4
  %51 = and i64 %47, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %76, label %53

53:                                               ; preds = %40
  %54 = and i64 %41, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 262144
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %53
  %61 = or i64 %54, 16
  %62 = inttoptr i64 %61 to %"class.v8::internal::Heap"**
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %62, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %63, i64 %41, i64 %49, i64 %48) #11
  br label %64

64:                                               ; preds = %60, %53
  %65 = and i64 %48, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %64
  %72 = load i64, i64* %56, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %41, i64 %49, i64 %48) #11
  br label %76

76:                                               ; preds = %40, %64, %71, %75
  ret i64* %4
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12AccessorPair12GetComponentEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_IS1_EENS0_17AccessorComponentE(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %6 = load i64, i64* %2, align 8
  %7 = icmp eq i32 %3, 0
  %8 = and i64 %6, -4294967296
  %9 = select i1 %7, i64 3, i64 7
  %10 = add i64 %6, %9
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %8, %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %16 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %17 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %4
  %19 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %16, i64 %14) #11
  %20 = load i64, i64* %19, align 8
  br label %34

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %14, i64* %30, align 8
  br label %34

34:                                               ; preds = %18, %29
  %35 = phi i64 [ %20, %18 ], [ %14, %29 ]
  %36 = phi i64* [ %19, %18 ], [ %30, %29 ]
  %37 = and i64 %35, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %34
  %40 = and i64 %35, -4294967296
  %41 = add i64 %35, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp eq i16 %48, 83
  br i1 %49, label %50, label %60

50:                                               ; preds = %39
  %51 = tail call i64* @_ZN2v88internal10ApiNatives19InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64* %36, i64* null) #11
  %52 = icmp eq i64* %51, null
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %50
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

54:                                               ; preds = %50
  %55 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = load i64, i64* %2, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %5, i64 0, i32 0
  %59 = load i64, i64* %51, align 8
  call void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"* nonnull %58, i32 %3, i64 %59)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  ret i64* %51

60:                                               ; preds = %34, %39
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %35 to i32
  %64 = trunc i64 %62 to i32
  %65 = icmp eq i32 %63, %64
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %67 = select i1 %65, i64* %66, i64* %36
  ret i64* %67
}

declare i64* @_ZN2v88internal10ApiNatives19InstantiateFunctionEPNS0_7IsolateENS0_6HandleINS0_13NativeContextEEENS4_INS0_20FunctionTemplateInfoEEENS0_11MaybeHandleINS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12AccessorPair3setENS0_17AccessorComponentENS0_6ObjectE(%"class.v8::internal::AccessorPair"*, i32, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  br i1 %4, label %7, label %45

7:                                                ; preds = %3
  %8 = add i64 %6, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = trunc i64 %2 to i32
  store atomic volatile i32 %10, i32* %9 monotonic, align 4
  %11 = load i64, i64* %5, align 8
  %12 = add i64 %11, 3
  %13 = and i64 %2, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %83, label %15

15:                                               ; preds = %7
  %16 = and i64 %11, -262144
  %17 = or i64 %16, 8
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 262144
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = or i64 %16, 16
  %24 = inttoptr i64 %23 to %"class.v8::internal::Heap"**
  %25 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %24, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %25, i64 %11, i64 %12, i64 %2) #11
  %26 = load i64, i64* %5, align 8
  %27 = add i64 %26, 3
  br label %28

28:                                               ; preds = %22, %15
  %29 = phi i64 [ %27, %22 ], [ %12, %15 ]
  %30 = phi i64 [ %26, %22 ], [ %11, %15 ]
  %31 = and i64 %2, -262144
  %32 = or i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 24
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %83, label %37

37:                                               ; preds = %28
  %38 = and i64 %30, -262144
  %39 = or i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 24
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %83

44:                                               ; preds = %37
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %30, i64 %29, i64 %2) #11
  br label %83

45:                                               ; preds = %3
  %46 = add i64 %6, 7
  %47 = inttoptr i64 %46 to i32*
  %48 = trunc i64 %2 to i32
  store atomic volatile i32 %48, i32* %47 monotonic, align 4
  %49 = load i64, i64* %5, align 8
  %50 = add i64 %49, 7
  %51 = and i64 %2, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %83, label %53

53:                                               ; preds = %45
  %54 = and i64 %49, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 262144
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %53
  %61 = or i64 %54, 16
  %62 = inttoptr i64 %61 to %"class.v8::internal::Heap"**
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %62, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %63, i64 %49, i64 %50, i64 %2) #11
  %64 = load i64, i64* %5, align 8
  %65 = add i64 %64, 7
  br label %66

66:                                               ; preds = %60, %53
  %67 = phi i64 [ %65, %60 ], [ %50, %53 ]
  %68 = phi i64 [ %64, %60 ], [ %49, %53 ]
  %69 = and i64 %2, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %66
  %76 = and i64 %68, -262144
  %77 = or i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 24
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %75
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %68, i64 %67, i64 %2) #11
  br label %83

83:                                               ; preds = %82, %75, %66, %45, %44, %37, %28, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4Name14ToFunctionNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %112, label %15

15:                                               ; preds = %2
  %16 = add i64 %4, 11
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %5, %19
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %22 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %23 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %15
  %25 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %22, i64 %20) #11
  %26 = load i64, i64* %25, align 8
  br label %40

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %31 = load i64*, i64** %30, align 8
  %32 = icmp eq i64* %29, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %35

35:                                               ; preds = %33, %27
  %36 = phi i64* [ %34, %33 ], [ %29, %27 ]
  %37 = ptrtoint i64* %36 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  store i64* %39, i64** %28, align 8
  store i64 %20, i64* %36, align 8
  br label %40

40:                                               ; preds = %24, %35
  %41 = phi i64 [ %26, %24 ], [ %20, %35 ]
  %42 = phi i64* [ %25, %24 ], [ %36, %35 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %41 to i32
  %46 = trunc i64 %44 to i32
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %48, label %50

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  br label %112

50:                                               ; preds = %40
  %51 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #11
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, %"class.v8::internal::Isolate"* %0) #11
  %52 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 6, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 4
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 4
  br i1 %54, label %61, label %71

61:                                               ; preds = %50
  %62 = sext i32 %59 to i64
  %63 = add i64 %57, 11
  %64 = add i64 %63, %62
  %65 = inttoptr i64 %64 to i8*
  store i8 91, i8* %65, align 1
  %66 = load i32, i32* %58, align 4
  %67 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %82

70:                                               ; preds = %61
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #11
  br label %82

71:                                               ; preds = %50
  %72 = shl nsw i32 %59, 1
  %73 = sext i32 %72 to i64
  %74 = add i64 %57, 11
  %75 = add i64 %74, %73
  %76 = inttoptr i64 %75 to i16*
  store i16 91, i16* %76, align 2
  %77 = load i32, i32* %58, align 4
  %78 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %71
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #11
  br label %82

82:                                               ; preds = %61, %70, %71, %81
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3, i64* %42) #11
  %83 = load i32, i32* %52, align 8
  %84 = icmp eq i32 %83, 0
  %85 = load i64*, i64** %55, align 8
  %86 = load i64, i64* %85, align 8
  %87 = load i32, i32* %58, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %58, align 4
  br i1 %84, label %89, label %99

89:                                               ; preds = %82
  %90 = sext i32 %87 to i64
  %91 = add i64 %86, 11
  %92 = add i64 %91, %90
  %93 = inttoptr i64 %92 to i8*
  store i8 93, i8* %93, align 1
  %94 = load i32, i32* %58, align 4
  %95 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %98, label %110

98:                                               ; preds = %89
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #11
  br label %110

99:                                               ; preds = %82
  %100 = shl nsw i32 %87, 1
  %101 = sext i32 %100 to i64
  %102 = add i64 %86, 11
  %103 = add i64 %102, %101
  %104 = inttoptr i64 %103 to i16*
  store i16 93, i16* %104, align 2
  %105 = load i32, i32* %58, align 4
  %106 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %3, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %105, %107
  br i1 %108, label %109, label %110

109:                                              ; preds = %99
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #11
  br label %110

110:                                              ; preds = %89, %98, %99, %109
  %111 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #11
  br label %112

112:                                              ; preds = %48, %110, %2
  %113 = phi i64* [ %1, %2 ], [ %49, %48 ], [ %111, %110 ]
  ret i64* %113
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal4Name14ToFunctionNameEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %5 = tail call i64* @_ZN2v88internal4Name14ToFunctionNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1)
  %6 = icmp eq i64* %5, null
  br i1 %6, label %41, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #11
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, %"class.v8::internal::Isolate"* %0) #11
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* %2) #11
  %9 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 6, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  br i1 %11, label %18, label %28

18:                                               ; preds = %7
  %19 = sext i32 %16 to i64
  %20 = add i64 %14, 11
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i8*
  store i8 32, i8* %22, align 1
  %23 = load i32, i32* %15, align 4
  %24 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  br label %39

28:                                               ; preds = %7
  %29 = shl nsw i32 %16, 1
  %30 = sext i32 %29 to i64
  %31 = add i64 %14, 11
  %32 = add i64 %31, %30
  %33 = inttoptr i64 %32 to i16*
  store i16 32, i16* %33, align 2
  %34 = load i32, i32* %15, align 4
  %35 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %4, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %28
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  br label %39

39:                                               ; preds = %18, %27, %28, %38
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4, i64* nonnull %5) #11
  %40 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #11
  br label %41

41:                                               ; preds = %3, %39
  %42 = phi i64* [ %40, %39 ], [ null, %3 ]
  ret i64* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11Relocatable31PostGarbageCollectionProcessingEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 91
  %3 = load %"class.v8::internal::Relocatable"*, %"class.v8::internal::Relocatable"** %2, align 8
  %4 = icmp eq %"class.v8::internal::Relocatable"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"class.v8::internal::Relocatable"* [ %12, %5 ], [ %3, %1 ]
  %7 = bitcast %"class.v8::internal::Relocatable"* %6 to void (%"class.v8::internal::Relocatable"*)***
  %8 = load void (%"class.v8::internal::Relocatable"*)**, void (%"class.v8::internal::Relocatable"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::internal::Relocatable"*)*, void (%"class.v8::internal::Relocatable"*)** %8, i64 3
  %10 = load void (%"class.v8::internal::Relocatable"*)*, void (%"class.v8::internal::Relocatable"*)** %9, align 8
  tail call void %10(%"class.v8::internal::Relocatable"* nonnull %6) #11
  %11 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %6, i64 0, i32 2
  %12 = load %"class.v8::internal::Relocatable"*, %"class.v8::internal::Relocatable"** %11, align 8
  %13 = icmp eq %"class.v8::internal::Relocatable"* %12, null
  br i1 %13, label %14, label %5

14:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal11Relocatable21ArchiveSpacePerThreadEv() local_unnamed_addr #7 align 2 {
  ret i32 8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN2v88internal11Relocatable12ArchiveStateEPNS0_7IsolateEPc(%"class.v8::internal::Isolate"* nocapture, i8*) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 91
  %4 = bitcast %"class.v8::internal::Relocatable"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %1 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.v8::internal::Relocatable"* null, %"class.v8::internal::Relocatable"** %3, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  ret i8* %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN2v88internal11Relocatable12RestoreStateEPNS0_7IsolateEPc(%"class.v8::internal::Isolate"* nocapture, i8* readonly) local_unnamed_addr #9 align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 91
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal11Relocatable7IterateEPNS0_11RootVisitorEPc(%"class.v8::internal::RootVisitor"*, i8* readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast i8* %1 to %"class.v8::internal::Relocatable"**
  %4 = load %"class.v8::internal::Relocatable"*, %"class.v8::internal::Relocatable"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Relocatable"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"class.v8::internal::Relocatable"* [ %13, %6 ], [ %4, %2 ]
  %8 = bitcast %"class.v8::internal::Relocatable"* %7 to void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)***
  %9 = load void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)**, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)** %9, i64 2
  %11 = load void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)** %10, align 8
  tail call void %11(%"class.v8::internal::Relocatable"* nonnull %7, %"class.v8::internal::RootVisitor"* %0) #11
  %12 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %7, i64 0, i32 2
  %13 = load %"class.v8::internal::Relocatable"*, %"class.v8::internal::Relocatable"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Relocatable"* %13, null
  br i1 %14, label %15, label %6

15:                                               ; preds = %6, %2
  %16 = getelementptr inbounds i8, i8* %1, i64 8
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11Relocatable7IterateEPNS0_11RootVisitorEPS1_(%"class.v8::internal::RootVisitor"*, %"class.v8::internal::Relocatable"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.v8::internal::Relocatable"* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.v8::internal::Relocatable"* [ %11, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.v8::internal::Relocatable"* %5 to void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)***
  %7 = load void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)**, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)** %7, i64 2
  %9 = load void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)** %8, align 8
  tail call void %9(%"class.v8::internal::Relocatable"* nonnull %5, %"class.v8::internal::RootVisitor"* %0) #11
  %10 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %5, i64 0, i32 2
  %11 = load %"class.v8::internal::Relocatable"*, %"class.v8::internal::Relocatable"** %10, align 8
  %12 = icmp eq %"class.v8::internal::Relocatable"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11Relocatable7IterateEPNS0_7IsolateEPNS0_11RootVisitorE(%"class.v8::internal::Isolate"* nocapture readonly, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 91
  %4 = load %"class.v8::internal::Relocatable"*, %"class.v8::internal::Relocatable"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Relocatable"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"class.v8::internal::Relocatable"* [ %13, %6 ], [ %4, %2 ]
  %8 = bitcast %"class.v8::internal::Relocatable"* %7 to void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)***
  %9 = load void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)**, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)** %9, i64 2
  %11 = load void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)*, void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)** %10, align 8
  tail call void %11(%"class.v8::internal::Relocatable"* nonnull %7, %"class.v8::internal::RootVisitor"* %1) #11
  %12 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %7, i64 0, i32 2
  %13 = load %"class.v8::internal::Relocatable"*, %"class.v8::internal::Relocatable"** %12, align 8
  %14 = icmp eq %"class.v8::internal::Relocatable"* %13, null
  br i1 %14, label %15, label %6

15:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7JSArray33ArrayJoinConcatToSequentialStringEPNS0_7IsolateEmlmm(%"class.v8::internal::Isolate"*, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %7 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %6, %"class.v8::internal::Isolate"* %0) #11
  %8 = and i64 %4, -4294967296
  %9 = add i64 %4, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = and i16 %16, 15
  %18 = icmp eq i16 %17, 8
  %19 = trunc i64 %2 to i32
  %20 = add i64 %4, 11
  br i1 %18, label %21, label %188

21:                                               ; preds = %5
  %22 = inttoptr i64 %20 to i8*
  %23 = icmp sgt i32 %19, 0
  br i1 %23, label %25, label %24, !prof !5

24:                                               ; preds = %21
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.437, i64 0, i64 0)) #16
  unreachable

25:                                               ; preds = %21
  %26 = add i64 %1, 3
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = ashr i32 %28, 1
  %30 = icmp slt i32 %29, %19
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %25
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.438, i64 0, i64 0)) #16
  unreachable

32:                                               ; preds = %25
  %33 = add i64 %3, 7
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %63

37:                                               ; preds = %32
  %38 = and i64 %3, -4294967296
  %39 = add i64 %3, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 acquire, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = and i16 %46, 15
  %48 = icmp eq i16 %47, 8
  br i1 %48, label %49, label %69

49:                                               ; preds = %37
  %50 = load atomic i32, i32* %40 acquire, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %38, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = and i16 %55, 15
  %57 = icmp eq i16 %56, 8
  br i1 %57, label %59, label %58, !prof !5

58:                                               ; preds = %49
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.439, i64 0, i64 0)) #16
  unreachable

59:                                               ; preds = %49
  %60 = load i32, i32* %34, align 4
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %78, label %62, !prof !5

62:                                               ; preds = %59
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.440, i64 0, i64 0)) #16
  unreachable

63:                                               ; preds = %32
  %64 = and i64 %1, -4294967296
  %65 = add i64 %1, 7
  %66 = icmp sgt i32 %35, 0
  %67 = sext i32 %35 to i64
  %68 = and i64 %2, 4294967295
  br i1 %66, label %73, label %162

69:                                               ; preds = %37
  %70 = and i64 %1, -4294967296
  %71 = add i64 %1, 7
  %72 = and i64 %2, 4294967295
  br label %73

73:                                               ; preds = %63, %69
  %74 = phi i64 [ %72, %69 ], [ %68, %63 ]
  %75 = phi i64 [ %70, %69 ], [ %64, %63 ]
  %76 = phi i64 [ %71, %69 ], [ %65, %63 ]
  %77 = phi i64 [ 1, %69 ], [ %67, %63 ]
  br label %122

78:                                               ; preds = %59
  %79 = add i64 %3, 11
  %80 = inttoptr i64 %79 to i8*
  %81 = load i8, i8* %80, align 1
  %82 = and i64 %1, -4294967296
  %83 = add i64 %1, 7
  %84 = and i64 %2, 4294967295
  br label %85

85:                                               ; preds = %78, %117
  %86 = phi i64 [ %120, %117 ], [ 0, %78 ]
  %87 = phi i8* [ %119, %117 ], [ %22, %78 ]
  %88 = phi i32 [ %118, %117 ], [ 0, %78 ]
  %89 = trunc i64 %86 to i32
  %90 = shl i32 %89, 2
  %91 = sext i32 %90 to i64
  %92 = add i64 %83, %91
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %82, %95
  %97 = and i64 %95, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %103, !prof !3

99:                                               ; preds = %85
  %100 = icmp slt i32 %94, 0
  br i1 %100, label %177, label %101, !prof !31

101:                                              ; preds = %99
  %102 = lshr i32 %94, 1
  br label %103

103:                                              ; preds = %101, %85
  %104 = phi i32 [ %88, %85 ], [ %102, %101 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  %107 = zext i32 %104 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %87, i8 %81, i64 %107, i1 false) #11
  %108 = getelementptr inbounds i8, i8* %87, i64 %107
  br label %109

109:                                              ; preds = %106, %103
  %110 = phi i8* [ %108, %106 ], [ %87, %103 ]
  br i1 %98, label %117, label %111

111:                                              ; preds = %109
  %112 = add i64 %96, 7
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %96, i8* %110, i32 0, i32 %114) #11
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %110, i64 %115
  br label %117

117:                                              ; preds = %111, %109
  %118 = phi i32 [ 1, %111 ], [ 0, %109 ]
  %119 = phi i8* [ %116, %111 ], [ %110, %109 ]
  %120 = add nuw nsw i64 %86, 1
  %121 = icmp eq i64 %120, %84
  br i1 %121, label %274, label %85

122:                                              ; preds = %73, %157
  %123 = phi i64 [ %160, %157 ], [ 0, %73 ]
  %124 = phi i8* [ %159, %157 ], [ %22, %73 ]
  %125 = phi i32 [ %158, %157 ], [ 0, %73 ]
  %126 = trunc i64 %123 to i32
  %127 = shl i32 %126, 2
  %128 = sext i32 %127 to i64
  %129 = add i64 %76, %128
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %75, %132
  %134 = and i64 %132, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %140, !prof !3

136:                                              ; preds = %122
  %137 = icmp slt i32 %131, 0
  br i1 %137, label %177, label %138, !prof !31

138:                                              ; preds = %136
  %139 = lshr i32 %131, 1
  br label %140

140:                                              ; preds = %138, %122
  %141 = phi i32 [ %125, %122 ], [ %139, %138 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %149, label %143

143:                                              ; preds = %140, %143
  %144 = phi i8* [ %146, %143 ], [ %124, %140 ]
  %145 = phi i32 [ %147, %143 ], [ 0, %140 ]
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %3, i8* %144, i32 0, i32 %35) #11
  %146 = getelementptr inbounds i8, i8* %144, i64 %77
  %147 = add nuw nsw i32 %145, 1
  %148 = icmp eq i32 %147, %141
  br i1 %148, label %149, label %143

149:                                              ; preds = %143, %140
  %150 = phi i8* [ %124, %140 ], [ %146, %143 ]
  br i1 %135, label %157, label %151

151:                                              ; preds = %149
  %152 = add i64 %133, 7
  %153 = inttoptr i64 %152 to i32*
  %154 = load i32, i32* %153, align 4
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %133, i8* %150, i32 0, i32 %154) #11
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %150, i64 %155
  br label %157

157:                                              ; preds = %151, %149
  %158 = phi i32 [ 1, %151 ], [ 0, %149 ]
  %159 = phi i8* [ %156, %151 ], [ %150, %149 ]
  %160 = add nuw nsw i64 %123, 1
  %161 = icmp eq i64 %160, %74
  br i1 %161, label %274, label %122

162:                                              ; preds = %63, %184
  %163 = phi i64 [ %186, %184 ], [ 0, %63 ]
  %164 = phi i8* [ %185, %184 ], [ %22, %63 ]
  %165 = trunc i64 %163 to i32
  %166 = shl i32 %165, 2
  %167 = sext i32 %166 to i64
  %168 = add i64 %65, %167
  %169 = inttoptr i64 %168 to i32*
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %64, %171
  %173 = and i64 %171, 1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %178, !prof !3

175:                                              ; preds = %162
  %176 = icmp slt i32 %170, 0
  br i1 %176, label %177, label %184, !prof !31

177:                                              ; preds = %175, %136, %99
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.441, i64 0, i64 0)) #16
  unreachable

178:                                              ; preds = %162
  %179 = add i64 %172, 7
  %180 = inttoptr i64 %179 to i32*
  %181 = load i32, i32* %180, align 4
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64 %172, i8* %164, i32 0, i32 %181) #11
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8, i8* %164, i64 %182
  br label %184

184:                                              ; preds = %178, %175
  %185 = phi i8* [ %183, %178 ], [ %164, %175 ]
  %186 = add nuw nsw i64 %163, 1
  %187 = icmp eq i64 %186, %68
  br i1 %187, label %274, label %162

188:                                              ; preds = %5
  %189 = inttoptr i64 %20 to i16*
  %190 = icmp sgt i32 %19, 0
  br i1 %190, label %192, label %191, !prof !5

191:                                              ; preds = %188
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.437, i64 0, i64 0)) #16
  unreachable

192:                                              ; preds = %188
  %193 = add i64 %1, 3
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = ashr i32 %195, 1
  %197 = icmp slt i32 %196, %19
  br i1 %197, label %198, label %199, !prof !3

198:                                              ; preds = %192
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.438, i64 0, i64 0)) #16
  unreachable

199:                                              ; preds = %192
  %200 = add i64 %3, 7
  %201 = inttoptr i64 %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = and i64 %1, -4294967296
  %204 = add i64 %1, 7
  %205 = icmp sgt i32 %202, 0
  %206 = sext i32 %202 to i64
  %207 = and i64 %2, 4294967295
  br i1 %205, label %208, label %248

208:                                              ; preds = %199, %237
  %209 = phi i64 [ %240, %237 ], [ 0, %199 ]
  %210 = phi i16* [ %239, %237 ], [ %189, %199 ]
  %211 = phi i32 [ %238, %237 ], [ 0, %199 ]
  %212 = trunc i64 %209 to i32
  %213 = shl i32 %212, 2
  %214 = sext i32 %213 to i64
  %215 = add i64 %204, %214
  %216 = inttoptr i64 %215 to i32*
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = zext i32 %217 to i64
  %219 = or i64 %203, %218
  %220 = and i64 %218, 1
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %226, !prof !3

222:                                              ; preds = %208
  %223 = icmp slt i32 %217, 0
  br i1 %223, label %263, label %224, !prof !31

224:                                              ; preds = %222
  %225 = lshr i32 %217, 1
  br label %226

226:                                              ; preds = %224, %208
  %227 = phi i32 [ %211, %208 ], [ %225, %224 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %242

229:                                              ; preds = %242, %226
  %230 = phi i16* [ %210, %226 ], [ %245, %242 ]
  br i1 %221, label %237, label %231

231:                                              ; preds = %229
  %232 = add i64 %219, 7
  %233 = inttoptr i64 %232 to i32*
  %234 = load i32, i32* %233, align 4
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %219, i16* %230, i32 0, i32 %234) #11
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i16, i16* %230, i64 %235
  br label %237

237:                                              ; preds = %231, %229
  %238 = phi i32 [ 1, %231 ], [ 0, %229 ]
  %239 = phi i16* [ %236, %231 ], [ %230, %229 ]
  %240 = add nuw nsw i64 %209, 1
  %241 = icmp eq i64 %240, %207
  br i1 %241, label %274, label %208

242:                                              ; preds = %226, %242
  %243 = phi i16* [ %245, %242 ], [ %210, %226 ]
  %244 = phi i32 [ %246, %242 ], [ 0, %226 ]
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %3, i16* %243, i32 0, i32 %202) #11
  %245 = getelementptr inbounds i16, i16* %243, i64 %206
  %246 = add nuw nsw i32 %244, 1
  %247 = icmp eq i32 %246, %227
  br i1 %247, label %229, label %242

248:                                              ; preds = %199, %270
  %249 = phi i64 [ %272, %270 ], [ 0, %199 ]
  %250 = phi i16* [ %271, %270 ], [ %189, %199 ]
  %251 = trunc i64 %249 to i32
  %252 = shl i32 %251, 2
  %253 = sext i32 %252 to i64
  %254 = add i64 %204, %253
  %255 = inttoptr i64 %254 to i32*
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = zext i32 %256 to i64
  %258 = or i64 %203, %257
  %259 = and i64 %257, 1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %264, !prof !3

261:                                              ; preds = %248
  %262 = icmp slt i32 %256, 0
  br i1 %262, label %263, label %270, !prof !31

263:                                              ; preds = %261, %222
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.441, i64 0, i64 0)) #16
  unreachable

264:                                              ; preds = %248
  %265 = add i64 %258, 7
  %266 = inttoptr i64 %265 to i32*
  %267 = load i32, i32* %266, align 4
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64 %258, i16* %250, i32 0, i32 %267) #11
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i16, i16* %250, i64 %268
  br label %270

270:                                              ; preds = %264, %261
  %271 = phi i16* [ %269, %264 ], [ %250, %261 ]
  %272 = add nuw nsw i64 %249, 1
  %273 = icmp eq i64 %272, %207
  br i1 %273, label %274, label %248

274:                                              ; preds = %270, %237, %184, %157, %117
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i64 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32, i32) local_unnamed_addr #7 align 2 {
  %3 = shl i32 %0, 2
  %4 = shl i32 %1, 26
  %5 = or i32 %4, %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal23CacheInitialJSArrayMapsEPNS0_7IsolateENS0_6HandleINS0_7ContextEEENS3_INS0_3MapEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %5 = load i64, i64* %2, align 8
  %6 = add i64 %5, 10
  %7 = inttoptr i64 %6 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = lshr i8 %8, 2
  %10 = load i64, i64* %1, align 8
  %11 = add nuw i8 %9, 106
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 2
  %14 = add i64 %10, 7
  %15 = add i64 %14, %13
  %16 = inttoptr i64 %15 to i32*
  %17 = trunc i64 %5 to i32
  store atomic volatile i32 %17, i32* %16 release, align 4
  %18 = and i64 %5, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %43, label %20

20:                                               ; preds = %3
  %21 = and i64 %10, -262144
  %22 = or i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 262144
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = or i64 %21, 16
  %29 = inttoptr i64 %28 to %"class.v8::internal::Heap"**
  %30 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %29, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %30, i64 %10, i64 %15, i64 %5) #11
  br label %31

31:                                               ; preds = %27, %20
  %32 = and i64 %5, -262144
  %33 = or i64 %32, 8
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = load i64, i64* %23, align 8
  %40 = and i64 %39, 24
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %10, i64 %15, i64 %5) #11
  br label %43

43:                                               ; preds = %3, %31, %38, %42
  %44 = tail call i32 @_ZN2v88internal36GetSequenceIndexFromFastElementsKindENS0_12ElementsKindE(i8 zeroext %9) #11
  %45 = add nsw i32 %44, 1
  %46 = icmp slt i32 %45, 6
  br i1 %46, label %47, label %60

47:                                               ; preds = %43
  %48 = bitcast %"class.v8::internal::TransitionsAccessor"* %4 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 1, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 3, i32 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 5
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %55 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 4
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 481
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %61

60:                                               ; preds = %159, %43
  ret i64* %2

61:                                               ; preds = %159, %47
  %62 = phi i32 [ %45, %47 ], [ %160, %159 ]
  %63 = phi i64* [ %2, %47 ], [ %125, %159 ]
  %64 = call zeroext i8 @_ZN2v88internal36GetFastElementsKindFromSequenceIndexEi(i32 %62) #11
  %65 = load i64, i64* %63, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #11
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %49, align 8
  store i64* null, i64** %50, align 8
  store i64 %65, i64* %51, align 8
  store i64 0, i64* %52, align 8
  store i8 0, i8* %53, align 4
  %66 = load i64, i64* %54, align 8
  %67 = add i64 %65, 35
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 acquire, align 4
  %70 = and i64 %66, 4294967295
  %71 = icmp eq i64 %70, 0
  call void @llvm.assume(i1 %71) #11
  %72 = zext i32 %69 to i64
  %73 = or i64 %66, %72
  store i64 %73, i64* %52, align 8
  %74 = and i64 %72, 1
  %75 = icmp eq i64 %74, 0
  %76 = icmp eq i32 %69, 3
  %77 = or i1 %76, %75
  br i1 %77, label %100, label %78

78:                                               ; preds = %61
  %79 = and i64 %72, 3
  switch i64 %79, label %99 [
    i64 3, label %100
    i64 1, label %80
  ]

80:                                               ; preds = %78
  %81 = add i64 %73, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %66, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp eq i16 %88, 160
  br i1 %89, label %100, label %90

90:                                               ; preds = %80
  %91 = load atomic i32, i32* %82 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %66, %92
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = icmp eq i16 %96, 110
  %98 = select i1 %97, i32 0, i32 2
  br label %100

99:                                               ; preds = %78
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

100:                                              ; preds = %90, %80, %78, %61
  %101 = phi i32 [ 1, %61 ], [ 3, %78 ], [ 4, %80 ], [ %98, %90 ]
  store i32 %101, i32* %55, align 8
  %102 = load i64, i64* %56, align 8
  %103 = call i64 @_ZN2v88internal19TransitionsAccessor13SearchSpecialENS0_6SymbolE(%"class.v8::internal::TransitionsAccessor"* nonnull %4, i64 %102) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #11
  %104 = trunc i64 %103 to i32
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %122, label %106

106:                                              ; preds = %100
  %107 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %108 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %106
  %110 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %107, i64 %103) #11
  br label %124

111:                                              ; preds = %106
  %112 = load i64*, i64** %58, align 8
  %113 = load i64*, i64** %59, align 8
  %114 = icmp eq i64* %112, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %117

117:                                              ; preds = %115, %111
  %118 = phi i64* [ %116, %115 ], [ %112, %111 ]
  %119 = ptrtoint i64* %118 to i64
  %120 = add i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  store i64* %121, i64** %58, align 8
  store i64 %103, i64* %118, align 8
  br label %124

122:                                              ; preds = %100
  %123 = call i64* @_ZN2v88internal3Map18CopyAsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_14TransitionFlagE(%"class.v8::internal::Isolate"* %0, i64* %63, i8 zeroext %64, i32 0) #11
  br label %124

124:                                              ; preds = %117, %109, %122
  %125 = phi i64* [ %123, %122 ], [ %110, %109 ], [ %118, %117 ]
  %126 = load i64, i64* %1, align 8
  %127 = zext i8 %64 to i64
  %128 = load i64, i64* %125, align 8
  %129 = shl nuw nsw i64 %127, 2
  %130 = add nuw nsw i64 %129, 431
  %131 = add i64 %130, %126
  %132 = inttoptr i64 %131 to i32*
  %133 = trunc i64 %128 to i32
  store atomic volatile i32 %133, i32* %132 release, align 4
  %134 = and i64 %128, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %159, label %136

136:                                              ; preds = %124
  %137 = and i64 %126, -262144
  %138 = or i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 262144
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %136
  %144 = or i64 %137, 16
  %145 = inttoptr i64 %144 to %"class.v8::internal::Heap"**
  %146 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %145, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %146, i64 %126, i64 %131, i64 %128) #11
  br label %147

147:                                              ; preds = %143, %136
  %148 = and i64 %128, -262144
  %149 = or i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 24
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %147
  %155 = load i64, i64* %139, align 8
  %156 = and i64 %155, 24
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %154
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %126, i64 %131, i64 %128) #11
  br label %159

159:                                              ; preds = %124, %147, %154, %158
  %160 = add i32 %62, 1
  %161 = icmp eq i32 %160, 6
  br i1 %161, label %60, label %61
}

declare i32 @_ZN2v88internal36GetSequenceIndexFromFastElementsKindENS0_12ElementsKindE(i8 zeroext) local_unnamed_addr #1

declare zeroext i8 @_ZN2v88internal36GetFastElementsKindFromSequenceIndexEi(i32) local_unnamed_addr #1

declare i64* @_ZN2v88internal3Map18CopyAsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_14TransitionFlagE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7Oddball10InitializeEPNS0_7IsolateENS0_6HandleIS1_EEPKcNS4_INS0_6ObjectEEES7_h(%"class.v8::internal::Isolate"*, i64*, i8*, i64*, i8*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::Vector.1632", align 8
  %8 = alloca %"class.v8::internal::Vector.1632", align 8
  %9 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %10 = bitcast %"class.v8::internal::Vector.1632"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = tail call i64 @strlen(i8* %2) #18
  %12 = getelementptr inbounds %"class.v8::internal::Vector.1632", %"class.v8::internal::Vector.1632"* %8, i64 0, i32 0
  store i8* %2, i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Vector.1632", %"class.v8::internal::Vector.1632"* %8, i64 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %9, %"class.v8::internal::Vector.1632"* nonnull dereferenceable(16) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  %15 = bitcast %"class.v8::internal::Vector.1632"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = call i64 @strlen(i8* %4) #18
  %17 = getelementptr inbounds %"class.v8::internal::Vector.1632", %"class.v8::internal::Vector.1632"* %7, i64 0, i32 0
  store i8* %4, i8** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Vector.1632", %"class.v8::internal::Vector.1632"* %7, i64 0, i32 1
  store i64 %16, i64* %18, align 8
  %19 = call i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"* %9, %"class.v8::internal::Vector.1632"* nonnull dereferenceable(16) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  %20 = load i64, i64* %3, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %41, label %23

23:                                               ; preds = %6
  %24 = and i64 %20, -4294967296
  %25 = add i64 %20, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %24, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 66
  %34 = load i64, i64* %1, align 8
  %35 = add i64 %20, 3
  br i1 %33, label %36, label %46

36:                                               ; preds = %23
  %37 = inttoptr i64 %35 to i64*
  %38 = load i64, i64* %37, align 1
  %39 = add i64 %34, 3
  %40 = inttoptr i64 %39 to i64*
  store i64 %38, i64* %40, align 1
  br label %54

41:                                               ; preds = %6
  %42 = load i64, i64* %1, align 8
  %43 = trunc i64 %20 to i32
  %44 = ashr i32 %43, 1
  %45 = sitofp i32 %44 to double
  br label %49

46:                                               ; preds = %23
  %47 = inttoptr i64 %35 to double*
  %48 = load double, double* %47, align 1
  br label %49

49:                                               ; preds = %41, %46
  %50 = phi i64 [ %42, %41 ], [ %34, %46 ]
  %51 = phi double [ %45, %41 ], [ %48, %46 ]
  %52 = add i64 %50, 3
  %53 = inttoptr i64 %52 to double*
  store double %51, double* %53, align 1
  br label %54

54:                                               ; preds = %49, %36
  %55 = load i64, i64* %1, align 8
  %56 = load i64, i64* %3, align 8
  %57 = add i64 %55, 15
  %58 = inttoptr i64 %57 to i32*
  %59 = trunc i64 %56 to i32
  store atomic volatile i32 %59, i32* %58 monotonic, align 4
  %60 = and i64 %56, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %85, label %62

62:                                               ; preds = %54
  %63 = and i64 %55, -262144
  %64 = or i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 262144
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  %70 = or i64 %63, 16
  %71 = inttoptr i64 %70 to %"class.v8::internal::Heap"**
  %72 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %71, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %72, i64 %55, i64 %57, i64 %56) #11
  br label %73

73:                                               ; preds = %69, %62
  %74 = and i64 %56, -262144
  %75 = or i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 24
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = load i64, i64* %65, align 8
  %82 = and i64 %81, 24
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %55, i64 %57, i64 %56) #11
  br label %85

85:                                               ; preds = %54, %73, %80, %84
  %86 = load i64, i64* %1, align 8
  %87 = load i64, i64* %14, align 8
  %88 = add i64 %86, 11
  %89 = inttoptr i64 %88 to i32*
  %90 = trunc i64 %87 to i32
  store atomic volatile i32 %90, i32* %89 monotonic, align 4
  %91 = and i64 %87, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %104, label %93

93:                                               ; preds = %85
  %94 = and i64 %86, -262144
  %95 = or i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %97, 262144
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %93
  %101 = or i64 %94, 16
  %102 = inttoptr i64 %101 to %"class.v8::internal::Heap"**
  %103 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %102, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %103, i64 %86, i64 %88, i64 %87) #11
  br label %104

104:                                              ; preds = %100, %93, %85
  %105 = and i64 %87, -262144
  %106 = or i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 24
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %104
  %112 = and i64 %86, -262144
  %113 = or i64 %112, 8
  %114 = inttoptr i64 %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 24
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %86, i64 %88, i64 %87) #11
  br label %119

119:                                              ; preds = %104, %111, %118
  %120 = load i64, i64* %1, align 8
  %121 = load i64, i64* %19, align 8
  %122 = add i64 %120, 19
  %123 = inttoptr i64 %122 to i32*
  %124 = trunc i64 %121 to i32
  store atomic volatile i32 %124, i32* %123 monotonic, align 4
  %125 = and i64 %121, 1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %119
  %128 = and i64 %120, -262144
  %129 = or i64 %128, 8
  %130 = inttoptr i64 %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 262144
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %127
  %135 = or i64 %128, 16
  %136 = inttoptr i64 %135 to %"class.v8::internal::Heap"**
  %137 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %136, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %137, i64 %120, i64 %122, i64 %121) #11
  br label %138

138:                                              ; preds = %134, %127, %119
  %139 = and i64 %121, -262144
  %140 = or i64 %139, 8
  %141 = inttoptr i64 %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = and i64 %142, 24
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %138
  %146 = and i64 %120, -262144
  %147 = or i64 %146, 8
  %148 = inttoptr i64 %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = and i64 %149, 24
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %145
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %120, i64 %122, i64 %121) #11
  br label %153

153:                                              ; preds = %138, %145, %152
  %154 = load i64, i64* %1, align 8
  %155 = zext i8 %5 to i32
  %156 = shl nuw nsw i32 %155, 1
  %157 = add i64 %154, 23
  %158 = inttoptr i64 %157 to i32*
  store atomic volatile i32 %156, i32* %158 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal6Script15GetEvalPositionEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::AbstractCode", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = add i64 %5, 39
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 1
  %10 = icmp slt i32 %8, 0
  br i1 %10, label %11, label %106

11:                                               ; preds = %2
  %12 = and i64 %5, -4294967296
  %13 = add i64 %5, 35
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %102, label %19

19:                                               ; preds = %11
  %20 = or i64 %12, %16
  %21 = add i64 %20, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %12, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp eq i16 %28, 179
  br i1 %29, label %30, label %102

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %32 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %31, align 8
  %33 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %32, i64 %20) #11
  br label %49

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %38, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %44

44:                                               ; preds = %42, %36
  %45 = phi i64* [ %43, %42 ], [ %38, %36 ]
  %46 = ptrtoint i64* %45 to i64
  %47 = add i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  store i64* %48, i64** %37, align 8
  store i64 %20, i64* %45, align 8
  br label %49

49:                                               ; preds = %34, %44
  %50 = phi i64* [ %35, %34 ], [ %45, %44 ]
  tail call void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %50) #11
  %51 = bitcast %"class.v8::internal::AbstractCode"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %53 = load i64, i64* %50, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %4, i64 0, i32 0
  %56 = and i64 %53, -4294967296
  %57 = add i64 %53, 3
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 acquire, align 4
  %60 = zext i32 %59 to i64
  %61 = and i64 %60, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %92, label %63

63:                                               ; preds = %49
  %64 = or i64 %56, %60
  %65 = add i64 %64, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %56, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = icmp eq i16 %72, 133
  br i1 %73, label %90, label %74

74:                                               ; preds = %63
  %75 = load atomic i32, i32* %66 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %56, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = icmp eq i16 %80, 105
  br i1 %81, label %90, label %82

82:                                               ; preds = %74
  %83 = load atomic i32, i32* %66 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %56, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp eq i16 %88, 94
  br i1 %89, label %90, label %92

90:                                               ; preds = %82, %74, %63
  %91 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %55, %"class.v8::internal::Isolate"* %0) #11
  br label %94

92:                                               ; preds = %82, %49
  %93 = call i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %55) #11
  br label %94

94:                                               ; preds = %90, %92
  %95 = phi i64 [ %91, %90 ], [ %93, %92 ]
  %96 = getelementptr inbounds %"class.v8::internal::AbstractCode", %"class.v8::internal::AbstractCode"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %95, i64* %96, align 8
  %97 = sub nsw i32 0, %9
  %98 = call i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"* nonnull %3, i32 %97) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %99 = load i64, i64* %1, align 8
  %100 = add i64 %99, 39
  %101 = inttoptr i64 %100 to i32*
  br label %102

102:                                              ; preds = %11, %19, %94
  %103 = phi i32* [ %7, %11 ], [ %7, %19 ], [ %101, %94 ]
  %104 = phi i32 [ 0, %11 ], [ 0, %19 ], [ %98, %94 ]
  %105 = shl i32 %104, 1
  store atomic volatile i32 %105, i32* %103 monotonic, align 4
  br label %106

106:                                              ; preds = %102, %2
  %107 = phi i32 [ %104, %102 ], [ %9, %2 ]
  ret i32 %107
}

declare void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Script15GetPositionInfoENS0_6HandleIS1_EEiPNS1_12PositionInfoENS1_10OffsetFlagE(i64*, i32, %"struct.v8::internal::Script::PositionInfo"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", align 8
  %6 = load i64, i64* %0, align 8
  %7 = add i64 %6, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 6
  br i1 %11, label %20, label %12

12:                                               ; preds = %4
  %13 = and i64 %6, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  tail call void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %18, i64* %0)
  %19 = load i64, i64* %0, align 8
  br label %20

20:                                               ; preds = %4, %12
  %21 = phi i64 [ %6, %4 ], [ %19, %12 ]
  %22 = bitcast %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %5, i64 0, i32 0
  %25 = call zeroext i1 @_ZNK2v88internal6Script15GetPositionInfoEiPNS1_12PositionInfoENS1_10OffsetFlagE(%"class.v8::internal::Script"* nonnull %24, i32 %1, %"struct.v8::internal::Script::PositionInfo"* %2, i32 %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal6Script15GetPositionInfoEiPNS1_12PositionInfoENS1_10OffsetFlagE(%"class.v8::internal::Script"* nocapture readonly, i32, %"struct.v8::internal::Script::PositionInfo"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::String::FlatContent", align 8
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::StringShape", align 4
  %10 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %11 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 23
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, -2
  %18 = icmp eq i32 %17, 6
  %19 = and i64 %13, -4294967296
  br i1 %18, label %20, label %58

20:                                               ; preds = %4
  %21 = add i64 %13, 39
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %19, %24
  %26 = add i64 %25, 3
  %27 = inttoptr i64 %26 to %"struct.v8::internal::ManagedPtrDestructor"**
  %28 = load %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"** %27, align 1
  %29 = getelementptr inbounds %"struct.v8::internal::ManagedPtrDestructor", %"struct.v8::internal::ManagedPtrDestructor"* %28, i64 0, i32 3
  %30 = bitcast i8** %29 to %"class.std::__1::shared_ptr.1642"**
  %31 = load %"class.std::__1::shared_ptr.1642"*, %"class.std::__1::shared_ptr.1642"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::shared_ptr.1642", %"class.std::__1::shared_ptr.1642"* %31, i64 0, i32 0
  %33 = load %"class.v8::internal::wasm::NativeModule"*, %"class.v8::internal::wasm::NativeModule"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::wasm::NativeModule", %"class.v8::internal::wasm::NativeModule"* %33, i64 0, i32 4, i32 0
  %35 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %34, align 8
  %36 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %35, i64 0, i32 23
  %37 = getelementptr inbounds %"struct.v8::internal::wasm::WasmModule", %"struct.v8::internal::wasm::WasmModule"* %35, i64 0, i32 23, i32 0, i32 1
  %38 = bitcast %"struct.v8::internal::wasm::WasmFunction"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.1355"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %39, %41
  br i1 %42, label %343, label %43

43:                                               ; preds = %20
  %44 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 1
  store i32 %1, i32* %45, align 4
  %46 = getelementptr inbounds %"class.std::__1::vector.1355", %"class.std::__1::vector.1355"* %36, i64 0, i32 0, i32 0
  %47 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %46, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %47, i64 0, i32 3, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 2
  store i32 %49, i32* %50, align 4
  %51 = load %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"** %37, align 8
  %52 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %51, i64 -1, i32 3, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.v8::internal::wasm::WasmFunction", %"struct.v8::internal::wasm::WasmFunction"* %51, i64 -1, i32 3, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, %53
  %57 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 3
  store i32 %56, i32* %57, align 4
  br label %343

58:                                               ; preds = %4
  %59 = add i64 %13, 27
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %19, %62
  %64 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %65 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %64, i64 0, i32 0, i32 1
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %64, i64 0, i32 1, i64 0
  br label %80

72:                                               ; preds = %66, %58
  %73 = and i64 %63, -262144
  %74 = or i64 %73, 16
  %75 = inttoptr i64 %74 to i64*
  %76 = load i64, i64* %75, align 16
  %77 = add i64 %76, -41416
  %78 = inttoptr i64 %77 to %"class.v8::internal::Isolate"*
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %78, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %80

80:                                               ; preds = %70, %72
  %81 = phi i64* [ %79, %72 ], [ %71, %70 ]
  %82 = getelementptr inbounds i64, i64* %81, i64 4
  %83 = load i64, i64* %82, align 8
  %84 = trunc i64 %83 to i32
  %85 = icmp eq i32 %61, %84
  br i1 %85, label %86, label %201

86:                                               ; preds = %80
  %87 = add i64 %13, 3
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %19, %90
  %92 = add i64 %91, -1
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %19, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = icmp ult i16 %99, 64
  br i1 %100, label %101, label %343

101:                                              ; preds = %86
  %102 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  %103 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %91, i64* %103, align 8
  %104 = bitcast %"class.v8::internal::String::FlatContent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #11
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %6, %"class.v8::internal::String"* nonnull %5, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %10) #11
  %105 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %149

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %110, i64 %113
  %115 = icmp sgt i32 %112, 0
  br i1 %115, label %116, label %193

116:                                              ; preds = %108
  %117 = icmp sgt i32 %1, 0
  %118 = select i1 %117, i32 %1, i32 0
  %119 = zext i32 %118 to i64
  %120 = ptrtoint i8* %110 to i64
  br label %121

121:                                              ; preds = %136, %116
  %122 = phi i8* [ %110, %116 ], [ %138, %136 ]
  %123 = phi i32 [ 0, %116 ], [ %137, %136 ]
  br label %124

124:                                              ; preds = %128, %121
  %125 = phi i8* [ %129, %128 ], [ %122, %121 ]
  %126 = load i8, i8* %125, align 1
  %127 = icmp eq i8 %126, 10
  br i1 %127, label %131, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds i8, i8* %125, i64 1
  %130 = icmp eq i8* %129, %114
  br i1 %130, label %131, label %124

131:                                              ; preds = %128, %124
  %132 = phi i8* [ %114, %128 ], [ %125, %124 ]
  %133 = ptrtoint i8* %132 to i64
  %134 = sub i64 %133, %120
  %135 = icmp slt i64 %134, %119
  br i1 %135, label %136, label %140

136:                                              ; preds = %131
  %137 = add nuw nsw i32 %123, 1
  %138 = getelementptr inbounds i8, i8* %132, i64 1
  %139 = icmp ult i8* %138, %114
  br i1 %139, label %121, label %193

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  store i32 %123, i32* %141, align 4
  %142 = getelementptr inbounds i8, i8* %110, i64 %119
  %143 = ptrtoint i8* %142 to i64
  %144 = ptrtoint i8* %122 to i64
  %145 = sub i64 %143, %144
  %146 = trunc i64 %145 to i32
  %147 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 1
  store i32 %146, i32* %147, align 4
  %148 = sub i64 %144, %120
  br label %194

149:                                              ; preds = %101
  %150 = bitcast %"class.v8::internal::String::FlatContent"* %6 to i16**
  %151 = load i16*, i16** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i16, i16* %151, i64 %154
  %156 = icmp sgt i32 %153, 0
  br i1 %156, label %157, label %193

157:                                              ; preds = %149
  %158 = icmp sgt i32 %1, 0
  %159 = select i1 %158, i32 %1, i32 0
  %160 = zext i32 %159 to i64
  %161 = ptrtoint i16* %151 to i64
  br label %162

162:                                              ; preds = %178, %157
  %163 = phi i16* [ %151, %157 ], [ %180, %178 ]
  %164 = phi i32 [ 0, %157 ], [ %179, %178 ]
  br label %165

165:                                              ; preds = %169, %162
  %166 = phi i16* [ %170, %169 ], [ %163, %162 ]
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 10
  br i1 %168, label %172, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = icmp eq i16* %170, %155
  br i1 %171, label %172, label %165

172:                                              ; preds = %169, %165
  %173 = phi i16* [ %155, %169 ], [ %166, %165 ]
  %174 = ptrtoint i16* %173 to i64
  %175 = sub i64 %174, %161
  %176 = ashr exact i64 %175, 1
  %177 = icmp slt i64 %176, %160
  br i1 %177, label %178, label %182

178:                                              ; preds = %172
  %179 = add nuw nsw i32 %164, 1
  %180 = getelementptr inbounds i16, i16* %173, i64 1
  %181 = icmp ult i16* %180, %155
  br i1 %181, label %162, label %193

182:                                              ; preds = %172
  %183 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  store i32 %164, i32* %183, align 4
  %184 = getelementptr inbounds i16, i16* %151, i64 %160
  %185 = ptrtoint i16* %184 to i64
  %186 = ptrtoint i16* %163 to i64
  %187 = sub i64 %185, %186
  %188 = lshr exact i64 %187, 1
  %189 = trunc i64 %188 to i32
  %190 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 1
  store i32 %189, i32* %190, align 4
  %191 = sub i64 %186, %161
  %192 = lshr exact i64 %191, 1
  br label %194

193:                                              ; preds = %178, %136, %108, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  br label %343

194:                                              ; preds = %140, %182
  %195 = phi i64 [ %148, %140 ], [ %192, %182 ]
  %196 = phi i64 [ %134, %140 ], [ %176, %182 ]
  %197 = trunc i64 %195 to i32
  %198 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 2
  store i32 %197, i32* %198, align 4
  %199 = trunc i64 %196 to i32
  %200 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 3
  store i32 %199, i32* %200, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  br label %321

201:                                              ; preds = %80
  %202 = add i64 %63, 3
  %203 = inttoptr i64 %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = ashr i32 %204, 1
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %343, label %207

207:                                              ; preds = %201
  %208 = icmp slt i32 %1, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = add i64 %63, 7
  br label %221

211:                                              ; preds = %207
  %212 = shl i32 %205, 2
  %213 = add i32 %212, -4
  %214 = sext i32 %213 to i64
  %215 = add i64 %63, 7
  %216 = add i64 %215, %214
  %217 = inttoptr i64 %216 to i32*
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = ashr i32 %218, 1
  %220 = icmp slt i32 %219, %1
  br i1 %220, label %343, label %221

221:                                              ; preds = %209, %211
  %222 = phi i64 [ %210, %209 ], [ %215, %211 ]
  %223 = phi i32 [ 0, %209 ], [ %1, %211 ]
  %224 = inttoptr i64 %222 to i32*
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = ashr i32 %225, 1
  %227 = icmp slt i32 %226, %223
  br i1 %227, label %232, label %228

228:                                              ; preds = %221
  %229 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  store i32 0, i32* %229, align 4
  %230 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 2
  store i32 0, i32* %230, align 4
  %231 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 1
  store i32 %223, i32* %231, align 4
  br label %280

232:                                              ; preds = %221
  %233 = add nsw i32 %205, -1
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %235, label %264

235:                                              ; preds = %232, %260
  %236 = phi i32 [ %262, %260 ], [ 0, %232 ]
  %237 = phi i32 [ %261, %260 ], [ %233, %232 ]
  %238 = add nsw i32 %236, %237
  %239 = sdiv i32 %238, 2
  %240 = shl i32 %239, 2
  %241 = sext i32 %240 to i64
  %242 = add i64 %222, %241
  %243 = inttoptr i64 %242 to i32*
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = ashr i32 %244, 1
  %246 = icmp sgt i32 %223, %245
  br i1 %246, label %247, label %249

247:                                              ; preds = %235
  %248 = add nsw i32 %239, 1
  br label %260

249:                                              ; preds = %235
  %250 = add nsw i32 %239, -1
  %251 = shl i32 %250, 2
  %252 = sext i32 %251 to i64
  %253 = add i64 %222, %252
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = ashr i32 %255, 1
  %257 = icmp sgt i32 %223, %256
  br i1 %257, label %258, label %260

258:                                              ; preds = %249
  %259 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  store i32 %239, i32* %259, align 4
  br label %264

260:                                              ; preds = %247, %249
  %261 = phi i32 [ %237, %247 ], [ %250, %249 ]
  %262 = phi i32 [ %248, %247 ], [ %236, %249 ]
  %263 = icmp sgt i32 %261, 0
  br i1 %263, label %235, label %264

264:                                              ; preds = %260, %232, %258
  %265 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = shl i32 %266, 2
  %268 = add i32 %267, -4
  %269 = sext i32 %268 to i64
  %270 = add i64 %222, %269
  %271 = inttoptr i64 %270 to i32*
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = ashr i32 %272, 1
  %274 = add nsw i32 %273, 1
  %275 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 2
  store i32 %274, i32* %275, align 4
  %276 = sub nsw i32 %223, %274
  %277 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 1
  store i32 %276, i32* %277, align 4
  %278 = shl i32 %266, 2
  %279 = sext i32 %278 to i64
  br label %280

280:                                              ; preds = %264, %228
  %281 = phi i64 [ %279, %264 ], [ 0, %228 ]
  %282 = add i64 %222, %281
  %283 = inttoptr i64 %282 to i32*
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = ashr i32 %284, 1
  %286 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 3
  store i32 %285, i32* %286, align 4
  %287 = icmp sgt i32 %284, 1
  br i1 %287, label %288, label %321

288:                                              ; preds = %280
  %289 = load i64, i64* %12, align 8
  %290 = and i64 %289, -4294967296
  %291 = add i64 %289, 3
  %292 = inttoptr i64 %291 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = zext i32 %293 to i64
  %295 = or i64 %290, %294
  %296 = add i64 %295, 7
  %297 = inttoptr i64 %296 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = icmp slt i32 %298, %285
  br i1 %299, label %321, label %300

300:                                              ; preds = %288
  %301 = add nsw i32 %285, -1
  %302 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %302) #11
  store i32 %301, i32* %8, align 4
  %303 = bitcast %"class.v8::internal::StringShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %303) #11
  %304 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %9, i64 0, i32 0
  %305 = add i64 %295, -1
  %306 = inttoptr i64 %305 to i32*
  %307 = load atomic i32, i32* %306 acquire, align 4
  %308 = zext i32 %307 to i64
  %309 = or i64 %290, %308
  %310 = add i64 %309, 7
  %311 = inttoptr i64 %310 to i16*
  %312 = load atomic i16, i16* %311 monotonic, align 2
  %313 = zext i16 %312 to i32
  store i32 %313, i32* %304, align 4
  %314 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #11
  %315 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %295, i64* %315, align 8
  %316 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %9, %"class.v8::internal::String"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %303) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %302) #11
  %317 = icmp eq i16 %316, 13
  br i1 %317, label %318, label %321

318:                                              ; preds = %300
  %319 = load i32, i32* %286, align 4
  %320 = add nsw i32 %319, -1
  store i32 %320, i32* %286, align 4
  br label %321

321:                                              ; preds = %280, %288, %318, %300, %194
  %322 = icmp eq i32 %3, 1
  br i1 %322, label %323, label %343

323:                                              ; preds = %321
  %324 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %336

327:                                              ; preds = %323
  %328 = load i64, i64* %12, align 8
  %329 = add i64 %328, 15
  %330 = inttoptr i64 %329 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = ashr i32 %331, 1
  %333 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %2, i64 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = add nsw i32 %334, %332
  store i32 %335, i32* %333, align 4
  br label %336

336:                                              ; preds = %327, %323
  %337 = load i64, i64* %12, align 8
  %338 = add i64 %337, 11
  %339 = inttoptr i64 %338 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = ashr i32 %340, 1
  %342 = add nsw i32 %341, %325
  store i32 %342, i32* %324, align 4
  br label %343

343:                                              ; preds = %86, %211, %201, %193, %321, %336, %43, %20
  %344 = phi i1 [ true, %43 ], [ false, %20 ], [ true, %336 ], [ true, %321 ], [ false, %193 ], [ false, %201 ], [ false, %211 ], [ false, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  ret i1 %344
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal6Script16IsUserJavaScriptEv(%"class.v8::internal::Script"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 23
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, -2
  %8 = icmp eq i32 %7, 4
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6Script17ContainsAsmModuleEv(%"class.v8::internal::Script"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SharedFunctionInfo::ScriptIterator", align 8
  %3 = bitcast %"class.v8::internal::SharedFunctionInfo::ScriptIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  call void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %2, %"class.v8::internal::Isolate"* %11, i64 %5) #11
  %12 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %2) #11
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %1, %35
  %16 = phi i64 [ %36, %35 ], [ %12, %1 ]
  %17 = and i64 %16, -4294967296
  %18 = add i64 %16, 3
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 acquire, align 4
  %21 = zext i32 %20 to i64
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %15
  %25 = or i64 %17, %21
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %17, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 92
  br i1 %34, label %39, label %35

35:                                               ; preds = %15, %24
  %36 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %2) #11
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %15

39:                                               ; preds = %24, %35, %1
  %40 = phi i1 [ false, %1 ], [ false, %35 ], [ true, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11
  ret i1 %40
}

declare void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"*, %"class.v8::internal::Isolate"*, i64) unnamed_addr #1

declare i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal6Script15GetColumnNumberENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", align 8
  %4 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %5 = bitcast %"struct.v8::internal::Script::PositionInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 -1, i64 16, i1 false) #11
  %6 = load i64, i64* %0, align 8
  %7 = add i64 %6, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 6
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = and i64 %6, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  tail call void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %18, i64* %0) #11
  %19 = load i64, i64* %0, align 8
  br label %20

20:                                               ; preds = %2, %12
  %21 = phi i64 [ %6, %2 ], [ %19, %12 ]
  %22 = bitcast %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %3, i64 0, i32 0
  %25 = call zeroext i1 @_ZNK2v88internal6Script15GetPositionInfoEiPNS1_12PositionInfoENS1_10OffsetFlagE(%"class.v8::internal::Script"* nonnull %24, i32 %1, %"struct.v8::internal::Script::PositionInfo"* nonnull %4, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %26 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %4, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal6Script15GetColumnNumberEi(%"class.v8::internal::Script"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %4 = bitcast %"struct.v8::internal::Script::PositionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 -1, i64 16, i1 false) #11
  %5 = call zeroext i1 @_ZNK2v88internal6Script15GetPositionInfoEiPNS1_12PositionInfoENS1_10OffsetFlagE(%"class.v8::internal::Script"* %0, i32 %1, %"struct.v8::internal::Script::PositionInfo"* nonnull %3, i32 1)
  %6 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal6Script13GetLineNumberENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", align 8
  %4 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %5 = bitcast %"struct.v8::internal::Script::PositionInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 -1, i64 16, i1 false) #11
  %6 = load i64, i64* %0, align 8
  %7 = add i64 %6, 23
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, -2
  %11 = icmp eq i32 %10, 6
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = and i64 %6, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  tail call void @_ZN2v88internal6Script12InitLineEndsINS0_7IsolateEEEvPT_NS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %18, i64* %0) #11
  %19 = load i64, i64* %0, align 8
  br label %20

20:                                               ; preds = %2, %12
  %21 = phi i64 [ %6, %2 ], [ %19, %12 ]
  %22 = bitcast %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Script>::ObjectRef"* %3, i64 0, i32 0
  %25 = call zeroext i1 @_ZNK2v88internal6Script15GetPositionInfoEiPNS1_12PositionInfoENS1_10OffsetFlagE(%"class.v8::internal::Script"* nonnull %24, i32 %1, %"struct.v8::internal::Script::PositionInfo"* nonnull %4, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %26 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %4, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal6Script13GetLineNumberEi(%"class.v8::internal::Script"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::Script::PositionInfo", align 4
  %4 = bitcast %"struct.v8::internal::Script::PositionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 -1, i64 16, i1 false) #11
  %5 = call zeroext i1 @_ZNK2v88internal6Script15GetPositionInfoEiPNS1_12PositionInfoENS1_10OffsetFlagE(%"class.v8::internal::Script"* %0, i32 %1, %"struct.v8::internal::Script::PositionInfo"* nonnull %3, i32 1)
  %6 = getelementptr inbounds %"struct.v8::internal::Script::PositionInfo", %"struct.v8::internal::Script::PositionInfo"* %3, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret i32 %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal6Script18GetNameOrSourceURLEv(%"class.v8::internal::Script"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Script", %"class.v8::internal::Script"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 51
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %11 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 1, i64 0
  br label %26

18:                                               ; preds = %12, %1
  %19 = and i64 %9, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %26

26:                                               ; preds = %16, %18
  %27 = phi i64* [ %25, %18 ], [ %17, %16 ]
  %28 = getelementptr inbounds i64, i64* %27, i64 4
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %7, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = add i64 %3, 7
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %4, %36
  br label %38

38:                                               ; preds = %26, %32
  %39 = phi i64 [ %37, %32 ], [ %9, %26 ]
  ret i64 %39
}

declare i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE17NewWeakFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal6Script8IteratorC2EPNS0_7IsolateE(%"class.v8::internal::Script::Iterator"* nocapture, %"class.v8::internal::Isolate"*) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %4 = ptrtoint %"class.v8::internal::Heap"* %3 to i64
  %5 = add i64 %4, -41416
  %6 = inttoptr i64 %5 to %"class.v8::internal::Isolate"*
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 7, i32 0, i64 649
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Script::Iterator", %"class.v8::internal::Script::Iterator"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Script::Iterator", %"class.v8::internal::Script::Iterator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6Script8Iterator4NextEv(%"class.v8::internal::Script::Iterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Script::Iterator", %"class.v8::internal::Script::Iterator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::Script::Iterator", %"class.v8::internal::Script::Iterator"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add i64 %3, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = add i64 %3, 11
  %12 = sext i32 %8 to i64
  br label %13

13:                                               ; preds = %19, %6
  %14 = phi i64 [ %20, %19 ], [ %12, %6 ]
  %15 = load i32, i32* %10, align 4
  %16 = ashr i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = icmp slt i64 %14, %17
  br i1 %18, label %19, label %29

19:                                               ; preds = %13
  %20 = add nsw i64 %14, 1
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %7, align 8
  %22 = trunc i64 %14 to i32
  %23 = shl i32 %22, 2
  %24 = sext i32 %23 to i64
  %25 = add i64 %11, %24
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %13, label %30

29:                                               ; preds = %13
  store i64 0, i64* %2, align 8
  br label %36

30:                                               ; preds = %19
  %31 = and i64 %3, -4294967296
  %32 = and i32 %27, -3
  %33 = zext i32 %32 to i64
  %34 = or i64 %31, %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %30, %1, %29
  br label %37

37:                                               ; preds = %30, %36
  %38 = phi i64 [ 0, %36 ], [ %34, %30 ]
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7JSArray10InitializeENS0_6HandleIS1_EEii(i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  tail call void @_ZN2v88internal7Factory17NewJSArrayStorageENS0_6HandleINS0_7JSArrayEEEiiNS0_26ArrayStorageAllocationModeE(%"class.v8::internal::Factory"* %10, i64* %0, i32 %2, i32 %1, i32 1) #11
  ret void
}

declare void @_ZN2v88internal7Factory17NewJSArrayStorageENS0_6HandleINS0_7JSArrayEEEiiNS0_26ArrayStorageAllocationModeE(%"class.v8::internal::Factory"*, i64*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7JSArray23SetLengthWouldNormalizeEj(%"class.v8::internal::JSArray"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::JSObject", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JSArray", %"class.v8::internal::JSArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 10
  %13 = inttoptr i64 %12 to i8*
  %14 = load i8, i8* %13, align 1
  %15 = icmp ult i8 %14, 24
  br i1 %15, label %16, label %63

16:                                               ; preds = %2
  %17 = add i64 %5, 7
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %6, %20
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = ashr i32 %24, 1
  %26 = icmp ugt i32 %1, 33554432
  br i1 %26, label %27, label %63

27:                                               ; preds = %16
  %28 = add i32 %1, -1
  %29 = bitcast %"class.v8::internal::JSObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %30, align 8
  %31 = icmp ult i32 %28, %25
  br i1 %31, label %61, label %32

32:                                               ; preds = %27
  %33 = sub i32 %28, %25
  %34 = icmp ugt i32 %33, 1023
  br i1 %34, label %61, label %35

35:                                               ; preds = %32
  %36 = lshr i32 %1, 1
  %37 = add i32 %1, 16
  %38 = add i32 %37, %36
  %39 = icmp ult i32 %38, 501
  br i1 %39, label %61, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i32 %38, 5000
  %42 = and i64 %5, 1
  %43 = icmp eq i64 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = and i64 %5, -262144
  %47 = or i64 %46, 8
  %48 = inttoptr i64 %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 24
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %61

52:                                               ; preds = %45, %40
  %53 = call i32 @_ZN2v88internal8JSObject20GetFastElementsUsageEv(%"class.v8::internal::JSObject"* nonnull %3) #11
  %54 = ashr i32 %53, 1
  %55 = add nsw i32 %54, %53
  %56 = call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %55) #11
  %57 = icmp sgt i32 %56, 4
  %58 = select i1 %57, i32 %56, i32 4
  %59 = mul i32 %58, 9
  %60 = icmp ule i32 %59, %38
  br label %61

61:                                               ; preds = %27, %32, %35, %45, %52
  %62 = phi i1 [ %60, %52 ], [ true, %32 ], [ false, %45 ], [ false, %35 ], [ false, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  br label %63

63:                                               ; preds = %16, %61, %2
  %64 = phi i1 [ false, %2 ], [ false, %16 ], [ %62, %61 ]
  ret i1 %64
}

declare i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2v88internal7JSProxy12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEEbNS0_11ShouldThrowE(i64*, i64*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %7 = alloca [2 x %"class.v8::internal::Handle.1220"], align 16
  %8 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %10 = ptrtoint i64* %1 to i64
  %11 = load i64, i64* %0, align 8
  %12 = and i64 %11, -262144
  %13 = or i64 %12, 16
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 16
  %16 = add i64 %15, -41416
  %17 = inttoptr i64 %16 to %"class.v8::internal::Isolate"*
  %18 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 6, i32 1, i32 3
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp ult i64 %18, %20
  br i1 %21, label %22, label %34

22:                                               ; preds = %4
  %23 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #11
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 6, i32 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %17) #11
  br label %314

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 6
  %31 = tail call zeroext i1 @_ZN2v88internal10StackGuard21HasTerminationRequestEv(%"class.v8::internal::StackGuard"* %30) #11
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i64 @_ZN2v88internal7Isolate18TerminateExecutionEv(%"class.v8::internal::Isolate"* %17) #11
  br label %314

34:                                               ; preds = %29, %4
  %35 = inttoptr i64 %16 to %"class.v8::internal::Factory"*
  %36 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %35, i64 3584
  %37 = bitcast %"class.v8::internal::Factory"* %36 to i64*
  %38 = load i64, i64* %0, align 8
  %39 = and i64 %38, -4294967296
  %40 = add i64 %38, 11
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %39, %43
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %34
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %44) #11
  br label %63

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #11
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %44, i64* %59, align 8
  br label %63

63:                                               ; preds = %48, %58
  %64 = phi i64* [ %49, %48 ], [ %59, %58 ]
  %65 = load i64, i64* %0, align 8
  %66 = and i64 %65, -4294967296
  %67 = add i64 %65, 11
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %66, %70
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %66, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = icmp ult i16 %79, 186
  br i1 %80, label %81, label %85

81:                                               ; preds = %63
  %82 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %35, i32 150, i64* %37, i64* null, i64* null) #11
  %83 = load i64, i64* %82, align 8
  %84 = tail call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %17, i64 %83, %"class.v8::internal::MessageLocation"* null) #11
  br label %314

85:                                               ; preds = %63
  %86 = add i64 %65, 7
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %66, %89
  %91 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %92 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %85
  %94 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %91, i64 %90) #11
  br label %108

95:                                               ; preds = %85
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %99 = load i64*, i64** %98, align 8
  %100 = icmp eq i64* %97, %99
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #11
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i64* [ %102, %101 ], [ %97, %95 ]
  %105 = ptrtoint i64* %104 to i64
  %106 = add i64 %105, 8
  %107 = inttoptr i64 %106 to i64*
  store i64* %107, i64** %96, align 8
  store i64 %90, i64* %104, align 8
  br label %108

108:                                              ; preds = %93, %103
  %109 = phi i64* [ %94, %93 ], [ %104, %103 ]
  %110 = load i64, i64* %64, align 8
  %111 = and i64 %110, -262144
  %112 = or i64 %111, 16
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 16
  %115 = add i64 %114, -41416
  %116 = inttoptr i64 %115 to %"class.v8::internal::Isolate"*
  %117 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %117) #11
  %118 = ptrtoint i64* %64 to i64
  %119 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %120 = icmp eq %"class.v8::internal::Factory"* %36, null
  br i1 %120, label %121, label %125

121:                                              ; preds = %108
  %122 = load i64, i64* null, align 536870912
  %123 = add i64 %122, -1
  %124 = inttoptr i64 %123 to i32*
  br label %146

125:                                              ; preds = %108
  %126 = load i64, i64* %37, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %116, i64 0, i32 0, i32 4
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %126, -1
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i64 %128, 4294967295
  %133 = icmp eq i64 %132, 0
  tail call void @llvm.assume(i1 %133) #11
  %134 = zext i32 %131 to i64
  %135 = or i64 %128, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = icmp eq i16 %138, 64
  br i1 %139, label %140, label %146

140:                                              ; preds = %125
  %141 = add i64 %126, 7
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %140, %125, %121
  %147 = phi i32* [ %124, %121 ], [ %130, %140 ], [ %130, %125 ]
  %148 = phi i64 [ %122, %121 ], [ %126, %140 ], [ %126, %125 ]
  br label %149

149:                                              ; preds = %146, %140
  %150 = phi i32* [ %147, %146 ], [ %130, %140 ]
  %151 = phi i64 [ %148, %146 ], [ %126, %140 ]
  %152 = phi i32 [ 3, %146 ], [ 0, %140 ]
  store i32 %152, i32* %119, align 8
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %116, %"class.v8::internal::Isolate"** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  %159 = bitcast i64** %158 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %36, %"class.v8::internal::Factory"** %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %64, i64** %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %164 = bitcast %"class.v8::internal::Handle.1220"* %163 to i64*
  store i64 %118, i64* %164, align 8
  %165 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %166 = bitcast i64* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 -1, i64 16, i1 false) #11
  %167 = and i64 %151, -4294967296
  %168 = load atomic i32, i32* %150 monotonic, align 4
  %169 = zext i32 %168 to i64
  %170 = or i64 %167, %169
  %171 = add i64 %170, 7
  %172 = inttoptr i64 %171 to i16*
  %173 = load atomic i16, i16* %172 monotonic, align 2
  %174 = and i16 %173, -32
  %175 = icmp eq i16 %174, 32
  br i1 %175, label %176, label %180

176:                                              ; preds = %149
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %116, i64 0, i32 5, i32 0, i32 0, i32 0
  %178 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %177, align 8
  %179 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %178, %"class.v8::internal::Isolate"* %116, i64* %37) #11
  br label %180

180:                                              ; preds = %176, %149
  %181 = phi i64* [ %179, %176 ], [ %37, %149 ]
  store i64* %181, i64** %158, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #11
  %182 = load i32, i32* %153, align 4
  %183 = icmp eq i32 %182, 4
  br i1 %183, label %184, label %189

184:                                              ; preds = %180
  %185 = bitcast %"class.v8::internal::Isolate"** %157 to %"class.v8::internal::Factory"**
  %186 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %186, i64 160
  %188 = bitcast %"class.v8::internal::Factory"* %187 to i64*
  br label %191

189:                                              ; preds = %180
  %190 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #11
  br label %191

191:                                              ; preds = %184, %189
  %192 = phi i64* [ %190, %189 ], [ %188, %184 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %117) #11
  %193 = icmp eq i64* %192, null
  br i1 %193, label %314, label %194

194:                                              ; preds = %191
  %195 = ptrtoint i64* %192 to i64
  %196 = load i64, i64* %192, align 8
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %116, i64 0, i32 0, i32 7, i32 0, i64 6
  %198 = load i64, i64* %197, align 8
  %199 = trunc i64 %196 to i32
  %200 = trunc i64 %198 to i32
  %201 = icmp eq i32 %199, %200
  br i1 %201, label %207, label %202

202:                                              ; preds = %194
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %116, i64 0, i32 0, i32 7, i32 0, i64 4
  %204 = load i64, i64* %203, align 8
  %205 = trunc i64 %204 to i32
  %206 = icmp eq i32 %199, %205
  br i1 %206, label %207, label %211

207:                                              ; preds = %202, %194
  %208 = inttoptr i64 %115 to %"class.v8::internal::Factory"*
  %209 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %208, i64 160
  %210 = ptrtoint %"class.v8::internal::Factory"* %209 to i64
  br label %231

211:                                              ; preds = %202
  %212 = and i64 %196, 1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %226, label %214

214:                                              ; preds = %211
  %215 = and i64 %196, -4294967296
  %216 = add i64 %196, -1
  %217 = inttoptr i64 %216 to i32*
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = zext i32 %218 to i64
  %220 = or i64 %215, %219
  %221 = add i64 %220, 9
  %222 = inttoptr i64 %221 to i8*
  %223 = load atomic i8, i8* %222 monotonic, align 1
  %224 = and i8 %223, 2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %231

226:                                              ; preds = %214, %211
  %227 = inttoptr i64 %115 to %"class.v8::internal::Factory"*
  %228 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %227, i32 121, i64* nonnull %192, i64* %37, i64* %64) #11
  %229 = load i64, i64* %228, align 8
  %230 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %116, i64 %229, %"class.v8::internal::MessageLocation"* null) #11
  br label %314

231:                                              ; preds = %207, %214
  %232 = phi i64 [ %210, %207 ], [ %195, %214 ]
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %314, label %234

234:                                              ; preds = %231
  %235 = inttoptr i64 %232 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 7, i32 0, i64 4
  %238 = load i64, i64* %237, align 8
  %239 = trunc i64 %236 to i32
  %240 = trunc i64 %238 to i32
  %241 = icmp eq i32 %239, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %234
  %243 = call i16 @_ZN2v88internal10JSReceiver12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEEbNS0_11ShouldThrowE(i64* %109, i64* %1, i1 zeroext %2, i32 %3) #11
  br label %314

244:                                              ; preds = %234
  %245 = bitcast [2 x %"class.v8::internal::Handle.1220"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %245) #11
  %246 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %7, i64 0, i64 0
  %247 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %7, i64 0, i64 0, i32 0, i32 0
  store i64* %109, i64** %247, align 16
  %248 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1220"], [2 x %"class.v8::internal::Handle.1220"]* %7, i64 0, i64 1
  %249 = bitcast %"class.v8::internal::Handle.1220"* %248 to i64*
  store i64 %10, i64* %249, align 8
  %250 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %17, i64* %235, i64* %64, i32 2, %"class.v8::internal::Handle.1220"* nonnull %246) #11
  %251 = icmp eq i64* %250, null
  br i1 %251, label %312, label %252

252:                                              ; preds = %244
  %253 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #11
  %254 = load i64, i64* %250, align 8
  %255 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %8, i64 0, i32 0
  %257 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %256, %"class.v8::internal::Isolate"* %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #11
  br i1 %257, label %264, label %258

258:                                              ; preds = %252
  %259 = icmp eq i32 %3, 1
  br i1 %259, label %312, label %260

260:                                              ; preds = %258
  %261 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %35, i32 154, i64* %37, i64* null, i64* null) #11
  %262 = load i64, i64* %261, align 8
  %263 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %17, i64 %262, %"class.v8::internal::MessageLocation"* null) #11
  br label %312

264:                                              ; preds = %252
  %265 = call i16 @_ZN2v88internal10JSReceiver12IsExtensibleENS0_6HandleIS1_EE(i64* %109) #11
  %266 = trunc i16 %265 to i8
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %312, label %268

268:                                              ; preds = %264
  %269 = icmp ugt i16 %265, 255
  br i1 %269, label %312, label %270

270:                                              ; preds = %268
  %271 = bitcast %"class.v8::internal::PrototypeIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %271) #11
  %272 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %17, %"class.v8::internal::Isolate"** %272, align 8
  %273 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %273, align 8
  %274 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 2, i32 0, i32 0
  store i64* %109, i64** %274, align 8
  %275 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 3
  store i32 1, i32* %275, align 8
  %276 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 4
  store i8 0, i8* %276, align 4
  %277 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 6
  store i32 0, i32* %277, align 8
  %278 = icmp eq i64* %109, null
  br i1 %278, label %279, label %280, !prof !3

279:                                              ; preds = %270
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.421, i64 0, i64 0)) #16
  unreachable

280:                                              ; preds = %270, %293
  %281 = call zeroext i1 @_ZNK2v88internal17PrototypeIterator9HasAccessEv(%"class.v8::internal::PrototypeIterator"* nonnull %6) #11
  br i1 %281, label %290, label %282

282:                                              ; preds = %280
  %283 = bitcast %"class.v8::internal::PrototypeIterator"* %6 to %"class.v8::internal::Factory"**
  %284 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %283, align 8
  %285 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %284, i64 176
  %286 = ptrtoint %"class.v8::internal::Factory"* %285 to i64
  %287 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %6, i64 0, i32 2
  %288 = bitcast %"class.v8::internal::Handle.742"* %287 to i64*
  store i64 %286, i64* %288, align 8
  store i8 1, i8* %276, align 4
  %289 = bitcast %"class.v8::internal::Factory"* %285 to i64*
  br label %298

290:                                              ; preds = %280
  %291 = call zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"* nonnull %6) #11
  br i1 %291, label %293, label %292

292:                                              ; preds = %290
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %271) #11
  br label %312

293:                                              ; preds = %290
  %294 = load i8, i8* %276, align 4
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %280, label %296

296:                                              ; preds = %293
  %297 = load i64*, i64** %274, align 8
  br label %298

298:                                              ; preds = %282, %296
  %299 = phi i64* [ %297, %296 ], [ %289, %282 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %271) #11
  %300 = icmp eq i64* %299, null
  br i1 %300, label %312, label %301

301:                                              ; preds = %298
  %302 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #11
  %303 = load i64, i64* %1, align 8
  %304 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %9, i64 0, i32 0
  %306 = load i64, i64* %299, align 8
  %307 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %305, i64 %306)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #11
  br i1 %307, label %312, label %308

308:                                              ; preds = %301
  %309 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %35, i32 153, i64* null, i64* null, i64* null) #11
  %310 = load i64, i64* %309, align 8
  %311 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %17, i64 %310, %"class.v8::internal::MessageLocation"* null) #11
  br label %312

312:                                              ; preds = %264, %268, %301, %298, %292, %308, %258, %244, %260
  %313 = phi i16 [ 0, %260 ], [ 0, %244 ], [ 1, %258 ], [ 0, %264 ], [ 257, %268 ], [ 0, %308 ], [ 0, %292 ], [ 0, %298 ], [ 257, %301 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %245) #11
  br label %314

314:                                              ; preds = %191, %226, %81, %231, %312, %242, %27, %32
  %315 = phi i16 [ 0, %32 ], [ 0, %27 ], [ 0, %81 ], [ %243, %242 ], [ %313, %312 ], [ 0, %231 ], [ 0, %226 ], [ 0, %191 ]
  ret i16 %315
}

declare i16 @_ZN2v88internal10JSReceiver12SetPrototypeENS0_6HandleIS1_EENS2_INS0_6ObjectEEEbNS0_11ShouldThrowE(i64*, i64*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14AllocationSite22ResetPretenureDecisionEv(%"class.v8::internal::AllocationSite"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 15
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, -469762049
  store i32 %7, i32* %5, align 4
  %8 = load i64, i64* %2, align 8
  %9 = add i64 %8, 15
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, -67108864
  store i32 %12, i32* %10, align 4
  %13 = load i64, i64* %2, align 8
  %14 = add i64 %13, 19
  %15 = inttoptr i64 %14 to i32*
  store i32 0, i32* %15, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK2v88internal14AllocationSite17GetAllocationTypeEv(%"class.v8::internal::AllocationSite"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 15
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 469762048
  %8 = icmp eq i32 %7, 201326592
  %9 = zext i1 %8 to i8
  ret i8 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14AllocationSite8IsNestedEv(%"class.v8::internal::AllocationSite"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -262144
  %9 = zext i32 %8 to i64
  %10 = or i64 %4, %9
  %11 = or i64 %10, 16
  %12 = inttoptr i64 %11 to %"class.v8::internal::Heap"**
  %13 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %12, align 16
  %14 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %13, i64 0, i32 60, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %1
  %19 = trunc i64 %3 to i32
  br label %20

20:                                               ; preds = %18, %37
  %21 = phi i64 [ %15, %18 ], [ %42, %37 ]
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 90
  br i1 %31, label %32, label %45

32:                                               ; preds = %20
  %33 = add i64 %21, 7
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %19
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = add i64 %21, 23
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %22, %41
  %43 = and i64 %41, 1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %20

45:                                               ; preds = %20, %32, %37, %1
  %46 = phi i1 [ false, %1 ], [ false, %37 ], [ true, %32 ], [ false, %20 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14AllocationSite11ShouldTrackENS0_12ElementsKindES2_(i8 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %0, i8 zeroext %1) #11
  ret i1 %3
}

declare zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal14AllocationSite21PretenureDecisionNameENS1_17PretenureDecisionE(%"class.v8::internal::AllocationSite"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

5:                                                ; preds = %2
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZN2v88internal14AllocationSite21PretenureDecisionNameENS1_17PretenureDecisionE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7JSArray21MayHaveReadOnlyLengthENS0_3MapE(i64) local_unnamed_addr #0 align 2 {
  %2 = add i64 %0, 11
  %3 = inttoptr i64 %2 to i32*
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 2097152
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = and i64 %0, -4294967296
  %9 = add i64 %0, 23
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 19
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 16
  %18 = icmp ne i32 %17, 0
  br label %19

19:                                               ; preds = %1, %7
  %20 = phi i1 [ %18, %7 ], [ true, %1 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7JSArray17HasReadOnlyLengthENS0_6HandleIS1_EE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::LookupIterator", align 8
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 11
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2097152
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %26

15:                                               ; preds = %1
  %16 = add i64 %9, 23
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %4, %19
  %21 = add i64 %20, 19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 16
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %95, label %26

26:                                               ; preds = %15, %1
  %27 = and i64 %3, -262144
  %28 = or i64 %27, 16
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = bitcast %"class.v8::internal::LookupIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %33) #11
  %34 = inttoptr i64 %31 to %"class.v8::internal::Factory"*
  %35 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %34, i64 3032
  %36 = bitcast %"class.v8::internal::Factory"* %35 to i64*
  %37 = ptrtoint i64* %0 to i64
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 0
  %39 = icmp eq %"class.v8::internal::Factory"* %35, null
  %40 = load i64, i64* %36, align 8
  br i1 %39, label %41, label %44

41:                                               ; preds = %26
  %42 = add i64 %40, -1
  %43 = inttoptr i64 %42 to i32*
  br label %57

44:                                               ; preds = %26
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %40, -1
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i64 %46, 4294967295
  %51 = icmp eq i64 %50, 0
  tail call void @llvm.assume(i1 %51) #11
  %52 = zext i32 %49 to i64
  %53 = or i64 %46, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  br label %57

57:                                               ; preds = %41, %44
  %58 = phi i32* [ %43, %41 ], [ %48, %44 ]
  store i32 0, i32* %38, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 1
  store i32 4, i32* %59, align 4
  %60 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 2
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 3
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 4, i32 0
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %32, %"class.v8::internal::Isolate"** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 6, i32 0, i32 0
  %65 = bitcast i64** %64 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %35, %"class.v8::internal::Factory"** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 8, i32 0, i32 0
  store i64* %0, i64** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 10
  %70 = bitcast %"class.v8::internal::Handle.1220"* %69 to i64*
  store i64 %37, i64* %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %2, i64 0, i32 11
  %72 = bitcast i64* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 -1, i64 16, i1 false) #11
  %73 = and i64 %40, -4294967296
  %74 = load atomic i32, i32* %58 monotonic, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %73, %75
  %77 = add i64 %76, 7
  %78 = inttoptr i64 %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = and i16 %79, -32
  %81 = icmp eq i16 %80, 32
  br i1 %81, label %82, label %86

82:                                               ; preds = %57
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 5, i32 0, i32 0, i32 0
  %84 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %83, align 8
  %85 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %84, %"class.v8::internal::Isolate"* %32, i64* %36) #11
  br label %86

86:                                               ; preds = %57, %82
  %87 = phi i64* [ %85, %82 ], [ %36, %57 ]
  store i64* %87, i64** %64, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %2) #11
  %88 = load i32, i32* %59, align 4
  %89 = icmp eq i32 %88, 5
  br i1 %89, label %91, label %90, !prof !5

90:                                               ; preds = %86
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.370, i64 0, i64 0)) #16
  unreachable

91:                                               ; preds = %86
  %92 = load i32, i32* %62, align 8
  %93 = and i32 %92, 8
  %94 = icmp ne i32 %93, 0
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %33) #11
  br label %95

95:                                               ; preds = %15, %91
  %96 = phi i1 [ %94, %91 ], [ false, %15 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14FixedArrayBase33GetMaxLengthForNewSpaceAllocationENS0_12ElementsKindE(i8 zeroext) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2v88internal23ElementsKindToShiftSizeENS0_12ElementsKindE(i8 zeroext %0) #11
  %3 = lshr i32 131064, %2
  ret i32 %3
}

declare i32 @_ZN2v88internal23ElementsKindToShiftSizeENS0_12ElementsKindE(i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal14FixedArrayBase10IsCowArrayEv(%"class.v8::internal::FixedArrayBase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FixedArrayBase", %"class.v8::internal::FixedArrayBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -1
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %8 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %7, i64 0, i32 1, i64 0
  br label %23

15:                                               ; preds = %9, %1
  %16 = and i64 %3, -262144
  %17 = or i64 %16, 16
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 16
  %20 = add i64 %19, -41416
  %21 = inttoptr i64 %20 to %"class.v8::internal::Isolate"*
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %23

23:                                               ; preds = %13, %15
  %24 = phi i64* [ %22, %15 ], [ %14, %13 ]
  %25 = getelementptr inbounds i64, i64* %24, i64 13
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %6, %27
  ret i1 %28
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_ZNK2v88internal6Symbol19PrivateSymbolToNameEv(%"class.v8::internal::Symbol"* readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Symbol", %"class.v8::internal::Symbol"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %5 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %4, i64 0, i32 1, i64 0
  br label %20

12:                                               ; preds = %6, %1
  %13 = and i64 %3, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %20

20:                                               ; preds = %10, %12
  %21 = phi i64* [ %19, %12 ], [ %11, %10 ]
  %22 = getelementptr inbounds i64, i64* %21, i64 474
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %3 to i32
  %25 = trunc i64 %23 to i32
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %198, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds i64, i64* %21, i64 475
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %24, %30
  br i1 %31, label %198, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds i64, i64* %21, i64 476
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %24, %35
  br i1 %36, label %198, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds i64, i64* %21, i64 477
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %24, %40
  br i1 %41, label %198, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds i64, i64* %21, i64 478
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %24, %45
  br i1 %46, label %198, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds i64, i64* %21, i64 479
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %24, %50
  br i1 %51, label %198, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds i64, i64* %21, i64 480
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %24, %55
  br i1 %56, label %198, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds i64, i64* %21, i64 481
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %24, %60
  br i1 %61, label %198, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds i64, i64* %21, i64 482
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %24, %65
  br i1 %66, label %198, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds i64, i64* %21, i64 483
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %24, %70
  br i1 %71, label %198, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds i64, i64* %21, i64 484
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %24, %75
  br i1 %76, label %198, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds i64, i64* %21, i64 485
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  %81 = icmp eq i32 %24, %80
  br i1 %81, label %198, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds i64, i64* %21, i64 486
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = icmp eq i32 %24, %85
  br i1 %86, label %198, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds i64, i64* %21, i64 487
  %89 = load i64, i64* %88, align 8
  %90 = trunc i64 %89 to i32
  %91 = icmp eq i32 %24, %90
  br i1 %91, label %198, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds i64, i64* %21, i64 488
  %94 = load i64, i64* %93, align 8
  %95 = trunc i64 %94 to i32
  %96 = icmp eq i32 %24, %95
  br i1 %96, label %198, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds i64, i64* %21, i64 489
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %99 to i32
  %101 = icmp eq i32 %24, %100
  br i1 %101, label %198, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds i64, i64* %21, i64 490
  %104 = load i64, i64* %103, align 8
  %105 = trunc i64 %104 to i32
  %106 = icmp eq i32 %24, %105
  br i1 %106, label %198, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds i64, i64* %21, i64 491
  %109 = load i64, i64* %108, align 8
  %110 = trunc i64 %109 to i32
  %111 = icmp eq i32 %24, %110
  br i1 %111, label %198, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds i64, i64* %21, i64 492
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %114 to i32
  %116 = icmp eq i32 %24, %115
  br i1 %116, label %198, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds i64, i64* %21, i64 493
  %119 = load i64, i64* %118, align 8
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %24, %120
  br i1 %121, label %198, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds i64, i64* %21, i64 494
  %124 = load i64, i64* %123, align 8
  %125 = trunc i64 %124 to i32
  %126 = icmp eq i32 %24, %125
  br i1 %126, label %198, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds i64, i64* %21, i64 495
  %129 = load i64, i64* %128, align 8
  %130 = trunc i64 %129 to i32
  %131 = icmp eq i32 %24, %130
  br i1 %131, label %198, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds i64, i64* %21, i64 496
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %134 to i32
  %136 = icmp eq i32 %24, %135
  br i1 %136, label %198, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds i64, i64* %21, i64 497
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %139 to i32
  %141 = icmp eq i32 %24, %140
  br i1 %141, label %198, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds i64, i64* %21, i64 498
  %144 = load i64, i64* %143, align 8
  %145 = trunc i64 %144 to i32
  %146 = icmp eq i32 %24, %145
  br i1 %146, label %198, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds i64, i64* %21, i64 499
  %149 = load i64, i64* %148, align 8
  %150 = trunc i64 %149 to i32
  %151 = icmp eq i32 %24, %150
  br i1 %151, label %198, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds i64, i64* %21, i64 500
  %154 = load i64, i64* %153, align 8
  %155 = trunc i64 %154 to i32
  %156 = icmp eq i32 %24, %155
  br i1 %156, label %198, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds i64, i64* %21, i64 501
  %159 = load i64, i64* %158, align 8
  %160 = trunc i64 %159 to i32
  %161 = icmp eq i32 %24, %160
  br i1 %161, label %198, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds i64, i64* %21, i64 502
  %164 = load i64, i64* %163, align 8
  %165 = trunc i64 %164 to i32
  %166 = icmp eq i32 %24, %165
  br i1 %166, label %198, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds i64, i64* %21, i64 503
  %169 = load i64, i64* %168, align 8
  %170 = trunc i64 %169 to i32
  %171 = icmp eq i32 %24, %170
  br i1 %171, label %198, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds i64, i64* %21, i64 504
  %174 = load i64, i64* %173, align 8
  %175 = trunc i64 %174 to i32
  %176 = icmp eq i32 %24, %175
  br i1 %176, label %198, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds i64, i64* %21, i64 505
  %179 = load i64, i64* %178, align 8
  %180 = trunc i64 %179 to i32
  %181 = icmp eq i32 %24, %180
  br i1 %181, label %198, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds i64, i64* %21, i64 506
  %184 = load i64, i64* %183, align 8
  %185 = trunc i64 %184 to i32
  %186 = icmp eq i32 %24, %185
  br i1 %186, label %198, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds i64, i64* %21, i64 507
  %189 = load i64, i64* %188, align 8
  %190 = trunc i64 %189 to i32
  %191 = icmp eq i32 %24, %190
  br i1 %191, label %198, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds i64, i64* %21, i64 508
  %194 = load i64, i64* %193, align 8
  %195 = trunc i64 %194 to i32
  %196 = icmp eq i32 %24, %195
  %197 = select i1 %196, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.406, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.407, i64 0, i64 0)
  br label %198

198:                                              ; preds = %192, %187, %182, %177, %172, %167, %162, %157, %152, %147, %142, %137, %132, %127, %122, %117, %112, %107, %102, %97, %92, %87, %82, %77, %72, %67, %62, %57, %52, %47, %42, %37, %32, %27, %20
  %199 = phi i8* [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.372, i64 0, i64 0), %20 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.373, i64 0, i64 0), %27 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.374, i64 0, i64 0), %32 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.375, i64 0, i64 0), %37 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.376, i64 0, i64 0), %42 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.377, i64 0, i64 0), %47 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.378, i64 0, i64 0), %52 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.379, i64 0, i64 0), %57 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.380, i64 0, i64 0), %62 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.381, i64 0, i64 0), %67 ], [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.382, i64 0, i64 0), %72 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.383, i64 0, i64 0), %77 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.384, i64 0, i64 0), %82 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.385, i64 0, i64 0), %87 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.386, i64 0, i64 0), %92 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.387, i64 0, i64 0), %97 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.388, i64 0, i64 0), %102 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.389, i64 0, i64 0), %107 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.390, i64 0, i64 0), %112 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.391, i64 0, i64 0), %117 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.392, i64 0, i64 0), %122 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.393, i64 0, i64 0), %127 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.394, i64 0, i64 0), %132 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.395, i64 0, i64 0), %137 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.396, i64 0, i64 0), %142 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.397, i64 0, i64 0), %147 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.398, i64 0, i64 0), %152 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.399, i64 0, i64 0), %157 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.400, i64 0, i64 0), %162 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.401, i64 0, i64 0), %167 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.402, i64 0, i64 0), %172 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.403, i64 0, i64 0), %177 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.404, i64 0, i64 0), %182 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.405, i64 0, i64 0), %187 ], [ %197, %192 ]
  ret i8* %199
}

declare void @_ZN2v88internal6String9PrintUC16ERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEEii(%"class.v8::internal::String"*, %"class.std::__1::basic_ostream"* dereferenceable(160), i32, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal9JSPromise6statusEv(%"class.v8::internal::JSPromise"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSPromise", %"class.v8::internal::JSPromise"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 15
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 1
  %8 = and i32 %7, 3
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal9JSPromise10set_statusENS_7Promise12PromiseStateE(%"class.v8::internal::JSPromise"* nocapture readonly, i32) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSPromise", %"class.v8::internal::JSPromise"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %1, 1
  %9 = and i32 %7, -8
  %10 = or i32 %9, %8
  store atomic volatile i32 %10, i32* %6 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal9JSPromise6StatusENS_7Promise12PromiseStateE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 3
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

4:                                                ; preds = %1
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2v88internal9JSPromise6StatusENS_7Promise12PromiseStateE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal9JSPromise13async_task_idEv(%"class.v8::internal::JSPromise"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::JSPromise", %"class.v8::internal::JSPromise"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 15
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 5
  %8 = and i32 %7, 4194303
  ret i32 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal9JSPromise17set_async_task_idEi(%"class.v8::internal::JSPromise"* nocapture readonly, i32) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::JSPromise", %"class.v8::internal::JSPromise"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -134217698
  %9 = shl i32 %1, 5
  %10 = or i32 %8, %9
  store atomic volatile i32 %10, i32* %6 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9JSPromise7FulfillENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = and i64 %3, -262144
  %5 = or i64 %4, 16
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6, align 16
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  %10 = add i64 %3, 15
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !5

15:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.413, i64 0, i64 0)) #16
  unreachable

16:                                               ; preds = %2
  %17 = and i64 %3, -4294967296
  %18 = add i64 %3, 11
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %24 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %25 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %16
  %27 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %24, i64 %22) #11
  br label %41

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #11
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi i64* [ %35, %34 ], [ %30, %28 ]
  %38 = ptrtoint i64* %37 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  store i64* %40, i64** %29, align 8
  store i64 %22, i64* %37, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i64* [ %27, %26 ], [ %37, %36 ]
  %43 = load i64, i64* %0, align 8
  %44 = load i64, i64* %1, align 8
  %45 = add i64 %43, 11
  %46 = inttoptr i64 %45 to i32*
  %47 = trunc i64 %44 to i32
  store atomic volatile i32 %47, i32* %46 monotonic, align 4
  %48 = and i64 %44, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %73, label %50

50:                                               ; preds = %41
  %51 = and i64 %43, -262144
  %52 = or i64 %51, 8
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 262144
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %50
  %58 = or i64 %51, 16
  %59 = inttoptr i64 %58 to %"class.v8::internal::Heap"**
  %60 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %59, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %60, i64 %43, i64 %45, i64 %44) #11
  br label %61

61:                                               ; preds = %57, %50
  %62 = and i64 %44, -262144
  %63 = or i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 24
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %61
  %69 = load i64, i64* %53, align 8
  %70 = and i64 %69, 24
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %68
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %43, i64 %45, i64 %44) #11
  br label %73

73:                                               ; preds = %41, %61, %68, %72
  %74 = load i64, i64* %0, align 8
  %75 = add i64 %74, 15
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, -8
  %79 = or i32 %78, 2
  store atomic volatile i32 %79, i32* %76 monotonic, align 4
  %80 = tail call i64* @_ZN2v88internal9JSPromise23TriggerPromiseReactionsEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_NS0_15PromiseReaction4TypeE(%"class.v8::internal::Isolate"* %9, i64* %42, i64* %1, i32 0)
  ret i64* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9JSPromise23TriggerPromiseReactionsEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_NS0_15PromiseReaction4TypeE(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %58, label %8

8:                                                ; preds = %4
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 108
  br i1 %18, label %20, label %19, !prof !5

19:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.414, i64 0, i64 0)) #16
  unreachable

20:                                               ; preds = %8, %55
  %21 = phi i64 [ %22, %55 ], [ 0, %8 ]
  %22 = phi i64 [ %28, %55 ], [ %5, %8 ]
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, 3
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = trunc i64 %21 to i32
  store atomic volatile i32 %29, i32* %25 monotonic, align 4
  %30 = and i64 %21, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %20
  %33 = and i64 %22, -262144
  %34 = or i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 262144
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = or i64 %33, 16
  %41 = inttoptr i64 %40 to %"class.v8::internal::Heap"**
  %42 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %41, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %42, i64 %22, i64 %24, i64 %21) #11
  br label %43

43:                                               ; preds = %39, %32
  %44 = and i64 %21, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %43
  %51 = load i64, i64* %35, align 8
  %52 = and i64 %51, 24
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %22, i64 %24, i64 %21) #11
  br label %55

55:                                               ; preds = %20, %43, %50, %54
  %56 = and i64 %27, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %20

58:                                               ; preds = %55, %4
  %59 = phi i64 [ 0, %4 ], [ %22, %55 ]
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %61 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %62 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %61, i64 %59) #11
  %65 = load i64, i64* %64, align 8
  br label %79

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %70 = load i64*, i64** %69, align 8
  %71 = icmp eq i64* %68, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %66
  %73 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %74

74:                                               ; preds = %72, %66
  %75 = phi i64* [ %73, %72 ], [ %68, %66 ]
  %76 = ptrtoint i64* %75 to i64
  %77 = add i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  store i64* %78, i64** %67, align 8
  store i64 %59, i64* %75, align 8
  br label %79

79:                                               ; preds = %63, %74
  %80 = phi i64 [ %65, %63 ], [ %59, %74 ]
  %81 = phi i64* [ %64, %63 ], [ %75, %74 ]
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %488, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %87 = icmp eq i32 %3, 0
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 524
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 523
  br label %91

91:                                               ; preds = %84, %484
  %92 = phi i64 [ %80, %84 ], [ %485, %484 ]
  %93 = phi i64* [ %81, %84 ], [ %116, %484 ]
  %94 = and i64 %92, -4294967296
  %95 = add i64 %92, 3
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %94, %98
  %100 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %101 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %91
  %103 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %100, i64 %99) #11
  br label %115

104:                                              ; preds = %91
  %105 = load i64*, i64** %85, align 8
  %106 = load i64*, i64** %86, align 8
  %107 = icmp eq i64* %105, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %110

110:                                              ; preds = %108, %104
  %111 = phi i64* [ %109, %108 ], [ %105, %104 ]
  %112 = ptrtoint i64* %111 to i64
  %113 = add i64 %112, 8
  %114 = inttoptr i64 %113 to i64*
  store i64* %114, i64** %85, align 8
  store i64 %99, i64* %111, align 8
  br label %115

115:                                              ; preds = %102, %110
  %116 = phi i64* [ %103, %102 ], [ %111, %110 ]
  %117 = load i64, i64* %93, align 8
  %118 = and i64 %117, -4294967296
  br i1 %87, label %119, label %164

119:                                              ; preds = %115
  %120 = add i64 %117, 11
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %118, %123
  %125 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %126 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %119
  %128 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %125, i64 %124) #11
  br label %140

129:                                              ; preds = %119
  %130 = load i64*, i64** %85, align 8
  %131 = load i64*, i64** %86, align 8
  %132 = icmp eq i64* %130, %131
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  %134 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %135

135:                                              ; preds = %133, %129
  %136 = phi i64* [ %134, %133 ], [ %130, %129 ]
  %137 = ptrtoint i64* %136 to i64
  %138 = add i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  store i64* %139, i64** %85, align 8
  store i64 %124, i64* %136, align 8
  br label %140

140:                                              ; preds = %127, %135
  %141 = phi i64* [ %128, %127 ], [ %136, %135 ]
  %142 = load i64, i64* %93, align 8
  %143 = and i64 %142, -4294967296
  %144 = add i64 %142, 7
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %143, %147
  %149 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %150 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %140
  %152 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %149, i64 %148) #11
  br label %209

153:                                              ; preds = %140
  %154 = load i64*, i64** %85, align 8
  %155 = load i64*, i64** %86, align 8
  %156 = icmp eq i64* %154, %155
  br i1 %156, label %157, label %159

157:                                              ; preds = %153
  %158 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %159

159:                                              ; preds = %157, %153
  %160 = phi i64* [ %158, %157 ], [ %154, %153 ]
  %161 = ptrtoint i64* %160 to i64
  %162 = add i64 %161, 8
  %163 = inttoptr i64 %162 to i64*
  store i64* %163, i64** %85, align 8
  store i64 %148, i64* %160, align 8
  br label %209

164:                                              ; preds = %115
  %165 = add i64 %117, 7
  %166 = inttoptr i64 %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i64
  %169 = or i64 %118, %168
  %170 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %171 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %164
  %173 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %170, i64 %169) #11
  br label %185

174:                                              ; preds = %164
  %175 = load i64*, i64** %85, align 8
  %176 = load i64*, i64** %86, align 8
  %177 = icmp eq i64* %175, %176
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  %179 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %180

180:                                              ; preds = %178, %174
  %181 = phi i64* [ %179, %178 ], [ %175, %174 ]
  %182 = ptrtoint i64* %181 to i64
  %183 = add i64 %182, 8
  %184 = inttoptr i64 %183 to i64*
  store i64* %184, i64** %85, align 8
  store i64 %169, i64* %181, align 8
  br label %185

185:                                              ; preds = %172, %180
  %186 = phi i64* [ %173, %172 ], [ %181, %180 ]
  %187 = load i64, i64* %93, align 8
  %188 = and i64 %187, -4294967296
  %189 = add i64 %187, 11
  %190 = inttoptr i64 %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  %193 = or i64 %188, %192
  %194 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %195 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %185
  %197 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %194, i64 %193) #11
  br label %209

198:                                              ; preds = %185
  %199 = load i64*, i64** %85, align 8
  %200 = load i64*, i64** %86, align 8
  %201 = icmp eq i64* %199, %200
  br i1 %201, label %202, label %204

202:                                              ; preds = %198
  %203 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %204

204:                                              ; preds = %202, %198
  %205 = phi i64* [ %203, %202 ], [ %199, %198 ]
  %206 = ptrtoint i64* %205 to i64
  %207 = add i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  store i64* %208, i64** %85, align 8
  store i64 %193, i64* %205, align 8
  br label %209

209:                                              ; preds = %204, %196, %159, %151
  %210 = phi i64* [ %152, %151 ], [ %160, %159 ], [ %197, %196 ], [ %205, %204 ]
  %211 = phi i64* [ %141, %151 ], [ %141, %159 ], [ %186, %196 ], [ %186, %204 ]
  %212 = load i64, i64* %211, align 8
  %213 = and i64 %212, -4294967296
  %214 = add i64 %212, -1
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = zext i32 %216 to i64
  %218 = or i64 %213, %217
  %219 = add i64 %218, 7
  %220 = inttoptr i64 %219 to i16*
  %221 = load atomic i16, i16* %220 monotonic, align 2
  %222 = icmp ugt i16 %221, 185
  br i1 %222, label %223, label %226

223:                                              ; preds = %209
  %224 = tail call i64* @_ZN2v88internal10JSReceiver22GetContextForMicrotaskENS0_6HandleIS1_EE(i64* %211) #11
  %225 = icmp eq i64* %224, null
  br i1 %225, label %226, label %269

226:                                              ; preds = %223, %209
  %227 = load i64, i64* %210, align 8
  %228 = and i64 %227, -4294967296
  %229 = add i64 %227, -1
  %230 = inttoptr i64 %229 to i32*
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = zext i32 %231 to i64
  %233 = or i64 %228, %232
  %234 = add i64 %233, 7
  %235 = inttoptr i64 %234 to i16*
  %236 = load atomic i16, i16* %235 monotonic, align 2
  %237 = icmp ugt i16 %236, 185
  br i1 %237, label %238, label %241

238:                                              ; preds = %226
  %239 = tail call i64* @_ZN2v88internal10JSReceiver22GetContextForMicrotaskENS0_6HandleIS1_EE(i64* %210) #11
  %240 = icmp eq i64* %239, null
  br i1 %240, label %241, label %269

241:                                              ; preds = %238, %226
  %242 = load i64, i64* %88, align 8
  %243 = and i64 %242, -4294967296
  %244 = add i64 %242, -1
  %245 = inttoptr i64 %244 to i32*
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = zext i32 %246 to i64
  %248 = or i64 %243, %247
  %249 = add i64 %248, 19
  %250 = inttoptr i64 %249 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i64
  %253 = or i64 %243, %252
  %254 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %60, align 8
  %255 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %254, null
  br i1 %255, label %258, label %256

256:                                              ; preds = %241
  %257 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %254, i64 %253) #11
  br label %269

258:                                              ; preds = %241
  %259 = load i64*, i64** %85, align 8
  %260 = load i64*, i64** %86, align 8
  %261 = icmp eq i64* %259, %260
  br i1 %261, label %262, label %264

262:                                              ; preds = %258
  %263 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %264

264:                                              ; preds = %262, %258
  %265 = phi i64* [ %263, %262 ], [ %259, %258 ]
  %266 = ptrtoint i64* %265 to i64
  %267 = add i64 %266, 8
  %268 = inttoptr i64 %267 to i64*
  store i64* %268, i64** %85, align 8
  store i64 %253, i64* %265, align 8
  br label %269

269:                                              ; preds = %264, %256, %238, %223
  %270 = phi i64* [ %224, %223 ], [ %239, %238 ], [ %257, %256 ], [ %265, %264 ]
  %271 = load i64, i64* %93, align 8
  br i1 %87, label %272, label %357

272:                                              ; preds = %269
  %273 = load i64, i64* %90, align 8
  %274 = add i64 %271, -1
  %275 = inttoptr i64 %274 to i32*
  %276 = trunc i64 %273 to i32
  store atomic volatile i32 %276, i32* %275 release, align 4
  %277 = icmp eq i32 %276, 0
  %278 = and i64 %273, 1
  %279 = icmp eq i64 %278, 0
  %280 = or i1 %277, %279
  br i1 %280, label %292, label %281

281:                                              ; preds = %272
  %282 = and i64 %271, -262144
  %283 = or i64 %282, 8
  %284 = inttoptr i64 %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = and i64 %285, 262144
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %292, label %288

288:                                              ; preds = %281
  %289 = or i64 %282, 16
  %290 = inttoptr i64 %289 to %"class.v8::internal::Heap"**
  %291 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %290, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %291, i64 %271, i64 0, i64 %273) #11
  br label %292

292:                                              ; preds = %272, %281, %288
  %293 = load i64, i64* %93, align 8
  %294 = load i64, i64* %2, align 8
  %295 = add i64 %293, 3
  %296 = inttoptr i64 %295 to i32*
  %297 = trunc i64 %294 to i32
  store atomic volatile i32 %297, i32* %296 monotonic, align 4
  %298 = and i64 %294, 1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %323, label %300

300:                                              ; preds = %292
  %301 = and i64 %293, -262144
  %302 = or i64 %301, 8
  %303 = inttoptr i64 %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = and i64 %304, 262144
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %311, label %307

307:                                              ; preds = %300
  %308 = or i64 %301, 16
  %309 = inttoptr i64 %308 to %"class.v8::internal::Heap"**
  %310 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %309, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %310, i64 %293, i64 %295, i64 %294) #11
  br label %311

311:                                              ; preds = %307, %300
  %312 = and i64 %294, -262144
  %313 = or i64 %312, 8
  %314 = inttoptr i64 %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = and i64 %315, 24
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %311
  %319 = load i64, i64* %303, align 8
  %320 = and i64 %319, 24
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %318
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %293, i64 %295, i64 %294) #11
  br label %323

323:                                              ; preds = %292, %311, %318, %322
  %324 = load i64, i64* %93, align 8
  %325 = load i64, i64* %270, align 8
  %326 = add i64 %324, 7
  %327 = inttoptr i64 %326 to i32*
  %328 = trunc i64 %325 to i32
  store atomic volatile i32 %328, i32* %327 monotonic, align 4
  %329 = and i64 %325, 1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %342, label %331

331:                                              ; preds = %323
  %332 = and i64 %324, -262144
  %333 = or i64 %332, 8
  %334 = inttoptr i64 %333 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = and i64 %335, 262144
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %342, label %338

338:                                              ; preds = %331
  %339 = or i64 %332, 16
  %340 = inttoptr i64 %339 to %"class.v8::internal::Heap"**
  %341 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %340, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %341, i64 %324, i64 %326, i64 %325) #11
  br label %342

342:                                              ; preds = %338, %331, %323
  %343 = and i64 %325, -262144
  %344 = or i64 %343, 8
  %345 = inttoptr i64 %344 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = and i64 %346, 24
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %476, label %349

349:                                              ; preds = %342
  %350 = and i64 %324, -262144
  %351 = or i64 %350, 8
  %352 = inttoptr i64 %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = and i64 %353, 24
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %476

356:                                              ; preds = %349
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %324, i64 %326, i64 %325) #11
  br label %476

357:                                              ; preds = %269
  %358 = load i64, i64* %89, align 8
  %359 = add i64 %271, -1
  %360 = inttoptr i64 %359 to i32*
  %361 = trunc i64 %358 to i32
  store atomic volatile i32 %361, i32* %360 release, align 4
  %362 = icmp eq i32 %361, 0
  %363 = and i64 %358, 1
  %364 = icmp eq i64 %363, 0
  %365 = or i1 %362, %364
  br i1 %365, label %377, label %366

366:                                              ; preds = %357
  %367 = and i64 %271, -262144
  %368 = or i64 %367, 8
  %369 = inttoptr i64 %368 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = and i64 %370, 262144
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %377, label %373

373:                                              ; preds = %366
  %374 = or i64 %367, 16
  %375 = inttoptr i64 %374 to %"class.v8::internal::Heap"**
  %376 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %375, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %376, i64 %271, i64 0, i64 %358) #11
  br label %377

377:                                              ; preds = %357, %366, %373
  %378 = load i64, i64* %93, align 8
  %379 = load i64, i64* %2, align 8
  %380 = add i64 %378, 3
  %381 = inttoptr i64 %380 to i32*
  %382 = trunc i64 %379 to i32
  store atomic volatile i32 %382, i32* %381 monotonic, align 4
  %383 = and i64 %379, 1
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %408, label %385

385:                                              ; preds = %377
  %386 = and i64 %378, -262144
  %387 = or i64 %386, 8
  %388 = inttoptr i64 %387 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = and i64 %389, 262144
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %396, label %392

392:                                              ; preds = %385
  %393 = or i64 %386, 16
  %394 = inttoptr i64 %393 to %"class.v8::internal::Heap"**
  %395 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %394, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %395, i64 %378, i64 %380, i64 %379) #11
  br label %396

396:                                              ; preds = %392, %385
  %397 = and i64 %379, -262144
  %398 = or i64 %397, 8
  %399 = inttoptr i64 %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = and i64 %400, 24
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %408, label %403

403:                                              ; preds = %396
  %404 = load i64, i64* %388, align 8
  %405 = and i64 %404, 24
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %403
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %378, i64 %380, i64 %379) #11
  br label %408

408:                                              ; preds = %377, %396, %403, %407
  %409 = load i64, i64* %93, align 8
  %410 = load i64, i64* %270, align 8
  %411 = add i64 %409, 7
  %412 = inttoptr i64 %411 to i32*
  %413 = trunc i64 %410 to i32
  store atomic volatile i32 %413, i32* %412 monotonic, align 4
  %414 = and i64 %410, 1
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %427, label %416

416:                                              ; preds = %408
  %417 = and i64 %409, -262144
  %418 = or i64 %417, 8
  %419 = inttoptr i64 %418 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = and i64 %420, 262144
  %422 = icmp eq i64 %421, 0
  br i1 %422, label %427, label %423

423:                                              ; preds = %416
  %424 = or i64 %417, 16
  %425 = inttoptr i64 %424 to %"class.v8::internal::Heap"**
  %426 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %425, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %426, i64 %409, i64 %411, i64 %410) #11
  br label %427

427:                                              ; preds = %423, %416, %408
  %428 = and i64 %410, -262144
  %429 = or i64 %428, 8
  %430 = inttoptr i64 %429 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = and i64 %431, 24
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %442, label %434

434:                                              ; preds = %427
  %435 = and i64 %409, -262144
  %436 = or i64 %435, 8
  %437 = inttoptr i64 %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = and i64 %438, 24
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %434
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %409, i64 %411, i64 %410) #11
  br label %442

442:                                              ; preds = %427, %434, %441
  %443 = load i64, i64* %93, align 8
  %444 = load i64, i64* %211, align 8
  %445 = add i64 %443, 11
  %446 = inttoptr i64 %445 to i32*
  %447 = trunc i64 %444 to i32
  store atomic volatile i32 %447, i32* %446 monotonic, align 4
  %448 = and i64 %444, 1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %461, label %450

450:                                              ; preds = %442
  %451 = and i64 %443, -262144
  %452 = or i64 %451, 8
  %453 = inttoptr i64 %452 to i64*
  %454 = load i64, i64* %453, align 8
  %455 = and i64 %454, 262144
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %461, label %457

457:                                              ; preds = %450
  %458 = or i64 %451, 16
  %459 = inttoptr i64 %458 to %"class.v8::internal::Heap"**
  %460 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %459, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %460, i64 %443, i64 %445, i64 %444) #11
  br label %461

461:                                              ; preds = %457, %450, %442
  %462 = and i64 %444, -262144
  %463 = or i64 %462, 8
  %464 = inttoptr i64 %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = and i64 %465, 24
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %476, label %468

468:                                              ; preds = %461
  %469 = and i64 %443, -262144
  %470 = or i64 %469, 8
  %471 = inttoptr i64 %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = and i64 %472, 24
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %476

475:                                              ; preds = %468
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %443, i64 %445, i64 %444) #11
  br label %476

476:                                              ; preds = %475, %468, %461, %356, %349, %342
  %477 = load i64, i64* %270, align 8
  %478 = add i64 %477, 1027
  %479 = inttoptr i64 %478 to %"class.v8::internal::MicrotaskQueue"**
  %480 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %479, align 1
  %481 = icmp eq %"class.v8::internal::MicrotaskQueue"* %480, null
  br i1 %481, label %484, label %482

482:                                              ; preds = %476
  %483 = load i64, i64* %93, align 8
  tail call void @_ZN2v88internal14MicrotaskQueue16EnqueueMicrotaskENS0_9MicrotaskE(%"class.v8::internal::MicrotaskQueue"* nonnull %480, i64 %483) #11
  br label %484

484:                                              ; preds = %476, %482
  %485 = load i64, i64* %116, align 8
  %486 = and i64 %485, 1
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %488, label %91

488:                                              ; preds = %484, %79
  %489 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  ret i64* %489
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9JSPromise6RejectENS0_6HandleIS1_EENS2_INS0_6ObjectEEEb(i64*, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %12 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %12, i64 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 11, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = trunc i64 %18 to i32
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %48, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %26 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %25, align 8
  %27 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %26, i64 %20) #11
  br label %43

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %32, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #11
  br label %38

38:                                               ; preds = %36, %30
  %39 = phi i64* [ %37, %36 ], [ %32, %30 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %31, align 8
  store i64 %20, i64* %39, align 8
  br label %43

43:                                               ; preds = %38, %28
  %44 = phi i64* [ %29, %28 ], [ %39, %38 ]
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 493
  %46 = tail call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %10, i64* %0, i64* %45, i64* %44, i32 0, i64 1) #11
  %47 = load i64, i64* %17, align 8
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %3, %43, %16
  br i1 %2, label %49, label %51

49:                                               ; preds = %48
  %50 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %11, align 8
  tail call void @_ZN2v88internal5Debug15OnPromiseRejectENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::Debug"* %50, i64* %0, i64* %1) #11
  br label %51

51:                                               ; preds = %49, %48
  %52 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %53 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %52, i64 160
  %54 = bitcast %"class.v8::internal::Factory"* %53 to i64*
  tail call void @_ZN2v88internal7Isolate18RunAllPromiseHooksENS_15PromiseHookTypeENS0_6HandleINS0_9JSPromiseEEENS3_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %10, i32 1, i64* %0, i64* %54) #11
  %55 = load i64, i64* %0, align 8
  %56 = add i64 %55, 15
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 6
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61, !prof !5

61:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.413, i64 0, i64 0)) #16
  unreachable

62:                                               ; preds = %51
  %63 = and i64 %55, -4294967296
  %64 = add i64 %55, 11
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %70 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %69, align 8
  %71 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %62
  %73 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %70, i64 %68) #11
  br label %87

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = icmp eq i64* %76, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %74
  %81 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #11
  br label %82

82:                                               ; preds = %80, %74
  %83 = phi i64* [ %81, %80 ], [ %76, %74 ]
  %84 = ptrtoint i64* %83 to i64
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %85 to i64*
  store i64* %86, i64** %75, align 8
  store i64 %68, i64* %83, align 8
  br label %87

87:                                               ; preds = %72, %82
  %88 = phi i64* [ %73, %72 ], [ %83, %82 ]
  %89 = load i64, i64* %0, align 8
  %90 = load i64, i64* %1, align 8
  %91 = add i64 %89, 11
  %92 = inttoptr i64 %91 to i32*
  %93 = trunc i64 %90 to i32
  store atomic volatile i32 %93, i32* %92 monotonic, align 4
  %94 = and i64 %90, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %119, label %96

96:                                               ; preds = %87
  %97 = and i64 %89, -262144
  %98 = or i64 %97, 8
  %99 = inttoptr i64 %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 262144
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %96
  %104 = or i64 %97, 16
  %105 = inttoptr i64 %104 to %"class.v8::internal::Heap"**
  %106 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %105, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %106, i64 %89, i64 %91, i64 %90) #11
  br label %107

107:                                              ; preds = %103, %96
  %108 = and i64 %90, -262144
  %109 = or i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 24
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %119, label %114

114:                                              ; preds = %107
  %115 = load i64, i64* %99, align 8
  %116 = and i64 %115, 24
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %114
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %89, i64 %91, i64 %90) #11
  br label %119

119:                                              ; preds = %87, %107, %114, %118
  %120 = load i64, i64* %0, align 8
  %121 = add i64 %120, 15
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, -8
  %125 = or i32 %124, 4
  store atomic volatile i32 %125, i32* %122 monotonic, align 4
  %126 = load i64, i64* %0, align 8
  %127 = add i64 %126, 15
  %128 = inttoptr i64 %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = and i32 %129, 8
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %119
  tail call void @_ZN2v88internal7Isolate19ReportPromiseRejectENS0_6HandleINS0_9JSPromiseEEENS2_INS0_6ObjectEEENS_18PromiseRejectEventE(%"class.v8::internal::Isolate"* %10, i64* %0, i64* %1, i32 0) #11
  br label %133

133:                                              ; preds = %119, %132
  %134 = tail call i64* @_ZN2v88internal9JSPromise23TriggerPromiseReactionsEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_NS0_15PromiseReaction4TypeE(%"class.v8::internal::Isolate"* %10, i64* %88, i64* %1, i32 1)
  ret i64* %134
}

declare void @_ZN2v88internal5Debug15OnPromiseRejectENS0_6HandleINS0_6ObjectEEES4_(%"class.v8::internal::Debug"*, i64*, i64*) local_unnamed_addr #1

declare void @_ZN2v88internal7Isolate18RunAllPromiseHooksENS_15PromiseHookTypeENS0_6HandleINS0_9JSPromiseEEENS3_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i32, i64*, i64*) local_unnamed_addr #1

declare void @_ZN2v88internal7Isolate19ReportPromiseRejectENS0_6HandleINS0_9JSPromiseEEENS2_INS0_6ObjectEEENS_18PromiseRejectEventE(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9JSPromise7ResolveENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LookupIterator", align 8
  %4 = load i64, i64* %0, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %12 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 160
  %13 = bitcast %"class.v8::internal::Factory"* %12 to i64*
  tail call void @_ZN2v88internal7Isolate18RunAllPromiseHooksENS_15PromiseHookTypeENS0_6HandleINS0_9JSPromiseEEENS3_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %10, i32 1, i64* %0, i64* %13) #11
  %14 = icmp eq i64* %0, %1
  br i1 %14, label %27, label %15

15:                                               ; preds = %2
  %16 = icmp eq i64* %0, null
  %17 = icmp eq i64* %1, null
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = load i64, i64* %1, align 8
  br label %30

21:                                               ; preds = %15
  %22 = load i64, i64* %0, align 8
  %23 = load i64, i64* %1, align 8
  %24 = trunc i64 %22 to i32
  %25 = trunc i64 %23 to i32
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %2, %21
  %28 = tail call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %11, i32 117, i64* %1, i64* null, i64* null) #11
  %29 = tail call i64* @_ZN2v88internal9JSPromise6RejectENS0_6HandleIS1_EENS2_INS0_6ObjectEEEb(i64* %0, i64* %28, i1 zeroext true)
  br label %317

30:                                               ; preds = %19, %21
  %31 = phi i64 [ %20, %19 ], [ %23, %21 ]
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %30
  %35 = and i64 %31, -4294967296
  %36 = add i64 %31, -1
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp ugt i16 %43, 185
  br i1 %44, label %47, label %45

45:                                               ; preds = %30, %34
  %46 = tail call i64* @_ZN2v88internal9JSPromise7FulfillENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %0, i64* %1)
  br label %317

47:                                               ; preds = %34
  %48 = load atomic i32, i32* %37 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %35, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp eq i16 %53, 1101
  br i1 %54, label %55, label %109

55:                                               ; preds = %47
  %56 = load atomic i32, i32* %37 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %35, %57
  %59 = add i64 %58, 15
  %60 = inttoptr i64 %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = or i64 %35, %62
  %64 = tail call zeroext i1 @_ZN2v88internal7Isolate14IsInAnyContextENS0_6ObjectEj(%"class.v8::internal::Isolate"* %10, i64 %63, i32 152) #11
  br i1 %64, label %65, label %109

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 617
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 11
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %72, label %109

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = and i64 %74, -4294967296
  %76 = add i64 %74, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 19
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %75, %84
  %86 = add i64 %85, 63
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %75, %89
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %92 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %91, align 8
  %93 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %72
  %95 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %92, i64 %90) #11
  br label %188

96:                                               ; preds = %72
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %100 = load i64*, i64** %99, align 8
  %101 = icmp eq i64* %98, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %96
  %103 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #11
  br label %104

104:                                              ; preds = %102, %96
  %105 = phi i64* [ %103, %102 ], [ %98, %96 ]
  %106 = ptrtoint i64* %105 to i64
  %107 = add i64 %106, 8
  %108 = inttoptr i64 %107 to i64*
  store i64* %108, i64** %97, align 8
  store i64 %90, i64* %105, align 8
  br label %188

109:                                              ; preds = %47, %55, %65
  %110 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 3704
  %111 = bitcast %"class.v8::internal::Factory"* %110 to i64*
  %112 = bitcast %"class.v8::internal::LookupIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %112) #11
  %113 = ptrtoint i64* %1 to i64
  %114 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 0
  %115 = icmp eq %"class.v8::internal::Factory"* %110, null
  br i1 %115, label %116, label %120

116:                                              ; preds = %109
  %117 = load i64, i64* null, align 536870912
  %118 = add i64 %117, -1
  %119 = inttoptr i64 %118 to i32*
  br label %141

120:                                              ; preds = %109
  %121 = load i64, i64* %111, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 4
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %121, -1
  %125 = inttoptr i64 %124 to i32*
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i64 %123, 4294967295
  %128 = icmp eq i64 %127, 0
  tail call void @llvm.assume(i1 %128) #11
  %129 = zext i32 %126 to i64
  %130 = or i64 %123, %129
  %131 = add i64 %130, 7
  %132 = inttoptr i64 %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = icmp eq i16 %133, 64
  br i1 %134, label %135, label %141

135:                                              ; preds = %120
  %136 = add i64 %121, 7
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %135, %120, %116
  %142 = phi i32* [ %119, %116 ], [ %125, %135 ], [ %125, %120 ]
  %143 = phi i64 [ %117, %116 ], [ %121, %135 ], [ %121, %120 ]
  br label %144

144:                                              ; preds = %141, %135
  %145 = phi i32* [ %142, %141 ], [ %125, %135 ]
  %146 = phi i64 [ %143, %141 ], [ %121, %135 ]
  %147 = phi i32 [ 3, %141 ], [ 0, %135 ]
  store i32 %147, i32* %114, align 8
  %148 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 1
  store i32 4, i32* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 2
  store i8 0, i8* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 3
  store i32 0, i32* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 4, i32 0
  store i32 0, i32* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %10, %"class.v8::internal::Isolate"** %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 6, i32 0, i32 0
  %154 = bitcast i64** %153 to %"class.v8::internal::Factory"**
  store %"class.v8::internal::Factory"* %110, %"class.v8::internal::Factory"** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 8, i32 0, i32 0
  store i64* %1, i64** %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 10
  %159 = bitcast %"class.v8::internal::Handle.1220"* %158 to i64*
  store i64 %113, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %3, i64 0, i32 11
  %161 = bitcast i64* %160 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 -1, i64 16, i1 false) #11
  %162 = and i64 %146, -4294967296
  %163 = load atomic i32, i32* %145 monotonic, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %162, %164
  %166 = add i64 %165, 7
  %167 = inttoptr i64 %166 to i16*
  %168 = load atomic i16, i16* %167 monotonic, align 2
  %169 = and i16 %168, -32
  %170 = icmp eq i16 %169, 32
  br i1 %170, label %171, label %175

171:                                              ; preds = %144
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 5, i32 0, i32 0, i32 0
  %173 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %172, align 8
  %174 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %173, %"class.v8::internal::Isolate"* %10, i64* %111) #11
  br label %175

175:                                              ; preds = %171, %144
  %176 = phi i64* [ %174, %171 ], [ %111, %144 ]
  store i64* %176, i64** %153, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %3) #11
  %177 = load i32, i32* %148, align 4
  %178 = icmp eq i32 %177, 4
  br i1 %178, label %179, label %184

179:                                              ; preds = %175
  %180 = bitcast %"class.v8::internal::Isolate"** %152 to %"class.v8::internal::Factory"**
  %181 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %181, i64 160
  %183 = bitcast %"class.v8::internal::Factory"* %182 to i64*
  br label %186

184:                                              ; preds = %175
  %185 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %3, i1 zeroext false) #11
  br label %186

186:                                              ; preds = %179, %184
  %187 = phi i64* [ %185, %184 ], [ %183, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %112) #11
  br label %188

188:                                              ; preds = %104, %94, %186
  %189 = phi i64* [ %187, %186 ], [ %95, %94 ], [ %105, %104 ]
  %190 = icmp eq i64* %189, null
  br i1 %190, label %191, label %227

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 2
  %195 = ptrtoint %"class.v8::internal::Heap"* %194 to i64
  %196 = add i64 %195, -41416
  %197 = inttoptr i64 %196 to %"class.v8::internal::Isolate"*
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %197, i64 0, i32 0, i32 7, i32 0, i64 33
  %199 = load i64, i64* %198, align 8
  %200 = trunc i64 %193 to i32
  %201 = trunc i64 %199 to i32
  %202 = icmp eq i32 %200, %201
  br i1 %202, label %317, label %203

203:                                              ; preds = %191
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %205 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %204, align 8
  %206 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %203
  %208 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %205, i64 %193) #11
  br label %222

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %211 = load i64*, i64** %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %213 = load i64*, i64** %212, align 8
  %214 = icmp eq i64* %211, %213
  br i1 %214, label %215, label %217

215:                                              ; preds = %209
  %216 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #11
  br label %217

217:                                              ; preds = %215, %209
  %218 = phi i64* [ %216, %215 ], [ %211, %209 ]
  %219 = ptrtoint i64* %218 to i64
  %220 = add i64 %219, 8
  %221 = inttoptr i64 %220 to i64*
  store i64* %221, i64** %210, align 8
  store i64 %193, i64* %218, align 8
  br label %222

222:                                              ; preds = %207, %217
  %223 = phi i64* [ %208, %207 ], [ %218, %217 ]
  %224 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 5
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %192, align 8
  %226 = call i64* @_ZN2v88internal9JSPromise6RejectENS0_6HandleIS1_EENS2_INS0_6ObjectEEEb(i64* %0, i64* %223, i1 zeroext false)
  br label %317

227:                                              ; preds = %188
  %228 = load i64, i64* %189, align 8
  %229 = and i64 %228, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %243, label %231

231:                                              ; preds = %227
  %232 = and i64 %228, -4294967296
  %233 = add i64 %228, -1
  %234 = inttoptr i64 %233 to i32*
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = zext i32 %235 to i64
  %237 = or i64 %232, %236
  %238 = add i64 %237, 9
  %239 = inttoptr i64 %238 to i8*
  %240 = load atomic i8, i8* %239 monotonic, align 1
  %241 = and i8 %240, 2
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %231, %227
  %244 = call i64* @_ZN2v88internal9JSPromise7FulfillENS0_6HandleIS1_EENS2_INS0_6ObjectEEE(i64* %0, i64* %1)
  br label %317

245:                                              ; preds = %231
  %246 = call i64* @_ZN2v88internal10JSReceiver22GetContextForMicrotaskENS0_6HandleIS1_EE(i64* nonnull %189) #11
  %247 = icmp eq i64* %246, null
  br i1 %247, label %248, label %280

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load i64, i64* %249, align 8
  %251 = and i64 %250, -4294967296
  %252 = add i64 %250, -1
  %253 = inttoptr i64 %252 to i32*
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = zext i32 %254 to i64
  %256 = or i64 %251, %255
  %257 = add i64 %256, 19
  %258 = inttoptr i64 %257 to i32*
  %259 = load i32, i32* %258, align 4
  %260 = zext i32 %259 to i64
  %261 = or i64 %251, %260
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %263 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %262, align 8
  %264 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %263, null
  br i1 %264, label %267, label %265

265:                                              ; preds = %248
  %266 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %263, i64 %261) #11
  br label %280

267:                                              ; preds = %248
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %269 = load i64*, i64** %268, align 8
  %270 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %271 = load i64*, i64** %270, align 8
  %272 = icmp eq i64* %269, %271
  br i1 %272, label %273, label %275

273:                                              ; preds = %267
  %274 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #11
  br label %275

275:                                              ; preds = %273, %267
  %276 = phi i64* [ %274, %273 ], [ %269, %267 ]
  %277 = ptrtoint i64* %276 to i64
  %278 = add i64 %277, 8
  %279 = inttoptr i64 %278 to i64*
  store i64* %279, i64** %268, align 8
  store i64 %261, i64* %276, align 8
  br label %280

280:                                              ; preds = %275, %265, %245
  %281 = phi i64* [ %246, %245 ], [ %266, %265 ], [ %276, %275 ]
  %282 = call i64* @_ZN2v88internal7Factory32NewPromiseResolveThenableJobTaskENS0_6HandleINS0_9JSPromiseEEENS2_INS0_10JSReceiverEEES6_NS2_INS0_7ContextEEE(%"class.v8::internal::Factory"* %11, i64* %0, i64* %1, i64* nonnull %189, i64* %281) #11
  %283 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 68
  %284 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %283, align 8
  %285 = getelementptr inbounds %"class.v8::internal::Debug", %"class.v8::internal::Debug"* %284, i64 0, i32 1
  %286 = load i8, i8* %285, align 8, !range !2
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %309, label %288

288:                                              ; preds = %280
  %289 = load i64, i64* %1, align 8
  %290 = and i64 %289, 1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %309, label %292

292:                                              ; preds = %288
  %293 = and i64 %289, -4294967296
  %294 = add i64 %289, -1
  %295 = inttoptr i64 %294 to i32*
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = zext i32 %296 to i64
  %298 = or i64 %293, %297
  %299 = add i64 %298, 7
  %300 = inttoptr i64 %299 to i16*
  %301 = load atomic i16, i16* %300 monotonic, align 2
  %302 = icmp eq i16 %301, 1101
  br i1 %302, label %303, label %309

303:                                              ; preds = %292
  %304 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 4088
  %305 = bitcast %"class.v8::internal::Factory"* %304 to i64*
  %306 = call i64* @_ZN2v88internal6Object11SetPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEES5_NS0_11StoreOriginENS_5MaybeINS0_11ShouldThrowEEE(%"class.v8::internal::Isolate"* %10, i64* %1, i64* %305, i64* %0, i32 0, i64 0)
  %307 = icmp eq i64* %306, null
  br i1 %307, label %308, label %309, !prof !3

308:                                              ; preds = %303
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.435, i64 0, i64 0)) #16
  unreachable

309:                                              ; preds = %280, %288, %303, %292
  %310 = load i64, i64* %281, align 8
  %311 = add i64 %310, 1027
  %312 = inttoptr i64 %311 to %"class.v8::internal::MicrotaskQueue"**
  %313 = load %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"** %312, align 1
  %314 = icmp eq %"class.v8::internal::MicrotaskQueue"* %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %309
  %316 = load i64, i64* %282, align 8
  call void @_ZN2v88internal14MicrotaskQueue16EnqueueMicrotaskENS0_9MicrotaskE(%"class.v8::internal::MicrotaskQueue"* nonnull %313, i64 %316) #11
  br label %317

317:                                              ; preds = %191, %222, %243, %309, %315, %45, %27
  %318 = phi i64* [ %29, %27 ], [ %46, %45 ], [ %244, %243 ], [ %226, %222 ], [ null, %191 ], [ %13, %309 ], [ %13, %315 ]
  ret i64* %318
}

declare zeroext i1 @_ZN2v88internal7Isolate14IsInAnyContextENS0_6ObjectEj(%"class.v8::internal::Isolate"*, i64, i32) local_unnamed_addr #1

declare i64* @_ZN2v88internal10JSReceiver22GetContextForMicrotaskENS0_6HandleIS1_EE(i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal7Factory32NewPromiseResolveThenableJobTaskENS0_6HandleINS0_9JSPromiseEEENS2_INS0_10JSReceiverEEES6_NS2_INS0_7ContextEEE(%"class.v8::internal::Factory"*, i64*, i64*, i64*, i64*) local_unnamed_addr #1

declare void @_ZN2v88internal14MicrotaskQueue16EnqueueMicrotaskENS0_9MicrotaskE(%"class.v8::internal::MicrotaskQueue"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9StringSet3NewEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 0) #11
  %3 = icmp sgt i32 %2, 4
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = icmp sgt i32 %2, 134217722
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %2, %4 ], [ 4, %1 ]
  %10 = add nuw nsw i32 %9, 3
  %11 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 14
  %13 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %11, i64* %12, i32 %10, i8 zeroext 0) #11
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i32*
  store atomic volatile i32 0, i32* %16 monotonic, align 4
  %17 = load i64, i64* %13, align 8
  %18 = add i64 %17, 11
  %19 = inttoptr i64 %18 to i32*
  store atomic volatile i32 0, i32* %19 monotonic, align 4
  %20 = load i64, i64* %13, align 8
  %21 = shl i32 %9, 1
  %22 = add i64 %20, 15
  %23 = inttoptr i64 %22 to i32*
  store atomic volatile i32 %21, i32* %23 monotonic, align 4
  ret i64* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9StringSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6StringEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = load i64, i64* %1, align 8
  %8 = load i64, i64* %2, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = lshr i32 %13, 2
  br label %22

18:                                               ; preds = %3
  %19 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %20, align 8
  %21 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %22

22:                                               ; preds = %18, %16
  %23 = phi i32 [ %17, %16 ], [ %21, %18 ]
  %24 = add i64 %7, 15
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = ashr i32 %26, 1
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i32 %27, -1
  %33 = and i32 %32, %23
  %34 = shl i32 %33, 2
  %35 = add i32 %34, 12
  %36 = sext i32 %35 to i64
  %37 = add i64 %7, 7
  %38 = add i64 %37, %36
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = trunc i64 %29 to i32
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %93, label %43

43:                                               ; preds = %22
  %44 = trunc i64 %31 to i32
  %45 = bitcast %"class.v8::internal::String"* %6 to i8*
  %46 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = trunc i64 %8 to i32
  %48 = and i64 %8, -4294967296
  %49 = add i64 %8, -1
  %50 = inttoptr i64 %49 to i32*
  br label %51

51:                                               ; preds = %82, %43
  %52 = phi i32 [ %40, %43 ], [ %91, %82 ]
  %53 = phi i32 [ %33, %43 ], [ %85, %82 ]
  %54 = phi i32 [ 1, %43 ], [ %83, %82 ]
  %55 = zext i32 %52 to i64
  %56 = or i64 %10, %55
  %57 = icmp eq i32 %52, %44
  br i1 %57, label %82, label %58

58:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  store i64 %8, i64* %46, align 8
  %59 = icmp eq i32 %52, %47
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  br label %184

61:                                               ; preds = %58
  %62 = load atomic i32, i32* %50 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %48, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp ult i16 %67, 32
  br i1 %68, label %69, label %80

69:                                               ; preds = %61
  %70 = add i64 %56, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %10, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = icmp ult i16 %77, 32
  br i1 %78, label %79, label %80

79:                                               ; preds = %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  br label %82

80:                                               ; preds = %69, %61
  %81 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %6, i64 %56) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  br i1 %81, label %184, label %82

82:                                               ; preds = %80, %79, %51
  %83 = add i32 %54, 1
  %84 = add i32 %54, %53
  %85 = and i32 %84, %32
  %86 = shl i32 %85, 2
  %87 = add i32 %86, 12
  %88 = sext i32 %87 to i64
  %89 = add i64 %37, %88
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = icmp eq i32 %91, %41
  br i1 %92, label %93, label %51

93:                                               ; preds = %82, %22
  %94 = call i64* @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %95 = load i64, i64* %2, align 8
  %96 = add i64 %95, 3
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %93
  %102 = lshr i32 %98, 2
  br label %107

103:                                              ; preds = %93
  %104 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  %105 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %95, i64* %105, align 8
  %106 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  br label %107

107:                                              ; preds = %101, %103
  %108 = phi i32 [ %102, %101 ], [ %106, %103 ]
  %109 = load i64, i64* %94, align 8
  %110 = add i64 %109, 15
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = ashr i32 %112, 1
  %114 = add nsw i32 %113, -1
  %115 = and i32 %114, %108
  %116 = shl i32 %115, 2
  %117 = add i32 %116, 12
  %118 = sext i32 %117 to i64
  %119 = add i64 %109, 7
  %120 = add i64 %119, %118
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = load i64, i64* %28, align 8
  %124 = trunc i64 %123 to i32
  %125 = icmp eq i32 %122, %124
  br i1 %125, label %147, label %126

126:                                              ; preds = %107
  %127 = load i64, i64* %30, align 8
  %128 = trunc i64 %127 to i32
  %129 = icmp eq i32 %122, %128
  br i1 %129, label %147, label %133

130:                                              ; preds = %133
  %131 = add i32 %134, 1
  %132 = icmp eq i32 %143, %128
  br i1 %132, label %145, label %133

133:                                              ; preds = %126, %130
  %134 = phi i32 [ %131, %130 ], [ 1, %126 ]
  %135 = phi i32 [ %137, %130 ], [ %115, %126 ]
  %136 = add i32 %135, %134
  %137 = and i32 %136, %114
  %138 = shl i32 %137, 2
  %139 = add i32 %138, 12
  %140 = sext i32 %139 to i64
  %141 = add i64 %119, %140
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = icmp eq i32 %143, %124
  br i1 %144, label %145, label %130

145:                                              ; preds = %133, %130
  %146 = inttoptr i64 %141 to i32*
  br label %147

147:                                              ; preds = %145, %107, %126
  %148 = phi i32* [ %121, %107 ], [ %121, %126 ], [ %146, %145 ]
  %149 = phi i64 [ %120, %107 ], [ %120, %126 ], [ %141, %145 ]
  %150 = load i64, i64* %2, align 8
  %151 = trunc i64 %150 to i32
  store atomic volatile i32 %151, i32* %148 monotonic, align 4
  %152 = and i64 %150, 1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %177, label %154

154:                                              ; preds = %147
  %155 = and i64 %109, -262144
  %156 = or i64 %155, 8
  %157 = inttoptr i64 %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = and i64 %158, 262144
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %165, label %161

161:                                              ; preds = %154
  %162 = or i64 %155, 16
  %163 = inttoptr i64 %162 to %"class.v8::internal::Heap"**
  %164 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %163, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %164, i64 %109, i64 %149, i64 %150) #11
  br label %165

165:                                              ; preds = %161, %154
  %166 = and i64 %150, -262144
  %167 = or i64 %166, 8
  %168 = inttoptr i64 %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = and i64 %169, 24
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %177, label %172

172:                                              ; preds = %165
  %173 = load i64, i64* %157, align 8
  %174 = and i64 %173, 24
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %172
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %109, i64 %149, i64 %150) #11
  br label %177

177:                                              ; preds = %147, %165, %172, %176
  %178 = load i64, i64* %94, align 8
  %179 = add i64 %178, 7
  %180 = inttoptr i64 %179 to i32*
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = add i32 %181, 2
  %183 = and i32 %182, -2
  store atomic volatile i32 %183, i32* %180 monotonic, align 4
  br label %184

184:                                              ; preds = %80, %60, %177
  %185 = phi i64* [ %94, %177 ], [ %1, %60 ], [ %1, %80 ]
  ret i64* %185
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal9StringSet3HasEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringSet"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::StringSet", %"class.v8::internal::StringSet"* %0, i64 0, i32 0
  %5 = load i64, i64* %2, align 8
  %6 = tail call i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE9FindEntryINS0_7IsolateEEENS0_13InternalIndexEPT_NS0_6StringE(%"class.v8::internal::HashTable"* %4, %"class.v8::internal::Isolate"* %1, i64 %5)
  %7 = icmp ne i64 %6, -1
  ret i1 %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal9HashTableINS0_9StringSetENS0_14StringSetShapeEE9FindEntryINS0_7IsolateEEENS0_13InternalIndexEPT_NS0_6StringE(%"class.v8::internal::HashTable"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %2, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = lshr i32 %10, 2
  br label %19

15:                                               ; preds = %3
  %16 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %17, align 8
  %18 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %19

19:                                               ; preds = %13, %15
  %20 = phi i32 [ %14, %13 ], [ %18, %15 ]
  %21 = getelementptr inbounds %"class.v8::internal::HashTable", %"class.v8::internal::HashTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = ashr i32 %25, 1
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i32 %26, -1
  %32 = and i32 %31, %20
  %33 = shl i32 %32, 2
  %34 = add i32 %33, 12
  %35 = sext i32 %34 to i64
  %36 = add i64 %22, 7
  %37 = add i64 %36, %35
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = trunc i64 %28 to i32
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %100, label %42

42:                                               ; preds = %19
  %43 = trunc i64 %30 to i32
  %44 = bitcast %"class.v8::internal::String"* %5 to i8*
  %45 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = trunc i64 %2 to i32
  %47 = and i64 %2, -4294967296
  %48 = add i64 %2, -1
  %49 = inttoptr i64 %48 to i32*
  br label %50

50:                                               ; preds = %85, %42
  %51 = phi i64 [ %22, %42 ], [ %86, %85 ]
  %52 = phi i32 [ %39, %42 ], [ %96, %85 ]
  %53 = phi i32 [ %32, %42 ], [ %89, %85 ]
  %54 = phi i32 [ 1, %42 ], [ %87, %85 ]
  %55 = zext i32 %52 to i64
  %56 = or i64 %7, %55
  %57 = icmp eq i32 %52, %43
  br i1 %57, label %85, label %58

58:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  store i64 %2, i64* %45, align 8
  %59 = icmp eq i32 %52, %46
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = zext i32 %53 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  br label %100

62:                                               ; preds = %58
  %63 = load atomic i32, i32* %49 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %47, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp ult i16 %68, 32
  br i1 %69, label %70, label %81

70:                                               ; preds = %62
  %71 = add i64 %56, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %7, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp ult i16 %78, 32
  br i1 %79, label %80, label %81

80:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  br label %85

81:                                               ; preds = %70, %62
  %82 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %5, i64 %56) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  br i1 %82, label %98, label %83

83:                                               ; preds = %81
  %84 = load i64, i64* %21, align 8
  br label %85

85:                                               ; preds = %83, %80, %50
  %86 = phi i64 [ %84, %83 ], [ %51, %80 ], [ %51, %50 ]
  %87 = add i32 %54, 1
  %88 = add i32 %54, %53
  %89 = and i32 %88, %31
  %90 = shl i32 %89, 2
  %91 = add i32 %90, 12
  %92 = sext i32 %91 to i64
  %93 = add nsw i64 %92, 7
  %94 = add i64 %93, %86
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = icmp eq i32 %96, %40
  br i1 %97, label %100, label %50

98:                                               ; preds = %81
  %99 = zext i32 %53 to i64
  br label %100

100:                                              ; preds = %85, %19, %60, %98
  %101 = phi i64 [ %61, %60 ], [ -1, %19 ], [ %99, %98 ], [ -1, %85 ]
  ret i64 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal13ObjectHashSet3AddEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::JSReceiver", align 8
  %6 = load i64, i64* %2, align 8
  %7 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %6) #11
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.v8::internal::JSReceiver"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %12, align 8
  %13 = call i64 @_ZN2v88internal10JSReceiver23GetOrCreateIdentityHashEPNS0_7IsolateE(%"class.v8::internal::JSReceiver"* nonnull %5, %"class.v8::internal::Isolate"* %0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i64 [ %13, %10 ], [ %7, %3 ]
  %16 = trunc i64 %15 to i32
  %17 = ashr i32 %16, 1
  %18 = load i64, i64* %1, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %18, 15
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = ashr i32 %23, 1
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i32 %24, -1
  %28 = and i32 %27, %17
  %29 = shl i32 %28, 2
  %30 = add i32 %29, 12
  %31 = sext i32 %30 to i64
  %32 = add i64 %18, 7
  %33 = add i64 %32, %31
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = trunc i64 %26 to i32
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %61, label %38

38:                                               ; preds = %14
  %39 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4 to i8*
  %40 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0
  br label %42

42:                                               ; preds = %50, %38
  %43 = phi i32 [ %35, %38 ], [ %59, %50 ]
  %44 = phi i32 [ %28, %38 ], [ %53, %50 ]
  %45 = phi i32 [ 1, %38 ], [ %51, %50 ]
  %46 = zext i32 %43 to i64
  %47 = or i64 %20, %46
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %48 = load i64, i64* %2, align 8
  store i64 %48, i64* %40, align 8
  %49 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %41, i64 %47) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  br i1 %49, label %139, label %50

50:                                               ; preds = %42
  %51 = add i32 %45, 1
  %52 = add i32 %45, %44
  %53 = and i32 %52, %27
  %54 = shl i32 %53, 2
  %55 = add i32 %54, 12
  %56 = sext i32 %55 to i64
  %57 = add i64 %32, %56
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = icmp eq i32 %59, %36
  br i1 %60, label %61, label %42

61:                                               ; preds = %50, %14
  %62 = call i64* @_ZN2v88internal9HashTableINS0_13ObjectHashSetENS0_18ObjectHashSetShapeEE14EnsureCapacityINS0_7IsolateEEENS0_6HandleIS2_EEPT_S8_iNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 1, i8 zeroext 0)
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 15
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = ashr i32 %66, 1
  %68 = add nsw i32 %67, -1
  %69 = and i32 %68, %17
  %70 = shl i32 %69, 2
  %71 = add i32 %70, 12
  %72 = sext i32 %71 to i64
  %73 = add i64 %63, 7
  %74 = add i64 %73, %72
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = load i64, i64* %25, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %102, label %80

80:                                               ; preds = %61
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = icmp eq i32 %76, %83
  br i1 %84, label %102, label %88

85:                                               ; preds = %88
  %86 = add i32 %89, 1
  %87 = icmp eq i32 %98, %83
  br i1 %87, label %100, label %88

88:                                               ; preds = %80, %85
  %89 = phi i32 [ %86, %85 ], [ 1, %80 ]
  %90 = phi i32 [ %92, %85 ], [ %69, %80 ]
  %91 = add i32 %90, %89
  %92 = and i32 %91, %68
  %93 = shl i32 %92, 2
  %94 = add i32 %93, 12
  %95 = sext i32 %94 to i64
  %96 = add i64 %73, %95
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = icmp eq i32 %98, %78
  br i1 %99, label %100, label %85

100:                                              ; preds = %88, %85
  %101 = inttoptr i64 %96 to i32*
  br label %102

102:                                              ; preds = %100, %61, %80
  %103 = phi i32* [ %75, %61 ], [ %75, %80 ], [ %101, %100 ]
  %104 = phi i64 [ %74, %61 ], [ %74, %80 ], [ %96, %100 ]
  %105 = load i64, i64* %2, align 8
  %106 = trunc i64 %105 to i32
  store atomic volatile i32 %106, i32* %103 monotonic, align 4
  %107 = and i64 %105, 1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %132, label %109

109:                                              ; preds = %102
  %110 = and i64 %63, -262144
  %111 = or i64 %110, 8
  %112 = inttoptr i64 %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 262144
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %109
  %117 = or i64 %110, 16
  %118 = inttoptr i64 %117 to %"class.v8::internal::Heap"**
  %119 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %118, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %119, i64 %63, i64 %104, i64 %105) #11
  br label %120

120:                                              ; preds = %116, %109
  %121 = and i64 %105, -262144
  %122 = or i64 %121, 8
  %123 = inttoptr i64 %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %124, 24
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %120
  %128 = load i64, i64* %112, align 8
  %129 = and i64 %128, 24
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %63, i64 %104, i64 %105) #11
  br label %132

132:                                              ; preds = %102, %120, %127, %131
  %133 = load i64, i64* %62, align 8
  %134 = add i64 %133, 7
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = add i32 %136, 2
  %138 = and i32 %137, -2
  store atomic volatile i32 %138, i32* %135 monotonic, align 4
  br label %139

139:                                              ; preds = %42, %132
  %140 = phi i64* [ %62, %132 ], [ %1, %42 ]
  ret i64* %140
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal22SimpleNumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i32, i64*) local_unnamed_addr #0 align 2 {
  %5 = tail call i64* @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EEjNS7_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i64* %3, i32 0)
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16NumberDictionary18UpdateMaxNumberKeyEjNS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::NumberDictionary"* nocapture readonly, i32, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 19
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 3
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %40, label %12

12:                                               ; preds = %3
  %13 = icmp ugt i32 %1, 536870911
  br i1 %13, label %14, label %26

14:                                               ; preds = %12
  %15 = icmp eq i64* %2, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = load i64, i64* %2, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0
  call void @_ZN2v88internal8JSObject19RequireSlowElementsENS0_16NumberDictionaryE(%"class.v8::internal::JSObject"* nonnull %20, i64 %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, 19
  %23 = inttoptr i64 %22 to i32*
  br label %24

24:                                               ; preds = %16, %14
  %25 = phi i32* [ %23, %16 ], [ %8, %14 ]
  store atomic volatile i32 2, i32* %25 monotonic, align 4
  br label %40

26:                                               ; preds = %12
  %27 = load atomic i32, i32* %8 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  %31 = load atomic i32, i32* %8 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = ashr i32 %31, 1
  %35 = lshr i32 %34, 1
  %36 = select i1 %33, i32 %35, i32 0
  %37 = icmp ult i32 %36, %1
  br i1 %37, label %38, label %40

38:                                               ; preds = %30, %26
  %39 = shl i32 %1, 2
  store atomic volatile i32 %39, i32* %8 monotonic, align 4
  br label %40

40:                                               ; preds = %30, %38, %3, %24
  ret void
}

declare void @_ZN2v88internal8JSObject19RequireSlowElementsENS0_16NumberDictionaryE(%"class.v8::internal::JSObject"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i64* readonly, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %8 = tail call i64* @_ZN2v88internal10DictionaryINS0_16NumberDictionaryENS0_21NumberDictionaryShapeEE5AtPutEPNS0_7IsolateENS0_6HandleIS2_EEjNS7_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %0, i64* %1, i32 %2, i64* %3, i32 %5)
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 3
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %39, label %15

15:                                               ; preds = %6
  %16 = icmp ugt i32 %2, 536870911
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = icmp eq i64* %4, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = load i64, i64* %4, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal8JSObject19RequireSlowElementsENS0_16NumberDictionaryE(%"class.v8::internal::JSObject"* nonnull %23, i64 %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %24

24:                                               ; preds = %19, %17
  store atomic volatile i32 2, i32* %11 monotonic, align 4
  br label %39

25:                                               ; preds = %15
  %26 = load atomic i32, i32* %11 monotonic, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %25
  %30 = load atomic i32, i32* %11 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = ashr i32 %30, 1
  %34 = lshr i32 %33, 1
  %35 = select i1 %32, i32 %34, i32 0
  %36 = icmp ult i32 %35, %2
  br i1 %36, label %37, label %39

37:                                               ; preds = %29, %25
  %38 = shl i32 %2, 2
  store atomic volatile i32 %38, i32* %11 monotonic, align 4
  br label %39

39:                                               ; preds = %6, %24, %29, %37
  ret i64* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16NumberDictionary12CopyValuesToENS0_10FixedArrayE(%"class.v8::internal::NumberDictionary"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::NumberDictionary", %"class.v8::internal::NumberDictionary"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %6 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %5, i64 0, i32 1, i64 0
  br label %21

13:                                               ; preds = %7, %2
  %14 = and i64 %4, -262144
  %15 = or i64 %14, 16
  %16 = inttoptr i64 %15 to i64*
  %17 = load i64, i64* %16, align 16
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %21

21:                                               ; preds = %11, %13
  %22 = phi i64* [ %20, %13 ], [ %12, %11 ]
  %23 = and i64 %1, -262144
  %24 = or i64 %23, 8
  %25 = inttoptr i64 %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 262144
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %21
  %30 = and i64 %26, 24
  %31 = icmp eq i64 %30, 0
  %32 = select i1 %31, i32 4, i32 0
  br label %33

33:                                               ; preds = %21, %29
  %34 = phi i32 [ 4, %21 ], [ %32, %29 ]
  %35 = add i64 %4, 15
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = ashr i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %84, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds i64, i64* %22, i64 4
  %43 = getelementptr inbounds i64, i64* %22, i64 5
  %44 = add i64 %1, 7
  %45 = icmp eq i32 %34, 0
  %46 = or i64 %23, 16
  %47 = inttoptr i64 %46 to %"class.v8::internal::Heap"**
  br i1 %45, label %48, label %85

48:                                               ; preds = %41, %82
  %49 = phi i64 [ %83, %82 ], [ %4, %41 ]
  %50 = phi i32 [ %79, %82 ], [ 0, %41 ]
  %51 = phi i64 [ %80, %82 ], [ 0, %41 ]
  %52 = mul i64 %51, 51539607552
  %53 = add i64 %52, 68719476736
  %54 = ashr exact i64 %53, 32
  %55 = add nsw i64 %54, 7
  %56 = add i64 %55, %49
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = load i64, i64* %42, align 8
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %78, label %62

62:                                               ; preds = %48
  %63 = load i64, i64* %43, align 8
  %64 = trunc i64 %63 to i32
  %65 = icmp eq i32 %58, %64
  br i1 %65, label %78, label %66

66:                                               ; preds = %62
  %67 = add nsw i32 %50, 1
  %68 = add i64 %52, 85899345920
  %69 = ashr exact i64 %68, 32
  %70 = add nsw i64 %69, 7
  %71 = add i64 %70, %49
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = shl i32 %50, 2
  %75 = sext i32 %74 to i64
  %76 = add i64 %44, %75
  %77 = inttoptr i64 %76 to i32*
  store atomic volatile i32 %73, i32* %77 monotonic, align 4
  br label %78

78:                                               ; preds = %66, %62, %48
  %79 = phi i32 [ %67, %66 ], [ %50, %62 ], [ %50, %48 ]
  %80 = add i64 %51, 1
  %81 = icmp eq i64 %80, %39
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = load i64, i64* %3, align 8
  br label %48

84:                                               ; preds = %138, %78, %33
  ret void

85:                                               ; preds = %41, %142
  %86 = phi i64 [ %143, %142 ], [ %4, %41 ]
  %87 = phi i32 [ %139, %142 ], [ 0, %41 ]
  %88 = phi i64 [ %140, %142 ], [ 0, %41 ]
  %89 = mul i64 %88, 51539607552
  %90 = add i64 %89, 68719476736
  %91 = ashr exact i64 %90, 32
  %92 = add nsw i64 %91, 7
  %93 = add i64 %92, %86
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = load i64, i64* %42, align 8
  %97 = trunc i64 %96 to i32
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %138, label %99

99:                                               ; preds = %85
  %100 = load i64, i64* %43, align 8
  %101 = trunc i64 %100 to i32
  %102 = icmp eq i32 %95, %101
  br i1 %102, label %138, label %103

103:                                              ; preds = %99
  %104 = add nsw i32 %87, 1
  %105 = and i64 %86, -4294967296
  %106 = add i64 %89, 85899345920
  %107 = ashr exact i64 %106, 32
  %108 = add nsw i64 %107, 7
  %109 = add i64 %108, %86
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %105, %112
  %114 = shl i32 %87, 2
  %115 = sext i32 %114 to i64
  %116 = add i64 %44, %115
  %117 = inttoptr i64 %116 to i32*
  store atomic volatile i32 %111, i32* %117 monotonic, align 4
  %118 = and i64 %112, 1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %138, label %120

120:                                              ; preds = %103
  %121 = load i64, i64* %25, align 8
  %122 = and i64 %121, 262144
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %47, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %125, i64 %1, i64 %116, i64 %113) #11
  br label %126

126:                                              ; preds = %120, %124
  %127 = and i64 %113, -262144
  %128 = or i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = and i64 %130, 24
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %138, label %133

133:                                              ; preds = %126
  %134 = load i64, i64* %25, align 8
  %135 = and i64 %134, 24
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %133
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %1, i64 %116, i64 %113) #11
  br label %138

138:                                              ; preds = %103, %85, %99, %137, %133, %126
  %139 = phi i32 [ %104, %103 ], [ %104, %126 ], [ %104, %133 ], [ %104, %137 ], [ %87, %99 ], [ %87, %85 ]
  %140 = add i64 %88, 1
  %141 = icmp eq i64 %140, %39
  br i1 %141, label %84, label %142

142:                                              ; preds = %138
  %143 = load i64, i64* %3, align 8
  br label %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5JSSet10InitializeENS0_6HandleIS1_EEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %4 = tail call i64* @_ZN2v88internal7Factory17NewOrderedHashSetEv(%"class.v8::internal::Factory"* %3) #11
  %5 = load i64, i64* %0, align 8
  %6 = load i64, i64* %4, align 8
  %7 = add i64 %5, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %6 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = and i64 %6, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %2
  %13 = and i64 %5, -262144
  %14 = or i64 %13, 8
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 262144
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = or i64 %13, 16
  %21 = inttoptr i64 %20 to %"class.v8::internal::Heap"**
  %22 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %21, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %22, i64 %5, i64 %7, i64 %6) #11
  br label %23

23:                                               ; preds = %19, %12
  %24 = and i64 %6, -262144
  %25 = or i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 24
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %23
  %31 = load i64, i64* %15, align 8
  %32 = and i64 %31, 24
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %5, i64 %7, i64 %6) #11
  br label %35

35:                                               ; preds = %2, %23, %30, %34
  ret void
}

declare i64* @_ZN2v88internal7Factory17NewOrderedHashSetEv(%"class.v8::internal::Factory"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5JSSet5ClearEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %11 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %12 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %11, i64 %9) #11
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %23

23:                                               ; preds = %21, %15
  %24 = phi i64* [ %22, %21 ], [ %17, %15 ]
  %25 = ptrtoint i64* %24 to i64
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %26 to i64*
  store i64* %27, i64** %16, align 8
  store i64 %9, i64* %24, align 8
  br label %28

28:                                               ; preds = %13, %23
  %29 = phi i64* [ %14, %13 ], [ %24, %23 ]
  %30 = tail call i64* @_ZN2v88internal16OrderedHashTableINS0_14OrderedHashSetELi1EE5ClearEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"* %0, i64* %29) #11
  %31 = load i64, i64* %1, align 8
  %32 = load i64, i64* %30, align 8
  %33 = add i64 %31, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = trunc i64 %32 to i32
  store atomic volatile i32 %35, i32* %34 monotonic, align 4
  %36 = and i64 %32, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %61, label %38

38:                                               ; preds = %28
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 262144
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %38
  %46 = or i64 %39, 16
  %47 = inttoptr i64 %46 to %"class.v8::internal::Heap"**
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %47, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %48, i64 %31, i64 %33, i64 %32) #11
  br label %49

49:                                               ; preds = %45, %38
  %50 = and i64 %32, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 24
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %49
  %57 = load i64, i64* %41, align 8
  %58 = and i64 %57, 24
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %56
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %33, i64 %32) #11
  br label %61

61:                                               ; preds = %28, %49, %56, %60
  ret void
}

declare i64* @_ZN2v88internal16OrderedHashTableINS0_14OrderedHashSetELi1EE5ClearEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal14OrderedHashSet6RehashEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5JSMap10InitializeENS0_6HandleIS1_EEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %4 = tail call i64* @_ZN2v88internal7Factory17NewOrderedHashMapEv(%"class.v8::internal::Factory"* %3) #11
  %5 = load i64, i64* %0, align 8
  %6 = load i64, i64* %4, align 8
  %7 = add i64 %5, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = trunc i64 %6 to i32
  store atomic volatile i32 %9, i32* %8 monotonic, align 4
  %10 = and i64 %6, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %2
  %13 = and i64 %5, -262144
  %14 = or i64 %13, 8
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 262144
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = or i64 %13, 16
  %21 = inttoptr i64 %20 to %"class.v8::internal::Heap"**
  %22 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %21, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %22, i64 %5, i64 %7, i64 %6) #11
  br label %23

23:                                               ; preds = %19, %12
  %24 = and i64 %6, -262144
  %25 = or i64 %24, 8
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 24
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %23
  %31 = load i64, i64* %15, align 8
  %32 = and i64 %31, 24
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %5, i64 %7, i64 %6) #11
  br label %35

35:                                               ; preds = %2, %23, %30, %34
  ret void
}

declare i64* @_ZN2v88internal7Factory17NewOrderedHashMapEv(%"class.v8::internal::Factory"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal5JSMap5ClearEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %11 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %10, align 8
  %12 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %11, i64 %9) #11
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %23

23:                                               ; preds = %21, %15
  %24 = phi i64* [ %22, %21 ], [ %17, %15 ]
  %25 = ptrtoint i64* %24 to i64
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %26 to i64*
  store i64* %27, i64** %16, align 8
  store i64 %9, i64* %24, align 8
  br label %28

28:                                               ; preds = %13, %23
  %29 = phi i64* [ %14, %13 ], [ %24, %23 ]
  %30 = tail call i64* @_ZN2v88internal16OrderedHashTableINS0_14OrderedHashMapELi2EE5ClearEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"* %0, i64* %29) #11
  %31 = load i64, i64* %1, align 8
  %32 = load i64, i64* %30, align 8
  %33 = add i64 %31, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = trunc i64 %32 to i32
  store atomic volatile i32 %35, i32* %34 monotonic, align 4
  %36 = and i64 %32, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %61, label %38

38:                                               ; preds = %28
  %39 = and i64 %31, -262144
  %40 = or i64 %39, 8
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 262144
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %38
  %46 = or i64 %39, 16
  %47 = inttoptr i64 %46 to %"class.v8::internal::Heap"**
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %47, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %48, i64 %31, i64 %33, i64 %32) #11
  br label %49

49:                                               ; preds = %45, %38
  %50 = and i64 %32, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 24
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %49
  %57 = load i64, i64* %41, align 8
  %58 = and i64 %57, 24
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %56
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %31, i64 %33, i64 %32) #11
  br label %61

61:                                               ; preds = %28, %49, %56, %60
  ret void
}

declare i64* @_ZN2v88internal16OrderedHashTableINS0_14OrderedHashMapELi2EE5ClearEPNS0_7IsolateENS0_6HandleIS2_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare i64* @_ZN2v88internal14OrderedHashMap6RehashEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16JSWeakCollection10InitializeENS0_6HandleIS1_EEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 0) #11
  %4 = icmp sgt i32 %3, 4
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = icmp sgt i32 %3, 67108861
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

9:                                                ; preds = %2, %5
  %10 = phi i32 [ %3, %5 ], [ 4, %2 ]
  %11 = shl i32 %10, 1
  %12 = add nuw nsw i32 %11, 3
  %13 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 75
  %15 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %13, i64* %14, i32 %12, i8 zeroext 0) #11
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i32*
  store atomic volatile i32 0, i32* %18 monotonic, align 4
  %19 = load i64, i64* %15, align 8
  %20 = add i64 %19, 11
  %21 = inttoptr i64 %20 to i32*
  store atomic volatile i32 0, i32* %21 monotonic, align 4
  %22 = load i64, i64* %15, align 8
  %23 = add i64 %22, 15
  %24 = inttoptr i64 %23 to i32*
  store atomic volatile i32 %11, i32* %24 monotonic, align 4
  %25 = load i64, i64* %0, align 8
  %26 = load i64, i64* %15, align 8
  %27 = add i64 %25, 11
  %28 = inttoptr i64 %27 to i32*
  %29 = trunc i64 %26 to i32
  store atomic volatile i32 %29, i32* %28 monotonic, align 4
  %30 = and i64 %26, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %9
  %33 = and i64 %25, -262144
  %34 = or i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 262144
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = or i64 %33, 16
  %41 = inttoptr i64 %40 to %"class.v8::internal::Heap"**
  %42 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %41, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %42, i64 %25, i64 %27, i64 %26) #11
  br label %43

43:                                               ; preds = %39, %32
  %44 = and i64 %26, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %43
  %51 = load i64, i64* %35, align 8
  %52 = and i64 %51, 24
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %25, i64 %27, i64 %26) #11
  br label %55

55:                                               ; preds = %9, %43, %50, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16JSWeakCollection3SetENS0_6HandleIS1_EENS2_INS0_6ObjectEEES5_i(i64*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = and i64 %5, -262144
  %13 = or i64 %12, 16
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 16
  %16 = add i64 %15, -41416
  %17 = inttoptr i64 %16 to %"class.v8::internal::Isolate"*
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %4
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %11) #11
  br label %36

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #11
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %11, i64* %32, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = phi i64* [ %22, %21 ], [ %32, %31 ]
  %38 = load i64, i64* %0, align 8
  %39 = and i64 %38, -262144
  %40 = or i64 %39, 16
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 16
  %43 = add i64 %42, -41416
  %44 = inttoptr i64 %43 to %"class.v8::internal::Isolate"*
  %45 = tail call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE3PutEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEESA_i(%"class.v8::internal::Isolate"* %44, i64* %37, i64* %1, i64* %2, i32 %3)
  %46 = load i64, i64* %0, align 8
  %47 = load i64, i64* %45, align 8
  %48 = add i64 %46, 11
  %49 = inttoptr i64 %48 to i32*
  %50 = trunc i64 %47 to i32
  store atomic volatile i32 %50, i32* %49 monotonic, align 4
  %51 = and i64 %47, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %76, label %53

53:                                               ; preds = %36
  %54 = and i64 %46, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 262144
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %53
  %61 = or i64 %54, 16
  %62 = inttoptr i64 %61 to %"class.v8::internal::Heap"**
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %62, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %63, i64 %46, i64 %48, i64 %47) #11
  br label %64

64:                                               ; preds = %60, %53
  %65 = and i64 %47, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %64
  %72 = load i64, i64* %56, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %46, i64 %48, i64 %47) #11
  br label %76

76:                                               ; preds = %36, %64, %71, %75
  %77 = load i64, i64* %37, align 8
  %78 = load i64, i64* %45, align 8
  %79 = trunc i64 %77 to i32
  %80 = trunc i64 %78 to i32
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %124, label %82

82:                                               ; preds = %76
  %83 = add i64 %77, 3
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, 7
  br i1 %86, label %87, label %124

87:                                               ; preds = %82
  %88 = lshr i32 %85, 1
  %89 = zext i32 %88 to i64
  br label %90

90:                                               ; preds = %122, %87
  %91 = phi i64 [ %77, %87 ], [ %123, %122 ]
  %92 = phi i64 [ 3, %87 ], [ %120, %122 ]
  %93 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %94 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %93, i64 0, i32 0, i32 1
  %97 = load i8, i8* %96, align 8, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %93, i64 0, i32 1, i64 0
  br label %109

101:                                              ; preds = %95, %90
  %102 = and i64 %91, -262144
  %103 = or i64 %102, 16
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 16
  %106 = add i64 %105, -41416
  %107 = inttoptr i64 %106 to %"class.v8::internal::Isolate"*
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %107, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %109

109:                                              ; preds = %101, %99
  %110 = phi i64* [ %108, %101 ], [ %100, %99 ]
  %111 = getelementptr inbounds i64, i64* %110, i64 5
  %112 = load i64, i64* %111, align 8
  %113 = trunc i64 %92 to i32
  %114 = shl i32 %113, 2
  %115 = sext i32 %114 to i64
  %116 = add i64 %91, 7
  %117 = add i64 %116, %115
  %118 = inttoptr i64 %117 to i32*
  %119 = trunc i64 %112 to i32
  store atomic volatile i32 %119, i32* %118 monotonic, align 4
  %120 = add nuw nsw i64 %92, 1
  %121 = icmp ult i64 %120, %89
  br i1 %121, label %122, label %124

122:                                              ; preds = %109
  %123 = load i64, i64* %37, align 8
  br label %90

124:                                              ; preds = %109, %76, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal16JSWeakCollection6DeleteENS0_6HandleIS1_EENS2_INS0_6ObjectEEEi(i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, 11
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = and i64 %5, -262144
  %13 = or i64 %12, 16
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 16
  %16 = add i64 %15, -41416
  %17 = inttoptr i64 %16 to %"class.v8::internal::Isolate"*
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %11) #11
  br label %36

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %17) #11
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %11, i64* %32, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = phi i64* [ %22, %21 ], [ %32, %31 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  %38 = load i64, i64* %0, align 8
  %39 = and i64 %38, -262144
  %40 = or i64 %39, 16
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 16
  %43 = add i64 %42, -41416
  %44 = inttoptr i64 %43 to %"class.v8::internal::Isolate"*
  %45 = call i64* @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE6RemoveEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_6ObjectEEEPbi(%"class.v8::internal::Isolate"* %44, i64* %37, i64* %1, i8* nonnull %4, i32 %2)
  %46 = load i64, i64* %0, align 8
  %47 = load i64, i64* %45, align 8
  %48 = add i64 %46, 11
  %49 = inttoptr i64 %48 to i32*
  %50 = trunc i64 %47 to i32
  store atomic volatile i32 %50, i32* %49 monotonic, align 4
  %51 = and i64 %47, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %76, label %53

53:                                               ; preds = %36
  %54 = and i64 %46, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 262144
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %53
  %61 = or i64 %54, 16
  %62 = inttoptr i64 %61 to %"class.v8::internal::Heap"**
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %62, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %63, i64 %46, i64 %48, i64 %47) #11
  br label %64

64:                                               ; preds = %60, %53
  %65 = and i64 %47, -262144
  %66 = or i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 24
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %64
  %72 = load i64, i64* %56, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %46, i64 %48, i64 %47) #11
  br label %76

76:                                               ; preds = %36, %64, %71, %75
  %77 = load i64, i64* %37, align 8
  %78 = load i64, i64* %45, align 8
  %79 = trunc i64 %77 to i32
  %80 = trunc i64 %78 to i32
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %124, label %82

82:                                               ; preds = %76
  %83 = add i64 %77, 3
  %84 = inttoptr i64 %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, 7
  br i1 %86, label %87, label %124

87:                                               ; preds = %82
  %88 = lshr i32 %85, 1
  %89 = zext i32 %88 to i64
  br label %90

90:                                               ; preds = %122, %87
  %91 = phi i64 [ %77, %87 ], [ %123, %122 ]
  %92 = phi i64 [ 3, %87 ], [ %120, %122 ]
  %93 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %94 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %93, i64 0, i32 0, i32 1
  %97 = load i8, i8* %96, align 8, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %93, i64 0, i32 1, i64 0
  br label %109

101:                                              ; preds = %95, %90
  %102 = and i64 %91, -262144
  %103 = or i64 %102, 16
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 16
  %106 = add i64 %105, -41416
  %107 = inttoptr i64 %106 to %"class.v8::internal::Isolate"*
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %107, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %109

109:                                              ; preds = %101, %99
  %110 = phi i64* [ %108, %101 ], [ %100, %99 ]
  %111 = getelementptr inbounds i64, i64* %110, i64 5
  %112 = load i64, i64* %111, align 8
  %113 = trunc i64 %92 to i32
  %114 = shl i32 %113, 2
  %115 = sext i32 %114 to i64
  %116 = add i64 %91, 7
  %117 = add i64 %116, %115
  %118 = inttoptr i64 %117 to i32*
  %119 = trunc i64 %112 to i32
  store atomic volatile i32 %119, i32* %118 monotonic, align 4
  %120 = add nuw nsw i64 %92, 1
  %121 = icmp ult i64 %120, %89
  br i1 %121, label %122, label %124

122:                                              ; preds = %109
  %123 = load i64, i64* %37, align 8
  br label %90

124:                                              ; preds = %109, %76, %82
  %125 = load i8, i8* %4, align 1, !range !2
  %126 = icmp ne i8 %125, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  ret i1 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal16JSWeakCollection10GetEntriesENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::JSReceiver", align 8
  %5 = load i64, i64* %0, align 8
  %6 = and i64 %5, -262144
  %7 = or i64 %6, 16
  %8 = inttoptr i64 %7 to i64*
  %9 = load i64, i64* %8, align 16
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = and i64 %5, -4294967296
  %13 = add i64 %5, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %19 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %20 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %2
  %22 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %19, i64 %17) #11
  br label %36

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #11
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %17, i64* %32, align 8
  br label %36

36:                                               ; preds = %21, %31
  %37 = phi i64* [ %22, %21 ], [ %32, %31 ]
  %38 = icmp eq i32 %1, 0
  %39 = load i64, i64* %37, align 8
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i32*
  br i1 %38, label %46, label %42

42:                                               ; preds = %36
  %43 = load atomic i32, i32* %41 monotonic, align 4
  %44 = ashr i32 %43, 1
  %45 = icmp slt i32 %44, %1
  br i1 %45, label %46, label %49

46:                                               ; preds = %36, %42
  %47 = load atomic i32, i32* %41 monotonic, align 4
  %48 = ashr i32 %47, 1
  br label %49

49:                                               ; preds = %46, %42
  %50 = phi i32 [ %48, %46 ], [ %1, %42 ]
  %51 = load i64, i64* %0, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp eq i16 %60, 1083
  %62 = select i1 %61, i32 2, i32 1
  %63 = inttoptr i64 %10 to %"class.v8::internal::Factory"*
  %64 = inttoptr i64 %10 to %"class.v8::internal::FactoryBase"*
  %65 = mul nsw i32 %62, %50
  %66 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %64, i32 %65, i8 zeroext 0) #11
  %67 = load i64, i64* %37, align 8
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = ashr i32 %70, 1
  %72 = icmp sgt i32 %50, %71
  br i1 %72, label %73, label %76

73:                                               ; preds = %49
  %74 = load atomic i32, i32* %69 monotonic, align 4
  %75 = ashr i32 %74, 1
  br label %76

76:                                               ; preds = %73, %49
  %77 = phi i32 [ %75, %73 ], [ %50, %49 ]
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %93

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 4
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 5
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %84 = bitcast %"class.v8::internal::JSReceiver"* %4 to i8*
  %85 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %3 to i8*
  %87 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %3, i64 0, i32 0
  %89 = add i64 %67, 15
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %100, label %93

93:                                               ; preds = %314, %318, %79, %76
  %94 = load i64, i64* %66, align 8
  %95 = add i64 %94, 3
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = ashr i32 %97, 1
  %99 = call i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"* %63, i64* %66, i8 zeroext 3, i32 %98, i8 zeroext 0) #11
  ret i64* %99

100:                                              ; preds = %79, %318
  %101 = phi i32 [ %315, %318 ], [ 0, %79 ]
  %102 = phi i64 [ %319, %318 ], [ 0, %79 ]
  %103 = phi i64 [ %320, %318 ], [ %67, %79 ]
  %104 = and i64 %103, -4294967296
  %105 = trunc i64 %102 to i32
  %106 = shl i32 %105, 3
  %107 = add i32 %106, 12
  %108 = sext i32 %107 to i64
  %109 = add nsw i64 %108, 7
  %110 = add i64 %109, %103
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = zext i32 %112 to i64
  %114 = or i64 %104, %113
  %115 = load i64, i64* %80, align 8
  %116 = trunc i64 %115 to i32
  %117 = icmp eq i32 %112, %116
  br i1 %117, label %314, label %118

118:                                              ; preds = %100
  %119 = load i64, i64* %81, align 8
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %112, %120
  br i1 %121, label %314, label %122

122:                                              ; preds = %118
  %123 = load i64, i64* %66, align 8
  %124 = add nsw i32 %101, 1
  %125 = shl i32 %101, 2
  %126 = sext i32 %125 to i64
  %127 = add nsw i64 %126, 7
  %128 = add i64 %127, %123
  %129 = inttoptr i64 %128 to i32*
  store atomic volatile i32 %112, i32* %129 monotonic, align 4
  %130 = and i64 %113, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %155, label %132

132:                                              ; preds = %122
  %133 = and i64 %123, -262144
  %134 = or i64 %133, 8
  %135 = inttoptr i64 %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 262144
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %132
  %140 = or i64 %133, 16
  %141 = inttoptr i64 %140 to %"class.v8::internal::Heap"**
  %142 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %141, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %142, i64 %123, i64 %128, i64 %114) #11
  br label %143

143:                                              ; preds = %139, %132
  %144 = and i64 %114, -262144
  %145 = or i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = and i64 %147, 24
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %143
  %151 = load i64, i64* %135, align 8
  %152 = and i64 %151, 24
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %150
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %123, i64 %128, i64 %114) #11
  br label %155

155:                                              ; preds = %122, %143, %150, %154
  br i1 %61, label %156, label %314

156:                                              ; preds = %155
  %157 = load i64, i64* %37, align 8
  %158 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %159 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %158, i64 %114) #11
  br label %173

162:                                              ; preds = %156
  %163 = load i64*, i64** %82, align 8
  %164 = load i64*, i64** %83, align 8
  %165 = icmp eq i64* %163, %164
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  %167 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #11
  br label %168

168:                                              ; preds = %166, %162
  %169 = phi i64* [ %167, %166 ], [ %163, %162 ]
  %170 = ptrtoint i64* %169 to i64
  %171 = add i64 %170, 8
  %172 = inttoptr i64 %171 to i64*
  store i64* %172, i64** %82, align 8
  store i64 %114, i64* %169, align 8
  br label %173

173:                                              ; preds = %160, %168
  %174 = phi i64* [ %161, %160 ], [ %169, %168 ]
  %175 = and i64 %157, -4294967296
  %176 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %177 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %176, null
  br i1 %177, label %184, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %176, i64 0, i32 0, i32 1
  %180 = load i8, i8* %179, align 8, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %176, i64 0, i32 1, i64 0
  br label %192

184:                                              ; preds = %178, %173
  %185 = and i64 %157, -262144
  %186 = or i64 %185, 16
  %187 = inttoptr i64 %186 to i64*
  %188 = load i64, i64* %187, align 16
  %189 = add i64 %188, -41416
  %190 = inttoptr i64 %189 to %"class.v8::internal::Isolate"*
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %190, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %192

192:                                              ; preds = %184, %182
  %193 = phi i64* [ %191, %184 ], [ %183, %182 ]
  %194 = load i64, i64* %174, align 8
  %195 = call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %194) #11
  %196 = and i64 %195, 1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %200, label %198

198:                                              ; preds = %192
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store i64 %194, i64* %85, align 8
  %199 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  br label %200

200:                                              ; preds = %198, %192
  %201 = phi i64 [ %199, %198 ], [ %195, %192 ]
  %202 = getelementptr inbounds i64, i64* %193, i64 4
  %203 = load i64, i64* %202, align 8
  %204 = trunc i64 %201 to i32
  %205 = trunc i64 %203 to i32
  %206 = icmp eq i32 %204, %205
  br i1 %206, label %207, label %210

207:                                              ; preds = %200
  %208 = getelementptr inbounds i64, i64* %193, i64 5
  %209 = load i64, i64* %208, align 8
  br label %279

210:                                              ; preds = %200
  %211 = ashr i32 %204, 1
  %212 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %213 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %212, null
  br i1 %213, label %220, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %212, i64 0, i32 0, i32 1
  %216 = load i8, i8* %215, align 8, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %212, i64 0, i32 1, i64 0
  br label %228

220:                                              ; preds = %214, %210
  %221 = and i64 %157, -262144
  %222 = or i64 %221, 16
  %223 = inttoptr i64 %222 to i64*
  %224 = load i64, i64* %223, align 16
  %225 = add i64 %224, -41416
  %226 = inttoptr i64 %225 to %"class.v8::internal::Isolate"*
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %226, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %228

228:                                              ; preds = %220, %218
  %229 = phi i64* [ %227, %220 ], [ %219, %218 ]
  %230 = add i64 %157, 15
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = ashr i32 %232, 1
  %234 = getelementptr inbounds i64, i64* %229, i64 4
  %235 = load i64, i64* %234, align 8
  %236 = add nsw i32 %233, -1
  %237 = and i32 %236, %211
  %238 = shl i32 %237, 3
  %239 = add i32 %238, 12
  %240 = sext i32 %239 to i64
  %241 = add i64 %157, 7
  %242 = add i64 %241, %240
  %243 = inttoptr i64 %242 to i32*
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = trunc i64 %235 to i32
  %246 = icmp eq i32 %244, %245
  br i1 %246, label %266, label %247

247:                                              ; preds = %228, %255
  %248 = phi i32 [ %264, %255 ], [ %244, %228 ]
  %249 = phi i32 [ %258, %255 ], [ %237, %228 ]
  %250 = phi i32 [ %256, %255 ], [ 1, %228 ]
  %251 = zext i32 %248 to i64
  %252 = or i64 %175, %251
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  %253 = load i64, i64* %174, align 8
  store i64 %253, i64* %87, align 8
  %254 = call zeroext i1 @_ZN2v88internal6Object9SameValueES1_(%"class.v8::internal::Object"* nonnull %88, i64 %252) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  br i1 %254, label %269, label %255

255:                                              ; preds = %247
  %256 = add i32 %250, 1
  %257 = add i32 %250, %249
  %258 = and i32 %257, %236
  %259 = shl i32 %258, 3
  %260 = add i32 %259, 12
  %261 = sext i32 %260 to i64
  %262 = add i64 %241, %261
  %263 = inttoptr i64 %262 to i32*
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = icmp eq i32 %264, %245
  br i1 %265, label %266, label %247

266:                                              ; preds = %255, %228
  %267 = getelementptr inbounds i64, i64* %229, i64 5
  %268 = load i64, i64* %267, align 8
  br label %279

269:                                              ; preds = %247
  %270 = shl i32 %249, 3
  %271 = add i32 %270, 16
  %272 = or i32 %271, 7
  %273 = sext i32 %272 to i64
  %274 = add i64 %157, %273
  %275 = inttoptr i64 %274 to i32*
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = zext i32 %276 to i64
  %278 = or i64 %175, %277
  br label %279

279:                                              ; preds = %269, %266, %207
  %280 = phi i64 [ %209, %207 ], [ %268, %266 ], [ %278, %269 ]
  %281 = load i64, i64* %66, align 8
  %282 = add nsw i32 %101, 2
  %283 = shl i32 %124, 2
  %284 = sext i32 %283 to i64
  %285 = add nsw i64 %284, 7
  %286 = add i64 %285, %281
  %287 = inttoptr i64 %286 to i32*
  %288 = trunc i64 %280 to i32
  store atomic volatile i32 %288, i32* %287 monotonic, align 4
  %289 = and i64 %280, 1
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %314, label %291

291:                                              ; preds = %279
  %292 = and i64 %281, -262144
  %293 = or i64 %292, 8
  %294 = inttoptr i64 %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = and i64 %295, 262144
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %302, label %298

298:                                              ; preds = %291
  %299 = or i64 %292, 16
  %300 = inttoptr i64 %299 to %"class.v8::internal::Heap"**
  %301 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %300, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %301, i64 %281, i64 %286, i64 %280) #11
  br label %302

302:                                              ; preds = %298, %291
  %303 = and i64 %280, -262144
  %304 = or i64 %303, 8
  %305 = inttoptr i64 %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = and i64 %306, 24
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %314, label %309

309:                                              ; preds = %302
  %310 = load i64, i64* %294, align 8
  %311 = and i64 %310, 24
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %309
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %281, i64 %286, i64 %280) #11
  br label %314

314:                                              ; preds = %100, %118, %313, %309, %302, %279, %155
  %315 = phi i32 [ %124, %155 ], [ %282, %279 ], [ %282, %302 ], [ %282, %309 ], [ %282, %313 ], [ %101, %118 ], [ %101, %100 ]
  %316 = sdiv i32 %315, %62
  %317 = icmp slt i32 %316, %77
  br i1 %317, label %318, label %93

318:                                              ; preds = %314
  %319 = add nuw nsw i64 %102, 1
  %320 = load i64, i64* %37, align 8
  %321 = add i64 %320, 15
  %322 = inttoptr i64 %321 to i32*
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = ashr i32 %323, 1
  %325 = sext i32 %324 to i64
  %326 = icmp slt i64 %319, %325
  br i1 %326, label %100, label %93
}

declare void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12PropertyCell25InvalidateAndReplaceEntryEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS0_15PropertyDetailsENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64, i32, i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", align 8
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = trunc i64 %2 to i32
  %10 = shl i32 %9, 2
  %11 = add i32 %10, 20
  %12 = sext i32 %11 to i64
  %13 = add nsw i64 %12, 7
  %14 = add i64 %7, %13
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %8, %17
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %20 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %5
  %23 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %20, i64 %18) #11
  %24 = load i64, i64* %23, align 8
  br label %38

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %33

33:                                               ; preds = %31, %25
  %34 = phi i64* [ %32, %31 ], [ %27, %25 ]
  %35 = ptrtoint i64* %34 to i64
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  store i64* %37, i64** %26, align 8
  store i64 %18, i64* %34, align 8
  br label %38

38:                                               ; preds = %22, %33
  %39 = phi i64 [ %24, %22 ], [ %18, %33 ]
  %40 = phi i64* [ %23, %22 ], [ %34, %33 ]
  %41 = and i64 %39, -4294967296
  %42 = add i64 %39, 3
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %48 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %38
  %50 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %47, i64 %46) #11
  br label %64

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %53, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %59

59:                                               ; preds = %57, %51
  %60 = phi i64* [ %58, %57 ], [ %53, %51 ]
  %61 = ptrtoint i64* %60 to i64
  %62 = add i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  store i64* %63, i64** %52, align 8
  store i64 %46, i64* %60, align 8
  br label %64

64:                                               ; preds = %49, %59
  %65 = phi i64* [ %50, %49 ], [ %60, %59 ]
  %66 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %67 = tail call i64* @_ZN2v88internal7Factory15NewPropertyCellENS0_6HandleINS0_4NameEEENS0_15PropertyDetailsENS2_INS0_6ObjectEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %66, i64* %65, i32 %3, i64* %4, i8 zeroext 1) #11
  %68 = load i64, i64* %1, align 8
  %69 = load i64, i64* %67, align 8
  %70 = add i64 %68, %13
  %71 = inttoptr i64 %70 to i32*
  %72 = trunc i64 %69 to i32
  store atomic volatile i32 %72, i32* %71 monotonic, align 4
  %73 = and i64 %69, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %98, label %75

75:                                               ; preds = %64
  %76 = and i64 %68, -262144
  %77 = or i64 %76, 8
  %78 = inttoptr i64 %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 262144
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %75
  %83 = or i64 %76, 16
  %84 = inttoptr i64 %83 to %"class.v8::internal::Heap"**
  %85 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %84, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %85, i64 %68, i64 %70, i64 %69) #11
  br label %86

86:                                               ; preds = %82, %75
  %87 = and i64 %69, -262144
  %88 = or i64 %87, 8
  %89 = inttoptr i64 %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, 24
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %86
  %94 = load i64, i64* %78, align 8
  %95 = and i64 %94, 24
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %68, i64 %70, i64 %69) #11
  br label %98

98:                                               ; preds = %64, %86, %93, %97
  %99 = bitcast %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #11
  %100 = load i64, i64* %40, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef", %"class.v8::internal::Handle<v8::internal::PropertyCell>::ObjectRef"* %6, i64 0, i32 0
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 0
  call void @_ZN2v88internal12PropertyCell18ClearAndInvalidateENS0_13ReadOnlyRootsE(%"class.v8::internal::PropertyCell"* nonnull %102, i64* %103)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #11
  ret i64* %67
}

declare i64* @_ZN2v88internal7Factory15NewPropertyCellENS0_6HandleINS0_4NameEEENS0_15PropertyDetailsENS2_INS0_6ObjectEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i32, i64*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal12PropertyCell11InitialTypeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* nocapture readonly, i64*) local_unnamed_addr #10 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %5 to i32
  %8 = icmp eq i32 %6, %7
  %9 = select i1 %8, i32 1, i32 2
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal12PropertyCell11UpdatedTypeEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* nocapture readnone, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = lshr i32 %3, 6
  %6 = and i32 %5, 3
  switch i32 %6, label %54 [
    i32 1, label %55
    i32 2, label %12
    i32 3, label %7
    i32 0, label %53
  ]

7:                                                ; preds = %4
  %8 = load i64, i64* %1, align 8
  %9 = load i64, i64* %2, align 8
  %10 = add i64 %8, 11
  %11 = inttoptr i64 %10 to i32*
  br label %20

12:                                               ; preds = %4
  %13 = load i64, i64* %2, align 8
  %14 = load i64, i64* %1, align 8
  %15 = add i64 %14, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = trunc i64 %13 to i32
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %55, label %20

20:                                               ; preds = %7, %12
  %21 = phi i32* [ %11, %7 ], [ %16, %12 ]
  %22 = phi i64 [ %9, %7 ], [ %13, %12 ]
  %23 = phi i64 [ %8, %7 ], [ %14, %12 ]
  %24 = load i32, i32* %21, align 4
  %25 = zext i32 %24 to i64
  %26 = and i64 %25, 1
  %27 = and i64 %26, %22
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %49, label %29

29:                                               ; preds = %20
  %30 = and i64 %23, -4294967296
  %31 = or i64 %30, %25
  %32 = add i64 %31, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = add i64 %22, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = icmp eq i32 %34, %37
  br i1 %38, label %39, label %53

39:                                               ; preds = %29
  %40 = and i64 %22, -4294967296
  %41 = load atomic i32, i32* %36 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %40, %42
  %44 = add i64 %43, 11
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 acquire, align 4
  %47 = and i32 %46, 33554432
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %55, label %53

49:                                               ; preds = %20
  %50 = or i64 %22, %25
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %29, %39, %49, %4
  br label %55

54:                                               ; preds = %4
  unreachable

55:                                               ; preds = %39, %49, %12, %4, %53
  %56 = phi i32 [ 0, %53 ], [ 2, %4 ], [ 2, %12 ], [ 3, %49 ], [ 3, %39 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12PropertyCell21PrepareForAndSetValueEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS4_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i64, i64*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::DependentCode", align 8
  %7 = load i64, i64* %1, align 8
  %8 = and i64 %7, -4294967296
  %9 = trunc i64 %2 to i32
  %10 = shl i32 %9, 2
  %11 = add i32 %10, 20
  %12 = sext i32 %11 to i64
  %13 = add nsw i64 %12, 7
  %14 = add i64 %13, %7
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %8, %17
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %20 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %5
  %23 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %20, i64 %18) #11
  %24 = load i64, i64* %23, align 8
  br label %38

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = icmp eq i64* %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #11
  br label %33

33:                                               ; preds = %31, %25
  %34 = phi i64* [ %32, %31 ], [ %27, %25 ]
  %35 = ptrtoint i64* %34 to i64
  %36 = add i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  store i64* %37, i64** %26, align 8
  store i64 %18, i64* %34, align 8
  br label %38

38:                                               ; preds = %22, %33
  %39 = phi i64 [ %24, %22 ], [ %18, %33 ]
  %40 = phi i64* [ %23, %22 ], [ %34, %33 ]
  %41 = add i64 %39, 11
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %43, %46
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.415, i64 0, i64 0)) #16
  unreachable

49:                                               ; preds = %38
  %50 = add i64 %39, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = ashr i32 %52, 1
  %54 = and i32 %52, 2
  %55 = icmp eq i32 %54, 0
  %56 = and i32 %4, 1
  %57 = icmp ne i32 %56, 0
  %58 = and i1 %57, %55
  %59 = and i32 %53, 2147483392
  %60 = and i32 %4, -2147483585
  %61 = or i32 %59, %60
  %62 = lshr i32 %53, 6
  %63 = and i32 %62, 3
  switch i32 %63, label %101 [
    i32 1, label %102
    i32 2, label %66
    i32 3, label %64
    i32 0, label %100
  ]

64:                                               ; preds = %49
  %65 = load i64, i64* %3, align 8
  br label %70

66:                                               ; preds = %49
  %67 = load i64, i64* %3, align 8
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %43, %68
  br i1 %69, label %102, label %70

70:                                               ; preds = %66, %64
  %71 = phi i64 [ %65, %64 ], [ %67, %66 ]
  %72 = zext i32 %43 to i64
  %73 = and i64 %71, 1
  %74 = and i64 %73, %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %96, label %76

76:                                               ; preds = %70
  %77 = and i64 %39, -4294967296
  %78 = or i64 %77, %72
  %79 = add i64 %78, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = add i64 %71, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = icmp eq i32 %81, %84
  br i1 %85, label %86, label %100

86:                                               ; preds = %76
  %87 = and i64 %71, -4294967296
  %88 = load atomic i32, i32* %83 monotonic, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %87, %89
  %91 = add i64 %90, 11
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 acquire, align 4
  %94 = and i32 %93, 33554432
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %102, label %100

96:                                               ; preds = %70
  %97 = or i64 %71, %72
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %96, %86, %76, %49
  br label %102

101:                                              ; preds = %49
  unreachable

102:                                              ; preds = %49, %66, %86, %96, %100
  %103 = phi i32 [ 0, %100 ], [ 2, %49 ], [ 2, %66 ], [ 3, %96 ], [ 3, %86 ]
  %104 = shl nuw nsw i32 %103, 6
  %105 = or i32 %61, %104
  br i1 %58, label %106, label %108

106:                                              ; preds = %102
  %107 = tail call i64* @_ZN2v88internal12PropertyCell25InvalidateAndReplaceEntryEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS0_15PropertyDetailsENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %0, i64* %1, i64 %2, i32 %105, i64* %3)
  br label %160

108:                                              ; preds = %102
  %109 = load i64, i64* %40, align 8
  %110 = load i64, i64* %3, align 8
  %111 = add i64 %109, 11
  %112 = inttoptr i64 %111 to i32*
  %113 = trunc i64 %110 to i32
  store atomic volatile i32 %113, i32* %112 release, align 4
  %114 = and i64 %110, 1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %139, label %116

116:                                              ; preds = %108
  %117 = and i64 %109, -262144
  %118 = or i64 %117, 8
  %119 = inttoptr i64 %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, 262144
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %116
  %124 = or i64 %117, 16
  %125 = inttoptr i64 %124 to %"class.v8::internal::Heap"**
  %126 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %125, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %126, i64 %109, i64 %111, i64 %110) #11
  br label %127

127:                                              ; preds = %123, %116
  %128 = and i64 %110, -262144
  %129 = or i64 %128, 8
  %130 = inttoptr i64 %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = and i64 %131, 24
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %139, label %134

134:                                              ; preds = %127
  %135 = load i64, i64* %119, align 8
  %136 = and i64 %135, 24
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %134
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %109, i64 %111, i64 %110) #11
  br label %139

139:                                              ; preds = %108, %127, %134, %138
  %140 = shl i32 %105, 1
  %141 = add i64 %109, 7
  %142 = inttoptr i64 %141 to i32*
  store atomic volatile i32 %140, i32* %142 release, align 4
  %143 = icmp eq i32 %63, %103
  br i1 %143, label %144, label %150

144:                                              ; preds = %139
  %145 = and i32 %52, 16
  %146 = icmp eq i32 %145, 0
  %147 = and i32 %4, 8
  %148 = icmp ne i32 %147, 0
  %149 = and i1 %148, %146
  br i1 %149, label %150, label %160

150:                                              ; preds = %144, %139
  %151 = bitcast %"class.v8::internal::DependentCode"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #11
  %152 = load i64, i64* %40, align 8
  %153 = and i64 %152, -4294967296
  %154 = add i64 %152, 15
  %155 = inttoptr i64 %154 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %153, %157
  %159 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %158, i64* %159, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %6, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #11
  br label %160

160:                                              ; preds = %144, %150, %106
  %161 = phi i64* [ %107, %106 ], [ %40, %144 ], [ %40, %150 ]
  ret i64* %161
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12PropertyCell19InvalidateProtectorEv(%"class.v8::internal::PropertyCell"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::DependentCode", align 8
  %3 = getelementptr inbounds %"class.v8::internal::PropertyCell", %"class.v8::internal::PropertyCell"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  store atomic volatile i32 0, i32* %6 release, align 4
  %10 = bitcast %"class.v8::internal::DependentCode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = load i64, i64* %3, align 8
  %12 = and i64 %11, -4294967296
  %13 = add i64 %11, 15
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %2, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %19

19:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12PropertyCell21CheckDataIsCompatibleENS0_15PropertyDetailsENS0_6ObjectE(i32, i64) local_unnamed_addr #0 align 2 {
  %3 = and i32 %0, 192
  %4 = and i64 %1, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = and i32 %0, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %62, label %61, !prof !5

9:                                                ; preds = %2
  %10 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %11 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 1, i64 0
  br label %26

18:                                               ; preds = %12, %9
  %19 = and i64 %1, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %26

26:                                               ; preds = %16, %18
  %27 = phi i64* [ %25, %18 ], [ %17, %16 ]
  %28 = getelementptr inbounds i64, i64* %27, i64 5
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %1 to i32
  %31 = trunc i64 %29 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = icmp eq i32 %3, 128
  br i1 %34, label %62, label %35, !prof !5

35:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.416, i64 0, i64 0)) #16
  unreachable

36:                                               ; preds = %26
  %37 = and i64 %1, -4294967296
  %38 = add i64 %1, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %37, %41
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = icmp eq i16 %45, 86
  br i1 %46, label %47, label %50

47:                                               ; preds = %36
  %48 = and i32 %0, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %61, label %62, !prof !3

50:                                               ; preds = %36
  %51 = load atomic i32, i32* %39 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %37, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = icmp eq i16 %56, 87
  %58 = and i32 %0, 1
  %59 = icmp eq i32 %58, 0
  %60 = xor i1 %59, %57
  br i1 %60, label %62, label %61, !prof !5

61:                                               ; preds = %47, %6, %50
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.417, i64 0, i64 0)) #16
  unreachable

62:                                               ; preds = %47, %6, %50, %33
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal17JSGeneratorObject15source_positionEv(%"class.v8::internal::JSGeneratorObject"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::AbstractCode", align 8
  %3 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::JSGeneratorObject", %"class.v8::internal::JSGeneratorObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 31
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %11, label %10, !prof !5

10:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.418, i64 0, i64 0)) #16
  unreachable

11:                                               ; preds = %1
  %12 = and i64 %5, -262144
  %13 = or i64 %12, 16
  %14 = inttoptr i64 %13 to i64*
  %15 = load i64, i64* %14, align 16
  %16 = add i64 %15, -41416
  %17 = inttoptr i64 %16 to %"class.v8::internal::Isolate"*
  %18 = and i64 %5, -4294967296
  %19 = add i64 %5, 23
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = ashr i32 %21, 1
  %23 = add nsw i32 %22, -33
  %24 = bitcast %"class.v8::internal::AbstractCode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = bitcast %"class.v8::internal::SharedFunctionInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  %26 = add i64 %5, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %18, %29
  %31 = add i64 %30, 11
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %18, %34
  %36 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %35, i64* %36, align 8
  %37 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %3, %"class.v8::internal::Isolate"* %17)
  %38 = getelementptr inbounds %"class.v8::internal::AbstractCode", %"class.v8::internal::AbstractCode"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  %39 = call i32 @_ZN2v88internal12AbstractCode14SourcePositionEi(%"class.v8::internal::AbstractCode"* nonnull %2, i32 %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  ret i32 %39
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 100
  br i1 %19, label %20, label %55

20:                                               ; preds = %2
  %21 = load i64, i64* %3, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %22, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 133
  br i1 %41, label %42, label %55

42:                                               ; preds = %20
  %43 = load i64, i64* %3, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 15
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %44, %53
  br label %120

55:                                               ; preds = %2, %20
  %56 = load i64, i64* %3, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 3
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %114, label %65

65:                                               ; preds = %55
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %57, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 133
  br i1 %74, label %120, label %75

75:                                               ; preds = %65
  %76 = load atomic i32, i32* %67 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %57, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 94
  br i1 %82, label %83, label %114

83:                                               ; preds = %75
  %84 = load i64, i64* %3, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 acquire, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %85, %94
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %83
  %99 = add i64 %95, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %85, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp eq i16 %106, 133
  br i1 %107, label %120, label %108

108:                                              ; preds = %98, %83
  %109 = add i64 %95, 3
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %85, %112
  br label %120

114:                                              ; preds = %75, %55
  %115 = add i64 %62, 3
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %57, %118
  br label %120

120:                                              ; preds = %114, %108, %98, %65, %42
  %121 = phi i64 [ %54, %42 ], [ %119, %114 ], [ %62, %65 ], [ %113, %108 ], [ %95, %98 ]
  ret i64 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15AccessCheckInfo3GetEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = and i64 %13, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %87, label %17

17:                                               ; preds = %2
  %18 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %19 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %18, null
  %20 = and i64 %9, -262144
  %21 = or i64 %20, 16
  %22 = inttoptr i64 %21 to i64*
  br i1 %19, label %52, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 1, i64 10
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  br label %73

31:                                               ; preds = %23
  %32 = load i64, i64* %22, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 10
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  br label %38

38:                                               ; preds = %44, %31
  %39 = phi i64 [ %49, %44 ], [ %14, %31 ]
  %40 = add i64 %39, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %37
  br i1 %43, label %44, label %87

44:                                               ; preds = %38
  %45 = add i64 %39, 19
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %4, %48
  %50 = and i64 %48, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %87, label %38

52:                                               ; preds = %17
  %53 = load i64, i64* %22, align 16
  %54 = add i64 %53, -41416
  %55 = inttoptr i64 %54 to %"class.v8::internal::Isolate"*
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %55, i64 0, i32 0, i32 7, i32 0, i64 10
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  br label %59

59:                                               ; preds = %65, %52
  %60 = phi i64 [ %70, %65 ], [ %14, %52 ]
  %61 = add i64 %60, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = icmp eq i32 %63, %58
  br i1 %64, label %65, label %87

65:                                               ; preds = %59
  %66 = add i64 %60, 19
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %4, %69
  %71 = and i64 %69, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %59

73:                                               ; preds = %79, %27
  %74 = phi i64 [ %84, %79 ], [ %14, %27 ]
  %75 = add i64 %74, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = icmp eq i32 %77, %30
  br i1 %78, label %79, label %87

79:                                               ; preds = %73
  %80 = add i64 %74, 19
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %4, %83
  %85 = and i64 %83, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73

87:                                               ; preds = %73, %79, %38, %44, %59, %65, %2
  %88 = phi i64 [ %14, %2 ], [ %70, %65 ], [ %60, %59 ], [ %39, %38 ], [ %49, %44 ], [ %74, %73 ], [ %84, %79 ]
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %226, label %91

91:                                               ; preds = %87
  %92 = and i64 %88, -4294967296
  %93 = add i64 %88, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %92, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = icmp eq i16 %100, 83
  br i1 %101, label %102, label %144

102:                                              ; preds = %91
  %103 = add i64 %88, 35
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 acquire, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %92, %106
  %108 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %109 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %108, i64 0, i32 0, i32 1
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %108, i64 0, i32 1, i64 0
  br label %124

116:                                              ; preds = %110, %102
  %117 = and i64 %88, -262144
  %118 = or i64 %117, 16
  %119 = inttoptr i64 %118 to i64*
  %120 = load i64, i64* %119, align 16
  %121 = add i64 %120, -41416
  %122 = inttoptr i64 %121 to %"class.v8::internal::Isolate"*
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %122, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %124

124:                                              ; preds = %116, %114
  %125 = phi i64* [ %123, %116 ], [ %115, %114 ]
  %126 = getelementptr inbounds i64, i64* %125, i64 4
  %127 = load i64, i64* %126, align 8
  %128 = trunc i64 %127 to i32
  %129 = icmp eq i32 %105, %128
  br i1 %129, label %136, label %130

130:                                              ; preds = %124
  %131 = add i64 %107, 31
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %92, %134
  br label %136

136:                                              ; preds = %124, %130
  %137 = phi i32 [ %128, %124 ], [ %133, %130 ]
  %138 = phi i64 [ %127, %124 ], [ %135, %130 ]
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %140 = load i64, i64* %139, align 8
  %141 = trunc i64 %140 to i32
  %142 = icmp eq i32 %137, %141
  %143 = select i1 %142, i64 0, i64 %138
  ret i64 %143

144:                                              ; preds = %91
  %145 = load atomic i32, i32* %94 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %92, %146
  %148 = add i64 %147, 7
  %149 = inttoptr i64 %148 to i16*
  %150 = load atomic i16, i16* %149 monotonic, align 2
  %151 = add i16 %150, -1059
  %152 = icmp ult i16 %151, 15
  br i1 %152, label %153, label %226

153:                                              ; preds = %144
  %154 = add i64 %88, 11
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %92, %157
  %159 = add i64 %158, 3
  %160 = inttoptr i64 %159 to i32*
  %161 = load atomic i32, i32* %160 acquire, align 4
  %162 = zext i32 %161 to i64
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %226, label %165

165:                                              ; preds = %153
  %166 = or i64 %92, %162
  %167 = add i64 %166, -1
  %168 = inttoptr i64 %167 to i32*
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = zext i32 %169 to i64
  %171 = or i64 %92, %170
  %172 = add i64 %171, 7
  %173 = inttoptr i64 %172 to i16*
  %174 = load atomic i16, i16* %173 monotonic, align 2
  %175 = icmp eq i16 %174, 83
  br i1 %175, label %176, label %226

176:                                              ; preds = %165
  %177 = load atomic i32, i32* %155 monotonic, align 4
  %178 = zext i32 %177 to i64
  %179 = or i64 %92, %178
  %180 = add i64 %179, 3
  %181 = inttoptr i64 %180 to i32*
  %182 = load atomic i32, i32* %181 acquire, align 4
  %183 = zext i32 %182 to i64
  %184 = or i64 %92, %183
  %185 = add i64 %184, 35
  %186 = inttoptr i64 %185 to i32*
  %187 = load atomic i32, i32* %186 acquire, align 4
  %188 = zext i32 %187 to i64
  %189 = or i64 %92, %188
  %190 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %191 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %190, null
  br i1 %191, label %198, label %192

192:                                              ; preds = %176
  %193 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 0, i32 1
  %194 = load i8, i8* %193, align 8, !range !2
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %190, i64 0, i32 1, i64 0
  br label %206

198:                                              ; preds = %192, %176
  %199 = and i64 %184, -262144
  %200 = or i64 %199, 16
  %201 = inttoptr i64 %200 to i64*
  %202 = load i64, i64* %201, align 16
  %203 = add i64 %202, -41416
  %204 = inttoptr i64 %203 to %"class.v8::internal::Isolate"*
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %204, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %206

206:                                              ; preds = %198, %196
  %207 = phi i64* [ %205, %198 ], [ %197, %196 ]
  %208 = getelementptr inbounds i64, i64* %207, i64 4
  %209 = load i64, i64* %208, align 8
  %210 = trunc i64 %209 to i32
  %211 = icmp eq i32 %187, %210
  br i1 %211, label %218, label %212

212:                                              ; preds = %206
  %213 = add i64 %189, 31
  %214 = inttoptr i64 %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i64
  %217 = or i64 %92, %216
  br label %218

218:                                              ; preds = %206, %212
  %219 = phi i32 [ %210, %206 ], [ %215, %212 ]
  %220 = phi i64 [ %209, %206 ], [ %217, %212 ]
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %222 = load i64, i64* %221, align 8
  %223 = trunc i64 %222 to i32
  %224 = icmp eq i32 %219, %223
  %225 = select i1 %224, i64 0, i64 %220
  br label %226

226:                                              ; preds = %218, %153, %87, %165, %144
  %227 = phi i64 [ 0, %144 ], [ 0, %165 ], [ 0, %87 ], [ 0, %153 ], [ %225, %218 ]
  ret i64 %227
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2v88internal20FunctionTemplateInfo24TryGetCachedPropertyNameEPNS0_7IsolateENS0_6ObjectE(%"class.v8::internal::Isolate"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = and i64 %1, 1
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = and i64 %1, -4294967296
  %7 = add i64 %1, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 83
  br i1 %15, label %16, label %29

16:                                               ; preds = %5
  %17 = add i64 %1, 51
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %6, %20
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %19, %24
  %26 = select i1 %25, i64 0, i64 %21
  %27 = xor i1 %25, true
  %28 = zext i1 %27 to i8
  br label %29

29:                                               ; preds = %16, %5, %2
  %30 = phi i64 [ 0, %2 ], [ 0, %5 ], [ %26, %16 ]
  %31 = phi i8 [ 0, %2 ], [ 0, %5 ], [ %28, %16 ]
  %32 = insertvalue { i8, i64 } undef, i8 %31, 0
  %33 = insertvalue { i8, i64 } %32, i64 %30, 1
  ret { i8, i64 } %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal20FunctionTemplateInfo18GetCFunctionsCountEv(%"class.v8::internal::FunctionTemplateInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 35
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = load i64, i64* %2, align 8
  %11 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %12 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %11, i64 0, i32 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %11, i64 0, i32 1, i64 0
  br label %27

19:                                               ; preds = %13, %1
  %20 = and i64 %10, -262144
  %21 = or i64 %20, 16
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 16
  %24 = add i64 %23, -41416
  %25 = inttoptr i64 %24 to %"class.v8::internal::Isolate"*
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %27

27:                                               ; preds = %19, %17
  %28 = phi i64* [ %26, %19 ], [ %18, %17 ]
  %29 = getelementptr inbounds i64, i64* %28, i64 4
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %7, %31
  br i1 %32, label %33, label %52

33:                                               ; preds = %27
  br i1 %12, label %40, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %11, i64 0, i32 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %11, i64 0, i32 1, i64 0
  br label %48

40:                                               ; preds = %34, %33
  %41 = and i64 %10, -262144
  %42 = or i64 %41, 16
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 16
  %45 = add i64 %44, -41416
  %46 = inttoptr i64 %45 to %"class.v8::internal::Isolate"*
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %46, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %48

48:                                               ; preds = %40, %38
  %49 = phi i64* [ %47, %40 ], [ %39, %38 ]
  %50 = getelementptr inbounds i64, i64* %49, i64 29
  %51 = load i64, i64* %50, align 8
  br label %58

52:                                               ; preds = %27
  %53 = add i64 %9, 35
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %4, %56
  br label %58

58:                                               ; preds = %48, %52
  %59 = phi i64 [ %51, %48 ], [ %57, %52 ]
  %60 = add i64 %59, 3
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = ashr i32 %62, 1
  %64 = sdiv i32 %63, 2
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal20FunctionTemplateInfo12GetCFunctionEi(%"class.v8::internal::FunctionTemplateInfo"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 35
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = load i64, i64* %3, align 8
  %12 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %13 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 1, i64 0
  br label %28

20:                                               ; preds = %14, %2
  %21 = and i64 %11, -262144
  %22 = or i64 %21, 16
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = add i64 %24, -41416
  %26 = inttoptr i64 %25 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %28

28:                                               ; preds = %20, %18
  %29 = phi i64* [ %27, %20 ], [ %19, %18 ]
  %30 = getelementptr inbounds i64, i64* %29, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %8, %32
  br i1 %33, label %34, label %53

34:                                               ; preds = %28
  br i1 %13, label %41, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 1, i64 0
  br label %49

41:                                               ; preds = %35, %34
  %42 = and i64 %11, -262144
  %43 = or i64 %42, 16
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %49

49:                                               ; preds = %41, %39
  %50 = phi i64* [ %48, %41 ], [ %40, %39 ]
  %51 = getelementptr inbounds i64, i64* %50, i64 29
  %52 = load i64, i64* %51, align 8
  br label %59

53:                                               ; preds = %28
  %54 = add i64 %10, 35
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %5, %57
  br label %59

59:                                               ; preds = %49, %53
  %60 = phi i64 [ %52, %49 ], [ %58, %53 ]
  %61 = shl i32 %1, 3
  %62 = or i32 %61, 7
  %63 = sext i32 %62 to i64
  %64 = add i64 %60, %63
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %75, label %68

68:                                               ; preds = %59
  %69 = and i64 %60, -4294967296
  %70 = zext i32 %66 to i64
  %71 = or i64 %69, %70
  %72 = add i64 %71, 3
  %73 = inttoptr i64 %72 to i64*
  %74 = load i64, i64* %73, align 1
  br label %75

75:                                               ; preds = %59, %68
  %76 = phi i64 [ %74, %68 ], [ 0, %59 ]
  ret i64 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::CFunctionInfo"* @_ZNK2v88internal20FunctionTemplateInfo13GetCSignatureEi(%"class.v8::internal::FunctionTemplateInfo"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FunctionTemplateInfo", %"class.v8::internal::FunctionTemplateInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 35
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = load i64, i64* %3, align 8
  %12 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %13 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 1, i64 0
  br label %28

20:                                               ; preds = %14, %2
  %21 = and i64 %11, -262144
  %22 = or i64 %21, 16
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = add i64 %24, -41416
  %26 = inttoptr i64 %25 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %28

28:                                               ; preds = %20, %18
  %29 = phi i64* [ %27, %20 ], [ %19, %18 ]
  %30 = getelementptr inbounds i64, i64* %29, i64 4
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %8, %32
  br i1 %33, label %34, label %53

34:                                               ; preds = %28
  br i1 %13, label %41, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %12, i64 0, i32 1, i64 0
  br label %49

41:                                               ; preds = %35, %34
  %42 = and i64 %11, -262144
  %43 = or i64 %42, 16
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %49

49:                                               ; preds = %41, %39
  %50 = phi i64* [ %48, %41 ], [ %40, %39 ]
  %51 = getelementptr inbounds i64, i64* %50, i64 29
  %52 = load i64, i64* %51, align 8
  br label %59

53:                                               ; preds = %28
  %54 = add i64 %10, 35
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %5, %57
  br label %59

59:                                               ; preds = %49, %53
  %60 = phi i64 [ %52, %49 ], [ %58, %53 ]
  %61 = shl i32 %1, 3
  %62 = or i32 %61, 4
  %63 = sext i32 %62 to i64
  %64 = add nsw i64 %63, 7
  %65 = add i64 %64, %60
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %59
  %70 = and i64 %60, -4294967296
  %71 = zext i32 %67 to i64
  %72 = or i64 %70, %71
  %73 = add i64 %72, 3
  %74 = inttoptr i64 %73 to %"class.v8::CFunctionInfo"**
  %75 = load %"class.v8::CFunctionInfo"*, %"class.v8::CFunctionInfo"** %74, align 1
  br label %76

76:                                               ; preds = %59, %69
  %77 = phi %"class.v8::CFunctionInfo"* [ %75, %69 ], [ null, %59 ]
  ret %"class.v8::CFunctionInfo"* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal3Smi20LexicographicCompareEPNS0_7IsolateES1_S1_(%"class.v8::internal::Isolate"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::PerIsolateAssertScope", align 8
  %5 = bitcast %"class.v8::internal::PerIsolateAssertScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EEC1EPNS0_7IsolateE(%"class.v8::internal::PerIsolateAssertScope"* nonnull %4, %"class.v8::internal::Isolate"* %0) #11
  %6 = trunc i64 %1 to i32
  %7 = ashr i32 %6, 1
  %8 = trunc i64 %2 to i32
  %9 = ashr i32 %8, 1
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %77, label %11

11:                                               ; preds = %3
  %12 = icmp eq i32 %7, 0
  %13 = icmp eq i32 %9, 0
  %14 = or i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = icmp slt i32 %7, %9
  %17 = select i1 %16, i64 -2, i64 2
  br label %77

18:                                               ; preds = %11
  %19 = icmp slt i32 %6, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %18
  %21 = icmp sgt i32 %8, -1
  br i1 %21, label %77, label %22

22:                                               ; preds = %20
  %23 = sub nsw i32 0, %9
  %24 = sub nsw i32 0, %7
  br label %27

25:                                               ; preds = %18
  %26 = icmp slt i32 %8, 0
  br i1 %26, label %77, label %27

27:                                               ; preds = %25, %22
  %28 = phi i32 [ %24, %22 ], [ %7, %25 ]
  %29 = phi i32 [ %23, %22 ], [ %9, %25 ]
  %30 = call i32 @llvm.ctlz.i32(i32 %28, i1 false) #11, !range !34
  %31 = sub nuw nsw i32 32, %30
  %32 = mul nsw i32 %31, 1233
  %33 = ashr i32 %32, 12
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZZN2v88internal3Smi20LexicographicCompareEPNS0_7IsolateES1_S1_E11kPowersOf10, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp ult i32 %28, %36
  %38 = zext i1 %37 to i32
  %39 = sub nsw i32 %33, %38
  %40 = call i32 @llvm.ctlz.i32(i32 %29, i1 false) #11, !range !34
  %41 = sub nuw nsw i32 32, %40
  %42 = mul nsw i32 %41, 1233
  %43 = ashr i32 %42, 12
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZZN2v88internal3Smi20LexicographicCompareEPNS0_7IsolateES1_S1_E11kPowersOf10, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = icmp ult i32 %29, %46
  %48 = zext i1 %47 to i32
  %49 = sub nsw i32 %43, %48
  %50 = icmp slt i32 %39, %49
  br i1 %50, label %51, label %59

51:                                               ; preds = %27
  %52 = xor i32 %39, -1
  %53 = add nsw i32 %49, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZZN2v88internal3Smi20LexicographicCompareEPNS0_7IsolateES1_S1_E11kPowersOf10, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = mul i32 %56, %28
  %58 = udiv i32 %29, 10
  br label %69

59:                                               ; preds = %27
  %60 = icmp slt i32 %49, %39
  br i1 %60, label %61, label %69

61:                                               ; preds = %59
  %62 = xor i32 %49, -1
  %63 = add nsw i32 %39, %62
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [10 x i32], [10 x i32]* @_ZZN2v88internal3Smi20LexicographicCompareEPNS0_7IsolateES1_S1_E11kPowersOf10, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = mul i32 %66, %29
  %68 = udiv i32 %28, 10
  br label %69

69:                                               ; preds = %59, %61, %51
  %70 = phi i32 [ %57, %51 ], [ %68, %61 ], [ %28, %59 ]
  %71 = phi i32 [ %58, %51 ], [ %67, %61 ], [ %29, %59 ]
  %72 = phi i64 [ -2, %51 ], [ 2, %61 ], [ 0, %59 ]
  %73 = icmp ult i32 %70, %71
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = icmp ugt i32 %70, %71
  %76 = select i1 %75, i64 2, i64 %72
  br label %77

77:                                               ; preds = %74, %69, %25, %20, %3, %15
  %78 = phi i64 [ %17, %15 ], [ 0, %3 ], [ -2, %20 ], [ 2, %25 ], [ -2, %69 ], [ %76, %74 ]
  call void @_ZN2v88internal21PerIsolateAssertScopeILNS0_20PerIsolateAssertTypeE0ELb0EED1Ev(%"class.v8::internal::PerIsolateAssertScope"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret i64 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal22JSFinalizationRegistry32RemoveCellFromUnregisterTokenMapEPNS0_7IsolateEmm(%"class.v8::internal::Isolate"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::SimpleNumberDictionary", align 8
  %5 = alloca %"class.v8::internal::JSReceiver", align 8
  %6 = and i64 %2, -4294967296
  %7 = add i64 %2, 27
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %9, %14
  br i1 %15, label %16, label %251

16:                                               ; preds = %3
  %17 = and i64 %1, -4294967296
  %18 = add i64 %1, 27
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %17, %21
  %23 = add i64 %2, 11
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %6, %26
  %28 = tail call i64 @_ZN2v88internal6Object13GetSimpleHashES1_(i64 %27) #11
  %29 = and i64 %28, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %16
  %32 = bitcast %"class.v8::internal::JSReceiver"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.v8::internal::JSReceiver", %"class.v8::internal::JSReceiver"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %33, align 8
  %34 = call i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %35

35:                                               ; preds = %16, %31
  %36 = phi i64 [ %34, %31 ], [ %28, %16 ]
  %37 = trunc i64 %36 to i32
  %38 = ashr i32 %37, 1
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 134
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = zext i32 %38 to i64
  %47 = xor i64 %45, %46
  %48 = xor i64 %47, -1
  %49 = shl i64 %47, 18
  %50 = add i64 %49, %48
  %51 = lshr i64 %50, 31
  %52 = xor i64 %51, %50
  %53 = mul i64 %52, 21
  %54 = lshr i64 %53, 11
  %55 = xor i64 %54, %53
  %56 = mul i64 %55, 65
  %57 = lshr i64 %56, 22
  %58 = xor i64 %57, %56
  %59 = trunc i64 %58 to i32
  %60 = add i64 %22, 15
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = ashr i32 %62, 1
  %64 = load i64, i64* %12, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %66 = load i64, i64* %65, align 8
  %67 = add nsw i32 %63, -1
  %68 = and i32 %67, 1073741823
  %69 = and i32 %68, %59
  %70 = shl i32 %69, 3
  %71 = add i32 %70, 12
  %72 = sext i32 %71 to i64
  %73 = add i64 %22, 7
  %74 = add i64 %73, %72
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = trunc i64 %64 to i32
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %115, label %79

79:                                               ; preds = %35
  %80 = trunc i64 %66 to i32
  br label %81

81:                                               ; preds = %102, %79
  %82 = phi i32 [ %76, %79 ], [ %111, %102 ]
  %83 = phi i32 [ %69, %79 ], [ %105, %102 ]
  %84 = phi i32 [ 1, %79 ], [ %103, %102 ]
  %85 = zext i32 %82 to i64
  %86 = or i64 %40, %85
  %87 = icmp eq i32 %82, %80
  br i1 %87, label %102, label %88

88:                                               ; preds = %81
  %89 = and i64 %85, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  %92 = ashr i32 %82, 1
  %93 = sitofp i32 %92 to double
  br label %98

94:                                               ; preds = %88
  %95 = add i64 %86, 3
  %96 = inttoptr i64 %95 to double*
  %97 = load double, double* %96, align 1
  br label %98

98:                                               ; preds = %94, %91
  %99 = phi double [ %93, %91 ], [ %97, %94 ]
  %100 = fptoui double %99 to i32
  %101 = icmp eq i32 %38, %100
  br i1 %101, label %113, label %102

102:                                              ; preds = %98, %81
  %103 = add i32 %84, 1
  %104 = add i32 %84, %83
  %105 = and i32 %104, %67
  %106 = shl i32 %105, 3
  %107 = add i32 %106, 12
  %108 = sext i32 %107 to i64
  %109 = add i64 %73, %108
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = icmp eq i32 %111, %77
  br i1 %112, label %115, label %81

113:                                              ; preds = %98
  %114 = zext i32 %83 to i64
  br label %115

115:                                              ; preds = %102, %35, %113
  %116 = phi i64 [ -1, %35 ], [ %114, %113 ], [ -1, %102 ]
  %117 = add i64 %2, 31
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %6, %120
  %122 = icmp eq i32 %119, %77
  br i1 %122, label %123, label %156

123:                                              ; preds = %115
  %124 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %125 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %124, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %124, i64 0, i32 0, i32 1
  %128 = load i8, i8* %127, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %124, i64 0, i32 1, i64 0
  br label %140

132:                                              ; preds = %126, %123
  %133 = and i64 %22, -262144
  %134 = or i64 %133, 16
  %135 = inttoptr i64 %134 to i64*
  %136 = load i64, i64* %135, align 16
  %137 = add i64 %136, -41416
  %138 = inttoptr i64 %137 to %"class.v8::internal::Isolate"*
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %138, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %140

140:                                              ; preds = %130, %132
  %141 = phi i64* [ %139, %132 ], [ %131, %130 ]
  %142 = getelementptr inbounds i64, i64* %141, i64 5
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::SimpleNumberDictionary"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #11
  %145 = getelementptr inbounds %"class.v8::internal::SimpleNumberDictionary", %"class.v8::internal::SimpleNumberDictionary"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %22, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::SimpleNumberDictionary", %"class.v8::internal::SimpleNumberDictionary"* %4, i64 0, i32 0
  call void @_ZN2v88internal10DictionaryINS0_22SimpleNumberDictionaryENS0_27SimpleNumberDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary"* nonnull %146, i64 %116, i64 %143, i64 %143, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #11
  %147 = inttoptr i64 %73 to i32*
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = add i32 %148, -2
  %150 = and i32 %149, -2
  store atomic volatile i32 %150, i32* %147 monotonic, align 4
  %151 = add i64 %22, 11
  %152 = inttoptr i64 %151 to i32*
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = add i32 %153, 2
  %155 = and i32 %154, -2
  store atomic volatile i32 %155, i32* %152 monotonic, align 4
  br label %347

156:                                              ; preds = %115
  %157 = add i64 %121, 27
  %158 = inttoptr i64 %157 to i32*
  store atomic volatile i32 %77, i32* %158 monotonic, align 4
  %159 = and i64 %64, 1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %172, label %161

161:                                              ; preds = %156
  %162 = and i64 %121, -262144
  %163 = or i64 %162, 8
  %164 = inttoptr i64 %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = and i64 %165, 262144
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %172, label %168

168:                                              ; preds = %161
  %169 = or i64 %162, 16
  %170 = inttoptr i64 %169 to %"class.v8::internal::Heap"**
  %171 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %170, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %171, i64 %121, i64 %157, i64 %64) #11
  br label %172

172:                                              ; preds = %168, %161, %156
  %173 = and i64 %64, -262144
  %174 = or i64 %173, 8
  %175 = inttoptr i64 %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = and i64 %176, 24
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %172
  %180 = and i64 %121, -262144
  %181 = or i64 %180, 8
  %182 = inttoptr i64 %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = and i64 %183, 24
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %179
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %157, i64 %64) #11
  br label %187

187:                                              ; preds = %172, %179, %186
  %188 = load i64, i64* %12, align 8
  %189 = trunc i64 %188 to i32
  store atomic volatile i32 %189, i32* %118 monotonic, align 4
  %190 = and i64 %188, 1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %203, label %192

192:                                              ; preds = %187
  %193 = and i64 %2, -262144
  %194 = or i64 %193, 8
  %195 = inttoptr i64 %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = and i64 %196, 262144
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %203, label %199

199:                                              ; preds = %192
  %200 = or i64 %193, 16
  %201 = inttoptr i64 %200 to %"class.v8::internal::Heap"**
  %202 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %201, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %202, i64 %2, i64 %117, i64 %188) #11
  br label %203

203:                                              ; preds = %199, %192, %187
  %204 = and i64 %188, -262144
  %205 = or i64 %204, 8
  %206 = inttoptr i64 %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = and i64 %207, 24
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %218, label %210

210:                                              ; preds = %203
  %211 = and i64 %2, -262144
  %212 = or i64 %211, 8
  %213 = inttoptr i64 %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = and i64 %214, 24
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %210
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2, i64 %117, i64 %188) #11
  br label %218

218:                                              ; preds = %203, %210, %217
  %219 = trunc i64 %116 to i32
  %220 = shl i32 %219, 3
  %221 = add i32 %220, 16
  %222 = or i32 %221, 7
  %223 = sext i32 %222 to i64
  %224 = add i64 %22, %223
  %225 = inttoptr i64 %224 to i32*
  store atomic volatile i32 %119, i32* %225 monotonic, align 4
  %226 = and i64 %120, 1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %347, label %228

228:                                              ; preds = %218
  %229 = and i64 %22, -262144
  %230 = or i64 %229, 8
  %231 = inttoptr i64 %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = and i64 %232, 262144
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %239, label %235

235:                                              ; preds = %228
  %236 = or i64 %229, 16
  %237 = inttoptr i64 %236 to %"class.v8::internal::Heap"**
  %238 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %237, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %238, i64 %22, i64 %224, i64 %121) #11
  br label %239

239:                                              ; preds = %235, %228
  %240 = and i64 %121, -262144
  %241 = or i64 %240, 8
  %242 = inttoptr i64 %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = and i64 %243, 24
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %347, label %246

246:                                              ; preds = %239
  %247 = load i64, i64* %231, align 8
  %248 = and i64 %247, 24
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %347

250:                                              ; preds = %246
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %22, i64 %224, i64 %121) #11
  br label %347

251:                                              ; preds = %3
  %252 = add i64 %2, 31
  %253 = inttoptr i64 %252 to i32*
  %254 = load i32, i32* %253, align 4
  %255 = zext i32 %254 to i64
  %256 = or i64 %6, %255
  %257 = add i64 %11, 31
  %258 = inttoptr i64 %257 to i32*
  store atomic volatile i32 %254, i32* %258 monotonic, align 4
  %259 = and i64 %255, 1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %272, label %261

261:                                              ; preds = %251
  %262 = and i64 %11, -262144
  %263 = or i64 %262, 8
  %264 = inttoptr i64 %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = and i64 %265, 262144
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %272, label %268

268:                                              ; preds = %261
  %269 = or i64 %262, 16
  %270 = inttoptr i64 %269 to %"class.v8::internal::Heap"**
  %271 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %270, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %271, i64 %11, i64 %257, i64 %256) #11
  br label %272

272:                                              ; preds = %268, %261, %251
  %273 = and i64 %256, -262144
  %274 = or i64 %273, 8
  %275 = inttoptr i64 %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = and i64 %276, 24
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %287, label %279

279:                                              ; preds = %272
  %280 = and i64 %11, -262144
  %281 = or i64 %280, 8
  %282 = inttoptr i64 %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = and i64 %283, 24
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %279
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %11, i64 %257, i64 %256) #11
  br label %287

287:                                              ; preds = %272, %279, %286
  %288 = load i32, i32* %253, align 4
  %289 = zext i32 %288 to i64
  %290 = or i64 %6, %289
  %291 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %292 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %291, null
  br i1 %292, label %299, label %293

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %291, i64 0, i32 0, i32 1
  %295 = load i8, i8* %294, align 8, !range !2
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %299, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %291, i64 0, i32 1, i64 0
  br label %307

299:                                              ; preds = %293, %287
  %300 = and i64 %290, -262144
  %301 = or i64 %300, 16
  %302 = inttoptr i64 %301 to i64*
  %303 = load i64, i64* %302, align 16
  %304 = add i64 %303, -41416
  %305 = inttoptr i64 %304 to %"class.v8::internal::Isolate"*
  %306 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %305, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %307

307:                                              ; preds = %297, %299
  %308 = phi i64* [ %306, %299 ], [ %298, %297 ]
  %309 = getelementptr inbounds i64, i64* %308, i64 4
  %310 = load i64, i64* %309, align 8
  %311 = trunc i64 %310 to i32
  %312 = icmp eq i32 %288, %311
  br i1 %312, label %347, label %313

313:                                              ; preds = %307
  %314 = load i32, i32* %8, align 4
  %315 = zext i32 %314 to i64
  %316 = or i64 %6, %315
  %317 = add i64 %290, 27
  %318 = inttoptr i64 %317 to i32*
  store atomic volatile i32 %314, i32* %318 monotonic, align 4
  %319 = and i64 %315, 1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %332, label %321

321:                                              ; preds = %313
  %322 = and i64 %290, -262144
  %323 = or i64 %322, 8
  %324 = inttoptr i64 %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = and i64 %325, 262144
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %332, label %328

328:                                              ; preds = %321
  %329 = or i64 %322, 16
  %330 = inttoptr i64 %329 to %"class.v8::internal::Heap"**
  %331 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %330, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %331, i64 %290, i64 %317, i64 %316) #11
  br label %332

332:                                              ; preds = %328, %321, %313
  %333 = and i64 %316, -262144
  %334 = or i64 %333, 8
  %335 = inttoptr i64 %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = and i64 %336, 24
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %347, label %339

339:                                              ; preds = %332
  %340 = and i64 %290, -262144
  %341 = or i64 %340, 8
  %342 = inttoptr i64 %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = and i64 %343, 24
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %339
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %290, i64 %317, i64 %316) #11
  br label %347

347:                                              ; preds = %307, %332, %339, %346, %140, %218, %239, %246, %250
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #11

declare i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32) local_unnamed_addr #1

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #1

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"*, i8*) local_unnamed_addr #3

declare i32 @_ZN2v88internal18SharedFunctionInfo4HashEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal18SharedFunctionInfo13HasSourceCodeEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #1

declare i64 @_ZN2v88internal10JSReceiver15GetIdentityHashEv(%"class.v8::internal::JSReceiver"*) local_unnamed_addr #1

declare void @_ZN2v88internal40Heap_GenerationalEphemeronKeyBarrierSlowEPNS0_4HeapENS0_18EphemeronHashTableEm(%"class.v8::internal::Heap"*, i64, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase.1108"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1009"* dereferenceable(16), i8 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #13

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #13

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #13

declare i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"*, i64*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal10JSReceiver15GetDataPropertyEPNS0_14LookupIteratorENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #1

declare i16 @_ZN2v88internal10JSReceiver14HasOwnPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #1

declare i32 @_ZNK2v88internal24IncrementalStringBuilder6LengthEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #1

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #5 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #11
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1220"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1234"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #11
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1234"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #11
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1234"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1234"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #11
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #11
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #11
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #1

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #1

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.742", %"class.v8::internal::Handle.742"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 188
  br i1 %21, label %22, label %47

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 6
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %7, align 8
  br label %104

28:                                               ; preds = %1
  %29 = load i64, i64* %4, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 188
  br i1 %39, label %40, label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %41, align 4
  %42 = bitcast %"class.v8::internal::PrototypeIterator"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %43, i64 176
  %45 = ptrtoint %"class.v8::internal::Factory"* %44 to i64
  %46 = bitcast %"class.v8::internal::Handle.742"* %2 to i64*
  store i64 %45, i64* %46, align 8
  br label %104

47:                                               ; preds = %6, %11, %28
  %48 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %50 = select i1 %5, i64* %49, i64* %4
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %52, %61
  %63 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 7, i32 0, i64 6
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %60, %67
  br i1 %68, label %79, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = add i64 %57, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp ne i16 %76, 190
  %78 = zext i1 %77 to i8
  br label %79

79:                                               ; preds = %73, %69, %47
  %80 = phi i8 [ 1, %47 ], [ 0, %69 ], [ %78, %73 ]
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %80, i8* %81, align 4
  br i1 %5, label %82, label %83

82:                                               ; preds = %79
  store i64 %62, i64* %49, align 8
  br label %104

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 4
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %84, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %62) #11
  br label %102

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 1
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %91, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %64) #11
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i64* [ %96, %95 ], [ %91, %89 ]
  %99 = ptrtoint i64* %98 to i64
  %100 = add i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  store i64* %101, i64** %90, align 8
  store i64 %62, i64* %98, align 8
  br label %102

102:                                              ; preds = %97, %87
  %103 = phi i64* [ %88, %87 ], [ %98, %97 ]
  store i64* %103, i64** %48, align 8
  br label %104

104:                                              ; preds = %102, %82, %40, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal17PrototypeIterator9HasAccessEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %3 = alloca %"class.v8::internal::Context", align 8
  %4 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 190
  br i1 %16, label %17, label %43

17:                                               ; preds = %1
  %18 = bitcast %"class.v8::internal::Context"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = and i64 %6, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %29 = bitcast %"class.v8::internal::PrototypeIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #11
  %30 = load i64, i64* %21, align 16
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %32, %"class.v8::internal::Isolate"** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 3
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 4
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %2, i64 0, i32 6
  store i32 0, i32* %38, align 8
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %2) #11
  %39 = load i64, i64* %34, align 8
  %40 = trunc i64 %39 to i32
  %41 = trunc i64 %28 to i32
  %42 = icmp eq i32 %40, %41
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #11
  br i1 %42, label %79, label %52

43:                                               ; preds = %1
  %44 = load atomic i32, i32* %9 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %7, %45
  %47 = add i64 %46, 9
  %48 = inttoptr i64 %47 to i8*
  %49 = load atomic i8, i8* %48 monotonic, align 1
  %50 = and i8 %49, 32
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %17, %43
  %53 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %54 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %52
  %61 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %56) #11
  br label %75

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %54, i64 0, i32 31, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %54) #11
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i64* [ %69, %68 ], [ %64, %62 ]
  %72 = ptrtoint i64* %71 to i64
  %73 = add i64 %72, 8
  %74 = inttoptr i64 %73 to i64*
  store i64* %74, i64** %63, align 8
  store i64 %56, i64* %71, align 8
  br label %75

75:                                               ; preds = %60, %70
  %76 = phi i64* [ %61, %60 ], [ %71, %70 ]
  %77 = load i64*, i64** %4, align 8
  %78 = call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %54, i64* %76, i64* %77) #11
  br label %79

79:                                               ; preds = %17, %43, %75
  %80 = phi i1 [ %78, %75 ], [ true, %43 ], [ true, %17 ]
  ret i1 %80
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal17PrototypeIterator43AdvanceFollowingProxiesIgnoringAccessChecksEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.742", %"class.v8::internal::Handle.742"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = load i64, i64* %4, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 188
  br i1 %17, label %75, label %18

18:                                               ; preds = %1, %6
  %19 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = select i1 %5, i64* %20, i64* %4
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, -4294967296
  %24 = add i64 %22, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 15
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %23, %32
  %34 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 7, i32 0, i64 6
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %31, %38
  br i1 %39, label %50, label %40

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = add i64 %28, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp ne i16 %47, 190
  %49 = zext i1 %48 to i8
  br label %50

50:                                               ; preds = %44, %40, %18
  %51 = phi i8 [ 1, %18 ], [ 0, %40 ], [ %49, %44 ]
  %52 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %51, i8* %52, align 4
  br i1 %5, label %53, label %54

53:                                               ; preds = %50
  store i64 %33, i64* %20, align 8
  br label %107

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 4
  %56 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %55, align 8
  %57 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %56, i64 %33) #11
  br label %73

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 31, i32 1
  %64 = load i64*, i64** %63, align 8
  %65 = icmp eq i64* %62, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %60
  %67 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %35) #11
  br label %68

68:                                               ; preds = %66, %60
  %69 = phi i64* [ %67, %66 ], [ %62, %60 ]
  %70 = ptrtoint i64* %69 to i64
  %71 = add i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  store i64* %72, i64** %61, align 8
  store i64 %33, i64* %69, align 8
  br label %73

73:                                               ; preds = %68, %58
  %74 = phi i64* [ %59, %58 ], [ %69, %68 ]
  store i64* %74, i64** %19, align 8
  br label %107

75:                                               ; preds = %6
  %76 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 6
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = icmp sgt i32 %77, 102399
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %83 = tail call i64 @_ZN2v88internal7Isolate13StackOverflowEv(%"class.v8::internal::Isolate"* %82) #11
  br label %107

84:                                               ; preds = %75
  %85 = tail call i64* @_ZN2v88internal7JSProxy12GetPrototypeENS0_6HandleIS1_EE(i64* nonnull %4)
  %86 = icmp eq i64* %85, null
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  store i64* null, i64** %3, align 8
  br label %107

88:                                               ; preds = %84
  %89 = ptrtoint i64* %85 to i64
  %90 = bitcast %"class.v8::internal::Handle.742"* %2 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %104, label %94

94:                                               ; preds = %88
  %95 = load i64, i64* %85, align 8
  %96 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 6
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %95 to i32
  %101 = trunc i64 %99 to i32
  %102 = icmp eq i32 %100, %101
  %103 = zext i1 %102 to i8
  br label %104

104:                                              ; preds = %94, %88
  %105 = phi i8 [ 1, %88 ], [ %103, %94 ]
  %106 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %105, i8* %106, align 4
  br label %107

107:                                              ; preds = %104, %87, %73, %53, %80
  %108 = phi i1 [ false, %80 ], [ true, %53 ], [ true, %73 ], [ true, %104 ], [ false, %87 ]
  ret i1 %108
}

declare zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1

declare i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"*) local_unnamed_addr #1

declare void @_ZN2v88internal6Logger22ApiNamedPropertyAccessEPKcNS0_8JSObjectENS0_6ObjectE(%"class.v8::internal::Logger"*, i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal25PropertyCallbackArguments28BasicCallNamedGetterCallbackEPFvNS_5LocalINS_4NameEEERKNS_20PropertyCallbackInfoINS_5ValueEEEENS0_6HandleINS0_4NameEEENSC_INS0_6ObjectEEESG_(%"class.v8::internal::PropertyCallbackArguments"*, void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)*, i64*, i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %6 = alloca [2 x %"class.std::__1::unique_ptr.1625"], align 16
  %7 = alloca %"class.v8::internal::ExternalCallbackScope", align 8
  %8 = alloca %"class.v8::PropertyCallbackInfo", align 8
  %9 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 2
  %10 = bitcast i64* %9 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 108
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 32
  br i1 %14, label %15, label %19

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 68
  %17 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %16, align 8
  %18 = tail call zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"* %17, i64* %3, i64* %4, i32 1) #11
  br i1 %18, label %19, label %135

19:                                               ; preds = %15, %5
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 22
  %21 = load i32, i32* %20, align 8
  store i32 6, i32* %20, align 8
  %22 = bitcast %"class.v8::internal::ExternalCallbackScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = ptrtoint void (%"class.v8::Name"*, %"class.v8::PropertyCallbackInfo"*)* %1 to i64
  %24 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %11, %"class.v8::internal::Isolate"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 1
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ExternalCallbackScope", %"class.v8::internal::ExternalCallbackScope"* %7, i64 0, i32 2
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 21
  %28 = bitcast %"class.v8::internal::ExternalCallbackScope"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.v8::internal::ExternalCallbackScope"** %26 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.v8::internal::ExternalCallbackScope"* %7, %"class.v8::internal::ExternalCallbackScope"** %27, align 8
  %31 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  %32 = inttoptr i64 %31 to i8*
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %19
  %35 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %36 = bitcast %"class.v8::TracingController"* %35 to i8* (%"class.v8::TracingController"*, i8*)***
  %37 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %36, align 8
  %38 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %37, i64 2
  %39 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %38, align 8
  %40 = call i8* %39(%"class.v8::TracingController"* %35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.423, i64 0, i64 0)) #11
  %41 = ptrtoint i8* %40 to i64
  store atomic volatile i64 %41, i64* @_ZZN2v88internal21ExternalCallbackScopeC1EPNS0_7IsolateEmE27trace_event_unique_atomic63 monotonic, align 8
  br label %42

42:                                               ; preds = %34, %19
  %43 = phi i8* [ %32, %19 ], [ %40, %34 ]
  %44 = load atomic i8, i8* %43 monotonic, align 1
  %45 = and i8 %44, 5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %42
  %48 = bitcast [2 x %"class.std::__1::unique_ptr.1625"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #11
  %49 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 0, i64 16, i1 false) #11
  %50 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %51 = bitcast %"class.v8::TracingController"* %50 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)***
  %52 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)** %52, i64 3
  %54 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)** %53, align 8
  %55 = call i64 %54(%"class.v8::TracingController"* %50, i8 signext 66, i8* %43, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.424, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1625"* nonnull %49, i32 0) #11
  %56 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %57 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %56, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %56, align 8
  %58 = icmp eq %"class.v8::ConvertableToTraceFormat"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %47
  %60 = bitcast %"class.v8::ConvertableToTraceFormat"* %57 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, i64 1
  %63 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %62, align 8
  call void %63(%"class.v8::ConvertableToTraceFormat"* nonnull %57) #11
  br label %64

64:                                               ; preds = %59, %47
  %65 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %65, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %65, align 16
  %67 = icmp eq %"class.v8::ConvertableToTraceFormat"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.v8::ConvertableToTraceFormat"* %66 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %70 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %70, i64 1
  %72 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %71, align 8
  call void %72(%"class.v8::ConvertableToTraceFormat"* nonnull %66) #11
  br label %73

73:                                               ; preds = %68, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  br label %74

74:                                               ; preds = %42, %73
  %75 = bitcast %"class.v8::PropertyCallbackInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 0
  %77 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %8, i64 0, i32 0
  store i64* %76, i64** %77, align 8
  %78 = bitcast i64* %2 to %"class.v8::Name"*
  call void %1(%"class.v8::Name"* %78, %"class.v8::PropertyCallbackInfo"* nonnull dereferenceable(8) %8) #11
  %79 = getelementptr inbounds %"class.v8::internal::PropertyCallbackArguments", %"class.v8::internal::PropertyCallbackArguments"* %0, i64 0, i32 0, i32 1, i64 4
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 5
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %80 to i32
  %84 = trunc i64 %82 to i32
  %85 = icmp eq i32 %83, %84
  %86 = select i1 %85, i64* null, i64* %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %88 = load i64, i64* %30, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 0, i32 9, i32 21
  %90 = bitcast %"class.v8::internal::ExternalCallbackScope"** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = load atomic i64, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  %92 = inttoptr i64 %91 to i8*
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %94, label %102

94:                                               ; preds = %74
  %95 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %96 = bitcast %"class.v8::TracingController"* %95 to i8* (%"class.v8::TracingController"*, i8*)***
  %97 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %96, align 8
  %98 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %97, i64 2
  %99 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %98, align 8
  %100 = call i8* %99(%"class.v8::TracingController"* %95, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.423, i64 0, i64 0)) #11
  %101 = ptrtoint i8* %100 to i64
  store atomic volatile i64 %101, i64* @_ZZN2v88internal21ExternalCallbackScopeD1EvE27trace_event_unique_atomic69 monotonic, align 8
  br label %102

102:                                              ; preds = %94, %74
  %103 = phi i8* [ %92, %74 ], [ %100, %94 ]
  %104 = load atomic i8, i8* %103 monotonic, align 1
  %105 = and i8 %104, 5
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %134, label %107

107:                                              ; preds = %102
  %108 = bitcast [2 x %"class.std::__1::unique_ptr.1625"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #11
  %109 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %108, i8 0, i64 16, i1 false) #11
  %110 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %111 = bitcast %"class.v8::TracingController"* %110 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)***
  %112 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*** %111, align 8
  %113 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)** %112, i64 3
  %114 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1625"*, i32)** %113, align 8
  %115 = call i64 %114(%"class.v8::TracingController"* %110, i8 signext 69, i8* %103, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.424, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1625"* nonnull %109, i32 0) #11
  %116 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %117 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %116, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %116, align 8
  %118 = icmp eq %"class.v8::ConvertableToTraceFormat"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %107
  %120 = bitcast %"class.v8::ConvertableToTraceFormat"* %117 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %121 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %121, i64 1
  %123 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %122, align 8
  call void %123(%"class.v8::ConvertableToTraceFormat"* nonnull %117) #11
  br label %124

124:                                              ; preds = %119, %107
  %125 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1625"], [2 x %"class.std::__1::unique_ptr.1625"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %125, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %125, align 16
  %127 = icmp eq %"class.v8::ConvertableToTraceFormat"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.v8::ConvertableToTraceFormat"* %126 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %130 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %130, i64 1
  %132 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %131, align 8
  call void %132(%"class.v8::ConvertableToTraceFormat"* nonnull %126) #11
  br label %133

133:                                              ; preds = %128, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #11
  br label %134

134:                                              ; preds = %102, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  store i32 %21, i32* %20, align 8
  br label %135

135:                                              ; preds = %15, %134
  %136 = phi i64* [ %86, %134 ], [ null, %15 ]
  ret i64* %136
}

declare zeroext i1 @_ZN2v88internal5Debug33PerformSideEffectCheckForCallbackENS0_6HandleINS0_6ObjectEEES4_NS1_12AccessorKindE(%"class.v8::internal::Debug"*, i64*, i64*, i32) local_unnamed_addr #1

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable21PostGarbageCollectionEv(%"class.v8::internal::Relocatable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD2Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD0Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Relocatable"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE(%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #11
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #11
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #11
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #11
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #11
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #11
  tail call void @_ZdlPv(i8* %8) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

declare void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"*, i8*, i64, %"class.v8::internal::StringStream::FmtElm"*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #14

declare i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"*) local_unnamed_addr #1

declare void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #1

declare i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal6String16SlowAsArrayIndexEPj(%"class.v8::internal::String"*, i32*) local_unnamed_addr #1

declare i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #1

declare i64 @_ZN2v88internal19TransitionsAccessor13SearchSpecialENS0_6SymbolE(%"class.v8::internal::TransitionsAccessor"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal7Factory21InternalizeUtf8StringERKNS0_6VectorIKcEE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1632"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* sret, %"class.v8::internal::String"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"*, %"class.v8::internal::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.v8::internal::ConsString", align 8
  %5 = alloca %"class.v8::internal::SlicedString", align 8
  %6 = alloca %"class.v8::internal::ThinString", align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 15
  switch i32 %9, label %134 [
    i32 8, label %10
    i32 0, label %20
    i32 9, label %30
    i32 1, label %30
    i32 10, label %37
    i32 2, label %79
    i32 11, label %120
    i32 3, label %120
    i32 13, label %127
    i32 5, label %127
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i32, i32* %2, align 4
  %14 = sext i32 %13 to i64
  %15 = add i64 %12, 11
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i8*
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  br label %135

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = load i32, i32* %2, align 4
  %24 = shl nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = add i64 %22, 11
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  br label %135

30:                                               ; preds = %3, %3
  %31 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = load i32, i32* %2, align 4
  %34 = bitcast %"class.v8::internal::ConsString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.v8::internal::ConsString", %"class.v8::internal::ConsString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %35, align 8
  %36 = call zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"* nonnull %4, i32 %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %135

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* %2, align 4
  %41 = and i64 %39, -4294967296
  %42 = add i64 %39, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = and i16 %49, 16
  %51 = icmp eq i16 %50, 0
  %52 = add i64 %39, 11
  %53 = inttoptr i64 %52 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %51, label %66, label %54

54:                                               ; preds = %37
  %55 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %56 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %55, i64 0, i32 0
  %57 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %55 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %58 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %58, i64 2
  %60 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.v8::String::ExternalStringResourceBase"* %56) #11
  br i1 %61, label %62, label %66

62:                                               ; preds = %54
  %63 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %63) #11
  %64 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %63, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  br label %73

66:                                               ; preds = %54, %37
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %68 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %69 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %68, align 8
  %70 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %69, i64 6
  %71 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %70, align 8
  %72 = tail call i8* %71(%"class.v8::String::ExternalOneByteStringResource"* %67) #11
  br label %73

73:                                               ; preds = %62, %66
  %74 = phi i8* [ %65, %62 ], [ %72, %66 ]
  %75 = sext i32 %40 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  br label %135

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = load i32, i32* %2, align 4
  %83 = and i64 %81, -4294967296
  %84 = add i64 %81, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 16
  %93 = icmp eq i16 %92, 0
  %94 = add i64 %81, 11
  %95 = inttoptr i64 %94 to %"class.v8::String::ExternalStringResource"**
  br i1 %93, label %108, label %96

96:                                               ; preds = %79
  %97 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %98 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %97, i64 0, i32 0
  %99 = bitcast %"class.v8::String::ExternalStringResource"* %97 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %100 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %100, i64 2
  %102 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.v8::String::ExternalStringResourceBase"* %98) #11
  br i1 %103, label %104, label %108

104:                                              ; preds = %96
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %105) #11
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 1
  %107 = load i16*, i16** %106, align 8
  br label %115

108:                                              ; preds = %96, %79
  %109 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %110 = bitcast %"class.v8::String::ExternalStringResource"* %109 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %111 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %110, align 8
  %112 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %111, i64 6
  %113 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %112, align 8
  %114 = tail call i16* %113(%"class.v8::String::ExternalStringResource"* %109) #11
  br label %115

115:                                              ; preds = %104, %108
  %116 = phi i16* [ %107, %104 ], [ %114, %108 ]
  %117 = sext i32 %82 to i64
  %118 = getelementptr inbounds i16, i16* %116, i64 %117
  %119 = load i16, i16* %118, align 2
  br label %135

120:                                              ; preds = %3, %3
  %121 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = load i32, i32* %2, align 4
  %124 = bitcast %"class.v8::internal::SlicedString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #11
  %125 = getelementptr inbounds %"class.v8::internal::SlicedString", %"class.v8::internal::SlicedString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %122, i64* %125, align 8
  %126 = call zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"* nonnull %5, i32 %123) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #11
  br label %135

127:                                              ; preds = %3, %3
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = load i32, i32* %2, align 4
  %131 = bitcast %"class.v8::internal::ThinString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #11
  %132 = getelementptr inbounds %"class.v8::internal::ThinString", %"class.v8::internal::ThinString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %129, i64* %132, align 8
  %133 = call zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"* nonnull %6, i32 %130) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #11
  br label %135

134:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

135:                                              ; preds = %127, %120, %115, %73, %30, %20, %10
  %136 = phi i16 [ %133, %127 ], [ %126, %120 ], [ %119, %115 ], [ %78, %73 ], [ %36, %30 ], [ %29, %20 ], [ %19, %10 ]
  ret i16 %136
}

declare zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"*, i32) local_unnamed_addr #1

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #1

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #1

declare zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"*, i32) local_unnamed_addr #1

declare zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4Heap9CopyRangeINS0_25CompressedMaybeObjectSlotEEEvNS0_10HeapObjectET_S5_iNS0_16WriteBarrierModeE(%"class.v8::internal::Heap"*, i64, i64, i64, i32, i32) local_unnamed_addr #1

declare i32 @_ZN2v88internal8JSObject20GetFastElementsUsageEv(%"class.v8::internal::JSObject"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal7Factory22NewJSArrayWithElementsENS0_6HandleINS0_14FixedArrayBaseEEENS0_12ElementsKindEiNS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #17
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #11
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #15

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_13ObjectVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext, i64, i64, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.v8::internal::RelocIterator", align 8
  %7 = zext i16 %0 to i32
  %8 = icmp ult i16 %0, 64
  br i1 %8, label %9, label %39

9:                                                ; preds = %5
  %10 = and i32 %7, 7
  switch i32 %10, label %38 [
    i32 0, label %953
    i32 1, label %11
    i32 5, label %20
    i32 3, label %29
    i32 2, label %953
  ]

11:                                               ; preds = %9
  %12 = add i64 %2, -1
  %13 = add i64 %2, 11
  %14 = sext i32 %3 to i64
  %15 = add i64 %12, %14
  %16 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %17 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, i64 2
  %19 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %18, align 8
  tail call void %19(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %13, i64 %15) #11
  br label %953

20:                                               ; preds = %9
  %21 = add i64 %2, -1
  %22 = add i64 %2, 11
  %23 = sext i32 %3 to i64
  %24 = add i64 %21, %23
  %25 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %26 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %26, i64 2
  %28 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %27, align 8
  tail call void %28(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %22, i64 %24) #11
  br label %953

29:                                               ; preds = %9
  %30 = add i64 %2, -1
  %31 = add i64 %2, 11
  %32 = sext i32 %3 to i64
  %33 = add i64 %30, %32
  %34 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %35 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %35, i64 2
  %37 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %36, align 8
  tail call void %37(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %31, i64 %33) #11
  br label %953

38:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

39:                                               ; preds = %5
  switch i16 %0, label %952 [
    i16 165, label %40
    i16 130, label %54
    i16 129, label %54
    i16 120, label %54
    i16 125, label %54
    i16 126, label %54
    i16 127, label %54
    i16 123, label %54
    i16 122, label %54
    i16 124, label %54
    i16 128, label %54
    i16 131, label %54
    i16 121, label %63
    i16 137, label %94
    i16 138, label %94
    i16 139, label %94
    i16 140, label %94
    i16 141, label %94
    i16 142, label %94
    i16 143, label %94
    i16 145, label %94
    i16 146, label %94
    i16 144, label %103
    i16 134, label %953
    i16 166, label %953
    i16 176, label %114
    i16 160, label %123
    i16 102, label %132
    i16 164, label %953
    i16 186, label %139
    i16 72, label %171
    i16 73, label %184
    i16 74, label %197
    i16 187, label %210
    i16 75, label %266
    i16 1056, label %282
    i16 1055, label %282
    i16 1042, label %282
    i16 1087, label %282
    i16 1085, label %282
    i16 1088, label %282
    i16 1053, label %282
    i16 1054, label %282
    i16 1058, label %282
    i16 1090, label %282
    i16 1091, label %282
    i16 1094, label %282
    i16 1095, label %282
    i16 1052, label %282
    i16 189, label %282
    i16 190, label %282
    i16 1043, label %282
    i16 1044, label %282
    i16 1074, label %282
    i16 1075, label %282
    i16 1081, label %282
    i16 1076, label %282
    i16 1098, label %282
    i16 191, label %282
    i16 1045, label %282
    i16 1057, label %282
    i16 1041, label %282
    i16 1046, label %282
    i16 1101, label %282
    i16 1047, label %282
    i16 1103, label %282
    i16 1102, label %282
    i16 1048, label %282
    i16 1077, label %282
    i16 1049, label %282
    i16 1082, label %282
    i16 1078, label %282
    i16 1040, label %282
    i16 1050, label %282
    i16 1108, label %282
    i16 1051, label %282
    i16 1109, label %282
    i16 1089, label %282
    i16 1092, label %282
    i16 1093, label %282
    i16 1096, label %282
    i16 1097, label %282
    i16 1099, label %282
    i16 1100, label %282
    i16 1104, label %282
    i16 1105, label %282
    i16 1106, label %282
    i16 1107, label %282
    i16 1111, label %282
    i16 1112, label %282
    i16 1114, label %282
    i16 1115, label %282
    i16 1116, label %282
    i16 1117, label %282
    i16 1113, label %339
    i16 1083, label %340
    i16 1084, label %340
    i16 1086, label %397
    i16 1079, label %398
    i16 1080, label %399
    i16 1059, label %400
    i16 1072, label %400
    i16 1073, label %400
    i16 1071, label %400
    i16 1070, label %400
    i16 1066, label %400
    i16 1067, label %400
    i16 1064, label %400
    i16 1068, label %400
    i16 1065, label %400
    i16 1062, label %400
    i16 1063, label %400
    i16 1069, label %400
    i16 1061, label %400
    i16 1060, label %400
    i16 185, label %457
    i16 1110, label %479
    i16 188, label %480
    i16 70, label %487
    i16 172, label %494
    i16 162, label %505
    i16 161, label %517
    i16 177, label %524
    i16 64, label %531
    i16 133, label %538
    i16 151, label %552
    i16 150, label %564
    i16 152, label %578
    i16 183, label %590
    i16 163, label %604
    i16 175, label %614
    i16 66, label %953
    i16 168, label %953
    i16 132, label %953
    i16 169, label %953
    i16 65, label %953
    i16 90, label %642
    i16 76, label %656
    i16 77, label %656
    i16 78, label %656
    i16 79, label %656
    i16 80, label %656
    i16 83, label %656
    i16 84, label %656
    i16 85, label %656
    i16 86, label %656
    i16 87, label %656
    i16 88, label %656
    i16 89, label %656
    i16 91, label %656
    i16 92, label %656
    i16 93, label %656
    i16 94, label %656
    i16 95, label %656
    i16 96, label %656
    i16 97, label %656
    i16 99, label %656
    i16 100, label %656
    i16 101, label %656
    i16 103, label %656
    i16 104, label %656
    i16 105, label %656
    i16 106, label %656
    i16 107, label %656
    i16 108, label %656
    i16 109, label %656
    i16 110, label %656
    i16 111, label %656
    i16 112, label %656
    i16 113, label %656
    i16 114, label %656
    i16 115, label %656
    i16 116, label %656
    i16 117, label %656
    i16 118, label %656
    i16 98, label %693
    i16 81, label %702
    i16 82, label %702
    i16 155, label %715
    i16 156, label %726
    i16 67, label %737
    i16 119, label %746
    i16 159, label %755
    i16 136, label %764
    i16 178, label %773
    i16 153, label %782
    i16 154, label %791
    i16 167, label %800
    i16 184, label %809
    i16 173, label %818
    i16 179, label %827
    i16 158, label %839
    i16 157, label %846
    i16 174, label %856
    i16 170, label %865
    i16 181, label %874
    i16 180, label %883
    i16 147, label %892
    i16 148, label %901
    i16 68, label %953
    i16 69, label %953
    i16 135, label %913
    i16 171, label %922
    i16 149, label %931
    i16 182, label %943
  ]

40:                                               ; preds = %39
  %41 = icmp sgt i32 %3, 8
  br i1 %41, label %42, label %953

42:                                               ; preds = %40
  %43 = add i64 %2, -1
  %44 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  br label %45

45:                                               ; preds = %45, %42
  %46 = phi i64 [ 8, %42 ], [ %51, %45 ]
  %47 = add i64 %43, %46
  %48 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %44, align 8
  %49 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %48, i64 5
  %50 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %49, align 8
  tail call void %50(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %47) #11
  %51 = add nuw i64 %46, 8
  %52 = trunc i64 %51 to i32
  %53 = icmp slt i32 %52, %3
  br i1 %53, label %45, label %953

54:                                               ; preds = %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39
  %55 = add i64 %2, -1
  %56 = add i64 %2, 3
  %57 = sext i32 %3 to i64
  %58 = add i64 %55, %57
  %59 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %60 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %60, i64 2
  %62 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %61, align 8
  tail call void %62(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %56, i64 %58) #11
  br label %953

63:                                               ; preds = %39
  %64 = add i64 %2, -1
  %65 = add i64 %2, 7
  %66 = add i64 %2, 19
  %67 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %68 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %68, i64 2
  %70 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %69, align 8
  tail call void %70(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %65, i64 %66) #11
  %71 = add i64 %2, 15
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = ashr i32 %73, 1
  %75 = sext i32 %74 to i64
  %76 = icmp eq i32 %74, 0
  br i1 %76, label %953, label %77

77:                                               ; preds = %63
  %78 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)***
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %92, %79 ]
  %81 = trunc i64 %80 to i32
  %82 = shl i32 %81, 3
  %83 = add i32 %82, 20
  %84 = add i32 %82, 24
  %85 = sext i32 %83 to i64
  %86 = add i64 %64, %85
  %87 = sext i32 %84 to i64
  %88 = add i64 %64, %87
  %89 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)*** %78, align 8
  %90 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)** %89, i64 8
  %91 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)** %90, align 8
  tail call void %91(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i32 %81, i64 %86, i64 %88) #11
  %92 = add i64 %80, 1
  %93 = icmp eq i64 %92, %75
  br i1 %93, label %953, label %79

94:                                               ; preds = %39, %39, %39, %39, %39, %39, %39, %39, %39
  %95 = add i64 %2, -1
  %96 = add i64 %2, 3
  %97 = sext i32 %3 to i64
  %98 = add i64 %95, %97
  %99 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %100 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %100, i64 2
  %102 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %101, align 8
  tail call void %102(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %96, i64 %98) #11
  br label %953

103:                                              ; preds = %39
  %104 = add i64 %2, 3
  %105 = add i64 %2, 1015
  %106 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %107 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %107, i64 2
  %109 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %108, align 8
  tail call void %109(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %104, i64 %105) #11
  %110 = add i64 %2, 1027
  %111 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %106, align 8
  %112 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %111, i64 4
  %113 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %112, align 8
  tail call void %113(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %105, i64 %110) #11
  br label %953

114:                                              ; preds = %39
  %115 = add i64 %2, -1
  %116 = add i64 %2, 7
  %117 = sext i32 %3 to i64
  %118 = add i64 %115, %117
  %119 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %120 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %120, i64 2
  %122 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %121, align 8
  tail call void %122(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %116, i64 %118) #11
  br label %953

123:                                              ; preds = %39
  %124 = add i64 %2, -1
  %125 = add i64 %2, 3
  %126 = sext i32 %3 to i64
  %127 = add i64 %124, %126
  %128 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %129 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %129, i64 3
  %131 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %130, align 8
  tail call void %131(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %125, i64 %127) #11
  br label %953

132:                                              ; preds = %39
  %133 = add i64 %2, 3
  %134 = add i64 %2, 7
  %135 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %136 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %136, i64 2
  %138 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %137, align 8
  tail call void %138(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %133, i64 %134) #11
  br label %953

139:                                              ; preds = %39
  %140 = and i64 %1, -4294967296
  %141 = add i64 %1, 19
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %140, %144
  %146 = add i64 %145, -1
  %147 = inttoptr i64 %146 to i32*
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = zext i32 %148 to i64
  %150 = or i64 %140, %149
  %151 = and i64 %149, 3
  %152 = icmp eq i64 %151, 0
  %153 = add i64 %150, 1
  %154 = select i1 %152, i64 %153, i64 %145
  %155 = add i64 %154, 3
  %156 = inttoptr i64 %155 to %"class.v8::internal::wasm::ArrayType"**
  %157 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %156, align 1
  %158 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %157, i64 0, i32 0, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = and i32 %159, 28
  %161 = icmp eq i32 %160, 8
  br i1 %161, label %162, label %953

162:                                              ; preds = %139
  %163 = add i64 %2, -1
  %164 = add i64 %2, 11
  %165 = sext i32 %3 to i64
  %166 = add i64 %163, %165
  %167 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %168 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %168, i64 2
  %170 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %169, align 8
  tail call void %170(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %164, i64 %166) #11
  br label %953

171:                                              ; preds = %39
  %172 = add i64 %2, 3
  %173 = inttoptr i64 %172 to i64*
  %174 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)***
  %175 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %175, i64 13
  %177 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %176, align 8
  tail call void %177(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64* %173) #11
  %178 = add i64 %2, 11
  %179 = add i64 %2, 27
  %180 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %181 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %181, i64 2
  %183 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %182, align 8
  tail call void %183(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %178, i64 %179) #11
  br label %953

184:                                              ; preds = %39
  %185 = add i64 %2, 3
  %186 = inttoptr i64 %185 to i64*
  %187 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)***
  %188 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %188, i64 13
  %190 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %189, align 8
  tail call void %190(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64* %186) #11
  %191 = add i64 %2, 11
  %192 = add i64 %2, 43
  %193 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %194 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %194, i64 2
  %196 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %195, align 8
  tail call void %196(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %191, i64 %192) #11
  br label %953

197:                                              ; preds = %39
  %198 = add i64 %2, 3
  %199 = inttoptr i64 %198 to i64*
  %200 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)***
  %201 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*** %200, align 8
  %202 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %201, i64 13
  %203 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %202, align 8
  tail call void %203(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64* %199) #11
  %204 = add i64 %2, 11
  %205 = add i64 %2, 35
  %206 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %207 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %207, i64 2
  %209 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %208, align 8
  tail call void %209(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %204, i64 %205) #11
  br label %953

210:                                              ; preds = %39
  %211 = and i64 %1, -4294967296
  %212 = add i64 %1, 19
  %213 = inttoptr i64 %212 to i32*
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = or i64 %211, %215
  %217 = add i64 %216, -1
  %218 = inttoptr i64 %217 to i32*
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = zext i32 %219 to i64
  %221 = or i64 %211, %220
  %222 = and i64 %220, 3
  %223 = icmp eq i64 %222, 0
  %224 = add i64 %221, 1
  %225 = select i1 %223, i64 %224, i64 %216
  %226 = add i64 %225, 3
  %227 = inttoptr i64 %226 to %"class.v8::internal::wasm::StructType"**
  %228 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %227, align 1
  %229 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %228, i64 0, i32 0
  %230 = load i32, i32* %229, align 8
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %953, label %232

232:                                              ; preds = %210
  %233 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %228, i64 0, i32 2
  %234 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %228, i64 0, i32 1
  %235 = add i64 %2, 7
  %236 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  br label %237

237:                                              ; preds = %261, %232
  %238 = phi i32 [ %230, %232 ], [ %262, %261 ]
  %239 = phi i64 [ 0, %232 ], [ %263, %261 ]
  %240 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %233, align 8
  %241 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %240, i64 %239, i32 0
  %242 = load i32, i32* %241, align 4
  %243 = and i32 %242, 28
  %244 = icmp eq i32 %243, 8
  br i1 %244, label %245, label %261

245:                                              ; preds = %237
  %246 = icmp eq i64 %239, 0
  br i1 %246, label %253, label %247

247:                                              ; preds = %245
  %248 = load i32*, i32** %234, align 8
  %249 = add nuw nsw i64 %239, 4294967295
  %250 = and i64 %249, 4294967295
  %251 = getelementptr inbounds i32, i32* %248, i64 %250
  %252 = load i32, i32* %251, align 4
  br label %253

253:                                              ; preds = %247, %245
  %254 = phi i32 [ %252, %247 ], [ 0, %245 ]
  %255 = sext i32 %254 to i64
  %256 = add i64 %235, %255
  %257 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %236, align 8
  %258 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %257, i64 5
  %259 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %258, align 8
  tail call void %259(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %256) #11
  %260 = load i32, i32* %229, align 8
  br label %261

261:                                              ; preds = %253, %237
  %262 = phi i32 [ %238, %237 ], [ %260, %253 ]
  %263 = add nuw nsw i64 %239, 1
  %264 = zext i32 %262 to i64
  %265 = icmp ult i64 %263, %264
  br i1 %265, label %237, label %953

266:                                              ; preds = %39
  %267 = add i64 %2, 3
  %268 = inttoptr i64 %267 to i64*
  %269 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)***
  %270 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*** %269, align 8
  %271 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %270, i64 13
  %272 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %271, align 8
  tail call void %272(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64* %268) #11
  %273 = add i64 %2, 11
  %274 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %275 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %274, align 8
  %276 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %275, i64 5
  %277 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %276, align 8
  tail call void %277(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %273) #11
  %278 = add i64 %2, 15
  %279 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %274, align 8
  %280 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %279, i64 5
  %281 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %280, align 8
  tail call void %281(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %278) #11
  br label %953

282:                                              ; preds = %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39
  %283 = add i64 %1, 7
  %284 = inttoptr i64 %283 to i16*
  %285 = load atomic i16, i16* %284 monotonic, align 2
  %286 = icmp eq i16 %285, 1057
  br i1 %286, label %293, label %287

287:                                              ; preds = %282
  %288 = add i64 %1, 9
  %289 = inttoptr i64 %288 to i8*
  %290 = load atomic i8, i8* %289 monotonic, align 1
  %291 = icmp slt i8 %290, 0
  %292 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %285, i1 zeroext %291) #11
  br label %293

293:                                              ; preds = %287, %282
  %294 = phi i32 [ %292, %287 ], [ 12, %282 ]
  %295 = add i64 %1, 4
  %296 = inttoptr i64 %295 to i8*
  %297 = load atomic i8, i8* %296 monotonic, align 1
  %298 = zext i8 %297 to i32
  %299 = shl nuw nsw i32 %298, 2
  %300 = icmp slt i32 %294, %299
  %301 = add i64 %2, -1
  br i1 %300, label %304, label %302

302:                                              ; preds = %293
  %303 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  br label %329

304:                                              ; preds = %293
  %305 = add i64 %2, 3
  %306 = sext i32 %294 to i64
  %307 = add i64 %301, %306
  %308 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %309 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %308, align 8
  %310 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %309, i64 2
  %311 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %310, align 8
  tail call void %311(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %305, i64 %307) #11
  %312 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %313 = zext i32 %299 to i64
  br label %314

314:                                              ; preds = %314, %304
  %315 = phi i64 [ %306, %304 ], [ %320, %314 ]
  %316 = add i64 %315, %301
  %317 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %312, align 8
  %318 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %317, i64 5
  %319 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %318, align 8
  tail call void %319(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %316) #11
  %320 = add nsw i64 %315, 8
  %321 = icmp slt i64 %320, %313
  br i1 %321, label %314, label %322

322:                                              ; preds = %314
  %323 = icmp eq i8 %297, 0
  br i1 %323, label %324, label %329

324:                                              ; preds = %322
  %325 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %326 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %325, align 8
  %327 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %326, i64 17
  %328 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %327, align 8
  tail call void %328(%"class.v8::internal::ObjectVisitor"* %4, i64 %2) #11
  br label %329

329:                                              ; preds = %302, %322, %324
  %330 = phi void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** [ %303, %302 ], [ %308, %322 ], [ %308, %324 ]
  %331 = phi i32 [ 4, %302 ], [ %299, %322 ], [ 4, %324 ]
  %332 = sext i32 %331 to i64
  %333 = add i64 %301, %332
  %334 = sext i32 %3 to i64
  %335 = add i64 %301, %334
  %336 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %330, align 8
  %337 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %336, i64 2
  %338 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %337, align 8
  tail call void %338(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %333, i64 %335) #11
  br label %953

339:                                              ; preds = %39
  tail call void @_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::ObjectVisitor"* %4) #11
  br label %953

340:                                              ; preds = %39, %39
  %341 = add i64 %1, 7
  %342 = inttoptr i64 %341 to i16*
  %343 = load atomic i16, i16* %342 monotonic, align 2
  %344 = icmp eq i16 %343, 1057
  br i1 %344, label %351, label %345

345:                                              ; preds = %340
  %346 = add i64 %1, 9
  %347 = inttoptr i64 %346 to i8*
  %348 = load atomic i8, i8* %347 monotonic, align 1
  %349 = icmp slt i8 %348, 0
  %350 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %343, i1 zeroext %349) #11
  br label %351

351:                                              ; preds = %345, %340
  %352 = phi i32 [ %350, %345 ], [ 12, %340 ]
  %353 = add i64 %1, 4
  %354 = inttoptr i64 %353 to i8*
  %355 = load atomic i8, i8* %354 monotonic, align 1
  %356 = zext i8 %355 to i32
  %357 = shl nuw nsw i32 %356, 2
  %358 = icmp slt i32 %352, %357
  %359 = add i64 %2, -1
  br i1 %358, label %362, label %360

360:                                              ; preds = %351
  %361 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  br label %387

362:                                              ; preds = %351
  %363 = add i64 %2, 3
  %364 = sext i32 %352 to i64
  %365 = add i64 %359, %364
  %366 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %367 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %367, i64 2
  %369 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %368, align 8
  tail call void %369(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %363, i64 %365) #11
  %370 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %371 = zext i32 %357 to i64
  br label %372

372:                                              ; preds = %372, %362
  %373 = phi i64 [ %364, %362 ], [ %378, %372 ]
  %374 = add i64 %373, %359
  %375 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %370, align 8
  %376 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %375, i64 5
  %377 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %376, align 8
  tail call void %377(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %374) #11
  %378 = add nsw i64 %373, 8
  %379 = icmp slt i64 %378, %371
  br i1 %379, label %372, label %380

380:                                              ; preds = %372
  %381 = icmp eq i8 %355, 0
  br i1 %381, label %382, label %387

382:                                              ; preds = %380
  %383 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %384 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %383, align 8
  %385 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %384, i64 17
  %386 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %385, align 8
  tail call void %386(%"class.v8::internal::ObjectVisitor"* %4, i64 %2) #11
  br label %387

387:                                              ; preds = %360, %380, %382
  %388 = phi void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** [ %361, %360 ], [ %366, %380 ], [ %366, %382 ]
  %389 = phi i32 [ 4, %360 ], [ %357, %380 ], [ 4, %382 ]
  %390 = sext i32 %389 to i64
  %391 = add i64 %359, %390
  %392 = sext i32 %3 to i64
  %393 = add i64 %359, %392
  %394 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %388, align 8
  %395 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %394, i64 2
  %396 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %395, align 8
  tail call void %396(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %391, i64 %393) #11
  br label %953

397:                                              ; preds = %39
  tail call void @_ZN2v88internal15CallIterateBody5applyINS0_13JSArrayBuffer14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::ObjectVisitor"* %4)
  br label %953

398:                                              ; preds = %39
  tail call void @_ZN2v88internal15CallIterateBody5applyINS0_10JSDataView14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::ObjectVisitor"* %4)
  br label %953

399:                                              ; preds = %39
  tail call void @_ZN2v88internal12JSTypedArray14BodyDescriptor11IterateBodyINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::ObjectVisitor"* %4) #11
  br label %953

400:                                              ; preds = %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39
  %401 = add i64 %1, 7
  %402 = inttoptr i64 %401 to i16*
  %403 = load atomic i16, i16* %402 monotonic, align 2
  %404 = icmp eq i16 %403, 1057
  br i1 %404, label %411, label %405

405:                                              ; preds = %400
  %406 = add i64 %1, 9
  %407 = inttoptr i64 %406 to i8*
  %408 = load atomic i8, i8* %407 monotonic, align 1
  %409 = icmp slt i8 %408, 0
  %410 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %403, i1 zeroext %409) #11
  br label %411

411:                                              ; preds = %405, %400
  %412 = phi i32 [ %410, %405 ], [ 12, %400 ]
  %413 = add i64 %1, 4
  %414 = inttoptr i64 %413 to i8*
  %415 = load atomic i8, i8* %414 monotonic, align 1
  %416 = zext i8 %415 to i32
  %417 = shl nuw nsw i32 %416, 2
  %418 = icmp slt i32 %412, %417
  %419 = add i64 %2, -1
  br i1 %418, label %422, label %420

420:                                              ; preds = %411
  %421 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  br label %447

422:                                              ; preds = %411
  %423 = add i64 %2, 3
  %424 = sext i32 %412 to i64
  %425 = add i64 %419, %424
  %426 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %427 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %426, align 8
  %428 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %427, i64 2
  %429 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %428, align 8
  tail call void %429(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %423, i64 %425) #11
  %430 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %431 = zext i32 %417 to i64
  br label %432

432:                                              ; preds = %432, %422
  %433 = phi i64 [ %424, %422 ], [ %438, %432 ]
  %434 = add i64 %433, %419
  %435 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %430, align 8
  %436 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %435, i64 5
  %437 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %436, align 8
  tail call void %437(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %434) #11
  %438 = add nsw i64 %433, 8
  %439 = icmp slt i64 %438, %431
  br i1 %439, label %432, label %440

440:                                              ; preds = %432
  %441 = icmp eq i8 %415, 0
  br i1 %441, label %442, label %447

442:                                              ; preds = %440
  %443 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %444 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %443, align 8
  %445 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %444, i64 17
  %446 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %445, align 8
  tail call void %446(%"class.v8::internal::ObjectVisitor"* %4, i64 %2) #11
  br label %447

447:                                              ; preds = %420, %440, %442
  %448 = phi void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** [ %421, %420 ], [ %426, %440 ], [ %426, %442 ]
  %449 = phi i32 [ 4, %420 ], [ %417, %440 ], [ 4, %442 ]
  %450 = sext i32 %449 to i64
  %451 = add i64 %419, %450
  %452 = sext i32 %3 to i64
  %453 = add i64 %419, %452
  %454 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %448, align 8
  %455 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %454, i64 2
  %456 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %455, align 8
  tail call void %456(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %451, i64 %453) #11
  br label %953

457:                                              ; preds = %39
  %458 = add i64 %2, -1
  %459 = add i64 %2, 3
  %460 = add i64 %2, 7
  %461 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %462 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %461, align 8
  %463 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %462, i64 2
  %464 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %463, align 8
  tail call void %464(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %459, i64 %460) #11
  %465 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %466 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %465, align 8
  %467 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %466, i64 7
  %468 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %467, align 8
  tail call void %468(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %460) #11
  %469 = add i64 %2, 11
  %470 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %465, align 8
  %471 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %470, i64 7
  %472 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %471, align 8
  tail call void %472(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %469) #11
  %473 = add i64 %2, 15
  %474 = sext i32 %3 to i64
  %475 = add i64 %458, %474
  %476 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %461, align 8
  %477 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %476, i64 2
  %478 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %477, align 8
  tail call void %478(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %473, i64 %475) #11
  br label %953

479:                                              ; preds = %39
  tail call void @_ZN2v88internal15CallIterateBody5applyINS0_9JSWeakRef14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::ObjectVisitor"* %4)
  br label %953

480:                                              ; preds = %39
  %481 = add i64 %2, 3
  %482 = add i64 %2, 15
  %483 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %484 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %483, align 8
  %485 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %484, i64 2
  %486 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %485, align 8
  tail call void %486(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %481, i64 %482) #11
  br label %953

487:                                              ; preds = %39
  %488 = add i64 %2, 3
  %489 = inttoptr i64 %488 to i64*
  %490 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)***
  %491 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*** %490, align 8
  %492 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %491, i64 13
  %493 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)** %492, align 8
  tail call void %493(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64* %489) #11
  br label %953

494:                                              ; preds = %39
  %495 = add i64 %2, 15
  %496 = add i64 %2, 35
  %497 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %498 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %497, align 8
  %499 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %498, i64 2
  %500 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %499, align 8
  tail call void %500(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %495, i64 %496) #11
  %501 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %502 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %501, align 8
  %503 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %502, i64 6
  %504 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %503, align 8
  tail call void %504(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %496) #11
  br label %953

505:                                              ; preds = %39
  %506 = add i64 %2, 3
  %507 = add i64 %2, 19
  %508 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %509 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %508, align 8
  %510 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %509, i64 2
  %511 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %510, align 8
  tail call void %511(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %506, i64 %507) #11
  %512 = bitcast %"class.v8::internal::RelocIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %512) #11
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %6, i64 %2, i32 7998) #11
  %513 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)***
  %514 = load void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)**, void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)*** %513, align 8
  %515 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)*, void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)** %514, i64 16
  %516 = load void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)*, void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)** %515, align 8
  call void %516(%"class.v8::internal::ObjectVisitor"* %4, %"class.v8::internal::RelocIterator"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %512) #11
  br label %953

517:                                              ; preds = %39
  %518 = add i64 %2, 3
  %519 = add i64 %2, 7
  %520 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %521 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %520, align 8
  %522 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %521, i64 2
  %523 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %522, align 8
  tail call void %523(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %518, i64 %519) #11
  br label %953

524:                                              ; preds = %39
  %525 = add i64 %2, 3
  %526 = add i64 %2, 19
  %527 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %528 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %527, align 8
  %529 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %528, i64 2
  %530 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %529, align 8
  tail call void %530(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %525, i64 %526) #11
  br label %953

531:                                              ; preds = %39
  %532 = add i64 %2, 11
  %533 = add i64 %2, 15
  %534 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %535 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %534, align 8
  %536 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %535, i64 2
  %537 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %536, align 8
  tail call void %537(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %532, i64 %533) #11
  br label %953

538:                                              ; preds = %39
  %539 = add i64 %2, 7
  %540 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %541 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %540, align 8
  %542 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %541, i64 5
  %543 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %542, align 8
  tail call void %543(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %539) #11
  %544 = add i64 %2, 11
  %545 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %540, align 8
  %546 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %545, i64 5
  %547 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %546, align 8
  tail call void %547(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %544) #11
  %548 = add i64 %2, 15
  %549 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %540, align 8
  %550 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %549, i64 5
  %551 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %550, align 8
  tail call void %551(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %548) #11
  br label %953

552:                                              ; preds = %39
  %553 = add i64 %2, 5
  %554 = inttoptr i64 %553 to i8*
  %555 = load i8, i8* %554, align 1
  %556 = zext i8 %555 to i64
  %557 = shl nuw nsw i64 %556, 3
  %558 = add i64 %2, 7
  %559 = add i64 %557, %558
  %560 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %561 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %560, align 8
  %562 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %561, i64 2
  %563 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %562, align 8
  tail call void %563(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %558, i64 %559) #11
  br label %953

564:                                              ; preds = %39
  %565 = add i64 %2, 5
  %566 = inttoptr i64 %565 to i8*
  %567 = load i8, i8* %566, align 1
  %568 = zext i8 %567 to i64
  %569 = shl nuw nsw i64 %568, 4
  %570 = or i64 %569, 8
  %571 = add i64 %2, -1
  %572 = add i64 %2, 7
  %573 = add i64 %571, %570
  %574 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %575 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %574, align 8
  %576 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %575, i64 2
  %577 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %576, align 8
  tail call void %577(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %572, i64 %573) #11
  br label %953

578:                                              ; preds = %39
  %579 = add i64 %2, 9
  %580 = inttoptr i64 %579 to i8*
  %581 = load i8, i8* %580, align 1
  %582 = zext i8 %581 to i64
  %583 = mul nuw nsw i64 %582, 24
  %584 = add i64 %2, 11
  %585 = add i64 %583, %584
  %586 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %587 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %586, align 8
  %588 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %587, i64 2
  %589 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %588, align 8
  tail call void %589(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %584, i64 %585) #11
  br label %953

590:                                              ; preds = %39
  %591 = add i64 %2, 7
  %592 = inttoptr i64 %591 to i32*
  %593 = load i32, i32* %592, align 4
  %594 = shl i32 %593, 3
  %595 = add nsw i32 %594, 16
  %596 = add i64 %2, -1
  %597 = add i64 %2, 11
  %598 = sext i32 %595 to i64
  %599 = add i64 %596, %598
  %600 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %601 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %600, align 8
  %602 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %601, i64 2
  %603 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %602, align 8
  tail call void %603(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %597, i64 %599) #11
  br label %953

604:                                              ; preds = %39
  %605 = add i64 %2, 3
  %606 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %607 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %606, align 8
  %608 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %607, i64 2
  %609 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %608, align 8
  tail call void %609(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %605, i64 %605) #11
  %610 = add i64 %2, 7
  %611 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %606, align 8
  %612 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %611, i64 4
  %613 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %612, align 8
  tail call void %613(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %605, i64 %610) #11
  br label %953

614:                                              ; preds = %39
  %615 = add i64 %2, 3
  %616 = inttoptr i64 %615 to i32*
  %617 = load i32, i32* %616, align 4
  %618 = add i32 %617, 15
  %619 = and i32 %618, -4
  %620 = add i64 %2, 7
  %621 = inttoptr i64 %620 to i32*
  %622 = load i32, i32* %621, align 4
  %623 = shl i32 %622, 2
  %624 = add nsw i32 %619, %623
  %625 = icmp eq i32 %619, 0
  br i1 %625, label %626, label %631

626:                                              ; preds = %614
  %627 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %628 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %627, align 8
  %629 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %628, i64 17
  %630 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %629, align 8
  tail call void %630(%"class.v8::internal::ObjectVisitor"* %4, i64 %2) #11
  br label %631

631:                                              ; preds = %614, %626
  %632 = phi i32 [ 4, %626 ], [ %619, %614 ]
  %633 = sext i32 %632 to i64
  %634 = add i64 %2, -1
  %635 = add i64 %634, %633
  %636 = sext i32 %624 to i64
  %637 = add i64 %634, %636
  %638 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %639 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %638, align 8
  %640 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %639, i64 2
  %641 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %640, align 8
  tail call void %641(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %635, i64 %637) #11
  br label %953

642:                                              ; preds = %39
  %643 = add i64 %2, 3
  %644 = add i64 %2, 15
  %645 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %646 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %645, align 8
  %647 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %646, i64 2
  %648 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %647, align 8
  tail call void %648(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %643, i64 %644) #11
  %649 = icmp eq i32 %3, 28
  br i1 %649, label %650, label %953

650:                                              ; preds = %642
  %651 = add i64 %2, 23
  %652 = add i64 %2, 27
  %653 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %645, align 8
  %654 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %653, i64 4
  %655 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %654, align 8
  tail call void %655(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %651, i64 %652) #11
  br label %953

656:                                              ; preds = %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39, %39
  switch i16 %0, label %684 [
    i16 110, label %657
    i16 118, label %675
  ]

657:                                              ; preds = %656
  %658 = add i64 %2, -1
  %659 = add i64 %2, 3
  %660 = add i64 %2, 19
  %661 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %662 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %661, align 8
  %663 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %662, i64 2
  %664 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %663, align 8
  tail call void %664(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %659, i64 %660) #11
  %665 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %666 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %665, align 8
  %667 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %666, i64 6
  %668 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %667, align 8
  tail call void %668(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %660) #11
  %669 = add i64 %2, 23
  %670 = sext i32 %3 to i64
  %671 = add i64 %658, %670
  %672 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %661, align 8
  %673 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %672, i64 2
  %674 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %673, align 8
  tail call void %674(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %669, i64 %671) #11
  br label %953

675:                                              ; preds = %656
  %676 = add i64 %2, -1
  %677 = add i64 %2, 23
  %678 = sext i32 %3 to i64
  %679 = add i64 %676, %678
  %680 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %681 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %680, align 8
  %682 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %681, i64 2
  %683 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %682, align 8
  tail call void %683(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %677, i64 %679) #11
  br label %953

684:                                              ; preds = %656
  %685 = add i64 %2, -1
  %686 = add i64 %2, 3
  %687 = sext i32 %3 to i64
  %688 = add i64 %685, %687
  %689 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %690 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %689, align 8
  %691 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %690, i64 2
  %692 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %691, align 8
  tail call void %692(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %686, i64 %688) #11
  br label %953

693:                                              ; preds = %39
  %694 = add i64 %2, -1
  %695 = add i64 %2, 3
  %696 = sext i32 %3 to i64
  %697 = add i64 %694, %696
  %698 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %699 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %698, align 8
  %700 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %699, i64 2
  %701 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %700, align 8
  tail call void %701(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %695, i64 %697) #11
  br label %953

702:                                              ; preds = %39, %39
  %703 = add i64 %2, -1
  %704 = add i64 %2, 3
  %705 = add i64 %2, 11
  %706 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %707 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %706, align 8
  %708 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %707, i64 2
  %709 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %708, align 8
  tail call void %709(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %704, i64 %705) #11
  %710 = sext i32 %3 to i64
  %711 = add i64 %703, %710
  %712 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %706, align 8
  %713 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %712, i64 3
  %714 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %713, align 8
  tail call void %714(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %705, i64 %711) #11
  br label %953

715:                                              ; preds = %39
  %716 = add i64 %2, 3
  %717 = add i64 %2, 27
  %718 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %719 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %718, align 8
  %720 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %719, i64 2
  %721 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %720, align 8
  tail call void %721(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %716, i64 %717) #11
  %722 = add i64 %2, 71
  %723 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %718, align 8
  %724 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %723, i64 2
  %725 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %724, align 8
  tail call void %725(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %717, i64 %722) #11
  br label %953

726:                                              ; preds = %39
  %727 = add i64 %2, 3
  %728 = add i64 %2, 27
  %729 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %730 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %729, align 8
  %731 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %730, i64 2
  %732 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %731, align 8
  tail call void %732(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %727, i64 %728) #11
  %733 = add i64 %2, 39
  %734 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %729, align 8
  %735 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %734, i64 2
  %736 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %735, align 8
  tail call void %736(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %728, i64 %733) #11
  br label %953

737:                                              ; preds = %39
  %738 = add i64 %2, -1
  %739 = add i64 %2, 11
  %740 = sext i32 %3 to i64
  %741 = add i64 %738, %740
  %742 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %743 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %742, align 8
  %744 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %743, i64 2
  %745 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %744, align 8
  tail call void %745(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %739, i64 %741) #11
  br label %953

746:                                              ; preds = %39
  %747 = add i64 %2, -1
  %748 = add i64 %2, 3
  %749 = sext i32 %3 to i64
  %750 = add i64 %747, %749
  %751 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %752 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %751, align 8
  %753 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %752, i64 2
  %754 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %753, align 8
  tail call void %754(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %748, i64 %750) #11
  br label %953

755:                                              ; preds = %39
  %756 = add i64 %2, -1
  %757 = add i64 %2, 3
  %758 = sext i32 %3 to i64
  %759 = add i64 %756, %758
  %760 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %761 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %760, align 8
  %762 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %761, i64 3
  %763 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %762, align 8
  tail call void %763(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %757, i64 %759) #11
  br label %953

764:                                              ; preds = %39
  %765 = add i64 %2, -1
  %766 = add i64 %2, 3
  %767 = sext i32 %3 to i64
  %768 = add i64 %765, %767
  %769 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %770 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %769, align 8
  %771 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %770, i64 2
  %772 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %771, align 8
  tail call void %772(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %766, i64 %768) #11
  br label %953

773:                                              ; preds = %39
  %774 = add i64 %2, -1
  %775 = add i64 %2, 3
  %776 = sext i32 %3 to i64
  %777 = add i64 %774, %776
  %778 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %779 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %778, align 8
  %780 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %779, i64 2
  %781 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %780, align 8
  tail call void %781(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %775, i64 %777) #11
  br label %953

782:                                              ; preds = %39
  %783 = add i64 %2, -1
  %784 = add i64 %2, 11
  %785 = sext i32 %3 to i64
  %786 = add i64 %783, %785
  %787 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %788 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %787, align 8
  %789 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %788, i64 3
  %790 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %789, align 8
  tail call void %790(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %784, i64 %786) #11
  br label %953

791:                                              ; preds = %39
  %792 = add i64 %2, -1
  %793 = add i64 %2, 11
  %794 = sext i32 %3 to i64
  %795 = add i64 %792, %794
  %796 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %797 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %796, align 8
  %798 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %797, i64 3
  %799 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %798, align 8
  tail call void %799(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %793, i64 %795) #11
  br label %953

800:                                              ; preds = %39
  %801 = add i64 %2, -1
  %802 = add i64 %2, 19
  %803 = sext i32 %3 to i64
  %804 = add i64 %801, %803
  %805 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %806 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %805, align 8
  %807 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %806, i64 3
  %808 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %807, align 8
  tail call void %808(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %802, i64 %804) #11
  br label %953

809:                                              ; preds = %39
  %810 = add i64 %2, -1
  %811 = add i64 %2, 3
  %812 = sext i32 %3 to i64
  %813 = add i64 %810, %812
  %814 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %815 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %814, align 8
  %816 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %815, i64 3
  %817 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %816, align 8
  tail call void %817(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %811, i64 %813) #11
  br label %953

818:                                              ; preds = %39
  %819 = add i64 %2, -1
  %820 = add i64 %2, 3
  %821 = sext i32 %3 to i64
  %822 = add i64 %819, %821
  %823 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %824 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %823, align 8
  %825 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %824, i64 3
  %826 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %825, align 8
  tail call void %826(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %820, i64 %822) #11
  br label %953

827:                                              ; preds = %39
  %828 = add i64 %2, 3
  %829 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %830 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %829, align 8
  %831 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %830, i64 7
  %832 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %831, align 8
  tail call void %832(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %828) #11
  %833 = add i64 %2, 7
  %834 = add i64 %2, 19
  %835 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %836 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %835, align 8
  %837 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %836, i64 2
  %838 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %837, align 8
  tail call void %838(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %833, i64 %834) #11
  br label %953

839:                                              ; preds = %39
  %840 = add i64 %2, 3
  %841 = add i64 %2, 7
  %842 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %843 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %842, align 8
  %844 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %843, i64 2
  %845 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %844, align 8
  tail call void %845(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %840, i64 %841) #11
  br label %953

846:                                              ; preds = %39
  %847 = add i64 %2, 3
  %848 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %849 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %848, align 8
  %850 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %849, i64 5
  %851 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %850, align 8
  tail call void %851(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %847) #11
  %852 = add i64 %2, 15
  %853 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %848, align 8
  %854 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %853, i64 5
  %855 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %854, align 8
  tail call void %855(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %852) #11
  br label %953

856:                                              ; preds = %39
  %857 = add i64 %2, -1
  %858 = add i64 %2, 3
  %859 = sext i32 %3 to i64
  %860 = add i64 %857, %859
  %861 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %862 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %861, align 8
  %863 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %862, i64 2
  %864 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %863, align 8
  tail call void %864(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %858, i64 %860) #11
  br label %953

865:                                              ; preds = %39
  %866 = add i64 %2, -1
  %867 = add i64 %2, 3
  %868 = sext i32 %3 to i64
  %869 = add i64 %866, %868
  %870 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %871 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %870, align 8
  %872 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %871, i64 2
  %873 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %872, align 8
  tail call void %873(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %867, i64 %869) #11
  br label %953

874:                                              ; preds = %39
  %875 = add i64 %2, -1
  %876 = add i64 %2, 3
  %877 = sext i32 %3 to i64
  %878 = add i64 %875, %877
  %879 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %880 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %879, align 8
  %881 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %880, i64 2
  %882 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %881, align 8
  tail call void %882(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %876, i64 %878) #11
  br label %953

883:                                              ; preds = %39
  %884 = add i64 %2, -1
  %885 = add i64 %2, 3
  %886 = sext i32 %3 to i64
  %887 = add i64 %884, %886
  %888 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %889 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %888, align 8
  %890 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %889, i64 2
  %891 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %890, align 8
  tail call void %891(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %885, i64 %887) #11
  br label %953

892:                                              ; preds = %39
  %893 = add i64 %2, -1
  %894 = add i64 %2, 3
  %895 = sext i32 %3 to i64
  %896 = add i64 %893, %895
  %897 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %898 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %897, align 8
  %899 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %898, i64 2
  %900 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %899, align 8
  tail call void %900(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %894, i64 %896) #11
  br label %953

901:                                              ; preds = %39
  %902 = add i64 %2, 3
  %903 = add i64 %2, 11
  %904 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %905 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %904, align 8
  %906 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %905, i64 2
  %907 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %906, align 8
  tail call void %907(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %902, i64 %903) #11
  %908 = add i64 %2, 19
  %909 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %910 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %909, align 8
  %911 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %910, i64 5
  %912 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %911, align 8
  tail call void %912(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %908) #11
  br label %953

913:                                              ; preds = %39
  %914 = add i64 %2, -1
  %915 = add i64 %2, 3
  %916 = sext i32 %3 to i64
  %917 = add i64 %914, %916
  %918 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %919 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %918, align 8
  %920 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %919, i64 2
  %921 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %920, align 8
  tail call void %921(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %915, i64 %917) #11
  br label %953

922:                                              ; preds = %39
  %923 = add i64 %2, -1
  %924 = add i64 %2, 11
  %925 = sext i32 %3 to i64
  %926 = add i64 %923, %925
  %927 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %928 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %927, align 8
  %929 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %928, i64 2
  %930 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %929, align 8
  tail call void %930(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %924, i64 %926) #11
  br label %953

931:                                              ; preds = %39
  %932 = add i64 %2, 3
  %933 = add i64 %2, 11
  %934 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %935 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %934, align 8
  %936 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %935, i64 2
  %937 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %936, align 8
  tail call void %937(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %932, i64 %933) #11
  %938 = add i64 %2, 19
  %939 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %940 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %939, align 8
  %941 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %940, i64 5
  %942 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %941, align 8
  tail call void %942(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %938) #11
  br label %953

943:                                              ; preds = %39
  %944 = add i64 %2, -1
  %945 = add i64 %2, 3
  %946 = sext i32 %3 to i64
  %947 = add i64 %944, %946
  %948 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %949 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %948, align 8
  %950 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %949, i64 2
  %951 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %950, align 8
  tail call void %951(%"class.v8::internal::ObjectVisitor"* %4, i64 %2, i64 %945, i64 %947) #11
  br label %953

952:                                              ; preds = %39
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.436, i64 0, i64 0), i32 %7) #11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #16
  unreachable

953:                                              ; preds = %261, %79, %45, %9, %39, %39, %650, %642, %210, %162, %139, %39, %39, %63, %40, %39, %39, %39, %39, %39, %39, %9, %943, %931, %922, %913, %901, %892, %883, %874, %865, %856, %846, %839, %827, %818, %809, %800, %791, %782, %773, %764, %755, %746, %737, %726, %715, %702, %693, %684, %675, %657, %631, %604, %590, %578, %564, %552, %538, %531, %524, %517, %505, %494, %487, %480, %479, %457, %447, %399, %398, %397, %387, %339, %329, %266, %197, %184, %171, %132, %123, %114, %103, %94, %54, %29, %20, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CallIterateBody5applyINS0_13JSArrayBuffer14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64, i64, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %5 = add i64 %1, -1
  %6 = add i64 %1, 3
  %7 = add i64 %1, 11
  %8 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %9, i64 2
  %11 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %10, align 8
  tail call void %11(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %6, i64 %7) #11
  %12 = add i64 %0, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 1057
  br i1 %15, label %22, label %16

16:                                               ; preds = %4
  %17 = add i64 %0, 9
  %18 = inttoptr i64 %17 to i8*
  %19 = load atomic i8, i8* %18 monotonic, align 1
  %20 = icmp slt i8 %19, 0
  %21 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %14, i1 zeroext %20) #11
  br label %22

22:                                               ; preds = %16, %4
  %23 = phi i32 [ %21, %16 ], [ 12, %4 ]
  %24 = add i64 %0, 4
  %25 = inttoptr i64 %24 to i8*
  %26 = load atomic i8, i8* %25 monotonic, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 2
  %29 = icmp slt i32 %23, %28
  br i1 %29, label %30, label %54

30:                                               ; preds = %22
  %31 = add i64 %1, 47
  %32 = sext i32 %23 to i64
  %33 = add i64 %5, %32
  %34 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %35 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %34, i64 2
  %36 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %35, align 8
  tail call void %36(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %31, i64 %33) #11
  %37 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %38 = zext i32 %28 to i64
  br label %39

39:                                               ; preds = %39, %30
  %40 = phi i64 [ %32, %30 ], [ %45, %39 ]
  %41 = add i64 %40, %5
  %42 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %37, align 8
  %43 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %42, i64 5
  %44 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %43, align 8
  tail call void %44(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %41) #11
  %45 = add nsw i64 %40, 8
  %46 = icmp slt i64 %45, %38
  br i1 %46, label %39, label %47

47:                                               ; preds = %39
  %48 = icmp eq i8 %26, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %47
  %50 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %51 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %51, i64 17
  %53 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %52, align 8
  tail call void %53(%"class.v8::internal::ObjectVisitor"* %3, i64 %1) #11
  br label %54

54:                                               ; preds = %22, %47, %49
  %55 = phi i32 [ 4, %49 ], [ %28, %47 ], [ 48, %22 ]
  %56 = sext i32 %55 to i64
  %57 = add i64 %5, %56
  %58 = sext i32 %2 to i64
  %59 = add i64 %5, %58
  %60 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %61 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %60, i64 2
  %62 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %61, align 8
  tail call void %62(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %57, i64 %59) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CallIterateBody5applyINS0_10JSDataView14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64, i64, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %5 = add i64 %1, -1
  %6 = add i64 %1, 3
  %7 = add i64 %1, 15
  %8 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %9, i64 2
  %11 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %10, align 8
  tail call void %11(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %6, i64 %7) #11
  %12 = add i64 %0, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 1057
  br i1 %15, label %22, label %16

16:                                               ; preds = %4
  %17 = add i64 %0, 9
  %18 = inttoptr i64 %17 to i8*
  %19 = load atomic i8, i8* %18 monotonic, align 1
  %20 = icmp slt i8 %19, 0
  %21 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %14, i1 zeroext %20) #11
  br label %22

22:                                               ; preds = %16, %4
  %23 = phi i32 [ %21, %16 ], [ 12, %4 ]
  %24 = add i64 %0, 4
  %25 = inttoptr i64 %24 to i8*
  %26 = load atomic i8, i8* %25 monotonic, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 2
  %29 = icmp slt i32 %23, %28
  br i1 %29, label %30, label %54

30:                                               ; preds = %22
  %31 = add i64 %1, 39
  %32 = sext i32 %23 to i64
  %33 = add i64 %5, %32
  %34 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %35 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %34, i64 2
  %36 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %35, align 8
  tail call void %36(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %31, i64 %33) #11
  %37 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %38 = zext i32 %28 to i64
  br label %39

39:                                               ; preds = %39, %30
  %40 = phi i64 [ %32, %30 ], [ %45, %39 ]
  %41 = add i64 %40, %5
  %42 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %37, align 8
  %43 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %42, i64 5
  %44 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %43, align 8
  tail call void %44(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %41) #11
  %45 = add nsw i64 %40, 8
  %46 = icmp slt i64 %45, %38
  br i1 %46, label %39, label %47

47:                                               ; preds = %39
  %48 = icmp eq i8 %26, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %47
  %50 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %51 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %51, i64 17
  %53 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %52, align 8
  tail call void %53(%"class.v8::internal::ObjectVisitor"* %3, i64 %1) #11
  br label %54

54:                                               ; preds = %22, %47, %49
  %55 = phi i32 [ 4, %49 ], [ %28, %47 ], [ 40, %22 ]
  %56 = sext i32 %55 to i64
  %57 = add i64 %5, %56
  %58 = sext i32 %2 to i64
  %59 = add i64 %5, %58
  %60 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %61 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %60, i64 2
  %62 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %61, align 8
  tail call void %62(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %57, i64 %59) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CallIterateBody5applyINS0_9JSWeakRef14BodyDescriptorENS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64, i64, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #0 comdat align 2 {
  %5 = add i64 %1, -1
  %6 = add i64 %1, 3
  %7 = add i64 %1, 11
  %8 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %9, i64 2
  %11 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %10, align 8
  tail call void %11(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %6, i64 %7) #11
  %12 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %13 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %13, i64 7
  %15 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %14, align 8
  tail call void %15(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %7) #11
  %16 = add i64 %0, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 1057
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = add i64 %0, 9
  %22 = inttoptr i64 %21 to i8*
  %23 = load atomic i8, i8* %22 monotonic, align 1
  %24 = icmp slt i8 %23, 0
  %25 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %18, i1 zeroext %24) #11
  br label %26

26:                                               ; preds = %20, %4
  %27 = phi i32 [ %25, %20 ], [ 12, %4 ]
  %28 = add i64 %0, 4
  %29 = inttoptr i64 %28 to i8*
  %30 = load atomic i8, i8* %29 monotonic, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 2
  %33 = icmp slt i32 %27, %32
  br i1 %33, label %34, label %57

34:                                               ; preds = %26
  %35 = add i64 %1, 15
  %36 = sext i32 %27 to i64
  %37 = add i64 %5, %36
  %38 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %39 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %38, i64 2
  %40 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %39, align 8
  tail call void %40(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %35, i64 %37) #11
  %41 = zext i32 %32 to i64
  br label %42

42:                                               ; preds = %42, %34
  %43 = phi i64 [ %36, %34 ], [ %48, %42 ]
  %44 = add i64 %43, %5
  %45 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %12, align 8
  %46 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %45, i64 5
  %47 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %46, align 8
  tail call void %47(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %44) #11
  %48 = add nsw i64 %43, 8
  %49 = icmp slt i64 %48, %41
  br i1 %49, label %42, label %50

50:                                               ; preds = %42
  %51 = icmp eq i8 %30, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %50
  %53 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %54 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %54, i64 17
  %56 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %55, align 8
  tail call void %56(%"class.v8::internal::ObjectVisitor"* %3, i64 %1) #11
  br label %57

57:                                               ; preds = %26, %50, %52
  %58 = phi i32 [ 4, %52 ], [ %32, %50 ], [ 16, %26 ]
  %59 = sext i32 %58 to i64
  %60 = add i64 %5, %59
  %61 = sext i32 %2 to i64
  %62 = add i64 %5, %61
  %63 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %64 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %63, i64 2
  %65 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %64, align 8
  tail call void %65(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %60, i64 %62) #11
  ret void
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64, i64, i32, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #5 comdat align 2 {
  %6 = add i64 %0, 7
  %7 = inttoptr i64 %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = icmp eq i16 %8, 1057
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = add i64 %0, 9
  %12 = inttoptr i64 %11 to i8*
  %13 = load atomic i8, i8* %12 monotonic, align 1
  %14 = icmp slt i8 %13, 0
  %15 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %8, i1 zeroext %14) #11
  br label %16

16:                                               ; preds = %5, %10
  %17 = phi i32 [ %15, %10 ], [ 12, %5 ]
  %18 = add i64 %0, 4
  %19 = inttoptr i64 %18 to i8*
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 2
  %23 = icmp slt i32 %17, %22
  br i1 %23, label %24, label %52

24:                                               ; preds = %16
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %24
  %27 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %28 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %28, i64 17
  %30 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %29, align 8
  tail call void %30(%"class.v8::internal::ObjectVisitor"* %4, i64 %1) #11
  br label %31

31:                                               ; preds = %26, %24
  %32 = phi i32 [ 4, %26 ], [ %2, %24 ]
  %33 = sext i32 %32 to i64
  %34 = add i64 %1, -1
  %35 = add i64 %34, %33
  %36 = sext i32 %17 to i64
  %37 = add i64 %34, %36
  %38 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %39 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %39, i64 2
  %41 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %40, align 8
  tail call void %41(%"class.v8::internal::ObjectVisitor"* %4, i64 %1, i64 %35, i64 %37) #11
  %42 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %43 = zext i32 %22 to i64
  br label %44

44:                                               ; preds = %31, %44
  %45 = phi i64 [ %36, %31 ], [ %50, %44 ]
  %46 = add i64 %34, %45
  %47 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %42, align 8
  %48 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %47, i64 5
  %49 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %48, align 8
  tail call void %49(%"class.v8::internal::ObjectVisitor"* %4, i64 %1, i64 %46) #11
  %50 = add nsw i64 %45, 8
  %51 = icmp slt i64 %50, %43
  br i1 %51, label %44, label %52

52:                                               ; preds = %44, %16
  %53 = phi i32 [ %2, %16 ], [ %22, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %52
  %56 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %57 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %57, i64 17
  %59 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %58, align 8
  tail call void %59(%"class.v8::internal::ObjectVisitor"* %4, i64 %1) #11
  br label %60

60:                                               ; preds = %52, %55
  %61 = phi i32 [ 4, %55 ], [ %53, %52 ]
  %62 = sext i32 %61 to i64
  %63 = add i64 %1, -1
  %64 = add i64 %63, %62
  %65 = sext i32 %3 to i64
  %66 = add i64 %63, %65
  %67 = bitcast %"class.v8::internal::ObjectVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %68 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %68, i64 2
  %70 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %69, align 8
  tail call void %70(%"class.v8::internal::ObjectVisitor"* %4, i64 %1, i64 %64, i64 %66) #11
  ret void
}

declare i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64, i64, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #5 comdat align 2 {
  %5 = add i64 %1, 3
  %6 = add i64 %1, 11
  %7 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %8, i64 2
  %10 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %9, align 8
  tail call void %10(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %5, i64 %6) #11
  %11 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %12 = add i64 %1, 43
  %13 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %14 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %13, i64 5
  %15 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %14, align 8
  tail call void %15(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %12) #11
  %16 = add i64 %1, 55
  %17 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %18 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %17, i64 5
  %19 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %18, align 8
  tail call void %19(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %16) #11
  %20 = add i64 %1, 111
  %21 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %22 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %21, i64 5
  %23 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %22, align 8
  tail call void %23(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %20) #11
  %24 = add i64 %1, 115
  %25 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %26 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %25, i64 5
  %27 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %26, align 8
  tail call void %27(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %24) #11
  %28 = add i64 %1, 119
  %29 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %30 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %29, i64 5
  %31 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %30, align 8
  tail call void %31(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %28) #11
  %32 = add i64 %1, 123
  %33 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %34 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %33, i64 5
  %35 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %34, align 8
  tail call void %35(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %32) #11
  %36 = add i64 %1, 127
  %37 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %38 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %37, i64 5
  %39 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %38, align 8
  tail call void %39(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %36) #11
  %40 = add i64 %1, 131
  %41 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %42 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %41, i64 5
  %43 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %42, align 8
  tail call void %43(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %40) #11
  %44 = add i64 %1, 135
  %45 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %46 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %45, i64 5
  %47 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %46, align 8
  tail call void %47(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %44) #11
  %48 = add i64 %1, 139
  %49 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %50 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %49, i64 5
  %51 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %50, align 8
  tail call void %51(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %48) #11
  %52 = add i64 %1, 143
  %53 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %54 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %53, i64 5
  %55 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %54, align 8
  tail call void %55(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %52) #11
  %56 = add i64 %1, 147
  %57 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %58 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %57, i64 5
  %59 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %58, align 8
  tail call void %59(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %56) #11
  %60 = add i64 %1, 151
  %61 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %62 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %61, i64 5
  %63 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %62, align 8
  tail call void %63(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %60) #11
  %64 = add i64 %1, 155
  %65 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %66 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %65, i64 5
  %67 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %66, align 8
  tail call void %67(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %64) #11
  %68 = add i64 %1, 159
  %69 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %11, align 8
  %70 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %69, i64 5
  %71 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %70, align 8
  tail call void %71(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %68) #11
  tail call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %0, i64 %1, i32 216, i32 %2, %"class.v8::internal::ObjectVisitor"* %3)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12JSTypedArray14BodyDescriptor11IterateBodyINS0_13ObjectVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64, i64, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #5 comdat align 2 {
  %5 = add i64 %1, -1
  %6 = add i64 %1, 3
  %7 = add i64 %1, 15
  %8 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %9, i64 2
  %11 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %10, align 8
  tail call void %11(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %6, i64 %7) #11
  %12 = add i64 %1, 47
  %13 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %14, i64 5
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %15, align 8
  tail call void %16(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %12) #11
  %17 = add i64 %0, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 1057
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = add i64 %0, 9
  %23 = inttoptr i64 %22 to i8*
  %24 = load atomic i8, i8* %23 monotonic, align 1
  %25 = icmp slt i8 %24, 0
  %26 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %19, i1 zeroext %25) #11
  br label %27

27:                                               ; preds = %21, %4
  %28 = phi i32 [ %26, %21 ], [ 12, %4 ]
  %29 = add i64 %0, 4
  %30 = inttoptr i64 %29 to i8*
  %31 = load atomic i8, i8* %30 monotonic, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 2
  %34 = icmp slt i32 %28, %33
  br i1 %34, label %35, label %58

35:                                               ; preds = %27
  %36 = add i64 %1, 55
  %37 = sext i32 %28 to i64
  %38 = add i64 %5, %37
  %39 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %40 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %39, i64 2
  %41 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %40, align 8
  tail call void %41(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %36, i64 %38) #11
  %42 = zext i32 %33 to i64
  br label %43

43:                                               ; preds = %43, %35
  %44 = phi i64 [ %37, %35 ], [ %49, %43 ]
  %45 = add i64 %44, %5
  %46 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %13, align 8
  %47 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %46, i64 5
  %48 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %47, align 8
  tail call void %48(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %45) #11
  %49 = add nsw i64 %44, 8
  %50 = icmp slt i64 %49, %42
  br i1 %50, label %43, label %51

51:                                               ; preds = %43
  %52 = icmp eq i8 %31, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %51
  %54 = bitcast %"class.v8::internal::ObjectVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64)***
  %55 = load void (%"class.v8::internal::ObjectVisitor"*, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %55, i64 17
  %57 = load void (%"class.v8::internal::ObjectVisitor"*, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64)** %56, align 8
  tail call void %57(%"class.v8::internal::ObjectVisitor"* %3, i64 %1) #11
  br label %58

58:                                               ; preds = %27, %51, %53
  %59 = phi i32 [ 4, %53 ], [ %33, %51 ], [ 56, %27 ]
  %60 = sext i32 %59 to i64
  %61 = add i64 %5, %60
  %62 = sext i32 %2 to i64
  %63 = add i64 %5, %62
  %64 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %65 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %64, i64 2
  %66 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %65, align 8
  tail call void %66(%"class.v8::internal::ObjectVisitor"* %3, i64 %1, i64 %61, i64 %63) #11
  ret void
}

declare void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"*, i64, i32) unnamed_addr #1

declare void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64, i8*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64, i16*, i32, i32) local_unnamed_addr #1

declare i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i64*, i32, i8 zeroext) local_unnamed_addr #1

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE20NewFixedArrayWithMapENS0_6HandleINS0_3MapEEEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1108"*, i64*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %379, %3
  %6 = phi i64 [ %1, %3 ], [ %337, %379 ]
  %7 = phi i64 [ %0, %3 ], [ %13, %379 ]
  %8 = add i64 %6, -4
  %9 = inttoptr i64 %8 to i32*
  br label %10

10:                                               ; preds = %391, %5
  %11 = phi i64 [ %7, %5 ], [ %392, %391 ]
  br label %12

12:                                               ; preds = %227, %10
  %13 = phi i64 [ %11, %10 ], [ %176, %227 ]
  %14 = sub i64 %6, %13
  %15 = trunc i64 %14 to i32
  %16 = sdiv i32 %15, 4
  switch i32 %16, label %62 [
    i32 0, label %395
    i32 1, label %395
    i32 2, label %17
    i32 3, label %47
    i32 4, label %51
    i32 5, label %56
  ]

17:                                               ; preds = %12
  %18 = add i64 %6, -4
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = inttoptr i64 %13 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = ashr i32 %20, 1
  %24 = sext i32 %23 to i64
  %25 = load i64, i64* %4, align 8
  %26 = mul i64 %24, 51539607552
  %27 = add i64 %26, 120259084288
  %28 = ashr exact i64 %27, 32
  %29 = add i64 %25, 7
  %30 = add i64 %28, %29
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = lshr i32 %32, 9
  %34 = ashr i32 %22, 1
  %35 = sext i32 %34 to i64
  %36 = mul i64 %35, 51539607552
  %37 = add i64 %36, 120259084288
  %38 = ashr exact i64 %37, 32
  %39 = add i64 %38, %29
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = lshr i32 %41, 9
  %43 = icmp ult i32 %33, %42
  br i1 %43, label %44, label %395

44:                                               ; preds = %17
  %45 = load atomic i32, i32* %21 monotonic, align 4
  %46 = load atomic i32, i32* %19 monotonic, align 4
  store atomic volatile i32 %46, i32* %21 monotonic, align 4
  store atomic volatile i32 %45, i32* %19 monotonic, align 4
  br label %395

47:                                               ; preds = %12
  %48 = add i64 %13, 4
  %49 = add i64 %6, -4
  %50 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %13, i64 %48, i64 %49, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %395

51:                                               ; preds = %12
  %52 = add i64 %13, 4
  %53 = add i64 %13, 8
  %54 = add i64 %6, -4
  %55 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %13, i64 %52, i64 %53, i64 %54, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %395

56:                                               ; preds = %12
  %57 = add i64 %13, 4
  %58 = add i64 %13, 8
  %59 = add i64 %13, 12
  %60 = add i64 %6, -4
  %61 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %13, i64 %57, i64 %58, i64 %59, i64 %60, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %395

62:                                               ; preds = %12
  %63 = icmp slt i32 %15, 124
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void @_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %13, i64 %6, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %395

65:                                               ; preds = %62
  %66 = icmp sgt i32 %15, 3999
  %67 = lshr i32 %16, 1
  %68 = zext i32 %67 to i64
  %69 = shl nuw nsw i64 %68, 2
  %70 = add i64 %69, %13
  br i1 %66, label %71, label %77

71:                                               ; preds = %65
  %72 = and i32 %16, -4
  %73 = zext i32 %72 to i64
  %74 = add i64 %13, %73
  %75 = add i64 %70, %73
  %76 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %13, i64 %74, i64 %70, i64 %75, i64 %8, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %79

77:                                               ; preds = %65
  %78 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %13, i64 %70, i64 %8, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %79

79:                                               ; preds = %77, %71
  %80 = phi i32 [ %76, %71 ], [ %78, %77 ]
  %81 = inttoptr i64 %13 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = inttoptr i64 %70 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = ashr i32 %82, 1
  %86 = sext i32 %85 to i64
  %87 = load i64, i64* %4, align 8
  %88 = mul i64 %86, 51539607552
  %89 = add i64 %88, 120259084288
  %90 = ashr exact i64 %89, 32
  %91 = add i64 %87, 7
  %92 = add i64 %90, %91
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = lshr i32 %94, 9
  %96 = ashr i32 %84, 1
  %97 = sext i32 %96 to i64
  %98 = mul i64 %97, 51539607552
  %99 = add i64 %98, 120259084288
  %100 = ashr exact i64 %99, 32
  %101 = add i64 %100, %91
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = lshr i32 %103, 9
  %105 = icmp ult i32 %95, %104
  br i1 %105, label %262, label %106

106:                                              ; preds = %79, %233
  %107 = phi i64 [ %108, %233 ], [ %8, %79 ]
  %108 = add i64 %107, -4
  %109 = icmp eq i64 %13, %108
  br i1 %109, label %110, label %233

110:                                              ; preds = %106
  %111 = add i64 %13, 4
  %112 = load atomic i32, i32* %81 monotonic, align 4
  %113 = load atomic i32, i32* %9 monotonic, align 4
  %114 = ashr i32 %112, 1
  %115 = sext i32 %114 to i64
  %116 = mul i64 %115, 51539607552
  %117 = add i64 %116, 120259084288
  %118 = ashr exact i64 %117, 32
  %119 = add i64 %118, %91
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = lshr i32 %121, 9
  %123 = ashr i32 %113, 1
  %124 = sext i32 %123 to i64
  %125 = mul i64 %124, 51539607552
  %126 = add i64 %125, 120259084288
  %127 = ashr exact i64 %126, 32
  %128 = add i64 %127, %91
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = lshr i32 %130, 9
  %132 = icmp ult i32 %122, %131
  br i1 %132, label %167, label %133

133:                                              ; preds = %110
  %134 = icmp eq i64 %111, %8
  br i1 %134, label %395, label %135

135:                                              ; preds = %133, %164
  %136 = phi i64 [ %165, %164 ], [ %111, %133 ]
  %137 = load atomic i32, i32* %81 monotonic, align 4
  %138 = inttoptr i64 %136 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = ashr i32 %137, 1
  %141 = sext i32 %140 to i64
  %142 = mul i64 %141, 51539607552
  %143 = add i64 %142, 120259084288
  %144 = ashr exact i64 %143, 32
  %145 = add i64 %144, %91
  %146 = inttoptr i64 %145 to i32*
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = lshr i32 %147, 9
  %149 = ashr i32 %139, 1
  %150 = sext i32 %149 to i64
  %151 = mul i64 %150, 51539607552
  %152 = add i64 %151, 120259084288
  %153 = ashr exact i64 %152, 32
  %154 = add i64 %153, %91
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = lshr i32 %156, 9
  %158 = icmp ult i32 %148, %157
  br i1 %158, label %159, label %164

159:                                              ; preds = %135
  %160 = inttoptr i64 %136 to i32*
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %162, i32* %160 monotonic, align 4
  store atomic volatile i32 %161, i32* %9 monotonic, align 4
  %163 = add i64 %136, 4
  br label %167

164:                                              ; preds = %135
  %165 = add i64 %136, 4
  %166 = icmp eq i64 %165, %8
  br i1 %166, label %395, label %135

167:                                              ; preds = %110, %159
  %168 = phi i64 [ %111, %110 ], [ %163, %159 ]
  %169 = icmp eq i64 %168, %8
  br i1 %169, label %395, label %170

170:                                              ; preds = %167, %230
  %171 = phi i64 [ %205, %230 ], [ %8, %167 ]
  %172 = phi i64 [ %199, %230 ], [ %168, %167 ]
  %173 = load i64, i64* %4, align 8
  %174 = add i64 %173, 7
  br label %175

175:                                              ; preds = %175, %170
  %176 = phi i64 [ %172, %170 ], [ %199, %175 ]
  %177 = load atomic i32, i32* %81 monotonic, align 4
  %178 = inttoptr i64 %176 to i32*
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = ashr i32 %177, 1
  %181 = sext i32 %180 to i64
  %182 = mul i64 %181, 51539607552
  %183 = add i64 %182, 120259084288
  %184 = ashr exact i64 %183, 32
  %185 = add i64 %184, %174
  %186 = inttoptr i64 %185 to i32*
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = lshr i32 %187, 9
  %189 = ashr i32 %179, 1
  %190 = sext i32 %189 to i64
  %191 = mul i64 %190, 51539607552
  %192 = add i64 %191, 120259084288
  %193 = ashr exact i64 %192, 32
  %194 = add i64 %193, %174
  %195 = inttoptr i64 %194 to i32*
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = lshr i32 %196, 9
  %198 = icmp ult i32 %188, %197
  %199 = add i64 %176, 4
  br i1 %198, label %200, label %175

200:                                              ; preds = %175
  %201 = inttoptr i64 %176 to i32*
  br label %202

202:                                              ; preds = %200, %202
  %203 = phi i64 [ %205, %202 ], [ %171, %200 ]
  %204 = load atomic i32, i32* %81 monotonic, align 4
  %205 = add i64 %203, -4
  %206 = inttoptr i64 %205 to i32*
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = ashr i32 %204, 1
  %209 = sext i32 %208 to i64
  %210 = mul i64 %209, 51539607552
  %211 = add i64 %210, 120259084288
  %212 = ashr exact i64 %211, 32
  %213 = add i64 %212, %174
  %214 = inttoptr i64 %213 to i32*
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = lshr i32 %215, 9
  %217 = ashr i32 %207, 1
  %218 = sext i32 %217 to i64
  %219 = mul i64 %218, 51539607552
  %220 = add i64 %219, 120259084288
  %221 = ashr exact i64 %220, 32
  %222 = add i64 %221, %174
  %223 = inttoptr i64 %222 to i32*
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = lshr i32 %224, 9
  %226 = icmp ult i32 %216, %225
  br i1 %226, label %202, label %227

227:                                              ; preds = %202
  %228 = inttoptr i64 %205 to i32*
  %229 = icmp ult i64 %176, %205
  br i1 %229, label %230, label %12

230:                                              ; preds = %227
  %231 = load atomic i32, i32* %201 monotonic, align 4
  %232 = load atomic i32, i32* %228 monotonic, align 4
  store atomic volatile i32 %232, i32* %201 monotonic, align 4
  store atomic volatile i32 %231, i32* %228 monotonic, align 4
  br label %170

233:                                              ; preds = %106
  %234 = inttoptr i64 %108 to i32*
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = load atomic i32, i32* %83 monotonic, align 4
  %237 = ashr i32 %235, 1
  %238 = sext i32 %237 to i64
  %239 = mul i64 %238, 51539607552
  %240 = add i64 %239, 120259084288
  %241 = ashr exact i64 %240, 32
  %242 = add i64 %241, %91
  %243 = inttoptr i64 %242 to i32*
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = lshr i32 %244, 9
  %246 = ashr i32 %236, 1
  %247 = sext i32 %246 to i64
  %248 = mul i64 %247, 51539607552
  %249 = add i64 %248, 120259084288
  %250 = ashr exact i64 %249, 32
  %251 = add i64 %250, %91
  %252 = inttoptr i64 %251 to i32*
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = lshr i32 %253, 9
  %255 = icmp ult i32 %245, %254
  br i1 %255, label %256, label %106

256:                                              ; preds = %233
  %257 = inttoptr i64 %13 to i32*
  %258 = inttoptr i64 %108 to i32*
  %259 = load atomic i32, i32* %257 monotonic, align 4
  %260 = load atomic i32, i32* %258 monotonic, align 4
  store atomic volatile i32 %260, i32* %257 monotonic, align 4
  store atomic volatile i32 %259, i32* %258 monotonic, align 4
  %261 = add i32 %80, 1
  br label %262

262:                                              ; preds = %79, %256
  %263 = phi i64 [ %108, %256 ], [ %8, %79 ]
  %264 = phi i32 [ %261, %256 ], [ %80, %79 ]
  %265 = add i64 %13, 4
  %266 = icmp ult i64 %265, %263
  br i1 %266, label %267, label %336

267:                                              ; preds = %262, %330
  %268 = phi i64 [ %304, %330 ], [ %263, %262 ]
  %269 = phi i64 [ %299, %330 ], [ %265, %262 ]
  %270 = phi i64 [ %335, %330 ], [ %70, %262 ]
  %271 = phi i32 [ %333, %330 ], [ %264, %262 ]
  %272 = inttoptr i64 %270 to i32*
  %273 = load i64, i64* %4, align 8
  %274 = add i64 %273, 7
  br label %275

275:                                              ; preds = %275, %267
  %276 = phi i64 [ %269, %267 ], [ %299, %275 ]
  %277 = inttoptr i64 %276 to i32*
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = load atomic i32, i32* %272 monotonic, align 4
  %280 = ashr i32 %278, 1
  %281 = sext i32 %280 to i64
  %282 = mul i64 %281, 51539607552
  %283 = add i64 %282, 120259084288
  %284 = ashr exact i64 %283, 32
  %285 = add i64 %284, %274
  %286 = inttoptr i64 %285 to i32*
  %287 = load atomic i32, i32* %286 monotonic, align 4
  %288 = lshr i32 %287, 9
  %289 = ashr i32 %279, 1
  %290 = sext i32 %289 to i64
  %291 = mul i64 %290, 51539607552
  %292 = add i64 %291, 120259084288
  %293 = ashr exact i64 %292, 32
  %294 = add i64 %293, %274
  %295 = inttoptr i64 %294 to i32*
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = lshr i32 %296, 9
  %298 = icmp ult i32 %288, %297
  %299 = add i64 %276, 4
  br i1 %298, label %275, label %300

300:                                              ; preds = %275
  %301 = inttoptr i64 %276 to i32*
  br label %302

302:                                              ; preds = %300, %302
  %303 = phi i64 [ %304, %302 ], [ %268, %300 ]
  %304 = add i64 %303, -4
  %305 = inttoptr i64 %304 to i32*
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = load atomic i32, i32* %272 monotonic, align 4
  %308 = ashr i32 %306, 1
  %309 = sext i32 %308 to i64
  %310 = mul i64 %309, 51539607552
  %311 = add i64 %310, 120259084288
  %312 = ashr exact i64 %311, 32
  %313 = add i64 %312, %274
  %314 = inttoptr i64 %313 to i32*
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = lshr i32 %315, 9
  %317 = ashr i32 %307, 1
  %318 = sext i32 %317 to i64
  %319 = mul i64 %318, 51539607552
  %320 = add i64 %319, 120259084288
  %321 = ashr exact i64 %320, 32
  %322 = add i64 %321, %274
  %323 = inttoptr i64 %322 to i32*
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = lshr i32 %324, 9
  %326 = icmp ult i32 %316, %325
  br i1 %326, label %327, label %302

327:                                              ; preds = %302
  %328 = inttoptr i64 %304 to i32*
  %329 = icmp ugt i64 %276, %304
  br i1 %329, label %336, label %330

330:                                              ; preds = %327
  %331 = load atomic i32, i32* %301 monotonic, align 4
  %332 = load atomic i32, i32* %328 monotonic, align 4
  store atomic volatile i32 %332, i32* %301 monotonic, align 4
  store atomic volatile i32 %331, i32* %328 monotonic, align 4
  %333 = add i32 %271, 1
  %334 = icmp eq i64 %270, %276
  %335 = select i1 %334, i64 %304, i64 %270
  br label %267

336:                                              ; preds = %327, %262
  %337 = phi i64 [ %265, %262 ], [ %276, %327 ]
  %338 = phi i64 [ %70, %262 ], [ %270, %327 ]
  %339 = phi i32 [ %264, %262 ], [ %271, %327 ]
  %340 = icmp eq i64 %337, %338
  br i1 %340, label %371, label %341

341:                                              ; preds = %336
  %342 = inttoptr i64 %338 to i32*
  %343 = load atomic i32, i32* %342 monotonic, align 4
  %344 = inttoptr i64 %337 to i32*
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = ashr i32 %343, 1
  %347 = sext i32 %346 to i64
  %348 = load i64, i64* %4, align 8
  %349 = mul i64 %347, 51539607552
  %350 = add i64 %349, 120259084288
  %351 = ashr exact i64 %350, 32
  %352 = add i64 %348, 7
  %353 = add i64 %351, %352
  %354 = inttoptr i64 %353 to i32*
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = lshr i32 %355, 9
  %357 = ashr i32 %345, 1
  %358 = sext i32 %357 to i64
  %359 = mul i64 %358, 51539607552
  %360 = add i64 %359, 120259084288
  %361 = ashr exact i64 %360, 32
  %362 = add i64 %361, %352
  %363 = inttoptr i64 %362 to i32*
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = lshr i32 %364, 9
  %366 = icmp ult i32 %356, %365
  br i1 %366, label %367, label %371

367:                                              ; preds = %341
  %368 = load atomic i32, i32* %344 monotonic, align 4
  %369 = load atomic i32, i32* %342 monotonic, align 4
  store atomic volatile i32 %369, i32* %344 monotonic, align 4
  store atomic volatile i32 %368, i32* %342 monotonic, align 4
  %370 = add i32 %339, 1
  br label %371

371:                                              ; preds = %336, %367, %341
  %372 = phi i32 [ %370, %367 ], [ %339, %341 ], [ %339, %336 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %381

374:                                              ; preds = %371
  %375 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64 %13, i64 %337, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  %376 = add i64 %337, 4
  %377 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64 %376, i64 %6, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br i1 %377, label %378, label %380

378:                                              ; preds = %374
  br i1 %375, label %395, label %379

379:                                              ; preds = %378, %393
  br label %5

380:                                              ; preds = %374
  br i1 %375, label %391, label %381

381:                                              ; preds = %380, %371
  %382 = sub i64 %337, %13
  %383 = trunc i64 %382 to i32
  %384 = sdiv i32 %383, 4
  %385 = sub i64 %6, %337
  %386 = trunc i64 %385 to i32
  %387 = sdiv i32 %386, 4
  %388 = icmp slt i32 %384, %387
  br i1 %388, label %389, label %393

389:                                              ; preds = %381
  tail call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %13, i64 %337, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  %390 = add i64 %337, 4
  br label %391

391:                                              ; preds = %389, %380
  %392 = phi i64 [ %376, %380 ], [ %390, %389 ]
  br label %10

393:                                              ; preds = %381
  %394 = add i64 %337, 4
  tail call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %394, i64 %6, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %379

395:                                              ; preds = %378, %167, %12, %12, %133, %164, %17, %44, %47, %51, %56, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64, i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = inttoptr i64 %1 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = inttoptr i64 %0 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = ashr i32 %6, 1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = mul i64 %10, 51539607552
  %14 = add i64 %13, 120259084288
  %15 = ashr exact i64 %14, 32
  %16 = add i64 %12, 7
  %17 = add i64 %15, %16
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 9
  %21 = ashr i32 %8, 1
  %22 = sext i32 %21 to i64
  %23 = mul i64 %22, 51539607552
  %24 = add i64 %23, 120259084288
  %25 = ashr exact i64 %24, 32
  %26 = add i64 %25, %16
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 9
  %30 = icmp ult i32 %20, %29
  %31 = inttoptr i64 %2 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = load atomic i32, i32* %5 monotonic, align 4
  %34 = ashr i32 %32, 1
  %35 = sext i32 %34 to i64
  %36 = mul i64 %35, 51539607552
  %37 = add i64 %36, 120259084288
  %38 = ashr exact i64 %37, 32
  %39 = add i64 %38, %16
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = lshr i32 %41, 9
  %43 = ashr i32 %33, 1
  %44 = sext i32 %43 to i64
  %45 = mul i64 %44, 51539607552
  %46 = add i64 %45, 120259084288
  %47 = ashr exact i64 %46, 32
  %48 = add i64 %47, %16
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = lshr i32 %50, 9
  %52 = icmp ult i32 %42, %51
  br i1 %30, label %83, label %53

53:                                               ; preds = %4
  br i1 %52, label %54, label %115

54:                                               ; preds = %53
  %55 = load atomic i32, i32* %5 monotonic, align 4
  %56 = load atomic i32, i32* %31 monotonic, align 4
  store atomic volatile i32 %56, i32* %5 monotonic, align 4
  store atomic volatile i32 %55, i32* %31 monotonic, align 4
  %57 = load atomic i32, i32* %5 monotonic, align 4
  %58 = load atomic i32, i32* %7 monotonic, align 4
  %59 = ashr i32 %57, 1
  %60 = sext i32 %59 to i64
  %61 = load i64, i64* %11, align 8
  %62 = mul i64 %60, 51539607552
  %63 = add i64 %62, 120259084288
  %64 = ashr exact i64 %63, 32
  %65 = add i64 %61, 7
  %66 = add i64 %64, %65
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = lshr i32 %68, 9
  %70 = ashr i32 %58, 1
  %71 = sext i32 %70 to i64
  %72 = mul i64 %71, 51539607552
  %73 = add i64 %72, 120259084288
  %74 = ashr exact i64 %73, 32
  %75 = add i64 %74, %65
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = lshr i32 %77, 9
  %79 = icmp ult i32 %69, %78
  br i1 %79, label %80, label %115

80:                                               ; preds = %54
  %81 = load atomic i32, i32* %7 monotonic, align 4
  %82 = load atomic i32, i32* %5 monotonic, align 4
  store atomic volatile i32 %82, i32* %7 monotonic, align 4
  store atomic volatile i32 %81, i32* %5 monotonic, align 4
  br label %115

83:                                               ; preds = %4
  %84 = load atomic i32, i32* %7 monotonic, align 4
  br i1 %52, label %85, label %87

85:                                               ; preds = %83
  %86 = load atomic i32, i32* %31 monotonic, align 4
  store atomic volatile i32 %86, i32* %7 monotonic, align 4
  store atomic volatile i32 %84, i32* %31 monotonic, align 4
  br label %115

87:                                               ; preds = %83
  %88 = load atomic i32, i32* %5 monotonic, align 4
  store atomic volatile i32 %88, i32* %7 monotonic, align 4
  store atomic volatile i32 %84, i32* %5 monotonic, align 4
  %89 = load atomic i32, i32* %31 monotonic, align 4
  %90 = load atomic i32, i32* %5 monotonic, align 4
  %91 = ashr i32 %89, 1
  %92 = sext i32 %91 to i64
  %93 = load i64, i64* %11, align 8
  %94 = mul i64 %92, 51539607552
  %95 = add i64 %94, 120259084288
  %96 = ashr exact i64 %95, 32
  %97 = add i64 %93, 7
  %98 = add i64 %96, %97
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = lshr i32 %100, 9
  %102 = ashr i32 %90, 1
  %103 = sext i32 %102 to i64
  %104 = mul i64 %103, 51539607552
  %105 = add i64 %104, 120259084288
  %106 = ashr exact i64 %105, 32
  %107 = add i64 %106, %97
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = lshr i32 %109, 9
  %111 = icmp ult i32 %101, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %87
  %113 = load atomic i32, i32* %5 monotonic, align 4
  %114 = load atomic i32, i32* %31 monotonic, align 4
  store atomic volatile i32 %114, i32* %5 monotonic, align 4
  store atomic volatile i32 %113, i32* %31 monotonic, align 4
  br label %115

115:                                              ; preds = %87, %112, %54, %80, %53, %85
  %116 = phi i32 [ 1, %85 ], [ 0, %53 ], [ 2, %80 ], [ 1, %54 ], [ 2, %112 ], [ 1, %87 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64, i64, i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %1, i64 %2, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %4)
  %7 = inttoptr i64 %3 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = inttoptr i64 %2 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = ashr i32 %8, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = mul i64 %12, 51539607552
  %16 = add i64 %15, 120259084288
  %17 = ashr exact i64 %16, 32
  %18 = add i64 %14, 7
  %19 = add i64 %17, %18
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = lshr i32 %21, 9
  %23 = ashr i32 %10, 1
  %24 = sext i32 %23 to i64
  %25 = mul i64 %24, 51539607552
  %26 = add i64 %25, 120259084288
  %27 = ashr exact i64 %26, 32
  %28 = add i64 %27, %18
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = lshr i32 %30, 9
  %32 = icmp ult i32 %22, %31
  br i1 %32, label %33, label %93

33:                                               ; preds = %5
  %34 = load atomic i32, i32* %9 monotonic, align 4
  %35 = load atomic i32, i32* %7 monotonic, align 4
  store atomic volatile i32 %35, i32* %9 monotonic, align 4
  store atomic volatile i32 %34, i32* %7 monotonic, align 4
  %36 = add i32 %6, 1
  %37 = load atomic i32, i32* %9 monotonic, align 4
  %38 = inttoptr i64 %1 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = ashr i32 %37, 1
  %41 = sext i32 %40 to i64
  %42 = load i64, i64* %13, align 8
  %43 = mul i64 %41, 51539607552
  %44 = add i64 %43, 120259084288
  %45 = ashr exact i64 %44, 32
  %46 = add i64 %42, 7
  %47 = add i64 %45, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = lshr i32 %49, 9
  %51 = ashr i32 %39, 1
  %52 = sext i32 %51 to i64
  %53 = mul i64 %52, 51539607552
  %54 = add i64 %53, 120259084288
  %55 = ashr exact i64 %54, 32
  %56 = add i64 %55, %46
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = lshr i32 %58, 9
  %60 = icmp ult i32 %50, %59
  br i1 %60, label %61, label %93

61:                                               ; preds = %33
  %62 = load atomic i32, i32* %38 monotonic, align 4
  %63 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %63, i32* %38 monotonic, align 4
  store atomic volatile i32 %62, i32* %9 monotonic, align 4
  %64 = add i32 %6, 2
  %65 = load atomic i32, i32* %38 monotonic, align 4
  %66 = inttoptr i64 %0 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = ashr i32 %65, 1
  %69 = sext i32 %68 to i64
  %70 = load i64, i64* %13, align 8
  %71 = mul i64 %69, 51539607552
  %72 = add i64 %71, 120259084288
  %73 = ashr exact i64 %72, 32
  %74 = add i64 %70, 7
  %75 = add i64 %73, %74
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = lshr i32 %77, 9
  %79 = ashr i32 %67, 1
  %80 = sext i32 %79 to i64
  %81 = mul i64 %80, 51539607552
  %82 = add i64 %81, 120259084288
  %83 = ashr exact i64 %82, 32
  %84 = add i64 %83, %74
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = lshr i32 %86, 9
  %88 = icmp ult i32 %78, %87
  br i1 %88, label %89, label %93

89:                                               ; preds = %61
  %90 = load atomic i32, i32* %66 monotonic, align 4
  %91 = load atomic i32, i32* %38 monotonic, align 4
  store atomic volatile i32 %91, i32* %66 monotonic, align 4
  store atomic volatile i32 %90, i32* %38 monotonic, align 4
  %92 = add i32 %6, 3
  br label %93

93:                                               ; preds = %33, %89, %61, %5
  %94 = phi i32 [ %92, %89 ], [ %64, %61 ], [ %36, %33 ], [ %6, %5 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64, i64, i64, i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %0, i64 %1, i64 %2, i64 %3, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %5)
  %8 = inttoptr i64 %4 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = inttoptr i64 %3 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = ashr i32 %9, 1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = mul i64 %13, 51539607552
  %17 = add i64 %16, 120259084288
  %18 = ashr exact i64 %17, 32
  %19 = add i64 %15, 7
  %20 = add i64 %18, %19
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = lshr i32 %22, 9
  %24 = ashr i32 %11, 1
  %25 = sext i32 %24 to i64
  %26 = mul i64 %25, 51539607552
  %27 = add i64 %26, 120259084288
  %28 = ashr exact i64 %27, 32
  %29 = add i64 %28, %19
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = lshr i32 %31, 9
  %33 = icmp ult i32 %23, %32
  br i1 %33, label %34, label %122

34:                                               ; preds = %6
  %35 = load atomic i32, i32* %10 monotonic, align 4
  %36 = load atomic i32, i32* %8 monotonic, align 4
  store atomic volatile i32 %36, i32* %10 monotonic, align 4
  store atomic volatile i32 %35, i32* %8 monotonic, align 4
  %37 = add i32 %7, 1
  %38 = load atomic i32, i32* %10 monotonic, align 4
  %39 = inttoptr i64 %2 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = ashr i32 %38, 1
  %42 = sext i32 %41 to i64
  %43 = load i64, i64* %14, align 8
  %44 = mul i64 %42, 51539607552
  %45 = add i64 %44, 120259084288
  %46 = ashr exact i64 %45, 32
  %47 = add i64 %43, 7
  %48 = add i64 %46, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = lshr i32 %50, 9
  %52 = ashr i32 %40, 1
  %53 = sext i32 %52 to i64
  %54 = mul i64 %53, 51539607552
  %55 = add i64 %54, 120259084288
  %56 = ashr exact i64 %55, 32
  %57 = add i64 %56, %47
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = lshr i32 %59, 9
  %61 = icmp ult i32 %51, %60
  br i1 %61, label %62, label %122

62:                                               ; preds = %34
  %63 = load atomic i32, i32* %39 monotonic, align 4
  %64 = load atomic i32, i32* %10 monotonic, align 4
  store atomic volatile i32 %64, i32* %39 monotonic, align 4
  store atomic volatile i32 %63, i32* %10 monotonic, align 4
  %65 = add i32 %7, 2
  %66 = load atomic i32, i32* %39 monotonic, align 4
  %67 = inttoptr i64 %1 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = ashr i32 %66, 1
  %70 = sext i32 %69 to i64
  %71 = load i64, i64* %14, align 8
  %72 = mul i64 %70, 51539607552
  %73 = add i64 %72, 120259084288
  %74 = ashr exact i64 %73, 32
  %75 = add i64 %71, 7
  %76 = add i64 %74, %75
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = lshr i32 %78, 9
  %80 = ashr i32 %68, 1
  %81 = sext i32 %80 to i64
  %82 = mul i64 %81, 51539607552
  %83 = add i64 %82, 120259084288
  %84 = ashr exact i64 %83, 32
  %85 = add i64 %84, %75
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = lshr i32 %87, 9
  %89 = icmp ult i32 %79, %88
  br i1 %89, label %90, label %122

90:                                               ; preds = %62
  %91 = load atomic i32, i32* %67 monotonic, align 4
  %92 = load atomic i32, i32* %39 monotonic, align 4
  store atomic volatile i32 %92, i32* %67 monotonic, align 4
  store atomic volatile i32 %91, i32* %39 monotonic, align 4
  %93 = add i32 %7, 3
  %94 = load atomic i32, i32* %67 monotonic, align 4
  %95 = inttoptr i64 %0 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = ashr i32 %94, 1
  %98 = sext i32 %97 to i64
  %99 = load i64, i64* %14, align 8
  %100 = mul i64 %98, 51539607552
  %101 = add i64 %100, 120259084288
  %102 = ashr exact i64 %101, 32
  %103 = add i64 %99, 7
  %104 = add i64 %102, %103
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = lshr i32 %106, 9
  %108 = ashr i32 %96, 1
  %109 = sext i32 %108 to i64
  %110 = mul i64 %109, 51539607552
  %111 = add i64 %110, 120259084288
  %112 = ashr exact i64 %111, 32
  %113 = add i64 %112, %103
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = lshr i32 %115, 9
  %117 = icmp ult i32 %107, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %90
  %119 = load atomic i32, i32* %95 monotonic, align 4
  %120 = load atomic i32, i32* %67 monotonic, align 4
  store atomic volatile i32 %120, i32* %95 monotonic, align 4
  store atomic volatile i32 %119, i32* %67 monotonic, align 4
  %121 = add i32 %7, 4
  br label %122

122:                                              ; preds = %34, %90, %118, %62, %6
  %123 = phi i32 [ %121, %118 ], [ %93, %90 ], [ %65, %62 ], [ %37, %34 ], [ %7, %6 ]
  ret i32 %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = add i64 %0, 8
  %5 = add i64 %0, 4
  %6 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %5, i64 %4, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  %7 = add i64 %0, 12
  %8 = icmp eq i64 %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %77, %3
  ret void

12:                                               ; preds = %9, %77
  %13 = phi i64 [ %4, %9 ], [ %14, %77 ]
  %14 = phi i64 [ %7, %9 ], [ %78, %77 ]
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = inttoptr i64 %13 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = ashr i32 %16, 1
  %20 = sext i32 %19 to i64
  %21 = load i64, i64* %10, align 8
  %22 = mul i64 %20, 51539607552
  %23 = add i64 %22, 120259084288
  %24 = ashr exact i64 %23, 32
  %25 = add i64 %21, 7
  %26 = add i64 %24, %25
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 9
  %30 = ashr i32 %18, 1
  %31 = sext i32 %30 to i64
  %32 = mul i64 %31, 51539607552
  %33 = add i64 %32, 120259084288
  %34 = ashr exact i64 %33, 32
  %35 = add i64 %34, %25
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = lshr i32 %37, 9
  %39 = icmp ult i32 %29, %38
  br i1 %39, label %40, label %77

40:                                               ; preds = %12
  %41 = load atomic i32, i32* %15 monotonic, align 4
  %42 = ashr i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = mul i64 %43, 51539607552
  %45 = add i64 %44, 120259084288
  %46 = ashr exact i64 %45, 32
  br label %47

47:                                               ; preds = %54, %40
  %48 = phi i64 [ %13, %40 ], [ %55, %54 ]
  %49 = phi i64 [ %14, %40 ], [ %48, %54 ]
  %50 = inttoptr i64 %48 to i32*
  %51 = inttoptr i64 %49 to i32*
  %52 = load atomic i32, i32* %50 monotonic, align 4
  store atomic volatile i32 %52, i32* %51 monotonic, align 4
  %53 = icmp eq i64 %48, %0
  br i1 %53, label %74, label %54

54:                                               ; preds = %47
  %55 = add i64 %48, -4
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = load i64, i64* %10, align 8
  %59 = add i64 %58, 7
  %60 = add i64 %59, %46
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = lshr i32 %62, 9
  %64 = ashr i32 %57, 1
  %65 = sext i32 %64 to i64
  %66 = mul i64 %65, 51539607552
  %67 = add i64 %66, 120259084288
  %68 = ashr exact i64 %67, 32
  %69 = add i64 %68, %59
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = lshr i32 %71, 9
  %73 = icmp ult i32 %63, %72
  br i1 %73, label %47, label %74

74:                                               ; preds = %47, %54
  %75 = phi i64 [ %48, %54 ], [ %0, %47 ]
  %76 = inttoptr i64 %75 to i32*
  store atomic volatile i32 %41, i32* %76 monotonic, align 4
  br label %77

77:                                               ; preds = %74, %12
  %78 = add i64 %14, 4
  %79 = icmp eq i64 %78, %1
  br i1 %79, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = sub i64 %1, %0
  %5 = trunc i64 %4 to i32
  %6 = sdiv i32 %5, 4
  switch i32 %6, label %53 [
    i32 0, label %136
    i32 1, label %136
    i32 2, label %7
    i32 3, label %38
    i32 4, label %42
    i32 5, label %47
  ]

7:                                                ; preds = %3
  %8 = add i64 %1, -4
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = inttoptr i64 %0 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = ashr i32 %10, 1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = mul i64 %14, 51539607552
  %18 = add i64 %17, 120259084288
  %19 = ashr exact i64 %18, 32
  %20 = add i64 %16, 7
  %21 = add i64 %19, %20
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = lshr i32 %23, 9
  %25 = ashr i32 %12, 1
  %26 = sext i32 %25 to i64
  %27 = mul i64 %26, 51539607552
  %28 = add i64 %27, 120259084288
  %29 = ashr exact i64 %28, 32
  %30 = add i64 %29, %20
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = lshr i32 %32, 9
  %34 = icmp ult i32 %24, %33
  br i1 %34, label %35, label %136

35:                                               ; preds = %7
  %36 = load atomic i32, i32* %11 monotonic, align 4
  %37 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %37, i32* %11 monotonic, align 4
  store atomic volatile i32 %36, i32* %9 monotonic, align 4
  br label %136

38:                                               ; preds = %3
  %39 = add i64 %0, 4
  %40 = add i64 %1, -4
  %41 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %39, i64 %40, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %136

42:                                               ; preds = %3
  %43 = add i64 %0, 4
  %44 = add i64 %0, 8
  %45 = add i64 %1, -4
  %46 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %0, i64 %43, i64 %44, i64 %45, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %136

47:                                               ; preds = %3
  %48 = add i64 %0, 4
  %49 = add i64 %0, 8
  %50 = add i64 %0, 12
  %51 = add i64 %1, -4
  %52 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %0, i64 %48, i64 %49, i64 %50, i64 %51, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  br label %136

53:                                               ; preds = %3
  %54 = add i64 %0, 8
  %55 = add i64 %0, 4
  %56 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_14NameDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %55, i64 %54, %"struct.v8::internal::EnumIndexComparator"* dereferenceable(8) %2)
  %57 = add i64 %0, 12
  %58 = icmp eq i64 %57, %1
  br i1 %58, label %136, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator", %"struct.v8::internal::EnumIndexComparator"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %59, %129
  %62 = phi i32 [ 0, %59 ], [ %130, %129 ]
  %63 = phi i64 [ %54, %59 ], [ %64, %129 ]
  %64 = phi i64 [ %57, %59 ], [ %131, %129 ]
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = inttoptr i64 %63 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = ashr i32 %66, 1
  %70 = sext i32 %69 to i64
  %71 = load i64, i64* %60, align 8
  %72 = mul i64 %70, 51539607552
  %73 = add i64 %72, 120259084288
  %74 = ashr exact i64 %73, 32
  %75 = add i64 %71, 7
  %76 = add i64 %74, %75
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = lshr i32 %78, 9
  %80 = ashr i32 %68, 1
  %81 = sext i32 %80 to i64
  %82 = mul i64 %81, 51539607552
  %83 = add i64 %82, 120259084288
  %84 = ashr exact i64 %83, 32
  %85 = add i64 %84, %75
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = lshr i32 %87, 9
  %89 = icmp ult i32 %79, %88
  br i1 %89, label %90, label %129

90:                                               ; preds = %61
  %91 = load atomic i32, i32* %65 monotonic, align 4
  %92 = ashr i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = mul i64 %93, 51539607552
  %95 = add i64 %94, 120259084288
  %96 = ashr exact i64 %95, 32
  br label %97

97:                                               ; preds = %104, %90
  %98 = phi i64 [ %63, %90 ], [ %105, %104 ]
  %99 = phi i64 [ %64, %90 ], [ %98, %104 ]
  %100 = inttoptr i64 %98 to i32*
  %101 = inttoptr i64 %99 to i32*
  %102 = load atomic i32, i32* %100 monotonic, align 4
  store atomic volatile i32 %102, i32* %101 monotonic, align 4
  %103 = icmp eq i64 %98, %0
  br i1 %103, label %124, label %104

104:                                              ; preds = %97
  %105 = add i64 %98, -4
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = load i64, i64* %60, align 8
  %109 = add i64 %108, 7
  %110 = add i64 %109, %96
  %111 = inttoptr i64 %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = lshr i32 %112, 9
  %114 = ashr i32 %107, 1
  %115 = sext i32 %114 to i64
  %116 = mul i64 %115, 51539607552
  %117 = add i64 %116, 120259084288
  %118 = ashr exact i64 %117, 32
  %119 = add i64 %118, %109
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = lshr i32 %121, 9
  %123 = icmp ult i32 %113, %122
  br i1 %123, label %97, label %124

124:                                              ; preds = %97, %104
  %125 = phi i64 [ %98, %104 ], [ %0, %97 ]
  %126 = inttoptr i64 %125 to i32*
  store atomic volatile i32 %91, i32* %126 monotonic, align 4
  %127 = add i32 %62, 1
  %128 = icmp eq i32 %127, 8
  br i1 %128, label %133, label %129

129:                                              ; preds = %124, %61
  %130 = phi i32 [ %62, %61 ], [ %127, %124 ]
  %131 = add i64 %64, 4
  %132 = icmp eq i64 %131, %1
  br i1 %132, label %136, label %61

133:                                              ; preds = %124
  %134 = add i64 %64, 4
  %135 = icmp eq i64 %134, %1
  br label %136

136:                                              ; preds = %129, %53, %133, %7, %35, %3, %3, %47, %42, %38
  %137 = phi i1 [ true, %47 ], [ true, %42 ], [ true, %38 ], [ true, %3 ], [ true, %3 ], [ true, %35 ], [ true, %7 ], [ %135, %133 ], [ true, %53 ], [ true, %129 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1242", %"struct.v8::internal::EnumIndexComparator.1242"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %464, %3
  %6 = phi i64 [ %1, %3 ], [ %413, %464 ]
  %7 = phi i64 [ %0, %3 ], [ %13, %464 ]
  %8 = add i64 %6, -4
  %9 = inttoptr i64 %8 to i32*
  br label %10

10:                                               ; preds = %476, %5
  %11 = phi i64 [ %7, %5 ], [ %477, %476 ]
  br label %12

12:                                               ; preds = %278, %10
  %13 = phi i64 [ %11, %10 ], [ %211, %278 ]
  %14 = sub i64 %6, %13
  %15 = trunc i64 %14 to i32
  %16 = sdiv i32 %15, 4
  switch i32 %16, label %71 [
    i32 0, label %480
    i32 1, label %480
    i32 2, label %17
    i32 3, label %56
    i32 4, label %60
    i32 5, label %65
  ]

17:                                               ; preds = %12
  %18 = add i64 %6, -4
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = inttoptr i64 %13 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = lshr i32 %20, 1
  %24 = load i64, i64* %4, align 8
  %25 = and i64 %24, -4294967296
  %26 = shl i32 %23, 2
  %27 = add i32 %26, 20
  %28 = sext i32 %27 to i64
  %29 = add i64 %24, 7
  %30 = add i64 %29, %28
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %25, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 9
  %39 = lshr i32 %22, 1
  %40 = shl i32 %39, 2
  %41 = add i32 %40, 20
  %42 = sext i32 %41 to i64
  %43 = add i64 %29, %42
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %25, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 9
  %52 = icmp ult i32 %38, %51
  br i1 %52, label %53, label %480

53:                                               ; preds = %17
  %54 = load atomic i32, i32* %21 monotonic, align 4
  %55 = load atomic i32, i32* %19 monotonic, align 4
  store atomic volatile i32 %55, i32* %21 monotonic, align 4
  store atomic volatile i32 %54, i32* %19 monotonic, align 4
  br label %480

56:                                               ; preds = %12
  %57 = add i64 %13, 4
  %58 = add i64 %6, -4
  %59 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %13, i64 %57, i64 %58, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %480

60:                                               ; preds = %12
  %61 = add i64 %13, 4
  %62 = add i64 %13, 8
  %63 = add i64 %6, -4
  %64 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %13, i64 %61, i64 %62, i64 %63, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %480

65:                                               ; preds = %12
  %66 = add i64 %13, 4
  %67 = add i64 %13, 8
  %68 = add i64 %13, 12
  %69 = add i64 %6, -4
  %70 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %13, i64 %66, i64 %67, i64 %68, i64 %69, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %480

71:                                               ; preds = %12
  %72 = icmp slt i32 %15, 124
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %13, i64 %6, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %480

74:                                               ; preds = %71
  %75 = icmp sgt i32 %15, 3999
  %76 = lshr i32 %16, 1
  %77 = zext i32 %76 to i64
  %78 = shl nuw nsw i64 %77, 2
  %79 = add i64 %78, %13
  br i1 %75, label %80, label %86

80:                                               ; preds = %74
  %81 = and i32 %16, -4
  %82 = zext i32 %81 to i64
  %83 = add i64 %13, %82
  %84 = add i64 %79, %82
  %85 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %13, i64 %83, i64 %79, i64 %84, i64 %8, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %88

86:                                               ; preds = %74
  %87 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %13, i64 %79, i64 %8, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i32 [ %85, %80 ], [ %87, %86 ]
  %90 = inttoptr i64 %13 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = inttoptr i64 %79 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = lshr i32 %91, 1
  %95 = load i64, i64* %4, align 8
  %96 = and i64 %95, -4294967296
  %97 = shl i32 %94, 2
  %98 = add i32 %97, 20
  %99 = sext i32 %98 to i64
  %100 = add i64 %95, 7
  %101 = add i64 %100, %99
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %96, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = lshr i32 %108, 9
  %110 = lshr i32 %93, 1
  %111 = shl i32 %110, 2
  %112 = add i32 %111, 20
  %113 = sext i32 %112 to i64
  %114 = add i64 %100, %113
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %96, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = lshr i32 %121, 9
  %123 = icmp ult i32 %109, %122
  br i1 %123, label %321, label %124

124:                                              ; preds = %88, %284
  %125 = phi i64 [ %126, %284 ], [ %8, %88 ]
  %126 = add i64 %125, -4
  %127 = icmp eq i64 %13, %126
  br i1 %127, label %128, label %284

128:                                              ; preds = %124
  %129 = add i64 %13, 4
  %130 = load atomic i32, i32* %90 monotonic, align 4
  %131 = load atomic i32, i32* %9 monotonic, align 4
  %132 = lshr i32 %130, 1
  %133 = shl i32 %132, 2
  %134 = add i32 %133, 20
  %135 = sext i32 %134 to i64
  %136 = add i64 %100, %135
  %137 = inttoptr i64 %136 to i32*
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = zext i32 %138 to i64
  %140 = or i64 %96, %139
  %141 = add i64 %140, 7
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = lshr i32 %143, 9
  %145 = lshr i32 %131, 1
  %146 = shl i32 %145, 2
  %147 = add i32 %146, 20
  %148 = sext i32 %147 to i64
  %149 = add i64 %100, %148
  %150 = inttoptr i64 %149 to i32*
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = zext i32 %151 to i64
  %153 = or i64 %96, %152
  %154 = add i64 %153, 7
  %155 = inttoptr i64 %154 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = lshr i32 %156, 9
  %158 = icmp ult i32 %144, %157
  br i1 %158, label %201, label %159

159:                                              ; preds = %128
  %160 = icmp eq i64 %129, %8
  br i1 %160, label %480, label %161

161:                                              ; preds = %159, %198
  %162 = phi i64 [ %199, %198 ], [ %129, %159 ]
  %163 = load atomic i32, i32* %90 monotonic, align 4
  %164 = inttoptr i64 %162 to i32*
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = lshr i32 %163, 1
  %167 = shl i32 %166, 2
  %168 = add i32 %167, 20
  %169 = sext i32 %168 to i64
  %170 = add i64 %100, %169
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %96, %173
  %175 = add i64 %174, 7
  %176 = inttoptr i64 %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = lshr i32 %177, 9
  %179 = lshr i32 %165, 1
  %180 = shl i32 %179, 2
  %181 = add i32 %180, 20
  %182 = sext i32 %181 to i64
  %183 = add i64 %100, %182
  %184 = inttoptr i64 %183 to i32*
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %96, %186
  %188 = add i64 %187, 7
  %189 = inttoptr i64 %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = lshr i32 %190, 9
  %192 = icmp ult i32 %178, %191
  br i1 %192, label %193, label %198

193:                                              ; preds = %161
  %194 = inttoptr i64 %162 to i32*
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %196, i32* %194 monotonic, align 4
  store atomic volatile i32 %195, i32* %9 monotonic, align 4
  %197 = add i64 %162, 4
  br label %201

198:                                              ; preds = %161
  %199 = add i64 %162, 4
  %200 = icmp eq i64 %199, %8
  br i1 %200, label %480, label %161

201:                                              ; preds = %128, %193
  %202 = phi i64 [ %129, %128 ], [ %197, %193 ]
  %203 = icmp eq i64 %202, %8
  br i1 %203, label %480, label %204

204:                                              ; preds = %201, %281
  %205 = phi i64 [ %248, %281 ], [ %8, %201 ]
  %206 = phi i64 [ %242, %281 ], [ %202, %201 ]
  %207 = load i64, i64* %4, align 8
  %208 = and i64 %207, -4294967296
  %209 = add i64 %207, 7
  br label %210

210:                                              ; preds = %210, %204
  %211 = phi i64 [ %206, %204 ], [ %242, %210 ]
  %212 = load atomic i32, i32* %90 monotonic, align 4
  %213 = inttoptr i64 %211 to i32*
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = lshr i32 %212, 1
  %216 = shl i32 %215, 2
  %217 = add i32 %216, 20
  %218 = sext i32 %217 to i64
  %219 = add i64 %209, %218
  %220 = inttoptr i64 %219 to i32*
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = zext i32 %221 to i64
  %223 = or i64 %208, %222
  %224 = add i64 %223, 7
  %225 = inttoptr i64 %224 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = lshr i32 %226, 9
  %228 = lshr i32 %214, 1
  %229 = shl i32 %228, 2
  %230 = add i32 %229, 20
  %231 = sext i32 %230 to i64
  %232 = add i64 %209, %231
  %233 = inttoptr i64 %232 to i32*
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = zext i32 %234 to i64
  %236 = or i64 %208, %235
  %237 = add i64 %236, 7
  %238 = inttoptr i64 %237 to i32*
  %239 = load i32, i32* %238, align 4
  %240 = lshr i32 %239, 9
  %241 = icmp ult i32 %227, %240
  %242 = add i64 %211, 4
  br i1 %241, label %243, label %210

243:                                              ; preds = %210
  %244 = inttoptr i64 %211 to i32*
  br label %245

245:                                              ; preds = %243, %245
  %246 = phi i64 [ %248, %245 ], [ %205, %243 ]
  %247 = load atomic i32, i32* %90 monotonic, align 4
  %248 = add i64 %246, -4
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = lshr i32 %247, 1
  %252 = shl i32 %251, 2
  %253 = add i32 %252, 20
  %254 = sext i32 %253 to i64
  %255 = add i64 %209, %254
  %256 = inttoptr i64 %255 to i32*
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = zext i32 %257 to i64
  %259 = or i64 %208, %258
  %260 = add i64 %259, 7
  %261 = inttoptr i64 %260 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = lshr i32 %262, 9
  %264 = lshr i32 %250, 1
  %265 = shl i32 %264, 2
  %266 = add i32 %265, 20
  %267 = sext i32 %266 to i64
  %268 = add i64 %209, %267
  %269 = inttoptr i64 %268 to i32*
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = zext i32 %270 to i64
  %272 = or i64 %208, %271
  %273 = add i64 %272, 7
  %274 = inttoptr i64 %273 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = lshr i32 %275, 9
  %277 = icmp ult i32 %263, %276
  br i1 %277, label %245, label %278

278:                                              ; preds = %245
  %279 = inttoptr i64 %248 to i32*
  %280 = icmp ult i64 %211, %248
  br i1 %280, label %281, label %12

281:                                              ; preds = %278
  %282 = load atomic i32, i32* %244 monotonic, align 4
  %283 = load atomic i32, i32* %279 monotonic, align 4
  store atomic volatile i32 %283, i32* %244 monotonic, align 4
  store atomic volatile i32 %282, i32* %279 monotonic, align 4
  br label %204

284:                                              ; preds = %124
  %285 = inttoptr i64 %126 to i32*
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = load atomic i32, i32* %92 monotonic, align 4
  %288 = lshr i32 %286, 1
  %289 = shl i32 %288, 2
  %290 = add i32 %289, 20
  %291 = sext i32 %290 to i64
  %292 = add i64 %100, %291
  %293 = inttoptr i64 %292 to i32*
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = zext i32 %294 to i64
  %296 = or i64 %96, %295
  %297 = add i64 %296, 7
  %298 = inttoptr i64 %297 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = lshr i32 %299, 9
  %301 = lshr i32 %287, 1
  %302 = shl i32 %301, 2
  %303 = add i32 %302, 20
  %304 = sext i32 %303 to i64
  %305 = add i64 %100, %304
  %306 = inttoptr i64 %305 to i32*
  %307 = load atomic i32, i32* %306 monotonic, align 4
  %308 = zext i32 %307 to i64
  %309 = or i64 %96, %308
  %310 = add i64 %309, 7
  %311 = inttoptr i64 %310 to i32*
  %312 = load i32, i32* %311, align 4
  %313 = lshr i32 %312, 9
  %314 = icmp ult i32 %300, %313
  br i1 %314, label %315, label %124

315:                                              ; preds = %284
  %316 = inttoptr i64 %13 to i32*
  %317 = inttoptr i64 %126 to i32*
  %318 = load atomic i32, i32* %316 monotonic, align 4
  %319 = load atomic i32, i32* %317 monotonic, align 4
  store atomic volatile i32 %319, i32* %316 monotonic, align 4
  store atomic volatile i32 %318, i32* %317 monotonic, align 4
  %320 = add i32 %89, 1
  br label %321

321:                                              ; preds = %88, %315
  %322 = phi i64 [ %126, %315 ], [ %8, %88 ]
  %323 = phi i32 [ %320, %315 ], [ %89, %88 ]
  %324 = add i64 %13, 4
  %325 = icmp ult i64 %324, %322
  br i1 %325, label %326, label %412

326:                                              ; preds = %321, %406
  %327 = phi i64 [ %372, %406 ], [ %322, %321 ]
  %328 = phi i64 [ %367, %406 ], [ %324, %321 ]
  %329 = phi i64 [ %411, %406 ], [ %79, %321 ]
  %330 = phi i32 [ %409, %406 ], [ %323, %321 ]
  %331 = inttoptr i64 %329 to i32*
  %332 = load i64, i64* %4, align 8
  %333 = and i64 %332, -4294967296
  %334 = add i64 %332, 7
  br label %335

335:                                              ; preds = %335, %326
  %336 = phi i64 [ %328, %326 ], [ %367, %335 ]
  %337 = inttoptr i64 %336 to i32*
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = load atomic i32, i32* %331 monotonic, align 4
  %340 = lshr i32 %338, 1
  %341 = shl i32 %340, 2
  %342 = add i32 %341, 20
  %343 = sext i32 %342 to i64
  %344 = add i64 %334, %343
  %345 = inttoptr i64 %344 to i32*
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = zext i32 %346 to i64
  %348 = or i64 %333, %347
  %349 = add i64 %348, 7
  %350 = inttoptr i64 %349 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = lshr i32 %351, 9
  %353 = lshr i32 %339, 1
  %354 = shl i32 %353, 2
  %355 = add i32 %354, 20
  %356 = sext i32 %355 to i64
  %357 = add i64 %334, %356
  %358 = inttoptr i64 %357 to i32*
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = zext i32 %359 to i64
  %361 = or i64 %333, %360
  %362 = add i64 %361, 7
  %363 = inttoptr i64 %362 to i32*
  %364 = load i32, i32* %363, align 4
  %365 = lshr i32 %364, 9
  %366 = icmp ult i32 %352, %365
  %367 = add i64 %336, 4
  br i1 %366, label %335, label %368

368:                                              ; preds = %335
  %369 = inttoptr i64 %336 to i32*
  br label %370

370:                                              ; preds = %368, %370
  %371 = phi i64 [ %372, %370 ], [ %327, %368 ]
  %372 = add i64 %371, -4
  %373 = inttoptr i64 %372 to i32*
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = load atomic i32, i32* %331 monotonic, align 4
  %376 = lshr i32 %374, 1
  %377 = shl i32 %376, 2
  %378 = add i32 %377, 20
  %379 = sext i32 %378 to i64
  %380 = add i64 %334, %379
  %381 = inttoptr i64 %380 to i32*
  %382 = load atomic i32, i32* %381 monotonic, align 4
  %383 = zext i32 %382 to i64
  %384 = or i64 %333, %383
  %385 = add i64 %384, 7
  %386 = inttoptr i64 %385 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = lshr i32 %387, 9
  %389 = lshr i32 %375, 1
  %390 = shl i32 %389, 2
  %391 = add i32 %390, 20
  %392 = sext i32 %391 to i64
  %393 = add i64 %334, %392
  %394 = inttoptr i64 %393 to i32*
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = zext i32 %395 to i64
  %397 = or i64 %333, %396
  %398 = add i64 %397, 7
  %399 = inttoptr i64 %398 to i32*
  %400 = load i32, i32* %399, align 4
  %401 = lshr i32 %400, 9
  %402 = icmp ult i32 %388, %401
  br i1 %402, label %403, label %370

403:                                              ; preds = %370
  %404 = inttoptr i64 %372 to i32*
  %405 = icmp ugt i64 %336, %372
  br i1 %405, label %412, label %406

406:                                              ; preds = %403
  %407 = load atomic i32, i32* %369 monotonic, align 4
  %408 = load atomic i32, i32* %404 monotonic, align 4
  store atomic volatile i32 %408, i32* %369 monotonic, align 4
  store atomic volatile i32 %407, i32* %404 monotonic, align 4
  %409 = add i32 %330, 1
  %410 = icmp eq i64 %329, %336
  %411 = select i1 %410, i64 %372, i64 %329
  br label %326

412:                                              ; preds = %403, %321
  %413 = phi i64 [ %324, %321 ], [ %336, %403 ]
  %414 = phi i64 [ %79, %321 ], [ %329, %403 ]
  %415 = phi i32 [ %323, %321 ], [ %330, %403 ]
  %416 = icmp eq i64 %413, %414
  br i1 %416, label %456, label %417

417:                                              ; preds = %412
  %418 = inttoptr i64 %414 to i32*
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = inttoptr i64 %413 to i32*
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = lshr i32 %419, 1
  %423 = load i64, i64* %4, align 8
  %424 = and i64 %423, -4294967296
  %425 = shl i32 %422, 2
  %426 = add i32 %425, 20
  %427 = sext i32 %426 to i64
  %428 = add i64 %423, 7
  %429 = add i64 %428, %427
  %430 = inttoptr i64 %429 to i32*
  %431 = load atomic i32, i32* %430 monotonic, align 4
  %432 = zext i32 %431 to i64
  %433 = or i64 %424, %432
  %434 = add i64 %433, 7
  %435 = inttoptr i64 %434 to i32*
  %436 = load i32, i32* %435, align 4
  %437 = lshr i32 %436, 9
  %438 = lshr i32 %421, 1
  %439 = shl i32 %438, 2
  %440 = add i32 %439, 20
  %441 = sext i32 %440 to i64
  %442 = add i64 %428, %441
  %443 = inttoptr i64 %442 to i32*
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = zext i32 %444 to i64
  %446 = or i64 %424, %445
  %447 = add i64 %446, 7
  %448 = inttoptr i64 %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = lshr i32 %449, 9
  %451 = icmp ult i32 %437, %450
  br i1 %451, label %452, label %456

452:                                              ; preds = %417
  %453 = load atomic i32, i32* %420 monotonic, align 4
  %454 = load atomic i32, i32* %418 monotonic, align 4
  store atomic volatile i32 %454, i32* %420 monotonic, align 4
  store atomic volatile i32 %453, i32* %418 monotonic, align 4
  %455 = add i32 %415, 1
  br label %456

456:                                              ; preds = %412, %452, %417
  %457 = phi i32 [ %455, %452 ], [ %415, %417 ], [ %415, %412 ]
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %466

459:                                              ; preds = %456
  %460 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64 %13, i64 %413, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  %461 = add i64 %413, 4
  %462 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64 %461, i64 %6, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br i1 %462, label %463, label %465

463:                                              ; preds = %459
  br i1 %460, label %480, label %464

464:                                              ; preds = %463, %478
  br label %5

465:                                              ; preds = %459
  br i1 %460, label %476, label %466

466:                                              ; preds = %465, %456
  %467 = sub i64 %413, %13
  %468 = trunc i64 %467 to i32
  %469 = sdiv i32 %468, 4
  %470 = sub i64 %6, %413
  %471 = trunc i64 %470 to i32
  %472 = sdiv i32 %471, 4
  %473 = icmp slt i32 %469, %472
  br i1 %473, label %474, label %478

474:                                              ; preds = %466
  tail call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %13, i64 %413, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  %475 = add i64 %413, 4
  br label %476

476:                                              ; preds = %474, %465
  %477 = phi i64 [ %461, %465 ], [ %475, %474 ]
  br label %10

478:                                              ; preds = %466
  %479 = add i64 %413, 4
  tail call void @_ZNSt3__16__sortIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64 %479, i64 %6, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %464

480:                                              ; preds = %463, %201, %12, %12, %159, %198, %17, %53, %56, %60, %65, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64, i64, i64, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = inttoptr i64 %1 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = inttoptr i64 %0 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = lshr i32 %6, 1
  %10 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1242", %"struct.v8::internal::EnumIndexComparator.1242"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, -4294967296
  %13 = shl i32 %9, 2
  %14 = add i32 %13, 20
  %15 = sext i32 %14 to i64
  %16 = add i64 %11, 7
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %12, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = lshr i32 %24, 9
  %26 = lshr i32 %8, 1
  %27 = shl i32 %26, 2
  %28 = add i32 %27, 20
  %29 = sext i32 %28 to i64
  %30 = add i64 %16, %29
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %12, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 9
  %39 = icmp ult i32 %25, %38
  %40 = inttoptr i64 %2 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = load atomic i32, i32* %5 monotonic, align 4
  %43 = lshr i32 %41, 1
  %44 = shl i32 %43, 2
  %45 = add i32 %44, 20
  %46 = sext i32 %45 to i64
  %47 = add i64 %16, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %12, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = lshr i32 %54, 9
  %56 = lshr i32 %42, 1
  %57 = shl i32 %56, 2
  %58 = add i32 %57, 20
  %59 = sext i32 %58 to i64
  %60 = add i64 %16, %59
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %12, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = lshr i32 %67, 9
  %69 = icmp ult i32 %55, %68
  br i1 %39, label %109, label %70

70:                                               ; preds = %4
  br i1 %69, label %71, label %150

71:                                               ; preds = %70
  %72 = load atomic i32, i32* %5 monotonic, align 4
  %73 = load atomic i32, i32* %40 monotonic, align 4
  store atomic volatile i32 %73, i32* %5 monotonic, align 4
  store atomic volatile i32 %72, i32* %40 monotonic, align 4
  %74 = load atomic i32, i32* %5 monotonic, align 4
  %75 = load atomic i32, i32* %7 monotonic, align 4
  %76 = lshr i32 %74, 1
  %77 = load i64, i64* %10, align 8
  %78 = and i64 %77, -4294967296
  %79 = shl i32 %76, 2
  %80 = add i32 %79, 20
  %81 = sext i32 %80 to i64
  %82 = add i64 %77, 7
  %83 = add i64 %82, %81
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %78, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = lshr i32 %90, 9
  %92 = lshr i32 %75, 1
  %93 = shl i32 %92, 2
  %94 = add i32 %93, 20
  %95 = sext i32 %94 to i64
  %96 = add i64 %82, %95
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %78, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = lshr i32 %103, 9
  %105 = icmp ult i32 %91, %104
  br i1 %105, label %106, label %150

106:                                              ; preds = %71
  %107 = load atomic i32, i32* %7 monotonic, align 4
  %108 = load atomic i32, i32* %5 monotonic, align 4
  store atomic volatile i32 %108, i32* %7 monotonic, align 4
  store atomic volatile i32 %107, i32* %5 monotonic, align 4
  br label %150

109:                                              ; preds = %4
  %110 = load atomic i32, i32* %7 monotonic, align 4
  br i1 %69, label %111, label %113

111:                                              ; preds = %109
  %112 = load atomic i32, i32* %40 monotonic, align 4
  store atomic volatile i32 %112, i32* %7 monotonic, align 4
  store atomic volatile i32 %110, i32* %40 monotonic, align 4
  br label %150

113:                                              ; preds = %109
  %114 = load atomic i32, i32* %5 monotonic, align 4
  store atomic volatile i32 %114, i32* %7 monotonic, align 4
  store atomic volatile i32 %110, i32* %5 monotonic, align 4
  %115 = load atomic i32, i32* %40 monotonic, align 4
  %116 = load atomic i32, i32* %5 monotonic, align 4
  %117 = lshr i32 %115, 1
  %118 = load i64, i64* %10, align 8
  %119 = and i64 %118, -4294967296
  %120 = shl i32 %117, 2
  %121 = add i32 %120, 20
  %122 = sext i32 %121 to i64
  %123 = add i64 %118, 7
  %124 = add i64 %123, %122
  %125 = inttoptr i64 %124 to i32*
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = zext i32 %126 to i64
  %128 = or i64 %119, %127
  %129 = add i64 %128, 7
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = lshr i32 %131, 9
  %133 = lshr i32 %116, 1
  %134 = shl i32 %133, 2
  %135 = add i32 %134, 20
  %136 = sext i32 %135 to i64
  %137 = add i64 %123, %136
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = zext i32 %139 to i64
  %141 = or i64 %119, %140
  %142 = add i64 %141, 7
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = lshr i32 %144, 9
  %146 = icmp ult i32 %132, %145
  br i1 %146, label %147, label %150

147:                                              ; preds = %113
  %148 = load atomic i32, i32* %5 monotonic, align 4
  %149 = load atomic i32, i32* %40 monotonic, align 4
  store atomic volatile i32 %149, i32* %5 monotonic, align 4
  store atomic volatile i32 %148, i32* %40 monotonic, align 4
  br label %150

150:                                              ; preds = %113, %147, %71, %106, %70, %111
  %151 = phi i32 [ 1, %111 ], [ 0, %70 ], [ 2, %106 ], [ 1, %71 ], [ 2, %147 ], [ 1, %113 ]
  ret i32 %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64, i64, i64, i64, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %1, i64 %2, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %4)
  %7 = inttoptr i64 %3 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = inttoptr i64 %2 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = lshr i32 %8, 1
  %12 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1242", %"struct.v8::internal::EnumIndexComparator.1242"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -4294967296
  %15 = shl i32 %11, 2
  %16 = add i32 %15, 20
  %17 = sext i32 %16 to i64
  %18 = add i64 %13, 7
  %19 = add i64 %18, %17
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %14, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = lshr i32 %26, 9
  %28 = lshr i32 %10, 1
  %29 = shl i32 %28, 2
  %30 = add i32 %29, 20
  %31 = sext i32 %30 to i64
  %32 = add i64 %18, %31
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %14, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = lshr i32 %39, 9
  %41 = icmp ult i32 %27, %40
  br i1 %41, label %42, label %120

42:                                               ; preds = %5
  %43 = load atomic i32, i32* %9 monotonic, align 4
  %44 = load atomic i32, i32* %7 monotonic, align 4
  store atomic volatile i32 %44, i32* %9 monotonic, align 4
  store atomic volatile i32 %43, i32* %7 monotonic, align 4
  %45 = add i32 %6, 1
  %46 = load atomic i32, i32* %9 monotonic, align 4
  %47 = inttoptr i64 %1 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = lshr i32 %46, 1
  %50 = load i64, i64* %12, align 8
  %51 = and i64 %50, -4294967296
  %52 = shl i32 %49, 2
  %53 = add i32 %52, 20
  %54 = sext i32 %53 to i64
  %55 = add i64 %50, 7
  %56 = add i64 %55, %54
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %51, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = lshr i32 %63, 9
  %65 = lshr i32 %48, 1
  %66 = shl i32 %65, 2
  %67 = add i32 %66, 20
  %68 = sext i32 %67 to i64
  %69 = add i64 %55, %68
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %51, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = lshr i32 %76, 9
  %78 = icmp ult i32 %64, %77
  br i1 %78, label %79, label %120

79:                                               ; preds = %42
  %80 = load atomic i32, i32* %47 monotonic, align 4
  %81 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %81, i32* %47 monotonic, align 4
  store atomic volatile i32 %80, i32* %9 monotonic, align 4
  %82 = add i32 %6, 2
  %83 = load atomic i32, i32* %47 monotonic, align 4
  %84 = inttoptr i64 %0 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = lshr i32 %83, 1
  %87 = load i64, i64* %12, align 8
  %88 = and i64 %87, -4294967296
  %89 = shl i32 %86, 2
  %90 = add i32 %89, 20
  %91 = sext i32 %90 to i64
  %92 = add i64 %87, 7
  %93 = add i64 %92, %91
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %88, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = lshr i32 %100, 9
  %102 = lshr i32 %85, 1
  %103 = shl i32 %102, 2
  %104 = add i32 %103, 20
  %105 = sext i32 %104 to i64
  %106 = add i64 %92, %105
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %88, %109
  %111 = add i64 %110, 7
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = lshr i32 %113, 9
  %115 = icmp ult i32 %101, %114
  br i1 %115, label %116, label %120

116:                                              ; preds = %79
  %117 = load atomic i32, i32* %84 monotonic, align 4
  %118 = load atomic i32, i32* %47 monotonic, align 4
  store atomic volatile i32 %118, i32* %84 monotonic, align 4
  store atomic volatile i32 %117, i32* %47 monotonic, align 4
  %119 = add i32 %6, 3
  br label %120

120:                                              ; preds = %42, %116, %79, %5
  %121 = phi i32 [ %119, %116 ], [ %82, %79 ], [ %45, %42 ], [ %6, %5 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64, i64, i64, i64, i64, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %0, i64 %1, i64 %2, i64 %3, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %5)
  %8 = inttoptr i64 %4 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = inttoptr i64 %3 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = lshr i32 %9, 1
  %13 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1242", %"struct.v8::internal::EnumIndexComparator.1242"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, -4294967296
  %16 = shl i32 %12, 2
  %17 = add i32 %16, 20
  %18 = sext i32 %17 to i64
  %19 = add i64 %14, 7
  %20 = add i64 %19, %18
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %15, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = lshr i32 %27, 9
  %29 = lshr i32 %11, 1
  %30 = shl i32 %29, 2
  %31 = add i32 %30, 20
  %32 = sext i32 %31 to i64
  %33 = add i64 %19, %32
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %15, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = lshr i32 %40, 9
  %42 = icmp ult i32 %28, %41
  br i1 %42, label %43, label %158

43:                                               ; preds = %6
  %44 = load atomic i32, i32* %10 monotonic, align 4
  %45 = load atomic i32, i32* %8 monotonic, align 4
  store atomic volatile i32 %45, i32* %10 monotonic, align 4
  store atomic volatile i32 %44, i32* %8 monotonic, align 4
  %46 = add i32 %7, 1
  %47 = load atomic i32, i32* %10 monotonic, align 4
  %48 = inttoptr i64 %2 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = lshr i32 %47, 1
  %51 = load i64, i64* %13, align 8
  %52 = and i64 %51, -4294967296
  %53 = shl i32 %50, 2
  %54 = add i32 %53, 20
  %55 = sext i32 %54 to i64
  %56 = add i64 %51, 7
  %57 = add i64 %56, %55
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %52, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = lshr i32 %64, 9
  %66 = lshr i32 %49, 1
  %67 = shl i32 %66, 2
  %68 = add i32 %67, 20
  %69 = sext i32 %68 to i64
  %70 = add i64 %56, %69
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %52, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = lshr i32 %77, 9
  %79 = icmp ult i32 %65, %78
  br i1 %79, label %80, label %158

80:                                               ; preds = %43
  %81 = load atomic i32, i32* %48 monotonic, align 4
  %82 = load atomic i32, i32* %10 monotonic, align 4
  store atomic volatile i32 %82, i32* %48 monotonic, align 4
  store atomic volatile i32 %81, i32* %10 monotonic, align 4
  %83 = add i32 %7, 2
  %84 = load atomic i32, i32* %48 monotonic, align 4
  %85 = inttoptr i64 %1 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = lshr i32 %84, 1
  %88 = load i64, i64* %13, align 8
  %89 = and i64 %88, -4294967296
  %90 = shl i32 %87, 2
  %91 = add i32 %90, 20
  %92 = sext i32 %91 to i64
  %93 = add i64 %88, 7
  %94 = add i64 %93, %92
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %89, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = lshr i32 %101, 9
  %103 = lshr i32 %86, 1
  %104 = shl i32 %103, 2
  %105 = add i32 %104, 20
  %106 = sext i32 %105 to i64
  %107 = add i64 %93, %106
  %108 = inttoptr i64 %107 to i32*
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %89, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = lshr i32 %114, 9
  %116 = icmp ult i32 %102, %115
  br i1 %116, label %117, label %158

117:                                              ; preds = %80
  %118 = load atomic i32, i32* %85 monotonic, align 4
  %119 = load atomic i32, i32* %48 monotonic, align 4
  store atomic volatile i32 %119, i32* %85 monotonic, align 4
  store atomic volatile i32 %118, i32* %48 monotonic, align 4
  %120 = add i32 %7, 3
  %121 = load atomic i32, i32* %85 monotonic, align 4
  %122 = inttoptr i64 %0 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = lshr i32 %121, 1
  %125 = load i64, i64* %13, align 8
  %126 = and i64 %125, -4294967296
  %127 = shl i32 %124, 2
  %128 = add i32 %127, 20
  %129 = sext i32 %128 to i64
  %130 = add i64 %125, 7
  %131 = add i64 %130, %129
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %126, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = lshr i32 %138, 9
  %140 = lshr i32 %123, 1
  %141 = shl i32 %140, 2
  %142 = add i32 %141, 20
  %143 = sext i32 %142 to i64
  %144 = add i64 %130, %143
  %145 = inttoptr i64 %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %126, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = lshr i32 %151, 9
  %153 = icmp ult i32 %139, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %117
  %155 = load atomic i32, i32* %122 monotonic, align 4
  %156 = load atomic i32, i32* %85 monotonic, align 4
  store atomic volatile i32 %156, i32* %122 monotonic, align 4
  store atomic volatile i32 %155, i32* %85 monotonic, align 4
  %157 = add i32 %7, 4
  br label %158

158:                                              ; preds = %43, %117, %154, %80, %6
  %159 = phi i32 [ %157, %154 ], [ %120, %117 ], [ %83, %80 ], [ %46, %43 ], [ %7, %6 ]
  ret i32 %159
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEvT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = add i64 %0, 8
  %5 = add i64 %0, 4
  %6 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %5, i64 %4, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  %7 = add i64 %0, 12
  %8 = icmp eq i64 %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1242", %"struct.v8::internal::EnumIndexComparator.1242"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %95, %3
  ret void

12:                                               ; preds = %9, %95
  %13 = phi i64 [ %4, %9 ], [ %14, %95 ]
  %14 = phi i64 [ %7, %9 ], [ %96, %95 ]
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = inttoptr i64 %13 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = lshr i32 %16, 1
  %20 = load i64, i64* %10, align 8
  %21 = and i64 %20, -4294967296
  %22 = shl i32 %19, 2
  %23 = add i32 %22, 20
  %24 = sext i32 %23 to i64
  %25 = add i64 %20, 7
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %21, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = lshr i32 %33, 9
  %35 = lshr i32 %18, 1
  %36 = shl i32 %35, 2
  %37 = add i32 %36, 20
  %38 = sext i32 %37 to i64
  %39 = add i64 %25, %38
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %21, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = lshr i32 %46, 9
  %48 = icmp ult i32 %34, %47
  br i1 %48, label %49, label %95

49:                                               ; preds = %12
  %50 = load atomic i32, i32* %15 monotonic, align 4
  %51 = lshr i32 %50, 1
  %52 = shl i32 %51, 2
  %53 = add i32 %52, 20
  %54 = sext i32 %53 to i64
  br label %55

55:                                               ; preds = %62, %49
  %56 = phi i64 [ %13, %49 ], [ %63, %62 ]
  %57 = phi i64 [ %14, %49 ], [ %56, %62 ]
  %58 = inttoptr i64 %56 to i32*
  %59 = inttoptr i64 %57 to i32*
  %60 = load atomic i32, i32* %58 monotonic, align 4
  store atomic volatile i32 %60, i32* %59 monotonic, align 4
  %61 = icmp eq i64 %56, %0
  br i1 %61, label %92, label %62

62:                                               ; preds = %55
  %63 = add i64 %56, -4
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = load i64, i64* %10, align 8
  %67 = and i64 %66, -4294967296
  %68 = add i64 %66, 7
  %69 = add i64 %68, %54
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %67, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = lshr i32 %76, 9
  %78 = lshr i32 %65, 1
  %79 = shl i32 %78, 2
  %80 = add i32 %79, 20
  %81 = sext i32 %80 to i64
  %82 = add i64 %68, %81
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %67, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = lshr i32 %89, 9
  %91 = icmp ult i32 %77, %90
  br i1 %91, label %55, label %92

92:                                               ; preds = %55, %62
  %93 = phi i64 [ %56, %62 ], [ %0, %55 ]
  %94 = inttoptr i64 %93 to i32*
  store atomic volatile i32 %50, i32* %94 monotonic, align 4
  br label %95

95:                                               ; preds = %92, %12
  %96 = add i64 %14, 4
  %97 = icmp eq i64 %96, %1
  br i1 %97, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEbT0_S8_T_(i64, i64, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = sub i64 %1, %0
  %5 = trunc i64 %4 to i32
  %6 = sdiv i32 %5, 4
  switch i32 %6, label %62 [
    i32 0, label %163
    i32 1, label %163
    i32 2, label %7
    i32 3, label %47
    i32 4, label %51
    i32 5, label %56
  ]

7:                                                ; preds = %3
  %8 = add i64 %1, -4
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = inttoptr i64 %0 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %10, 1
  %14 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1242", %"struct.v8::internal::EnumIndexComparator.1242"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967296
  %17 = shl i32 %13, 2
  %18 = add i32 %17, 20
  %19 = sext i32 %18 to i64
  %20 = add i64 %15, 7
  %21 = add i64 %20, %19
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %16, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 9
  %30 = lshr i32 %12, 1
  %31 = shl i32 %30, 2
  %32 = add i32 %31, 20
  %33 = sext i32 %32 to i64
  %34 = add i64 %20, %33
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %16, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = lshr i32 %41, 9
  %43 = icmp ult i32 %29, %42
  br i1 %43, label %44, label %163

44:                                               ; preds = %7
  %45 = load atomic i32, i32* %11 monotonic, align 4
  %46 = load atomic i32, i32* %9 monotonic, align 4
  store atomic volatile i32 %46, i32* %11 monotonic, align 4
  store atomic volatile i32 %45, i32* %9 monotonic, align 4
  br label %163

47:                                               ; preds = %3
  %48 = add i64 %0, 4
  %49 = add i64 %1, -4
  %50 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %48, i64 %49, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %163

51:                                               ; preds = %3
  %52 = add i64 %0, 4
  %53 = add i64 %0, 8
  %54 = add i64 %1, -4
  %55 = tail call i32 @_ZNSt3__17__sort4IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_T_(i64 %0, i64 %52, i64 %53, i64 %54, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %163

56:                                               ; preds = %3
  %57 = add i64 %0, 4
  %58 = add i64 %0, 8
  %59 = add i64 %0, 12
  %60 = add i64 %1, -4
  %61 = tail call i32 @_ZNSt3__17__sort5IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_S8_S8_T_(i64 %0, i64 %57, i64 %58, i64 %59, i64 %60, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  br label %163

62:                                               ; preds = %3
  %63 = add i64 %0, 8
  %64 = add i64 %0, 4
  %65 = tail call i32 @_ZNSt3__17__sort3IRN2v88internal19EnumIndexComparatorINS2_16GlobalDictionaryEEENS2_10AtomicSlotEEEjT0_S8_S8_T_(i64 %0, i64 %64, i64 %63, %"struct.v8::internal::EnumIndexComparator.1242"* dereferenceable(8) %2)
  %66 = add i64 %0, 12
  %67 = icmp eq i64 %66, %1
  br i1 %67, label %163, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.v8::internal::EnumIndexComparator.1242", %"struct.v8::internal::EnumIndexComparator.1242"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %68, %156
  %71 = phi i32 [ 0, %68 ], [ %157, %156 ]
  %72 = phi i64 [ %63, %68 ], [ %73, %156 ]
  %73 = phi i64 [ %66, %68 ], [ %158, %156 ]
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = inttoptr i64 %72 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = lshr i32 %75, 1
  %79 = load i64, i64* %69, align 8
  %80 = and i64 %79, -4294967296
  %81 = shl i32 %78, 2
  %82 = add i32 %81, 20
  %83 = sext i32 %82 to i64
  %84 = add i64 %79, 7
  %85 = add i64 %84, %83
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %80, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = lshr i32 %92, 9
  %94 = lshr i32 %77, 1
  %95 = shl i32 %94, 2
  %96 = add i32 %95, 20
  %97 = sext i32 %96 to i64
  %98 = add i64 %84, %97
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %80, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = lshr i32 %105, 9
  %107 = icmp ult i32 %93, %106
  br i1 %107, label %108, label %156

108:                                              ; preds = %70
  %109 = load atomic i32, i32* %74 monotonic, align 4
  %110 = lshr i32 %109, 1
  %111 = shl i32 %110, 2
  %112 = add i32 %111, 20
  %113 = sext i32 %112 to i64
  br label %114

114:                                              ; preds = %121, %108
  %115 = phi i64 [ %72, %108 ], [ %122, %121 ]
  %116 = phi i64 [ %73, %108 ], [ %115, %121 ]
  %117 = inttoptr i64 %115 to i32*
  %118 = inttoptr i64 %116 to i32*
  %119 = load atomic i32, i32* %117 monotonic, align 4
  store atomic volatile i32 %119, i32* %118 monotonic, align 4
  %120 = icmp eq i64 %115, %0
  br i1 %120, label %151, label %121

121:                                              ; preds = %114
  %122 = add i64 %115, -4
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = load i64, i64* %69, align 8
  %126 = and i64 %125, -4294967296
  %127 = add i64 %125, 7
  %128 = add i64 %127, %113
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %126, %131
  %133 = add i64 %132, 7
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = lshr i32 %135, 9
  %137 = lshr i32 %124, 1
  %138 = shl i32 %137, 2
  %139 = add i32 %138, 20
  %140 = sext i32 %139 to i64
  %141 = add i64 %127, %140
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %126, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i32*
  %148 = load i32, i32* %147, align 4
  %149 = lshr i32 %148, 9
  %150 = icmp ult i32 %136, %149
  br i1 %150, label %114, label %151

151:                                              ; preds = %114, %121
  %152 = phi i64 [ %115, %121 ], [ %0, %114 ]
  %153 = inttoptr i64 %152 to i32*
  store atomic volatile i32 %109, i32* %153 monotonic, align 4
  %154 = add i32 %71, 1
  %155 = icmp eq i32 %154, 8
  br i1 %155, label %160, label %156

156:                                              ; preds = %151, %70
  %157 = phi i32 [ %71, %70 ], [ %154, %151 ]
  %158 = add i64 %73, 4
  %159 = icmp eq i64 %158, %1
  br i1 %159, label %163, label %70

160:                                              ; preds = %151
  %161 = add i64 %73, 4
  %162 = icmp eq i64 %161, %1
  br label %163

163:                                              ; preds = %156, %62, %160, %7, %44, %3, %3, %56, %51, %47
  %164 = phi i1 [ true, %56 ], [ true, %51 ], [ true, %47 ], [ true, %3 ], [ true, %3 ], [ true, %44 ], [ true, %7 ], [ %162, %160 ], [ true, %62 ], [ true, %156 ]
  ret i1 %164
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readonly }
attributes #19 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7, !9, !11, !13, !15, !17, !19, !21, !23, !25, !27}
!7 = distinct !{!7, !8, !"_ZN2v88internal45TqRuntimeFieldSliceScopeInfoContextLocalInfosENS0_9ScopeInfoE: argument 0"}
!8 = distinct !{!8, !"_ZN2v88internal45TqRuntimeFieldSliceScopeInfoContextLocalInfosENS0_9ScopeInfoE"}
!9 = distinct !{!9, !10, !"_ZN2v88internal50TqRuntimeFieldSliceScopeInfoSavedClassVariableInfoENS0_9ScopeInfoE: argument 0"}
!10 = distinct !{!10, !"_ZN2v88internal50TqRuntimeFieldSliceScopeInfoSavedClassVariableInfoENS0_9ScopeInfoE"}
!11 = distinct !{!11, !12, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoReceiverInfoENS0_9ScopeInfoE: argument 0"}
!12 = distinct !{!12, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoReceiverInfoENS0_9ScopeInfoE"}
!13 = distinct !{!13, !14, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoFunctionVariableInfoENS0_9ScopeInfoE: argument 0"}
!14 = distinct !{!14, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoFunctionVariableInfoENS0_9ScopeInfoE"}
!15 = distinct !{!15, !16, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoInferredFunctionNameENS0_9ScopeInfoE: argument 0"}
!16 = distinct !{!16, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoInferredFunctionNameENS0_9ScopeInfoE"}
!17 = distinct !{!17, !18, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoPositionInfoENS0_9ScopeInfoE: argument 0"}
!18 = distinct !{!18, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoPositionInfoENS0_9ScopeInfoE"}
!19 = distinct !{!19, !20, !"_ZN2v88internal42TqRuntimeFieldSliceScopeInfoOuterScopeInfoENS0_9ScopeInfoE: argument 0"}
!20 = distinct !{!20, !"_ZN2v88internal42TqRuntimeFieldSliceScopeInfoOuterScopeInfoENS0_9ScopeInfoE"}
!21 = distinct !{!21, !22, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoLocalsBlockListENS0_9ScopeInfoE: argument 0"}
!22 = distinct !{!22, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoLocalsBlockListENS0_9ScopeInfoE"}
!23 = distinct !{!23, !24, !"_ZN2v88internal38TqRuntimeFieldSliceScopeInfoModuleInfoENS0_9ScopeInfoE: argument 0"}
!24 = distinct !{!24, !"_ZN2v88internal38TqRuntimeFieldSliceScopeInfoModuleInfoENS0_9ScopeInfoE"}
!25 = distinct !{!25, !26, !"_ZN2v88internal47TqRuntimeFieldSliceScopeInfoModuleVariableCountENS0_9ScopeInfoE: argument 0"}
!26 = distinct !{!26, !"_ZN2v88internal47TqRuntimeFieldSliceScopeInfoModuleVariableCountENS0_9ScopeInfoE"}
!27 = distinct !{!27, !28, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoModuleVariablesENS0_9ScopeInfoE: argument 0"}
!28 = distinct !{!28, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoModuleVariablesENS0_9ScopeInfoE"}
!29 = !{!17, !19, !21, !23, !25, !27}
!30 = !{!27}
!31 = !{!"branch_weights", i32 1073205, i32 2146410443}
!32 = !{!"branch_weights", i32 2146410443, i32 1073205}
!33 = !{i32 18142515}
!34 = !{i32 0, i32 33}
