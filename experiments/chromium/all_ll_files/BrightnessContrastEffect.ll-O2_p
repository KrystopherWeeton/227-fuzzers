; ModuleID = '../../third_party/skia/modules/skottie/src/effects/BrightnessContrastEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/BrightnessContrastEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%class.SkString = type { %class.sk_sp.53 }
%class.sk_sp.53 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }
%class.sk_sp.49 = type { %"class.sksg::ExternalColorFilter"* }
%"class.sksg::ExternalColorFilter" = type { %"class.sksg::EffectNode", %class.sk_sp.50 }
%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp.32 }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%class.sk_sp.50 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.52, %class.SkString }
%class.sk_sp.52 = type { %class.SkRuntimeEffect* }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.54", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector.60", %"class.std::__1::vector.67", %"class.std::__1::vector.74", %"class.std::__1::unique_ptr.81", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.62" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.69" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.76" }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter" = type <{ %"class.skottie::internal::DiscardableAdapterBase", %class.sk_sp.52, %class.sk_sp.52, float, float, float, [4 x i8] }>
%"class.skottie::internal::DiscardableAdapterBase" = type { %"class.skottie::internal::AnimatablePropertyContainer.base", %class.sk_sp.49 }
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%struct.anon = type { float, float, float }
%class.sk_sp.87 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapter6onSyncEv to i8*)] }, align 8
@_ZN7skottie8internal12_GLOBAL__N_117BRIGHTNESS_EFFECTE = internal constant [135 x i8] c"\0A    uniform half a;\0A\0A    half4 main(half4 color) {\0A        color.rgb = 1 - pow(1 - color.rgb, half3(a));\0A        return color;\0A    }\0A\00", align 16
@_ZN7skottie8internal12_GLOBAL__N_115CONTRAST_EFFECTE = internal constant [222 x i8] c"\0A    uniform half a;\0A    uniform half b;\0A    uniform half c;\0A\0A    half4 main(half4 color) {\0A        // C' = a*C^3 + b*C^2 + c*C\0A        color.rgb = ((a*color.rgb + b)*color.rgb + c)*color.rgb;\0A        return color;\0A    }\0A\00", align 16
@_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEED2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::DiscardableAdapterBase"*)* @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder30attachBrightnessContrastEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias nocapture sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"struct.SkRuntimeEffect::Options", align 1
  %7 = alloca %class.SkString, align 8
  %8 = alloca %"struct.SkRuntimeEffect::Options", align 1
  %9 = alloca %class.sk_sp.49, align 8
  %10 = alloca %class.sk_sp.32, align 8
  %11 = alloca %"struct.SkRuntimeEffect::Result", align 8
  %12 = alloca %class.SkString, align 8
  %13 = alloca %"struct.SkRuntimeEffect::Result", align 8
  %14 = alloca %class.SkString, align 8
  %15 = alloca %class.sk_sp.6, align 8
  %16 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %17 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 88) #12, !noalias !2
  %19 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %20 = bitcast %class.sk_sp.32* %3 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !2
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %19, align 8, !noalias !2
  %22 = bitcast %class.sk_sp.49* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13, !noalias !2
  %23 = bitcast %class.sk_sp.32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13, !noalias !2
  %24 = bitcast %class.SkString* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13, !noalias !2
  %25 = bitcast %class.SkString* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13, !noalias !2
  %26 = bitcast %class.sk_sp.32* %10 to i64*
  store i64 %21, i64* %26, align 8, !noalias !2
  call void @_ZN4sksg19ExternalColorFilter4MakeE5sk_spINS_10RenderNodeEE(%class.sk_sp.49* nonnull sret %9, %class.sk_sp.32* nonnull %10) #13, !noalias !2
  %27 = getelementptr inbounds i8, i8* %18, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 4, !noalias !2
  %29 = bitcast i8* %18 to i32 (...)***
  %30 = getelementptr inbounds i8, i8* %18, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 25, i1 false) #13, !noalias !2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8, !noalias !2
  %31 = getelementptr inbounds i8, i8* %18, i64 48
  %32 = getelementptr inbounds %class.sk_sp.49, %class.sk_sp.49* %9, i64 0, i32 0
  %33 = bitcast %class.sk_sp.49* %9 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !2
  store %"class.sksg::ExternalColorFilter"* null, %"class.sksg::ExternalColorFilter"** %32, align 8, !noalias !2
  %35 = bitcast i8* %31 to i64*
  store i64 %34, i64* %35, align 8, !noalias !2
  %36 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %10, i64 0, i32 0
  %37 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %36, align 8, !noalias !2
  %38 = icmp eq %"class.sksg::RenderNode"* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel, !noalias !7
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %"class.sksg::RenderNode"* %37 to %class.SkRefCntBase*
  %45 = bitcast %"class.sksg::RenderNode"* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8, !noalias !7
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8, !noalias !7
  call void %48(%class.SkRefCntBase* nonnull %44) #13, !noalias !7
  br label %49

49:                                               ; preds = %43, %39, %4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8, !noalias !2
  %50 = getelementptr inbounds i8, i8* %18, i64 56
  %51 = bitcast %"struct.SkRuntimeEffect::Result"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13, !noalias !2
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %12, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @_ZN7skottie8internal12_GLOBAL__N_117BRIGHTNESS_EFFECTE, i64 0, i64 0)) #13, !noalias !2
  %52 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13, !noalias !2
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %7, %class.SkString* nonnull dereferenceable(8) %12) #13, !noalias !8
  %53 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %53) #13, !noalias !8
  store i8 0, i8* %53, align 1, !noalias !8
  %54 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %8, i64 0, i32 1
  store i8 1, i8* %54, align 1, !noalias !8
  call void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* nonnull sret %11, %class.SkString* nonnull %7, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %8) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %53) #13, !noalias !8
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13, !noalias !2
  %55 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %11, i64 0, i32 0, i32 0
  %56 = bitcast %"struct.SkRuntimeEffect::Result"* %11 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !2
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %55, align 8, !noalias !2
  %58 = bitcast i8* %50 to i64*
  store i64 %57, i64* %58, align 8, !noalias !2
  %59 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %11, i64 0, i32 1
  call void @_ZN8SkStringD1Ev(%class.SkString* %59) #13, !noalias !2
  %60 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %55, align 8, !noalias !2
  %61 = icmp eq %class.SkRuntimeEffect* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %49
  %63 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel, !noalias !7
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.SkRuntimeEffect* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.SkRuntimeEffect* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8, !noalias !7
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8, !noalias !7
  call void %71(%class.SkRefCntBase* nonnull %67) #13, !noalias !7
  br label %72

72:                                               ; preds = %66, %62, %49
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13, !noalias !2
  %73 = getelementptr inbounds i8, i8* %18, i64 64
  %74 = bitcast %"struct.SkRuntimeEffect::Result"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #13, !noalias !2
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %14, i8* getelementptr inbounds ([222 x i8], [222 x i8]* @_ZN7skottie8internal12_GLOBAL__N_115CONTRAST_EFFECTE, i64 0, i64 0)) #13, !noalias !2
  %75 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13, !noalias !2
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %5, %class.SkString* nonnull dereferenceable(8) %14) #13, !noalias !11
  %76 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %76) #13, !noalias !11
  store i8 0, i8* %76, align 1, !noalias !11
  %77 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %6, i64 0, i32 1
  store i8 1, i8* %77, align 1, !noalias !11
  call void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* nonnull sret %13, %class.SkString* nonnull %5, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %6) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %76) #13, !noalias !11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13, !noalias !2
  %78 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %13, i64 0, i32 0, i32 0
  %79 = bitcast %"struct.SkRuntimeEffect::Result"* %13 to i64*
  %80 = load i64, i64* %79, align 8, !noalias !2
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %78, align 8, !noalias !2
  %81 = bitcast i8* %73 to i64*
  store i64 %80, i64* %81, align 8, !noalias !2
  %82 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %13, i64 0, i32 1
  call void @_ZN8SkStringD1Ev(%class.SkString* %82) #13, !noalias !2
  %83 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %78, align 8, !noalias !2
  %84 = icmp eq %class.SkRuntimeEffect* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %72
  %86 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %83, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel, !noalias !7
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkRuntimeEffect* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkRuntimeEffect* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8, !noalias !7
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8, !noalias !7
  call void %94(%class.SkRefCntBase* nonnull %90) #13, !noalias !7
  br label %95

95:                                               ; preds = %89, %85, %72
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %14) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #13, !noalias !2
  %96 = getelementptr inbounds i8, i8* %18, i64 72
  %97 = bitcast i8* %96 to float*
  store float 0.000000e+00, float* %97, align 8, !noalias !2
  %98 = getelementptr inbounds i8, i8* %18, i64 76
  %99 = bitcast i8* %98 to float*
  store float 0.000000e+00, float* %99, align 4, !noalias !2
  %100 = getelementptr inbounds i8, i8* %18, i64 80
  %101 = bitcast i8* %100 to float*
  store float 0.000000e+00, float* %101, align 8, !noalias !2
  %102 = bitcast i8* %18 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %103 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #13, !noalias !2
  %104 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %103, i64 0, i32 0, i64 0
  %105 = load i8, i8* %104, align 8, !noalias !2
  %106 = and i8 %105, 7
  %107 = icmp eq i8 %106, 7
  %108 = bitcast %"class.skjson::Value"* %103 to %"class.skjson::ObjectValue"*
  %109 = select i1 %107, %"class.skjson::ObjectValue"* %108, %"class.skjson::ObjectValue"* null
  %110 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %102, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %17, %"class.skjson::ObjectValue"* %109, float* %97) #13, !noalias !2
  %111 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #13, !noalias !2
  %112 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %111, i64 0, i32 0, i64 0
  %113 = load i8, i8* %112, align 8, !noalias !2
  %114 = and i8 %113, 7
  %115 = icmp eq i8 %114, 7
  %116 = bitcast %"class.skjson::Value"* %111 to %"class.skjson::ObjectValue"*
  %117 = select i1 %115, %"class.skjson::ObjectValue"* %116, %"class.skjson::ObjectValue"* null
  %118 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %102, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %17, %"class.skjson::ObjectValue"* %117, float* %99) #13, !noalias !2
  %119 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #13, !noalias !2
  %120 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %119, i64 0, i32 0, i64 0
  %121 = load i8, i8* %120, align 8, !noalias !2
  %122 = and i8 %121, 7
  %123 = icmp eq i8 %122, 7
  %124 = bitcast %"class.skjson::Value"* %119 to %"class.skjson::ObjectValue"*
  %125 = select i1 %123, %"class.skjson::ObjectValue"* %124, %"class.skjson::ObjectValue"* null
  %126 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %102, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %17, %"class.skjson::ObjectValue"* %125, float* %101) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13, !noalias !2
  %127 = ptrtoint i8* %18 to i64
  call void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %102) #13, !noalias !2
  %128 = bitcast i8* %31 to %"class.sksg::ExternalColorFilter"**
  %129 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %128, align 8, !noalias !14
  %130 = icmp eq %"class.sksg::ExternalColorFilter"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %95
  %132 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 1 monotonic
  br label %134

134:                                              ; preds = %95, %131
  %135 = ptrtoint %"class.sksg::ExternalColorFilter"* %129 to i64
  %136 = bitcast i8* %30 to %class.sk_sp.6**
  %137 = load %class.sk_sp.6*, %class.sk_sp.6** %136, align 8, !noalias !14
  %138 = getelementptr inbounds i8, i8* %18, i64 24
  %139 = bitcast i8* %138 to %class.sk_sp.6**
  %140 = load %class.sk_sp.6*, %class.sk_sp.6** %139, align 8, !noalias !14
  %141 = icmp eq %class.sk_sp.6* %137, %140
  br i1 %141, label %174, label %142

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %17, i64 0, i32 11
  %144 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %143, align 8, !noalias !14
  %145 = bitcast %class.sk_sp.6* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #13, !noalias !14
  %146 = bitcast %class.sk_sp.6* %15 to i64*
  store i64 %127, i64* %146, align 8, !noalias !14
  %147 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %144, i64 0, i32 0, i32 1
  %148 = load %class.sk_sp.6*, %class.sk_sp.6** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %144, i64 0, i32 0, i32 2, i32 0, i32 0
  %150 = load %class.sk_sp.6*, %class.sk_sp.6** %149, align 8
  %151 = icmp ult %class.sk_sp.6* %148, %150
  br i1 %151, label %152, label %158

152:                                              ; preds = %142
  %153 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %15, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %153, align 8, !noalias !14
  %154 = bitcast %class.sk_sp.6* %148 to i64*
  store i64 %127, i64* %154, align 8
  %155 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %148, i64 1
  %156 = ptrtoint %class.sk_sp.6* %155 to i64
  %157 = bitcast %class.sk_sp.6** %147 to i64*
  store i64 %156, i64* %157, align 8
  br label %159

158:                                              ; preds = %142
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %144, %class.sk_sp.6* nonnull dereferenceable(8) %15) #13
  br label %159

159:                                              ; preds = %158, %152
  %160 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %15, i64 0, i32 0
  %161 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %160, align 8, !noalias !14
  %162 = icmp eq %"class.skottie::internal::Animator"* %161, null
  br i1 %162, label %173, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %161, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw add i32* %164, i32 -1 acq_rel
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %173

167:                                              ; preds = %163
  %168 = bitcast %"class.skottie::internal::Animator"* %161 to %class.SkRefCntBase*
  %169 = bitcast %"class.skottie::internal::Animator"* %161 to void (%class.SkRefCntBase*)***
  %170 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %169, align 8
  %171 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %170, i64 2
  %172 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %171, align 8
  call void %172(%class.SkRefCntBase* nonnull %168) #13
  br label %173

173:                                              ; preds = %167, %163, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #13, !noalias !14
  br label %189

174:                                              ; preds = %134
  %175 = bitcast i8* %18 to %"class.skottie::internal::Animator"*
  %176 = bitcast i8* %18 to i1 (%"class.skottie::internal::Animator"*, float)***
  %177 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %176, align 8, !noalias !14
  %178 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %177, i64 3
  %179 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %178, align 8
  %180 = call zeroext i1 %179(%"class.skottie::internal::Animator"* nonnull %175, float 0.000000e+00) #13
  %181 = atomicrmw add i32* %28, i32 -1 acq_rel, !noalias !14
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %183, label %189

183:                                              ; preds = %174
  %184 = bitcast i8* %18 to %class.SkRefCntBase*
  %185 = bitcast i8* %18 to void (%class.SkRefCntBase*)***
  %186 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %185, align 8, !noalias !14
  %187 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %186, i64 2
  %188 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %187, align 8
  call void %188(%class.SkRefCntBase* nonnull %184) #13
  br label %189

189:                                              ; preds = %183, %174, %173
  %190 = bitcast %class.sk_sp.32* %0 to i64*
  store i64 %135, i64* %190, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN7skottie8internal27AnimatablePropertyContainer13shrink_to_fitEv(%"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #3

declare void @_ZN4sksg19ExternalColorFilter4MakeE5sk_spINS_10RenderNodeEE(%class.sk_sp.49* sret, %class.sk_sp.32*) local_unnamed_addr #3

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = icmp eq %class.SkRuntimeEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRuntimeEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRuntimeEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %17, align 8
  %19 = icmp eq %class.SkRuntimeEffect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkRuntimeEffect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkRuntimeEffect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #13
  br label %30

30:                                               ; preds = %16, %20, %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %31, align 8
  %33 = icmp eq %"class.sksg::ExternalColorFilter"* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %"class.sksg::ExternalColorFilter"* %32 to %class.SkRefCntBase*
  %40 = bitcast %"class.sksg::ExternalColorFilter"* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #13
  br label %44

44:                                               ; preds = %38, %34, %30
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %45 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %45, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = icmp eq %class.sk_sp.6* %47, null
  br i1 %48, label %77, label %49

49:                                               ; preds = %44
  %50 = bitcast %class.sk_sp.6* %47 to i8*
  %51 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %52 = load %class.sk_sp.6*, %class.sk_sp.6** %51, align 8
  %53 = icmp eq %class.sk_sp.6* %52, %47
  br i1 %53, label %75, label %54

54:                                               ; preds = %49, %70
  %55 = phi %class.sk_sp.6* [ %56, %70 ], [ %52, %49 ]
  %56 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %55, i64 -1
  %57 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %56, i64 0, i32 0
  %58 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %57, align 8
  %59 = icmp eq %"class.skottie::internal::Animator"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %"class.skottie::internal::Animator"* %58 to %class.SkRefCntBase*
  %66 = bitcast %"class.skottie::internal::Animator"* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  tail call void %69(%class.SkRefCntBase* nonnull %65) #13
  br label %70

70:                                               ; preds = %64, %60, %54
  %71 = icmp eq %class.sk_sp.6* %56, %47
  br i1 %71, label %72, label %54

72:                                               ; preds = %70
  %73 = bitcast %"class.std::__1::vector"* %45 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %49
  %76 = phi i8* [ %74, %72 ], [ %50, %49 ]
  store %class.sk_sp.6* %47, %class.sk_sp.6** %51, align 8
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %44, %75
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = icmp eq %class.SkRuntimeEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRuntimeEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRuntimeEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %17, align 8
  %19 = icmp eq %class.SkRuntimeEffect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkRuntimeEffect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkRuntimeEffect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #13
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %31, align 8
  %33 = icmp eq %"class.sksg::ExternalColorFilter"* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %"class.sksg::ExternalColorFilter"* %32 to %class.SkRefCntBase*
  %40 = bitcast %"class.sksg::ExternalColorFilter"* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #13
  br label %44

44:                                               ; preds = %38, %34, %30
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %45 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %45, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = icmp eq %class.sk_sp.6* %47, null
  br i1 %48, label %77, label %49

49:                                               ; preds = %44
  %50 = bitcast %class.sk_sp.6* %47 to i8*
  %51 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %52 = load %class.sk_sp.6*, %class.sk_sp.6** %51, align 8
  %53 = icmp eq %class.sk_sp.6* %52, %47
  br i1 %53, label %75, label %54

54:                                               ; preds = %49, %70
  %55 = phi %class.sk_sp.6* [ %56, %70 ], [ %52, %49 ]
  %56 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %55, i64 -1
  %57 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %56, i64 0, i32 0
  %58 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %57, align 8
  %59 = icmp eq %"class.skottie::internal::Animator"* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %"class.skottie::internal::Animator"* %58 to %class.SkRefCntBase*
  %66 = bitcast %"class.skottie::internal::Animator"* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  tail call void %69(%class.SkRefCntBase* nonnull %65) #13
  br label %70

70:                                               ; preds = %64, %60, %54
  %71 = icmp eq %class.sk_sp.6* %56, %47
  br i1 %71, label %72, label %54

72:                                               ; preds = %70
  %73 = bitcast %"class.std::__1::vector"* %45 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %49
  %76 = phi i8* [ %74, %72 ], [ %50, %49 ]
  store %class.sk_sp.6* %47, %class.sk_sp.6** %51, align 8
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %44, %75
  %78 = bitcast %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %78) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %struct.anon, align 4
  %3 = alloca float, align 4
  %4 = alloca %class.sk_sp.50, align 8
  %5 = alloca %class.sk_sp.50, align 8
  %6 = alloca %class.sk_sp.87, align 8
  %7 = alloca %class.sk_sp.50, align 8
  %8 = alloca %class.sk_sp.87, align 8
  %9 = alloca [20 x float], align 16
  %10 = alloca %class.sk_sp.50, align 8
  %11 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %11, align 8
  %13 = bitcast %class.sk_sp.50* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 5
  %15 = load float, float* %14, align 8
  %16 = fadd float %15, 5.000000e-01
  %17 = tail call float @llvm.floor.f32(float %16)
  %18 = fcmp olt float %17, 0x41DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0x41DFFFFFE0000000
  %20 = fcmp ogt float %19, 0xC1DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0xC1DFFFFFE0000000
  %22 = fptosi float %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %74, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 3
  %26 = load float, float* %25, align 4, !noalias !15
  %27 = fcmp ogt float %26, 1.000000e+02
  %28 = select i1 %27, float 1.000000e+02, float %26
  %29 = fcmp ogt float %28, -1.000000e+02
  %30 = select i1 %29, float %28, float -1.000000e+02
  %31 = fdiv float %30, 2.550000e+02
  %32 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 4
  %33 = load float, float* %32, align 4, !noalias !15
  %34 = fcmp ogt float %33, 1.000000e+02
  %35 = select i1 %34, float 1.000000e+02, float %33
  %36 = fcmp ogt float %35, -1.000000e+02
  %37 = select i1 %36, float %35, float -1.000000e+02
  %38 = fdiv float %37, 1.000000e+02
  %39 = fcmp ogt float %38, 0.000000e+00
  br i1 %39, label %40, label %45

40:                                               ; preds = %24
  %41 = fsub float 1.000000e+00, %38
  %42 = fcmp olt float %41, 0x3F30000000000000
  %43 = select i1 %42, float 0x3F30000000000000, float %41
  %44 = fdiv float 1.000000e+00, %43
  br label %47

45:                                               ; preds = %24
  %46 = fadd float %38, 1.000000e+00
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi float [ %44, %40 ], [ %46, %45 ]
  %49 = fsub float 1.000000e+00, %48
  %50 = fmul float %49, 5.000000e-01
  %51 = fcmp olt float %48, 1.000000e+00
  %52 = select i1 %51, float 1.000000e+00, float %48
  %53 = fmul float %31, %52
  %54 = fadd float %50, %53
  %55 = bitcast [20 x float]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %55) #13, !noalias !15
  %56 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 0
  store float %48, float* %56, align 16, !noalias !15
  %57 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 1
  store float 0.000000e+00, float* %57, align 4, !noalias !15
  %58 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 2
  store float 0.000000e+00, float* %58, align 8, !noalias !15
  %59 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 3
  store float 0.000000e+00, float* %59, align 4, !noalias !15
  %60 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 4
  store float %54, float* %60, align 16, !noalias !15
  %61 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 5
  store float 0.000000e+00, float* %61, align 4, !noalias !15
  %62 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 6
  store float %48, float* %62, align 8, !noalias !15
  %63 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 7
  store float 0.000000e+00, float* %63, align 4, !noalias !15
  %64 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 8
  store float 0.000000e+00, float* %64, align 16, !noalias !15
  %65 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 9
  store float %54, float* %65, align 4, !noalias !15
  %66 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 10
  store float 0.000000e+00, float* %66, align 8, !noalias !15
  %67 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 11
  store float 0.000000e+00, float* %67, align 4, !noalias !15
  %68 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 12
  store float %48, float* %68, align 16, !noalias !15
  %69 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 13
  store float 0.000000e+00, float* %69, align 4, !noalias !15
  %70 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 14
  store float %54, float* %70, align 8, !noalias !15
  %71 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 15
  store float 0.000000e+00, float* %71, align 4, !noalias !15
  %72 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 16
  %73 = bitcast float* %72 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %73, align 16, !noalias !15
  call void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.50* nonnull sret %10, float* nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %55) #13, !noalias !15
  br label %233

74:                                               ; preds = %1
  %75 = bitcast %class.sk_sp.87* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75)
  %76 = bitcast %class.sk_sp.87* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76)
  %77 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 3
  %78 = load float, float* %77, align 4, !noalias !18
  %79 = fcmp ogt float %78, 1.500000e+02
  %80 = select i1 %79, float 1.500000e+02, float %78
  %81 = fcmp ogt float %80, -1.500000e+02
  %82 = select i1 %81, float %80, float -1.500000e+02
  %83 = fdiv float %82, 1.500000e+02
  %84 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 4
  %85 = load float, float* %84, align 4, !noalias !18
  %86 = fcmp ogt float %85, 1.000000e+02
  %87 = select i1 %86, float 1.000000e+02, float %85
  %88 = fcmp ogt float %87, -5.000000e+01
  %89 = select i1 %88, float %87, float -5.000000e+01
  %90 = fdiv float %89, 1.000000e+02
  %91 = bitcast %class.sk_sp.50* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #13, !noalias !18
  %92 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %5, i64 0, i32 0
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %92, align 8, !noalias !18
  %93 = tail call float @llvm.fabs.f32(float %83) #13
  %94 = fcmp ugt float %93, 0x3F30000000000000
  br i1 %94, label %96, label %95

95:                                               ; preds = %74
  store %class.SkColorFilter* null, %class.SkColorFilter** %92, align 8, !noalias !18
  br label %111

96:                                               ; preds = %74
  %97 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 1, i32 0
  %98 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %97, align 8, !noalias !18
  %99 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #13, !noalias !21
  %100 = fmul float %83, 0x3FFCCCCCC0000000
  %101 = tail call float @exp2f(float %100) #14, !noalias !24
  store float %101, float* %3, align 4, !noalias !21
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.87* nonnull sret %6, i8* nonnull %99, i64 4) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #13, !noalias !21
  call void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp.50* nonnull sret %5, %class.SkRuntimeEffect* %98, %class.sk_sp.87* nonnull %6) #13
  %102 = getelementptr inbounds %class.sk_sp.87, %class.sk_sp.87* %6, i64 0, i32 0
  %103 = load %class.SkData*, %class.SkData** %102, align 8, !noalias !18
  %104 = icmp eq %class.SkData* %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %96
  %106 = getelementptr inbounds %class.SkData, %class.SkData* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 -1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %103) #13
  %110 = bitcast %class.SkData* %103 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %110) #13
  br label %111

111:                                              ; preds = %109, %105, %96, %95
  %112 = bitcast %class.sk_sp.50* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13, !noalias !18
  %113 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %7, i64 0, i32 0
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %113, align 8, !noalias !18
  %114 = load float, float* %84, align 4, !noalias !18
  %115 = call float @llvm.fabs.f32(float %114) #13
  %116 = fcmp ugt float %115, 0x3F30000000000000
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  store %class.SkColorFilter* null, %class.SkColorFilter** %113, align 8, !noalias !18
  %118 = bitcast %class.sk_sp.50* %5 to i64*
  %119 = load i64, i64* %118, align 8, !noalias !18
  store %class.SkColorFilter* null, %class.SkColorFilter** %92, align 8, !noalias !18
  %120 = bitcast %class.sk_sp.50* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #13, !noalias !18
  br label %168

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter", %"class.skottie::internal::(anonymous namespace)::BrightnessContrastAdapter"* %0, i64 0, i32 2, i32 0
  %123 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %122, align 8, !noalias !18
  %124 = bitcast %struct.anon* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %124) #13, !noalias !25
  %125 = getelementptr inbounds %struct.anon, %struct.anon* %2, i64 0, i32 0
  %126 = getelementptr inbounds %struct.anon, %struct.anon* %2, i64 0, i32 1
  %127 = getelementptr inbounds %struct.anon, %struct.anon* %2, i64 0, i32 2
  %128 = fmul float %90, 0x400921FB60000000
  store float %128, float* %126, align 4, !noalias !25
  %129 = fmul float %128, -2.000000e+00
  %130 = fdiv float %129, 3.000000e+00
  store float %130, float* %125, align 4, !noalias !25
  %131 = fdiv float %128, 3.000000e+00
  %132 = fsub float 1.000000e+00, %131
  store float %132, float* %127, align 4, !noalias !25
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.87* nonnull sret %8, i8* nonnull %124, i64 12) #13, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %124) #13, !noalias !25
  call void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp.50* nonnull sret %7, %class.SkRuntimeEffect* %123, %class.sk_sp.87* nonnull %8) #13, !noalias !18
  %133 = getelementptr inbounds %class.sk_sp.87, %class.sk_sp.87* %8, i64 0, i32 0
  %134 = load %class.SkData*, %class.SkData** %133, align 8, !noalias !18
  %135 = icmp eq %class.SkData* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %121
  %137 = getelementptr inbounds %class.SkData, %class.SkData* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %134) #13
  %141 = bitcast %class.SkData* %134 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %141) #13
  br label %142

142:                                              ; preds = %140, %136, %121
  %143 = load %class.SkColorFilter*, %class.SkColorFilter** %113, align 8, !noalias !18
  store %class.SkColorFilter* null, %class.SkColorFilter** %113, align 8, !noalias !18
  %144 = bitcast %class.sk_sp.50* %5 to i64*
  %145 = load i64, i64* %144, align 8, !noalias !18
  store %class.SkColorFilter* null, %class.SkColorFilter** %92, align 8, !noalias !18
  %146 = bitcast %class.sk_sp.50* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #13, !noalias !18
  %147 = icmp eq %class.SkColorFilter* %143, null
  br i1 %147, label %168, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %4, i64 0, i32 0
  %150 = inttoptr i64 %145 to %class.SkColorFilter*
  %151 = icmp eq i64 %145, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %150, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = atomicrmw add i32* %153, i32 1 monotonic
  br label %155

155:                                              ; preds = %152, %148
  store %class.SkColorFilter* %150, %class.SkColorFilter** %149, align 8, !noalias !28
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.50* nonnull sret %10, %class.SkColorFilter* nonnull %143, %class.sk_sp.50* nonnull %4) #13
  %156 = load %class.SkColorFilter*, %class.SkColorFilter** %149, align 8, !noalias !28
  %157 = icmp eq %class.SkColorFilter* %156, null
  br i1 %157, label %178, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %156, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 -1 acq_rel
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %178

162:                                              ; preds = %158
  %163 = bitcast %class.SkColorFilter* %156 to %class.SkRefCntBase*
  %164 = bitcast %class.SkColorFilter* %156 to void (%class.SkRefCntBase*)***
  %165 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %164, align 8
  %166 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, i64 2
  %167 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, align 8
  call void %167(%class.SkRefCntBase* nonnull %163) #13
  br label %178

168:                                              ; preds = %142, %117
  %169 = phi i8* [ %120, %117 ], [ %146, %142 ]
  %170 = phi i64 [ %119, %117 ], [ %145, %142 ]
  %171 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %10, i64 0, i32 0
  %172 = inttoptr i64 %170 to %class.SkColorFilter*
  %173 = icmp eq i64 %170, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %172, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw add i32* %175, i32 1 monotonic
  br label %177

177:                                              ; preds = %174, %168
  store %class.SkColorFilter* %172, %class.SkColorFilter** %171, align 8, !alias.scope !28
  br label %178

178:                                              ; preds = %177, %162, %158, %155
  %179 = phi i1 [ false, %155 ], [ false, %158 ], [ false, %162 ], [ true, %177 ]
  %180 = phi i8* [ %146, %155 ], [ %146, %158 ], [ %146, %162 ], [ %169, %177 ]
  %181 = phi i64 [ %145, %155 ], [ %145, %158 ], [ %145, %162 ], [ %170, %177 ]
  %182 = phi %class.SkColorFilter* [ %143, %155 ], [ %143, %158 ], [ %143, %162 ], [ null, %177 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #13, !noalias !18
  %183 = icmp eq i64 %181, 0
  br i1 %183, label %195, label %184

184:                                              ; preds = %178
  %185 = inttoptr i64 %181 to %class.SkColorFilter*
  %186 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %185, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = atomicrmw add i32* %186, i32 -1 acq_rel
  %188 = icmp eq i32 %187, 1
  br i1 %188, label %189, label %195

189:                                              ; preds = %184
  %190 = inttoptr i64 %181 to %class.SkRefCntBase*
  %191 = inttoptr i64 %181 to void (%class.SkRefCntBase*)***
  %192 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %191, align 8
  %193 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %192, i64 2
  %194 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %193, align 8
  call void %194(%class.SkRefCntBase* nonnull %190) #13
  br label %195

195:                                              ; preds = %189, %184, %178
  br i1 %179, label %206, label %196

196:                                              ; preds = %195
  %197 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %182, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = atomicrmw add i32* %197, i32 -1 acq_rel
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %200, label %206

200:                                              ; preds = %196
  %201 = bitcast %class.SkColorFilter* %182 to %class.SkRefCntBase*
  %202 = bitcast %class.SkColorFilter* %182 to void (%class.SkRefCntBase*)***
  %203 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %202, align 8
  %204 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %203, i64 2
  %205 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %204, align 8
  call void %205(%class.SkRefCntBase* nonnull %201) #13
  br label %206

206:                                              ; preds = %200, %196, %195
  %207 = load %class.SkColorFilter*, %class.SkColorFilter** %113, align 8, !noalias !18
  %208 = icmp eq %class.SkColorFilter* %207, null
  br i1 %208, label %219, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %207, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = atomicrmw add i32* %210, i32 -1 acq_rel
  %212 = icmp eq i32 %211, 1
  br i1 %212, label %213, label %219

213:                                              ; preds = %209
  %214 = bitcast %class.SkColorFilter* %207 to %class.SkRefCntBase*
  %215 = bitcast %class.SkColorFilter* %207 to void (%class.SkRefCntBase*)***
  %216 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %215, align 8
  %217 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %216, i64 2
  %218 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %217, align 8
  call void %218(%class.SkRefCntBase* nonnull %214) #13
  br label %219

219:                                              ; preds = %213, %209, %206
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13, !noalias !18
  %220 = load %class.SkColorFilter*, %class.SkColorFilter** %92, align 8, !noalias !18
  %221 = icmp eq %class.SkColorFilter* %220, null
  br i1 %221, label %232, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %220, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = atomicrmw add i32* %223, i32 -1 acq_rel
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %226, label %232

226:                                              ; preds = %222
  %227 = bitcast %class.SkColorFilter* %220 to %class.SkRefCntBase*
  %228 = bitcast %class.SkColorFilter* %220 to void (%class.SkRefCntBase*)***
  %229 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %228, align 8
  %230 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %229, i64 2
  %231 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %230, align 8
  call void %231(%class.SkRefCntBase* nonnull %227) #13
  br label %232

232:                                              ; preds = %219, %222, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #13, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76)
  br label %233

233:                                              ; preds = %232, %47
  %234 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %12, i64 0, i32 1
  %235 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %234, i64 0, i32 0
  %236 = load %class.SkColorFilter*, %class.SkColorFilter** %235, align 8
  %237 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %10, i64 0, i32 0
  %238 = load %class.SkColorFilter*, %class.SkColorFilter** %237, align 8
  %239 = icmp eq %class.SkColorFilter* %236, %238
  br i1 %239, label %257, label %240

240:                                              ; preds = %233
  %241 = ptrtoint %class.SkColorFilter* %238 to i64
  store %class.SkColorFilter* null, %class.SkColorFilter** %237, align 8
  %242 = bitcast %class.sk_sp.50* %234 to i64*
  store i64 %241, i64* %242, align 8
  %243 = icmp eq %class.SkColorFilter* %236, null
  br i1 %243, label %254, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %236, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = atomicrmw add i32* %245, i32 -1 acq_rel
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %248, label %254

248:                                              ; preds = %244
  %249 = bitcast %class.SkColorFilter* %236 to %class.SkRefCntBase*
  %250 = bitcast %class.SkColorFilter* %236 to void (%class.SkRefCntBase*)***
  %251 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %250, align 8
  %252 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %251, i64 2
  %253 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %252, align 8
  call void %253(%class.SkRefCntBase* nonnull %249) #13
  br label %254

254:                                              ; preds = %248, %244, %240
  %255 = bitcast %"class.sksg::ExternalColorFilter"* %12 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %255, i1 zeroext true) #13
  %256 = load %class.SkColorFilter*, %class.SkColorFilter** %237, align 8
  br label %257

257:                                              ; preds = %233, %254
  %258 = phi %class.SkColorFilter* [ %236, %233 ], [ %256, %254 ]
  %259 = icmp eq %class.SkColorFilter* %258, null
  br i1 %259, label %270, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %258, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = atomicrmw add i32* %261, i32 -1 acq_rel
  %263 = icmp eq i32 %262, 1
  br i1 %263, label %264, label %270

264:                                              ; preds = %260
  %265 = bitcast %class.SkColorFilter* %258 to %class.SkRefCntBase*
  %266 = bitcast %class.SkColorFilter* %258 to void (%class.SkRefCntBase*)***
  %267 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %266, align 8
  %268 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %267, i64 2
  %269 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %268, align 8
  call void %269(%class.SkRefCntBase* nonnull %265) #13
  br label %270

270:                                              ; preds = %257, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEED2Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %3, align 8
  %5 = icmp eq %"class.sksg::ExternalColorFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::ExternalColorFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::ExternalColorFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::DiscardableAdapterBase", %"class.skottie::internal::DiscardableAdapterBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #13
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal void @_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEED0Ev(%"class.skottie::internal::DiscardableAdapterBase"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #3

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #3

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.50* sret, float*) local_unnamed_addr #3

declare void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp.50* sret, %class.SkRuntimeEffect*, %class.sk_sp.87*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.87* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

declare void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.50* sret, %class.SkColorFilter*, %class.sk_sp.50*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !31

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #13
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare float @exp2f(float) local_unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEE4MakeIJRKN6skjson10ArrayValueERKNS0_16AnimationBuilderE5sk_spINS4_10RenderNodeEEEEESF_IS3_EDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7skottie8internal22DiscardableAdapterBaseINS0_12_GLOBAL__N_125BrightnessContrastAdapterEN4sksg19ExternalColorFilterEE4MakeIJRKN6skjson10ArrayValueERKNS0_16AnimationBuilderE5sk_spINS4_10RenderNodeEEEEESF_IS3_EDpOT_"}
!5 = distinct !{!5, !6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_125BrightnessContrastAdapterEJRKN6skjson10ArrayValueERKS1_5sk_spIN4sksg10RenderNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_: argument 0"}
!6 = distinct !{!6, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_125BrightnessContrastAdapterEJRKN6skjson10ArrayValueERKS1_5sk_spIN4sksg10RenderNodeEEEEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_"}
!7 = !{!3}
!8 = !{!9, !3, !5}
!9 = distinct !{!9, !10, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString: argument 0"}
!10 = distinct !{!10, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString"}
!11 = !{!12, !3, !5}
!12 = distinct !{!12, !13, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString: argument 0"}
!13 = distinct !{!13, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString"}
!14 = !{!5}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapter12makeLegacyCFEv: argument 0"}
!17 = distinct !{!17, !"_ZNK7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapter12makeLegacyCFEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapter6makeCFEv: argument 0"}
!20 = distinct !{!20, !"_ZNK7skottie8internal12_GLOBAL__N_125BrightnessContrastAdapter6makeCFEv"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZN7skottie8internal12_GLOBAL__N_122make_brightness_coeffsEf: argument 0"}
!23 = distinct !{!23, !"_ZN7skottie8internal12_GLOBAL__N_122make_brightness_coeffsEf"}
!24 = !{!22}
!25 = !{!26, !19}
!26 = distinct !{!26, !27, !"_ZN7skottie8internal12_GLOBAL__N_120make_contrast_coeffsEf: argument 0"}
!27 = distinct !{!27, !"_ZN7skottie8internal12_GLOBAL__N_120make_contrast_coeffsEf"}
!28 = !{!29, !19}
!29 = distinct !{!29, !30, !"_ZN14SkColorFilters7ComposeE5sk_spI13SkColorFilterES2_: argument 0"}
!30 = distinct !{!30, !"_ZN14SkColorFilters7ComposeE5sk_spI13SkColorFilterES2_"}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.disable"}
