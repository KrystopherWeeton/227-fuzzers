; ModuleID = '../../base/allocator/partition_allocator/partition_alloc_hooks.cc'
source_filename = "../../base/allocator/partition_allocator/partition_alloc_hooks.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [40 x i8] }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }

@_ZZN4base12GetHooksLockEvE4lock = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base12GetHooksLockEvE4lock = internal global i64 0, align 8
@_ZN4base19PartitionAllocHooks14hooks_enabled_E = hidden local_unnamed_addr global { { i8 } } zeroinitializer, align 1
@_ZN4base19PartitionAllocHooks25allocation_observer_hook_E = hidden local_unnamed_addr global { { void (i8*, i64, i8*)* } } zeroinitializer, align 8
@_ZN4base19PartitionAllocHooks19free_observer_hook_E = hidden local_unnamed_addr global { { void (i8*)* } } zeroinitializer, align 8
@_ZN4base19PartitionAllocHooks25allocation_override_hook_E = hidden local_unnamed_addr global { { i1 (i8**, i32, i64, i8*)* } } zeroinitializer, align 8
@_ZN4base19PartitionAllocHooks19free_override_hook_E = hidden local_unnamed_addr global { { i1 (i8*)* } } zeroinitializer, align 8
@_ZN4base19PartitionAllocHooks22realloc_override_hook_E = hidden local_unnamed_addr global { { i1 (i64*, i8*)* } } zeroinitializer, align 8
@.str = private unnamed_addr constant [168 x i8] c"../../base/allocator/partition_allocator/partition_alloc_hooks.cc(38) Check failed: (!allocation_observer_hook_ && !free_observer_hook_) || (!alloc_hook && !free_hook)\00", align 1
@.str.1 = private unnamed_addr constant [212 x i8] c"../../base/allocator/partition_allocator/partition_alloc_hooks.cc(53) Check failed: (!allocation_override_hook_ && !free_override_hook_ && !realloc_override_hook_) || (!alloc_hook && !free_hook && !realloc_hook)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.base::Lock"* @_ZN4base12GetHooksLockEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12GetHooksLockEvE4lock to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12GetHooksLockEvE4lock) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %"class.base::internal::LockImpl"*)) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12GetHooksLockEvE4lock) #4
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.base::Lock"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %"class.base::Lock"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PartitionAllocHooks16SetObserverHooksEPFvPvmPKcEPFvS1_E(void (i8*, i64, i8*)*, void (i8*)*) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12GetHooksLockEvE4lock to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12GetHooksLockEvE4lock) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %"class.base::internal::LockImpl"*)) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12GetHooksLockEvE4lock) #4
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %union.pthread_mutex_t*)) #4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %9
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %"class.base::internal::LockImpl"*)) #4
  br label %13

13:                                               ; preds = %9, %12
  %14 = load atomic i64, i64* bitcast ({ { void (i8*, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_observer_hook_E to i64*) seq_cst, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = load atomic i64, i64* bitcast ({ { void (i8*)* } }* @_ZN4base19PartitionAllocHooks19free_observer_hook_E to i64*) seq_cst, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %16, %13
  %20 = icmp ne void (i8*, i64, i8*)* %0, null
  %21 = icmp ne void (i8*)* %1, null
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %24, !prof !4

23:                                               ; preds = %19
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str, i64 0, i64 0)) #4
  br label %24

24:                                               ; preds = %16, %19, %23
  %25 = ptrtoint void (i8*, i64, i8*)* %0 to i64
  store atomic i64 %25, i64* bitcast ({ { void (i8*, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_observer_hook_E to i64*) seq_cst, align 8
  %26 = ptrtoint void (i8*)* %1 to i64
  store atomic i64 %26, i64* bitcast ({ { void (i8*)* } }* @_ZN4base19PartitionAllocHooks19free_observer_hook_E to i64*) seq_cst, align 8
  %27 = load atomic i64, i64* bitcast ({ { void (i8*, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_observer_hook_E to i64*) seq_cst, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = load atomic i64, i64* bitcast ({ { i1 (i8**, i32, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_override_hook_E to i64*) seq_cst, align 8
  %31 = icmp ne i64 %30, 0
  %32 = zext i1 %31 to i8
  br label %33

33:                                               ; preds = %24, %29
  %34 = phi i8 [ 1, %24 ], [ %32, %29 ]
  store atomic i8 %34, i8* getelementptr inbounds ({ { i8 } }, { { i8 } }* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0) seq_cst, align 1
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %union.pthread_mutex_t*)) #4
  ret void
}

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PartitionAllocHooks16SetOverrideHooksEPFbPPvimPKcEPFbS1_EPFbPmS1_E(i1 (i8**, i32, i64, i8*)*, i1 (i8*)*, i1 (i64*, i8*)*) local_unnamed_addr #0 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12GetHooksLockEvE4lock to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12GetHooksLockEvE4lock) #4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %"class.base::internal::LockImpl"*)) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12GetHooksLockEvE4lock) #4
  br label %10

10:                                               ; preds = %3, %6, %9
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %union.pthread_mutex_t*)) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %10
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %"class.base::internal::LockImpl"*)) #4
  br label %14

14:                                               ; preds = %10, %13
  %15 = load atomic i64, i64* bitcast ({ { i1 (i8**, i32, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_override_hook_E to i64*) seq_cst, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %14
  %18 = load atomic i64, i64* bitcast ({ { i1 (i8*)* } }* @_ZN4base19PartitionAllocHooks19free_override_hook_E to i64*) seq_cst, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = load atomic i64, i64* bitcast ({ { i1 (i64*, i8*)* } }* @_ZN4base19PartitionAllocHooks22realloc_override_hook_E to i64*) seq_cst, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %20, %17, %14
  %24 = icmp ne i1 (i8**, i32, i64, i8*)* %0, null
  %25 = icmp ne i1 (i8*)* %1, null
  %26 = or i1 %24, %25
  %27 = icmp ne i1 (i64*, i8*)* %2, null
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %30, !prof !4

29:                                               ; preds = %23
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.1, i64 0, i64 0)) #4
  br label %30

30:                                               ; preds = %20, %23, %29
  %31 = ptrtoint i1 (i8**, i32, i64, i8*)* %0 to i64
  store atomic i64 %31, i64* bitcast ({ { i1 (i8**, i32, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_override_hook_E to i64*) seq_cst, align 8
  %32 = ptrtoint i1 (i8*)* %1 to i64
  store atomic i64 %32, i64* bitcast ({ { i1 (i8*)* } }* @_ZN4base19PartitionAllocHooks19free_override_hook_E to i64*) seq_cst, align 8
  %33 = ptrtoint i1 (i64*, i8*)* %2 to i64
  store atomic i64 %33, i64* bitcast ({ { i1 (i64*, i8*)* } }* @_ZN4base19PartitionAllocHooks22realloc_override_hook_E to i64*) seq_cst, align 8
  %34 = load atomic i64, i64* bitcast ({ { void (i8*, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_observer_hook_E to i64*) seq_cst, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = load atomic i64, i64* bitcast ({ { i1 (i8**, i32, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_override_hook_E to i64*) seq_cst, align 8
  %38 = icmp ne i64 %37, 0
  %39 = zext i1 %38 to i8
  br label %40

40:                                               ; preds = %30, %36
  %41 = phi i8 [ 1, %30 ], [ %39, %36 ]
  store atomic i8 %41, i8* getelementptr inbounds ({ { i8 } }, { { i8 } }* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0) seq_cst, align 1
  %42 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN4base12GetHooksLockEvE4lock to %union.pthread_mutex_t*)) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8*, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = load atomic i64, i64* bitcast ({ { void (i8*, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_observer_hook_E to i64*) monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %4 to void (i8*, i64, i8*)*
  tail call void %7(i8* %0, i64 %1, i8* %2) #4
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8**, i32, i64, i8*) local_unnamed_addr #0 align 2 {
  %5 = load atomic i64, i64* bitcast ({ { i1 (i8**, i32, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_override_hook_E to i64*) monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = inttoptr i64 %5 to i1 (i8**, i32, i64, i8*)*
  %9 = tail call zeroext i1 %8(i8** %0, i32 %1, i64 %2, i8* %3) #4
  br label %10

10:                                               ; preds = %4, %7
  %11 = phi i1 [ %9, %7 ], [ false, %4 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* bitcast ({ { void (i8*)* } }* @_ZN4base19PartitionAllocHooks19free_observer_hook_E to i64*) monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to void (i8*)*
  tail call void %5(i8* %0) #4
  br label %6

6:                                                ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* bitcast ({ { i1 (i8*)* } }* @_ZN4base19PartitionAllocHooks19free_override_hook_E to i64*) monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to i1 (i8*)*
  %6 = tail call zeroext i1 %5(i8* %0) #4
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i1 [ %6, %4 ], [ false, %1 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PartitionAllocHooks28ReallocObserverHookIfEnabledEPvS1_mPKc(i8*, i8*, i64, i8*) local_unnamed_addr #0 align 2 {
  %5 = load atomic i64, i64* bitcast ({ { void (i8*, i64, i8*)* } }* @_ZN4base19PartitionAllocHooks25allocation_observer_hook_E to i64*) monotonic, align 8
  %6 = load atomic i64, i64* bitcast ({ { void (i8*)* } }* @_ZN4base19PartitionAllocHooks19free_observer_hook_E to i64*) monotonic, align 8
  %7 = icmp ne i64 %5, 0
  %8 = icmp ne i64 %6, 0
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = inttoptr i64 %6 to void (i8*)*
  %12 = inttoptr i64 %5 to void (i8*, i64, i8*)*
  tail call void %11(i8* %0) #4
  tail call void %12(i8* %1, i64 %2, i8* %3) #4
  br label %13

13:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19PartitionAllocHooks28ReallocOverrideHookIfEnabledEPmPv(i64*, i8*) local_unnamed_addr #0 align 2 {
  %3 = load atomic i64, i64* bitcast ({ { i1 (i64*, i8*)* } }* @_ZN4base19PartitionAllocHooks22realloc_override_hook_E to i64*) monotonic, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = inttoptr i64 %3 to i1 (i64*, i8*)*
  %7 = tail call zeroext i1 %6(i64* %0, i8* %1) #4
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi i1 [ %7, %5 ], [ false, %2 ]
  ret i1 %9
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
