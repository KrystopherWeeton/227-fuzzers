; ModuleID = '../../third_party/swiftshader/src/OpenGL/libEGL/Config.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/libEGL/Config.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.egl::SortConfig" = type { i8, i8, i8, i8, i8 }
%"class.egl::ConfigSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.egl::CompareConfig" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.28" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.egl::Config"**, %"class.egl::Config"**, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.egl::Config"** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.9" }
%"class.std::__1::__tree.9" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.egl::Config" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node.25" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.16" }
%"struct.std::__1::pair.16" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIPKN3egl6ConfigENS_9allocatorIS4_EEE7reserveEm = comdat any

$_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISB_EERKT_ = comdat any

$_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSB_SB_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_ = comdat any

$_ZNSt3__16__sortIRN3egl10SortConfigEPPKNS1_6ConfigEEEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort4IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRN3egl10SortConfigEPPKNS1_6ConfigEEEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRN3egl10SortConfigEPPKNS1_6ConfigEEEbT0_S8_T_ = comdat any

@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN3egl6ConfigC1EN2sw6FormatEiiS2_S2_i = hidden unnamed_addr alias void (%"class.egl::Config"*, i32, i32, i32, i32, i32, i32), void (%"class.egl::Config"*, i32, i32, i32, i32, i32, i32)* @_ZN3egl6ConfigC2EN2sw6FormatEiiS2_S2_i
@_ZN3egl10SortConfigC1EPKi = hidden unnamed_addr alias void (%"class.egl::SortConfig"*, i32*), void (%"class.egl::SortConfig"*, i32*)* @_ZN3egl10SortConfigC2EPKi
@_ZN3egl9ConfigSetC1Ev = hidden unnamed_addr alias void (%"class.egl::ConfigSet"*), void (%"class.egl::ConfigSet"*)* @_ZN3egl9ConfigSetC2Ev

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl6ConfigC2EN2sw6FormatEiiS2_S2_i(%"class.egl::Config"*, i32, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 0
  store i32 %4, i32* %8, align 4
  %9 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 1
  store i32 %5, i32* %9, align 4
  %10 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 2
  store i32 %6, i32* %10, align 4
  %11 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 10
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 11
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 25
  store i32 2147483647, i32* %13, align 4
  switch i32 %4, label %14 [
    i32 31, label %23
    i32 42, label %28
    i32 19, label %33
    i32 27, label %38
    i32 15, label %43
    i32 18, label %48
    i32 23, label %53
  ]

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  br label %58

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 4
  store i32 5, i32* %24, align 4
  %25 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 5
  store i32 5, i32* %25, align 4
  %26 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 6
  store i32 5, i32* %26, align 4
  %27 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 8
  store i32 1, i32* %27, align 4
  br label %58

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 4
  store i32 10, i32* %29, align 4
  %30 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 5
  store i32 10, i32* %30, align 4
  %31 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 6
  store i32 10, i32* %31, align 4
  %32 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 8
  store i32 2, i32* %32, align 4
  br label %58

33:                                               ; preds = %7
  %34 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 4
  store i32 8, i32* %34, align 4
  %35 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 5
  store i32 8, i32* %35, align 4
  %36 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 6
  store i32 8, i32* %36, align 4
  %37 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 8
  store i32 8, i32* %37, align 4
  store i32 1, i32* %12, align 4
  store i32 2, i32* %13, align 4
  br label %58

38:                                               ; preds = %7
  %39 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 4
  store i32 8, i32* %39, align 4
  %40 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 5
  store i32 8, i32* %40, align 4
  %41 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 6
  store i32 8, i32* %41, align 4
  %42 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 8
  store i32 8, i32* %42, align 4
  store i32 1, i32* %12, align 4
  br label %58

43:                                               ; preds = %7
  %44 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 4
  store i32 5, i32* %44, align 4
  %45 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 5
  store i32 6, i32* %45, align 4
  %46 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 6
  store i32 5, i32* %46, align 4
  %47 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 8
  store i32 0, i32* %47, align 4
  br label %58

48:                                               ; preds = %7
  %49 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 4
  store i32 8, i32* %49, align 4
  %50 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 5
  store i32 8, i32* %50, align 4
  %51 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 6
  store i32 8, i32* %51, align 4
  %52 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 8
  store i32 0, i32* %52, align 4
  store i32 1, i32* %11, align 4
  store i32 1, i32* %13, align 4
  br label %58

53:                                               ; preds = %7
  %54 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 4
  store i32 8, i32* %54, align 4
  %55 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 5
  store i32 8, i32* %55, align 4
  %56 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 6
  store i32 8, i32* %56, align 4
  %57 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 8
  store i32 0, i32* %57, align 4
  store i32 1, i32* %11, align 4
  br label %58

58:                                               ; preds = %14, %53, %48, %43, %38, %33, %28, %23
  %59 = phi i32 [ %22, %14 ], [ 0, %53 ], [ 0, %48 ], [ 0, %43 ], [ 8, %38 ], [ 8, %33 ], [ 2, %28 ], [ 1, %23 ]
  %60 = phi i32 [ %20, %14 ], [ 8, %53 ], [ 8, %48 ], [ 5, %43 ], [ 8, %38 ], [ 8, %33 ], [ 10, %28 ], [ 5, %23 ]
  %61 = phi i32 [ %18, %14 ], [ 8, %53 ], [ 8, %48 ], [ 6, %43 ], [ 8, %38 ], [ 8, %33 ], [ 10, %28 ], [ 5, %23 ]
  %62 = phi i32 [ %16, %14 ], [ 8, %53 ], [ 8, %48 ], [ 5, %43 ], [ 8, %38 ], [ 8, %33 ], [ 10, %28 ], [ 5, %23 ]
  %63 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 7
  store i32 0, i32* %63, align 4
  %64 = add nsw i32 %61, %62
  %65 = add nsw i32 %64, %60
  %66 = add nsw i32 %65, %59
  %67 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 3
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 9
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 12
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 12430, i32 12344, i32 0, i32 68>, <4 x i32>* %70, align 4
  switch i32 %5, label %80 [
    i32 0, label %75
    i32 103, label %71
    i32 105, label %72
    i32 104, label %73
    i32 102, label %74
  ]

71:                                               ; preds = %58
  br label %75

72:                                               ; preds = %58
  br label %75

73:                                               ; preds = %58
  br label %75

74:                                               ; preds = %58
  br label %75

75:                                               ; preds = %58, %71, %72, %73, %74
  %76 = phi i32 [ 16, %74 ], [ 24, %73 ], [ 24, %72 ], [ 32, %71 ], [ %5, %58 ]
  %77 = phi i32 [ 0, %74 ], [ 0, %73 ], [ 8, %72 ], [ 0, %71 ], [ %5, %58 ]
  %78 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 16
  store i32 %76, i32* %78, align 4
  %79 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 30
  store i32 %77, i32* %79, align 4
  br label %80

80:                                               ; preds = %75, %58
  %81 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 17
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 0, i32 12344, i32 4096, i32 4096>, <4 x i32>* %82, align 4
  %83 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 21
  store i32 16777216, i32* %83, align 4
  %84 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 22
  store i32 %3, i32* %84, align 4
  %85 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 23
  store i32 %2, i32* %85, align 4
  %86 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 24
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 26
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 27
  store i32 68, i32* %88, align 4
  %89 = icmp sgt i32 %6, 0
  %90 = zext i1 %89 to i32
  %91 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 28
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 29
  store i32 %6, i32* %92, align 4
  %93 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 31
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 1541, i32 12344, i32 0, i32 0>, <4 x i32>* %94, align 4
  %95 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 35
  store i32 0, i32* %95, align 4
  %96 = icmp eq i32 %1, %4
  %97 = zext i1 %96 to i32
  %98 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 37
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 36
  store i32 1, i32* %99, align 4
  %100 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 38
  store i32 13403, i32* %100, align 4
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i8* @_ZNK3egl6Config9getHandleEv(%"class.egl::Config"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %0, i64 0, i32 14
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = inttoptr i64 %4 to i8*
  ret i8* %5
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3egl13CompareConfigclERKNS_6ConfigES3_(%"struct.egl::CompareConfig"* nocapture readnone, %"class.egl::Config"* nocapture readonly dereferenceable(156), %"class.egl::Config"* nocapture readonly dereferenceable(156)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 13
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 13
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = icmp ult i32 %5, %7
  br label %113

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 12
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 12
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = icmp ult i32 %13, %15
  br label %113

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = icmp slt i32 %21, %23
  br label %113

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = icmp slt i32 %29, %31
  br label %113

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 6
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = icmp slt i32 %37, %39
  br label %113

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 8
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = icmp slt i32 %45, %47
  br label %113

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %51
  %58 = icmp slt i32 %53, %55
  br label %113

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 28
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 28
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %61, %63
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = icmp slt i32 %61, %63
  br label %113

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 29
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 29
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %67
  %74 = icmp slt i32 %69, %71
  br label %113

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 16
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 16
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  %82 = icmp slt i32 %77, %79
  br label %113

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 30
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 30
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %85, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = icmp slt i32 %85, %87
  br label %113

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 9
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 9
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %93, %95
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = icmp slt i32 %93, %95
  br label %113

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 26
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 26
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %101, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %99
  %106 = icmp slt i32 %101, %103
  br label %113

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 25
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 25
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %109, %111
  ret i1 %112

113:                                              ; preds = %105, %97, %89, %81, %73, %65, %57, %49, %41, %33, %25, %17, %9
  %114 = phi i1 [ %10, %9 ], [ %18, %17 ], [ %26, %25 ], [ %34, %33 ], [ %42, %41 ], [ %50, %49 ], [ %58, %57 ], [ %66, %65 ], [ %74, %73 ], [ %82, %81 ], [ %90, %89 ], [ %98, %97 ], [ %106, %105 ]
  ret i1 %114
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl10SortConfigC2EPKi(%"class.egl::SortConfig"* nocapture, i32* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 5, i1 false)
  %8 = load i32, i32* %1, align 4
  %9 = icmp eq i32 %8, 12344
  br i1 %9, label %10, label %11

10:                                               ; preds = %25, %2
  ret void

11:                                               ; preds = %2, %25
  %12 = phi i32 [ %27, %25 ], [ %8, %2 ]
  %13 = phi i32* [ %26, %25 ], [ %1, %2 ]
  %14 = getelementptr inbounds i32, i32* %13, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, 1
  %17 = icmp ugt i32 %16, 1
  %18 = zext i1 %17 to i8
  switch i32 %12, label %25 [
    i32 12324, label %23
    i32 12323, label %19
    i32 12322, label %20
    i32 12321, label %21
    i32 12349, label %22
  ]

19:                                               ; preds = %11
  br label %23

20:                                               ; preds = %11
  br label %23

21:                                               ; preds = %11
  br label %23

22:                                               ; preds = %11
  br label %23

23:                                               ; preds = %11, %19, %20, %21, %22
  %24 = phi i8* [ %7, %22 ], [ %6, %21 ], [ %5, %20 ], [ %4, %19 ], [ %3, %11 ]
  store i8 %18, i8* %24, align 1
  br label %25

25:                                               ; preds = %23, %11
  %26 = getelementptr inbounds i32, i32* %13, i64 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 12344
  br i1 %28, label %10, label %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3egl10SortConfig20wantedComponentsSizeEPKNS_6ConfigE(%"class.egl::SortConfig"* nocapture readonly, %"class.egl::Config"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %2 ]
  %11 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 1
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, %10
  br label %18

18:                                               ; preds = %9, %14
  %19 = phi i32 [ %17, %14 ], [ %10, %9 ]
  %20 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 2
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 6
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, %19
  br label %27

27:                                               ; preds = %18, %23
  %28 = phi i32 [ %26, %23 ], [ %19, %18 ]
  %29 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 8
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, %28
  br label %36

36:                                               ; preds = %27, %32
  %37 = phi i32 [ %35, %32 ], [ %28, %27 ]
  %38 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 7
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, %37
  br label %45

45:                                               ; preds = %36, %41
  %46 = phi i32 [ %44, %41 ], [ %37, %36 ]
  ret i32 %46
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* nocapture readonly, %"class.egl::Config"* nocapture readonly, %"class.egl::Config"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 13
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 13
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = icmp ult i32 %5, %7
  br label %87

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 12
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 12
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = icmp ult i32 %13, %15
  br label %87

19:                                               ; preds = %11
  %20 = tail call i32 @_ZNK3egl10SortConfig20wantedComponentsSizeEPKNS_6ConfigE(%"class.egl::SortConfig"* %0, %"class.egl::Config"* %1) #9
  %21 = tail call i32 @_ZNK3egl10SortConfig20wantedComponentsSizeEPKNS_6ConfigE(%"class.egl::SortConfig"* %0, %"class.egl::Config"* %2) #9
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = icmp sgt i32 %20, %21
  br label %87

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = icmp slt i32 %27, %29
  br label %87

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 28
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 28
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = icmp slt i32 %35, %37
  br label %87

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 29
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 29
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %41
  %48 = icmp slt i32 %43, %45
  br label %87

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 16
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  %56 = icmp slt i32 %51, %53
  br label %87

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 30
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 30
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  %64 = icmp slt i32 %59, %61
  br label %87

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 9
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 9
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = icmp slt i32 %67, %69
  br label %87

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 26
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 26
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %81, label %79

79:                                               ; preds = %73
  %80 = icmp slt i32 %75, %77
  br label %87

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %1, i64 0, i32 14
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %2, i64 0, i32 14
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %83, %85
  ret i1 %86

87:                                               ; preds = %23, %31, %39, %47, %55, %63, %71, %79, %17, %9
  %88 = phi i1 [ %10, %9 ], [ %18, %17 ], [ %24, %23 ], [ %32, %31 ], [ %40, %39 ], [ %48, %47 ], [ %56, %55 ], [ %64, %63 ], [ %72, %71 ], [ %80, %79 ]
  ret i1 %88
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl9ConfigSetC2Ev(%"class.egl::ConfigSet"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl9ConfigSet3addEN2sw6FormatEiiS2_S2_i(%"class.egl::ConfigSet"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %8 = alloca %"class.egl::Config", align 4
  %9 = bitcast %"class.egl::Config"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 156, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -86, i64 156, i1 false)
  call void @_ZN3egl6ConfigC2EN2sw6FormatEiiS2_S2_i(%"class.egl::Config"* nonnull %8, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) #9
  %10 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0
  %11 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %10, %"class.egl::Config"* nonnull dereferenceable(156) %8, %"class.egl::Config"* nonnull dereferenceable(156) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 156, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZNK3egl9ConfigSet4sizeEv(%"class.egl::ConfigSet"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3egl9ConfigSet10getConfigsEPPvPKiiPi(%"class.egl::ConfigSet"*, i8**, i32*, i32, i32* nocapture) local_unnamed_addr #3 align 2 {
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.28", align 1
  %8 = alloca %"class.egl::SortConfig", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::map", align 8
  %11 = alloca %"class.egl::SortConfig", align 8
  %12 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #10
  %16 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  call void @_ZNSt3__16vectorIPKN3egl6ConfigENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector"* nonnull %9, i64 %17) #9
  %18 = bitcast %"class.std::__1::map"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"** %19, align 8
  %23 = load i32, i32* %2, align 4
  %24 = icmp eq i32 %23, 12344
  br i1 %24, label %41, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0
  %27 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::tuple.28", %"class.std::__1::tuple.28"* %7, i64 0, i32 0
  br label %30

30:                                               ; preds = %25, %30
  %31 = phi i32* [ %2, %25 ], [ %38, %30 ]
  %32 = getelementptr inbounds i32, i32* %31, i64 1
  %33 = load i32, i32* %32, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  store i32* %31, i32** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #10
  %34 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.9"* nonnull %26, i32* dereferenceable(4) %31, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.28"* nonnull dereferenceable(1) %7) #11
  %35 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %34, 0
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 4
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  store i32 %33, i32* %37, align 4
  %38 = getelementptr inbounds i32, i32* %31, i64 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 12344
  br i1 %40, label %41, label %30

41:                                               ; preds = %30, %5
  %42 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %43, %44
  br i1 %45, label %376, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.egl::Config"*** %14 to i64*
  %48 = bitcast %"class.std::__1::vector"* %9 to i64*
  %49 = bitcast %"class.egl::Config"*** %15 to i64*
  br label %50

50:                                               ; preds = %46, %373
  %51 = phi %"class.std::__1::__tree_end_node"* [ %43, %46 ], [ %374, %373 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 10
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 12344
  %58 = zext i1 %57 to i8
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %60 = icmp eq %"class.std::__1::__tree_end_node"* %59, %21
  br i1 %60, label %285, label %61

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 38
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 22
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to i32*
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 36
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 11
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to i32*
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 17
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to i32*
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 12
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 8
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to i32*
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 7
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to i32*
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 22
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 15
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to i32*
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 9
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to i32*
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 10
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 20
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to i32*
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 34
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 21
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to i32*
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 32
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 19
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 28
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 18
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to i32*
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 26
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 24
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 12
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to i32*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 14
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 30
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 16
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 4
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 6
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to i32*
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 6
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %52, i64 0, i32 1, i32 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 5
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to i32*
  br label %106

106:                                              ; preds = %61, %282
  %107 = phi i8 [ 1, %61 ], [ %252, %282 ]
  %108 = phi i8 [ %58, %61 ], [ %254, %282 ]
  %109 = phi %"class.std::__1::__tree_end_node"* [ %59, %61 ], [ %283, %282 ]
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_node.25"*
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 4
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, -1
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %110, i64 0, i32 1, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %106
  %118 = and i8 %107, 1
  br label %250

119:                                              ; preds = %106
  switch i32 %116, label %421 [
    i32 12320, label %120
    i32 12321, label %124
    i32 12322, label %128
    i32 12323, label %132
    i32 12324, label %136
    i32 12325, label %140
    i32 12326, label %144
    i32 12327, label %148
    i32 12328, label %151
    i32 12329, label %155
    i32 12333, label %159
    i32 12335, label %163
    i32 12337, label %167
    i32 12338, label %171
    i32 12339, label %175
    i32 12340, label %180
    i32 12341, label %184
    i32 12342, label %188
    i32 12343, label %192
    i32 12345, label %196
    i32 12346, label %200
    i32 12347, label %204
    i32 12348, label %208
    i32 12349, label %212
    i32 12350, label %216
    i32 12351, label %220
    i32 12352, label %224
    i32 12353, label %345
    i32 12354, label %229
    i32 12610, label %234
    i32 12615, label %238
    i32 13453, label %242
    i32 12332, label %246
    i32 12330, label %246
    i32 12331, label %246
    i32 12334, label %246
  ]

120:                                              ; preds = %119
  %121 = load i32, i32* %105, align 4
  %122 = icmp sge i32 %121, %113
  %123 = zext i1 %122 to i8
  br label %246

124:                                              ; preds = %119
  %125 = load i32, i32* %103, align 4
  %126 = icmp sge i32 %125, %113
  %127 = zext i1 %126 to i8
  br label %246

128:                                              ; preds = %119
  %129 = load i32, i32* %102, align 4
  %130 = icmp sge i32 %129, %113
  %131 = zext i1 %130 to i8
  br label %246

132:                                              ; preds = %119
  %133 = load i32, i32* %101, align 4
  %134 = icmp sge i32 %133, %113
  %135 = zext i1 %134 to i8
  br label %246

136:                                              ; preds = %119
  %137 = load i32, i32* %99, align 4
  %138 = icmp sge i32 %137, %113
  %139 = zext i1 %138 to i8
  br label %246

140:                                              ; preds = %119
  %141 = load i32, i32* %98, align 4
  %142 = icmp sge i32 %141, %113
  %143 = zext i1 %142 to i8
  br label %246

144:                                              ; preds = %119
  %145 = load i32, i32* %97, align 4
  %146 = icmp sge i32 %145, %113
  %147 = zext i1 %146 to i8
  br label %246

148:                                              ; preds = %119
  %149 = icmp eq i32 %56, %113
  %150 = zext i1 %149 to i8
  br label %246

151:                                              ; preds = %119
  %152 = load i32, i32* %96, align 4
  %153 = icmp eq i32 %152, %113
  %154 = zext i1 %153 to i8
  br label %246

155:                                              ; preds = %119
  %156 = load i32, i32* %95, align 4
  %157 = icmp sge i32 %156, %113
  %158 = zext i1 %157 to i8
  br label %246

159:                                              ; preds = %119
  %160 = load i32, i32* %93, align 4
  %161 = icmp eq i32 %160, %113
  %162 = zext i1 %161 to i8
  br label %246

163:                                              ; preds = %119
  %164 = load i32, i32* %92, align 4
  %165 = icmp eq i32 %164, %113
  %166 = zext i1 %165 to i8
  br label %246

167:                                              ; preds = %119
  %168 = load i32, i32* %91, align 4
  %169 = icmp sge i32 %168, %113
  %170 = zext i1 %169 to i8
  br label %246

171:                                              ; preds = %119
  %172 = load i32, i32* %89, align 4
  %173 = icmp sge i32 %172, %113
  %174 = zext i1 %173 to i8
  br label %246

175:                                              ; preds = %119
  %176 = load i32, i32* %88, align 4
  %177 = and i32 %176, %113
  %178 = icmp eq i32 %177, %113
  %179 = zext i1 %178 to i8
  br label %246

180:                                              ; preds = %119
  %181 = load i32, i32* %86, align 4
  %182 = icmp eq i32 %181, %113
  %183 = zext i1 %182 to i8
  br label %246

184:                                              ; preds = %119
  %185 = load i32, i32* %85, align 4
  %186 = icmp eq i32 %185, %113
  %187 = zext i1 %186 to i8
  br label %246

188:                                              ; preds = %119
  %189 = load i32, i32* %83, align 4
  %190 = icmp eq i32 %189, %113
  %191 = zext i1 %190 to i8
  br label %246

192:                                              ; preds = %119
  %193 = load i32, i32* %82, align 4
  %194 = icmp eq i32 %193, %113
  %195 = zext i1 %194 to i8
  br label %246

196:                                              ; preds = %119
  %197 = load i32, i32* %80, align 4
  %198 = icmp eq i32 %197, %113
  %199 = zext i1 %198 to i8
  br label %246

200:                                              ; preds = %119
  %201 = load i32, i32* %79, align 4
  %202 = icmp eq i32 %201, %113
  %203 = zext i1 %202 to i8
  br label %246

204:                                              ; preds = %119
  %205 = load i32, i32* %77, align 4
  %206 = icmp eq i32 %205, %113
  %207 = zext i1 %206 to i8
  br label %246

208:                                              ; preds = %119
  %209 = load i32, i32* %75, align 4
  %210 = icmp eq i32 %209, %113
  %211 = zext i1 %210 to i8
  br label %246

212:                                              ; preds = %119
  %213 = load i32, i32* %74, align 4
  %214 = icmp sge i32 %213, %113
  %215 = zext i1 %214 to i8
  br label %246

216:                                              ; preds = %119
  %217 = load i32, i32* %72, align 4
  %218 = icmp sge i32 %217, %113
  %219 = zext i1 %218 to i8
  br label %246

220:                                              ; preds = %119
  %221 = load i32, i32* %70, align 4
  %222 = icmp eq i32 %221, %113
  %223 = zext i1 %222 to i8
  br label %246

224:                                              ; preds = %119
  %225 = load i32, i32* %69, align 4
  %226 = and i32 %225, %113
  %227 = icmp eq i32 %226, %113
  %228 = zext i1 %227 to i8
  br label %246

229:                                              ; preds = %119
  %230 = load i32, i32* %67, align 4
  %231 = and i32 %230, %113
  %232 = icmp eq i32 %231, %113
  %233 = zext i1 %232 to i8
  br label %246

234:                                              ; preds = %119
  %235 = load i32, i32* %65, align 4
  %236 = icmp eq i32 %235, %113
  %237 = zext i1 %236 to i8
  br label %246

238:                                              ; preds = %119
  %239 = load i32, i32* %64, align 4
  %240 = icmp eq i32 %239, %113
  %241 = zext i1 %240 to i8
  br label %246

242:                                              ; preds = %119
  %243 = load i32, i32* %62, align 4
  %244 = icmp eq i32 %243, %113
  %245 = zext i1 %244 to i8
  br label %246

246:                                              ; preds = %119, %119, %119, %119, %242, %238, %234, %229, %224, %220, %216, %212, %208, %204, %200, %196, %192, %188, %184, %180, %175, %171, %167, %163, %159, %155, %151, %148, %144, %140, %136, %132, %128, %124, %120
  %247 = phi i8 [ %107, %119 ], [ %107, %119 ], [ %107, %119 ], [ %107, %119 ], [ %245, %242 ], [ %241, %238 ], [ %237, %234 ], [ %233, %229 ], [ %228, %224 ], [ %223, %220 ], [ %219, %216 ], [ %215, %212 ], [ %211, %208 ], [ %207, %204 ], [ %203, %200 ], [ %199, %196 ], [ %195, %192 ], [ %191, %188 ], [ %187, %184 ], [ %183, %180 ], [ %179, %175 ], [ %174, %171 ], [ %170, %167 ], [ %166, %163 ], [ %162, %159 ], [ %158, %155 ], [ %154, %151 ], [ %150, %148 ], [ %147, %144 ], [ %143, %140 ], [ %139, %136 ], [ %135, %132 ], [ %131, %128 ], [ %127, %124 ], [ %123, %120 ]
  %248 = and i8 %247, 1
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %285, label %250

250:                                              ; preds = %117, %246
  %251 = phi i8 [ %118, %117 ], [ 1, %246 ]
  %252 = phi i8 [ %107, %117 ], [ %247, %246 ]
  %253 = icmp eq i32 %116, 12327
  %254 = select i1 %253, i8 %251, i8 %108
  %255 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 1, i32 0
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  %257 = icmp eq %"class.std::__1::__tree_node_base"* %256, null
  br i1 %257, label %258, label %266

258:                                              ; preds = %250
  %259 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_node_base"*
  %260 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 2
  %261 = bitcast %"class.std::__1::__tree_end_node"* %260 to %"class.std::__1::__tree_end_node"**
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %261, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %259
  br i1 %265, label %282, label %273

266:                                              ; preds = %250, %266
  %267 = phi %"class.std::__1::__tree_node_base"* [ %269, %266 ], [ %256, %250 ]
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %267, i64 0, i32 0, i32 0
  %269 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %268, align 8
  %270 = icmp eq %"class.std::__1::__tree_node_base"* %269, null
  br i1 %270, label %271, label %266

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %267, i64 0, i32 0
  br label %282

273:                                              ; preds = %258, %273
  %274 = phi %"class.std::__1::__tree_end_node"** [ %277, %273 ], [ %261, %258 ]
  %275 = bitcast %"class.std::__1::__tree_end_node"** %274 to %"class.std::__1::__tree_node_base"**
  %276 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %275, align 8
  %277 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %278 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %277, align 8
  %279 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %278, i64 0, i32 0
  %280 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %279, align 8
  %281 = icmp eq %"class.std::__1::__tree_node_base"* %280, %276
  br i1 %281, label %282, label %273

282:                                              ; preds = %273, %258, %271
  %283 = phi %"class.std::__1::__tree_end_node"* [ %272, %271 ], [ %262, %258 ], [ %278, %273 ]
  %284 = icmp eq %"class.std::__1::__tree_end_node"* %283, %21
  br i1 %284, label %285, label %106

285:                                              ; preds = %246, %282, %50
  %286 = phi i8 [ %58, %50 ], [ %254, %282 ], [ %108, %246 ]
  %287 = phi i8 [ 1, %50 ], [ %252, %282 ], [ %247, %246 ]
  %288 = and i8 %286, 1
  %289 = and i8 %288, %287
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %345, label %291

291:                                              ; preds = %285
  %292 = ptrtoint %"class.egl::Config"* %53 to i64
  %293 = load %"class.egl::Config"**, %"class.egl::Config"*** %14, align 8
  %294 = load %"class.egl::Config"**, %"class.egl::Config"*** %15, align 8
  %295 = icmp ult %"class.egl::Config"** %293, %294
  %296 = ptrtoint %"class.egl::Config"** %294 to i64
  br i1 %295, label %297, label %301

297:                                              ; preds = %291
  %298 = bitcast %"class.egl::Config"** %293 to i64*
  store i64 %292, i64* %298, align 8
  %299 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %293, i64 1
  %300 = ptrtoint %"class.egl::Config"** %299 to i64
  store i64 %300, i64* %47, align 8
  br label %345

301:                                              ; preds = %291
  %302 = ptrtoint %"class.egl::Config"** %293 to i64
  %303 = load i64, i64* %48, align 8
  %304 = sub i64 %302, %303
  %305 = ashr exact i64 %304, 3
  %306 = add nsw i64 %305, 1
  %307 = icmp ugt i64 %306, 2305843009213693951
  br i1 %307, label %308, label %310

308:                                              ; preds = %301
  %309 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %309) #12
  unreachable

310:                                              ; preds = %301
  %311 = sub i64 %296, %303
  %312 = ashr exact i64 %311, 3
  %313 = icmp ult i64 %312, 1152921504606846975
  br i1 %313, label %314, label %322

314:                                              ; preds = %310
  %315 = ashr exact i64 %311, 2
  %316 = icmp ult i64 %315, %306
  %317 = select i1 %316, i64 %306, i64 %315
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %327, label %319

319:                                              ; preds = %314
  %320 = icmp ugt i64 %317, 2305843009213693951
  br i1 %320, label %321, label %322

321:                                              ; preds = %319
  call void @abort() #12
  unreachable

322:                                              ; preds = %319, %310
  %323 = phi i64 [ %317, %319 ], [ 2305843009213693951, %310 ]
  %324 = shl i64 %323, 3
  %325 = call i8* @_Znwm(i64 %324) #13
  %326 = bitcast i8* %325 to %"class.egl::Config"**
  br label %327

327:                                              ; preds = %322, %314
  %328 = phi i64 [ %323, %322 ], [ 0, %314 ]
  %329 = phi i8* [ %325, %322 ], [ null, %314 ]
  %330 = phi %"class.egl::Config"** [ %326, %322 ], [ null, %314 ]
  %331 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %330, i64 %305
  %332 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %330, i64 %328
  %333 = ptrtoint %"class.egl::Config"** %332 to i64
  %334 = bitcast %"class.egl::Config"** %331 to i64*
  store i64 %292, i64* %334, align 8
  %335 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %331, i64 1
  %336 = ptrtoint %"class.egl::Config"** %335 to i64
  %337 = ptrtoint %"class.egl::Config"** %330 to i64
  %338 = icmp sgt i64 %304, 0
  br i1 %338, label %339, label %341

339:                                              ; preds = %327
  %340 = inttoptr i64 %303 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %329, i8* align 8 %340, i64 %304, i1 false) #10
  br label %341

341:                                              ; preds = %339, %327
  store i64 %337, i64* %48, align 8
  store i64 %336, i64* %47, align 8
  store i64 %333, i64* %49, align 8
  %342 = icmp eq i64 %303, 0
  br i1 %342, label %345, label %343

343:                                              ; preds = %341
  %344 = inttoptr i64 %303 to i8*
  call void @_ZdlPv(i8* %344) #13
  br label %345

345:                                              ; preds = %119, %285, %297, %341, %343
  %346 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = icmp eq %"class.std::__1::__tree_node_base"* %347, null
  br i1 %348, label %349, label %357

349:                                              ; preds = %345
  %350 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node_base"*
  %351 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 2
  %352 = bitcast %"class.std::__1::__tree_end_node"* %351 to %"class.std::__1::__tree_end_node"**
  %353 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %352, align 8
  %354 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %353, i64 0, i32 0
  %355 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %354, align 8
  %356 = icmp eq %"class.std::__1::__tree_node_base"* %355, %350
  br i1 %356, label %373, label %364

357:                                              ; preds = %345, %357
  %358 = phi %"class.std::__1::__tree_node_base"* [ %360, %357 ], [ %347, %345 ]
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %358, i64 0, i32 0, i32 0
  %360 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %359, align 8
  %361 = icmp eq %"class.std::__1::__tree_node_base"* %360, null
  br i1 %361, label %362, label %357

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %358, i64 0, i32 0
  br label %373

364:                                              ; preds = %349, %364
  %365 = phi %"class.std::__1::__tree_end_node"** [ %368, %364 ], [ %352, %349 ]
  %366 = bitcast %"class.std::__1::__tree_end_node"** %365 to %"class.std::__1::__tree_node_base"**
  %367 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %366, align 8
  %368 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %367, i64 0, i32 2
  %369 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %368, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %369, i64 0, i32 0
  %371 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %370, align 8
  %372 = icmp eq %"class.std::__1::__tree_node_base"* %371, %367
  br i1 %372, label %373, label %364

373:                                              ; preds = %364, %349, %362
  %374 = phi %"class.std::__1::__tree_end_node"* [ %363, %362 ], [ %353, %349 ], [ %369, %364 ]
  %375 = icmp eq %"class.std::__1::__tree_end_node"* %374, %44
  br i1 %375, label %376, label %50

376:                                              ; preds = %373, %41
  %377 = icmp eq i8** %1, null
  br i1 %377, label %411, label %378

378:                                              ; preds = %376
  %379 = load %"class.egl::Config"**, %"class.egl::Config"*** %13, align 8
  %380 = load %"class.egl::Config"**, %"class.egl::Config"*** %14, align 8
  call void @_ZN3egl10SortConfigC2EPKi(%"class.egl::SortConfig"* nonnull %11, i32* %2) #9
  %381 = bitcast %"class.egl::SortConfig"* %11 to i40*
  %382 = load i40, i40* %381, align 8
  %383 = getelementptr inbounds %"class.egl::SortConfig", %"class.egl::SortConfig"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %383)
  %384 = bitcast %"class.egl::SortConfig"* %8 to i40*
  store i40 %382, i40* %384, align 8
  call void @_ZNSt3__16__sortIRN3egl10SortConfigEPPKNS1_6ConfigEEEvT0_S8_T_(%"class.egl::Config"** %379, %"class.egl::Config"** %380, %"class.egl::SortConfig"* nonnull dereferenceable(5) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %383)
  %385 = icmp sgt i32 %3, 0
  br i1 %385, label %386, label %421

386:                                              ; preds = %378
  %387 = bitcast %"class.egl::Config"*** %14 to i64*
  %388 = bitcast %"class.std::__1::vector"* %9 to i64*
  %389 = zext i32 %3 to i64
  %390 = load i64, i64* %387, align 8
  %391 = load i64, i64* %388, align 8
  %392 = inttoptr i64 %391 to %"class.egl::Config"**
  %393 = sub i64 %390, %391
  %394 = shl i64 %393, 29
  %395 = ashr i64 %394, 32
  br label %396

396:                                              ; preds = %400, %386
  %397 = phi i64 [ 0, %386 ], [ %408, %400 ]
  %398 = phi i32 [ 0, %386 ], [ %409, %400 ]
  %399 = icmp slt i64 %397, %395
  br i1 %399, label %400, label %419

400:                                              ; preds = %396
  %401 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %392, i64 %397
  %402 = load %"class.egl::Config"*, %"class.egl::Config"** %401, align 8
  %403 = getelementptr inbounds %"class.egl::Config", %"class.egl::Config"* %402, i64 0, i32 14
  %404 = load i32, i32* %403, align 4
  %405 = sext i32 %404 to i64
  %406 = inttoptr i64 %405 to i8*
  %407 = getelementptr inbounds i8*, i8** %1, i64 %397
  store i8* %406, i8** %407, align 8
  %408 = add nuw nsw i64 %397, 1
  %409 = add nuw nsw i32 %398, 1
  %410 = icmp eq i64 %408, %389
  br i1 %410, label %421, label %396

411:                                              ; preds = %376
  %412 = bitcast %"class.egl::Config"*** %14 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = bitcast %"class.std::__1::vector"* %9 to i64*
  %415 = load i64, i64* %414, align 8
  %416 = sub i64 %413, %415
  %417 = lshr exact i64 %416, 3
  %418 = trunc i64 %417 to i32
  br label %421

419:                                              ; preds = %396
  %420 = trunc i64 %397 to i32
  br label %421

421:                                              ; preds = %119, %400, %419, %378, %411
  %422 = phi i32 [ %418, %411 ], [ 0, %378 ], [ %420, %419 ], [ %409, %400 ], [ 0, %119 ]
  %423 = phi i1 [ true, %411 ], [ true, %378 ], [ true, %419 ], [ true, %400 ], [ false, %119 ]
  store i32 %422, i32* %4, align 4
  %424 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0
  %425 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node.25"**
  %426 = load %"class.std::__1::__tree_node.25"*, %"class.std::__1::__tree_node.25"** %425, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.9"* nonnull %424, %"class.std::__1::__tree_node.25"* %426) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %427 = load %"class.egl::Config"**, %"class.egl::Config"*** %13, align 8
  %428 = icmp eq %"class.egl::Config"** %427, null
  br i1 %428, label %433, label %429

429:                                              ; preds = %421
  %430 = ptrtoint %"class.egl::Config"** %427 to i64
  %431 = bitcast %"class.egl::Config"*** %14 to i64*
  store i64 %430, i64* %431, align 8
  %432 = bitcast %"class.egl::Config"** %427 to i8*
  call void @_ZdlPv(i8* %432) #13
  br label %433

433:                                              ; preds = %421, %429
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  ret i1 %423
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKN3egl6ConfigENS_9allocatorIS4_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.egl::Config"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.egl::Config"*** %12 to i64*
  %14 = icmp ugt i64 %1, 2305843009213693951
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @abort() #12
  unreachable

16:                                               ; preds = %11
  %17 = load i64, i64* %13, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = shl i64 %1, 3
  %21 = tail call i8* @_Znwm(i64 %20) #13
  %22 = bitcast i8* %21 to %"class.egl::Config"**
  %23 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %22, i64 %19
  %24 = ptrtoint %"class.egl::Config"** %23 to i64
  %25 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %22, i64 %1
  %26 = ptrtoint %"class.egl::Config"** %25 to i64
  %27 = ptrtoint i8* %21 to i64
  %28 = icmp sgt i64 %18, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %16
  %30 = inttoptr i64 %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %30, i64 %18, i1 false) #10
  br label %31

31:                                               ; preds = %16, %29
  store i64 %27, i64* %6, align 8
  store i64 %24, i64* %13, align 8
  store i64 %26, i64* %4, align 8
  %32 = icmp eq i64 %7, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = inttoptr i64 %7 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %33, %31, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden %"class.egl::Config"* @_ZN3egl9ConfigSet3getEPv(%"class.egl::ConfigSet"*, i8* readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.egl::ConfigSet", %"class.egl::ConfigSet"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %49, label %7

7:                                                ; preds = %2, %43
  %8 = phi %"class.std::__1::__tree_end_node"* [ %44, %43 ], [ %4, %2 ]
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"*
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 14
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = inttoptr i64 %12 to i8*
  %14 = icmp eq i8* %13, %1
  br i1 %14, label %46, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %15
  %20 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_end_node"**
  %23 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, %20
  br i1 %26, label %43, label %34

27:                                               ; preds = %15, %27
  %28 = phi %"class.std::__1::__tree_node_base"* [ %30, %27 ], [ %17, %15 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %27

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %28, i64 0, i32 0
  br label %43

34:                                               ; preds = %19, %34
  %35 = phi %"class.std::__1::__tree_end_node"** [ %38, %34 ], [ %22, %19 ]
  %36 = bitcast %"class.std::__1::__tree_end_node"** %35 to %"class.std::__1::__tree_node_base"**
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 2
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %37
  br i1 %42, label %43, label %34

43:                                               ; preds = %34, %19, %32
  %44 = phi %"class.std::__1::__tree_end_node"* [ %33, %32 ], [ %23, %19 ], [ %39, %34 ]
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %44, %5
  br i1 %45, label %49, label %7

46:                                               ; preds = %7
  %47 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %47, i64 0, i32 1
  br label %49

49:                                               ; preds = %43, %46, %2
  %50 = phi %"class.egl::Config"* [ %48, %46 ], [ null, %2 ], [ null, %43 ]
  ret %"class.egl::Config"* %50
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.egl::Config"* dereferenceable(156), %"class.egl::Config"* dereferenceable(156)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISB_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.egl::Config"* dereferenceable(156) %1) #9
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 184) #13, !noalias !3
  %12 = getelementptr inbounds i8, i8* %11, i64 28
  %13 = bitcast %"class.egl::Config"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 156, i1 false) #10, !noalias !3
  %14 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %15 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %16 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSB_SB_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_node_base"** dereferenceable(8) %6, %"class.std::__1::__tree_node_base"* nonnull %16) #11
  br label %17

17:                                               ; preds = %10, %3
  %18 = phi i8 [ 1, %10 ], [ 0, %3 ]
  %19 = phi %"class.std::__1::__tree_node"* [ %15, %10 ], [ %8, %3 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %21 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %20, 0
  %22 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %21, i8 %18, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %22
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISB_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.egl::Config"* dereferenceable(156)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %8, %31
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK3egl13CompareConfigclERKNS_6ConfigES3_(%"struct.egl::CompareConfig"* undef, %"class.egl::Config"* dereferenceable(156) %2, %"class.egl::Config"* dereferenceable(156) %13) #9
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK3egl13CompareConfigclERKNS_6ConfigES3_(%"struct.egl::CompareConfig"* undef, %"class.egl::Config"* dereferenceable(156) %13, %"class.egl::Config"* dereferenceable(156) %2) #9
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %28, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %35, %29, %27, %19
  %38 = phi %"class.std::__1::__tree_node_base"** [ %16, %19 ], [ %24, %27 ], [ %12, %29 ], [ %36, %35 ]
  ret %"class.std::__1::__tree_node_base"** %38
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSB_SB_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #11
  %20 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.9"*, %"class.std::__1::__tree_node.25"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.25"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.25"* %1 to %"class.std::__1::__tree_node.25"**
  %6 = load %"class.std::__1::__tree_node.25"*, %"class.std::__1::__tree_node.25"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.9"* %0, %"class.std::__1::__tree_node.25"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.25"**
  %9 = load %"class.std::__1::__tree_node.25"*, %"class.std::__1::__tree_node.25"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.9"* %0, %"class.std::__1::__tree_node.25"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.25"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.9"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.28"* dereferenceable(1)) local_unnamed_addr #3 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.9", %"class.std::__1::__tree.9"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.25"**
  %8 = load %"class.std::__1::__tree_node.25"*, %"class.std::__1::__tree_node.25"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.25"* %8, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.9", %"class.std::__1::__tree.9"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i32, i32* %1, align 4
  br label %13

13:                                               ; preds = %35, %10
  %14 = phi %"class.std::__1::__tree_node.25"* [ %38, %35 ], [ %8, %10 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %12, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp slt i32 %17, %12
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node.25"*
  br label %13

39:                                               ; preds = %5
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %41

41:                                               ; preds = %23, %31, %33, %39
  %42 = phi %"class.std::__1::__tree_end_node"* [ %6, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node.25"**
  %45 = load %"class.std::__1::__tree_node.25"*, %"class.std::__1::__tree_node.25"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.25"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 40) #13, !noalias !6
  %49 = getelementptr inbounds i8, i8* %48, i64 28
  %50 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8, !noalias !6
  %52 = bitcast i8* %49 to i32*
  %53 = load i32, i32* %51, align 4, !noalias !6
  store i32 %53, i32* %52, align 4, !noalias !6
  %54 = getelementptr inbounds i8, i8* %48, i64 32
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 4, !noalias !6
  %56 = bitcast i8* %48 to %"class.std::__1::__tree_node.25"*
  %57 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_(%"class.std::__1::__tree.9"* %0, %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_node_base"** dereferenceable(8) %43, %"class.std::__1::__tree_node_base"* nonnull %57) #11
  br label %58

58:                                               ; preds = %47, %41
  %59 = phi i8 [ 1, %47 ], [ 0, %41 ]
  %60 = phi %"class.std::__1::__tree_node.25"* [ %56, %47 ], [ %45, %41 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.25", %"class.std::__1::__tree_node.25"* %60, i64 0, i32 0, i32 0
  %62 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %61, 0
  %63 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %62, i8 %59, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %63
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_(%"class.std::__1::__tree.9"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree.9", %"class.std::__1::__tree.9"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree.9"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree.9", %"class.std::__1::__tree.9"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #11
  %20 = getelementptr inbounds %"class.std::__1::__tree.9", %"class.std::__1::__tree.9"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRN3egl10SortConfigEPPKNS1_6ConfigEEEvT0_S8_T_(%"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::SortConfig"* dereferenceable(5)) local_unnamed_addr #3 comdat {
  br label %4

4:                                                ; preds = %174, %3
  %5 = phi %"class.egl::Config"** [ %1, %3 ], [ %154, %174 ]
  %6 = phi %"class.egl::Config"** [ %0, %3 ], [ %14, %174 ]
  %7 = ptrtoint %"class.egl::Config"** %5 to i64
  %8 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %5, i64 -1
  %9 = bitcast %"class.egl::Config"** %8 to i64*
  %10 = ptrtoint %"class.egl::Config"** %5 to i64
  br label %11

11:                                               ; preds = %183, %4
  %12 = phi %"class.egl::Config"** [ %6, %4 ], [ %184, %183 ]
  br label %13

13:                                               ; preds = %103, %11
  %14 = phi %"class.egl::Config"** [ %12, %11 ], [ %92, %103 ]
  %15 = ptrtoint %"class.egl::Config"** %14 to i64
  %16 = sub i64 %7, %15
  %17 = ashr exact i64 %16, 3
  switch i64 %17, label %43 [
    i64 0, label %187
    i64 1, label %187
    i64 2, label %18
    i64 3, label %28
    i64 4, label %32
    i64 5, label %37
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %5, i64 -1
  %20 = load %"class.egl::Config"*, %"class.egl::Config"** %19, align 8
  %21 = load %"class.egl::Config"*, %"class.egl::Config"** %14, align 8
  %22 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %20, %"class.egl::Config"* %21) #9
  br i1 %22, label %23, label %187

23:                                               ; preds = %18
  %24 = ptrtoint %"class.egl::Config"* %20 to i64
  %25 = ptrtoint %"class.egl::Config"* %21 to i64
  %26 = bitcast %"class.egl::Config"** %14 to i64*
  %27 = bitcast %"class.egl::Config"** %19 to i64*
  store i64 %24, i64* %26, align 8
  store i64 %25, i64* %27, align 8
  br label %187

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 1
  %30 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %5, i64 -1
  %31 = tail call i32 @_ZNSt3__17__sort3IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_T_(%"class.egl::Config"** %14, %"class.egl::Config"** %29, %"class.egl::Config"** %30, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %187

32:                                               ; preds = %13
  %33 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 1
  %34 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 2
  %35 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %5, i64 -1
  %36 = tail call i32 @_ZNSt3__17__sort4IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_T_(%"class.egl::Config"** %14, %"class.egl::Config"** %33, %"class.egl::Config"** %34, %"class.egl::Config"** %35, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %187

37:                                               ; preds = %13
  %38 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 1
  %39 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 2
  %40 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 3
  %41 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %5, i64 -1
  %42 = tail call i32 @_ZNSt3__17__sort5IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_S8_T_(%"class.egl::Config"** %14, %"class.egl::Config"** %38, %"class.egl::Config"** %39, %"class.egl::Config"** %40, %"class.egl::Config"** %41, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %187

43:                                               ; preds = %13
  %44 = icmp slt i64 %16, 248
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @_ZNSt3__118__insertion_sort_3IRN3egl10SortConfigEPPKNS1_6ConfigEEEvT0_S8_T_(%"class.egl::Config"** %14, %"class.egl::Config"** %5, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %187

46:                                               ; preds = %43
  %47 = icmp sgt i64 %16, 7992
  %48 = sdiv i64 %17, 2
  %49 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 %48
  br i1 %47, label %50, label %55

50:                                               ; preds = %46
  %51 = sdiv i64 %17, 4
  %52 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 %51
  %53 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %49, i64 %51
  %54 = tail call i32 @_ZNSt3__17__sort5IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_S8_T_(%"class.egl::Config"** %14, %"class.egl::Config"** %52, %"class.egl::Config"** %49, %"class.egl::Config"** %53, %"class.egl::Config"** %8, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %57

55:                                               ; preds = %46
  %56 = tail call i32 @_ZNSt3__17__sort3IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_T_(%"class.egl::Config"** %14, %"class.egl::Config"** %49, %"class.egl::Config"** %8, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %57

57:                                               ; preds = %55, %50
  %58 = phi i32 [ %54, %50 ], [ %56, %55 ]
  %59 = load %"class.egl::Config"*, %"class.egl::Config"** %14, align 8
  %60 = load %"class.egl::Config"*, %"class.egl::Config"** %49, align 8
  %61 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %59, %"class.egl::Config"* %60) #9
  br i1 %61, label %118, label %62

62:                                               ; preds = %57, %109
  %63 = phi %"class.egl::Config"** [ %64, %109 ], [ %8, %57 ]
  %64 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %63, i64 -1
  %65 = icmp eq %"class.egl::Config"** %14, %64
  br i1 %65, label %66, label %109

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 1
  %68 = load %"class.egl::Config"*, %"class.egl::Config"** %8, align 8
  %69 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %59, %"class.egl::Config"* %68) #9
  %70 = ptrtoint %"class.egl::Config"* %68 to i64
  br i1 %69, label %84, label %71

71:                                               ; preds = %66
  %72 = icmp eq %"class.egl::Config"** %67, %8
  br i1 %72, label %187, label %73

73:                                               ; preds = %71, %81
  %74 = phi %"class.egl::Config"** [ %82, %81 ], [ %67, %71 ]
  %75 = load %"class.egl::Config"*, %"class.egl::Config"** %74, align 8
  %76 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %59, %"class.egl::Config"* %75) #9
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = ptrtoint %"class.egl::Config"* %75 to i64
  %79 = bitcast %"class.egl::Config"** %74 to i64*
  store i64 %70, i64* %79, align 8
  store i64 %78, i64* %9, align 8
  %80 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %74, i64 1
  br label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %74, i64 1
  %83 = icmp eq %"class.egl::Config"** %82, %8
  br i1 %83, label %187, label %73

84:                                               ; preds = %77, %66
  %85 = phi %"class.egl::Config"** [ %67, %66 ], [ %80, %77 ]
  %86 = icmp eq %"class.egl::Config"** %85, %8
  br i1 %86, label %187, label %87

87:                                               ; preds = %84, %105
  %88 = phi %"class.egl::Config"** [ %95, %105 ], [ %85, %84 ]
  %89 = phi %"class.egl::Config"** [ %100, %105 ], [ %8, %84 ]
  %90 = load %"class.egl::Config"*, %"class.egl::Config"** %14, align 8
  br label %91

91:                                               ; preds = %91, %87
  %92 = phi %"class.egl::Config"** [ %88, %87 ], [ %95, %91 ]
  %93 = load %"class.egl::Config"*, %"class.egl::Config"** %92, align 8
  %94 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %90, %"class.egl::Config"* %93) #9
  %95 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %92, i64 1
  br i1 %94, label %96, label %91

96:                                               ; preds = %91
  %97 = ptrtoint %"class.egl::Config"* %93 to i64
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi %"class.egl::Config"** [ %100, %98 ], [ %89, %96 ]
  %100 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %99, i64 -1
  %101 = load %"class.egl::Config"*, %"class.egl::Config"** %100, align 8
  %102 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %90, %"class.egl::Config"* %101) #9
  br i1 %102, label %98, label %103

103:                                              ; preds = %98
  %104 = icmp ult %"class.egl::Config"** %92, %100
  br i1 %104, label %105, label %13

105:                                              ; preds = %103
  %106 = ptrtoint %"class.egl::Config"* %101 to i64
  %107 = bitcast %"class.egl::Config"** %92 to i64*
  %108 = bitcast %"class.egl::Config"** %100 to i64*
  store i64 %106, i64* %107, align 8
  store i64 %97, i64* %108, align 8
  br label %87

109:                                              ; preds = %62
  %110 = load %"class.egl::Config"*, %"class.egl::Config"** %64, align 8
  %111 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %110, %"class.egl::Config"* %60) #9
  br i1 %111, label %112, label %62

112:                                              ; preds = %109
  %113 = ptrtoint %"class.egl::Config"* %59 to i64
  %114 = ptrtoint %"class.egl::Config"* %110 to i64
  %115 = bitcast %"class.egl::Config"** %14 to i64*
  %116 = bitcast %"class.egl::Config"** %64 to i64*
  store i64 %114, i64* %115, align 8
  store i64 %113, i64* %116, align 8
  %117 = add i32 %58, 1
  br label %118

118:                                              ; preds = %57, %112
  %119 = phi i32 [ %117, %112 ], [ %58, %57 ]
  %120 = phi %"class.egl::Config"** [ %64, %112 ], [ %8, %57 ]
  %121 = ptrtoint %"class.egl::Config"** %14 to i64
  %122 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %14, i64 1
  %123 = icmp ult %"class.egl::Config"** %122, %120
  br i1 %123, label %124, label %151

124:                                              ; preds = %118, %144
  %125 = phi %"class.egl::Config"** [ %150, %144 ], [ %49, %118 ]
  %126 = phi i32 [ %148, %144 ], [ %119, %118 ]
  %127 = phi %"class.egl::Config"** [ %134, %144 ], [ %122, %118 ]
  %128 = phi %"class.egl::Config"** [ %139, %144 ], [ %120, %118 ]
  %129 = load %"class.egl::Config"*, %"class.egl::Config"** %125, align 8
  br label %130

130:                                              ; preds = %130, %124
  %131 = phi %"class.egl::Config"** [ %127, %124 ], [ %134, %130 ]
  %132 = load %"class.egl::Config"*, %"class.egl::Config"** %131, align 8
  %133 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %132, %"class.egl::Config"* %129) #9
  %134 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %131, i64 1
  br i1 %133, label %130, label %135

135:                                              ; preds = %130
  %136 = ptrtoint %"class.egl::Config"* %132 to i64
  br label %137

137:                                              ; preds = %135, %137
  %138 = phi %"class.egl::Config"** [ %139, %137 ], [ %128, %135 ]
  %139 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %138, i64 -1
  %140 = load %"class.egl::Config"*, %"class.egl::Config"** %139, align 8
  %141 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %140, %"class.egl::Config"* %129) #9
  br i1 %141, label %142, label %137

142:                                              ; preds = %137
  %143 = icmp ugt %"class.egl::Config"** %131, %139
  br i1 %143, label %151, label %144

144:                                              ; preds = %142
  %145 = ptrtoint %"class.egl::Config"* %140 to i64
  %146 = bitcast %"class.egl::Config"** %131 to i64*
  %147 = bitcast %"class.egl::Config"** %139 to i64*
  store i64 %145, i64* %146, align 8
  store i64 %136, i64* %147, align 8
  %148 = add i32 %126, 1
  %149 = icmp eq %"class.egl::Config"** %125, %131
  %150 = select i1 %149, %"class.egl::Config"** %139, %"class.egl::Config"** %125
  br label %124

151:                                              ; preds = %142, %118
  %152 = phi %"class.egl::Config"** [ %49, %118 ], [ %125, %142 ]
  %153 = phi i32 [ %119, %118 ], [ %126, %142 ]
  %154 = phi %"class.egl::Config"** [ %122, %118 ], [ %131, %142 ]
  %155 = icmp eq %"class.egl::Config"** %154, %152
  br i1 %155, label %166, label %156

156:                                              ; preds = %151
  %157 = load %"class.egl::Config"*, %"class.egl::Config"** %152, align 8
  %158 = load %"class.egl::Config"*, %"class.egl::Config"** %154, align 8
  %159 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %157, %"class.egl::Config"* %158) #9
  br i1 %159, label %160, label %166

160:                                              ; preds = %156
  %161 = ptrtoint %"class.egl::Config"* %157 to i64
  %162 = ptrtoint %"class.egl::Config"* %158 to i64
  %163 = bitcast %"class.egl::Config"** %154 to i64*
  %164 = bitcast %"class.egl::Config"** %152 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %162, i64* %164, align 8
  %165 = add i32 %153, 1
  br label %166

166:                                              ; preds = %151, %160, %156
  %167 = phi i32 [ %165, %160 ], [ %153, %156 ], [ %153, %151 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %176

169:                                              ; preds = %166
  %170 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN3egl10SortConfigEPPKNS1_6ConfigEEEbT0_S8_T_(%"class.egl::Config"** %14, %"class.egl::Config"** %154, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  %171 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %154, i64 1
  %172 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN3egl10SortConfigEPPKNS1_6ConfigEEEbT0_S8_T_(%"class.egl::Config"** %171, %"class.egl::Config"** %5, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  br i1 %170, label %187, label %174

174:                                              ; preds = %173, %185
  br label %4

175:                                              ; preds = %169
  br i1 %170, label %183, label %176

176:                                              ; preds = %175, %166
  %177 = ptrtoint %"class.egl::Config"** %154 to i64
  %178 = sub i64 %177, %121
  %179 = sub i64 %10, %177
  %180 = icmp slt i64 %178, %179
  br i1 %180, label %181, label %185

181:                                              ; preds = %176
  tail call void @_ZNSt3__16__sortIRN3egl10SortConfigEPPKNS1_6ConfigEEEvT0_S8_T_(%"class.egl::Config"** %14, %"class.egl::Config"** %154, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  %182 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %154, i64 1
  br label %183

183:                                              ; preds = %181, %175
  %184 = phi %"class.egl::Config"** [ %171, %175 ], [ %182, %181 ]
  br label %11

185:                                              ; preds = %176
  %186 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %154, i64 1
  tail call void @_ZNSt3__16__sortIRN3egl10SortConfigEPPKNS1_6ConfigEEEvT0_S8_T_(%"class.egl::Config"** %186, %"class.egl::Config"** %5, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %174

187:                                              ; preds = %173, %84, %13, %13, %71, %81, %18, %23, %28, %32, %37, %45
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_T_(%"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::SortConfig"* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %5 = load %"class.egl::Config"*, %"class.egl::Config"** %1, align 8
  %6 = load %"class.egl::Config"*, %"class.egl::Config"** %0, align 8
  %7 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %3, %"class.egl::Config"* %5, %"class.egl::Config"* %6) #9
  %8 = load %"class.egl::Config"*, %"class.egl::Config"** %2, align 8
  %9 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %3, %"class.egl::Config"* %8, %"class.egl::Config"* %5) #9
  %10 = ptrtoint %"class.egl::Config"* %5 to i64
  %11 = ptrtoint %"class.egl::Config"* %8 to i64
  %12 = ptrtoint %"class.egl::Config"* %6 to i64
  br i1 %7, label %24, label %13

13:                                               ; preds = %4
  br i1 %9, label %14, label %35

14:                                               ; preds = %13
  %15 = bitcast %"class.egl::Config"** %1 to i64*
  %16 = bitcast %"class.egl::Config"** %2 to i64*
  store i64 %11, i64* %15, align 8
  store i64 %10, i64* %16, align 8
  %17 = load %"class.egl::Config"*, %"class.egl::Config"** %1, align 8
  %18 = load %"class.egl::Config"*, %"class.egl::Config"** %0, align 8
  %19 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %3, %"class.egl::Config"* %17, %"class.egl::Config"* %18) #9
  br i1 %19, label %20, label %35

20:                                               ; preds = %14
  %21 = ptrtoint %"class.egl::Config"* %17 to i64
  %22 = ptrtoint %"class.egl::Config"* %18 to i64
  %23 = bitcast %"class.egl::Config"** %0 to i64*
  store i64 %21, i64* %23, align 8
  store i64 %22, i64* %15, align 8
  br label %35

24:                                               ; preds = %4
  %25 = bitcast %"class.egl::Config"** %0 to i64*
  br i1 %9, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.egl::Config"** %2 to i64*
  store i64 %11, i64* %25, align 8
  store i64 %12, i64* %27, align 8
  br label %35

28:                                               ; preds = %24
  %29 = bitcast %"class.egl::Config"** %1 to i64*
  store i64 %10, i64* %25, align 8
  store i64 %12, i64* %29, align 8
  %30 = load %"class.egl::Config"*, %"class.egl::Config"** %2, align 8
  %31 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %3, %"class.egl::Config"* %30, %"class.egl::Config"* %6) #9
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = ptrtoint %"class.egl::Config"* %30 to i64
  %34 = bitcast %"class.egl::Config"** %2 to i64*
  store i64 %33, i64* %29, align 8
  store i64 %12, i64* %34, align 8
  br label %35

35:                                               ; preds = %28, %32, %14, %20, %13, %26
  %36 = phi i32 [ 1, %26 ], [ 0, %13 ], [ 2, %20 ], [ 1, %14 ], [ 2, %32 ], [ 1, %28 ]
  ret i32 %36
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_T_(%"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::SortConfig"* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_T_(%"class.egl::Config"** %0, %"class.egl::Config"** %1, %"class.egl::Config"** %2, %"class.egl::SortConfig"* dereferenceable(5) %4) #9
  %7 = load %"class.egl::Config"*, %"class.egl::Config"** %3, align 8
  %8 = load %"class.egl::Config"*, %"class.egl::Config"** %2, align 8
  %9 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %4, %"class.egl::Config"* %7, %"class.egl::Config"* %8) #9
  br i1 %9, label %10, label %32

10:                                               ; preds = %5
  %11 = ptrtoint %"class.egl::Config"* %7 to i64
  %12 = ptrtoint %"class.egl::Config"* %8 to i64
  %13 = bitcast %"class.egl::Config"** %2 to i64*
  %14 = bitcast %"class.egl::Config"** %3 to i64*
  store i64 %11, i64* %13, align 8
  store i64 %12, i64* %14, align 8
  %15 = add i32 %6, 1
  %16 = load %"class.egl::Config"*, %"class.egl::Config"** %2, align 8
  %17 = load %"class.egl::Config"*, %"class.egl::Config"** %1, align 8
  %18 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %4, %"class.egl::Config"* %16, %"class.egl::Config"* %17) #9
  br i1 %18, label %19, label %32

19:                                               ; preds = %10
  %20 = ptrtoint %"class.egl::Config"* %16 to i64
  %21 = ptrtoint %"class.egl::Config"* %17 to i64
  %22 = bitcast %"class.egl::Config"** %1 to i64*
  store i64 %20, i64* %22, align 8
  store i64 %21, i64* %13, align 8
  %23 = add i32 %6, 2
  %24 = load %"class.egl::Config"*, %"class.egl::Config"** %1, align 8
  %25 = load %"class.egl::Config"*, %"class.egl::Config"** %0, align 8
  %26 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %4, %"class.egl::Config"* %24, %"class.egl::Config"* %25) #9
  br i1 %26, label %27, label %32

27:                                               ; preds = %19
  %28 = ptrtoint %"class.egl::Config"* %24 to i64
  %29 = ptrtoint %"class.egl::Config"* %25 to i64
  %30 = bitcast %"class.egl::Config"** %0 to i64*
  store i64 %28, i64* %30, align 8
  store i64 %29, i64* %22, align 8
  %31 = add i32 %6, 3
  br label %32

32:                                               ; preds = %10, %27, %19, %5
  %33 = phi i32 [ %31, %27 ], [ %23, %19 ], [ %15, %10 ], [ %6, %5 ]
  ret i32 %33
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_S8_T_(%"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::SortConfig"* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_T_(%"class.egl::Config"** %0, %"class.egl::Config"** %1, %"class.egl::Config"** %2, %"class.egl::Config"** %3, %"class.egl::SortConfig"* dereferenceable(5) %5) #9
  %8 = load %"class.egl::Config"*, %"class.egl::Config"** %4, align 8
  %9 = load %"class.egl::Config"*, %"class.egl::Config"** %3, align 8
  %10 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %5, %"class.egl::Config"* %8, %"class.egl::Config"* %9) #9
  br i1 %10, label %11, label %41

11:                                               ; preds = %6
  %12 = ptrtoint %"class.egl::Config"* %8 to i64
  %13 = ptrtoint %"class.egl::Config"* %9 to i64
  %14 = bitcast %"class.egl::Config"** %3 to i64*
  %15 = bitcast %"class.egl::Config"** %4 to i64*
  store i64 %12, i64* %14, align 8
  store i64 %13, i64* %15, align 8
  %16 = add i32 %7, 1
  %17 = load %"class.egl::Config"*, %"class.egl::Config"** %3, align 8
  %18 = load %"class.egl::Config"*, %"class.egl::Config"** %2, align 8
  %19 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %5, %"class.egl::Config"* %17, %"class.egl::Config"* %18) #9
  br i1 %19, label %20, label %41

20:                                               ; preds = %11
  %21 = ptrtoint %"class.egl::Config"* %17 to i64
  %22 = ptrtoint %"class.egl::Config"* %18 to i64
  %23 = bitcast %"class.egl::Config"** %2 to i64*
  store i64 %21, i64* %23, align 8
  store i64 %22, i64* %14, align 8
  %24 = add i32 %7, 2
  %25 = load %"class.egl::Config"*, %"class.egl::Config"** %2, align 8
  %26 = load %"class.egl::Config"*, %"class.egl::Config"** %1, align 8
  %27 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %5, %"class.egl::Config"* %25, %"class.egl::Config"* %26) #9
  br i1 %27, label %28, label %41

28:                                               ; preds = %20
  %29 = ptrtoint %"class.egl::Config"* %25 to i64
  %30 = ptrtoint %"class.egl::Config"* %26 to i64
  %31 = bitcast %"class.egl::Config"** %1 to i64*
  store i64 %29, i64* %31, align 8
  store i64 %30, i64* %23, align 8
  %32 = add i32 %7, 3
  %33 = load %"class.egl::Config"*, %"class.egl::Config"** %1, align 8
  %34 = load %"class.egl::Config"*, %"class.egl::Config"** %0, align 8
  %35 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %5, %"class.egl::Config"* %33, %"class.egl::Config"* %34) #9
  br i1 %35, label %36, label %41

36:                                               ; preds = %28
  %37 = ptrtoint %"class.egl::Config"* %33 to i64
  %38 = ptrtoint %"class.egl::Config"* %34 to i64
  %39 = bitcast %"class.egl::Config"** %0 to i64*
  store i64 %37, i64* %39, align 8
  store i64 %38, i64* %31, align 8
  %40 = add i32 %7, 4
  br label %41

41:                                               ; preds = %11, %28, %36, %20, %6
  %42 = phi i32 [ %40, %36 ], [ %32, %28 ], [ %24, %20 ], [ %16, %11 ], [ %7, %6 ]
  ret i32 %42
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRN3egl10SortConfigEPPKNS1_6ConfigEEEvT0_S8_T_(%"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::SortConfig"* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 2
  %5 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 1
  %6 = tail call i32 @_ZNSt3__17__sort3IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_T_(%"class.egl::Config"** %0, %"class.egl::Config"** %5, %"class.egl::Config"** %4, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  %7 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 3
  %8 = icmp eq %"class.egl::Config"** %7, %1
  br i1 %8, label %9, label %10

9:                                                ; preds = %31, %3
  ret void

10:                                               ; preds = %3, %31
  %11 = phi %"class.egl::Config"** [ %32, %31 ], [ %7, %3 ]
  %12 = phi %"class.egl::Config"** [ %11, %31 ], [ %4, %3 ]
  %13 = load %"class.egl::Config"*, %"class.egl::Config"** %11, align 8
  %14 = load %"class.egl::Config"*, %"class.egl::Config"** %12, align 8
  %15 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %13, %"class.egl::Config"* %14) #9
  %16 = ptrtoint %"class.egl::Config"* %13 to i64
  br i1 %15, label %17, label %31

17:                                               ; preds = %10, %24
  %18 = phi %"class.egl::Config"** [ %19, %24 ], [ %11, %10 ]
  %19 = phi %"class.egl::Config"** [ %25, %24 ], [ %12, %10 ]
  %20 = bitcast %"class.egl::Config"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.egl::Config"** %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = icmp eq %"class.egl::Config"** %19, %0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %19, i64 -1
  %26 = load %"class.egl::Config"*, %"class.egl::Config"** %25, align 8
  %27 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %13, %"class.egl::Config"* %26) #9
  br i1 %27, label %17, label %28

28:                                               ; preds = %17, %24
  %29 = phi %"class.egl::Config"** [ %19, %24 ], [ %0, %17 ]
  %30 = bitcast %"class.egl::Config"** %29 to i64*
  store i64 %16, i64* %30, align 8
  br label %31

31:                                               ; preds = %28, %10
  %32 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %11, i64 1
  %33 = icmp eq %"class.egl::Config"** %32, %1
  br i1 %33, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN3egl10SortConfigEPPKNS1_6ConfigEEEbT0_S8_T_(%"class.egl::Config"**, %"class.egl::Config"**, %"class.egl::SortConfig"* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %4 = ptrtoint %"class.egl::Config"** %1 to i64
  %5 = ptrtoint %"class.egl::Config"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %33 [
    i64 0, label %70
    i64 1, label %70
    i64 2, label %8
    i64 3, label %18
    i64 4, label %22
    i64 5, label %27
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %1, i64 -1
  %10 = load %"class.egl::Config"*, %"class.egl::Config"** %9, align 8
  %11 = load %"class.egl::Config"*, %"class.egl::Config"** %0, align 8
  %12 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %10, %"class.egl::Config"* %11) #9
  br i1 %12, label %13, label %70

13:                                               ; preds = %8
  %14 = ptrtoint %"class.egl::Config"* %10 to i64
  %15 = ptrtoint %"class.egl::Config"* %11 to i64
  %16 = bitcast %"class.egl::Config"** %0 to i64*
  %17 = bitcast %"class.egl::Config"** %9 to i64*
  store i64 %14, i64* %16, align 8
  store i64 %15, i64* %17, align 8
  br label %70

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 1
  %20 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %1, i64 -1
  %21 = tail call i32 @_ZNSt3__17__sort3IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_T_(%"class.egl::Config"** %0, %"class.egl::Config"** %19, %"class.egl::Config"** %20, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %70

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 1
  %24 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 2
  %25 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %1, i64 -1
  %26 = tail call i32 @_ZNSt3__17__sort4IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_T_(%"class.egl::Config"** %0, %"class.egl::Config"** %23, %"class.egl::Config"** %24, %"class.egl::Config"** %25, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %70

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 1
  %29 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 2
  %30 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 3
  %31 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %1, i64 -1
  %32 = tail call i32 @_ZNSt3__17__sort5IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_S8_S8_T_(%"class.egl::Config"** %0, %"class.egl::Config"** %28, %"class.egl::Config"** %29, %"class.egl::Config"** %30, %"class.egl::Config"** %31, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  br label %70

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 2
  %35 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 1
  %36 = tail call i32 @_ZNSt3__17__sort3IRN3egl10SortConfigEPPKNS1_6ConfigEEEjT0_S8_S8_T_(%"class.egl::Config"** %0, %"class.egl::Config"** %35, %"class.egl::Config"** %34, %"class.egl::SortConfig"* dereferenceable(5) %2) #9
  %37 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %0, i64 3
  %38 = icmp eq %"class.egl::Config"** %37, %1
  br i1 %38, label %70, label %39

39:                                               ; preds = %33, %63
  %40 = phi %"class.egl::Config"** [ %65, %63 ], [ %37, %33 ]
  %41 = phi i32 [ %64, %63 ], [ 0, %33 ]
  %42 = phi %"class.egl::Config"** [ %40, %63 ], [ %34, %33 ]
  %43 = load %"class.egl::Config"*, %"class.egl::Config"** %40, align 8
  %44 = load %"class.egl::Config"*, %"class.egl::Config"** %42, align 8
  %45 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %43, %"class.egl::Config"* %44) #9
  %46 = ptrtoint %"class.egl::Config"* %43 to i64
  br i1 %45, label %47, label %63

47:                                               ; preds = %39, %54
  %48 = phi %"class.egl::Config"** [ %49, %54 ], [ %40, %39 ]
  %49 = phi %"class.egl::Config"** [ %55, %54 ], [ %42, %39 ]
  %50 = bitcast %"class.egl::Config"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.egl::Config"** %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = icmp eq %"class.egl::Config"** %49, %0
  br i1 %53, label %58, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %49, i64 -1
  %56 = load %"class.egl::Config"*, %"class.egl::Config"** %55, align 8
  %57 = tail call zeroext i1 @_ZNK3egl10SortConfigclEPKNS_6ConfigES3_(%"class.egl::SortConfig"* %2, %"class.egl::Config"* %43, %"class.egl::Config"* %56) #9
  br i1 %57, label %47, label %58

58:                                               ; preds = %47, %54
  %59 = phi %"class.egl::Config"** [ %49, %54 ], [ %0, %47 ]
  %60 = bitcast %"class.egl::Config"** %59 to i64*
  store i64 %46, i64* %60, align 8
  %61 = add i32 %41, 1
  %62 = icmp eq i32 %61, 8
  br i1 %62, label %67, label %63

63:                                               ; preds = %58, %39
  %64 = phi i32 [ %61, %58 ], [ %41, %39 ]
  %65 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %40, i64 1
  %66 = icmp eq %"class.egl::Config"** %65, %1
  br i1 %66, label %70, label %39

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.egl::Config"*, %"class.egl::Config"** %40, i64 1
  %69 = icmp eq %"class.egl::Config"** %68, %1
  br label %70

70:                                               ; preds = %63, %67, %33, %8, %13, %3, %3, %27, %22, %18
  %71 = phi i1 [ true, %27 ], [ true, %22 ], [ true, %18 ], [ true, %3 ], [ true, %3 ], [ true, %13 ], [ true, %8 ], [ true, %33 ], [ %69, %67 ], [ true, %63 ]
  ret i1 %71
}

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { optsize }
attributes #10 = { nounwind }
attributes #11 = { nounwind optsize }
attributes #12 = { noreturn nounwind optsize }
attributes #13 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIN3egl6ConfigENS1_13CompareConfigENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISM_EEEEEEDpOT_"}
