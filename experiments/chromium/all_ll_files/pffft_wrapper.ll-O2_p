; ModuleID = '../../third_party/webrtc/modules/audio_processing/utility/pffft_wrapper.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/utility/pffft_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::Pffft::FloatBuffer" = type { i64, float* }
%"class.webrtc::Pffft" = type { i64, i32, %struct.PFFFT_Setup*, float* }
%struct.PFFFT_Setup = type opaque

@_ZN6webrtc5Pffft11FloatBufferC1EmNS0_7FftTypeE = hidden unnamed_addr alias void (%"class.webrtc::Pffft::FloatBuffer"*, i64, i32), void (%"class.webrtc::Pffft::FloatBuffer"*, i64, i32)* @_ZN6webrtc5Pffft11FloatBufferC2EmNS0_7FftTypeE
@_ZN6webrtc5Pffft11FloatBufferD1Ev = hidden unnamed_addr alias void (%"class.webrtc::Pffft::FloatBuffer"*), void (%"class.webrtc::Pffft::FloatBuffer"*)* @_ZN6webrtc5Pffft11FloatBufferD2Ev
@_ZN6webrtc5PffftC1EmNS0_7FftTypeE = hidden unnamed_addr alias void (%"class.webrtc::Pffft"*, i64, i32), void (%"class.webrtc::Pffft"*, i64, i32)* @_ZN6webrtc5PffftC2EmNS0_7FftTypeE
@_ZN6webrtc5PffftD1Ev = hidden unnamed_addr alias void (%"class.webrtc::Pffft"*), void (%"class.webrtc::Pffft"*)* @_ZN6webrtc5PffftD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5Pffft11FloatBufferC2EmNS0_7FftTypeE(%"class.webrtc::Pffft::FloatBuffer"* nocapture, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %0, i64 0, i32 0
  %5 = icmp eq i32 %2, 0
  %6 = select i1 %5, i64 1, i64 2
  %7 = mul i64 %6, %1
  store i64 %7, i64* %4, align 8
  %8 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %0, i64 0, i32 1
  %9 = shl i64 %7, 2
  %10 = tail call i8* @pffft_aligned_malloc(i64 %9) #5
  %11 = bitcast float** %8 to i8**
  store i8* %10, i8** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5Pffft11FloatBufferD2Ev(%"class.webrtc::Pffft::FloatBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %0, i64 0, i32 1
  %3 = bitcast float** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  tail call void @pffft_aligned_free(i8* %4) #5
  ret void
}

declare void @pffft_aligned_free(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { float*, i64 } @_ZNK6webrtc5Pffft11FloatBuffer12GetConstViewEv(%"class.webrtc::Pffft::FloatBuffer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %0, i64 0, i32 1
  %3 = load float*, float** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = select i1 %6, float* null, float* %3
  %8 = insertvalue { float*, i64 } undef, float* %7, 0
  %9 = insertvalue { float*, i64 } %8, i64 %5, 1
  ret { float*, i64 } %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { float*, i64 } @_ZN6webrtc5Pffft11FloatBuffer7GetViewEv(%"class.webrtc::Pffft::FloatBuffer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %0, i64 0, i32 1
  %3 = load float*, float** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = select i1 %6, float* null, float* %3
  %8 = insertvalue { float*, i64 } undef, float* %7, 0
  %9 = insertvalue { float*, i64 } %8, i64 %5, 1
  ret { float*, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5PffftC2EmNS0_7FftTypeE(%"class.webrtc::Pffft"* nocapture, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 2
  %7 = trunc i64 %1 to i32
  %8 = icmp ne i32 %2, 0
  %9 = zext i1 %8 to i32
  %10 = tail call %struct.PFFFT_Setup* @pffft_new_setup(i32 %7, i32 %9) #5
  store %struct.PFFFT_Setup* %10, %struct.PFFFT_Setup** %6, align 8
  %11 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 3
  %12 = load i64, i64* %4, align 8
  %13 = load i32, i32* %5, align 8
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i64 1, i64 2
  %16 = shl i64 %12, 2
  %17 = mul i64 %16, %15
  %18 = tail call i8* @pffft_aligned_malloc(i64 %17) #5
  %19 = bitcast float** %11 to i8**
  store i8* %18, i8** %19, align 8
  ret void
}

declare %struct.PFFFT_Setup* @pffft_new_setup(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5PffftD2Ev(%"class.webrtc::Pffft"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 2
  %3 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %2, align 8
  tail call void @pffft_destroy_setup(%struct.PFFFT_Setup* %3) #5
  %4 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 3
  %5 = bitcast float** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @pffft_aligned_free(i8* %6) #5
  ret void
}

declare void @pffft_destroy_setup(%struct.PFFFT_Setup*) local_unnamed_addr #1

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN6webrtc5Pffft14IsValidFftSizeEmNS0_7FftTypeE(i64, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp eq i64 %0, 0
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = trunc i64 %0 to i32
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %4, %8
  %9 = phi i32 [ %12, %8 ], [ 0, %4 ]
  %10 = phi i32 [ %11, %8 ], [ %5, %4 ]
  %11 = sdiv i32 %10, 2
  %12 = add nuw nsw i32 %9, 1
  %13 = and i32 %11, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %4
  %16 = phi i32 [ 0, %4 ], [ %12, %8 ]
  %17 = phi i32 [ %5, %4 ], [ %11, %8 ]
  %18 = srem i32 %17, 3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %27

20:                                               ; preds = %2, %36
  %21 = phi i1 [ %42, %36 ], [ false, %2 ]
  ret i1 %21

22:                                               ; preds = %15, %22
  %23 = phi i32 [ %24, %22 ], [ %17, %15 ]
  %24 = sdiv i32 %23, 3
  %25 = srem i32 %24, 3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %22, label %27

27:                                               ; preds = %22, %15
  %28 = phi i32 [ %17, %15 ], [ %24, %22 ]
  %29 = srem i32 %28, 5
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %27, %31
  %32 = phi i32 [ %33, %31 ], [ %28, %27 ]
  %33 = sdiv i32 %32, 5
  %34 = srem i32 %33, 5
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %31, label %36

36:                                               ; preds = %31, %27
  %37 = phi i32 [ %28, %27 ], [ %33, %31 ]
  %38 = icmp eq i32 %1, 0
  %39 = select i1 %38, i32 5, i32 4
  %40 = icmp sge i32 %16, %39
  %41 = icmp eq i32 %37, 1
  %42 = and i1 %41, %40
  br label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc5Pffft13IsSimdEnabledEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i32 @pffft_simd_size() #5
  %2 = icmp sgt i32 %1, 1
  ret i1 %2
}

declare i32 @pffft_simd_size() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::Pffft::FloatBuffer"* @_ZNK6webrtc5Pffft12CreateBufferEv(%"class.webrtc::Pffft"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #6
  %3 = bitcast i8* %2 to %"class.webrtc::Pffft::FloatBuffer"*
  %4 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = bitcast i8* %2 to i64*
  %9 = icmp eq i32 %7, 0
  %10 = select i1 %9, i64 1, i64 2
  %11 = mul i64 %10, %5
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 8
  %13 = shl i64 %11, 2
  %14 = tail call i8* @pffft_aligned_malloc(i64 %13) #5
  %15 = bitcast i8* %12 to i8**
  store i8* %14, i8** %15, align 8
  ret %"class.webrtc::Pffft::FloatBuffer"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5Pffft16ForwardTransformERKNS0_11FloatBufferEPS1_b(%"class.webrtc::Pffft"* nocapture readonly, %"class.webrtc::Pffft::FloatBuffer"* nocapture readonly dereferenceable(16), %"class.webrtc::Pffft::FloatBuffer"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 2
  %6 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %1, i64 0, i32 1
  %8 = load float*, float** %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %2, i64 0, i32 1
  %10 = load float*, float** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 3
  %12 = load float*, float** %11, align 8
  br i1 %3, label %13, label %14

13:                                               ; preds = %4
  tail call void @pffft_transform_ordered(%struct.PFFFT_Setup* %6, float* %8, float* %10, float* %12, i32 0) #5
  br label %15

14:                                               ; preds = %4
  tail call void @pffft_transform(%struct.PFFFT_Setup* %6, float* %8, float* %10, float* %12, i32 0) #5
  br label %15

15:                                               ; preds = %14, %13
  ret void
}

declare void @pffft_transform_ordered(%struct.PFFFT_Setup*, float*, float*, float*, i32) local_unnamed_addr #1

declare void @pffft_transform(%struct.PFFFT_Setup*, float*, float*, float*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5Pffft17BackwardTransformERKNS0_11FloatBufferEPS1_b(%"class.webrtc::Pffft"* nocapture readonly, %"class.webrtc::Pffft::FloatBuffer"* nocapture readonly dereferenceable(16), %"class.webrtc::Pffft::FloatBuffer"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 2
  %6 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %1, i64 0, i32 1
  %8 = load float*, float** %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %2, i64 0, i32 1
  %10 = load float*, float** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 3
  %12 = load float*, float** %11, align 8
  br i1 %3, label %13, label %14

13:                                               ; preds = %4
  tail call void @pffft_transform_ordered(%struct.PFFFT_Setup* %6, float* %8, float* %10, float* %12, i32 1) #5
  br label %15

14:                                               ; preds = %4
  tail call void @pffft_transform(%struct.PFFFT_Setup* %6, float* %8, float* %10, float* %12, i32 1) #5
  br label %15

15:                                               ; preds = %14, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc5Pffft23FrequencyDomainConvolveERKNS0_11FloatBufferES3_PS1_f(%"class.webrtc::Pffft"* nocapture readonly, %"class.webrtc::Pffft::FloatBuffer"* nocapture readonly dereferenceable(16), %"class.webrtc::Pffft::FloatBuffer"* nocapture readonly dereferenceable(16), %"class.webrtc::Pffft::FloatBuffer"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::Pffft", %"class.webrtc::Pffft"* %0, i64 0, i32 2
  %7 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %1, i64 0, i32 1
  %9 = load float*, float** %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %2, i64 0, i32 1
  %11 = load float*, float** %10, align 8
  %12 = getelementptr inbounds %"class.webrtc::Pffft::FloatBuffer", %"class.webrtc::Pffft::FloatBuffer"* %3, i64 0, i32 1
  %13 = load float*, float** %12, align 8
  tail call void @pffft_zconvolve_accumulate(%struct.PFFFT_Setup* %7, float* %9, float* %11, float* %13, float %4) #5
  ret void
}

declare void @pffft_zconvolve_accumulate(%struct.PFFFT_Setup*, float*, float*, float*, float) local_unnamed_addr #1

declare i8* @pffft_aligned_malloc(i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
