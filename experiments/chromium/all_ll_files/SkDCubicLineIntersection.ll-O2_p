; ModuleID = '../../third_party/skia/src/pathops/SkDCubicLineIntersection.cpp'
source_filename = "../../third_party/skia/src/pathops/SkDCubicLineIntersection.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkIntersections = type <{ [13 x %struct.SkDPoint], [2 x %struct.SkDPoint], [2 x [13 x double]], [2 x i16], [2 x i8], i8, i8, i8, i8, [6 x i8] }>
%struct.SkDPoint = type { double, double }
%struct.SkDCubic = type { [4 x %struct.SkDPoint] }
%struct.SkDLine = type { [2 x %struct.SkDPoint] }
%class.LineCubicIntersections = type <{ %struct.SkDCubic*, %struct.SkDLine*, %class.SkIntersections*, i8, [7 x i8] }>
%struct.SkDCurve = type { %union.anon }
%union.anon = type { %struct.SkDCubic }

$_ZN22LineCubicIntersections19horizontalIntersectEdddb = comdat any

$_ZN22LineCubicIntersections17verticalIntersectEdddb = comdat any

$_ZN22LineCubicIntersections9intersectEv = comdat any

$_ZN22LineCubicIntersections12intersectRayEPd = comdat any

$_ZN22LineCubicIntersections19HorizontalIntersectERK8SkDCubicdPd = comdat any

$_ZN22LineCubicIntersections17VerticalIntersectERK8SkDCubicdPd = comdat any

$_ZN22LineCubicIntersections26addNearHorizontalEndPointsEddd = comdat any

$_ZN22LineCubicIntersections5pinTsEPdS0_P8SkDPointNS_9PinTPointE = comdat any

$_ZN22LineCubicIntersections15checkCoincidentEv = comdat any

$_ZN22LineCubicIntersections20addLineNearEndPointsEv = comdat any

$_ZNK8SkDPoint18approximatelyEqualERKS_ = comdat any

$_ZN22LineCubicIntersections24addNearVerticalEndPointsEddd = comdat any

$_ZN22LineCubicIntersections16addNearEndPointsEv = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15SkIntersections10horizontalERK8SkDCubicdddb(%class.SkIntersections*, %struct.SkDCubic* dereferenceable(64), double, double, double, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkDLine, align 8
  %8 = alloca %class.LineCubicIntersections, align 8
  %9 = bitcast %struct.SkDLine* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6
  %10 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %7, i64 0, i32 0, i64 0, i32 0
  %11 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %7, i64 0, i32 0, i64 0, i32 1
  %12 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %7, i64 0, i32 0, i64 1, i32 0
  %13 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %7, i64 0, i32 0, i64 1, i32 1
  store double %2, double* %10, align 8
  store double %4, double* %11, align 8
  store double %3, double* %12, align 8
  store double %4, double* %13, align 8
  %14 = bitcast %class.LineCubicIntersections* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  %15 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %8, i64 0, i32 0
  %16 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %8, i64 0, i32 1
  %17 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %8, i64 0, i32 2
  %18 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %8, i64 0, i32 3
  %19 = bitcast %class.LineCubicIntersections* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  store %struct.SkDCubic* %1, %struct.SkDCubic** %15, align 8
  store %struct.SkDLine* %7, %struct.SkDLine** %16, align 8
  store %class.SkIntersections* %0, %class.SkIntersections** %17, align 8
  store i8 1, i8* %18, align 8
  %20 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 6
  store i8 4, i8* %20, align 1
  %21 = call i32 @_ZN22LineCubicIntersections19horizontalIntersectEdddb(%class.LineCubicIntersections* nonnull %8, double %4, double %2, double %3, i1 zeroext %5)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6
  ret i32 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22LineCubicIntersections19horizontalIntersectEdddb(%class.LineCubicIntersections*, double, double, double, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %struct.SkDPoint, align 8
  %7 = alloca [3 x double], align 16
  %8 = alloca double, align 8
  %9 = alloca %struct.SkDPoint, align 8
  %10 = alloca double, align 8
  %11 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 2
  %13 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %14 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %13, i64 0, i32 0, i64 0
  %15 = tail call double @_ZN7SkDLine11ExactPointHERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16) %14, double %2, double %3, double %1) #6
  %16 = fcmp olt double %15, 0.000000e+00
  br i1 %16, label %22, label %17

17:                                               ; preds = %5
  %18 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  %19 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %20 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %19, i64 0, i32 0, i64 0
  %21 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %18, double 0.000000e+00, double %15, %struct.SkDPoint* dereferenceable(16) %20) #6
  br label %22

22:                                               ; preds = %17, %5
  %23 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %24 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 3
  %25 = tail call double @_ZN7SkDLine11ExactPointHERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16) %24, double %2, double %3, double %1) #6
  %26 = fcmp olt double %25, 0.000000e+00
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  %29 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %30 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %29, i64 0, i32 0, i64 3
  %31 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %28, double 1.000000e+00, double %25, %struct.SkDPoint* dereferenceable(16) %30) #6
  br label %32

32:                                               ; preds = %22, %27
  %33 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 3
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  tail call void @_ZN22LineCubicIntersections26addNearHorizontalEndPointsEddd(%class.LineCubicIntersections* %0, double %2, double %3, double %1)
  br label %37

37:                                               ; preds = %32, %36
  %38 = bitcast [3 x double]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #6
  %39 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0
  %40 = bitcast [3 x double]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -1, i64 24, i1 false)
  %41 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %42 = call i32 @_ZN22LineCubicIntersections19HorizontalIntersectERK8SkDCubicdPd(%struct.SkDCubic* dereferenceable(64) %41, double %1, double* nonnull %39)
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %57

44:                                               ; preds = %37
  %45 = bitcast double* %8 to i8*
  %46 = bitcast double* %8 to i64*
  %47 = bitcast %struct.SkDPoint* %9 to i8*
  %48 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %9, i64 0, i32 0
  %49 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %9, i64 0, i32 1
  %50 = bitcast double* %10 to i8*
  %51 = fsub double %3, %2
  %52 = bitcast %struct.SkDPoint* %6 to i8*
  %53 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %6, i64 0, i32 0
  %54 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %6, i64 0, i32 1
  %55 = zext i32 %42 to i64
  %56 = bitcast %struct.SkDPoint* %9 to i8*
  br label %58

57:                                               ; preds = %116, %37
  br i1 %4, label %119, label %121

58:                                               ; preds = %116, %44
  %59 = phi i64 [ 0, %44 ], [ %117, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  %60 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 %59
  %61 = bitcast double* %60 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -1, i64 16, i1 false)
  %63 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %64 = bitcast i64 %62 to double
  %65 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %63, double %64) #6
  %66 = extractvalue { double, double } %65, 0
  store double %66, double* %48, align 8
  store double %1, double* %49, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #6
  %67 = fsub double %66, %2
  %68 = fdiv double %67, %51
  store double %68, double* %10, align 8
  %69 = call zeroext i1 @_ZN22LineCubicIntersections5pinTsEPdS0_P8SkDPointNS_9PinTPointE(%class.LineCubicIntersections* %0, double* nonnull %8, double* nonnull %10, %struct.SkDPoint* nonnull %9, i32 1)
  br i1 %69, label %70, label %116

70:                                               ; preds = %58
  %71 = load double, double* %8, align 8
  %72 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  %73 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %72, i64 0, i32 5
  %74 = load i8, i8* %73, align 2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %111, label %76

76:                                               ; preds = %70, %102
  %77 = phi %class.SkIntersections* [ %103, %102 ], [ %72, %70 ]
  %78 = phi i64 [ %104, %102 ], [ 0, %70 ]
  %79 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %77, i64 0, i32 0, i64 %78, i32 0
  %80 = load double, double* %79, align 8
  %81 = load double, double* %48, align 8
  %82 = fcmp une double %80, %81
  br i1 %82, label %102, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %77, i64 0, i32 0, i64 %78, i32 1
  %85 = load double, double* %84, align 8
  %86 = load double, double* %49, align 8
  %87 = fcmp une double %85, %86
  br i1 %87, label %102, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %77, i64 0, i32 2, i64 0, i64 %78
  %90 = load double, double* %89, align 8
  %91 = fcmp oeq double %90, %71
  br i1 %91, label %116, label %92

92:                                               ; preds = %88
  %93 = fadd double %71, %90
  %94 = fmul double %93, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -1, i64 16, i1 false) #6
  %95 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %96 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %95, double %94) #6
  %97 = extractvalue { double, double } %96, 0
  store double %97, double* %53, align 8
  %98 = extractvalue { double, double } %96, 1
  store double %98, double* %54, align 8
  %99 = call zeroext i1 @_ZNK8SkDPoint18approximatelyEqualERKS_(%struct.SkDPoint* nonnull %6, %struct.SkDPoint* nonnull dereferenceable(16) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #6
  br i1 %99, label %116, label %100

100:                                              ; preds = %92
  %101 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  br label %102

102:                                              ; preds = %100, %83, %76
  %103 = phi %class.SkIntersections* [ %101, %100 ], [ %77, %76 ], [ %77, %83 ]
  %104 = add nuw nsw i64 %78, 1
  %105 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %103, i64 0, i32 5
  %106 = load i8, i8* %105, align 2
  %107 = zext i8 %106 to i64
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %76, label %109

109:                                              ; preds = %102
  %110 = load double, double* %8, align 8
  br label %111

111:                                              ; preds = %109, %70
  %112 = phi double [ %110, %109 ], [ %71, %70 ]
  %113 = phi %class.SkIntersections* [ %103, %109 ], [ %72, %70 ]
  %114 = load double, double* %10, align 8
  %115 = call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %113, double %112, double %114, %struct.SkDPoint* nonnull dereferenceable(16) %9) #6
  br label %116

116:                                              ; preds = %92, %88, %111, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  %117 = add nuw nsw i64 %59, 1
  %118 = icmp eq i64 %117, %55
  br i1 %118, label %57, label %58

119:                                              ; preds = %57
  %120 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  call void @_ZN15SkIntersections4flipEv(%class.SkIntersections* %120) #6
  br label %121

121:                                              ; preds = %119, %57
  call void @_ZN22LineCubicIntersections15checkCoincidentEv(%class.LineCubicIntersections* %0)
  %122 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  %123 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %122, i64 0, i32 5
  %124 = load i8, i8* %123, align 2
  %125 = zext i8 %124 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #6
  ret i32 %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15SkIntersections8verticalERK8SkDCubicdddb(%class.SkIntersections*, %struct.SkDCubic* dereferenceable(64), double, double, double, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkDLine, align 8
  %8 = alloca %class.LineCubicIntersections, align 8
  %9 = bitcast %struct.SkDLine* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6
  %10 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %7, i64 0, i32 0, i64 0, i32 0
  %11 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %7, i64 0, i32 0, i64 0, i32 1
  %12 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %7, i64 0, i32 0, i64 1, i32 0
  %13 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %7, i64 0, i32 0, i64 1, i32 1
  store double %4, double* %10, align 8
  store double %2, double* %11, align 8
  store double %4, double* %12, align 8
  store double %3, double* %13, align 8
  %14 = bitcast %class.LineCubicIntersections* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  %15 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %8, i64 0, i32 0
  %16 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %8, i64 0, i32 1
  %17 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %8, i64 0, i32 2
  %18 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %8, i64 0, i32 3
  %19 = bitcast %class.LineCubicIntersections* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  store %struct.SkDCubic* %1, %struct.SkDCubic** %15, align 8
  store %struct.SkDLine* %7, %struct.SkDLine** %16, align 8
  store %class.SkIntersections* %0, %class.SkIntersections** %17, align 8
  store i8 1, i8* %18, align 8
  %20 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 6
  store i8 4, i8* %20, align 1
  %21 = call i32 @_ZN22LineCubicIntersections17verticalIntersectEdddb(%class.LineCubicIntersections* nonnull %8, double %4, double %2, double %3, i1 zeroext %5)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22LineCubicIntersections17verticalIntersectEdddb(%class.LineCubicIntersections*, double, double, double, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %struct.SkDPoint, align 8
  %7 = alloca [3 x double], align 16
  %8 = alloca double, align 8
  %9 = alloca %struct.SkDPoint, align 8
  %10 = alloca double, align 8
  %11 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 2
  %13 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %14 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %13, i64 0, i32 0, i64 0
  %15 = tail call double @_ZN7SkDLine11ExactPointVERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16) %14, double %2, double %3, double %1) #6
  %16 = fcmp olt double %15, 0.000000e+00
  br i1 %16, label %22, label %17

17:                                               ; preds = %5
  %18 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  %19 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %20 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %19, i64 0, i32 0, i64 0
  %21 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %18, double 0.000000e+00, double %15, %struct.SkDPoint* dereferenceable(16) %20) #6
  br label %22

22:                                               ; preds = %17, %5
  %23 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %24 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 3
  %25 = tail call double @_ZN7SkDLine11ExactPointVERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16) %24, double %2, double %3, double %1) #6
  %26 = fcmp olt double %25, 0.000000e+00
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  %29 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %30 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %29, i64 0, i32 0, i64 3
  %31 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %28, double 1.000000e+00, double %25, %struct.SkDPoint* dereferenceable(16) %30) #6
  br label %32

32:                                               ; preds = %22, %27
  %33 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 3
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  tail call void @_ZN22LineCubicIntersections24addNearVerticalEndPointsEddd(%class.LineCubicIntersections* %0, double %2, double %3, double %1)
  br label %37

37:                                               ; preds = %32, %36
  %38 = bitcast [3 x double]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #6
  %39 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0
  %40 = bitcast [3 x double]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -1, i64 24, i1 false)
  %41 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %42 = call i32 @_ZN22LineCubicIntersections17VerticalIntersectERK8SkDCubicdPd(%struct.SkDCubic* dereferenceable(64) %41, double %1, double* nonnull %39)
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %37
  %45 = bitcast double* %8 to i8*
  %46 = bitcast double* %8 to i64*
  %47 = bitcast %struct.SkDPoint* %9 to i8*
  %48 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %9, i64 0, i32 0
  %49 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %9, i64 0, i32 1
  %50 = bitcast double* %10 to i8*
  %51 = fsub double %3, %2
  %52 = bitcast %struct.SkDPoint* %6 to i8*
  %53 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %6, i64 0, i32 0
  %54 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %6, i64 0, i32 1
  %55 = zext i32 %42 to i64
  %56 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %9, i64 0, i32 1
  %57 = bitcast double* %56 to i64*
  br label %59

58:                                               ; preds = %117, %37
  br i1 %4, label %120, label %122

59:                                               ; preds = %117, %44
  %60 = phi i64 [ 0, %44 ], [ %118, %117 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  %61 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 %60
  %62 = bitcast double* %61 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #6
  store i64 -1, i64* %57, align 8
  store double %1, double* %48, align 8
  %64 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %65 = bitcast i64 %63 to double
  %66 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %64, double %65) #6
  %67 = extractvalue { double, double } %66, 1
  store double %67, double* %49, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #6
  %68 = fsub double %67, %2
  %69 = fdiv double %68, %51
  store double %69, double* %10, align 8
  %70 = call zeroext i1 @_ZN22LineCubicIntersections5pinTsEPdS0_P8SkDPointNS_9PinTPointE(%class.LineCubicIntersections* %0, double* nonnull %8, double* nonnull %10, %struct.SkDPoint* nonnull %9, i32 1)
  br i1 %70, label %71, label %117

71:                                               ; preds = %59
  %72 = load double, double* %8, align 8
  %73 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  %74 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %73, i64 0, i32 5
  %75 = load i8, i8* %74, align 2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %112, label %77

77:                                               ; preds = %71, %103
  %78 = phi %class.SkIntersections* [ %104, %103 ], [ %73, %71 ]
  %79 = phi i64 [ %105, %103 ], [ 0, %71 ]
  %80 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %78, i64 0, i32 0, i64 %79, i32 0
  %81 = load double, double* %80, align 8
  %82 = load double, double* %48, align 8
  %83 = fcmp une double %81, %82
  br i1 %83, label %103, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %78, i64 0, i32 0, i64 %79, i32 1
  %86 = load double, double* %85, align 8
  %87 = load double, double* %49, align 8
  %88 = fcmp une double %86, %87
  br i1 %88, label %103, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %78, i64 0, i32 2, i64 0, i64 %79
  %91 = load double, double* %90, align 8
  %92 = fcmp oeq double %91, %72
  br i1 %92, label %117, label %93

93:                                               ; preds = %89
  %94 = fadd double %72, %91
  %95 = fmul double %94, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -1, i64 16, i1 false) #6
  %96 = load %struct.SkDCubic*, %struct.SkDCubic** %11, align 8
  %97 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %96, double %95) #6
  %98 = extractvalue { double, double } %97, 0
  store double %98, double* %53, align 8
  %99 = extractvalue { double, double } %97, 1
  store double %99, double* %54, align 8
  %100 = call zeroext i1 @_ZNK8SkDPoint18approximatelyEqualERKS_(%struct.SkDPoint* nonnull %6, %struct.SkDPoint* nonnull dereferenceable(16) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #6
  br i1 %100, label %117, label %101

101:                                              ; preds = %93
  %102 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  br label %103

103:                                              ; preds = %101, %84, %77
  %104 = phi %class.SkIntersections* [ %102, %101 ], [ %78, %77 ], [ %78, %84 ]
  %105 = add nuw nsw i64 %79, 1
  %106 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %104, i64 0, i32 5
  %107 = load i8, i8* %106, align 2
  %108 = zext i8 %107 to i64
  %109 = icmp ult i64 %105, %108
  br i1 %109, label %77, label %110

110:                                              ; preds = %103
  %111 = load double, double* %8, align 8
  br label %112

112:                                              ; preds = %110, %71
  %113 = phi double [ %111, %110 ], [ %72, %71 ]
  %114 = phi %class.SkIntersections* [ %104, %110 ], [ %73, %71 ]
  %115 = load double, double* %10, align 8
  %116 = call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %114, double %113, double %115, %struct.SkDPoint* nonnull dereferenceable(16) %9) #6
  br label %117

117:                                              ; preds = %93, %89, %112, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  %118 = add nuw nsw i64 %60, 1
  %119 = icmp eq i64 %118, %55
  br i1 %119, label %58, label %59

120:                                              ; preds = %58
  %121 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  call void @_ZN15SkIntersections4flipEv(%class.SkIntersections* %121) #6
  br label %122

122:                                              ; preds = %120, %58
  call void @_ZN22LineCubicIntersections15checkCoincidentEv(%class.LineCubicIntersections* %0)
  %123 = load %class.SkIntersections*, %class.SkIntersections** %12, align 8
  %124 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %123, i64 0, i32 5
  %125 = load i8, i8* %124, align 2
  %126 = zext i8 %125 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #6
  ret i32 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15SkIntersections9intersectERK8SkDCubicRK7SkDLine(%class.SkIntersections*, %struct.SkDCubic* dereferenceable(64), %struct.SkDLine* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.LineCubicIntersections, align 8
  %5 = bitcast %class.LineCubicIntersections* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  %6 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %4, i64 0, i32 0
  %7 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %4, i64 0, i32 2
  %9 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %4, i64 0, i32 3
  %10 = bitcast %class.LineCubicIntersections* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  store %struct.SkDCubic* %1, %struct.SkDCubic** %6, align 8
  store %struct.SkDLine* %2, %struct.SkDLine** %7, align 8
  store %class.SkIntersections* %0, %class.SkIntersections** %8, align 8
  %11 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 6
  store i8 4, i8* %11, align 1
  %12 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 7
  %13 = load i8, i8* %12, align 8, !range !2
  store i8 %13, i8* %9, align 8
  %14 = call i32 @_ZN22LineCubicIntersections9intersectEv(%class.LineCubicIntersections* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22LineCubicIntersections9intersectEv(%class.LineCubicIntersections*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.SkDPoint, align 8
  %3 = alloca [3 x double], align 16
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca %struct.SkDPoint, align 8
  %7 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 2
  %10 = load %struct.SkDLine*, %struct.SkDLine** %7, align 8
  %11 = load %struct.SkDCubic*, %struct.SkDCubic** %8, align 8
  %12 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %11, i64 0, i32 0, i64 0
  %13 = tail call double @_ZNK7SkDLine10exactPointERK8SkDPoint(%struct.SkDLine* %10, %struct.SkDPoint* dereferenceable(16) %12) #6
  %14 = fcmp olt double %13, 0.000000e+00
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = load %class.SkIntersections*, %class.SkIntersections** %9, align 8
  %17 = load %struct.SkDCubic*, %struct.SkDCubic** %8, align 8
  %18 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %17, i64 0, i32 0, i64 0
  %19 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %16, double 0.000000e+00, double %13, %struct.SkDPoint* dereferenceable(16) %18) #6
  br label %20

20:                                               ; preds = %15, %1
  %21 = load %struct.SkDLine*, %struct.SkDLine** %7, align 8
  %22 = load %struct.SkDCubic*, %struct.SkDCubic** %8, align 8
  %23 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %22, i64 0, i32 0, i64 3
  %24 = tail call double @_ZNK7SkDLine10exactPointERK8SkDPoint(%struct.SkDLine* %21, %struct.SkDPoint* dereferenceable(16) %23) #6
  %25 = fcmp olt double %24, 0.000000e+00
  br i1 %25, label %31, label %26

26:                                               ; preds = %20
  %27 = load %class.SkIntersections*, %class.SkIntersections** %9, align 8
  %28 = load %struct.SkDCubic*, %struct.SkDCubic** %8, align 8
  %29 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %28, i64 0, i32 0, i64 3
  %30 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %27, double 1.000000e+00, double %24, %struct.SkDPoint* dereferenceable(16) %29) #6
  br label %31

31:                                               ; preds = %20, %26
  %32 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN22LineCubicIntersections16addNearEndPointsEv(%class.LineCubicIntersections* %0)
  br label %36

36:                                               ; preds = %31, %35
  %37 = bitcast [3 x double]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #6
  %38 = getelementptr inbounds [3 x double], [3 x double]* %3, i64 0, i64 0
  %39 = bitcast [3 x double]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 -1, i64 24, i1 false)
  %40 = call i32 @_ZN22LineCubicIntersections12intersectRayEPd(%class.LineCubicIntersections* %0, double* nonnull %38)
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %36
  %43 = bitcast double* %4 to i8*
  %44 = bitcast double* %4 to i64*
  %45 = bitcast double* %5 to i8*
  %46 = bitcast %struct.SkDPoint* %6 to i8*
  %47 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %6, i64 0, i32 0
  %48 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %6, i64 0, i32 1
  %49 = bitcast %struct.SkDPoint* %2 to i8*
  %50 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %2, i64 0, i32 0
  %51 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %2, i64 0, i32 1
  %52 = zext i32 %40 to i64
  %53 = bitcast %struct.SkDPoint* %6 to i8*
  br label %59

54:                                               ; preds = %136, %36
  call void @_ZN22LineCubicIntersections15checkCoincidentEv(%class.LineCubicIntersections* %0)
  %55 = load %class.SkIntersections*, %class.SkIntersections** %9, align 8
  %56 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %55, i64 0, i32 5
  %57 = load i8, i8* %56, align 2
  %58 = zext i8 %57 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #6
  ret i32 %58

59:                                               ; preds = %136, %42
  %60 = phi i64 [ 0, %42 ], [ %137, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #6
  %61 = getelementptr inbounds [3 x double], [3 x double]* %3, i64 0, i64 %60
  %62 = bitcast double* %61 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %64 = bitcast i64 %63 to double
  %65 = load %struct.SkDCubic*, %struct.SkDCubic** %8, align 8
  %66 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %65, double %64) #6
  %67 = load %struct.SkDLine*, %struct.SkDLine** %7, align 8
  %68 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %67, i64 0, i32 0, i64 1, i32 0
  %69 = bitcast double* %68 to <2 x double>*
  %70 = load <2 x double>, <2 x double>* %69, align 8
  %71 = bitcast %struct.SkDLine* %67 to <2 x double>*
  %72 = load <2 x double>, <2 x double>* %71, align 8
  %73 = fsub <2 x double> %70, %72
  %74 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %73)
  %75 = extractelement <2 x double> %74, i32 0
  %76 = extractelement <2 x double> %74, i32 1
  %77 = fcmp ogt double %75, %76
  %78 = extractvalue { double, double } %66, 0
  %79 = extractelement <2 x double> %72, i32 0
  %80 = fsub double %78, %79
  %81 = extractvalue { double, double } %66, 1
  %82 = extractelement <2 x double> %72, i32 1
  %83 = fsub double %81, %82
  %84 = extractelement <2 x double> %73, i32 0
  %85 = extractelement <2 x double> %73, i32 1
  %86 = select i1 %77, double %84, double %85
  %87 = select i1 %77, double %80, double %83
  %88 = fdiv double %87, %86
  store double %88, double* %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -1, i64 16, i1 false)
  %89 = call zeroext i1 @_ZN22LineCubicIntersections5pinTsEPdS0_P8SkDPointNS_9PinTPointE(%class.LineCubicIntersections* %0, double* nonnull %4, double* nonnull %5, %struct.SkDPoint* nonnull %6, i32 0)
  br i1 %89, label %90, label %136

90:                                               ; preds = %59
  %91 = load double, double* %4, align 8
  %92 = load %class.SkIntersections*, %class.SkIntersections** %9, align 8
  %93 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %92, i64 0, i32 5
  %94 = load i8, i8* %93, align 2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %131, label %96

96:                                               ; preds = %90, %122
  %97 = phi %class.SkIntersections* [ %123, %122 ], [ %92, %90 ]
  %98 = phi i64 [ %124, %122 ], [ 0, %90 ]
  %99 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %97, i64 0, i32 0, i64 %98, i32 0
  %100 = load double, double* %99, align 8
  %101 = load double, double* %47, align 8
  %102 = fcmp une double %100, %101
  br i1 %102, label %122, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %97, i64 0, i32 0, i64 %98, i32 1
  %105 = load double, double* %104, align 8
  %106 = load double, double* %48, align 8
  %107 = fcmp une double %105, %106
  br i1 %107, label %122, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %97, i64 0, i32 2, i64 0, i64 %98
  %110 = load double, double* %109, align 8
  %111 = fcmp oeq double %110, %91
  br i1 %111, label %136, label %112

112:                                              ; preds = %108
  %113 = fadd double %91, %110
  %114 = fmul double %113, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -1, i64 16, i1 false) #6
  %115 = load %struct.SkDCubic*, %struct.SkDCubic** %8, align 8
  %116 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %115, double %114) #6
  %117 = extractvalue { double, double } %116, 0
  store double %117, double* %50, align 8
  %118 = extractvalue { double, double } %116, 1
  store double %118, double* %51, align 8
  %119 = call zeroext i1 @_ZNK8SkDPoint18approximatelyEqualERKS_(%struct.SkDPoint* nonnull %2, %struct.SkDPoint* nonnull dereferenceable(16) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #6
  br i1 %119, label %136, label %120

120:                                              ; preds = %112
  %121 = load %class.SkIntersections*, %class.SkIntersections** %9, align 8
  br label %122

122:                                              ; preds = %120, %103, %96
  %123 = phi %class.SkIntersections* [ %121, %120 ], [ %97, %96 ], [ %97, %103 ]
  %124 = add nuw nsw i64 %98, 1
  %125 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %123, i64 0, i32 5
  %126 = load i8, i8* %125, align 2
  %127 = zext i8 %126 to i64
  %128 = icmp ult i64 %124, %127
  br i1 %128, label %96, label %129

129:                                              ; preds = %122
  %130 = load double, double* %4, align 8
  br label %131

131:                                              ; preds = %129, %90
  %132 = phi double [ %130, %129 ], [ %91, %90 ]
  %133 = phi %class.SkIntersections* [ %123, %129 ], [ %92, %90 ]
  %134 = load double, double* %5, align 8
  %135 = call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %133, double %132, double %134, %struct.SkDPoint* nonnull dereferenceable(16) %6) #6
  br label %136

136:                                              ; preds = %112, %108, %131, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #6
  %137 = add nuw nsw i64 %60, 1
  %138 = icmp eq i64 %137, %52
  br i1 %138, label %54, label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15SkIntersections12intersectRayERK8SkDCubicRK7SkDLine(%class.SkIntersections*, %struct.SkDCubic* dereferenceable(64), %struct.SkDLine* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.LineCubicIntersections, align 8
  %5 = bitcast %class.LineCubicIntersections* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #6
  %6 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %4, i64 0, i32 0
  %7 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %4, i64 0, i32 2
  %9 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %4, i64 0, i32 3
  %10 = bitcast %class.LineCubicIntersections* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  store %struct.SkDCubic* %1, %struct.SkDCubic** %6, align 8
  store %struct.SkDLine* %2, %struct.SkDLine** %7, align 8
  store %class.SkIntersections* %0, %class.SkIntersections** %8, align 8
  store i8 1, i8* %9, align 8
  %11 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 6
  store i8 4, i8* %11, align 1
  %12 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 2, i64 0, i64 0
  %13 = call i32 @_ZN22LineCubicIntersections12intersectRayEPd(%class.LineCubicIntersections* nonnull %4, double* %12)
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 5
  store i8 %14, i8* %15, align 2
  %16 = and i32 %13, 255
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %22

18:                                               ; preds = %22
  %19 = zext i8 %32 to i32
  br label %20

20:                                               ; preds = %3, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #6
  ret i32 %21

22:                                               ; preds = %3, %22
  %23 = phi i64 [ %31, %22 ], [ 0, %3 ]
  %24 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 2, i64 0, i64 %23
  %25 = load double, double* %24, align 8
  %26 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %1, double %25) #6
  %27 = extractvalue { double, double } %26, 0
  %28 = extractvalue { double, double } %26, 1
  %29 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 0, i64 %23, i32 0
  store double %27, double* %29, align 8
  %30 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %0, i64 0, i32 0, i64 %23, i32 1
  store double %28, double* %30, align 8
  %31 = add nuw nsw i64 %23, 1
  %32 = load i8, i8* %15, align 2
  %33 = zext i8 %32 to i64
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %22, label %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22LineCubicIntersections12intersectRayEPd(%class.LineCubicIntersections*, double*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.SkDCubic, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca [6 x double], align 16
  %9 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 1
  %10 = load %struct.SkDLine*, %struct.SkDLine** %9, align 8
  %11 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %10, i64 0, i32 0, i64 1, i32 0
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %10, i64 0, i32 0, i64 0, i32 0
  %14 = load double, double* %13, align 8
  %15 = fsub double %12, %14
  %16 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %10, i64 0, i32 0, i64 1, i32 1
  %17 = load double, double* %16, align 8
  %18 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %10, i64 0, i32 0, i64 0, i32 1
  %19 = load double, double* %18, align 8
  %20 = fsub double %17, %19
  %21 = bitcast %struct.SkDCubic* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -1, i64 64, i1 false)
  %22 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %23 = load %struct.SkDCubic*, %struct.SkDCubic** %22, align 8
  %24 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 0, i32 1
  %25 = load double, double* %24, align 8
  %26 = load double, double* %18, align 8
  %27 = fsub double %25, %26
  %28 = fmul double %15, %27
  %29 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 0, i32 0
  %30 = load double, double* %29, align 8
  %31 = load double, double* %13, align 8
  %32 = fsub double %30, %31
  %33 = fmul double %20, %32
  %34 = fsub double %28, %33
  %35 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %3, i64 0, i32 0, i64 0, i32 0
  store double %34, double* %35, align 8
  %36 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 1, i32 1
  %37 = load double, double* %36, align 8
  %38 = fsub double %37, %26
  %39 = fmul double %15, %38
  %40 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 1, i32 0
  %41 = load double, double* %40, align 8
  %42 = load double, double* %13, align 8
  %43 = fsub double %41, %42
  %44 = fmul double %20, %43
  %45 = fsub double %39, %44
  %46 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %3, i64 0, i32 0, i64 1, i32 0
  store double %45, double* %46, align 8
  %47 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 2, i32 1
  %48 = load double, double* %47, align 8
  %49 = load double, double* %18, align 8
  %50 = fsub double %48, %49
  %51 = fmul double %15, %50
  %52 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 2, i32 0
  %53 = load double, double* %52, align 8
  %54 = load double, double* %13, align 8
  %55 = fsub double %53, %54
  %56 = fmul double %20, %55
  %57 = fsub double %51, %56
  %58 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %3, i64 0, i32 0, i64 2, i32 0
  store double %57, double* %58, align 8
  %59 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 3, i32 1
  %60 = load double, double* %59, align 8
  %61 = load double, double* %18, align 8
  %62 = fsub double %60, %61
  %63 = fmul double %15, %62
  %64 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %23, i64 0, i32 0, i64 3, i32 0
  %65 = load double, double* %64, align 8
  %66 = load double, double* %13, align 8
  %67 = fsub double %65, %66
  %68 = fmul double %20, %67
  %69 = fsub double %63, %68
  %70 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %3, i64 0, i32 0, i64 3, i32 0
  store double %69, double* %70, align 8
  %71 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %72 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %73 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %74 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  call void @_ZN8SkDCubic12CoefficientsEPKdPdS2_S2_S2_(double* nonnull %35, double* nonnull %4, double* nonnull %5, double* nonnull %6, double* nonnull %7) #6
  %75 = load double, double* %4, align 8
  %76 = load double, double* %5, align 8
  %77 = load double, double* %6, align 8
  %78 = load double, double* %7, align 8
  %79 = call i32 @_ZN8SkDCubic11RootsValidTEddddPd(double %75, double %76, double %77, double %78, double* %1) #6
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %81, label %152

81:                                               ; preds = %2
  %82 = zext i32 %79 to i64
  br label %85

83:                                               ; preds = %85
  %84 = icmp eq i64 %93, %82
  br i1 %84, label %152, label %85

85:                                               ; preds = %83, %81
  %86 = phi i64 [ 0, %81 ], [ %93, %83 ]
  %87 = getelementptr inbounds double, double* %1, i64 %86
  %88 = load double, double* %87, align 8
  %89 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* nonnull %3, double %88) #6
  %90 = extractvalue { double, double } %89, 0
  %91 = call double @llvm.fabs.f64(double %90) #6
  %92 = fcmp olt double %91, 0x3E80000000000000
  %93 = add nuw nsw i64 %86, 1
  br i1 %92, label %83, label %94

94:                                               ; preds = %85
  %95 = load %struct.SkDCubic*, %struct.SkDCubic** %22, align 8
  %96 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %95, i64 0, i32 0, i64 0, i32 1
  %97 = load double, double* %96, align 8
  %98 = load %struct.SkDLine*, %struct.SkDLine** %9, align 8
  %99 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %98, i64 0, i32 0, i64 0, i32 1
  %100 = load double, double* %99, align 8
  %101 = fsub double %97, %100
  %102 = fmul double %20, %101
  %103 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %95, i64 0, i32 0, i64 0, i32 0
  %104 = load double, double* %103, align 8
  %105 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %98, i64 0, i32 0, i64 0, i32 0
  %106 = load double, double* %105, align 8
  %107 = fsub double %104, %106
  %108 = fmul double %15, %107
  %109 = fadd double %102, %108
  %110 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %3, i64 0, i32 0, i64 0, i32 1
  store double %109, double* %110, align 8
  %111 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %95, i64 0, i32 0, i64 1, i32 1
  %112 = load double, double* %111, align 8
  %113 = load double, double* %99, align 8
  %114 = fsub double %112, %113
  %115 = fmul double %20, %114
  %116 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %95, i64 0, i32 0, i64 1, i32 0
  %117 = load double, double* %116, align 8
  %118 = load double, double* %105, align 8
  %119 = fsub double %117, %118
  %120 = fmul double %15, %119
  %121 = fadd double %115, %120
  %122 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %3, i64 0, i32 0, i64 1, i32 1
  store double %121, double* %122, align 8
  %123 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %95, i64 0, i32 0, i64 2, i32 1
  %124 = load double, double* %123, align 8
  %125 = load double, double* %99, align 8
  %126 = fsub double %124, %125
  %127 = fmul double %20, %126
  %128 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %95, i64 0, i32 0, i64 2, i32 0
  %129 = load double, double* %128, align 8
  %130 = load double, double* %105, align 8
  %131 = fsub double %129, %130
  %132 = fmul double %15, %131
  %133 = fadd double %127, %132
  %134 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %3, i64 0, i32 0, i64 2, i32 1
  store double %133, double* %134, align 8
  %135 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %95, i64 0, i32 0, i64 3, i32 1
  %136 = load double, double* %135, align 8
  %137 = load double, double* %99, align 8
  %138 = fsub double %136, %137
  %139 = fmul double %20, %138
  %140 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %95, i64 0, i32 0, i64 3, i32 0
  %141 = load double, double* %140, align 8
  %142 = load double, double* %105, align 8
  %143 = fsub double %141, %142
  %144 = fmul double %15, %143
  %145 = fadd double %139, %144
  %146 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %3, i64 0, i32 0, i64 3, i32 1
  store double %145, double* %146, align 8
  %147 = bitcast [6 x double]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %147) #6
  %148 = getelementptr inbounds [6 x double], [6 x double]* %8, i64 0, i64 0
  %149 = bitcast [6 x double]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %149, i8 -1, i64 48, i1 false)
  %150 = call i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double* nonnull %35, double* nonnull %148) #6
  %151 = call i32 @_ZNK8SkDCubic11searchRootsEPdidNS_10SearchAxisES0_(%struct.SkDCubic* nonnull %3, double* nonnull %148, i32 %150, double 0.000000e+00, i32 0, double* %1) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %147) #6
  br label %152

152:                                              ; preds = %83, %2, %94
  %153 = phi i32 [ %151, %94 ], [ %79, %2 ], [ %79, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #6
  ret i32 %153
}

declare { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8SkDCubic19horizontalIntersectEdPd(%struct.SkDCubic*, double, double*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN22LineCubicIntersections19HorizontalIntersectERK8SkDCubicdPd(%struct.SkDCubic* dereferenceable(64) %0, double %1, double* %2)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22LineCubicIntersections19HorizontalIntersectERK8SkDCubicdPd(%struct.SkDCubic* dereferenceable(64), double, double*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca [6 x double], align 16
  %9 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %10 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %11 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %12 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  %13 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %0, i64 0, i32 0, i64 0, i32 1
  call void @_ZN8SkDCubic12CoefficientsEPKdPdS2_S2_S2_(double* %13, double* nonnull %4, double* nonnull %5, double* nonnull %6, double* nonnull %7) #6
  %14 = load double, double* %7, align 8
  %15 = fsub double %14, %1
  store double %15, double* %7, align 8
  %16 = load double, double* %4, align 8
  %17 = load double, double* %5, align 8
  %18 = load double, double* %6, align 8
  %19 = call i32 @_ZN8SkDCubic11RootsValidTEddddPd(double %16, double %17, double %18, double %15, double* %2) #6
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %41

21:                                               ; preds = %3
  %22 = zext i32 %19 to i64
  br label %25

23:                                               ; preds = %25
  %24 = icmp eq i64 %34, %22
  br i1 %24, label %41, label %25

25:                                               ; preds = %23, %21
  %26 = phi i64 [ 0, %21 ], [ %34, %23 ]
  %27 = getelementptr inbounds double, double* %2, i64 %26
  %28 = load double, double* %27, align 8
  %29 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %0, double %28) #6
  %30 = extractvalue { double, double } %29, 1
  %31 = fsub double %30, %1
  %32 = call double @llvm.fabs.f64(double %31) #6
  %33 = fcmp olt double %32, 0x3E80000000000000
  %34 = add nuw nsw i64 %26, 1
  br i1 %33, label %23, label %35

35:                                               ; preds = %25
  %36 = bitcast [6 x double]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #6
  %37 = getelementptr inbounds [6 x double], [6 x double]* %8, i64 0, i64 0
  %38 = bitcast [6 x double]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -1, i64 48, i1 false)
  %39 = call i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double* %13, double* nonnull %37) #6
  %40 = call i32 @_ZNK8SkDCubic11searchRootsEPdidNS_10SearchAxisES0_(%struct.SkDCubic* %0, double* nonnull %37, i32 %39, double %1, i32 1, double* %2) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #6
  br label %41

41:                                               ; preds = %23, %3, %35
  %42 = phi i32 [ %40, %35 ], [ %19, %3 ], [ %19, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8SkDCubic17verticalIntersectEdPd(%struct.SkDCubic*, double, double*) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN22LineCubicIntersections17VerticalIntersectERK8SkDCubicdPd(%struct.SkDCubic* dereferenceable(64) %0, double %1, double* %2)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22LineCubicIntersections17VerticalIntersectERK8SkDCubicdPd(%struct.SkDCubic* dereferenceable(64), double, double*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca [6 x double], align 16
  %9 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %10 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %11 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %12 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  %13 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %0, i64 0, i32 0, i64 0, i32 0
  call void @_ZN8SkDCubic12CoefficientsEPKdPdS2_S2_S2_(double* %13, double* nonnull %4, double* nonnull %5, double* nonnull %6, double* nonnull %7) #6
  %14 = load double, double* %7, align 8
  %15 = fsub double %14, %1
  store double %15, double* %7, align 8
  %16 = load double, double* %4, align 8
  %17 = load double, double* %5, align 8
  %18 = load double, double* %6, align 8
  %19 = call i32 @_ZN8SkDCubic11RootsValidTEddddPd(double %16, double %17, double %18, double %15, double* %2) #6
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %41

21:                                               ; preds = %3
  %22 = zext i32 %19 to i64
  br label %25

23:                                               ; preds = %25
  %24 = icmp eq i64 %34, %22
  br i1 %24, label %41, label %25

25:                                               ; preds = %23, %21
  %26 = phi i64 [ 0, %21 ], [ %34, %23 ]
  %27 = getelementptr inbounds double, double* %2, i64 %26
  %28 = load double, double* %27, align 8
  %29 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %0, double %28) #6
  %30 = extractvalue { double, double } %29, 0
  %31 = fsub double %30, %1
  %32 = call double @llvm.fabs.f64(double %31) #6
  %33 = fcmp olt double %32, 0x3E80000000000000
  %34 = add nuw nsw i64 %26, 1
  br i1 %33, label %23, label %35

35:                                               ; preds = %25
  %36 = bitcast [6 x double]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #6
  %37 = getelementptr inbounds [6 x double], [6 x double]* %8, i64 0, i64 0
  %38 = bitcast [6 x double]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -1, i64 48, i1 false)
  %39 = call i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double* %13, double* nonnull %37) #6
  %40 = call i32 @_ZNK8SkDCubic11searchRootsEPdidNS_10SearchAxisES0_(%struct.SkDCubic* %0, double* nonnull %37, i32 %39, double %1, i32 0, double* %2) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #6
  br label %41

41:                                               ; preds = %23, %3, %35
  %42 = phi i32 [ %40, %35 ], [ %19, %3 ], [ %19, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22LineCubicIntersections26addNearHorizontalEndPointsEddd(%class.LineCubicIntersections*, double, double, double) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %7 = load %class.SkIntersections*, %class.SkIntersections** %5, align 8
  %8 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 5
  %9 = load i8, i8* %8, align 2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 2, i64 0, i64 0
  %13 = load double, double* %12, align 8
  %14 = fcmp oeq double %13, 0.000000e+00
  br i1 %14, label %25, label %15

15:                                               ; preds = %4, %11
  %16 = load %struct.SkDCubic*, %struct.SkDCubic** %6, align 8
  %17 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %16, i64 0, i32 0, i64 0
  %18 = tail call double @_ZN7SkDLine10NearPointHERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16) %17, double %1, double %2, double %3) #6
  %19 = fcmp olt double %18, 0.000000e+00
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = load %class.SkIntersections*, %class.SkIntersections** %5, align 8
  %22 = load %struct.SkDCubic*, %struct.SkDCubic** %6, align 8
  %23 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %22, i64 0, i32 0, i64 0
  %24 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %21, double 0.000000e+00, double %18, %struct.SkDPoint* dereferenceable(16) %23) #6
  br label %25

25:                                               ; preds = %11, %20, %15
  %26 = load %class.SkIntersections*, %class.SkIntersections** %5, align 8
  %27 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %26, i64 0, i32 5
  %28 = load i8, i8* %27, align 2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = zext i8 %28 to i64
  %32 = add nsw i64 %31, -1
  %33 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %26, i64 0, i32 2, i64 0, i64 %32
  %34 = load double, double* %33, align 8
  %35 = fcmp oeq double %34, 1.000000e+00
  br i1 %35, label %46, label %36

36:                                               ; preds = %30, %25
  %37 = load %struct.SkDCubic*, %struct.SkDCubic** %6, align 8
  %38 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %37, i64 0, i32 0, i64 3
  %39 = tail call double @_ZN7SkDLine10NearPointHERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16) %38, double %1, double %2, double %3) #6
  %40 = fcmp olt double %39, 0.000000e+00
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = load %class.SkIntersections*, %class.SkIntersections** %5, align 8
  %43 = load %struct.SkDCubic*, %struct.SkDCubic** %6, align 8
  %44 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %43, i64 0, i32 0, i64 3
  %45 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %42, double 1.000000e+00, double %39, %struct.SkDPoint* dereferenceable(16) %44) #6
  br label %46

46:                                               ; preds = %41, %36, %30
  tail call void @_ZN22LineCubicIntersections20addLineNearEndPointsEv(%class.LineCubicIntersections* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN22LineCubicIntersections5pinTsEPdS0_P8SkDPointNS_9PinTPointE(%class.LineCubicIntersections*, double*, double*, %struct.SkDPoint*, i32) local_unnamed_addr #3 comdat align 2 {
  %6 = load double, double* %2, align 8
  %7 = fcmp olt double %6, 0x3FF0000020000000
  %8 = fcmp ogt double %6, 0xBE80000000000000
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %142

10:                                               ; preds = %5
  %11 = load double, double* %1, align 8
  %12 = fcmp olt double %11, 0x3CD0000000000000
  %13 = fcmp ogt double %11, 0x3FEFFFFFFFFFFFF8
  %14 = select i1 %13, double 1.000000e+00, double %11
  %15 = select i1 %12, double 0.000000e+00, double %14
  store double %15, double* %1, align 8
  %16 = load double, double* %2, align 8
  %17 = fcmp olt double %16, 0x3CD0000000000000
  %18 = fcmp ogt double %16, 0x3FEFFFFFFFFFFFF8
  %19 = select i1 %18, double 1.000000e+00, double %16
  %20 = select i1 %17, double 0.000000e+00, double %19
  store double %20, double* %2, align 8
  %21 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 1
  %22 = load %struct.SkDLine*, %struct.SkDLine** %21, align 8
  %23 = tail call { double, double } @_ZNK7SkDLine5ptAtTEd(%struct.SkDLine* %22, double %20) #6
  %24 = extractvalue { double, double } %23, 0
  %25 = extractvalue { double, double } %23, 1
  %26 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %27 = load %struct.SkDCubic*, %struct.SkDCubic** %26, align 8
  %28 = tail call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %27, double %15) #6
  %29 = extractvalue { double, double } %28, 0
  %30 = extractvalue { double, double } %28, 1
  %31 = fsub double %24, %29
  %32 = tail call double @llvm.fabs.f64(double %31) #6
  %33 = fcmp olt double %32, 0x3EE0000000000000
  %34 = fsub double %25, %30
  %35 = tail call double @llvm.fabs.f64(double %34) #6
  %36 = fcmp olt double %35, 0x3EE0000000000000
  %37 = and i1 %33, %36
  br i1 %37, label %62, label %38

38:                                               ; preds = %10
  %39 = fmul double %31, %31
  %40 = fmul double %34, %34
  %41 = fadd double %39, %40
  %42 = tail call double @sqrt(double %41) #6
  %43 = fcmp olt double %29, %24
  %44 = select i1 %43, double %29, double %24
  %45 = fcmp olt double %25, %44
  %46 = select i1 %45, double %25, double %44
  %47 = fcmp olt double %30, %46
  %48 = select i1 %47, double %30, double %46
  %49 = fcmp olt double %24, %29
  %50 = select i1 %49, double %29, double %24
  %51 = fcmp olt double %50, %25
  %52 = select i1 %51, double %25, double %50
  %53 = fcmp olt double %52, %30
  %54 = select i1 %53, double %30, double %52
  %55 = fsub double -0.000000e+00, %48
  %56 = fcmp olt double %54, %55
  %57 = select i1 %56, double %55, double %54
  %58 = fadd double %57, %42
  %59 = fptrunc double %57 to float
  %60 = fptrunc double %58 to float
  %61 = tail call zeroext i1 @_Z16RoughlyEqualUlpsff(float %59, float %60) #6
  br i1 %61, label %62, label %142

62:                                               ; preds = %10, %38
  %63 = fcmp oeq double %20, 0.000000e+00
  %64 = fcmp oeq double %20, 1.000000e+00
  %65 = or i1 %63, %64
  br i1 %65, label %72, label %66

66:                                               ; preds = %62
  %67 = icmp eq i32 %4, 0
  %68 = fcmp une double %15, 0.000000e+00
  %69 = and i1 %67, %68
  %70 = fcmp une double %15, 1.000000e+00
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %75

72:                                               ; preds = %66, %62
  %73 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %3, i64 0, i32 0
  store double %24, double* %73, align 8
  %74 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %3, i64 0, i32 1
  store double %25, double* %74, align 8
  br label %83

75:                                               ; preds = %66
  %76 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %3, i64 0, i32 0
  br i1 %67, label %81, label %77

77:                                               ; preds = %75
  %78 = load double, double* %76, align 8
  %79 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %3, i64 0, i32 1
  %80 = load double, double* %79, align 8
  br label %83

81:                                               ; preds = %75
  store double %29, double* %76, align 8
  %82 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %3, i64 0, i32 1
  store double %30, double* %82, align 8
  br label %83

83:                                               ; preds = %77, %81, %72
  %84 = phi double [ %80, %77 ], [ %30, %81 ], [ %25, %72 ]
  %85 = phi double [ %78, %77 ], [ %29, %81 ], [ %24, %72 ]
  %86 = fptrunc double %85 to float
  %87 = fptrunc double %84 to float
  %88 = load %struct.SkDLine*, %struct.SkDLine** %21, align 8
  %89 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %88, i64 0, i32 0, i64 0, i32 0
  %90 = load double, double* %89, align 8
  %91 = fptrunc double %90 to float
  %92 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %88, i64 0, i32 0, i64 0, i32 1
  %93 = load double, double* %92, align 8
  %94 = fptrunc double %93 to float
  %95 = fcmp oeq float %86, %91
  %96 = fcmp oeq float %87, %94
  %97 = and i1 %95, %96
  br i1 %97, label %108, label %98

98:                                               ; preds = %83
  %99 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %88, i64 0, i32 0, i64 1, i32 0
  %100 = load double, double* %99, align 8
  %101 = fptrunc double %100 to float
  %102 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %88, i64 0, i32 0, i64 1, i32 1
  %103 = load double, double* %102, align 8
  %104 = fptrunc double %103 to float
  %105 = fcmp oeq float %86, %101
  %106 = fcmp oeq float %87, %104
  %107 = and i1 %105, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %98, %83
  %109 = phi double [ 0.000000e+00, %83 ], [ 1.000000e+00, %98 ]
  store double %109, double* %2, align 8
  br label %110

110:                                              ; preds = %108, %98
  %111 = load %struct.SkDCubic*, %struct.SkDCubic** %26, align 8
  %112 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %111, i64 0, i32 0, i64 0, i32 0
  %113 = load double, double* %112, align 8
  %114 = fptrunc double %113 to float
  %115 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %111, i64 0, i32 0, i64 0, i32 1
  %116 = load double, double* %115, align 8
  %117 = fptrunc double %116 to float
  %118 = fcmp oeq float %86, %114
  %119 = fcmp oeq float %87, %117
  %120 = and i1 %118, %119
  br i1 %120, label %121, label %126

121:                                              ; preds = %110
  %122 = load double, double* %1, align 8
  %123 = tail call double @llvm.fabs.f64(double %122) #6
  %124 = fcmp olt double %123, 0x3E80000000000000
  br i1 %124, label %125, label %126

125:                                              ; preds = %121
  store double 0.000000e+00, double* %1, align 8
  br label %142

126:                                              ; preds = %110, %121
  %127 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %111, i64 0, i32 0, i64 3, i32 0
  %128 = load double, double* %127, align 8
  %129 = fptrunc double %128 to float
  %130 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %111, i64 0, i32 0, i64 3, i32 1
  %131 = load double, double* %130, align 8
  %132 = fptrunc double %131 to float
  %133 = fcmp oeq float %86, %129
  %134 = fcmp oeq float %87, %132
  %135 = and i1 %133, %134
  br i1 %135, label %136, label %142

136:                                              ; preds = %126
  %137 = load double, double* %1, align 8
  %138 = fadd double %137, -1.000000e+00
  %139 = tail call double @llvm.fabs.f64(double %138) #6
  %140 = fcmp olt double %139, 0x3E80000000000000
  br i1 %140, label %141, label %142

141:                                              ; preds = %136
  store double 1.000000e+00, double* %1, align 8
  br label %142

142:                                              ; preds = %126, %38, %136, %141, %125, %5
  %143 = phi i1 [ false, %5 ], [ false, %38 ], [ true, %136 ], [ true, %141 ], [ true, %125 ], [ true, %126 ]
  ret i1 %143
}

declare i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections*, double, double, %struct.SkDPoint* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN15SkIntersections4flipEv(%class.SkIntersections*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22LineCubicIntersections15checkCoincidentEv(%class.LineCubicIntersections*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.SkDPoint, align 8
  %3 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 2
  %4 = load %class.SkIntersections*, %class.SkIntersections** %3, align 8
  %5 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %4, i64 0, i32 5
  %6 = load i8, i8* %5, align 2
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -1
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %1
  %11 = bitcast %struct.SkDPoint* %2 to i8*
  %12 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %2, i64 0, i32 0
  %13 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %2, i64 0, i32 1
  %14 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %15 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 1
  %16 = bitcast %struct.SkDPoint* %2 to i8*
  br label %18

17:                                               ; preds = %59, %1
  ret void

18:                                               ; preds = %63, %10
  %19 = phi %class.SkIntersections* [ %4, %10 ], [ %64, %63 ]
  %20 = phi i32 [ %8, %10 ], [ %61, %63 ]
  %21 = phi i32 [ 0, %10 ], [ %60, %63 ]
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %19, i64 0, i32 2, i64 0, i64 %22
  %24 = load double, double* %23, align 8
  %25 = add nsw i32 %21, 1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %19, i64 0, i32 2, i64 0, i64 %26
  %28 = load double, double* %27, align 8
  %29 = fadd double %24, %28
  %30 = fmul double %29, 5.000000e-01
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -1, i64 16, i1 false)
  %31 = load %struct.SkDCubic*, %struct.SkDCubic** %14, align 8
  %32 = call { double, double } @_ZNK8SkDCubic5ptAtTEd(%struct.SkDCubic* %31, double %30) #6
  %33 = extractvalue { double, double } %32, 0
  store double %33, double* %12, align 8
  %34 = extractvalue { double, double } %32, 1
  store double %34, double* %13, align 8
  %35 = load %struct.SkDLine*, %struct.SkDLine** %15, align 8
  %36 = call double @_ZNK7SkDLine9nearPointERK8SkDPointPb(%struct.SkDLine* %35, %struct.SkDPoint* nonnull dereferenceable(16) %2, i8* null) #6
  %37 = fcmp olt double %36, 0.000000e+00
  br i1 %37, label %59, label %38

38:                                               ; preds = %18
  %39 = load %class.SkIntersections*, %class.SkIntersections** %3, align 8
  %40 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %39, i64 0, i32 3, i64 0
  %41 = load i16, i16* %40, align 8
  %42 = zext i16 %41 to i32
  %43 = shl i32 1, %21
  %44 = and i32 %43, %42
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %38
  call void @_ZN15SkIntersections9removeOneEi(%class.SkIntersections* %39, i32 %21) #6
  %47 = add nsw i32 %20, -1
  br label %55

48:                                               ; preds = %38
  %49 = shl i32 1, %25
  %50 = and i32 %49, %42
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  call void @_ZN15SkIntersections9removeOneEi(%class.SkIntersections* %39, i32 %25) #6
  %53 = add nsw i32 %20, -1
  br label %55

54:                                               ; preds = %48
  call void @_ZN15SkIntersections13setCoincidentEi(%class.SkIntersections* %39, i32 %21) #6
  br label %55

55:                                               ; preds = %52, %54, %46
  %56 = phi i32 [ %21, %46 ], [ %21, %52 ], [ %25, %54 ]
  %57 = phi i32 [ %47, %46 ], [ %53, %52 ], [ %20, %54 ]
  %58 = load %class.SkIntersections*, %class.SkIntersections** %3, align 8
  call void @_ZN15SkIntersections13setCoincidentEi(%class.SkIntersections* %58, i32 %56) #6
  br label %59

59:                                               ; preds = %18, %55
  %60 = phi i32 [ %56, %55 ], [ %25, %18 ]
  %61 = phi i32 [ %57, %55 ], [ %20, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %63, label %17

63:                                               ; preds = %59
  %64 = load %class.SkIntersections*, %class.SkIntersections** %3, align 8
  br label %18
}

declare double @_ZN7SkDLine11ExactPointHERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16), double, double, double) local_unnamed_addr #2

declare double @_ZN7SkDLine10NearPointHERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16), double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22LineCubicIntersections20addLineNearEndPointsEv(%class.LineCubicIntersections*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 2
  %3 = bitcast %class.LineCubicIntersections* %0 to %struct.SkDCurve**
  %4 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 1
  %5 = load %class.SkIntersections*, %class.SkIntersections** %2, align 8
  %6 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %5, i64 0, i32 5
  %7 = load i8, i8* %6, align 2
  %8 = zext i8 %7 to i64
  %9 = icmp eq i8 %7, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %5, i64 0, i32 2, i64 1, i64 0
  %12 = load double, double* %11, align 8
  %13 = fcmp oeq double %12, 0.000000e+00
  br i1 %13, label %31, label %14

14:                                               ; preds = %10
  %15 = add nsw i64 %8, -1
  %16 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %5, i64 0, i32 2, i64 1, i64 %15
  %17 = load double, double* %16, align 8
  %18 = fcmp oeq double %17, 0.000000e+00
  br i1 %18, label %31, label %19

19:                                               ; preds = %1, %14
  %20 = load %struct.SkDCurve*, %struct.SkDCurve** %3, align 8
  %21 = load %struct.SkDLine*, %struct.SkDLine** %4, align 8
  %22 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %21, i64 0, i32 0, i64 0
  %23 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %21, i64 0, i32 0, i64 1
  %24 = tail call double @_ZNK8SkDCurve9nearPointEN6SkPath4VerbERK8SkDPointS4_(%struct.SkDCurve* %20, i32 4, %struct.SkDPoint* dereferenceable(16) %22, %struct.SkDPoint* dereferenceable(16) %23) #6
  %25 = fcmp olt double %24, 0.000000e+00
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  %27 = load %class.SkIntersections*, %class.SkIntersections** %2, align 8
  %28 = load %struct.SkDLine*, %struct.SkDLine** %4, align 8
  %29 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %28, i64 0, i32 0, i64 0
  %30 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %27, double %24, double 0.000000e+00, %struct.SkDPoint* dereferenceable(16) %29) #6
  br label %31

31:                                               ; preds = %10, %26, %19, %14
  %32 = load %class.SkIntersections*, %class.SkIntersections** %2, align 8
  %33 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %32, i64 0, i32 5
  %34 = load i8, i8* %33, align 2
  %35 = zext i8 %34 to i64
  %36 = icmp eq i8 %34, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %32, i64 0, i32 2, i64 1, i64 0
  %39 = load double, double* %38, align 8
  %40 = fcmp oeq double %39, 1.000000e+00
  br i1 %40, label %58, label %41

41:                                               ; preds = %37
  %42 = add nsw i64 %35, -1
  %43 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %32, i64 0, i32 2, i64 1, i64 %42
  %44 = load double, double* %43, align 8
  %45 = fcmp oeq double %44, 1.000000e+00
  br i1 %45, label %58, label %46

46:                                               ; preds = %41, %31
  %47 = load %struct.SkDCurve*, %struct.SkDCurve** %3, align 8
  %48 = load %struct.SkDLine*, %struct.SkDLine** %4, align 8
  %49 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %48, i64 0, i32 0, i64 1
  %50 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %48, i64 0, i32 0, i64 0
  %51 = tail call double @_ZNK8SkDCurve9nearPointEN6SkPath4VerbERK8SkDPointS4_(%struct.SkDCurve* %47, i32 4, %struct.SkDPoint* dereferenceable(16) %49, %struct.SkDPoint* dereferenceable(16) %50) #6
  %52 = fcmp olt double %51, 0.000000e+00
  br i1 %52, label %58, label %53

53:                                               ; preds = %46
  %54 = load %class.SkIntersections*, %class.SkIntersections** %2, align 8
  %55 = load %struct.SkDLine*, %struct.SkDLine** %4, align 8
  %56 = getelementptr inbounds %struct.SkDLine, %struct.SkDLine* %55, i64 0, i32 0, i64 1
  %57 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %54, double %51, double 1.000000e+00, %struct.SkDPoint* dereferenceable(16) %56) #6
  br label %58

58:                                               ; preds = %53, %46, %41, %37
  ret void
}

declare double @_ZNK8SkDCurve9nearPointEN6SkPath4VerbERK8SkDPointS4_(%struct.SkDCurve*, i32, %struct.SkDPoint* dereferenceable(16), %struct.SkDPoint* dereferenceable(16)) local_unnamed_addr #2

declare { double, double } @_ZNK7SkDLine5ptAtTEd(%struct.SkDLine*, double) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #4

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #5

declare zeroext i1 @_Z16RoughlyEqualUlpsff(float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8SkDPoint18approximatelyEqualERKS_(%struct.SkDPoint*, %struct.SkDPoint* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fsub double %4, %6
  %8 = tail call double @llvm.fabs.f64(double %7) #6
  %9 = fcmp olt double %8, 0x3E80000000000000
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %0, i64 0, i32 1
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %1, i64 0, i32 1
  %14 = load double, double* %13, align 8
  %15 = fsub double %12, %14
  %16 = tail call double @llvm.fabs.f64(double %15) #6
  %17 = fcmp olt double %16, 0x3E80000000000000
  br i1 %17, label %68, label %18

18:                                               ; preds = %10, %2
  %19 = fptrunc double %4 to float
  %20 = fptrunc double %6 to float
  %21 = tail call zeroext i1 @_Z16RoughlyEqualUlpsff(float %19, float %20) #6
  br i1 %21, label %22, label %68

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %0, i64 0, i32 1
  %24 = load double, double* %23, align 8
  %25 = getelementptr inbounds %struct.SkDPoint, %struct.SkDPoint* %1, i64 0, i32 1
  %26 = load double, double* %25, align 8
  %27 = fptrunc double %24 to float
  %28 = fptrunc double %26 to float
  %29 = tail call zeroext i1 @_Z16RoughlyEqualUlpsff(float %27, float %28) #6
  br i1 %29, label %30, label %68

30:                                               ; preds = %22
  %31 = load double, double* %3, align 8
  %32 = load double, double* %5, align 8
  %33 = fsub double %31, %32
  %34 = load double, double* %23, align 8
  %35 = load double, double* %25, align 8
  %36 = fsub double %34, %35
  %37 = fmul double %33, %33
  %38 = fmul double %36, %36
  %39 = fadd double %37, %38
  %40 = tail call double @sqrt(double %39) #6
  %41 = load double, double* %5, align 8
  %42 = load double, double* %3, align 8
  %43 = fcmp olt double %41, %42
  %44 = load double, double* %23, align 8
  %45 = select i1 %43, double %41, double %42
  %46 = fcmp olt double %44, %45
  %47 = load double, double* %25, align 8
  %48 = select i1 %46, double %44, double %45
  %49 = fcmp olt double %47, %48
  %50 = select i1 %49, double %47, double %48
  %51 = fcmp olt double %42, %41
  %52 = load double, double* %5, align 8
  %53 = load double, double* %3, align 8
  %54 = select i1 %51, double %52, double %53
  %55 = fcmp olt double %54, %44
  %56 = load double, double* %23, align 8
  %57 = select i1 %55, double %56, double %54
  %58 = fcmp olt double %57, %47
  %59 = load double, double* %25, align 8
  %60 = select i1 %58, double %59, double %57
  %61 = fsub double -0.000000e+00, %50
  %62 = fcmp olt double %60, %61
  %63 = select i1 %62, double %61, double %60
  %64 = fadd double %40, %63
  %65 = fptrunc double %63 to float
  %66 = fptrunc double %64 to float
  %67 = tail call zeroext i1 @_Z16AlmostPequalUlpsff(float %65, float %66) #6
  br label %68

68:                                               ; preds = %18, %22, %10, %30
  %69 = phi i1 [ %67, %30 ], [ true, %10 ], [ false, %22 ], [ false, %18 ]
  ret i1 %69
}

declare zeroext i1 @_Z16AlmostPequalUlpsff(float, float) local_unnamed_addr #2

declare double @_ZNK7SkDLine9nearPointERK8SkDPointPb(%struct.SkDLine*, %struct.SkDPoint* dereferenceable(16), i8*) local_unnamed_addr #2

declare void @_ZN15SkIntersections9removeOneEi(%class.SkIntersections*, i32) local_unnamed_addr #2

declare void @_ZN15SkIntersections13setCoincidentEi(%class.SkIntersections*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22LineCubicIntersections24addNearVerticalEndPointsEddd(%class.LineCubicIntersections*, double, double, double) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %7 = load %class.SkIntersections*, %class.SkIntersections** %5, align 8
  %8 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 5
  %9 = load i8, i8* %8, align 2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %7, i64 0, i32 2, i64 0, i64 0
  %13 = load double, double* %12, align 8
  %14 = fcmp oeq double %13, 0.000000e+00
  br i1 %14, label %25, label %15

15:                                               ; preds = %4, %11
  %16 = load %struct.SkDCubic*, %struct.SkDCubic** %6, align 8
  %17 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %16, i64 0, i32 0, i64 0
  %18 = tail call double @_ZN7SkDLine10NearPointVERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16) %17, double %1, double %2, double %3) #6
  %19 = fcmp olt double %18, 0.000000e+00
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = load %class.SkIntersections*, %class.SkIntersections** %5, align 8
  %22 = load %struct.SkDCubic*, %struct.SkDCubic** %6, align 8
  %23 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %22, i64 0, i32 0, i64 0
  %24 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %21, double 0.000000e+00, double %18, %struct.SkDPoint* dereferenceable(16) %23) #6
  br label %25

25:                                               ; preds = %11, %20, %15
  %26 = load %class.SkIntersections*, %class.SkIntersections** %5, align 8
  %27 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %26, i64 0, i32 5
  %28 = load i8, i8* %27, align 2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = zext i8 %28 to i64
  %32 = add nsw i64 %31, -1
  %33 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %26, i64 0, i32 2, i64 0, i64 %32
  %34 = load double, double* %33, align 8
  %35 = fcmp oeq double %34, 1.000000e+00
  br i1 %35, label %46, label %36

36:                                               ; preds = %30, %25
  %37 = load %struct.SkDCubic*, %struct.SkDCubic** %6, align 8
  %38 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %37, i64 0, i32 0, i64 3
  %39 = tail call double @_ZN7SkDLine10NearPointVERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16) %38, double %1, double %2, double %3) #6
  %40 = fcmp olt double %39, 0.000000e+00
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = load %class.SkIntersections*, %class.SkIntersections** %5, align 8
  %43 = load %struct.SkDCubic*, %struct.SkDCubic** %6, align 8
  %44 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %43, i64 0, i32 0, i64 3
  %45 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %42, double 1.000000e+00, double %39, %struct.SkDPoint* dereferenceable(16) %44) #6
  br label %46

46:                                               ; preds = %41, %36, %30
  tail call void @_ZN22LineCubicIntersections20addLineNearEndPointsEv(%class.LineCubicIntersections* %0)
  ret void
}

declare double @_ZN7SkDLine11ExactPointVERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16), double, double, double) local_unnamed_addr #2

declare double @_ZN7SkDLine10NearPointVERK8SkDPointddd(%struct.SkDPoint* dereferenceable(16), double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22LineCubicIntersections16addNearEndPointsEv(%class.LineCubicIntersections*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 2
  %3 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.LineCubicIntersections, %class.LineCubicIntersections* %0, i64 0, i32 0
  %5 = load %class.SkIntersections*, %class.SkIntersections** %2, align 8
  %6 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %5, i64 0, i32 5
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %5, i64 0, i32 2, i64 0, i64 0
  %11 = load double, double* %10, align 8
  %12 = fcmp oeq double %11, 0.000000e+00
  br i1 %12, label %24, label %13

13:                                               ; preds = %1, %9
  %14 = load %struct.SkDLine*, %struct.SkDLine** %3, align 8
  %15 = load %struct.SkDCubic*, %struct.SkDCubic** %4, align 8
  %16 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %15, i64 0, i32 0, i64 0
  %17 = tail call double @_ZNK7SkDLine9nearPointERK8SkDPointPb(%struct.SkDLine* %14, %struct.SkDPoint* dereferenceable(16) %16, i8* null) #6
  %18 = fcmp olt double %17, 0.000000e+00
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = load %class.SkIntersections*, %class.SkIntersections** %2, align 8
  %21 = load %struct.SkDCubic*, %struct.SkDCubic** %4, align 8
  %22 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %21, i64 0, i32 0, i64 0
  %23 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %20, double 0.000000e+00, double %17, %struct.SkDPoint* dereferenceable(16) %22) #6
  br label %24

24:                                               ; preds = %9, %19, %13
  %25 = load %class.SkIntersections*, %class.SkIntersections** %2, align 8
  %26 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %25, i64 0, i32 5
  %27 = load i8, i8* %26, align 2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = zext i8 %27 to i64
  %31 = add nsw i64 %30, -1
  %32 = getelementptr inbounds %class.SkIntersections, %class.SkIntersections* %25, i64 0, i32 2, i64 0, i64 %31
  %33 = load double, double* %32, align 8
  %34 = fcmp oeq double %33, 1.000000e+00
  br i1 %34, label %46, label %35

35:                                               ; preds = %29, %24
  %36 = load %struct.SkDLine*, %struct.SkDLine** %3, align 8
  %37 = load %struct.SkDCubic*, %struct.SkDCubic** %4, align 8
  %38 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %37, i64 0, i32 0, i64 3
  %39 = tail call double @_ZNK7SkDLine9nearPointERK8SkDPointPb(%struct.SkDLine* %36, %struct.SkDPoint* dereferenceable(16) %38, i8* null) #6
  %40 = fcmp olt double %39, 0.000000e+00
  br i1 %40, label %46, label %41

41:                                               ; preds = %35
  %42 = load %class.SkIntersections*, %class.SkIntersections** %2, align 8
  %43 = load %struct.SkDCubic*, %struct.SkDCubic** %4, align 8
  %44 = getelementptr inbounds %struct.SkDCubic, %struct.SkDCubic* %43, i64 0, i32 0, i64 3
  %45 = tail call i32 @_ZN15SkIntersections6insertEddRK8SkDPoint(%class.SkIntersections* %42, double 1.000000e+00, double %39, %struct.SkDPoint* dereferenceable(16) %44) #6
  br label %46

46:                                               ; preds = %41, %35, %29
  tail call void @_ZN22LineCubicIntersections20addLineNearEndPointsEv(%class.LineCubicIntersections* %0)
  ret void
}

declare double @_ZNK7SkDLine10exactPointERK8SkDPoint(%struct.SkDLine*, %struct.SkDPoint* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkDCubic12CoefficientsEPKdPdS2_S2_S2_(double*, double*, double*, double*, double*) local_unnamed_addr #2

declare i32 @_ZN8SkDCubic11RootsValidTEddddPd(double, double, double, double, double*) local_unnamed_addr #2

declare i32 @_ZN8SkDCubic11FindExtremaEPKdPd(double*, double*) local_unnamed_addr #2

declare i32 @_ZNK8SkDCubic11searchRootsEPdidNS_10SearchAxisES0_(%struct.SkDCubic*, double*, i32, double, i32, double*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
