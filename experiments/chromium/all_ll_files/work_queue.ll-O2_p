; ModuleID = '../../base/task/sequence_manager/work_queue.cc'
source_filename = "../../base/task/sequence_manager/work_queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::sequence_manager::internal::WorkQueue" = type <{ %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, i64, %"class.base::HeapHandle", i8*, %"class.base::sequence_manager::EnqueueOrder", i32, [4 x i8] }>
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type { i64, i64, i64, %"struct.base::sequence_manager::Task"*, %"class.std::__1::unique_ptr" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.25, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array.24", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.23", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array.24" = type { [4 x i8*] }
%class.scoped_refptr.25 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.26" }>
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::sequence_manager::internal::WorkQueueSets" = type { i8*, %"struct.std::__1::array", %"class.base::sequence_manager::internal::WorkQueueSets::Observer"* }
%"struct.std::__1::array" = type { [7 x %"class.base::internal::IntrusiveHeap"] }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"class.std::__1::__compressed_pair.1" }
%"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder" = type { %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"* }
%"class.base::sequence_manager::internal::WorkQueueSets::Observer" = type { i32 (...)** }
%"class.base::HeapHandle" = type { i64 }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr, %class.scoped_refptr.101, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type { %"class.base::sequence_manager::SequenceManager", %"class.base::sequence_manager::internal::SequencedTaskSource", %"class.base::sequence_manager::internal::TaskQueueSelector::Observer", %"class.base::RunLoop::NestingObserver", %class.scoped_refptr, %"class.base::sequence_manager::internal::EnqueueOrderGenerator", %"class.std::__1::unique_ptr.10", %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", i32, %"class.base::sequence_manager::internal::AtomicFlagSet", i32, %"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly", %"class.base::WeakPtrFactory" }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.base::sequence_manager::internal::SequencedTaskSource" = type { i32 (...)** }
%"class.base::sequence_manager::internal::TaskQueueSelector::Observer" = type { i32 (...)** }
%"class.base::RunLoop::NestingObserver" = type { i32 (...)** }
%"class.base::sequence_manager::internal::EnqueueOrderGenerator" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::sequence_manager::internal::ThreadController"* }
%"class.base::sequence_manager::internal::ThreadController" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::Settings" = type <{ i32, i8, [3 x i8], %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings" = type { double }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.16", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.5", i64, [64 x %"class.base::RepeatingCallback.136"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.16", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.base::RepeatingCallback.136" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly" = type { i32, %"class.base::circular_deque", %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.std::__1::array.27", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::uniform_real_distribution", %"class.base::sequence_manager::internal::TaskQueueSelector", %"class.base::ObserverList", %"class.base::ObserverList.36", %"class.std::__1::set", %"class.std::__1::unique_ptr.48", i8, %"class.base::TimeTicks", %"class.std::__1::set.54", %"class.std::__1::map", %"class.std::__1::map", i8, i8, %"class.std::__1::deque", %"class.base::sequence_manager::SequenceManager::Observer"*, %"class.base::ObserverList.81", %"class.std::__1::multiset" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask"*, i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask" = type <{ %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i32, [4 x i8] }>
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%"struct.std::__1::array.27" = type { [64 x i8] }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.std::__1::uniform_real_distribution" = type { %"class.std::__1::uniform_real_distribution<double>::param_type" }
%"class.std::__1::uniform_real_distribution<double>::param_type" = type { double, double }
%"class.base::sequence_manager::internal::TaskQueueSelector" = type { %"class.base::sequence_manager::internal::WorkQueueSets::Observer", %class.scoped_refptr, %"struct.std::__1::array.28", %"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker", %"class.base::sequence_manager::internal::WorkQueueSets", %"class.base::sequence_manager::internal::WorkQueueSets", i64, %"class.base::sequence_manager::internal::TaskQueueSelector::Observer"* }
%"struct.std::__1::array.28" = type { [7 x i32] }
%"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.29", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.31" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.36" = type <{ %"class.std::__1::vector.29", %"class.base::LinkedList.37", i64, i32, [4 x i8] }>
%"class.base::LinkedList.37" = type { %"class.base::LinkNode.38" }
%"class.base::LinkNode.38" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.base::sequence_manager::internal::RealTimeDomain"* }
%"class.base::sequence_manager::internal::RealTimeDomain" = type opaque
%"class.std::__1::set.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.77" }
%"struct.std::__1::__split_buffer" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"class.std::__1::__compressed_pair.72" }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask" = type { %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i8*, %"class.base::sequence_manager::TaskQueue::TaskTiming", i8, i32 }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.71" }
%"class.base::time_internal::TimeBase.71" = type { i64 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"** }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::ObserverList.81" = type <{ %"class.std::__1::vector.29", %"class.base::LinkedList.82", i64, i32, [4 x i8] }>
%"class.base::LinkedList.82" = type { %"class.base::LinkNode.83" }
%"class.base::LinkNode.83" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.85" }
%"class.std::__1::__tree.85" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.94 }
%class.scoped_refptr.94 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.95", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.95" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.96" }
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__atomic_base.98" }
%"struct.std::__1::__atomic_base.98" = type { %"struct.std::__1::__cxx_atomic_impl.99" }
%"struct.std::__1::__cxx_atomic_impl.99" = type { %"struct.std::__1::__cxx_atomic_base_impl.100" }
%"struct.std::__1::__cxx_atomic_base_impl.100" = type { i8 }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.101 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.102", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.102" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.103", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__cxx_atomic_impl.106" }
%"struct.std::__1::__cxx_atomic_impl.106" = type { %"struct.std::__1::__cxx_atomic_base_impl.107" }
%"struct.std::__1::__cxx_atomic_base_impl.107" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.108, i8, [7 x i8] }>
%class.scoped_refptr.108 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.109", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.109" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.110" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type opaque
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.129", %"class.base::RepeatingCallback.130", %"class.absl::optional.131", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.120", %"struct.std::__1::less.127" }>
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less.127" = type { i8 }
%"class.base::trace_event::BlameContext" = type opaque
%"class.base::RepeatingCallback.129" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.130" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::WorkQueue::TaskPusher" = type <{ %"class.base::sequence_manager::internal::WorkQueue"*, i8, [7 x i8] }>
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.137" }
%"union.absl::variant_internal::DestructibleUnionImpl.137" = type { %"union.absl::variant_internal::DestructibleUnionImpl.138" }
%"union.absl::variant_internal::DestructibleUnionImpl.138" = type { %"union.absl::variant_internal::DestructibleUnionImpl.139" }
%"union.absl::variant_internal::DestructibleUnionImpl.139" = type { %"union.absl::variant_internal::DestructibleUnionImpl.140" }
%"union.absl::variant_internal::DestructibleUnionImpl.140" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.143 }
%union.anon.143 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.172" }
%"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source" = type { [1024 x i8], i8, [7 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.base::StackAllocator" }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"struct.base::sequence_manager::Task"**, %"struct.base::sequence_manager::Task"**, %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.base::sequence_manager::Task"** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9push_backES3_ = comdat any

$_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE10push_frontES3_ = comdat any

$_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9pop_frontEv = comdat any

$_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev = comdat any

$_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE11SetCapacityEm = comdat any

$_ZNSt3__16vectorIN4base16sequence_manager4TaskENS1_14StackAllocatorIS3_Lm8EEEE7reserveEm = comdat any

$_ZNSt3__16vectorIN4base16sequence_manager4TaskENS1_14StackAllocatorIS3_Lm8EEEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

@_ZN4base16sequence_manager8internal9WorkQueueC1EPNS1_13TaskQueueImplEPKcNS3_13WorkQueueTypeE = hidden unnamed_addr alias void (%"class.base::sequence_manager::internal::WorkQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, i8*, i32), void (%"class.base::sequence_manager::internal::WorkQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, i8*, i32)* @_ZN4base16sequence_manager8internal9WorkQueueC2EPNS1_13TaskQueueImplEPKcNS3_13WorkQueueTypeE
@_ZN4base16sequence_manager8internal9WorkQueueD1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::internal::WorkQueue"*), void (%"class.base::sequence_manager::internal::WorkQueue"*)* @_ZN4base16sequence_manager8internal9WorkQueueD2Ev
@_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherC1EPS2_ = hidden unnamed_addr alias void (%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"*, %"class.base::sequence_manager::internal::WorkQueue"*), void (%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"*, %"class.base::sequence_manager::internal::WorkQueue"*)* @_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherC2EPS2_
@_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherC1EOS3_ = hidden unnamed_addr alias void (%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"*, %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"*), void (%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"*, %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"*)* @_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherC2EOS3_
@_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherD1Ev = hidden unnamed_addr alias void (%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"*), void (%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"*)* @_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueueC2EPNS1_13TaskQueueImplEPKcNS3_13WorkQueueTypeE(%"class.base::sequence_manager::internal::WorkQueue"* nocapture, %"class.base::sequence_manager::internal::TaskQueueImpl"*, i8*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 2
  %6 = bitcast %"class.base::sequence_manager::internal::WorkQueue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false)
  store %"class.base::sequence_manager::internal::TaskQueueImpl"* %1, %"class.base::sequence_manager::internal::TaskQueueImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 3
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 5
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 7
  store i32 %3, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base16sequence_manager8internal9WorkQueue7AsValueENS_9TimeTicksE(%"class.base::Value"* noalias sret, %"class.base::sequence_manager::internal::WorkQueue"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Value", align 8
  %5 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 7) #14
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %6, align 8
  %8 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %22, label %15

15:                                               ; preds = %9
  %16 = add i64 %13, 1
  %17 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  %20 = select i1 %19, i64 0, i64 %16
  %21 = bitcast %"class.base::Value"* %4 to i8*
  br label %23

22:                                               ; preds = %32, %3, %9
  ret void

23:                                               ; preds = %39, %15
  %24 = phi i64 [ %20, %15 ], [ %46, %39 ]
  %25 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %7, %15 ], [ %41, %39 ]
  %26 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %25, i64 0, i32 3
  %27 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %26, align 8
  %28 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %27, i64 %24
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #14
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl11TaskAsValueERKNS0_4TaskENS_9TimeTicksE(%"class.base::Value"* nonnull sret %4, %"struct.base::sequence_manager::Task"* dereferenceable(128) %28, i64 %2) #14
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* %0, %"class.base::Value"* nonnull dereferenceable(32) %4) #14
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #14
  %29 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %25, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %24, %30
  br i1 %31, label %32, label %39

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %33, align 8
  %35 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %34, null
  br i1 %35, label %22, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %34, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %39

39:                                               ; preds = %23, %36
  %40 = phi i64 [ %38, %36 ], [ %24, %23 ]
  %41 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %34, %36 ], [ %25, %23 ]
  %42 = add i64 %40, 1
  %43 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %41, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %42, %44
  %46 = select i1 %45, i64 0, i64 %42
  br label %23
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl11TaskAsValueERKNS0_4TaskENS_9TimeTicksE(%"class.base::Value"* sret, %"struct.base::sequence_manager::Task"* dereferenceable(128), i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueueD2Ev(%"class.base::sequence_manager::internal::WorkQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %2, align 8
  %4 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, null
  br i1 %4, label %49, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::sequence_manager::internal::WorkQueue"* %0 to i64*
  br label %7

7:                                                ; preds = %5, %46
  %8 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %47, %46 ], [ %3, %5 ]
  %9 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %8, i64 0, i32 4
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  store %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* null, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %10, align 8
  %13 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %2, align 8
  store i64 %12, i64* %6, align 8
  %14 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %13, null
  %15 = inttoptr i64 %12 to %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*
  br i1 %14, label %46, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %13, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %13, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %36, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %13, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %13, i64 0, i32 3
  br label %25

25:                                               ; preds = %25, %22
  %26 = phi i64 [ %20, %22 ], [ %34, %25 ]
  %27 = add i64 %26, 1
  %28 = load i64, i64* %23, align 8
  %29 = icmp eq i64 %27, %28
  %30 = select i1 %29, i64 0, i64 %27
  store i64 %30, i64* %19, align 8
  %31 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %24, align 8
  %32 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %31, i64 %30
  tail call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %32) #14
  %33 = load i64, i64* %17, align 8
  %34 = load i64, i64* %19, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %36, label %25

36:                                               ; preds = %25, %16
  %37 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %13, i64 0, i32 3
  %38 = bitcast %"struct.base::sequence_manager::Task"** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  tail call void @_ZdaPv(i8* nonnull %39) #15
  br label %42

42:                                               ; preds = %41, %36
  %43 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %13, i64 0, i32 4
  tail call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* %43) #14
  %44 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %13 to i8*
  tail call void @_ZdlPv(i8* %44) #15
  %45 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %2, align 8
  br label %46

46:                                               ; preds = %7, %42
  %47 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %15, %7 ], [ %45, %42 ]
  %48 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %47, null
  br i1 %48, label %49, label %7

49:                                               ; preds = %46, %1
  %50 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 1
  %51 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #14
  %52 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* %52) #14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.base::sequence_manager::Task"* @_ZNK4base16sequence_manager8internal9WorkQueue12GetFrontTaskEv(%"class.base::sequence_manager::internal::WorkQueue"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %6, align 8
  %8 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, i64 0, i32 3
  %9 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %8, align 8
  %10 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 1
  %13 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  %16 = select i1 %15, i64 0, i64 %12
  %17 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %9, i64 %16
  br label %18

18:                                               ; preds = %1, %5
  %19 = phi %"struct.base::sequence_manager::Task"* [ %17, %5 ], [ null, %1 ]
  ret %"struct.base::sequence_manager::Task"* %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.base::sequence_manager::Task"* @_ZNK4base16sequence_manager8internal9WorkQueue11GetBackTaskEv(%"class.base::sequence_manager::internal::WorkQueue"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %6, align 8
  %8 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, i64 0, i32 3
  %9 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %8, align 8
  %10 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %9, i64 %11
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi %"struct.base::sequence_manager::Task"* [ %12, %5 ], [ null, %1 ]
  ret %"struct.base::sequence_manager::Task"* %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager8internal9WorkQueue14BlockedByFenceEv(%"class.base::sequence_manager::internal::WorkQueue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %10, align 8
  %12 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 3
  %13 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %12, align 8
  %14 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 1
  %17 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  %20 = select i1 %19, i64 0, i64 %16
  %21 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %13, i64 %20, i32 5, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp uge i64 %22, %3
  br label %24

24:                                               ; preds = %5, %9, %1
  %25 = phi i1 [ false, %1 ], [ true, %5 ], [ %23, %9 ]
  ret i1 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager8internal9WorkQueue24GetFrontTaskEnqueueOrderEPNS0_12EnqueueOrderE(%"class.base::sequence_manager::internal::WorkQueue"* nocapture readonly, %"class.base::sequence_manager::EnqueueOrder"* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %10, align 8
  %12 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 3
  %13 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %12, align 8
  %14 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  br i1 %9, label %16, label %20

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %15, 1
  br label %29

20:                                               ; preds = %6
  %21 = add i64 %15, 1
  %22 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  %25 = select i1 %24, i64 0, i64 %21
  %26 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %13, i64 %25, i32 5, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %8
  br i1 %28, label %29, label %37

29:                                               ; preds = %16, %20
  %30 = phi i64 [ %19, %16 ], [ %21, %20 ]
  %31 = phi i64 [ %18, %16 ], [ %23, %20 ]
  %32 = icmp eq i64 %30, %31
  %33 = select i1 %32, i64 0, i64 %30
  %34 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %13, i64 %33, i32 5, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder"* %1, i64 0, i32 0
  store i64 %35, i64* %36, align 8
  br label %37

37:                                               ; preds = %20, %2, %29
  %38 = phi i1 [ true, %29 ], [ false, %20 ], [ false, %2 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue4PushENS0_4TaskE(%"class.base::sequence_manager::internal::WorkQueue"*, %"struct.base::sequence_manager::Task"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::sequence_manager::Task", align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* nonnull %3, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1) #14
  call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9push_backES3_(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %4, %"struct.base::sequence_manager::Task"* nonnull %3)
  call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* nonnull %3) #14
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 1
  %10 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %9, align 8
  %11 = icmp eq %"class.base::sequence_manager::internal::WorkQueueSets"* %10, null
  br i1 %11, label %35, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = load i64, i64* %5, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %20, align 8
  %22 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %21, i64 0, i32 3
  %23 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %22, align 8
  %24 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %21, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 1
  %27 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %21, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %26, %28
  %30 = select i1 %29, i64 0, i64 %26
  %31 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %23, i64 %30, i32 5, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, %14
  br i1 %33, label %34, label %35

34:                                               ; preds = %19, %12
  call void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnTaskPushedToEmptyQueueEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* nonnull %10, %"class.base::sequence_manager::internal::WorkQueue"* %0) #14
  br label %35

35:                                               ; preds = %19, %16, %34, %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9push_backES3_(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"*, %"struct.base::sequence_manager::Task"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %6, align 8
  %8 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 1
  %11 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %10, align 8
  br label %29

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = tail call i8* @_Znwm(i64 40) #15
  %15 = bitcast i8* %14 to i64*
  store i64 4, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = getelementptr inbounds i8, i8* %14, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #14
  %18 = tail call i8* @_Znam(i64 512) #15
  %19 = bitcast i8* %17 to i8**
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %14, i64 32
  %21 = bitcast i8* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = ptrtoint i8* %14 to i64
  store %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* null, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %22, align 8
  %24 = bitcast %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0 to i64*
  store i64 %23, i64* %24, align 8
  call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 1
  %27 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = inttoptr i64 %25 to %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*
  br label %29

29:                                               ; preds = %9, %12
  %30 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %11, %9 ], [ %28, %12 ]
  %31 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %30, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %30, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 1
  %37 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %30, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  %40 = select i1 %39, i64 0, i64 %36
  %41 = icmp eq i64 %33, %40
  br i1 %41, label %42, label %105

42:                                               ; preds = %29
  %43 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  %44 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %4, align 8
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %43) #14
  %46 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #14
  %47 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %31, align 8
  %48 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %47, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 2
  %51 = lshr i64 %49, 1
  %52 = add i64 %50, %51
  %53 = call i8* @_Znwm(i64 40) #15
  %54 = bitcast i8* %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 8
  %56 = getelementptr inbounds i8, i8* %53, i64 24
  %57 = shl i64 %52, 7
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #14
  %58 = call i8* @_Znam(i64 %57) #15
  %59 = bitcast i8* %56 to i8**
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 32
  %61 = bitcast i8* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %47, i64 0, i32 4
  %64 = ptrtoint i8* %53 to i64
  store %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* null, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %62, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %66, null
  br i1 %68, label %98, label %69

69:                                               ; preds = %42
  %70 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %66, i64 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %66, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %71, %73
  br i1 %74, label %89, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %66, i64 0, i32 0
  %77 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %66, i64 0, i32 3
  br label %78

78:                                               ; preds = %78, %75
  %79 = phi i64 [ %73, %75 ], [ %87, %78 ]
  %80 = add i64 %79, 1
  %81 = load i64, i64* %76, align 8
  %82 = icmp eq i64 %80, %81
  %83 = select i1 %82, i64 0, i64 %80
  store i64 %83, i64* %72, align 8
  %84 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %77, align 8
  %85 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %84, i64 %83
  call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %85) #14
  %86 = load i64, i64* %70, align 8
  %87 = load i64, i64* %72, align 8
  %88 = icmp eq i64 %86, %87
  br i1 %88, label %89, label %78

89:                                               ; preds = %78, %69
  %90 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %66, i64 0, i32 3
  %91 = bitcast %"struct.base::sequence_manager::Task"** %90 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %95, label %94

94:                                               ; preds = %89
  call void @_ZdaPv(i8* nonnull %92) #15
  br label %95

95:                                               ; preds = %94, %89
  %96 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %66, i64 0, i32 4
  call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* %96) #14
  %97 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %66 to i8*
  call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %42, %95
  call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #14
  %99 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %31, align 8
  %100 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %99, i64 0, i32 4, i32 0, i32 0, i32 0
  %101 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %31 to i64*
  store i64 %102, i64* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  %104 = inttoptr i64 %102 to %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*
  br label %105

105:                                              ; preds = %29, %98
  %106 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %30, %29 ], [ %104, %98 ]
  %107 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %106, i64 0, i32 2
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, 1
  %110 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %106, i64 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %109, %111
  %113 = select i1 %112, i64 0, i64 %109
  store i64 %113, i64* %107, align 8
  %114 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %106, i64 0, i32 3
  %115 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %114, align 8
  %116 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %115, i64 %113
  call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* %116, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1) #14
  %117 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 3
  %118 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 2
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %118, align 8
  %121 = load i64, i64* %117, align 8
  %122 = icmp ult i64 %121, %120
  %123 = select i1 %122, i64 %120, i64 %121
  store i64 %123, i64* %117, align 8
  ret void
}

declare void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"* dereferenceable(128)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"*) unnamed_addr #3

declare void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnTaskPushedToEmptyQueueEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherC2EPS2_(%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* nocapture, %"class.base::sequence_manager::internal::WorkQueue"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0, i64 0, i32 0
  store %"class.base::sequence_manager::internal::WorkQueue"* %1, %"class.base::sequence_manager::internal::WorkQueue"** %3, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherC2EOS3_(%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* nocapture, %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* nocapture dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %1, i64 0, i32 0
  %4 = bitcast %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  store i8 %9, i8* %7, align 8
  store %"class.base::sequence_manager::internal::WorkQueue"* null, %"class.base::sequence_manager::internal::WorkQueue"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue10TaskPusher4PushEPNS0_4TaskE(%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* nocapture readonly, %"struct.base::sequence_manager::Task"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::sequence_manager::Task", align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0, i64 0, i32 0
  %5 = load %"class.base::sequence_manager::internal::WorkQueue"*, %"class.base::sequence_manager::internal::WorkQueue"** %4, align 8
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %5, i64 0, i32 0
  call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* nonnull %3, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1) #14
  call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9push_backES3_(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %6, %"struct.base::sequence_manager::Task"* nonnull %3)
  call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* nonnull %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue10TaskPusherD2Ev(%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0, i64 0, i32 0
  %7 = load %"class.base::sequence_manager::internal::WorkQueue"*, %"class.base::sequence_manager::internal::WorkQueue"** %6, align 8
  %8 = icmp eq %"class.base::sequence_manager::internal::WorkQueue"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %7, i64 0, i32 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %37, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %7, i64 0, i32 1
  %15 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %14, align 8
  %16 = icmp eq %"class.base::sequence_manager::internal::WorkQueueSets"* %15, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %7, i64 0, i32 6, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %36, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %22, align 8
  %24 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %23, i64 0, i32 3
  %25 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %24, align 8
  %26 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %23, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 1
  %29 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %23, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  %32 = select i1 %31, i64 0, i64 %28
  %33 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %25, i64 %32, i32 5, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, %19
  br i1 %35, label %36, label %37

36:                                               ; preds = %21, %17
  tail call void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnTaskPushedToEmptyQueueEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* nonnull %15, %"class.base::sequence_manager::internal::WorkQueue"* nonnull %7) #14
  br label %37

37:                                               ; preds = %21, %13, %5, %1, %36, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue16CreateTaskPusherEv(%"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* noalias nocapture sret, %"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0, i64 0, i32 0
  store %"class.base::sequence_manager::internal::WorkQueue"* %1, %"class.base::sequence_manager::internal::WorkQueue"** %3, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue::TaskPusher", %"class.base::sequence_manager::internal::WorkQueue::TaskPusher"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue26PushNonNestableTaskToFrontENS0_4TaskE(%"class.base::sequence_manager::internal::WorkQueue"*, %"struct.base::sequence_manager::Task"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::sequence_manager::Task", align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  %11 = or i1 %10, %7
  %12 = xor i1 %10, true
  br i1 %11, label %28, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %14, align 8
  %16 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %15, i64 0, i32 3
  %17 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %16, align 8
  %18 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  %21 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %15, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  %24 = select i1 %23, i64 0, i64 %20
  %25 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %17, i64 %24, i32 5, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp uge i64 %26, %9
  br label %28

28:                                               ; preds = %2, %13
  %29 = phi i1 [ %12, %2 ], [ %27, %13 ]
  call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* nonnull %3, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1) #14
  call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE10push_frontES3_(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %4, %"struct.base::sequence_manager::Task"* nonnull %3)
  call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* nonnull %3) #14
  %30 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 1
  %31 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %30, align 8
  %32 = icmp eq %"class.base::sequence_manager::internal::WorkQueueSets"* %31, null
  br i1 %32, label %58, label %33

33:                                               ; preds = %28
  %34 = load i64, i64* %8, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %33
  %37 = load i64, i64* %5, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %40, align 8
  %42 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %41, i64 0, i32 3
  %43 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %42, align 8
  %44 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %41, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  %47 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %41, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %46, %48
  %50 = select i1 %49, i64 0, i64 %46
  %51 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %43, i64 %50, i32 5, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %34
  br i1 %53, label %54, label %58

54:                                               ; preds = %39, %33
  %55 = or i1 %7, %29
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  call void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnTaskPushedToEmptyQueueEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* nonnull %31, %"class.base::sequence_manager::internal::WorkQueue"* %0) #14
  br label %58

57:                                               ; preds = %54
  call void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnQueuesFrontTaskChangedEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* nonnull %31, %"class.base::sequence_manager::internal::WorkQueue"* %0) #14
  br label %58

58:                                               ; preds = %39, %36, %56, %57, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE10push_frontES3_(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"*, %"struct.base::sequence_manager::Task"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %6, align 8
  %8 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %7, null
  br i1 %8, label %9, label %26

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  %11 = tail call i8* @_Znwm(i64 40) #15
  %12 = bitcast i8* %11 to i64*
  store i64 4, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = getelementptr inbounds i8, i8* %11, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #14
  %15 = tail call i8* @_Znam(i64 512) #15
  %16 = bitcast i8* %14 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 32
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = ptrtoint i8* %11 to i64
  store %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* null, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %19, align 8
  %21 = bitcast %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0 to i64*
  store i64 %20, i64* %21, align 8
  call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 1
  %24 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = inttoptr i64 %22 to %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*
  br label %26

26:                                               ; preds = %2, %9
  %27 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %7, %2 ], [ %25, %9 ]
  %28 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %27, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %27, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  %33 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %27, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  %36 = select i1 %35, i64 0, i64 %32
  %37 = icmp eq i64 %29, %36
  br i1 %37, label %38, label %56

38:                                               ; preds = %26
  %39 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %4, align 8
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %39) #14
  %42 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %44 = call i8* @_Znwm(i64 40) #15
  %45 = bitcast i8* %44 to i64*
  store i64 4, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 8
  %47 = getelementptr inbounds i8, i8* %44, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #14
  %48 = call i8* @_Znam(i64 512) #15
  %49 = bitcast i8* %47 to i8**
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %44, i64 32
  %51 = bitcast i8* %50 to i64*
  %52 = bitcast %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %51, align 8
  %54 = ptrtoint i8* %44 to i64
  store %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* null, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %43, align 8
  store i64 %54, i64* %52, align 8
  call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  %55 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %6, align 8
  br label %56

56:                                               ; preds = %26, %38
  %57 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %27, %26 ], [ %55, %38 ]
  %58 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %57, i64 0, i32 3
  %59 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %58, align 8
  %60 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %57, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %59, i64 %61
  call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* %62, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1) #14
  %63 = load i64, i64* %60, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %57, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  br label %68

68:                                               ; preds = %56, %65
  %69 = phi i64 [ %67, %65 ], [ %63, %56 ]
  %70 = add i64 %69, -1
  store i64 %70, i64* %60, align 8
  %71 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 3
  %72 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  %75 = load i64, i64* %71, align 8
  %76 = icmp ult i64 %75, %74
  %77 = select i1 %76, i64 %74, i64 %75
  store i64 %77, i64* %71, align 8
  ret void
}

declare void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnQueuesFrontTaskChangedEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue31TakeImmediateIncomingQueueTasksEv(%"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 2
  %3 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl31TakeImmediateIncomingQueueTasksEPNS1_22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %3, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %4) #14
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %32, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 1
  %10 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %9, align 8
  %11 = icmp eq %"class.base::sequence_manager::internal::WorkQueueSets"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %17, align 8
  %19 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %18, i64 0, i32 3
  %20 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %19, align 8
  %21 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %18, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  %24 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %18, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %23, %25
  %27 = select i1 %26, i64 0, i64 %23
  %28 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %20, i64 %27, i32 5, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, %14
  br i1 %30, label %31, label %32

31:                                               ; preds = %16, %12
  tail call void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnTaskPushedToEmptyQueueEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* nonnull %10, %"class.base::sequence_manager::internal::WorkQueue"* %0) #14
  br label %32

32:                                               ; preds = %16, %8, %1, %31
  ret void
}

declare void @_ZN4base16sequence_manager8internal13TaskQueueImpl31TakeImmediateIncomingQueueTasksEPNS1_22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue21TakeTaskFromWorkQueueEv(%"struct.base::sequence_manager::Task"* noalias sret, %"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.base::sequence_manager::Task"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 128, i1 false)
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %5, align 8
  %7 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %6, i64 0, i32 3
  %8 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %7, align 8
  %9 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %6, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  %12 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %6, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  %15 = select i1 %14, i64 0, i64 %11
  %16 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %8, i64 %15
  tail call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* %0, %"struct.base::sequence_manager::Task"* dereferenceable(128) %16) #14
  tail call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9pop_frontEv(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %4)
  %17 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %62

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 7
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 2
  %26 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %25, align 8
  tail call void @_ZN4base16sequence_manager8internal13TaskQueueImpl31TakeImmediateIncomingQueueTasksEPNS1_22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %26, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %4) #14
  br label %27

27:                                               ; preds = %24, %20
  %28 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 1
  %29 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %28, align 8
  %30 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %29, null
  br i1 %30, label %62, label %31

31:                                               ; preds = %27
  %32 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  %33 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 4, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp slt i64 %32, %34
  br i1 %35, label %62, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 3
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 1
  %40 = icmp ugt i64 %39, 4
  %41 = select i1 %40, i64 %39, i64 4
  %42 = load i64, i64* %17, align 8
  store i64 %42, i64* %37, align 8
  %43 = add i64 %41, 16
  %44 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %5, align 8
  %45 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %44, null
  br i1 %45, label %62, label %46

46:                                               ; preds = %36, %46
  %47 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %53, %46 ], [ %44, %36 ]
  %48 = phi i64 [ %51, %46 ], [ 0, %36 ]
  %49 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %47, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %48
  %52 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %47, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %52, align 8
  %54 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %53, null
  br i1 %54, label %55, label %46

55:                                               ; preds = %46
  %56 = icmp ult i64 %43, %51
  br i1 %56, label %57, label %62

57:                                               ; preds = %55
  tail call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE11SetCapacityEm(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %4, i64 %41) #14
  %58 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %32, i64 5000000) #14
  %59 = extractvalue { i64, i1 } %58, 1
  %60 = extractvalue { i64, i1 } %58, 0
  %61 = select i1 %59, i64 9223372036854775807, i64 %60, !prof !3
  store i64 %61, i64* %33, align 8
  br label %62

62:                                               ; preds = %57, %55, %36, %31, %27, %2
  %63 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 1
  %64 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %63, align 8
  tail call void @_ZN4base16sequence_manager8internal13WorkQueueSets18OnPopMinQueueInSetEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* %64, %"class.base::sequence_manager::internal::WorkQueue"* %1) #14
  %65 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 2
  %66 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %65, align 8
  tail call void @_ZNK4base16sequence_manager8internal13TaskQueueImpl14TraceQueueSizeEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* %66) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9pop_frontEv(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %2, align 8
  %4 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  %7 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = select i1 %9, i64 0, i64 %6
  store i64 %10, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 3
  %12 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %11, align 8
  %13 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %12, i64 %10
  tail call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %13) #14
  %14 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %2, align 8
  %15 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %14, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %21, align 8
  %23 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %22 to i64
  store %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* null, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %21, align 8
  %26 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %2, align 8
  %27 = bitcast %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0 to i64*
  store i64 %25, i64* %27, align 8
  %28 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %26, null
  br i1 %28, label %58, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %26, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %26, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %26, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %26, i64 0, i32 3
  br label %38

38:                                               ; preds = %38, %35
  %39 = phi i64 [ %33, %35 ], [ %47, %38 ]
  %40 = add i64 %39, 1
  %41 = load i64, i64* %36, align 8
  %42 = icmp eq i64 %40, %41
  %43 = select i1 %42, i64 0, i64 %40
  store i64 %43, i64* %32, align 8
  %44 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %37, align 8
  %45 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %44, i64 %43
  tail call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %45) #14
  %46 = load i64, i64* %30, align 8
  %47 = load i64, i64* %32, align 8
  %48 = icmp eq i64 %46, %47
  br i1 %48, label %49, label %38

49:                                               ; preds = %38, %29
  %50 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %26, i64 0, i32 3
  %51 = bitcast %"struct.base::sequence_manager::Task"** %50 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %49
  tail call void @_ZdaPv(i8* nonnull %52) #15
  br label %55

55:                                               ; preds = %54, %49
  %56 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %26, i64 0, i32 4
  tail call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* %56) #14
  %57 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %26 to i8*
  tail call void @_ZdlPv(i8* %57) #15
  br label %58

58:                                               ; preds = %20, %55, %24, %1
  %59 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, -1
  store i64 %61, i64* %59, align 8
  ret void
}

declare void @_ZN4base16sequence_manager8internal13WorkQueueSets18OnPopMinQueueInSetEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #1

declare void @_ZNK4base16sequence_manager8internal13TaskQueueImpl14TraceQueueSizeEv(%"class.base::sequence_manager::internal::TaskQueueImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16sequence_manager8internal9WorkQueue31RemoveAllCanceledTasksFromFrontEv(%"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::StackVector", align 8
  %3 = alloca [16 x i8], align 16
  %4 = alloca [16 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 1
  %9 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %8, align 8
  %10 = icmp eq %"class.base::sequence_manager::internal::WorkQueueSets"* %9, null
  br i1 %10, label %182, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1072, i8* nonnull %12) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 1032, i1 false)
  %13 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 0, i32 1
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %13, %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"** %15, align 8
  %16 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1
  %18 = bitcast %"class.std::__1::vector.172"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #14
  %19 = ptrtoint %"class.base::StackVector"* %2 to i64
  %20 = bitcast %"struct.std::__1::__compressed_pair_elem.175"* %17 to i64*
  store i64 %19, i64* %20, align 8
  call void @_ZNSt3__16vectorIN4base16sequence_manager4TaskENS1_14StackAllocatorIS3_Lm8EEEE7reserveEm(%"class.std::__1::vector.172"* %16, i64 8) #14
  %21 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0
  %22 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %93, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %29 = bitcast i32* %5 to i8*
  %30 = bitcast i8** %6 to i8*
  %31 = bitcast i8** %6 to i64*
  %32 = bitcast i8** %7 to i8*
  %33 = bitcast i8** %7 to %"struct.base::sequence_manager::Task"**
  %34 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 2, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.base::sequence_manager::Task"** %34 to i64*
  br label %37

37:                                               ; preds = %25, %89
  %38 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %26, align 8
  %39 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %38, i64 0, i32 3
  %40 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %39, align 8
  %41 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %38, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 1
  %44 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %38, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %43, %45
  %47 = select i1 %46, i64 0, i64 %43
  %48 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %40, i64 %47
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #14
  %49 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %40, i64 %47, i32 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 16, i1 false)
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  %52 = select i1 %51, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %50
  %53 = call i64 @_ZN4base7strlcpyEPcPKcm(i8* nonnull %27, i8* nonnull %52, i64 16) #14
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %27) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #14
  %54 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %40, i64 %47, i32 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false)
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  %57 = select i1 %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %55
  %58 = call i64 @_ZN4base7strlcpyEPcPKcm(i8* nonnull %28, i8* nonnull %57, i64 16) #14
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %28) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #14
  store i32 -1431655766, i32* %5, align 4
  %59 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %40, i64 %47, i32 0, i32 1, i32 2
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %61 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %40, i64 %47, i32 0, i32 1, i32 3
  %62 = bitcast i8** %61 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  store %"struct.base::sequence_manager::Task"* %48, %"struct.base::sequence_manager::Task"** %33, align 8
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %29) #14
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %30) #14
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %32) #14
  %64 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %64, align 8
  %66 = icmp eq %"class.base::internal::BindStateBase"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %37
  %68 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %48, i64 0, i32 0, i32 0, i32 0
  %69 = call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %68) #14
  br i1 %69, label %70, label %92

70:                                               ; preds = %37, %67
  %71 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %26, align 8
  %72 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %71, i64 0, i32 3
  %73 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %72, align 8
  %74 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %71, i64 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 1
  %77 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %71, i64 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %76, %78
  %80 = select i1 %79, i64 0, i64 %76
  %81 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %73, i64 %80
  %82 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %34, align 8
  %83 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %35, align 8
  %84 = icmp ult %"struct.base::sequence_manager::Task"* %82, %83
  br i1 %84, label %85, label %88

85:                                               ; preds = %70
  call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* %82, %"struct.base::sequence_manager::Task"* dereferenceable(128) %81) #14
  %86 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %82, i64 1
  %87 = ptrtoint %"struct.base::sequence_manager::Task"* %86 to i64
  store i64 %87, i64* %36, align 8
  br label %89

88:                                               ; preds = %70
  call void @_ZNSt3__16vectorIN4base16sequence_manager4TaskENS1_14StackAllocatorIS3_Lm8EEEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.172"* %16, %"struct.base::sequence_manager::Task"* dereferenceable(128) %81) #14
  br label %89

89:                                               ; preds = %85, %88
  call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9pop_frontEv(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %21)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #14
  %90 = load i64, i64* %22, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %93, label %37

92:                                               ; preds = %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #14
  br label %93

93:                                               ; preds = %89, %11, %92
  %94 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %95 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %94, align 8
  %96 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 2, i32 0, i32 1
  %97 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %96, align 8
  %98 = icmp eq %"struct.base::sequence_manager::Task"* %95, %97
  br i1 %98, label %156, label %99

99:                                               ; preds = %93
  %100 = load i64, i64* %22, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %145

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 7
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 2
  %108 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %107, align 8
  call void @_ZN4base16sequence_manager8internal13TaskQueueImpl31TakeImmediateIncomingQueueTasksEPNS1_22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEEE(%"class.base::sequence_manager::internal::TaskQueueImpl"* %108, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %21) #14
  br label %109

109:                                              ; preds = %106, %102
  %110 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 1
  %111 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %110, align 8
  %112 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %111, null
  br i1 %112, label %145, label %113

113:                                              ; preds = %109
  %114 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  %115 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp slt i64 %114, %116
  br i1 %117, label %145, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 3
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 1
  %122 = icmp ugt i64 %121, 4
  %123 = select i1 %122, i64 %121, i64 4
  %124 = load i64, i64* %22, align 8
  store i64 %124, i64* %119, align 8
  %125 = add i64 %123, 16
  %126 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %126, align 8
  %128 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %127, null
  br i1 %128, label %145, label %129

129:                                              ; preds = %118, %129
  %130 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %136, %129 ], [ %127, %118 ]
  %131 = phi i64 [ %134, %129 ], [ 0, %118 ]
  %132 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %130, i64 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, %131
  %135 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %130, i64 0, i32 4, i32 0, i32 0, i32 0
  %136 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %135, align 8
  %137 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %136, null
  br i1 %137, label %138, label %129

138:                                              ; preds = %129
  %139 = icmp ult i64 %125, %134
  br i1 %139, label %140, label %145

140:                                              ; preds = %138
  call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE11SetCapacityEm(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %21, i64 %123) #14
  %141 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %114, i64 5000000) #14
  %142 = extractvalue { i64, i1 } %141, 1
  %143 = extractvalue { i64, i1 } %141, 0
  %144 = select i1 %142, i64 9223372036854775807, i64 %143, !prof !3
  store i64 %144, i64* %115, align 8
  br label %145

145:                                              ; preds = %140, %138, %118, %113, %109, %99
  %146 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 4, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = icmp eq i64 %147, -1
  br i1 %148, label %151, label %149

149:                                              ; preds = %145
  %150 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %8, align 8
  call void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnQueuesFrontTaskChangedEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* %150, %"class.base::sequence_manager::internal::WorkQueue"* %0) #14
  br label %151

151:                                              ; preds = %145, %149
  %152 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 2
  %153 = load %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"class.base::sequence_manager::internal::TaskQueueImpl"** %152, align 8
  call void @_ZNK4base16sequence_manager8internal13TaskQueueImpl14TraceQueueSizeEv(%"class.base::sequence_manager::internal::TaskQueueImpl"* %153) #14
  %154 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %94, align 8
  %155 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %96, align 8
  br label %156

156:                                              ; preds = %151, %93
  %157 = phi %"struct.base::sequence_manager::Task"* [ %155, %151 ], [ %95, %93 ]
  %158 = phi %"struct.base::sequence_manager::Task"* [ %154, %151 ], [ %95, %93 ]
  %159 = icmp ne %"struct.base::sequence_manager::Task"* %158, %157
  %160 = icmp eq %"struct.base::sequence_manager::Task"* %158, null
  br i1 %160, label %181, label %161

161:                                              ; preds = %156
  %162 = icmp eq %"struct.base::sequence_manager::Task"* %157, %158
  br i1 %162, label %169, label %163

163:                                              ; preds = %161, %163
  %164 = phi %"struct.base::sequence_manager::Task"* [ %165, %163 ], [ %157, %161 ]
  %165 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %164, i64 -1
  call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %165) #14
  %166 = icmp eq %"struct.base::sequence_manager::Task"* %165, %158
  br i1 %166, label %167, label %163

167:                                              ; preds = %163
  %168 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %94, align 8
  br label %169

169:                                              ; preds = %167, %161
  %170 = phi %"struct.base::sequence_manager::Task"* [ %168, %167 ], [ %157, %161 ]
  store %"struct.base::sequence_manager::Task"* %158, %"struct.base::sequence_manager::Task"** %96, align 8
  %171 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %2, i64 0, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %172 = load %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"*, %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"** %171, align 8
  %173 = icmp ne %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %172, null
  %174 = bitcast %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %172 to %"struct.base::sequence_manager::Task"*
  %175 = icmp eq %"struct.base::sequence_manager::Task"* %170, %174
  %176 = and i1 %173, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source", %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %172, i64 0, i32 1
  store i8 0, i8* %178, align 8
  br label %181

179:                                              ; preds = %169
  %180 = bitcast %"struct.base::sequence_manager::Task"* %170 to i8*
  call void @_ZdlPv(i8* %180) #15
  br label %181

181:                                              ; preds = %156, %177, %179
  call void @llvm.lifetime.end.p0i8(i64 1072, i8* nonnull %12) #14
  br label %182

182:                                              ; preds = %1, %181
  %183 = phi i1 [ %159, %181 ], [ false, %1 ]
  ret i1 %183
}

declare i64 @_ZN4base7strlcpyEPcPKcm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue21AssignToWorkQueueSetsEPNS1_13WorkQueueSetsE(%"class.base::sequence_manager::internal::WorkQueue"* nocapture, %"class.base::sequence_manager::internal::WorkQueueSets"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 1
  store %"class.base::sequence_manager::internal::WorkQueueSets"* %1, %"class.base::sequence_manager::internal::WorkQueueSets"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue14AssignSetIndexEm(%"class.base::sequence_manager::internal::WorkQueue"* nocapture, i64) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 3
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16sequence_manager8internal9WorkQueue15InsertFenceImplENS0_12EnqueueOrderE(%"class.base::sequence_manager::internal::WorkQueue"* nocapture, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %11, align 8
  %13 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %12, i64 0, i32 3
  %14 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %13, align 8
  %15 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %12, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  %18 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %12, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  %21 = select i1 %20, i64 0, i64 %17
  %22 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %14, i64 %21, i32 5, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp uge i64 %23, %4
  br label %25

25:                                               ; preds = %2, %6, %10
  %26 = phi i1 [ false, %2 ], [ true, %6 ], [ %24, %10 ]
  store i64 %1, i64* %3, align 8
  ret i1 %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue19InsertFenceSilentlyENS0_12EnqueueOrderE(%"class.base::sequence_manager::internal::WorkQueue"* nocapture, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16sequence_manager8internal9WorkQueue11InsertFenceENS0_12EnqueueOrderE(%"class.base::sequence_manager::internal::WorkQueue"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %11, align 8
  %13 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %12, i64 0, i32 3
  %14 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %13, align 8
  %15 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %12, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  %18 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %12, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  %21 = select i1 %20, i64 0, i64 %17
  %22 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %14, i64 %21, i32 5, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %4
  br label %25

25:                                               ; preds = %2, %6, %10
  %26 = phi i1 [ true, %2 ], [ false, %6 ], [ %24, %10 ]
  store i64 %1, i64* %3, align 8
  %27 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 1
  %28 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %27, align 8
  %29 = icmp eq %"class.base::sequence_manager::internal::WorkQueueSets"* %28, null
  br i1 %29, label %71, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  %34 = or i1 %26, %33
  %35 = icmp eq i64 %1, 0
  br i1 %34, label %53, label %36

36:                                               ; preds = %30
  br i1 %35, label %52, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %38, align 8
  %40 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %39, i64 0, i32 3
  %41 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %40, align 8
  %42 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %39, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  %45 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %39, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %44, %46
  %48 = select i1 %47, i64 0, i64 %44
  %49 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %41, i64 %48, i32 5, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %1
  br i1 %51, label %52, label %54

52:                                               ; preds = %37, %36
  tail call void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnTaskPushedToEmptyQueueEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* nonnull %28, %"class.base::sequence_manager::internal::WorkQueue"* %0) #14
  br label %71

53:                                               ; preds = %30
  br i1 %35, label %71, label %54

54:                                               ; preds = %37, %53
  br i1 %33, label %70, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %56, align 8
  %58 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %57, i64 0, i32 3
  %59 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %58, align 8
  %60 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %57, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  %63 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %57, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %62, %64
  %66 = select i1 %65, i64 0, i64 %62
  %67 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %59, i64 %66, i32 5, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %68, %1
  br i1 %69, label %71, label %70

70:                                               ; preds = %55, %54
  tail call void @_ZN4base16sequence_manager8internal13WorkQueueSets14OnQueueBlockedEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* nonnull %28, %"class.base::sequence_manager::internal::WorkQueue"* %0) #14
  br label %71

71:                                               ; preds = %55, %53, %70, %25, %52
  %72 = phi i1 [ true, %52 ], [ false, %25 ], [ false, %70 ], [ false, %55 ], [ false, %53 ]
  ret i1 %72
}

declare void @_ZN4base16sequence_manager8internal13WorkQueueSets14OnQueueBlockedEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16sequence_manager8internal9WorkQueue11RemoveFenceEv(%"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %10, align 8
  %12 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 3
  %13 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %12, align 8
  %14 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, 1
  %17 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  %20 = select i1 %19, i64 0, i64 %16
  %21 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %13, i64 %20, i32 5, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %3
  br label %24

24:                                               ; preds = %1, %5, %9
  %25 = phi i1 [ true, %1 ], [ false, %5 ], [ %23, %9 ]
  store i64 0, i64* %2, align 8
  %26 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 1
  %27 = load %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::WorkQueueSets"** %26, align 8
  %28 = icmp eq %"class.base::sequence_manager::internal::WorkQueueSets"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  %33 = or i1 %25, %32
  br i1 %33, label %35, label %34

34:                                               ; preds = %29
  tail call void @_ZN4base16sequence_manager8internal13WorkQueueSets24OnTaskPushedToEmptyQueueEPNS1_9WorkQueueE(%"class.base::sequence_manager::internal::WorkQueueSets"* nonnull %27, %"class.base::sequence_manager::internal::WorkQueue"* %0) #14
  br label %35

35:                                               ; preds = %24, %29, %34
  %36 = phi i1 [ true, %34 ], [ false, %29 ], [ false, %24 ]
  ret i1 %36
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base16sequence_manager8internal9WorkQueue15ShouldRunBeforeEPKS2_(%"class.base::sequence_manager::internal::WorkQueue"* nocapture readonly, %"class.base::sequence_manager::internal::WorkQueue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 6, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %10, align 8
  %12 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 3
  %13 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %12, align 8
  %14 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  br i1 %9, label %16, label %20

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %15, 1
  br label %29

20:                                               ; preds = %6
  %21 = add i64 %15, 1
  %22 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %11, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  %25 = select i1 %24, i64 0, i64 %21
  %26 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %13, i64 %25, i32 5, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %8
  br i1 %28, label %29, label %36

29:                                               ; preds = %20, %16
  %30 = phi i64 [ %19, %16 ], [ %21, %20 ]
  %31 = phi i64 [ %18, %16 ], [ %23, %20 ]
  %32 = icmp eq i64 %30, %31
  %33 = select i1 %32, i64 0, i64 %30
  %34 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %13, i64 %33, i32 5, i32 0
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %2, %20, %29
  %37 = phi i64 [ 0, %2 ], [ %35, %29 ], [ 0, %20 ]
  %38 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %71, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 6, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  %45 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %45, align 8
  %47 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %46, i64 0, i32 3
  %48 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %47, align 8
  %49 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  br i1 %44, label %51, label %55

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %46, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %50, 1
  br label %64

55:                                               ; preds = %41
  %56 = add i64 %50, 1
  %57 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %46, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %56, %58
  %60 = select i1 %59, i64 0, i64 %56
  %61 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %48, i64 %60, i32 5, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp ult i64 %62, %43
  br i1 %63, label %64, label %71

64:                                               ; preds = %55, %51
  %65 = phi i64 [ %54, %51 ], [ %56, %55 ]
  %66 = phi i64 [ %53, %51 ], [ %58, %55 ]
  %67 = icmp eq i64 %65, %66
  %68 = select i1 %67, i64 0, i64 %65
  %69 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %48, i64 %68, i32 5, i32 0
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %36, %55, %64
  %72 = phi i64 [ 0, %36 ], [ %70, %64 ], [ 0, %55 ]
  %73 = icmp ult i64 %37, %72
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue16MaybeShrinkQueueEv(%"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 1
  %4 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %3, align 8
  %5 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  %8 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %7, %9
  br i1 %10, label %39, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 1
  %15 = icmp ugt i64 %14, 4
  %16 = select i1 %15, i64 %14, i64 4
  %17 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %12, align 8
  %19 = add i64 %16, 16
  %20 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %20, align 8
  %22 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %21, null
  br i1 %22, label %39, label %23

23:                                               ; preds = %11, %23
  %24 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %30, %23 ], [ %21, %11 ]
  %25 = phi i64 [ %28, %23 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %24, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %29, align 8
  %31 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %30, null
  br i1 %31, label %32, label %23

32:                                               ; preds = %23
  %33 = icmp ult i64 %19, %28
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  tail call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE11SetCapacityEm(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %2, i64 %16) #14
  %35 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %7, i64 5000000) #14
  %36 = extractvalue { i64, i1 } %35, 1
  %37 = extractvalue { i64, i1 } %35, 0
  %38 = select i1 %36, i64 9223372036854775807, i64 %37, !prof !3
  store i64 %38, i64* %8, align 8
  br label %39

39:                                               ; preds = %1, %6, %11, %32, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal9WorkQueue17PopTaskForTestingEv(%"class.base::sequence_manager::internal::WorkQueue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9pop_frontEv(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %6)
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base16sequence_manager8internal9WorkQueue21CollectTasksOlderThanENS0_12EnqueueOrderEPNSt3__16vectorIPKNS0_4TaskENS4_9allocatorIS8_EEEE(%"class.base::sequence_manager::internal::WorkQueue"* nocapture readonly, i64, %"class.std::__1::vector.176"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::sequence_manager::internal::WorkQueue", %"class.base::sequence_manager::internal::WorkQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %4, align 8
  %6 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %5, null
  br i1 %6, label %121, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %5, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %5, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %121, label %13

13:                                               ; preds = %7
  %14 = add i64 %11, 1
  %15 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %5, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  %18 = select i1 %17, i64 0, i64 %14
  %19 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %2, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.base::sequence_manager::Task"*** %19 to i64*
  %22 = bitcast %"class.std::__1::vector.176"* %2 to i64*
  %23 = bitcast %"struct.base::sequence_manager::Task"*** %20 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector.176", %"class.std::__1::vector.176"* %2, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %5, i64 0, i32 3
  %26 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %25, align 8
  %27 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %26, i64 %18, i32 5, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, %1
  br i1 %29, label %30, label %121

30:                                               ; preds = %13, %108
  %31 = phi %"struct.base::sequence_manager::Task"* [ %117, %108 ], [ %26, %13 ]
  %32 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %110, %108 ], [ %5, %13 ]
  %33 = phi i64 [ %115, %108 ], [ %18, %13 ]
  %34 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %31, i64 %33
  %35 = ptrtoint %"struct.base::sequence_manager::Task"* %34 to i64
  %36 = load %"struct.base::sequence_manager::Task"**, %"struct.base::sequence_manager::Task"*** %19, align 8
  %37 = load %"struct.base::sequence_manager::Task"**, %"struct.base::sequence_manager::Task"*** %20, align 8
  %38 = icmp ult %"struct.base::sequence_manager::Task"** %36, %37
  %39 = ptrtoint %"struct.base::sequence_manager::Task"** %37 to i64
  br i1 %38, label %40, label %44

40:                                               ; preds = %30
  %41 = bitcast %"struct.base::sequence_manager::Task"** %36 to i64*
  store i64 %35, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %36, i64 1
  %43 = ptrtoint %"struct.base::sequence_manager::Task"** %42 to i64
  store i64 %43, i64* %21, align 8
  br label %97

44:                                               ; preds = %30
  %45 = ptrtoint %"struct.base::sequence_manager::Task"** %36 to i64
  %46 = load i64, i64* %22, align 8
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::vector.176"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #16
  unreachable

53:                                               ; preds = %44
  %54 = sub i64 %39, %46
  %55 = ashr exact i64 %54, 3
  %56 = icmp ult i64 %55, 1152921504606846975
  br i1 %56, label %57, label %65

57:                                               ; preds = %53
  %58 = ashr exact i64 %54, 2
  %59 = icmp ult i64 %58, %49
  %60 = select i1 %59, i64 %49, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = icmp ugt i64 %60, 2305843009213693951
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void @abort() #16
  unreachable

65:                                               ; preds = %62, %53
  %66 = phi i64 [ %60, %62 ], [ 2305843009213693951, %53 ]
  %67 = shl i64 %66, 3
  %68 = tail call i8* @_Znwm(i64 %67) #15
  %69 = bitcast i8* %68 to %"struct.base::sequence_manager::Task"**
  br label %70

70:                                               ; preds = %65, %57
  %71 = phi i64 [ %66, %65 ], [ 0, %57 ]
  %72 = phi %"struct.base::sequence_manager::Task"** [ %69, %65 ], [ null, %57 ]
  %73 = getelementptr inbounds %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %72, i64 %48
  %74 = getelementptr inbounds %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %72, i64 %71
  %75 = ptrtoint %"struct.base::sequence_manager::Task"** %74 to i64
  %76 = bitcast %"struct.base::sequence_manager::Task"** %73 to i64*
  store i64 %35, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %73, i64 1
  %78 = ptrtoint %"struct.base::sequence_manager::Task"** %77 to i64
  %79 = load %"struct.base::sequence_manager::Task"**, %"struct.base::sequence_manager::Task"*** %24, align 8
  %80 = load i64, i64* %21, align 8
  %81 = ptrtoint %"struct.base::sequence_manager::Task"** %79 to i64
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 3
  %84 = sub nsw i64 0, %83
  %85 = getelementptr inbounds %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %73, i64 %84
  %86 = ptrtoint %"struct.base::sequence_manager::Task"** %85 to i64
  %87 = icmp sgt i64 %82, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %70
  %89 = bitcast %"struct.base::sequence_manager::Task"** %85 to i8*
  %90 = bitcast %"struct.base::sequence_manager::Task"** %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 %82, i1 false) #14
  %91 = load %"struct.base::sequence_manager::Task"**, %"struct.base::sequence_manager::Task"*** %24, align 8
  br label %92

92:                                               ; preds = %88, %70
  %93 = phi %"struct.base::sequence_manager::Task"** [ %79, %70 ], [ %91, %88 ]
  store i64 %86, i64* %22, align 8
  store i64 %78, i64* %21, align 8
  store i64 %75, i64* %23, align 8
  %94 = icmp eq %"struct.base::sequence_manager::Task"** %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = bitcast %"struct.base::sequence_manager::Task"** %93 to i8*
  tail call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %40, %92, %95
  %98 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %32, i64 0, i32 2
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %33, %99
  br i1 %100, label %101, label %108

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %102, align 8
  %104 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %103, null
  br i1 %104, label %121, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %103, i64 0, i32 1
  %107 = load i64, i64* %106, align 8
  br label %108

108:                                              ; preds = %97, %105
  %109 = phi i64 [ %107, %105 ], [ %33, %97 ]
  %110 = phi %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* [ %103, %105 ], [ %32, %97 ]
  %111 = add i64 %109, 1
  %112 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %110, i64 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %111, %113
  %115 = select i1 %114, i64 0, i64 %111
  %116 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %110, i64 0, i32 3
  %117 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %116, align 8
  %118 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %117, i64 %115, i32 5, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = icmp ult i64 %119, %1
  br i1 %120, label %30, label %121

121:                                              ; preds = %108, %101, %13, %3, %7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %2, align 8
  store %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* null, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %2, align 8
  %4 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %25, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 3
  br label %14

14:                                               ; preds = %11, %14
  %15 = phi i64 [ %9, %11 ], [ %23, %14 ]
  %16 = add i64 %15, 1
  %17 = load i64, i64* %12, align 8
  %18 = icmp eq i64 %16, %17
  %19 = select i1 %18, i64 0, i64 %16
  store i64 %19, i64* %8, align 8
  %20 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %13, align 8
  %21 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %20, i64 %19
  tail call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %21) #14
  %22 = load i64, i64* %6, align 8
  %23 = load i64, i64* %8, align 8
  %24 = icmp eq i64 %22, %23
  br i1 %24, label %25, label %14

25:                                               ; preds = %14, %5
  %26 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 3
  %27 = bitcast %"struct.base::sequence_manager::Task"** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void @_ZdaPv(i8* nonnull %28) #15
  br label %31

31:                                               ; preds = %25, %30
  %32 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3, i64 0, i32 4
  tail call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* %32) #14
  %33 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %3 to i8*
  tail call void @_ZdlPv(i8* %33) #15
  ret void

34:                                               ; preds = %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #9

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE11SetCapacityEm(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i8* @_Znwm(i64 40) #15
  %7 = bitcast i8* %6 to i64*
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = getelementptr inbounds i8, i8* %6, i64 24
  %10 = shl i64 %1, 7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #14
  %11 = tail call i8* @_Znam(i64 %10) #15
  %12 = bitcast i8* %9 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %6, i8** %15, align 8
  %16 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  %19 = ptrtoint i8* %6 to i64
  br i1 %18, label %53, label %20

20:                                               ; preds = %2
  %21 = bitcast i8* %11 to %"struct.base::sequence_manager::Task"*
  %22 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds i8, i8* %6, i64 16
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds i8, i8* %6, i64 24
  %26 = bitcast i8* %25 to %"struct.base::sequence_manager::Task"**
  %27 = bitcast i8* %6 to i64*
  br label %28

28:                                               ; preds = %49, %20
  %29 = phi %"struct.base::sequence_manager::Task"* [ %52, %49 ], [ %21, %20 ]
  %30 = phi i64 [ %51, %49 ], [ %1, %20 ]
  %31 = phi i64 [ %50, %49 ], [ 0, %20 ]
  %32 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %22, align 8
  %33 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %32, i64 0, i32 3
  %34 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %33, align 8
  %35 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %32, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  %38 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %32, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %37, %39
  %41 = select i1 %40, i64 0, i64 %37
  %42 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %34, i64 %41
  %43 = add i64 %31, 1
  %44 = icmp eq i64 %43, %30
  %45 = select i1 %44, i64 0, i64 %43
  store i64 %45, i64* %24, align 8
  %46 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %29, i64 %45
  tail call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* %46, %"struct.base::sequence_manager::Task"* dereferenceable(128) %42) #14
  tail call void @_ZN4base16sequence_manager8internal22LazilyDeallocatedDequeINS0_4TaskEXadL_ZNS_6subtle28TimeTicksNowIgnoringOverrideEvEEE9pop_frontEv(%"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0)
  %47 = load i64, i64* %16, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %28
  %50 = load i64, i64* %24, align 8
  %51 = load i64, i64* %27, align 8
  %52 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %26, align 8
  br label %28

53:                                               ; preds = %28, %2
  store i64 %17, i64* %16, align 8
  store %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* null, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %5, align 8
  %54 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %54, align 8
  %56 = bitcast %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0 to i64*
  store i64 %19, i64* %56, align 8
  %57 = icmp eq %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %55, null
  br i1 %57, label %88, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %55, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %55, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %60, %62
  br i1 %63, label %78, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %55, i64 0, i32 0
  %66 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %55, i64 0, i32 3
  br label %67

67:                                               ; preds = %67, %64
  %68 = phi i64 [ %62, %64 ], [ %76, %67 ]
  %69 = add i64 %68, 1
  %70 = load i64, i64* %65, align 8
  %71 = icmp eq i64 %69, %70
  %72 = select i1 %71, i64 0, i64 %69
  store i64 %72, i64* %61, align 8
  %73 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %66, align 8
  %74 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %73, i64 %72
  tail call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %74) #14
  %75 = load i64, i64* %59, align 8
  %76 = load i64, i64* %61, align 8
  %77 = icmp eq i64 %75, %76
  br i1 %77, label %78, label %67

78:                                               ; preds = %67, %58
  %79 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %55, i64 0, i32 3
  %80 = bitcast %"struct.base::sequence_manager::Task"** %79 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %78
  tail call void @_ZdaPv(i8* nonnull %81) #15
  br label %84

84:                                               ; preds = %83, %78
  %85 = getelementptr inbounds %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %55, i64 0, i32 4
  tail call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* %85) #14
  %86 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* %55 to i8*
  tail call void @_ZdlPv(i8* %86) #15
  %87 = load i64, i64* %56, align 8
  br label %88

88:                                               ; preds = %53, %84
  %89 = phi i64 [ %19, %53 ], [ %87, %84 ]
  %90 = getelementptr inbounds %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::LazilyDeallocatedDeque"* %0, i64 0, i32 1
  %91 = bitcast %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"** %90 to i64*
  store i64 %89, i64* %91, align 8
  call void @_ZNSt3__110unique_ptrIN4base16sequence_manager8internal22LazilyDeallocatedDequeINS2_4TaskEXadL_ZNS1_6subtle28TimeTicksNowIgnoringOverrideEvEEE4RingENS_14default_deleteIS8_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base16sequence_manager4TaskENS1_14StackAllocatorIS3_Lm8EEEE7reserveEm(%"class.std::__1::vector.172"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.172", %"class.std::__1::vector.172"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.base::sequence_manager::Task"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.172"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 7
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.base::sequence_manager::Task"*
  br i1 %10, label %12, label %85

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.172", %"class.std::__1::vector.172"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.172", %"class.std::__1::vector.172"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.base::sequence_manager::Task"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %7
  %18 = ashr exact i64 %17, 7
  %19 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %13, i64 0, i32 0
  %20 = load %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"*, %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"** %19, align 8
  %21 = icmp eq %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %20, null
  %22 = inttoptr i64 %16 to %"struct.base::sequence_manager::Task"*
  br i1 %21, label %35, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source", %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %20, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = icmp ult i64 %1, 9
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  store i8 1, i8* %24, align 8
  %30 = bitcast %"class.base::StackAllocator"* %13 to %"struct.base::sequence_manager::Task"**
  %31 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.172", %"class.std::__1::vector.172"* %0, i64 0, i32 0, i32 0
  %33 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %32, align 8
  %34 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %14, align 8
  br label %42

35:                                               ; preds = %23, %12
  %36 = icmp ugt i64 %1, 144115188075855871
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #16
  unreachable

38:                                               ; preds = %35
  %39 = shl i64 %1, 7
  %40 = tail call i8* @_Znwm(i64 %39) #15
  %41 = bitcast i8* %40 to %"struct.base::sequence_manager::Task"*
  br label %42

42:                                               ; preds = %29, %38
  %43 = phi %"struct.base::sequence_manager::Task"* [ %34, %29 ], [ %22, %38 ]
  %44 = phi %"struct.base::sequence_manager::Task"* [ %33, %29 ], [ %11, %38 ]
  %45 = phi %"struct.base::sequence_manager::Task"* [ %31, %29 ], [ %41, %38 ]
  %46 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %45, i64 %18
  %47 = ptrtoint %"struct.base::sequence_manager::Task"* %46 to i64
  %48 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %45, i64 %1
  %49 = ptrtoint %"struct.base::sequence_manager::Task"* %48 to i64
  %50 = icmp eq %"struct.base::sequence_manager::Task"* %43, %44
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = ptrtoint %"struct.base::sequence_manager::Task"* %43 to i64
  br label %63

53:                                               ; preds = %42, %53
  %54 = phi %"struct.base::sequence_manager::Task"* [ %56, %53 ], [ %46, %42 ]
  %55 = phi %"struct.base::sequence_manager::Task"* [ %57, %53 ], [ %43, %42 ]
  %56 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %54, i64 -1
  %57 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %55, i64 -1
  tail call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* %56, %"struct.base::sequence_manager::Task"* dereferenceable(128) %57) #14
  %58 = icmp eq %"struct.base::sequence_manager::Task"* %57, %44
  br i1 %58, label %59, label %53

59:                                               ; preds = %53
  %60 = ptrtoint %"struct.base::sequence_manager::Task"* %56 to i64
  %61 = load i64, i64* %6, align 8
  %62 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %14, align 8
  br label %63

63:                                               ; preds = %51, %59
  %64 = phi %"struct.base::sequence_manager::Task"* [ %43, %51 ], [ %62, %59 ]
  %65 = phi i64 [ %47, %51 ], [ %60, %59 ]
  %66 = phi i64 [ %52, %51 ], [ %61, %59 ]
  store i64 %65, i64* %6, align 8
  store i64 %47, i64* %15, align 8
  store i64 %49, i64* %4, align 8
  %67 = inttoptr i64 %66 to %"struct.base::sequence_manager::Task"*
  %68 = icmp eq %"struct.base::sequence_manager::Task"* %64, %67
  br i1 %68, label %73, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.base::sequence_manager::Task"* [ %71, %69 ], [ %64, %63 ]
  %71 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %70, i64 -1
  tail call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %71) #14
  %72 = icmp eq %"struct.base::sequence_manager::Task"* %71, %67
  br i1 %72, label %73, label %69

73:                                               ; preds = %69, %63
  %74 = icmp eq i64 %66, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %73
  %76 = load %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"*, %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"** %19, align 8
  %77 = icmp ne %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %76, null
  %78 = bitcast %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %76 to %"struct.base::sequence_manager::Task"*
  %79 = icmp eq %"struct.base::sequence_manager::Task"* %67, %78
  %80 = and i1 %77, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source", %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %76, i64 0, i32 1
  store i8 0, i8* %82, align 8
  br label %85

83:                                               ; preds = %75
  %84 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %84) #15
  br label %85

85:                                               ; preds = %83, %81, %73, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base16sequence_manager4TaskENS1_14StackAllocatorIS3_Lm8EEEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.172"*, %"struct.base::sequence_manager::Task"* dereferenceable(128)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.172", %"class.std::__1::vector.172"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector.172", %"class.std::__1::vector.172"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.base::sequence_manager::Task"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.172"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 7
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 144115188075855871
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector.172"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #16
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector.172", %"class.std::__1::vector.172"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.base::sequence_manager::Task"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 7
  %21 = icmp ult i64 %20, 72057594037927935
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 6
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 144115188075855871, %15 ]
  %29 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %30 = load %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"*, %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"** %29, align 8
  %31 = icmp eq %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source", %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = icmp ult i64 %28, 9
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %39 = bitcast %"class.base::StackAllocator"* %3 to %"struct.base::sequence_manager::Task"**
  %40 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %39, align 8
  br label %48

41:                                               ; preds = %32, %27
  %42 = icmp ugt i64 %28, 144115188075855871
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #16
  unreachable

44:                                               ; preds = %41
  %45 = shl i64 %28, 7
  %46 = tail call i8* @_Znwm(i64 %45) #15
  %47 = bitcast i8* %46 to %"struct.base::sequence_manager::Task"*
  br label %48

48:                                               ; preds = %22, %38, %44
  %49 = phi i64 [ 0, %22 ], [ %28, %38 ], [ %28, %44 ]
  %50 = phi %"struct.base::sequence_manager::Task"* [ null, %22 ], [ %40, %38 ], [ %47, %44 ]
  %51 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %50, i64 %10
  %52 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %50, i64 %49
  %53 = ptrtoint %"struct.base::sequence_manager::Task"* %52 to i64
  tail call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* %51, %"struct.base::sequence_manager::Task"* dereferenceable(128) %1) #14
  %54 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %51, i64 1
  %55 = ptrtoint %"struct.base::sequence_manager::Task"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.172", %"class.std::__1::vector.172"* %0, i64 0, i32 0, i32 0
  %57 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %56, align 8
  %58 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %4, align 8
  %59 = icmp eq %"struct.base::sequence_manager::Task"* %58, %57
  br i1 %59, label %60, label %62

60:                                               ; preds = %48
  %61 = ptrtoint %"struct.base::sequence_manager::Task"* %57 to i64
  br label %71

62:                                               ; preds = %48, %62
  %63 = phi %"struct.base::sequence_manager::Task"* [ %65, %62 ], [ %51, %48 ]
  %64 = phi %"struct.base::sequence_manager::Task"* [ %66, %62 ], [ %58, %48 ]
  %65 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %63, i64 -1
  %66 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %64, i64 -1
  tail call void @_ZN4base16sequence_manager4TaskC1EOS1_(%"struct.base::sequence_manager::Task"* %65, %"struct.base::sequence_manager::Task"* dereferenceable(128) %66) #14
  %67 = icmp eq %"struct.base::sequence_manager::Task"* %66, %57
  br i1 %67, label %68, label %62

68:                                               ; preds = %62
  %69 = load i64, i64* %7, align 8
  %70 = load %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"** %4, align 8
  br label %71

71:                                               ; preds = %60, %68
  %72 = phi %"struct.base::sequence_manager::Task"* [ %57, %60 ], [ %70, %68 ]
  %73 = phi %"struct.base::sequence_manager::Task"* [ %51, %60 ], [ %65, %68 ]
  %74 = phi i64 [ %61, %60 ], [ %69, %68 ]
  %75 = ptrtoint %"struct.base::sequence_manager::Task"* %73 to i64
  store i64 %75, i64* %7, align 8
  store i64 %55, i64* %5, align 8
  store i64 %53, i64* %17, align 8
  %76 = inttoptr i64 %74 to %"struct.base::sequence_manager::Task"*
  %77 = icmp eq %"struct.base::sequence_manager::Task"* %72, %76
  br i1 %77, label %82, label %78

78:                                               ; preds = %71, %78
  %79 = phi %"struct.base::sequence_manager::Task"* [ %80, %78 ], [ %72, %71 ]
  %80 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %79, i64 -1
  tail call void @_ZN4base16sequence_manager4TaskD1Ev(%"struct.base::sequence_manager::Task"* %80) #14
  %81 = icmp eq %"struct.base::sequence_manager::Task"* %80, %76
  br i1 %81, label %82, label %78

82:                                               ; preds = %78, %71
  %83 = icmp eq i64 %74, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %86 = load %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"*, %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"** %85, align 8
  %87 = icmp ne %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %86, null
  %88 = bitcast %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %86 to %"struct.base::sequence_manager::Task"*
  %89 = icmp eq %"struct.base::sequence_manager::Task"* %76, %88
  %90 = and i1 %87, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source", %"struct.base::StackAllocator<base::sequence_manager::Task, 8>::Source"* %86, i64 0, i32 1
  store i8 0, i8* %92, align 8
  br label %95

93:                                               ; preds = %84
  %94 = inttoptr i64 %74 to i8*
  tail call void @_ZdlPv(i8* %94) #15
  br label %95

95:                                               ; preds = %82, %91, %93
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
