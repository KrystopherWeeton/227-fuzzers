; ModuleID = '../../net/websockets/websocket_frame.cc'
source_filename = "../../net/websockets/websocket_frame.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::WebSocketFrame" = type { %"struct.net::WebSocketFrameHeader", i8* }
%"struct.net::WebSocketFrameHeader" = type { i8, i8, i8, i8, i32, i8, %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", i64 }
%"struct.net::WebSocketFrameHeader::WebSocketMaskingKey" = type { [4 x i8] }
%"struct.net::WebSocketFrameChunk" = type { %"class.std::__1::unique_ptr", i8, %"class.base::span" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.net::WebSocketFrameHeader"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }

@_ZN3net14WebSocketFrameC1Ei = hidden unnamed_addr alias void (%"struct.net::WebSocketFrame"*, i32), void (%"struct.net::WebSocketFrame"*, i32)* @_ZN3net14WebSocketFrameC2Ei
@_ZN3net14WebSocketFrameD1Ev = hidden unnamed_addr alias void (%"struct.net::WebSocketFrame"*), void (%"struct.net::WebSocketFrame"*)* @_ZN3net14WebSocketFrameD2Ev
@_ZN3net19WebSocketFrameChunkC1Ev = hidden unnamed_addr alias void (%"struct.net::WebSocketFrameChunk"*), void (%"struct.net::WebSocketFrameChunk"*)* @_ZN3net19WebSocketFrameChunkC2Ev
@_ZN3net19WebSocketFrameChunkD1Ev = hidden unnamed_addr alias void (%"struct.net::WebSocketFrameChunk"*), void (%"struct.net::WebSocketFrameChunk"*)* @_ZN3net19WebSocketFrameChunkD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"struct.net::WebSocketFrameHeader"* @_ZNK3net20WebSocketFrameHeader5CloneEv(%"struct.net::WebSocketFrameHeader"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 4
  %3 = tail call i8* @_Znwm(i64 24) #10
  %4 = bitcast i8* %3 to %"struct.net::WebSocketFrameHeader"*
  %5 = load i32, i32* %2, align 4
  %6 = getelementptr inbounds i8, i8* %3, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = getelementptr inbounds i8, i8* %3, i64 9
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %3, i64 16
  %12 = bitcast i8* %11 to i64*
  %13 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  store i8 %14, i8* %3, align 8
  %15 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 1
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 %16, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 2
  %19 = load i8, i8* %18, align 2, !range !2
  %20 = getelementptr inbounds i8, i8* %3, i64 2
  store i8 %19, i8* %20, align 2
  %21 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = getelementptr inbounds i8, i8* %3, i64 3
  store i8 %22, i8* %23, align 1
  store i32 %5, i32* %7, align 4
  %24 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 5
  %25 = load i8, i8* %24, align 8, !range !2
  store i8 %25, i8* %8, align 8
  %26 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 6, i32 0, i64 0
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 1
  store i32 %28, i32* %10, align 1
  %29 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 7
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %12, align 8
  ret %"struct.net::WebSocketFrameHeader"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net20WebSocketFrameHeader8CopyFromERKS0_(%"struct.net::WebSocketFrameHeader"* nocapture, %"struct.net::WebSocketFrameHeader"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %1, i64 0, i32 1
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 1
  store i8 %7, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 2
  store i8 %10, i8* %11, align 2
  %12 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %1, i64 0, i32 3
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 3
  store i8 %13, i8* %14, align 1
  %15 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 4
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %1, i64 0, i32 5
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 5
  store i8 %19, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 6, i32 0, i64 0
  %22 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %1, i64 0, i32 6, i32 0, i64 0
  %23 = bitcast i8* %22 to i32*
  %24 = bitcast i8* %21 to i32*
  %25 = load i32, i32* %23, align 1
  store i32 %25, i32* %24, align 1
  %26 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %1, i64 0, i32 7
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 7
  store i64 %27, i64* %28, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14WebSocketFrameC2Ei(%"struct.net::WebSocketFrame"* nocapture, i32) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.net::WebSocketFrame", %"struct.net::WebSocketFrame"* %0, i64 0, i32 0, i32 4
  %4 = bitcast %"struct.net::WebSocketFrame"* %0 to i32*
  store i32 0, i32* %4, align 8
  store i32 %1, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.net::WebSocketFrame", %"struct.net::WebSocketFrame"* %0, i64 0, i32 0, i32 5
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.net::WebSocketFrame", %"struct.net::WebSocketFrame"* %0, i64 0, i32 0, i32 6, i32 0, i64 0
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 1
  %8 = getelementptr inbounds %"struct.net::WebSocketFrame", %"struct.net::WebSocketFrame"* %0, i64 0, i32 0, i32 7
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net14WebSocketFrameD2Ev(%"struct.net::WebSocketFrame"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19WebSocketFrameChunkC2Ev(%"struct.net::WebSocketFrameChunk"* nocapture) unnamed_addr #4 align 2 {
  %2 = bitcast %"struct.net::WebSocketFrameChunk"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.net::WebSocketFrameChunk", %"struct.net::WebSocketFrameChunk"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.net::WebSocketFrameChunk", %"struct.net::WebSocketFrameChunk"* %0, i64 0, i32 2
  %5 = bitcast %"class.base::span"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19WebSocketFrameChunkD2Ev(%"struct.net::WebSocketFrameChunk"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.net::WebSocketFrameChunk", %"struct.net::WebSocketFrameChunk"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %2, align 8
  store %"struct.net::WebSocketFrameHeader"* null, %"struct.net::WebSocketFrameHeader"** %2, align 8
  %4 = icmp eq %"struct.net::WebSocketFrameHeader"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %3, i64 0, i32 0
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3net27GetWebSocketFrameHeaderSizeERKNS_20WebSocketFrameHeaderE(%"struct.net::WebSocketFrameHeader"* nocapture readonly dereferenceable(24)) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -126
  %5 = icmp ult i64 %4, 65410
  %6 = icmp ugt i64 %3, 65535
  %7 = select i1 %6, i32 10, i32 2
  %8 = select i1 %5, i32 4, i32 %7
  %9 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 0, i32 4
  %13 = add nuw nsw i32 %8, %12
  ret i32 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net25WriteWebSocketFrameHeaderERKNS_20WebSocketFrameHeaderEPKNS0_19WebSocketMaskingKeyEPci(%"struct.net::WebSocketFrameHeader"* nocapture readonly dereferenceable(24), %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"*, i8* nocapture, i32) local_unnamed_addr #4 {
  %5 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -126
  %8 = icmp ult i64 %7, 65410
  %9 = icmp ugt i64 %6, 65535
  %10 = select i1 %9, i32 10, i32 2
  %11 = select i1 %8, i32 4, i32 %10
  %12 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 5
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 0, i32 4
  %16 = add nuw nsw i32 %11, %15
  %17 = icmp sgt i32 %16, %3
  br i1 %17, label %100, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, i32 0, i32 128
  %23 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 1
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 0, i32 64
  %27 = or i32 %26, %22
  %28 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 2
  %29 = load i8, i8* %28, align 2, !range !2
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i32 0, i32 32
  %32 = or i32 %27, %31
  %33 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 3
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = select i1 %35, i32 0, i32 16
  %37 = or i32 %32, %36
  %38 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 15
  %41 = or i32 %37, %40
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %2, align 1
  %43 = load i8, i8* %12, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i8 0, i8 -128
  %46 = load i64, i64* %5, align 8
  %47 = icmp ult i64 %46, 126
  br i1 %47, label %48, label %52

48:                                               ; preds = %18
  %49 = trunc i64 %46 to i8
  %50 = or i8 %45, %49
  %51 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %50, i8* %51, align 1
  br label %91

52:                                               ; preds = %18
  %53 = icmp ult i64 %46, 65536
  br i1 %53, label %54, label %64

54:                                               ; preds = %52
  %55 = or i8 %45, 126
  %56 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %55, i8* %56, align 1
  %57 = load i64, i64* %5, align 8
  %58 = trunc i64 %57 to i16
  %59 = getelementptr inbounds i8, i8* %2, i64 2
  %60 = trunc i64 %57 to i8
  %61 = getelementptr inbounds i8, i8* %2, i64 3
  store i8 %60, i8* %61, align 1
  %62 = lshr i16 %58, 8
  %63 = trunc i16 %62 to i8
  store i8 %63, i8* %59, align 1
  br label %91

64:                                               ; preds = %52
  %65 = or i8 %45, 127
  %66 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %65, i8* %66, align 1
  %67 = getelementptr inbounds i8, i8* %2, i64 2
  %68 = load i64, i64* %5, align 8
  %69 = trunc i64 %68 to i8
  %70 = getelementptr inbounds i8, i8* %2, i64 9
  store i8 %69, i8* %70, align 1
  %71 = lshr i64 %68, 8
  %72 = trunc i64 %71 to i8
  %73 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 %72, i8* %73, align 1
  %74 = lshr i64 %68, 16
  %75 = trunc i64 %74 to i8
  %76 = getelementptr inbounds i8, i8* %2, i64 7
  store i8 %75, i8* %76, align 1
  %77 = lshr i64 %68, 24
  %78 = trunc i64 %77 to i8
  %79 = getelementptr inbounds i8, i8* %2, i64 6
  store i8 %78, i8* %79, align 1
  %80 = lshr i64 %68, 32
  %81 = trunc i64 %80 to i8
  %82 = getelementptr inbounds i8, i8* %2, i64 5
  store i8 %81, i8* %82, align 1
  %83 = lshr i64 %68, 40
  %84 = trunc i64 %83 to i8
  %85 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 %84, i8* %85, align 1
  %86 = lshr i64 %68, 48
  %87 = trunc i64 %86 to i8
  %88 = getelementptr inbounds i8, i8* %2, i64 3
  store i8 %87, i8* %88, align 1
  %89 = lshr i64 %68, 56
  %90 = trunc i64 %89 to i8
  store i8 %90, i8* %67, align 1
  br label %91

91:                                               ; preds = %48, %64, %54
  %92 = phi i64 [ 4, %54 ], [ 10, %64 ], [ 2, %48 ]
  %93 = load i8, i8* %12, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds i8, i8* %2, i64 %92
  %97 = bitcast %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %1 to i32*
  %98 = bitcast i8* %96 to i32*
  %99 = load i32, i32* %97, align 1
  store i32 %99, i32* %98, align 1
  br label %100

100:                                              ; preds = %95, %91, %4
  %101 = phi i32 [ -4, %4 ], [ %16, %91 ], [ %16, %95 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net27GenerateWebSocketMaskingKeyEv() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  store i32 -1431655766, i32* %1, align 4
  call void @_ZN4base9RandBytesEPvm(i8* nonnull %2, i64 4) #11
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

declare void @_ZN4base9RandBytesEPvm(i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net25MaskWebSocketFramePayloadERKNS_20WebSocketFrameHeader19WebSocketMaskingKeyEmPci(%"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* nocapture readonly dereferenceable(4), i64, i8*, i32) local_unnamed_addr #4 {
  %5 = ptrtoint i8* %2 to i64
  %6 = alloca <4 x i32>, align 16
  %7 = alloca i32, align 4
  %8 = bitcast <4 x i32>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  store <4 x i32> <i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766>, <4 x i32>* %6, align 16
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds i8, i8* %2, i64 %9
  %11 = icmp slt i32 %3, 33
  br i1 %11, label %12, label %118

12:                                               ; preds = %4
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %384, label %14

14:                                               ; preds = %12
  %15 = and i64 %1, 3
  %16 = icmp ult i32 %3, 32
  br i1 %16, label %104, label %17

17:                                               ; preds = %14
  %18 = add nsw i64 %9, -1
  %19 = trunc i64 %1 to i2
  %20 = trunc i64 %18 to i2
  %21 = xor i2 %19, -1
  %22 = icmp ult i2 %21, %20
  %23 = icmp ugt i64 %18, 3
  %24 = or i1 %22, %23
  br i1 %24, label %104, label %25

25:                                               ; preds = %17
  %26 = getelementptr %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %15
  %27 = add nsw i64 %15, %9
  %28 = getelementptr %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %27
  %29 = icmp ugt i8* %28, %2
  %30 = icmp ult i8* %26, %10
  %31 = and i1 %29, %30
  br i1 %31, label %104, label %32

32:                                               ; preds = %25
  %33 = and i64 %9, -32
  %34 = getelementptr i8, i8* %2, i64 %33
  %35 = or i64 %15, %33
  %36 = add nsw i64 %33, -32
  %37 = lshr exact i64 %36, 5
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %36, 0
  br i1 %40, label %82, label %41

41:                                               ; preds = %32
  %42 = sub nuw nsw i64 %38, %39
  %43 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %15
  %44 = bitcast i8* %43 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 1, !alias.scope !3
  %46 = getelementptr inbounds i8, i8* %43, i64 16
  %47 = bitcast i8* %46 to <16 x i8>*
  %48 = load <16 x i8>, <16 x i8>* %47, align 1, !alias.scope !3
  %49 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %15
  %50 = bitcast i8* %49 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1, !alias.scope !3
  %52 = getelementptr inbounds i8, i8* %49, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1, !alias.scope !3
  br label %55

55:                                               ; preds = %55, %41
  %56 = phi i64 [ 0, %41 ], [ %79, %55 ]
  %57 = phi i64 [ %42, %41 ], [ %80, %55 ]
  %58 = getelementptr i8, i8* %2, i64 %56
  %59 = bitcast i8* %58 to <16 x i8>*
  %60 = load <16 x i8>, <16 x i8>* %59, align 1, !alias.scope !6, !noalias !3
  %61 = getelementptr i8, i8* %58, i64 16
  %62 = bitcast i8* %61 to <16 x i8>*
  %63 = load <16 x i8>, <16 x i8>* %62, align 1, !alias.scope !6, !noalias !3
  %64 = xor <16 x i8> %60, %45
  %65 = xor <16 x i8> %63, %48
  %66 = bitcast i8* %58 to <16 x i8>*
  store <16 x i8> %64, <16 x i8>* %66, align 1, !alias.scope !6, !noalias !3
  %67 = bitcast i8* %61 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %67, align 1, !alias.scope !6, !noalias !3
  %68 = or i64 %56, 32
  %69 = getelementptr i8, i8* %2, i64 %68
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1, !alias.scope !6, !noalias !3
  %72 = getelementptr i8, i8* %69, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1, !alias.scope !6, !noalias !3
  %75 = xor <16 x i8> %71, %51
  %76 = xor <16 x i8> %74, %54
  %77 = bitcast i8* %69 to <16 x i8>*
  store <16 x i8> %75, <16 x i8>* %77, align 1, !alias.scope !6, !noalias !3
  %78 = bitcast i8* %72 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %78, align 1, !alias.scope !6, !noalias !3
  %79 = add i64 %56, 64
  %80 = add i64 %57, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %55, !llvm.loop !8

82:                                               ; preds = %55, %32
  %83 = phi i64 [ 0, %32 ], [ %79, %55 ]
  %84 = icmp eq i64 %39, 0
  br i1 %84, label %102, label %85

85:                                               ; preds = %82
  %86 = getelementptr i8, i8* %2, i64 %83
  %87 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %15
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1, !alias.scope !3
  %90 = getelementptr inbounds i8, i8* %87, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !3
  %93 = bitcast i8* %86 to <16 x i8>*
  %94 = load <16 x i8>, <16 x i8>* %93, align 1, !alias.scope !6, !noalias !3
  %95 = getelementptr i8, i8* %86, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  %97 = load <16 x i8>, <16 x i8>* %96, align 1, !alias.scope !6, !noalias !3
  %98 = xor <16 x i8> %94, %89
  %99 = xor <16 x i8> %97, %92
  %100 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %100, align 1, !alias.scope !6, !noalias !3
  %101 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %101, align 1, !alias.scope !6, !noalias !3
  br label %102

102:                                              ; preds = %82, %85
  %103 = icmp eq i64 %33, %9
  br i1 %103, label %384, label %104

104:                                              ; preds = %102, %25, %17, %14
  %105 = phi i8* [ %2, %25 ], [ %2, %17 ], [ %2, %14 ], [ %34, %102 ]
  %106 = phi i64 [ %15, %25 ], [ %15, %17 ], [ %15, %14 ], [ %35, %102 ]
  br label %107

107:                                              ; preds = %104, %107
  %108 = phi i8* [ %116, %107 ], [ %105, %104 ]
  %109 = phi i64 [ %110, %107 ], [ %106, %104 ]
  %110 = add i64 %109, 1
  %111 = and i64 %109, 3
  %112 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = load i8, i8* %108, align 1
  %115 = xor i8 %114, %113
  store i8 %115, i8* %108, align 1
  %116 = getelementptr inbounds i8, i8* %108, i64 1
  %117 = icmp eq i8* %116, %10
  br i1 %117, label %384, label %107, !llvm.loop !10

118:                                              ; preds = %4
  %119 = and i64 %5, 15
  %120 = icmp eq i64 %119, 0
  %121 = getelementptr inbounds i8, i8* %2, i64 16
  %122 = sub nsw i64 0, %119
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  %124 = select i1 %120, i8* %2, i8* %123
  %125 = ptrtoint i8* %124 to i64
  %126 = icmp eq i8* %124, %2
  br i1 %126, label %236, label %127

127:                                              ; preds = %118
  %128 = and i64 %1, 3
  %129 = sub i64 %125, %5
  %130 = icmp ult i64 %129, 32
  br i1 %130, label %222, label %131

131:                                              ; preds = %127
  %132 = xor i64 %5, -1
  %133 = getelementptr i8, i8* %124, i64 %132
  %134 = ptrtoint i8* %133 to i64
  %135 = trunc i64 %1 to i2
  %136 = trunc i64 %134 to i2
  %137 = xor i2 %135, -1
  %138 = icmp ult i2 %137, %136
  %139 = icmp ugt i8* %133, inttoptr (i64 3 to i8*)
  %140 = or i1 %138, %139
  br i1 %140, label %222, label %141

141:                                              ; preds = %131
  %142 = getelementptr %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %128
  %143 = sub i64 %128, %5
  %144 = getelementptr %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %143
  %145 = ptrtoint i8* %144 to i64
  %146 = getelementptr i8, i8* %124, i64 %145
  %147 = icmp ugt i8* %146, %2
  %148 = icmp ult i8* %142, %124
  %149 = and i1 %147, %148
  br i1 %149, label %222, label %150

150:                                              ; preds = %141
  %151 = and i64 %129, -32
  %152 = getelementptr i8, i8* %2, i64 %151
  %153 = or i64 %128, %151
  %154 = add i64 %151, -32
  %155 = lshr exact i64 %154, 5
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 1
  %158 = icmp eq i64 %154, 0
  br i1 %158, label %200, label %159

159:                                              ; preds = %150
  %160 = sub nuw nsw i64 %156, %157
  %161 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %128
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !11
  %164 = getelementptr inbounds i8, i8* %161, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  %166 = load <16 x i8>, <16 x i8>* %165, align 1, !alias.scope !11
  %167 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %128
  %168 = bitcast i8* %167 to <16 x i8>*
  %169 = load <16 x i8>, <16 x i8>* %168, align 1, !alias.scope !11
  %170 = getelementptr inbounds i8, i8* %167, i64 16
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !alias.scope !11
  br label %173

173:                                              ; preds = %173, %159
  %174 = phi i64 [ 0, %159 ], [ %197, %173 ]
  %175 = phi i64 [ %160, %159 ], [ %198, %173 ]
  %176 = getelementptr i8, i8* %2, i64 %174
  %177 = bitcast i8* %176 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !14, !noalias !11
  %179 = getelementptr i8, i8* %176, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !14, !noalias !11
  %182 = xor <16 x i8> %178, %163
  %183 = xor <16 x i8> %181, %166
  %184 = bitcast i8* %176 to <16 x i8>*
  store <16 x i8> %182, <16 x i8>* %184, align 1, !alias.scope !14, !noalias !11
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %185, align 1, !alias.scope !14, !noalias !11
  %186 = or i64 %174, 32
  %187 = getelementptr i8, i8* %2, i64 %186
  %188 = bitcast i8* %187 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 1, !alias.scope !14, !noalias !11
  %190 = getelementptr i8, i8* %187, i64 16
  %191 = bitcast i8* %190 to <16 x i8>*
  %192 = load <16 x i8>, <16 x i8>* %191, align 1, !alias.scope !14, !noalias !11
  %193 = xor <16 x i8> %189, %169
  %194 = xor <16 x i8> %192, %172
  %195 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %195, align 1, !alias.scope !14, !noalias !11
  %196 = bitcast i8* %190 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %196, align 1, !alias.scope !14, !noalias !11
  %197 = add i64 %174, 64
  %198 = add i64 %175, -2
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %173, !llvm.loop !16

200:                                              ; preds = %173, %150
  %201 = phi i64 [ 0, %150 ], [ %197, %173 ]
  %202 = icmp eq i64 %157, 0
  br i1 %202, label %220, label %203

203:                                              ; preds = %200
  %204 = getelementptr i8, i8* %2, i64 %201
  %205 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %128
  %206 = bitcast i8* %205 to <16 x i8>*
  %207 = load <16 x i8>, <16 x i8>* %206, align 1, !alias.scope !11
  %208 = getelementptr inbounds i8, i8* %205, i64 16
  %209 = bitcast i8* %208 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !11
  %211 = bitcast i8* %204 to <16 x i8>*
  %212 = load <16 x i8>, <16 x i8>* %211, align 1, !alias.scope !14, !noalias !11
  %213 = getelementptr i8, i8* %204, i64 16
  %214 = bitcast i8* %213 to <16 x i8>*
  %215 = load <16 x i8>, <16 x i8>* %214, align 1, !alias.scope !14, !noalias !11
  %216 = xor <16 x i8> %212, %207
  %217 = xor <16 x i8> %215, %210
  %218 = bitcast i8* %204 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %218, align 1, !alias.scope !14, !noalias !11
  %219 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %217, <16 x i8>* %219, align 1, !alias.scope !14, !noalias !11
  br label %220

220:                                              ; preds = %200, %203
  %221 = icmp eq i64 %129, %151
  br i1 %221, label %236, label %222

222:                                              ; preds = %220, %141, %131, %127
  %223 = phi i8* [ %2, %141 ], [ %2, %131 ], [ %2, %127 ], [ %152, %220 ]
  %224 = phi i64 [ %128, %141 ], [ %128, %131 ], [ %128, %127 ], [ %153, %220 ]
  br label %225

225:                                              ; preds = %222, %225
  %226 = phi i8* [ %234, %225 ], [ %223, %222 ]
  %227 = phi i64 [ %228, %225 ], [ %224, %222 ]
  %228 = add i64 %227, 1
  %229 = and i64 %227, 3
  %230 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = load i8, i8* %226, align 1
  %233 = xor i8 %232, %231
  store i8 %233, i8* %226, align 1
  %234 = getelementptr inbounds i8, i8* %226, i64 1
  %235 = icmp eq i8* %234, %124
  br i1 %235, label %236, label %225, !llvm.loop !17

236:                                              ; preds = %225, %220, %118
  %237 = ptrtoint i8* %10 to i64
  %238 = and i64 %237, 15
  %239 = sub nsw i64 0, %238
  %240 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %240) #11
  %241 = getelementptr inbounds i8, i8* %124, i64 %1
  %242 = ptrtoint i8* %241 to i64
  %243 = sub i64 %242, %5
  %244 = and i64 %243, 3
  %245 = add i64 %243, 1
  %246 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %244
  %247 = load i8, i8* %246, align 1
  store i8 %247, i8* %240, align 4
  %248 = getelementptr inbounds i8, i8* %240, i64 1
  %249 = add i64 %243, 2
  %250 = and i64 %245, 3
  %251 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %250
  %252 = load i8, i8* %251, align 1
  store i8 %252, i8* %248, align 1
  %253 = getelementptr inbounds i8, i8* %240, i64 2
  %254 = add i64 %243, 3
  %255 = and i64 %249, 3
  %256 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %255
  %257 = load i8, i8* %256, align 1
  store i8 %257, i8* %253, align 2
  %258 = getelementptr inbounds i8, i8* %240, i64 3
  %259 = and i64 %254, 3
  %260 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %259
  %261 = load i8, i8* %260, align 1
  store i8 %261, i8* %258, align 1
  %262 = getelementptr inbounds i8, i8* %10, i64 %239
  %263 = load i32, i32* %7, align 4
  %264 = insertelement <4 x i32> undef, i32 %263, i32 0
  %265 = shufflevector <4 x i32> %264, <4 x i32> undef, <4 x i32> zeroinitializer
  store <4 x i32> %265, <4 x i32>* %6, align 16
  %266 = icmp eq i8* %124, %262
  br i1 %266, label %290, label %267

267:                                              ; preds = %236
  %268 = load <4 x i32>, <4 x i32>* %6, align 16
  %269 = add nsw i64 %9, -16
  %270 = sub i64 %269, %125
  %271 = sub i64 %270, %238
  %272 = getelementptr i8, i8* %2, i64 %271
  %273 = ptrtoint i8* %272 to i64
  %274 = lshr i64 %273, 4
  %275 = add nuw nsw i64 %274, 1
  %276 = and i64 %275, 7
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %287, label %278

278:                                              ; preds = %267, %278
  %279 = phi i8* [ %284, %278 ], [ %124, %267 ]
  %280 = phi i64 [ %285, %278 ], [ %276, %267 ]
  %281 = bitcast i8* %279 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 16
  %283 = xor <4 x i32> %282, %268
  store <4 x i32> %283, <4 x i32>* %281, align 16
  %284 = getelementptr inbounds i8, i8* %279, i64 16
  %285 = add i64 %280, -1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %278, !llvm.loop !18

287:                                              ; preds = %278, %267
  %288 = phi i8* [ %124, %267 ], [ %284, %278 ]
  %289 = icmp ult i8* %272, inttoptr (i64 112 to i8*)
  br i1 %289, label %290, label %349

290:                                              ; preds = %287, %349, %236
  %291 = icmp eq i64 %238, 0
  br i1 %291, label %348, label %292

292:                                              ; preds = %290
  %293 = sub i64 %1, %5
  %294 = ptrtoint i8* %262 to i64
  %295 = add i64 %293, %294
  %296 = and i64 %295, 3
  %297 = add nsw i64 %238, -1
  %298 = and i64 %237, 3
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %313, label %300

300:                                              ; preds = %292, %300
  %301 = phi i8* [ %310, %300 ], [ %262, %292 ]
  %302 = phi i64 [ %304, %300 ], [ %296, %292 ]
  %303 = phi i64 [ %311, %300 ], [ %298, %292 ]
  %304 = add nuw nsw i64 %302, 1
  %305 = and i64 %302, 3
  %306 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %305
  %307 = load i8, i8* %306, align 1
  %308 = load i8, i8* %301, align 1
  %309 = xor i8 %308, %307
  store i8 %309, i8* %301, align 1
  %310 = getelementptr inbounds i8, i8* %301, i64 1
  %311 = add i64 %303, -1
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %300, !llvm.loop !20

313:                                              ; preds = %300, %292
  %314 = phi i8* [ %262, %292 ], [ %310, %300 ]
  %315 = phi i64 [ %296, %292 ], [ %304, %300 ]
  %316 = icmp ult i64 %297, 3
  br i1 %316, label %348, label %317

317:                                              ; preds = %313
  %318 = add i64 %315, 3
  %319 = and i64 %318, 3
  %320 = and i64 %315, 3
  %321 = xor i64 %320, 2
  %322 = add i64 %315, 1
  %323 = and i64 %322, 3
  %324 = and i64 %315, 3
  %325 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %324
  %326 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %323
  %327 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %321
  %328 = getelementptr inbounds %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey"* %0, i64 0, i32 0, i64 %319
  br label %329

329:                                              ; preds = %329, %317
  %330 = phi i8* [ %314, %317 ], [ %346, %329 ]
  %331 = load i8, i8* %325, align 1
  %332 = load i8, i8* %330, align 1
  %333 = xor i8 %332, %331
  store i8 %333, i8* %330, align 1
  %334 = getelementptr inbounds i8, i8* %330, i64 1
  %335 = load i8, i8* %326, align 1
  %336 = load i8, i8* %334, align 1
  %337 = xor i8 %336, %335
  store i8 %337, i8* %334, align 1
  %338 = getelementptr inbounds i8, i8* %330, i64 2
  %339 = load i8, i8* %327, align 1
  %340 = load i8, i8* %338, align 1
  %341 = xor i8 %340, %339
  store i8 %341, i8* %338, align 1
  %342 = getelementptr inbounds i8, i8* %330, i64 3
  %343 = load i8, i8* %328, align 1
  %344 = load i8, i8* %342, align 1
  %345 = xor i8 %344, %343
  store i8 %345, i8* %342, align 1
  %346 = getelementptr inbounds i8, i8* %330, i64 4
  %347 = icmp eq i8* %346, %10
  br i1 %347, label %348, label %329

348:                                              ; preds = %313, %329, %290
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %240) #11
  br label %384

349:                                              ; preds = %287, %349
  %350 = phi i8* [ %382, %349 ], [ %288, %287 ]
  %351 = bitcast i8* %350 to <4 x i32>*
  %352 = load <4 x i32>, <4 x i32>* %351, align 16
  %353 = xor <4 x i32> %352, %268
  store <4 x i32> %353, <4 x i32>* %351, align 16
  %354 = getelementptr inbounds i8, i8* %350, i64 16
  %355 = bitcast i8* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 16
  %357 = xor <4 x i32> %356, %268
  store <4 x i32> %357, <4 x i32>* %355, align 16
  %358 = getelementptr inbounds i8, i8* %350, i64 32
  %359 = bitcast i8* %358 to <4 x i32>*
  %360 = load <4 x i32>, <4 x i32>* %359, align 16
  %361 = xor <4 x i32> %360, %268
  store <4 x i32> %361, <4 x i32>* %359, align 16
  %362 = getelementptr inbounds i8, i8* %350, i64 48
  %363 = bitcast i8* %362 to <4 x i32>*
  %364 = load <4 x i32>, <4 x i32>* %363, align 16
  %365 = xor <4 x i32> %364, %268
  store <4 x i32> %365, <4 x i32>* %363, align 16
  %366 = getelementptr inbounds i8, i8* %350, i64 64
  %367 = bitcast i8* %366 to <4 x i32>*
  %368 = load <4 x i32>, <4 x i32>* %367, align 16
  %369 = xor <4 x i32> %368, %268
  store <4 x i32> %369, <4 x i32>* %367, align 16
  %370 = getelementptr inbounds i8, i8* %350, i64 80
  %371 = bitcast i8* %370 to <4 x i32>*
  %372 = load <4 x i32>, <4 x i32>* %371, align 16
  %373 = xor <4 x i32> %372, %268
  store <4 x i32> %373, <4 x i32>* %371, align 16
  %374 = getelementptr inbounds i8, i8* %350, i64 96
  %375 = bitcast i8* %374 to <4 x i32>*
  %376 = load <4 x i32>, <4 x i32>* %375, align 16
  %377 = xor <4 x i32> %376, %268
  store <4 x i32> %377, <4 x i32>* %375, align 16
  %378 = getelementptr inbounds i8, i8* %350, i64 112
  %379 = bitcast i8* %378 to <4 x i32>*
  %380 = load <4 x i32>, <4 x i32>* %379, align 16
  %381 = xor <4 x i32> %380, %268
  store <4 x i32> %381, <4 x i32>* %379, align 16
  %382 = getelementptr inbounds i8, i8* %350, i64 128
  %383 = icmp eq i8* %382, %262
  br i1 %383, label %290, label %349

384:                                              ; preds = %107, %102, %12, %348
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !9}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
