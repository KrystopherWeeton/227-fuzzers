; ModuleID = '../../third_party/angle/src/libANGLE/EGLSync.cpp'
source_filename = "../../third_party/angle/src/libANGLE/EGLSync.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.egl::Sync" = type <{ %"class.angle::RefCountObject", %"class.egl::LabeledObject", %"class.std::__1::unique_ptr", i8*, i32, i32, i32, [4 x i8] }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.rx::EGLSyncImpl"* }
%"class.rx::EGLSyncImpl" = type { i32 (...)** }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"class.egl::AttributeMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.rx::ReusableSync" = type { %"class.rx::EGLSyncImpl", i32, %"class.std::__1::condition_variable", %"class.std::__1::unique_lock" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.7, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.7 = type { i64 }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.egl::Display" = type opaque
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.14 }
%union.anon.14 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gl::Context" = type opaque

$_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEE9onDestroyEPKS2_ = comdat any

$_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEED2Ev = comdat any

$_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEED0Ev = comdat any

$_ZTVN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEEE = comdat any

@_ZTVN3egl4SyncE = hidden unnamed_addr constant { [7 x i8*], [6 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.egl::Sync"*, %"class.egl::Display"*)* @_ZN3egl4Sync9onDestroyEPKNS_7DisplayE to i8*), i8* bitcast (void (%"class.egl::Sync"*)* @_ZN3egl4SyncD2Ev to i8*), i8* bitcast (void (%"class.egl::Sync"*)* @_ZN3egl4SyncD0Ev to i8*), i8* bitcast (void (%"class.egl::Sync"*, i8*)* @_ZN3egl4Sync8setLabelEPv to i8*), i8* bitcast (i8* (%"class.egl::Sync"*)* @_ZNK3egl4Sync8getLabelEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.egl::Sync"*)* @_ZThn16_N3egl4SyncD1Ev to i8*), i8* bitcast (void (%"class.egl::Sync"*)* @_ZThn16_N3egl4SyncD0Ev to i8*), i8* bitcast (void (%"class.egl::Sync"*, i8*)* @_ZThn16_N3egl4Sync8setLabelEPv to i8*), i8* bitcast (i8* (%"class.egl::Sync"*)* @_ZThn16_NK3egl4Sync8getLabelEv to i8*)] }, align 8
@_ZTVN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::RefCountObject"*, %"class.egl::Display"*)* @_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEE9onDestroyEPKS2_ to i8*), i8* bitcast (void (%"class.angle::RefCountObject"*)* @_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::RefCountObject"*)* @_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEED0Ev to i8*)] }, comdat, align 8

@_ZN3egl4SyncC1EPN2rx14EGLImplFactoryEjRKNS_12AttributeMapE = hidden unnamed_addr alias void (%"class.egl::Sync"*, %"class.rx::EGLImplFactory"*, i32, %"class.egl::AttributeMap"*), void (%"class.egl::Sync"*, %"class.rx::EGLImplFactory"*, i32, %"class.egl::AttributeMap"*)* @_ZN3egl4SyncC2EPN2rx14EGLImplFactoryEjRKNS_12AttributeMapE
@_ZN3egl4SyncD1Ev = hidden unnamed_addr alias void (%"class.egl::Sync"*), void (%"class.egl::Sync"*)* @_ZN3egl4SyncD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl4SyncC2EPN2rx14EGLImplFactoryEjRKNS_12AttributeMapE(%"class.egl::Sync"* nocapture, %"class.rx::EGLImplFactory"*, i32, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  %10 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 4
  %11 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store i32 %2, i32* %10, align 8
  %12 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 5
  store i32 12528, i32* %12, align 4
  %13 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 6
  %14 = tail call i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"* %3, i64 12613, i32 -1) #7
  store i32 %14, i32* %13, align 8
  switch i32 %2, label %42 [
    i32 12537, label %15
    i32 12612, label %15
    i32 12538, label %30
  ]

15:                                               ; preds = %4, %4
  %16 = bitcast %"class.rx::EGLImplFactory"* %1 to %"class.rx::EGLSyncImpl"* (%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"*)***
  %17 = load %"class.rx::EGLSyncImpl"* (%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"*)**, %"class.rx::EGLSyncImpl"* (%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.rx::EGLSyncImpl"* (%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"*)*, %"class.rx::EGLSyncImpl"* (%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"*)** %17, i64 10
  %19 = load %"class.rx::EGLSyncImpl"* (%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"*)*, %"class.rx::EGLSyncImpl"* (%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"*)** %18, align 8
  %20 = tail call %"class.rx::EGLSyncImpl"* %19(%"class.rx::EGLImplFactory"* %1, %"class.egl::AttributeMap"* dereferenceable(24) %3) #7
  %21 = ptrtoint %"class.rx::EGLSyncImpl"* %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %22, align 8
  store i64 %21, i64* %9, align 8
  %24 = icmp eq %"class.rx::EGLSyncImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %15
  %26 = bitcast %"class.rx::EGLSyncImpl"* %23 to void (%"class.rx::EGLSyncImpl"*)***
  %27 = load void (%"class.rx::EGLSyncImpl"*)**, void (%"class.rx::EGLSyncImpl"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %27, i64 1
  %29 = load void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %28, align 8
  tail call void %29(%"class.rx::EGLSyncImpl"* nonnull %23) #7
  br label %42

30:                                               ; preds = %4
  %31 = tail call i8* @_Znwm(i64 80) #8
  %32 = bitcast i8* %31 to %"class.rx::ReusableSync"*
  tail call void @_ZN2rx12ReusableSyncC1ERKN3egl12AttributeMapE(%"class.rx::ReusableSync"* nonnull %32, %"class.egl::AttributeMap"* dereferenceable(24) %3) #7
  %33 = ptrtoint i8* %31 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %34, align 8
  store i64 %33, i64* %9, align 8
  %36 = icmp eq %"class.rx::EGLSyncImpl"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.rx::EGLSyncImpl"* %35 to void (%"class.rx::EGLSyncImpl"*)***
  %39 = load void (%"class.rx::EGLSyncImpl"*)**, void (%"class.rx::EGLSyncImpl"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %39, i64 1
  %41 = load void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %40, align 8
  tail call void %41(%"class.rx::EGLSyncImpl"* nonnull %35) #7
  br label %42

42:                                               ; preds = %30, %37, %15, %25, %4
  %43 = load i32, i32* %10, align 8
  %44 = icmp eq i32 %43, 12612
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = load i32, i32* %13, align 8
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  store i32 12614, i32* %12, align 4
  br label %49

49:                                               ; preds = %45, %48, %42
  ret void
}

declare i32 @_ZNK3egl12AttributeMap8getAsIntEli(%"class.egl::AttributeMap"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN2rx12ReusableSyncC1ERKN3egl12AttributeMapE(%"class.rx::ReusableSync"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl4Sync9onDestroyEPKNS_7DisplayE(%"class.egl::Sync"* nocapture, %"class.egl::Display"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %3, align 8
  %5 = bitcast %"class.rx::EGLSyncImpl"* %4 to void (%"class.rx::EGLSyncImpl"*, %"class.egl::Display"*)***
  %6 = load void (%"class.rx::EGLSyncImpl"*, %"class.egl::Display"*)**, void (%"class.rx::EGLSyncImpl"*, %"class.egl::Display"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.rx::EGLSyncImpl"*, %"class.egl::Display"*)*, void (%"class.rx::EGLSyncImpl"*, %"class.egl::Display"*)** %6, i64 2
  %8 = load void (%"class.rx::EGLSyncImpl"*, %"class.egl::Display"*)*, void (%"class.rx::EGLSyncImpl"*, %"class.egl::Display"*)** %7, align 8
  tail call void %8(%"class.rx::EGLSyncImpl"* %4, %"class.egl::Display"* %1) #7
  %9 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %3, align 8
  store %"class.rx::EGLSyncImpl"* null, %"class.rx::EGLSyncImpl"** %3, align 8
  %10 = icmp eq %"class.rx::EGLSyncImpl"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.rx::EGLSyncImpl"* %9 to void (%"class.rx::EGLSyncImpl"*)***
  %13 = load void (%"class.rx::EGLSyncImpl"*)**, void (%"class.rx::EGLSyncImpl"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %13, i64 1
  %15 = load void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %14, align 8
  tail call void %15(%"class.rx::EGLSyncImpl"* nonnull %9) #7
  br label %16

16:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl4SyncD2Ev(%"class.egl::Sync"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %4, align 8
  store %"class.rx::EGLSyncImpl"* null, %"class.rx::EGLSyncImpl"** %4, align 8
  %6 = icmp eq %"class.rx::EGLSyncImpl"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.rx::EGLSyncImpl"* %5 to void (%"class.rx::EGLSyncImpl"*)***
  %9 = load void (%"class.rx::EGLSyncImpl"*)**, void (%"class.rx::EGLSyncImpl"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %9, i64 1
  %11 = load void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %10, align 8
  tail call void %11(%"class.rx::EGLSyncImpl"* nonnull %5) #7
  br label %12

12:                                               ; preds = %1, %7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3egl4SyncD1Ev(%"class.egl::Sync"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 -1, i32 4
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 4
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 6
  %7 = bitcast i32* %6 to %"class.rx::EGLSyncImpl"**
  %8 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %7, align 8
  store %"class.rx::EGLSyncImpl"* null, %"class.rx::EGLSyncImpl"** %7, align 8
  %9 = icmp eq %"class.rx::EGLSyncImpl"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.rx::EGLSyncImpl"* %8 to void (%"class.rx::EGLSyncImpl"*)***
  %12 = load void (%"class.rx::EGLSyncImpl"*)**, void (%"class.rx::EGLSyncImpl"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %12, i64 1
  %14 = load void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %13, align 8
  tail call void %14(%"class.rx::EGLSyncImpl"* nonnull %8) #7
  br label %15

15:                                               ; preds = %1, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl4SyncD0Ev(%"class.egl::Sync"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %4, align 8
  store %"class.rx::EGLSyncImpl"* null, %"class.rx::EGLSyncImpl"** %4, align 8
  %6 = icmp eq %"class.rx::EGLSyncImpl"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.rx::EGLSyncImpl"* %5 to void (%"class.rx::EGLSyncImpl"*)***
  %9 = load void (%"class.rx::EGLSyncImpl"*)**, void (%"class.rx::EGLSyncImpl"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %9, i64 1
  %11 = load void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %10, align 8
  tail call void %11(%"class.rx::EGLSyncImpl"* nonnull %5) #7
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.egl::Sync"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3egl4SyncD0Ev(%"class.egl::Sync"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 -1, i32 4
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 4
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [6 x i8*] }, { [7 x i8*], [6 x i8*] }* @_ZTVN3egl4SyncE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 6
  %7 = bitcast i32* %6 to %"class.rx::EGLSyncImpl"**
  %8 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %7, align 8
  store %"class.rx::EGLSyncImpl"* null, %"class.rx::EGLSyncImpl"** %7, align 8
  %9 = icmp eq %"class.rx::EGLSyncImpl"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.rx::EGLSyncImpl"* %8 to void (%"class.rx::EGLSyncImpl"*)***
  %12 = load void (%"class.rx::EGLSyncImpl"*)**, void (%"class.rx::EGLSyncImpl"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %12, i64 1
  %14 = load void (%"class.rx::EGLSyncImpl"*)*, void (%"class.rx::EGLSyncImpl"*)** %13, align 8
  tail call void %14(%"class.rx::EGLSyncImpl"* nonnull %8) #7
  br label %15

15:                                               ; preds = %1, %10
  %16 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl4Sync10initializeEPKNS_7DisplayEPKN2gl7ContextE(%"class.egl::Error"* noalias sret, %"class.egl::Sync"* nocapture readonly, %"class.egl::Display"*, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.rx::EGLSyncImpl"* %6 to void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)***
  %10 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)**, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)** %10, i64 3
  %12 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)** %11, align 8
  tail call void %12(%"class.egl::Error"* sret %0, %"class.rx::EGLSyncImpl"* %6, %"class.egl::Display"* %2, %"class.gl::Context"* %3, i32 %8) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3egl4Sync8setLabelEPv(%"class.egl::Sync"* nocapture, i8*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 3
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn16_N3egl4Sync8setLabelEPv(%"class.egl::Sync"* nocapture, i8*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 -1, i32 4
  %4 = getelementptr inbounds i32, i32* %3, i64 8
  %5 = bitcast i32* %4 to i8**
  store i8* %1, i8** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK3egl4Sync8getLabelEv(%"class.egl::Sync"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZThn16_NK3egl4Sync8getLabelEv(%"class.egl::Sync"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %0, i64 -1, i32 4
  %3 = getelementptr inbounds i32, i32* %2, i64 8
  %4 = bitcast i32* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl4Sync10clientWaitEPKNS_7DisplayEPKN2gl7ContextEimPi(%"class.egl::Error"* noalias sret, %"class.egl::Sync"* nocapture readonly, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %8, align 8
  %10 = bitcast %"class.rx::EGLSyncImpl"* %9 to void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*)***
  %11 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*)**, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*)** %11, i64 4
  %13 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32, i64, i32*)** %12, align 8
  tail call void %13(%"class.egl::Error"* sret %0, %"class.rx::EGLSyncImpl"* %9, %"class.egl::Display"* %2, %"class.gl::Context"* %3, i32 %4, i64 %5, i32* %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl4Sync10serverWaitEPKNS_7DisplayEPKN2gl7ContextEi(%"class.egl::Error"* noalias sret, %"class.egl::Sync"* nocapture readonly, %"class.egl::Display"*, %"class.gl::Context"*, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %6, align 8
  %8 = bitcast %"class.rx::EGLSyncImpl"* %7 to void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)***
  %9 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)**, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)** %9, i64 5
  %11 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)** %10, align 8
  tail call void %11(%"class.egl::Error"* sret %0, %"class.rx::EGLSyncImpl"* %7, %"class.egl::Display"* %2, %"class.gl::Context"* %3, i32 %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl4Sync6signalEPKNS_7DisplayEPKN2gl7ContextEi(%"class.egl::Error"* noalias sret, %"class.egl::Sync"* nocapture readonly, %"class.egl::Display"*, %"class.gl::Context"*, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %6, align 8
  %8 = bitcast %"class.rx::EGLSyncImpl"* %7 to void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)***
  %9 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)**, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)** %9, i64 6
  %11 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, %"class.gl::Context"*, i32)** %10, align 8
  tail call void %11(%"class.egl::Error"* sret %0, %"class.rx::EGLSyncImpl"* %7, %"class.egl::Display"* %2, %"class.gl::Context"* %3, i32 %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl4Sync9getStatusEPKNS_7DisplayEPi(%"class.egl::Error"* noalias sret, %"class.egl::Sync"* nocapture readonly, %"class.egl::Display"*, i32*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %5, align 8
  %7 = bitcast %"class.rx::EGLSyncImpl"* %6 to void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)***
  %8 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)**, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)** %8, i64 7
  %10 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)** %9, align 8
  tail call void %10(%"class.egl::Error"* sret %0, %"class.rx::EGLSyncImpl"* %6, %"class.egl::Display"* %2, i32* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl4Sync16dupNativeFenceFDEPKNS_7DisplayEPi(%"class.egl::Error"* noalias sret, %"class.egl::Sync"* nocapture readonly, %"class.egl::Display"*, i32*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Sync", %"class.egl::Sync"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.rx::EGLSyncImpl"*, %"class.rx::EGLSyncImpl"** %5, align 8
  %7 = bitcast %"class.rx::EGLSyncImpl"* %6 to void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)***
  %8 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)**, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)** %8, i64 8
  %10 = load void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::EGLSyncImpl"*, %"class.egl::Display"*, i32*)** %9, align 8
  tail call void %10(%"class.egl::Error"* sret %0, %"class.rx::EGLSyncImpl"* %6, %"class.egl::Display"* %2, i32* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEE9onDestroyEPKS2_(%"class.angle::RefCountObject"*, %"class.egl::Display"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEED2Ev(%"class.angle::RefCountObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::RefCountObject", %"class.angle::RefCountObject"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14RefCountObjectIN3egl7DisplayENS_6ResultEED0Ev(%"class.angle::RefCountObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.angle::RefCountObject"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
