; ModuleID = '../../third_party/skia/src/sksl/SkSLSectionAndParameterHelper.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLSectionAndParameterHelper.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.SkSL::SectionAndParameterHelper" = type { %"struct.SkSL::Program"*, %"class.std::__1::vector.109", %"class.std::__1::unordered_map" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.117" }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.13", i32, i32, %"class.std::__1::vector.19", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.21" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.111" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.SkSL::Variable"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.122" }
%"class.std::__1::__hash_table.122" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.141", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.126"** }
%"struct.std::__1::__hash_node_base.126" = type { %"struct.std::__1::__hash_node_base.126"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator.128" }
%"class.std::__1::__bucket_list_deallocator.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__hash_node_base.126" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { float }
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.49", %"class.std::__1::unique_ptr.50", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.62", %"class.std::__1::vector.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::String"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.SkSL::ProgramConfig"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.SkSL::Type"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.46", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.49" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.49", %"class.std::__1::vector.146", i8, %"class.std::__1::vector.154", %"class.std::__1::forward_list", %class.SkTHashMap.167, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.std::__1::unique_ptr.148"*, %"class.std::__1::unique_ptr.148"*, %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::unique_ptr.148"* }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"class.std::__1::unique_ptr.156"*, %"class.std::__1::unique_ptr.156"*, %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::unique_ptr.156"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.167 = type { %class.SkTHashTable.168 }
%class.SkTHashTable.168 = type { i32, i32, %class.SkAutoTArray.169 }
%class.SkAutoTArray.169 = type { %"class.std::__1::unique_ptr.170" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.53" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::unique_ptr.64"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.SkSL::ProgramElement"** }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.SkSL::ModifiersPool"* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap, %class.SkTHashMap.97 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base", [4 x i8] }
%"struct.std::__1::pair.base" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.234", [4 x i8] }
%"struct.std::__1::pair.base.234" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.109", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.177", %"class.std::__1::unordered_set.202", %"struct.SkSL::ASTNode"* }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set.202" = type { %"class.std::__1::__hash_table.203" }
%"class.std::__1::__hash_table.203" = type <{ %"class.std::__1::unique_ptr.204", %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.219", %"class.std::__1::__compressed_pair.222", [4 x i8] }>
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206", %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::__hash_node_base.207"** }
%"struct.std::__1::__hash_node_base.207" = type { %"struct.std::__1::__hash_node_base.207"* }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.std::__1::__bucket_list_deallocator.209" }
%"class.std::__1::__bucket_list_deallocator.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::__hash_node_base.207" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.227"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.SkSL::String"* }
%"class.std::__1::tuple.243" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.SkSL::Section" = type { %"class.SkSL::ProgramElement", %"class.SkSL::String", %"class.SkSL::String", %"class.SkSL::String" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZN4SkSL25SectionAndParameterHelper18IsSupportedSectionEPKc = comdat any

$_ZN4SkSL13ErrorReporter5errorEiPKc = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm = comdat any

$_ZN4SkSL13kClassSectionE = comdat any

$_ZN4SkSL13kCloneSectionE = comdat any

$_ZN4SkSL19kConstructorSectionE = comdat any

$_ZN4SkSL23kConstructorCodeSectionE = comdat any

$_ZN4SkSL25kConstructorParamsSectionE = comdat any

$_ZN4SkSL11kCppSectionE = comdat any

$_ZN4SkSL14kCppEndSectionE = comdat any

$_ZN4SkSL16kDumpInfoSectionE = comdat any

$_ZN4SkSL16kEmitCodeSectionE = comdat any

$_ZN4SkSL14kFieldsSectionE = comdat any

$_ZN4SkSL14kHeaderSectionE = comdat any

$_ZN4SkSL17kHeaderEndSectionE = comdat any

$_ZN4SkSL20kInitializersSectionE = comdat any

$_ZN4SkSL12kMakeSectionE = comdat any

$_ZN4SkSL25kOptimizationFlagsSectionE = comdat any

$_ZN4SkSL15kSetDataSectionE = comdat any

$_ZN4SkSL16kTestCodeSectionE = comdat any

@.str = private unnamed_addr constant [11 x i8] c"section '@\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"' requires one parameter\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"' has no parameters\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"unsupported section '@\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"duplicate section '@\00", align 1
@_ZN4SkSL13kClassSectionE = linkonce_odr hidden constant [6 x i8] c"class\00", comdat, align 1
@_ZN4SkSL13kCloneSectionE = linkonce_odr hidden constant [6 x i8] c"clone\00", comdat, align 1
@_ZN4SkSL19kConstructorSectionE = linkonce_odr hidden constant [12 x i8] c"constructor\00", comdat, align 1
@_ZN4SkSL23kConstructorCodeSectionE = linkonce_odr hidden constant [16 x i8] c"constructorCode\00", comdat, align 16
@_ZN4SkSL25kConstructorParamsSectionE = linkonce_odr hidden constant [18 x i8] c"constructorParams\00", comdat, align 16
@_ZN4SkSL11kCppSectionE = linkonce_odr hidden constant [4 x i8] c"cpp\00", comdat, align 1
@_ZN4SkSL14kCppEndSectionE = linkonce_odr hidden constant [7 x i8] c"cppEnd\00", comdat, align 1
@_ZN4SkSL16kDumpInfoSectionE = linkonce_odr hidden constant [9 x i8] c"dumpInfo\00", comdat, align 1
@_ZN4SkSL16kEmitCodeSectionE = linkonce_odr hidden constant [9 x i8] c"emitCode\00", comdat, align 1
@_ZN4SkSL14kFieldsSectionE = linkonce_odr hidden constant [7 x i8] c"fields\00", comdat, align 1
@_ZN4SkSL14kHeaderSectionE = linkonce_odr hidden constant [7 x i8] c"header\00", comdat, align 1
@_ZN4SkSL17kHeaderEndSectionE = linkonce_odr hidden constant [10 x i8] c"headerEnd\00", comdat, align 1
@_ZN4SkSL20kInitializersSectionE = linkonce_odr hidden constant [13 x i8] c"initializers\00", comdat, align 1
@_ZN4SkSL12kMakeSectionE = linkonce_odr hidden constant [5 x i8] c"make\00", comdat, align 1
@_ZN4SkSL25kOptimizationFlagsSectionE = linkonce_odr hidden constant [18 x i8] c"optimizationFlags\00", comdat, align 16
@_ZN4SkSL15kSetDataSectionE = linkonce_odr hidden constant [8 x i8] c"setData\00", comdat, align 1
@_ZN4SkSL16kTestCodeSectionE = linkonce_odr hidden constant [5 x i8] c"test\00", comdat, align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN4SkSL25SectionAndParameterHelperC1EPKNS_7ProgramERNS_13ErrorReporterE = hidden unnamed_addr alias void (%"class.SkSL::SectionAndParameterHelper"*, %"struct.SkSL::Program"*, %"class.SkSL::ErrorReporter"*), void (%"class.SkSL::SectionAndParameterHelper"*, %"struct.SkSL::Program"*, %"class.SkSL::ErrorReporter"*)* @_ZN4SkSL25SectionAndParameterHelperC2EPKNS_7ProgramERNS_13ErrorReporterE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL25SectionAndParameterHelperC2EPKNS_7ProgramERNS_13ErrorReporterE(%"class.SkSL::SectionAndParameterHelper"*, %"struct.SkSL::Program"*, %"class.SkSL::ErrorReporter"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.243", align 1
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = getelementptr inbounds %"class.SkSL::SectionAndParameterHelper", %"class.SkSL::SectionAndParameterHelper"* %0, i64 0, i32 0
  store %"struct.SkSL::Program"* %1, %"struct.SkSL::Program"** %14, align 8
  %15 = getelementptr inbounds %"class.SkSL::SectionAndParameterHelper", %"class.SkSL::SectionAndParameterHelper"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.SkSL::SectionAndParameterHelper", %"class.SkSL::SectionAndParameterHelper"* %0, i64 0, i32 2, i32 0, i32 3
  %17 = bitcast %"class.std::__1::__compressed_pair.141"* %16 to i32*
  %18 = bitcast %"class.std::__1::vector.109"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false)
  store i32 1065353216, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6
  %20 = bitcast %"class.std::__1::vector.62"* %19 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !2
  %22 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7
  %24 = bitcast %"class.std::__1::vector.75"* %23 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !2
  %26 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7, i32 0, i32 1
  %27 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %26, align 8, !noalias !2
  %28 = load %"class.std::__1::unique_ptr.64"*, %"class.std::__1::unique_ptr.64"** %22, align 8, !noalias !5
  %29 = bitcast %"class.SkSL::String"* %10 to i8*
  %30 = bitcast %"class.SkSL::String"* %11 to i8*
  %31 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.SkSL::String"* %6 to i8*
  %38 = bitcast %"class.SkSL::String"* %7 to i8*
  %39 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.SkSL::String"* %8 to i8*
  %46 = bitcast %"class.SkSL::String"* %9 to i8*
  %47 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.SkSL::SectionAndParameterHelper", %"class.SkSL::SectionAndParameterHelper"* %0, i64 0, i32 2, i32 0
  %54 = bitcast %"class.SkSL::String"* %12 to i8*
  %55 = bitcast %"class.SkSL::String"* %13 to i8*
  %56 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %63 = bitcast %"class.std::__1::tuple"* %4 to %"class.SkSL::ProgramElement"**
  %64 = getelementptr inbounds %"class.std::__1::tuple.243", %"class.std::__1::tuple.243"* %5, i64 0, i32 0
  %65 = getelementptr inbounds %"class.SkSL::SectionAndParameterHelper", %"class.SkSL::SectionAndParameterHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %66 = getelementptr inbounds %"class.SkSL::SectionAndParameterHelper", %"class.SkSL::SectionAndParameterHelper"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.SkSL::Variable"*** %65 to i64*
  %68 = bitcast %"class.std::__1::vector.109"* %15 to i64*
  %69 = bitcast %"class.SkSL::Variable"*** %66 to i64*
  %70 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %15, i64 0, i32 0, i32 0
  %71 = inttoptr i64 %21 to %"class.std::__1::unique_ptr.64"*
  %72 = icmp eq %"class.std::__1::unique_ptr.64"* %28, %71
  %73 = inttoptr i64 %25 to %"class.SkSL::ProgramElement"**
  %74 = icmp eq %"class.SkSL::ProgramElement"** %27, %73
  %75 = and i1 %72, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %388, %3
  ret void

77:                                               ; preds = %3, %388
  %78 = phi i1 [ %398, %388 ], [ %74, %3 ]
  %79 = phi %"class.SkSL::ProgramElement"** [ %397, %388 ], [ %73, %3 ]
  %80 = phi %"class.std::__1::unique_ptr.64"* [ %395, %388 ], [ %71, %3 ]
  %81 = phi i64 [ %394, %388 ], [ %25, %3 ]
  %82 = phi i64 [ %393, %388 ], [ %21, %3 ]
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %80, i64 0, i32 0, i32 0, i32 0
  %84 = select i1 %78, %"class.SkSL::ProgramElement"** %83, %"class.SkSL::ProgramElement"** %79
  %85 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %84, align 8
  %86 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %85, i64 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  switch i32 %87, label %388 [
    i32 4, label %88
    i32 7, label %167
  ]

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %85, i64 1
  %90 = bitcast %"class.SkSL::ProgramElement"* %89 to %"class.SkSL::VarDeclaration"**
  %91 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %90, align 8
  %92 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %91, i64 0, i32 1
  %93 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %92, align 8
  %94 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %93, i64 0, i32 2
  %95 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %94, align 8
  %96 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %95, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %388, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %95, i64 0, i32 0, i32 6
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, -1
  br i1 %103, label %104, label %388

104:                                              ; preds = %100
  %105 = ptrtoint %"class.SkSL::Variable"* %93 to i64
  %106 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %65, align 8
  %107 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %66, align 8
  %108 = icmp ult %"class.SkSL::Variable"** %106, %107
  %109 = ptrtoint %"class.SkSL::Variable"** %107 to i64
  br i1 %108, label %110, label %114

110:                                              ; preds = %104
  %111 = bitcast %"class.SkSL::Variable"** %106 to i64*
  store i64 %105, i64* %111, align 8
  %112 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %106, i64 1
  %113 = ptrtoint %"class.SkSL::Variable"** %112 to i64
  store i64 %113, i64* %67, align 8
  br label %388

114:                                              ; preds = %104
  %115 = ptrtoint %"class.SkSL::Variable"** %106 to i64
  %116 = load i64, i64* %68, align 8
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 3
  %119 = add nsw i64 %118, 1
  %120 = icmp ugt i64 %119, 2305843009213693951
  br i1 %120, label %121, label %123

121:                                              ; preds = %114
  %122 = bitcast %"class.std::__1::vector.109"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #11
  unreachable

123:                                              ; preds = %114
  %124 = sub i64 %109, %116
  %125 = ashr exact i64 %124, 3
  %126 = icmp ult i64 %125, 1152921504606846975
  br i1 %126, label %127, label %135

127:                                              ; preds = %123
  %128 = ashr exact i64 %124, 2
  %129 = icmp ult i64 %128, %119
  %130 = select i1 %129, i64 %119, i64 %128
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %140, label %132

132:                                              ; preds = %127
  %133 = icmp ugt i64 %130, 2305843009213693951
  br i1 %133, label %134, label %135

134:                                              ; preds = %132
  call void @abort() #11
  unreachable

135:                                              ; preds = %132, %123
  %136 = phi i64 [ %130, %132 ], [ 2305843009213693951, %123 ]
  %137 = shl i64 %136, 3
  %138 = call i8* @_Znwm(i64 %137) #12
  %139 = bitcast i8* %138 to %"class.SkSL::Variable"**
  br label %140

140:                                              ; preds = %135, %127
  %141 = phi i64 [ %136, %135 ], [ 0, %127 ]
  %142 = phi %"class.SkSL::Variable"** [ %139, %135 ], [ null, %127 ]
  %143 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %142, i64 %118
  %144 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %142, i64 %141
  %145 = ptrtoint %"class.SkSL::Variable"** %144 to i64
  %146 = bitcast %"class.SkSL::Variable"** %143 to i64*
  store i64 %105, i64* %146, align 8
  %147 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %143, i64 1
  %148 = ptrtoint %"class.SkSL::Variable"** %147 to i64
  %149 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %70, align 8
  %150 = load i64, i64* %67, align 8
  %151 = ptrtoint %"class.SkSL::Variable"** %149 to i64
  %152 = sub i64 %150, %151
  %153 = ashr exact i64 %152, 3
  %154 = sub nsw i64 0, %153
  %155 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %143, i64 %154
  %156 = ptrtoint %"class.SkSL::Variable"** %155 to i64
  %157 = icmp sgt i64 %152, 0
  br i1 %157, label %158, label %162

158:                                              ; preds = %140
  %159 = bitcast %"class.SkSL::Variable"** %155 to i8*
  %160 = bitcast %"class.SkSL::Variable"** %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %160, i64 %152, i1 false) #13
  %161 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %70, align 8
  br label %162

162:                                              ; preds = %158, %140
  %163 = phi %"class.SkSL::Variable"** [ %149, %140 ], [ %161, %158 ]
  store i64 %156, i64* %68, align 8
  store i64 %148, i64* %67, align 8
  store i64 %145, i64* %69, align 8
  %164 = icmp eq %"class.SkSL::Variable"** %163, null
  br i1 %164, label %388, label %165

165:                                              ; preds = %162
  %166 = bitcast %"class.SkSL::Variable"** %163 to i8*
  call void @_ZdlPv(i8* %166) #12
  br label %388

167:                                              ; preds = %77
  %168 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %85, i64 1
  %169 = bitcast %"class.SkSL::ProgramElement"* %168 to %"class.SkSL::String"*
  %170 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %85, i64 2, i32 0, i32 1
  %171 = bitcast %"class.SkSL::ProgramElement"* %168 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %167
  %176 = bitcast %"class.SkSL::ProgramElement"* %168 to i8**
  %177 = load i8*, i8** %176, align 8
  br label %180

178:                                              ; preds = %167
  %179 = bitcast %"class.SkSL::ProgramElement"* %168 to i8*
  br label %180

180:                                              ; preds = %175, %178
  %181 = phi i8* [ %177, %175 ], [ %179, %178 ]
  %182 = call zeroext i1 @_ZN4SkSL25SectionAndParameterHelper18IsSupportedSectionEPKc(i8* %181)
  br i1 %182, label %183, label %276

183:                                              ; preds = %180
  %184 = load i8, i8* %172, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  %187 = bitcast %"class.SkSL::ProgramElement"* %168 to i8**
  %188 = load i8*, i8** %187, align 8
  br label %191

189:                                              ; preds = %183
  %190 = bitcast %"class.SkSL::ProgramElement"* %168 to i8*
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i8* [ %188, %186 ], [ %190, %189 ]
  %193 = call i32 @strcmp(i8* %192, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN4SkSL15kSetDataSectionE, i64 0, i64 0)) #14
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %191
  %196 = call i32 @strcmp(i8* %192, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN4SkSL16kTestCodeSectionE, i64 0, i64 0)) #14
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %230

198:                                              ; preds = %191, %195
  %199 = bitcast i32* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %207

203:                                              ; preds = %198
  %204 = getelementptr inbounds i32, i32* %170, i64 2
  %205 = bitcast i32* %204 to i64*
  %206 = load i64, i64* %205, align 8
  br label %209

207:                                              ; preds = %198
  %208 = zext i8 %201 to i64
  br label %209

209:                                              ; preds = %203, %207
  %210 = phi i64 [ %206, %203 ], [ %208, %207 ]
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %230

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %85, i64 0, i32 0, i32 1
  %214 = load i32, i32* %213, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %169) #13
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0)) #13
  %215 = load i8, i8* %40, align 1
  %216 = icmp slt i8 %215, 0
  %217 = load i8*, i8** %41, align 8
  %218 = select i1 %216, i8* %217, i8* %37
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %2, i32 %214, i8* %218)
  %219 = load i8, i8* %40, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %212
  %222 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %222) #12
  br label %223

223:                                              ; preds = %212, %221
  %224 = load i8, i8* %43, align 1
  %225 = icmp slt i8 %224, 0
  br i1 %225, label %226, label %228

226:                                              ; preds = %223
  %227 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %227) #12
  br label %228

228:                                              ; preds = %223, %226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  %229 = load i8, i8* %172, align 1
  br label %230

230:                                              ; preds = %209, %228, %195
  %231 = phi i8 [ %184, %209 ], [ %229, %228 ], [ %184, %195 ]
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %230
  %234 = bitcast %"class.SkSL::ProgramElement"* %168 to i8**
  %235 = load i8*, i8** %234, align 8
  br label %238

236:                                              ; preds = %230
  %237 = bitcast %"class.SkSL::ProgramElement"* %168 to i8*
  br label %238

238:                                              ; preds = %233, %236
  %239 = phi i8* [ %235, %233 ], [ %237, %236 ]
  %240 = call i32 @strcmp(i8* %239, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN4SkSL15kSetDataSectionE, i64 0, i64 0)) #14
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %293, label %242

242:                                              ; preds = %238
  %243 = call i32 @strcmp(i8* %239, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN4SkSL16kTestCodeSectionE, i64 0, i64 0)) #14
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %293, label %245

245:                                              ; preds = %242
  %246 = bitcast i32* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %246, i64 0, i32 1, i32 0
  %248 = load i8, i8* %247, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %250, label %254

250:                                              ; preds = %245
  %251 = getelementptr inbounds i32, i32* %170, i64 2
  %252 = bitcast i32* %251 to i64*
  %253 = load i64, i64* %252, align 8
  br label %256

254:                                              ; preds = %245
  %255 = zext i8 %248 to i64
  br label %256

256:                                              ; preds = %250, %254
  %257 = phi i64 [ %253, %250 ], [ %255, %254 ]
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %293, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %85, i64 0, i32 0, i32 1
  %261 = load i32, i32* %260, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #13
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %169) #13
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)) #13
  %262 = load i8, i8* %48, align 1
  %263 = icmp slt i8 %262, 0
  %264 = load i8*, i8** %49, align 8
  %265 = select i1 %263, i8* %264, i8* %45
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %2, i32 %261, i8* %265)
  %266 = load i8, i8* %48, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %259
  %269 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %269) #12
  br label %270

270:                                              ; preds = %259, %268
  %271 = load i8, i8* %51, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %270
  %274 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %274) #12
  br label %275

275:                                              ; preds = %270, %273
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #13
  br label %293

276:                                              ; preds = %180
  %277 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %85, i64 0, i32 0, i32 1
  %278 = load i32, i32* %277, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %169) #13
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #13
  %279 = load i8, i8* %32, align 1
  %280 = icmp slt i8 %279, 0
  %281 = load i8*, i8** %33, align 8
  %282 = select i1 %280, i8* %281, i8* %29
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %2, i32 %278, i8* %282)
  %283 = load i8, i8* %32, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %287

285:                                              ; preds = %276
  %286 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %286) #12
  br label %287

287:                                              ; preds = %276, %285
  %288 = load i8, i8* %35, align 1
  %289 = icmp slt i8 %288, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %287
  %291 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %291) #12
  br label %292

292:                                              ; preds = %287, %290
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  br label %293

293:                                              ; preds = %238, %256, %242, %275, %292
  %294 = call %"struct.std::__1::__hash_node_base.126"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table.122"* %53, %"class.SkSL::String"* dereferenceable(24) %169) #13
  %295 = icmp eq %"struct.std::__1::__hash_node_base.126"* %294, null
  br i1 %295, label %313, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %85, i64 0, i32 0, i32 1
  %298 = load i32, i32* %297, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #13
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %169) #13
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #13
  %299 = load i8, i8* %57, align 1
  %300 = icmp slt i8 %299, 0
  %301 = load i8*, i8** %58, align 8
  %302 = select i1 %300, i8* %301, i8* %54
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %2, i32 %298, i8* %302)
  %303 = load i8, i8* %57, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %307

305:                                              ; preds = %296
  %306 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %306) #12
  br label %307

307:                                              ; preds = %296, %305
  %308 = load i8, i8* %60, align 1
  %309 = icmp slt i8 %308, 0
  br i1 %309, label %310, label %312

310:                                              ; preds = %307
  %311 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %311) #12
  br label %312

312:                                              ; preds = %307, %310
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  br label %313

313:                                              ; preds = %293, %312
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #13
  store %"class.SkSL::ProgramElement"* %168, %"class.SkSL::ProgramElement"** %63, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %64) #13
  %314 = call { %"struct.std::__1::__hash_node_base.126"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.122"* %53, %"class.SkSL::String"* dereferenceable(24) %169, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.243"* nonnull dereferenceable(1) %5) #13
  %315 = extractvalue { %"struct.std::__1::__hash_node_base.126"*, i8 } %314, 0
  %316 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %315, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #13
  %317 = ptrtoint %"class.SkSL::ProgramElement"* %85 to i64
  %318 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %315, i64 6
  %319 = bitcast %"struct.std::__1::__hash_node_base.126"* %318 to %"class.SkSL::Section"***
  %320 = load %"class.SkSL::Section"**, %"class.SkSL::Section"*** %319, align 8
  %321 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %315, i64 7
  %322 = bitcast %"struct.std::__1::__hash_node_base.126"* %321 to %"class.SkSL::Section"***
  %323 = load %"class.SkSL::Section"**, %"class.SkSL::Section"*** %322, align 8
  %324 = icmp ult %"class.SkSL::Section"** %320, %323
  %325 = ptrtoint %"class.SkSL::Section"** %323 to i64
  br i1 %324, label %326, label %331

326:                                              ; preds = %313
  %327 = bitcast %"class.SkSL::Section"** %320 to i64*
  store i64 %317, i64* %327, align 8
  %328 = getelementptr inbounds %"class.SkSL::Section"*, %"class.SkSL::Section"** %320, i64 1
  %329 = ptrtoint %"class.SkSL::Section"** %328 to i64
  %330 = bitcast %"struct.std::__1::__hash_node_base.126"* %318 to i64*
  store i64 %329, i64* %330, align 8
  br label %388

331:                                              ; preds = %313
  %332 = ptrtoint %"class.SkSL::Section"** %320 to i64
  %333 = bitcast %"struct.std::__1::__hash_node_base.126"* %318 to i64*
  %334 = bitcast %"struct.std::__1::__hash_node_base.126"* %316 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = sub i64 %332, %335
  %337 = ashr exact i64 %336, 3
  %338 = add nsw i64 %337, 1
  %339 = icmp ugt i64 %338, 2305843009213693951
  br i1 %339, label %340, label %342

340:                                              ; preds = %331
  %341 = bitcast %"struct.std::__1::__hash_node_base.126"* %316 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %341) #11
  unreachable

342:                                              ; preds = %331
  %343 = bitcast %"struct.std::__1::__hash_node_base.126"* %321 to i64*
  %344 = sub i64 %325, %335
  %345 = ashr exact i64 %344, 3
  %346 = icmp ult i64 %345, 1152921504606846975
  br i1 %346, label %347, label %355

347:                                              ; preds = %342
  %348 = ashr exact i64 %344, 2
  %349 = icmp ult i64 %348, %338
  %350 = select i1 %349, i64 %338, i64 %348
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %360, label %352

352:                                              ; preds = %347
  %353 = icmp ugt i64 %350, 2305843009213693951
  br i1 %353, label %354, label %355

354:                                              ; preds = %352
  call void @abort() #11
  unreachable

355:                                              ; preds = %352, %342
  %356 = phi i64 [ %350, %352 ], [ 2305843009213693951, %342 ]
  %357 = shl i64 %356, 3
  %358 = call i8* @_Znwm(i64 %357) #12
  %359 = bitcast i8* %358 to %"class.SkSL::Section"**
  br label %360

360:                                              ; preds = %355, %347
  %361 = phi i64 [ %356, %355 ], [ 0, %347 ]
  %362 = phi %"class.SkSL::Section"** [ %359, %355 ], [ null, %347 ]
  %363 = getelementptr inbounds %"class.SkSL::Section"*, %"class.SkSL::Section"** %362, i64 %337
  %364 = getelementptr inbounds %"class.SkSL::Section"*, %"class.SkSL::Section"** %362, i64 %361
  %365 = ptrtoint %"class.SkSL::Section"** %364 to i64
  %366 = bitcast %"class.SkSL::Section"** %363 to i64*
  store i64 %317, i64* %366, align 8
  %367 = getelementptr inbounds %"class.SkSL::Section"*, %"class.SkSL::Section"** %363, i64 1
  %368 = ptrtoint %"class.SkSL::Section"** %367 to i64
  %369 = bitcast %"struct.std::__1::__hash_node_base.126"* %316 to %"class.SkSL::Section"***
  %370 = load %"class.SkSL::Section"**, %"class.SkSL::Section"*** %369, align 8
  %371 = load i64, i64* %333, align 8
  %372 = ptrtoint %"class.SkSL::Section"** %370 to i64
  %373 = sub i64 %371, %372
  %374 = ashr exact i64 %373, 3
  %375 = sub nsw i64 0, %374
  %376 = getelementptr inbounds %"class.SkSL::Section"*, %"class.SkSL::Section"** %363, i64 %375
  %377 = ptrtoint %"class.SkSL::Section"** %376 to i64
  %378 = icmp sgt i64 %373, 0
  br i1 %378, label %379, label %383

379:                                              ; preds = %360
  %380 = bitcast %"class.SkSL::Section"** %376 to i8*
  %381 = bitcast %"class.SkSL::Section"** %370 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %381, i64 %373, i1 false) #13
  %382 = load %"class.SkSL::Section"**, %"class.SkSL::Section"*** %369, align 8
  br label %383

383:                                              ; preds = %379, %360
  %384 = phi %"class.SkSL::Section"** [ %370, %360 ], [ %382, %379 ]
  store i64 %377, i64* %334, align 8
  store i64 %368, i64* %333, align 8
  store i64 %365, i64* %343, align 8
  %385 = icmp eq %"class.SkSL::Section"** %384, null
  br i1 %385, label %388, label %386

386:                                              ; preds = %383
  %387 = bitcast %"class.SkSL::Section"** %384 to i8*
  call void @_ZdlPv(i8* %387) #12
  br label %388

388:                                              ; preds = %88, %386, %383, %326, %165, %162, %110, %100, %77
  %389 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %80, i64 1
  %390 = ptrtoint %"class.std::__1::unique_ptr.64"* %389 to i64
  %391 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %79, i64 1
  %392 = ptrtoint %"class.SkSL::ProgramElement"** %391 to i64
  %393 = select i1 %78, i64 %390, i64 %82
  %394 = select i1 %78, i64 %81, i64 %392
  %395 = inttoptr i64 %393 to %"class.std::__1::unique_ptr.64"*
  %396 = icmp eq %"class.std::__1::unique_ptr.64"* %28, %395
  %397 = inttoptr i64 %394 to %"class.SkSL::ProgramElement"**
  %398 = icmp eq %"class.SkSL::ProgramElement"** %27, %397
  %399 = and i1 %396, %398
  br i1 %399, label %76, label %77
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL25SectionAndParameterHelper18IsSupportedSectionEPKc(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN4SkSL13kClassSectionE, i64 0, i64 0)) #14
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %52, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN4SkSL13kCloneSectionE, i64 0, i64 0)) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN4SkSL19kConstructorSectionE, i64 0, i64 0)) #14
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %52, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN4SkSL23kConstructorCodeSectionE, i64 0, i64 0)) #14
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %52, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN4SkSL25kConstructorParamsSectionE, i64 0, i64 0)) #14
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %52, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN4SkSL11kCppSectionE, i64 0, i64 0)) #14
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %52, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4SkSL14kCppEndSectionE, i64 0, i64 0)) #14
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %52, label %22

22:                                               ; preds = %19
  %23 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN4SkSL16kDumpInfoSectionE, i64 0, i64 0)) #14
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %52, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN4SkSL16kEmitCodeSectionE, i64 0, i64 0)) #14
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %52, label %28

28:                                               ; preds = %25
  %29 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4SkSL14kFieldsSectionE, i64 0, i64 0)) #14
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %52, label %31

31:                                               ; preds = %28
  %32 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4SkSL14kHeaderSectionE, i64 0, i64 0)) #14
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %52, label %34

34:                                               ; preds = %31
  %35 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN4SkSL17kHeaderEndSectionE, i64 0, i64 0)) #14
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %52, label %37

37:                                               ; preds = %34
  %38 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN4SkSL20kInitializersSectionE, i64 0, i64 0)) #14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %37
  %41 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN4SkSL12kMakeSectionE, i64 0, i64 0)) #14
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN4SkSL25kOptimizationFlagsSectionE, i64 0, i64 0)) #14
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN4SkSL15kSetDataSectionE, i64 0, i64 0)) #14
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN4SkSL16kTestCodeSectionE, i64 0, i64 0)) #14
  %51 = icmp eq i32 %50, 0
  br label %52

52:                                               ; preds = %46, %43, %40, %37, %34, %31, %28, %25, %22, %19, %16, %13, %10, %7, %4, %1, %49
  %53 = phi i1 [ true, %46 ], [ true, %43 ], [ true, %40 ], [ true, %37 ], [ true, %34 ], [ true, %31 ], [ true, %28 ], [ true, %25 ], [ true, %22 ], [ true, %19 ], [ true, %16 ], [ true, %13 ], [ true, %10 ], [ true, %7 ], [ true, %4 ], [ true, %1 ], [ %51, %49 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i64 @strlen(i8* %2) #13
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #11
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #12
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  %25 = icmp eq i64 %5, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %11
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %28 = phi i8* [ %24, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %2, i64 %5, i1 false) #13
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %27, %26 ]
  %31 = phi i8* [ %24, %20 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %5
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.SkSL::ErrorReporter"* %0 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %34 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %34, i64 2
  %36 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %35, align 8
  call void %36(%"class.SkSL::ErrorReporter"* %0, i32 %1, %"class.SkSL::String"* nonnull %4) #13
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.126"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table.122"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkSL::String"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #13, !range !8
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.126"* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.126"* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.126"* [ %40, %42 ], [ %66, %64 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.126"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %64, label %68

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.126"* %61 to %"class.SkSL::String"*
  %63 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %62, %"class.SkSL::String"* dereferenceable(24) %1) #13
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %45, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.126"* %66, null
  br i1 %67, label %68, label %44

68:                                               ; preds = %60, %64, %57, %38, %2, %31
  %69 = phi %"struct.std::__1::__hash_node_base.126"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %60 ], [ null, %64 ], [ null, %57 ]
  ret %"struct.std::__1::__hash_node_base.126"* %69
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #9 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.126"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.122"*, %"class.SkSL::String"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.243"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.SkSL::String"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #13
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #13
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #13, !range !8
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.126"* %39, null
  br i1 %40, label %67, label %41

41:                                               ; preds = %34
  %42 = add i64 %22, -1
  br label %43

43:                                               ; preds = %41, %63
  %44 = phi %"struct.std::__1::__hash_node_base.126"* [ %46, %63 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.126"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.126"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %42
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %63, label %67

63:                                               ; preds = %48, %60
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %46, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.126"* %64 to %"class.SkSL::String"*
  %66 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %65, %"class.SkSL::String"* dereferenceable(24) %1) #13
  br i1 %66, label %168, label %43

67:                                               ; preds = %43, %60, %34, %5
  %68 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %60 ], [ %35, %43 ]
  %69 = call i8* @_Znwm(i64 64) #12, !noalias !9
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.SkSL::String"*, %"class.SkSL::String"** %71, align 8, !noalias !9
  %73 = bitcast %"class.SkSL::String"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1, !noalias !9
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  %78 = bitcast %"class.SkSL::String"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %78, i64 24, i1 false) #13, !noalias !9
  br label %85

79:                                               ; preds = %67
  %80 = bitcast i8* %70 to %"class.std::__1::basic_string"*
  %81 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8, !noalias !9
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8, !noalias !9
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %80, i8* %82, i64 %84) #13, !noalias !9
  br label %85

85:                                               ; preds = %77, %79
  %86 = getelementptr inbounds i8, i8* %69, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #13, !noalias !9
  %87 = getelementptr inbounds i8, i8* %69, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 %20, i64* %88, align 8, !noalias !9
  %89 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.126"**
  store %"struct.std::__1::__hash_node_base.126"* null, %"struct.std::__1::__hash_node_base.126"** %89, align 8, !noalias !9
  %90 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  %93 = uitofp i64 %92 to float
  %94 = uitofp i64 %22 to float
  %95 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 3, i32 0, i32 0
  %96 = load float, float* %95, align 4
  %97 = fmul float %96, %94
  %98 = fcmp olt float %97, %93
  %99 = or i1 %23, %98
  br i1 %99, label %100, label %123

100:                                              ; preds = %85
  %101 = shl i64 %22, 1
  %102 = icmp ult i64 %22, 3
  %103 = call i64 @llvm.ctpop.i64(i64 %22) #13, !range !8
  %104 = icmp ugt i64 %103, 1
  %105 = or i1 %102, %104
  %106 = zext i1 %105 to i64
  %107 = or i64 %101, %106
  %108 = fdiv float %93, %96
  %109 = call float @llvm.ceil.f32(float %108) #13
  %110 = fptoui float %109 to i64
  %111 = icmp ult i64 %107, %110
  %112 = select i1 %111, i64 %110, i64 %107
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.122"* %0, i64 %112)
  %113 = load i64, i64* %21, align 8
  %114 = call i64 @llvm.ctpop.i64(i64 %113) #13, !range !8
  %115 = icmp ugt i64 %114, 1
  br i1 %115, label %119, label %116

116:                                              ; preds = %100
  %117 = add i64 %113, -1
  %118 = and i64 %117, %20
  br label %123

119:                                              ; preds = %100
  %120 = icmp ult i64 %20, %113
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = urem i64 %20, %113
  br label %123

123:                                              ; preds = %121, %119, %116, %85
  %124 = phi i64 [ %22, %85 ], [ %113, %116 ], [ %113, %119 ], [ %113, %121 ]
  %125 = phi i64 [ %68, %85 ], [ %118, %116 ], [ %20, %119 ], [ %122, %121 ]
  %126 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %127, i64 %125
  %129 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.126"* %129, null
  br i1 %130, label %131, label %157

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 1, i32 0, i32 0
  %133 = bitcast %"struct.std::__1::__hash_node_base.126"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i8* %69 to i64*
  store i64 %134, i64* %135, align 8
  %136 = bitcast %"struct.std::__1::__hash_node_base.126"* %132 to i8**
  store i8* %69, i8** %136, align 8
  store %"struct.std::__1::__hash_node_base.126"* %132, %"struct.std::__1::__hash_node_base.126"** %128, align 8
  %137 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %89, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.126"* %137, null
  br i1 %138, label %164, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %137, i64 1
  %141 = bitcast %"struct.std::__1::__hash_node_base.126"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = call i64 @llvm.ctpop.i64(i64 %124) #13, !range !8
  %144 = icmp ugt i64 %143, 1
  br i1 %144, label %148, label %145

145:                                              ; preds = %139
  %146 = add i64 %124, -1
  %147 = and i64 %142, %146
  br label %152

148:                                              ; preds = %139
  %149 = icmp ult i64 %142, %124
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %142, %124
  br label %152

152:                                              ; preds = %145, %148, %150
  %153 = phi i64 [ %147, %145 ], [ %151, %150 ], [ %142, %148 ]
  %154 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %126, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %154, i64 %153
  %156 = bitcast %"struct.std::__1::__hash_node_base.126"** %155 to i8**
  br label %162

157:                                              ; preds = %123
  %158 = bitcast %"struct.std::__1::__hash_node_base.126"* %129 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast i8* %69 to i64*
  store i64 %159, i64* %160, align 8
  %161 = bitcast %"struct.std::__1::__hash_node_base.126"* %129 to i8**
  br label %162

162:                                              ; preds = %152, %157
  %163 = phi i8** [ %161, %157 ], [ %156, %152 ]
  store i8* %69, i8** %163, align 8
  br label %164

164:                                              ; preds = %162, %131
  %165 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base.126"*
  %166 = load i64, i64* %90, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %90, align 8
  br label %168

168:                                              ; preds = %63, %164
  %169 = phi i8 [ 1, %164 ], [ 0, %63 ]
  %170 = phi %"struct.std::__1::__hash_node_base.126"* [ %165, %164 ], [ %46, %63 ]
  %171 = insertvalue { %"struct.std::__1::__hash_node_base.126"*, i8 } undef, %"struct.std::__1::__hash_node_base.126"* %170, 0
  %172 = insertvalue { %"struct.std::__1::__hash_node_base.126"*, i8 } %171, i8 %169, 1
  ret { %"struct.std::__1::__hash_node_base.126"*, i8 } %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.122"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.122"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.122"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.122"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.122"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.126"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.126"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.128", %"class.std::__1::__bucket_list_deallocator.128"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.126"* null, %"struct.std::__1::__hash_node_base.126"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !12

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.126"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.126"* null, %"struct.std::__1::__hash_node_base.126"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.126"* null, %"struct.std::__1::__hash_node_base.126"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.126"* null, %"struct.std::__1::__hash_node_base.126"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.126"* null, %"struct.std::__1::__hash_node_base.126"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.126"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.126"* %36, %"struct.std::__1::__hash_node_base.126"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.126"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base.126"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base.126"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.126"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.126"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.126"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.126"* %105 to %"class.SkSL::String"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base.126"* %107 to %"class.SkSL::String"*
  %109 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %108) #13
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.126"* %82, %"struct.std::__1::__hash_node_base.126"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base.126"* %112 to %"class.SkSL::String"*
  %114 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %113) #13
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base.126"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.126"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base.126"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base.126"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base.126"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base.126"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.126"* %80, %"struct.std::__1::__hash_node_base.126"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base.126"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.126", %"struct.std::__1::__hash_node_base.126"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base.126"*, %"struct.std::__1::__hash_node_base.126"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.126"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table.122", %"class.std::__1::__hash_table.122"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base.126"**, %"struct.std::__1::__hash_node_base.126"*** %142, align 8
  store %"struct.std::__1::__hash_node_base.126"** null, %"struct.std::__1::__hash_node_base.126"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.126"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base.126"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.128", %"class.std::__1::__bucket_list_deallocator.128"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!8 = !{i64 0, i64 65}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS8_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_6vectorIPKNS2_7SectionENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS3_SB_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SB_SG_SE_Lb1EEENS8_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS3_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS8_ISY_EEEEEEmOT_DpOT0_"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
