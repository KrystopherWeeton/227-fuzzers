; ModuleID = '../../third_party/ffmpeg/libavutil/avstring.c'
source_filename = "../../third_party/ffmpeg/libavutil/avstring.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.AVBPrint = type { i8*, i32, i32, i32, [1 x i8], [1000 x i8] }

@.str = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c" \0A\09\0D\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@__const.av_utf8_decode.overlong_encoding_mins = private unnamed_addr constant [6 x i32] [i32 0, i32 128, i32 2048, i32 65536, i32 2097152, i32 67108864], align 16
@.str.4 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"tail_len <= 5\00", align 1
@.str.6 = private unnamed_addr constant [46 x i8] c"../../third_party/ffmpeg/libavutil/avstring.c\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @av_strstart(i8*, i8* nocapture readonly, i8**) local_unnamed_addr #0 {
  %4 = load i8, i8* %1, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %3, %12
  %7 = phi i8 [ %15, %12 ], [ %4, %3 ]
  %8 = phi i8* [ %14, %12 ], [ %0, %3 ]
  %9 = phi i8* [ %13, %12 ], [ %1, %3 ]
  %10 = load i8, i8* %8, align 1
  %11 = icmp eq i8 %7, %10
  br i1 %11, label %12, label %23

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %9, i64 1
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  %15 = load i8, i8* %13, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %6

17:                                               ; preds = %12, %3
  %18 = phi i8* [ %1, %3 ], [ %13, %12 ]
  %19 = phi i8* [ %0, %3 ], [ %14, %12 ]
  %20 = icmp eq i8** %2, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  store i8* %19, i8** %2, align 8
  %22 = load i8, i8* %18, align 1
  br label %23

23:                                               ; preds = %6, %17, %21
  %24 = phi i8 [ 0, %17 ], [ %22, %21 ], [ %7, %6 ]
  %25 = icmp eq i8 %24, 0
  %26 = zext i1 %25 to i32
  ret i32 %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @av_stristart(i8*, i8* nocapture readonly, i8**) local_unnamed_addr #0 {
  %4 = load i8, i8* %1, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %3, %22
  %7 = phi i8 [ %25, %22 ], [ %4, %3 ]
  %8 = phi i8* [ %24, %22 ], [ %0, %3 ]
  %9 = phi i8* [ %23, %22 ], [ %1, %3 ]
  %10 = sext i8 %7 to i32
  %11 = add nsw i32 %10, -97
  %12 = icmp ult i32 %11, 26
  %13 = xor i32 %10, 32
  %14 = select i1 %12, i32 %13, i32 %10
  %15 = load i8, i8* %8, align 1
  %16 = sext i8 %15 to i32
  %17 = add nsw i32 %16, -97
  %18 = icmp ult i32 %17, 26
  %19 = xor i32 %16, 32
  %20 = select i1 %18, i32 %19, i32 %16
  %21 = icmp eq i32 %14, %20
  br i1 %21, label %22, label %33

22:                                               ; preds = %6
  %23 = getelementptr inbounds i8, i8* %9, i64 1
  %24 = getelementptr inbounds i8, i8* %8, i64 1
  %25 = load i8, i8* %23, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %6

27:                                               ; preds = %22, %3
  %28 = phi i8* [ %1, %3 ], [ %23, %22 ]
  %29 = phi i8* [ %0, %3 ], [ %24, %22 ]
  %30 = icmp eq i8** %2, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  store i8* %29, i8** %2, align 8
  %32 = load i8, i8* %28, align 1
  br label %33

33:                                               ; preds = %6, %27, %31
  %34 = phi i8 [ 0, %27 ], [ %32, %31 ], [ %7, %6 ]
  %35 = icmp eq i8 %34, 0
  %36 = zext i1 %35 to i32
  ret i32 %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @av_stristr(i8* readonly, i8* nocapture readonly) local_unnamed_addr #1 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %2, %28
  %6 = phi i8* [ %29, %28 ], [ %0, %2 ]
  br label %7

7:                                                ; preds = %5, %23
  %8 = phi i8 [ %26, %23 ], [ %3, %5 ]
  %9 = phi i8* [ %25, %23 ], [ %6, %5 ]
  %10 = phi i8* [ %24, %23 ], [ %1, %5 ]
  %11 = sext i8 %8 to i32
  %12 = add nsw i32 %11, -97
  %13 = icmp ult i32 %12, 26
  %14 = xor i32 %11, 32
  %15 = select i1 %13, i32 %14, i32 %11
  %16 = load i8, i8* %9, align 1
  %17 = sext i8 %16 to i32
  %18 = add nsw i32 %17, -97
  %19 = icmp ult i32 %18, 26
  %20 = xor i32 %17, 32
  %21 = select i1 %19, i32 %20, i32 %17
  %22 = icmp eq i32 %15, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %7
  %24 = getelementptr inbounds i8, i8* %10, i64 1
  %25 = getelementptr inbounds i8, i8* %9, i64 1
  %26 = load i8, i8* %24, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %7

28:                                               ; preds = %7
  %29 = getelementptr inbounds i8, i8* %6, i64 1
  %30 = load i8, i8* %6, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %5

32:                                               ; preds = %28, %23, %2
  %33 = phi i8* [ %0, %2 ], [ %6, %23 ], [ null, %28 ]
  ret i8* %33
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @av_strnstr(i8* readonly, i8* nocapture readonly, i64) local_unnamed_addr #2 {
  %4 = tail call i64 @strlen(i8* %1) #14
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %4, %2
  br i1 %7, label %17, label %8

8:                                                ; preds = %6, %13
  %9 = phi i64 [ %14, %13 ], [ %2, %6 ]
  %10 = phi i8* [ %15, %13 ], [ %0, %6 ]
  %11 = tail call i32 @bcmp(i8* %10, i8* %1, i64 %4)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = add i64 %9, -1
  %15 = getelementptr inbounds i8, i8* %10, i64 1
  %16 = icmp ult i64 %14, %4
  br i1 %16, label %17, label %8

17:                                               ; preds = %8, %13, %6, %3
  %18 = phi i8* [ %0, %3 ], [ null, %6 ], [ %10, %8 ], [ null, %13 ]
  ret i8* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @av_strlcpy(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #5 {
  %4 = icmp ugt i64 %2, 1
  br i1 %4, label %5, label %20

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %20, label %11

8:                                                ; preds = %11
  %9 = load i8, i8* %16, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %5, %8
  %12 = phi i8 [ %9, %8 ], [ %6, %5 ]
  %13 = phi i8* [ %16, %8 ], [ %1, %5 ]
  %14 = phi i8* [ %17, %8 ], [ %0, %5 ]
  %15 = phi i64 [ %18, %8 ], [ 1, %5 ]
  %16 = getelementptr inbounds i8, i8* %13, i64 1
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8 %12, i8* %14, align 1
  %18 = add nuw i64 %15, 1
  %19 = icmp eq i64 %18, %2
  br i1 %19, label %26, label %8

20:                                               ; preds = %8, %5, %3
  %21 = phi i8* [ %1, %3 ], [ %1, %5 ], [ %16, %8 ]
  %22 = phi i8* [ %0, %3 ], [ %0, %5 ], [ %17, %8 ]
  %23 = phi i64 [ 0, %3 ], [ 0, %5 ], [ %15, %8 ]
  %24 = phi i64 [ 1, %3 ], [ 1, %5 ], [ %18, %8 ]
  %25 = icmp ugt i64 %24, %2
  br i1 %25, label %30, label %26

26:                                               ; preds = %11, %20
  %27 = phi i64 [ %23, %20 ], [ %15, %11 ]
  %28 = phi i8* [ %22, %20 ], [ %17, %11 ]
  %29 = phi i8* [ %21, %20 ], [ %16, %11 ]
  store i8 0, i8* %28, align 1
  br label %30

30:                                               ; preds = %20, %26
  %31 = phi i64 [ %23, %20 ], [ %27, %26 ]
  %32 = phi i8* [ %21, %20 ], [ %29, %26 ]
  %33 = tail call i64 @strlen(i8* %32) #14
  %34 = add i64 %33, %31
  ret i64 %34
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @av_strlcat(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #5 {
  %4 = tail call i64 @strlen(i8* %0) #14
  %5 = add i64 %4, 1
  %6 = icmp ult i64 %5, %2
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @strlen(i8* %1) #14
  br label %43

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i64 %4
  %11 = sub i64 %2, %4
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %13, label %28

13:                                               ; preds = %9
  %14 = load i8, i8* %1, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %28, label %19

16:                                               ; preds = %19
  %17 = load i8, i8* %24, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %13, %16
  %20 = phi i8 [ %17, %16 ], [ %14, %13 ]
  %21 = phi i8* [ %24, %16 ], [ %1, %13 ]
  %22 = phi i8* [ %25, %16 ], [ %10, %13 ]
  %23 = phi i64 [ %26, %16 ], [ 1, %13 ]
  %24 = getelementptr inbounds i8, i8* %21, i64 1
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  store i8 %20, i8* %22, align 1
  %26 = add nuw i64 %23, 1
  %27 = icmp eq i64 %26, %11
  br i1 %27, label %34, label %16

28:                                               ; preds = %16, %13, %9
  %29 = phi i8* [ %1, %9 ], [ %1, %13 ], [ %24, %16 ]
  %30 = phi i8* [ %10, %9 ], [ %10, %13 ], [ %25, %16 ]
  %31 = phi i64 [ 0, %9 ], [ 0, %13 ], [ %23, %16 ]
  %32 = phi i64 [ 1, %9 ], [ 1, %13 ], [ %26, %16 ]
  %33 = icmp ugt i64 %32, %11
  br i1 %33, label %38, label %34

34:                                               ; preds = %19, %28
  %35 = phi i64 [ %31, %28 ], [ %23, %19 ]
  %36 = phi i8* [ %30, %28 ], [ %25, %19 ]
  %37 = phi i8* [ %29, %28 ], [ %24, %19 ]
  store i8 0, i8* %36, align 1
  br label %38

38:                                               ; preds = %28, %34
  %39 = phi i64 [ %31, %28 ], [ %35, %34 ]
  %40 = phi i8* [ %29, %28 ], [ %37, %34 ]
  %41 = tail call i64 @strlen(i8* %40) #14
  %42 = add i64 %41, %39
  br label %43

43:                                               ; preds = %38, %7
  %44 = phi i64 [ %8, %7 ], [ %42, %38 ]
  %45 = add i64 %44, %4
  ret i64 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @av_strlcatf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #6 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = tail call i64 @strlen(i8* %0) #14
  %6 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %8 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %6)
  %9 = getelementptr inbounds i8, i8* %0, i64 %5
  %10 = call i64 @llvm.usub.sat.i64(i64 %1, i64 %5)
  %11 = call i32 @vsnprintf(i8* %9, i64 %10, i8* %2, %struct.__va_list_tag* nonnull %7) #7
  %12 = sext i32 %11 to i64
  %13 = add i64 %5, %12
  call void @llvm.va_end(i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret i64 %13
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: nounwind ssp uwtable
define hidden i8* @av_asprintf(i8* nocapture readonly, ...) local_unnamed_addr #6 {
  %2 = alloca i8*, align 8
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  store i8* null, i8** %2, align 8
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %8 = call i32 @vsnprintf(i8* null, i64 0, i8* %0, %struct.__va_list_tag* nonnull %6) #7
  call void @llvm.va_end(i8* nonnull %5)
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %1
  %11 = add nuw nsw i32 %8, 1
  %12 = sext i32 %11 to i64
  %13 = call noalias i8* @av_malloc(i64 %12) #7
  store i8* %13, i8** %2, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  call void @llvm.va_start(i8* nonnull %5)
  %16 = call i32 @vsnprintf(i8* nonnull %13, i64 %12, i8* %0, %struct.__va_list_tag* nonnull %6) #7
  call void @llvm.va_end(i8* nonnull %5)
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  call void @av_freep(i8* nonnull %4) #7
  %19 = load i8*, i8** %2, align 8
  br label %20

20:                                               ; preds = %10, %15, %18, %1
  %21 = phi i8* [ null, %10 ], [ %13, %15 ], [ %19, %18 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret i8* %21
}

declare noalias i8* @av_malloc(i64) local_unnamed_addr #9

declare void @av_freep(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @av_d2str(double) local_unnamed_addr #6 {
  %2 = tail call noalias i8* @av_malloc(i64 16) #7
  %3 = icmp eq i8* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %2, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), double %0) #7
  br label %6

6:                                                ; preds = %1, %4
  ret i8* %2
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @av_get_token(i8** nocapture, i8* nocapture readonly) local_unnamed_addr #6 {
  %3 = load i8*, i8** %0, align 8
  %4 = tail call i64 @strlen(i8* %3) #14
  %5 = add i64 %4, 1
  %6 = tail call noalias i8* @av_malloc(i64 %5) #7
  %7 = load i8*, i8** %0, align 8
  %8 = icmp eq i8* %6, null
  br i1 %8, label %72, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @strspn(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #14
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %60, label %14

14:                                               ; preds = %9, %54
  %15 = phi i8 [ %58, %54 ], [ %12, %9 ]
  %16 = phi i8* [ %57, %54 ], [ %11, %9 ]
  %17 = phi i8* [ %56, %54 ], [ %6, %9 ]
  %18 = phi i8* [ %55, %54 ], [ %6, %9 ]
  %19 = tail call i64 @strspn(i8* %16, i8* %1) #14
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %60

21:                                               ; preds = %14
  %22 = getelementptr inbounds i8, i8* %16, i64 1
  switch i8 %15, label %52 [
    i8 92, label %29
    i8 39, label %23
  ]

23:                                               ; preds = %21
  %24 = load i8, i8* %22, align 1
  %25 = icmp eq i8 %24, 0
  %26 = icmp ne i8 %24, 39
  %27 = xor i1 %25, %26
  %28 = getelementptr inbounds i8, i8* %16, i64 2
  br i1 %27, label %35, label %45

29:                                               ; preds = %21
  %30 = load i8, i8* %22, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds i8, i8* %16, i64 2
  %34 = getelementptr inbounds i8, i8* %18, i64 1
  store i8 %30, i8* %18, align 1
  br label %54

35:                                               ; preds = %23, %35
  %36 = phi i8* [ %44, %35 ], [ %28, %23 ]
  %37 = phi i8 [ %40, %35 ], [ %24, %23 ]
  %38 = phi i8* [ %39, %35 ], [ %18, %23 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 1
  store i8 %37, i8* %38, align 1
  %40 = load i8, i8* %36, align 1
  %41 = icmp eq i8 %40, 0
  %42 = icmp ne i8 %40, 39
  %43 = xor i1 %41, %42
  %44 = getelementptr inbounds i8, i8* %36, i64 1
  br i1 %43, label %35, label %45

45:                                               ; preds = %35, %23
  %46 = phi i8* [ %18, %23 ], [ %39, %35 ]
  %47 = phi i8* [ %22, %23 ], [ %36, %35 ]
  %48 = phi i1 [ %25, %23 ], [ %41, %35 ]
  %49 = phi i8* [ %28, %23 ], [ %44, %35 ]
  %50 = select i1 %48, i8* %17, i8* %46
  %51 = select i1 %48, i8* %47, i8* %49
  br label %54

52:                                               ; preds = %29, %21
  %53 = getelementptr inbounds i8, i8* %18, i64 1
  store i8 %15, i8* %18, align 1
  br label %54

54:                                               ; preds = %45, %52, %32
  %55 = phi i8* [ %34, %32 ], [ %53, %52 ], [ %46, %45 ]
  %56 = phi i8* [ %34, %32 ], [ %17, %52 ], [ %50, %45 ]
  %57 = phi i8* [ %33, %32 ], [ %22, %52 ], [ %51, %45 ]
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %14

60:                                               ; preds = %14, %54, %9
  %61 = phi i8* [ %6, %9 ], [ %55, %54 ], [ %18, %14 ]
  %62 = phi i8* [ %6, %9 ], [ %56, %54 ], [ %17, %14 ]
  %63 = phi i8* [ %11, %9 ], [ %57, %54 ], [ %16, %14 ]
  br label %64

64:                                               ; preds = %68, %60
  %65 = phi i8* [ %61, %60 ], [ %66, %68 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 -1
  store i8 0, i8* %65, align 1
  %67 = icmp ult i8* %66, %62
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = tail call i64 @strspn(i8* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #14
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %64

71:                                               ; preds = %68, %64
  store i8* %63, i8** %0, align 8
  br label %72

72:                                               ; preds = %2, %71
  ret i8* %6
}

; Function Attrs: nofree nounwind readonly
declare i64 @strspn(i8* nocapture, i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @av_strtok(i8*, i8* nocapture readonly, i8** nocapture) local_unnamed_addr #5 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %5, %3
  %9 = phi i8* [ %0, %3 ], [ %6, %5 ]
  %10 = tail call i64 @strspn(i8* nonnull %9, i8* %1) #14
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %11, i64 1
  %16 = tail call i64 @strcspn(i8* %15, i8* %1) #14
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  store i8 0, i8* %17, align 1
  %21 = getelementptr inbounds i8, i8* %17, i64 1
  br label %22

22:                                               ; preds = %20, %14, %8
  %23 = phi i8* [ null, %8 ], [ %21, %20 ], [ null, %14 ]
  %24 = phi i8* [ null, %8 ], [ %11, %20 ], [ %11, %14 ]
  store i8* %23, i8** %2, align 8
  br label %25

25:                                               ; preds = %22, %5
  %26 = phi i8* [ null, %5 ], [ %24, %22 ]
  ret i8* %26
}

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #10

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_strcasecmp(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1 {
  br label %3

3:                                                ; preds = %22, %2
  %4 = phi i8* [ %0, %2 ], [ %24, %22 ]
  %5 = phi i8* [ %1, %2 ], [ %23, %22 ]
  %6 = load i8, i8* %4, align 1
  %7 = sext i8 %6 to i32
  %8 = add nsw i32 %7, -65
  %9 = icmp ult i32 %8, 26
  %10 = xor i32 %7, 32
  %11 = select i1 %9, i32 %10, i32 %7
  %12 = load i8, i8* %5, align 1
  %13 = sext i8 %12 to i32
  %14 = add nsw i32 %13, -65
  %15 = icmp ult i32 %14, 26
  %16 = xor i32 %13, 32
  %17 = select i1 %15, i32 %16, i32 %13
  %18 = and i32 %11, 255
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %3
  %21 = and i32 %17, 255
  br label %27

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %5, i64 1
  %24 = getelementptr inbounds i8, i8* %4, i64 1
  %25 = and i32 %17, 255
  %26 = icmp eq i32 %18, %25
  br i1 %26, label %3, label %27

27:                                               ; preds = %22, %20
  %28 = phi i32 [ %21, %20 ], [ %25, %22 ]
  %29 = sub nsw i32 %18, %28
  ret i32 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_strncasecmp(i8* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #1 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %3, %26
  %6 = phi i8* [ %28, %26 ], [ %0, %3 ]
  %7 = phi i8* [ %27, %26 ], [ %1, %3 ]
  %8 = phi i64 [ %21, %26 ], [ %2, %3 ]
  %9 = load i8, i8* %6, align 1
  %10 = sext i8 %9 to i32
  %11 = add nsw i32 %10, -65
  %12 = icmp ult i32 %11, 26
  %13 = xor i32 %10, 32
  %14 = select i1 %12, i32 %13, i32 %10
  %15 = load i8, i8* %7, align 1
  %16 = sext i8 %15 to i32
  %17 = add nsw i32 %16, -65
  %18 = icmp ult i32 %17, 26
  %19 = xor i32 %16, 32
  %20 = select i1 %18, i32 %19, i32 %16
  %21 = add i64 %8, -1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %5
  %24 = and i32 %14, 255
  %25 = and i32 %20, 255
  br label %34

26:                                               ; preds = %5
  %27 = getelementptr inbounds i8, i8* %7, i64 1
  %28 = getelementptr inbounds i8, i8* %6, i64 1
  %29 = and i32 %14, 255
  %30 = icmp ne i32 %29, 0
  %31 = and i32 %20, 255
  %32 = icmp eq i32 %29, %31
  %33 = and i1 %30, %32
  br i1 %33, label %5, label %34

34:                                               ; preds = %26, %23
  %35 = phi i32 [ %25, %23 ], [ %31, %26 ]
  %36 = phi i32 [ %24, %23 ], [ %29, %26 ]
  %37 = sub nsw i32 %36, %35
  br label %38

38:                                               ; preds = %3, %34
  %39 = phi i32 [ %37, %34 ], [ 0, %3 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @av_strireplace(i8*, i8* nocapture readonly, i8*) local_unnamed_addr #6 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.AVBPrint, align 8
  %6 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  store i8* null, i8** %4, align 8
  %7 = tail call i64 @strlen(i8* %2) #14
  %8 = tail call i64 @strlen(i8* %1) #14
  %9 = bitcast %struct.AVBPrint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %9) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 1024, i1 false)
  call void @av_bprint_init(%struct.AVBPrint* nonnull %5, i32 1, i32 -1) #7
  %10 = trunc i64 %7 to i32
  br label %11

11:                                               ; preds = %45, %3
  %12 = phi i8* [ %0, %3 ], [ %50, %45 ]
  %13 = load i8, i8* %1, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %42, label %15

15:                                               ; preds = %11, %38
  %16 = phi i8* [ %39, %38 ], [ %12, %11 ]
  br label %17

17:                                               ; preds = %33, %15
  %18 = phi i8 [ %36, %33 ], [ %13, %15 ]
  %19 = phi i8* [ %35, %33 ], [ %16, %15 ]
  %20 = phi i8* [ %34, %33 ], [ %1, %15 ]
  %21 = sext i8 %18 to i32
  %22 = add nsw i32 %21, -97
  %23 = icmp ult i32 %22, 26
  %24 = xor i32 %21, 32
  %25 = select i1 %23, i32 %24, i32 %21
  %26 = load i8, i8* %19, align 1
  %27 = sext i8 %26 to i32
  %28 = add nsw i32 %27, -97
  %29 = icmp ult i32 %28, 26
  %30 = xor i32 %27, 32
  %31 = select i1 %29, i32 %30, i32 %27
  %32 = icmp eq i32 %25, %31
  br i1 %32, label %33, label %38

33:                                               ; preds = %17
  %34 = getelementptr inbounds i8, i8* %20, i64 1
  %35 = getelementptr inbounds i8, i8* %19, i64 1
  %36 = load i8, i8* %34, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %17

38:                                               ; preds = %17
  %39 = getelementptr inbounds i8, i8* %16, i64 1
  %40 = load i8, i8* %16, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %51, label %15

42:                                               ; preds = %33, %11
  %43 = phi i8* [ %12, %11 ], [ %16, %33 ]
  %44 = icmp eq i8* %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %42
  %46 = ptrtoint i8* %43 to i64
  %47 = ptrtoint i8* %12 to i64
  %48 = sub i64 %46, %47
  %49 = trunc i64 %48 to i32
  call void @av_bprint_append_data(%struct.AVBPrint* nonnull %5, i8* %12, i32 %49) #7
  %50 = getelementptr inbounds i8, i8* %43, i64 %8
  call void @av_bprint_append_data(%struct.AVBPrint* nonnull %5, i8* %2, i32 %10) #7
  br label %11

51:                                               ; preds = %42, %38
  %52 = call i64 @strlen(i8* %12) #14
  %53 = trunc i64 %52 to i32
  call void @av_bprint_append_data(%struct.AVBPrint* nonnull %5, i8* %12, i32 %53) #7
  %54 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %5, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %5, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp ult i32 %55, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %51
  %60 = call i32 @av_bprint_finalize(%struct.AVBPrint* nonnull %5, i8** null) #7
  br label %63

61:                                               ; preds = %51
  %62 = call i32 @av_bprint_finalize(%struct.AVBPrint* nonnull %5, i8** nonnull %4) #7
  br label %63

63:                                               ; preds = %61, %59
  %64 = load i8*, i8** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  ret i8* %64
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @av_bprint_init(%struct.AVBPrint*, i32, i32) local_unnamed_addr #9

declare void @av_bprint_append_data(%struct.AVBPrint*, i8*, i32) local_unnamed_addr #9

declare i32 @av_bprint_finalize(%struct.AVBPrint*, i8**) local_unnamed_addr #9

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @av_basename(i8* readonly) local_unnamed_addr #2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @strrchr(i8* nonnull %0, i32 47) #14
  %8 = icmp eq i8* %7, null
  %9 = getelementptr inbounds i8, i8* %7, i64 1
  %10 = select i1 %8, i8* %0, i8* %9
  ret i8* %10

11:                                               ; preds = %3, %1
  ret i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nofree nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #10

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @av_dirname(i8*) local_unnamed_addr #5 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = tail call i8* @strrchr(i8* nonnull %0, i32 47) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i8 0, i8* %4, align 1
  br label %7

7:                                                ; preds = %1, %3, %6
  %8 = phi i8* [ %0, %6 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %1 ]
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @av_append_path_component(i8*, i8*) local_unnamed_addr #6 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call noalias i8* @av_strdup(i8* %1) #7
  br label %87

6:                                                ; preds = %2
  %7 = icmp eq i8* %1, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = tail call noalias i8* @av_strdup(i8* nonnull %0) #7
  br label %87

10:                                               ; preds = %6
  %11 = tail call i64 @strlen(i8* nonnull %0) #14
  %12 = tail call i64 @strlen(i8* nonnull %1) #14
  %13 = xor i64 %12, -1
  %14 = icmp ugt i64 %11, %13
  br i1 %14, label %87, label %15

15:                                               ; preds = %10
  %16 = add i64 %12, %11
  %17 = icmp ugt i64 %16, -3
  br i1 %17, label %87, label %18

18:                                               ; preds = %15
  %19 = add nuw i64 %16, 2
  %20 = tail call noalias i8* @av_malloc(i64 %19) #7
  %21 = icmp eq i8* %20, null
  br i1 %21, label %87, label %22

22:                                               ; preds = %18
  %23 = icmp eq i64 %11, 0
  br i1 %23, label %60, label %24

24:                                               ; preds = %22
  %25 = add i64 %11, 1
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %27, label %38

27:                                               ; preds = %24, %33
  %28 = phi i64 [ %36, %33 ], [ 1, %24 ]
  %29 = phi i8* [ %35, %33 ], [ %20, %24 ]
  %30 = phi i8* [ %34, %33 ], [ %0, %24 ]
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8, i8* %30, i64 1
  %35 = getelementptr inbounds i8, i8* %29, i64 1
  store i8 %31, i8* %29, align 1
  %36 = add nuw i64 %28, 1
  %37 = icmp eq i64 %36, %25
  br i1 %37, label %42, label %27

38:                                               ; preds = %27, %24
  %39 = phi i8* [ %20, %24 ], [ %29, %27 ]
  %40 = phi i64 [ 1, %24 ], [ %28, %27 ]
  %41 = icmp ugt i64 %40, %25
  br i1 %41, label %44, label %42

42:                                               ; preds = %33, %38
  %43 = phi i8* [ %39, %38 ], [ %35, %33 ]
  store i8 0, i8* %43, align 1
  br label %44

44:                                               ; preds = %38, %42
  %45 = icmp eq i64 %12, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = getelementptr inbounds i8, i8* %20, i64 %11
  br label %80

48:                                               ; preds = %44
  %49 = add i64 %11, -1
  %50 = getelementptr inbounds i8, i8* %20, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 47
  %53 = load i8, i8* %1, align 1
  %54 = icmp eq i8 %53, 47
  br i1 %52, label %58, label %55

55:                                               ; preds = %48
  br i1 %54, label %60, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds i8, i8* %20, i64 %11
  store i8 47, i8* %57, align 1
  br label %60

58:                                               ; preds = %48
  %59 = select i1 %54, i64 %49, i64 %11
  br label %60

60:                                               ; preds = %55, %58, %22, %56
  %61 = phi i64 [ %25, %56 ], [ 0, %22 ], [ %59, %58 ], [ %11, %55 ]
  %62 = getelementptr inbounds i8, i8* %20, i64 %61
  %63 = add i64 %12, 1
  %64 = icmp ugt i64 %63, 1
  br i1 %64, label %65, label %76

65:                                               ; preds = %60, %71
  %66 = phi i64 [ %74, %71 ], [ 1, %60 ]
  %67 = phi i8* [ %73, %71 ], [ %62, %60 ]
  %68 = phi i8* [ %72, %71 ], [ %1, %60 ]
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds i8, i8* %68, i64 1
  %73 = getelementptr inbounds i8, i8* %67, i64 1
  store i8 %69, i8* %67, align 1
  %74 = add nuw i64 %66, 1
  %75 = icmp eq i64 %74, %63
  br i1 %75, label %80, label %65

76:                                               ; preds = %65, %60
  %77 = phi i8* [ %62, %60 ], [ %67, %65 ]
  %78 = phi i64 [ 1, %60 ], [ %66, %65 ]
  %79 = icmp ugt i64 %78, %63
  br i1 %79, label %83, label %80

80:                                               ; preds = %71, %46, %76
  %81 = phi i64 [ %61, %76 ], [ %11, %46 ], [ %61, %71 ]
  %82 = phi i8* [ %77, %76 ], [ %47, %46 ], [ %73, %71 ]
  store i8 0, i8* %82, align 1
  br label %83

83:                                               ; preds = %76, %80
  %84 = phi i64 [ %61, %76 ], [ %81, %80 ]
  %85 = add i64 %84, %12
  %86 = getelementptr inbounds i8, i8* %20, i64 %85
  store i8 0, i8* %86, align 1
  br label %87

87:                                               ; preds = %83, %18, %10, %15, %8, %4
  %88 = phi i8* [ %9, %8 ], [ %5, %4 ], [ null, %15 ], [ null, %10 ], [ null, %18 ], [ %20, %83 ]
  ret i8* %88
}

declare noalias i8* @av_strdup(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_escape(i8**, i8*, i8*, i32, i32) local_unnamed_addr #6 {
  %6 = alloca %struct.AVBPrint, align 8
  %7 = bitcast %struct.AVBPrint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 1024, i1 false)
  call void @av_bprint_init(%struct.AVBPrint* nonnull %6, i32 1, i32 -1) #7
  call void @av_bprint_escape(%struct.AVBPrint* nonnull %6, i8* %1, i8* %2, i32 %3, i32 %4) #7
  %8 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %6, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.AVBPrint, %struct.AVBPrint* %6, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = call i32 @av_bprint_finalize(%struct.AVBPrint* nonnull %6, i8** null) #7
  br label %18

15:                                               ; preds = %5
  %16 = call i32 @av_bprint_finalize(%struct.AVBPrint* nonnull %6, i8** %0) #7
  %17 = load i32, i32* %8, align 8
  br label %18

18:                                               ; preds = %15, %13
  %19 = phi i32 [ %17, %15 ], [ -12, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %7) #7
  ret i32 %19
}

declare void @av_bprint_escape(%struct.AVBPrint*, i8*, i8*, i32, i32) local_unnamed_addr #9

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @av_match_name(i8* readonly, i8*) local_unnamed_addr #2 {
  %3 = icmp ne i8* %0, null
  %4 = icmp ne i8* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %83

6:                                                ; preds = %2
  %7 = load i8, i8* %1, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %83, label %9

9:                                                ; preds = %6
  %10 = tail call i64 @strlen(i8* nonnull %0) #14
  %11 = shl i64 %10, 32
  %12 = ashr exact i64 %11, 32
  br label %13

13:                                               ; preds = %9, %76
  %14 = phi i8 [ %7, %9 ], [ %81, %76 ]
  %15 = phi i8* [ %1, %9 ], [ %80, %76 ]
  %16 = icmp eq i8 %14, 45
  %17 = tail call i8* @strchr(i8* %15, i32 44) #14
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = tail call i64 @strlen(i8* %15) #14
  %21 = getelementptr inbounds i8, i8* %15, i64 %20
  br label %22

22:                                               ; preds = %13, %19
  %23 = phi i8* [ %17, %13 ], [ %21, %19 ]
  %24 = zext i1 %16 to i64
  %25 = getelementptr inbounds i8, i8* %15, i64 %24
  %26 = ptrtoint i8* %23 to i64
  %27 = ptrtoint i8* %25 to i64
  %28 = sub i64 %26, %27
  %29 = icmp sgt i64 %28, %12
  %30 = select i1 %29, i64 %28, i64 %12
  %31 = shl i64 %30, 32
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %73, label %33

33:                                               ; preds = %22
  %34 = ashr exact i64 %31, 32
  br label %35

35:                                               ; preds = %33, %56
  %36 = phi i8* [ %58, %56 ], [ %0, %33 ]
  %37 = phi i8* [ %57, %56 ], [ %25, %33 ]
  %38 = phi i64 [ %51, %56 ], [ %34, %33 ]
  %39 = load i8, i8* %36, align 1
  %40 = sext i8 %39 to i32
  %41 = add nsw i32 %40, -65
  %42 = icmp ult i32 %41, 26
  %43 = xor i32 %40, 32
  %44 = select i1 %42, i32 %43, i32 %40
  %45 = load i8, i8* %37, align 1
  %46 = sext i8 %45 to i32
  %47 = add nsw i32 %46, -65
  %48 = icmp ult i32 %47, 26
  %49 = xor i32 %46, 32
  %50 = select i1 %48, i32 %49, i32 %46
  %51 = add i64 %38, -1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %35
  %54 = and i32 %44, 255
  %55 = and i32 %50, 255
  br label %64

56:                                               ; preds = %35
  %57 = getelementptr inbounds i8, i8* %37, i64 1
  %58 = getelementptr inbounds i8, i8* %36, i64 1
  %59 = and i32 %44, 255
  %60 = icmp ne i32 %59, 0
  %61 = and i32 %50, 255
  %62 = icmp eq i32 %59, %61
  %63 = and i1 %60, %62
  br i1 %63, label %35, label %64

64:                                               ; preds = %56, %53
  %65 = phi i32 [ %55, %53 ], [ %61, %56 ]
  %66 = phi i32 [ %54, %53 ], [ %59, %56 ]
  %67 = icmp eq i32 %66, %65
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = icmp sgt i64 %28, 3
  %70 = select i1 %69, i64 %28, i64 3
  %71 = tail call i32 @strncmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* %25, i64 %70) #14
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %64, %68, %22
  %74 = xor i1 %16, true
  %75 = zext i1 %74 to i32
  br label %83

76:                                               ; preds = %68
  %77 = load i8, i8* %23, align 1
  %78 = icmp eq i8 %77, 44
  %79 = zext i1 %78 to i64
  %80 = getelementptr inbounds i8, i8* %23, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %13

83:                                               ; preds = %76, %6, %73, %2
  %84 = phi i32 [ 0, %2 ], [ %75, %73 ], [ 0, %6 ], [ 0, %76 ]
  ret i32 %84
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #10

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_utf8_decode(i32* nocapture, i8** nocapture, i8* readnone, i32) local_unnamed_addr #6 {
  %5 = load i8*, i8** %1, align 8
  %6 = icmp ult i8* %5, %2
  br i1 %6, label %7, label %96

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %5, i64 1
  %9 = load i8, i8* %5, align 1
  %10 = zext i8 %9 to i64
  %11 = and i64 %10, 192
  %12 = icmp eq i64 %11, 128
  %13 = icmp ugt i8 %9, -3
  %14 = or i1 %13, %12
  br i1 %14, label %93, label %15

15:                                               ; preds = %7
  %16 = lshr i8 %9, 1
  %17 = and i8 %16, 64
  %18 = and i8 %9, %17
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = zext i8 %17 to i32
  br label %27

22:                                               ; preds = %15
  %23 = shl nuw i8 %17, 1
  %24 = zext i8 %23 to i64
  %25 = add nuw nsw i64 %24, 255
  %26 = and i64 %25, %10
  br label %55

27:                                               ; preds = %20, %39
  %28 = phi i32 [ %32, %39 ], [ 0, %20 ]
  %29 = phi i64 [ %43, %39 ], [ %10, %20 ]
  %30 = phi i32 [ %44, %39 ], [ %21, %20 ]
  %31 = phi i8* [ %40, %39 ], [ %8, %20 ]
  %32 = add nuw nsw i32 %28, 1
  %33 = icmp ult i8* %31, %2
  br i1 %33, label %34, label %93

34:                                               ; preds = %27
  %35 = load i8, i8* %31, align 1
  %36 = zext i8 %35 to i32
  %37 = add nsw i32 %36, -128
  %38 = icmp ugt i32 %37, 63
  br i1 %38, label %93, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds i8, i8* %31, i64 1
  %41 = shl i64 %29, 6
  %42 = sext i32 %37 to i64
  %43 = add i64 %41, %42
  %44 = shl i32 %30, 5
  %45 = zext i32 %44 to i64
  %46 = and i64 %43, %45
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %27

48:                                               ; preds = %39
  %49 = shl i32 %30, 6
  %50 = add i32 %49, -1
  %51 = zext i32 %50 to i64
  %52 = and i64 %43, %51
  %53 = icmp ult i32 %32, 6
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6, i64 0, i64 0), i32 420) #7
  tail call void @abort() #15
  unreachable

55:                                               ; preds = %22, %48
  %56 = phi i64 [ %26, %22 ], [ %52, %48 ]
  %57 = phi i32 [ 0, %22 ], [ %32, %48 ]
  %58 = phi i8* [ %8, %22 ], [ %40, %48 ]
  %59 = zext i32 %57 to i64
  %60 = getelementptr inbounds [6 x i32], [6 x i32]* @__const.av_utf8_decode.overlong_encoding_mins, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %56, %62
  %64 = icmp ugt i64 %56, 2147483647
  %65 = or i1 %64, %63
  br i1 %65, label %93, label %66

66:                                               ; preds = %55
  %67 = trunc i64 %56 to i32
  store i32 %67, i32* %0, align 4
  %68 = icmp ugt i64 %56, 1114111
  %69 = and i32 %3, 1
  %70 = icmp eq i32 %69, 0
  %71 = and i1 %70, %68
  %72 = select i1 %71, i32 -84, i32 0
  %73 = icmp ult i64 %56, 32
  br i1 %73, label %74, label %79

74:                                               ; preds = %66
  switch i32 %67, label %75 [
    i32 13, label %79
    i32 10, label %79
    i32 9, label %79
  ]

75:                                               ; preds = %74
  %76 = and i32 %3, 8
  %77 = icmp eq i32 %76, 0
  %78 = select i1 %77, i32 %72, i32 -84
  br label %79

79:                                               ; preds = %75, %74, %74, %74, %66
  %80 = phi i32 [ %72, %74 ], [ %72, %66 ], [ %72, %74 ], [ %72, %74 ], [ %78, %75 ]
  %81 = and i64 %56, 4294965248
  %82 = icmp eq i64 %81, 55296
  %83 = and i32 %3, 4
  %84 = icmp eq i32 %83, 0
  %85 = and i1 %84, %82
  %86 = or i64 %56, 1
  %87 = icmp eq i64 %86, 65535
  %88 = and i32 %3, 2
  %89 = icmp eq i32 %88, 0
  %90 = and i1 %89, %87
  %91 = or i1 %90, %85
  %92 = select i1 %91, i32 -84, i32 %80
  br label %93

93:                                               ; preds = %34, %27, %7, %55, %79
  %94 = phi i8* [ %8, %7 ], [ %58, %55 ], [ %58, %79 ], [ %8, %27 ], [ %8, %34 ]
  %95 = phi i32 [ -84, %7 ], [ -84, %55 ], [ %92, %79 ], [ -84, %27 ], [ -84, %34 ]
  store i8* %94, i8** %1, align 8
  br label %96

96:                                               ; preds = %93, %4
  %97 = phi i32 [ 0, %4 ], [ %95, %93 ]
  ret i32 %97
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @av_match_list(i8* readonly, i8* readonly, i8 signext) local_unnamed_addr #2 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %53, label %5

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null
  %7 = sext i8 %2 to i32
  br label %8

8:                                                ; preds = %5, %47
  %9 = phi i8* [ %0, %5 ], [ %51, %47 ]
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %53, label %12

12:                                               ; preds = %8
  br i1 %6, label %47, label %13

13:                                               ; preds = %12, %41
  %14 = phi i8* [ %45, %41 ], [ %1, %12 ]
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %47, label %17

17:                                               ; preds = %13, %37
  %18 = phi i8 [ %40, %37 ], [ %15, %13 ]
  %19 = phi i64 [ %38, %37 ], [ 0, %13 ]
  %20 = getelementptr inbounds i8, i8* %9, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = sext i8 %18 to i32
  %24 = icmp eq i8 %21, %18
  br i1 %24, label %31, label %25

25:                                               ; preds = %17
  %26 = mul nsw i32 %23, %22
  %27 = icmp eq i32 %26, 0
  %28 = add nsw i32 %23, %22
  %29 = icmp eq i32 %28, %7
  %30 = and i1 %27, %29
  br i1 %30, label %31, label %41

31:                                               ; preds = %25, %17
  %32 = icmp eq i64 %19, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %31
  %34 = icmp eq i8 %21, 0
  %35 = icmp eq i8 %21, %2
  %36 = or i1 %34, %35
  br i1 %36, label %53, label %37

37:                                               ; preds = %33, %31
  %38 = add nuw i64 %19, 1
  %39 = getelementptr inbounds i8, i8* %14, i64 %38
  %40 = load i8, i8* %39, align 1
  br label %17

41:                                               ; preds = %25
  %42 = tail call i8* @strchr(i8* nonnull %14, i32 %7) #14
  %43 = icmp ne i8* %42, null
  %44 = zext i1 %43 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %13

47:                                               ; preds = %41, %13, %12
  %48 = tail call i8* @strchr(i8* nonnull %9, i32 %7) #14
  %49 = icmp ne i8* %48, null
  %50 = zext i1 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %8

53:                                               ; preds = %8, %47, %33, %3
  %54 = phi i32 [ 0, %3 ], [ 1, %33 ], [ 0, %47 ], [ 0, %8 ]
  ret i32 %54
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #13

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
