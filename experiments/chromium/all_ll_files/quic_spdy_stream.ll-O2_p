; ModuleID = '../../net/third_party/quiche/src/quic/core/http/quic_spdy_stream.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/http/quic_spdy_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicSpdyStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackDecodedHeadersAccumulator::Visitor", %"class.quic::QuicSpdySession"*, i8, %"class.quic::QuicSpdyStream::Visitor"*, i8, i8, i8, %"class.quic::QuicHeaderList", i64, i8, i8, %"class.spdy::Http2HeaderBlock", %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.655", %"class.quic::HttpDecoder", %"class.quic::QuicSpdyStreamBodyManager", i64, i8, %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicIntervalSet", i32, %"class.std::__1::unique_ptr.664", %"class.std::__1::unique_ptr.677" }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.410", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr", i64, %"class.quic::QuicIntervalSet" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.302", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.348", %"class.absl::flat_hash_map.357", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.175", %"class.std::__1::vector", %"class.absl::optional.404", i8, i8, i8, i8, [4 x i8] }>
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.3" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.3" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.5" = type { i64 }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.65", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.39", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.192", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.214", %"class.quiche::QuicheCircularDeque.220", %"class.quiche::QuicheCircularDeque.223", %"class.std::__1::vector.226", %"class.absl::optional.233", %"class.quic::QuicConnectionId", %"class.absl::optional.233", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector", [4 x %"class.std::__1::unique_ptr.25"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.31"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.39", i8, %"class.absl::string_view", i8, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.58" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.53" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.47", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i64 }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.47"*, i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::vector.68"* }
%"class.std::__1::vector.68" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.72", %"class.absl::optional.72", %"class.absl::optional.72" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.81", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.83" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet.88" }
%"class.quic::QuicIntervalSet.88" = type { %"class.absl::btree_set.89" }
%"class.absl::btree_set.89" = type { %"class.absl::container_internal::btree_set_container.90" }
%"class.absl::container_internal::btree_set_container.90" = type { %"class.absl::container_internal::btree_container.91" }
%"class.absl::container_internal::btree_container.91" = type { %"class.absl::container_internal::btree.92" }
%"class.absl::container_internal::btree.92" = type { %"class.absl::container_internal::CompressedTuple.93", %"class.absl::container_internal::btree_node.100"*, i64 }
%"class.absl::container_internal::CompressedTuple.93" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.94" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.94" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.99" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.99" = type { %"class.absl::container_internal::btree_node.100"* }
%"class.absl::container_internal::btree_node.100" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.102", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.130" }
%"struct.quic::QuicFrame" = type { %union.anon.104 }
%union.anon.104 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.102", %"class.std::__1::vector.102", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.40", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.154", %"class.std::__1::vector.161", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.168", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.135", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.135" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.102", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.138", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.144", %"class.absl::optional.149" }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { i32 }
%"class.absl::optional.149" = type { %"class.absl::optional_internal::optional_data.150" }
%"class.absl::optional_internal::optional_data.150" = type { %"class.absl::optional_internal::optional_data_base.151" }
%"class.absl::optional_internal::optional_data_base.151" = type { %"class.absl::optional_internal::optional_data_dtor_base.152" }
%"class.absl::optional_internal::optional_data_dtor_base.152" = type { i8, %union.anon.153 }
%union.anon.153 = type { i64 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.156" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.163" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.168" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.171"*, i64 }
%"struct.std::__1::pair.171" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node.100"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.37, i32 }
%union.anon.37 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.38 }
%union.anon.38 = type { [4 x i32] }
%"struct.std::__1::array.39" = type { [16 x i8] }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::vector.182", %"class.std::__1::vector.182", %"class.std::__1::vector.182", %"class.quic::QuicIntervalSet", i64 }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.184" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.39" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.195", %"class.std::__1::vector.203", %"class.std::__1::unique_ptr.175", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.std::__1::pair.197"*, %"struct.std::__1::pair.197"*, %"class.std::__1::__compressed_pair.198" }
%"struct.std::__1::pair.197" = type opaque
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::pair.197"* }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.std::__1::pair.205"*, %"struct.std::__1::pair.205"*, %"class.std::__1::__compressed_pair.206" }
%"struct.std::__1::pair.205" = type opaque
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::pair.205"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::array.121"* }
%"struct.std::__1::array.121" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.220" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.121"*, i64 }
%"class.quiche::QuicheCircularDeque.223" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.121", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.17 }
%union.anon.17 = type { %struct.anon.19 }
%struct.anon.19 = type { i8, i8* }
%"class.absl::optional.233" = type { %"class.absl::optional_internal::optional_data.234" }
%"class.absl::optional_internal::optional_data.234" = type { %"class.absl::optional_internal::optional_data_base.235" }
%"class.absl::optional_internal::optional_data_base.235" = type { %"class.absl::optional_internal::optional_data_dtor_base.236" }
%"class.absl::optional_internal::optional_data_dtor_base.236" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.238" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.242" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.248", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.258", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"struct.std::__1::array.121"*, %"struct.std::__1::array.121"*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.39", i8, i8, i64, i64, %"class.std::__1::unique_ptr.40", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.46 }
%union.anon.46 = type { %"class.quic::RttStats" }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.264", i64 }
%"class.std::__1::deque.264" = type { %"class.std::__1::__deque_base.265" }
%"class.std::__1::__deque_base.265" = type { %"struct.std::__1::__split_buffer.266", i64, %"class.std::__1::__compressed_pair.272" }
%"struct.std::__1::__split_buffer.266" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.267" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.276", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.292", [4 x i8] }>
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278", %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.295" }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.297" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"class.std::__1::unique_ptr.304"*, %"class.std::__1::unique_ptr.304"*, %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.410", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.std::__1::unique_ptr.304"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.322", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.327", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.315", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::flat_hash_map.333", %"class.absl::flat_hash_map.333" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.315", %"class.std::__1::vector.315" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.322" = type { %"class.absl::optional_internal::optional_data.323" }
%"class.absl::optional_internal::optional_data.323" = type { %"class.absl::optional_internal::optional_data_base.324" }
%"class.absl::optional_internal::optional_data_base.324" = type { %"class.absl::optional_internal::optional_data_dtor_base.325" }
%"class.absl::optional_internal::optional_data_dtor_base.325" = type { i8, %union.anon.326 }
%union.anon.326 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"struct.std::__1::pair.332" }
%"struct.std::__1::pair.332" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.39" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.39", %"struct.std::__1::array.39", i8 }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { i32*, i32*, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.333" = type { %"class.absl::container_internal::raw_hash_map.334" }
%"class.absl::container_internal::raw_hash_map.334" = type { %"class.absl::container_internal::raw_hash_set.335" }
%"class.absl::container_internal::raw_hash_set.335" = type { i8*, %"union.absl::container_internal::map_slot_type.336"*, i64, i64, %"class.absl::container_internal::CompressedTuple.337" }
%"union.absl::container_internal::map_slot_type.336" = type opaque
%"class.absl::container_internal::CompressedTuple.337" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.338" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.338" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.348" = type { %"class.absl::container_internal::raw_hash_map.349" }
%"class.absl::container_internal::raw_hash_map.349" = type { %"class.absl::container_internal::raw_hash_set.350" }
%"class.absl::container_internal::raw_hash_set.350" = type { i8*, %"union.absl::container_internal::map_slot_type.351"*, i64, i64, %"class.absl::container_internal::CompressedTuple.352" }
%"union.absl::container_internal::map_slot_type.351" = type opaque
%"class.absl::container_internal::CompressedTuple.352" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.353" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.353" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.357" = type { %"class.absl::container_internal::raw_hash_map.358" }
%"class.absl::container_internal::raw_hash_map.358" = type { %"class.absl::container_internal::raw_hash_set.359" }
%"class.absl::container_internal::raw_hash_set.359" = type { i8*, %"union.absl::container_internal::map_slot_type.360"*, i64, i64, %"class.absl::container_internal::CompressedTuple.361" }
%"union.absl::container_internal::map_slot_type.360" = type opaque
%"class.absl::container_internal::CompressedTuple.361" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.362" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.362" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.367" }
%"class.absl::container_internal::CompressedTuple.367" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.368" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.370", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.386" }
%"class.quiche::QuicheCircularDeque.370" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.386" = type { %"class.absl::container_internal::raw_hash_map.387" }
%"class.absl::container_internal::raw_hash_map.387" = type { %"class.absl::container_internal::raw_hash_set.388" }
%"class.absl::container_internal::raw_hash_set.388" = type { i8*, %"union.absl::container_internal::map_slot_type.389"*, i64, i64, %"class.absl::container_internal::CompressedTuple.390" }
%"union.absl::container_internal::map_slot_type.389" = type opaque
%"class.absl::container_internal::CompressedTuple.390" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.391" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.391" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.395", %"class.std::__1::unique_ptr.398" }
%"class.quiche::QuicheCircularDeque.395" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.379" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.371" }
%"class.absl::container_internal::raw_hash_map.371" = type { %"class.absl::container_internal::raw_hash_set.372" }
%"class.absl::container_internal::raw_hash_set.372" = type { i8*, %"struct.std::__1::pair.373"**, i64, i64, %"class.absl::container_internal::CompressedTuple.374" }
%"struct.std::__1::pair.373" = type opaque
%"class.absl::container_internal::CompressedTuple.374" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.375" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.375" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::list.379" = type { %"class.std::__1::__list_imp.380" }
%"class.std::__1::__list_imp.380" = type { %"struct.std::__1::__list_node_base.381", %"class.std::__1::__compressed_pair.382" }
%"struct.std::__1::__list_node_base.381" = type { %"struct.std::__1::__list_node_base.381"*, %"struct.std::__1::__list_node_base.381"* }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.178", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.178" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { %"class.std::__1::basic_string" }
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.409 }
%union.anon.409 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.410" = type { %"class.absl::optional_internal::optional_data.411" }
%"class.absl::optional_internal::optional_data.411" = type { %"class.absl::optional_internal::optional_data_base.412" }
%"class.absl::optional_internal::optional_data_base.412" = type { %"class.absl::optional_internal::optional_data_dtor_base.413" }
%"class.absl::optional_internal::optional_data_dtor_base.413" = type { i8, %union.anon.414 }
%union.anon.414 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.417", %"class.absl::optional.149" }
%"class.quiche::QuicheCircularDeque.417" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QpackDecodedHeadersAccumulator::Visitor" = type { i32 (...)** }
%"class.quic::QuicSpdySession" = type { %"class.quic::QuicSession.base", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate", %"class.std::__1::unique_ptr.420", %"class.std::__1::unique_ptr.489", %"class.quic::QuicHeadersStream"*, %"class.quic::QuicSendControlStream"*, %"class.quic::QuicReceiveControlStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackSendStream"*, %"class.quic::QpackSendStream"*, %"struct.quic::SettingsFrame", i64, i64, i64, i64, i32, i32, i64, i8, [7 x i8], %"class.spdy::SpdyFramer", %"class.http2::Http2DecoderAdapter", %"class.std::__1::unique_ptr.602", %"class.absl::optional.149", %"class.quic::Http3DebugVisitor"*, %"class.absl::flat_hash_map.608", i32, %"class.absl::optional.149", %"class.absl::optional.149", i64, i8, i8, %"class.absl::flat_hash_map.617", i8, %"class.absl::flat_hash_set", %"class.std::__1::list.626" }
%"class.quic::QuicSession.base" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.302", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.348", %"class.absl::flat_hash_map.357", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.175", %"class.std::__1::vector", %"class.absl::optional.404", i8, i8, i8, i8 }>
%"class.quic::QpackEncoder::DecoderStreamErrorDelegate" = type { i32 (...)** }
%"class.quic::QpackDecoder::EncoderStreamErrorDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.quic::QpackEncoder"* }
%"class.quic::QpackEncoder" = type <{ %"class.quic::QpackDecoderStreamReceiver::Delegate", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackDecoderStreamReceiver", %"class.quic::QpackEncoderStreamSender", %"class.quic::QpackEncoderHeaderTable", i64, %"class.quic::QpackBlockingManager", i32, [4 x i8] }>
%"class.quic::QpackDecoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackDecoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector.423"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.423" = type opaque
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.424" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.424" = type { %"class.std::__1::__vector_base.425" }
%"class.std::__1::__vector_base.425" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.426" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackEncoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.quic::QpackEncoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.absl::flat_hash_map.443"*, %"class.absl::flat_hash_map.458"*, %"class.absl::flat_hash_map.443", %"class.absl::flat_hash_map.458" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.std::__1::deque.431", i64, i64, i64, i64, i64, i8 }>
%"class.std::__1::deque.431" = type { %"class.std::__1::__deque_base.432" }
%"class.std::__1::__deque_base.432" = type { %"struct.std::__1::__split_buffer.433", i64, %"class.std::__1::__compressed_pair.439" }
%"struct.std::__1::__split_buffer.433" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.434" }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.spdy::HpackEntry"** }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.absl::flat_hash_map.443" = type { %"class.absl::container_internal::raw_hash_map.444" }
%"class.absl::container_internal::raw_hash_map.444" = type { %"class.absl::container_internal::raw_hash_set.445" }
%"class.absl::container_internal::raw_hash_set.445" = type { i8*, %"union.absl::container_internal::map_slot_type.446"*, i64, i64, %"class.absl::container_internal::CompressedTuple.447" }
%"union.absl::container_internal::map_slot_type.446" = type opaque
%"class.absl::container_internal::CompressedTuple.447" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.448" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.448" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.458" = type { %"class.absl::container_internal::raw_hash_map.459" }
%"class.absl::container_internal::raw_hash_map.459" = type { %"class.absl::container_internal::raw_hash_set.460" }
%"class.absl::container_internal::raw_hash_set.460" = type { i8*, %"union.absl::container_internal::map_slot_type.461"*, i64, i64, %"class.absl::container_internal::CompressedTuple.462" }
%"union.absl::container_internal::map_slot_type.461" = type opaque
%"class.absl::container_internal::CompressedTuple.462" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.463" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.463" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map.469", %"class.std::__1::map", i64 }
%"class.absl::flat_hash_map.469" = type { %"class.absl::container_internal::raw_hash_map.470" }
%"class.absl::container_internal::raw_hash_map.470" = type { %"class.absl::container_internal::raw_hash_set.471" }
%"class.absl::container_internal::raw_hash_set.471" = type { i8*, %"union.absl::container_internal::map_slot_type.472"*, i64, i64, %"class.absl::container_internal::CompressedTuple.473" }
%"union.absl::container_internal::map_slot_type.472" = type opaque
%"class.absl::container_internal::CompressedTuple.473" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.474" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.474" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.478", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.quic::QpackDecoder"* }
%"class.quic::QpackDecoder" = type { %"class.quic::QpackEncoderStreamReceiver::Delegate", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer", %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate"*, %"class.quic::QpackEncoderStreamReceiver", %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderHeaderTable", %"class.std::__1::set", i64, i64 }
%"class.quic::QpackEncoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor" = type { i32 (...)** }
%"class.quic::QpackEncoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackEncoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackDecoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base.494", %"class.std::__1::vector.495"*, %"class.std::__1::multimap" }
%"class.quic::QpackHeaderTableBase.base.494" = type <{ i32 (...)**, %"class.quiche::QuicheCircularDeque.493", i64, i64, i64, i64, i64, i8 }>
%"class.quiche::QuicheCircularDeque.493" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" = type { %"class.spdy::HpackEntry"*, i64 }
%"class.std::__1::vector.495" = type opaque
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.504" }
%"class.std::__1::__tree.504" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.505", %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.quic::QuicHeadersStream" = type { %"class.quic::QuicStream.base", %"class.quic::QuicSpdySession"*, %"class.quiche::QuicheCircularDeque.515" }
%"class.quiche::QuicheCircularDeque.515" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" = type { %"struct.quic::QuicHeadersStream::CompressedHeaderInfo"*, i64 }
%"struct.quic::QuicHeadersStream::CompressedHeaderInfo" = type { i64, i64, i64, %"class.quic::QuicReferenceCountedPointer" }
%"class.quic::QuicSendControlStream" = type { %"class.quic::QuicStream.base", i8, %"struct.quic::SettingsFrame", %"class.quic::QuicSpdySession"* }
%"class.quic::QuicReceiveControlStream" = type { %"class.quic::QuicStream.base", %"class.quic::HttpDecoder::Visitor", i8, [7 x i8], %"class.quic::HttpDecoder", %"class.quic::QuicSpdySession"* }
%"class.quic::HttpDecoder::Visitor" = type { i32 (...)** }
%"class.quic::QpackReceiveStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackStreamReceiver"* }
%"class.quic::QpackSendStream" = type <{ %"class.quic::QuicStream.base", [7 x i8], %"class.quic::QpackStreamSenderDelegate", i64, i8, [7 x i8] }>
%"struct.quic::SettingsFrame" = type { %"class.absl::flat_hash_map.520" }
%"class.absl::flat_hash_map.520" = type { %"class.absl::container_internal::raw_hash_map.521" }
%"class.absl::container_internal::raw_hash_map.521" = type { %"class.absl::container_internal::raw_hash_set.522" }
%"class.absl::container_internal::raw_hash_set.522" = type { i8*, %"union.absl::container_internal::map_slot_type.523"*, i64, i64, %"class.absl::container_internal::CompressedTuple.524" }
%"union.absl::container_internal::map_slot_type.523" = type { %"struct.std::__1::pair.707" }
%"struct.std::__1::pair.707" = type { i64, i64 }
%"class.absl::container_internal::CompressedTuple.524" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.525" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.525" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.spdy::SpdyFramer" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.535", %"class.spdy::SpdyFramerDebugVisitorInterface"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.spdy::HpackEncoder"* }
%"class.spdy::HpackEncoder" = type <{ %"class.spdy::HpackHeaderTable", %"class.spdy::HpackOutputStream", i64, %"class.std::__1::function.538", %"class.std::__1::function.544", i8, i8, [6 x i8] }>
%"class.spdy::HpackHeaderTable" = type { %"class.std::__1::vector.495"*, %"class.std::__1::deque.431", %"class.absl::flat_hash_map.443"*, %"class.absl::flat_hash_map.458"*, %"class.absl::flat_hash_map.443", %"class.absl::flat_hash_map.458", i64, i64, i64, i64 }
%"class.spdy::HpackOutputStream" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::function.538" = type { %"class.std::__1::__function::__policy_func.542" }
%"class.std::__1::__function::__policy_func.542" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.543", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.543" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.std::__1::function.544" = type { %"class.std::__1::__function::__policy_func.548" }
%"class.std::__1::__function::__policy_func.548" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.549", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.549" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.spdy::SpdyFramerDebugVisitorInterface" = type { i32 (...)** }
%"class.http2::Http2DecoderAdapter" = type { %"class.http2::Http2FrameDecoderListener", %"struct.http2::Http2FrameHeader", %"struct.http2::Http2FrameHeader", %"class.absl::optional.149", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.http2::Http2FrameDecoderNoOpListener", %"class.spdy::SpdyFramerVisitorInterface"*, %"class.spdy::SpdyFramerDebugVisitorInterface"*, %"class.spdy::ExtensionVisitorInterface"*, %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.595", i8, i32, i32, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.http2::Http2FrameDecoderListener" = type { i32 (...)** }
%"struct.http2::Http2FrameHeader" = type { i32, i32, i8, i32 }
%"class.http2::Http2FrameDecoderNoOpListener" = type { %"class.http2::Http2FrameDecoderListener" }
%"class.spdy::SpdyFramerVisitorInterface" = type { i32 (...)** }
%"class.spdy::ExtensionVisitorInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.spdy::HpackDecoderAdapter"* }
%"class.spdy::HpackDecoderAdapter" = type { %"class.spdy::HpackDecoderAdapter::ListenerAdapter", %"class.http2::HpackDecoder", i64, i64, i8, i32, %"class.std::__1::basic_string" }
%"class.spdy::HpackDecoderAdapter::ListenerAdapter" = type { %"class.http2::HpackDecoderListener", %"class.spdy::Http2HeaderBlock", %"class.spdy::SpdyHeadersHandlerInterface"*, i64, i64 }
%"class.http2::HpackDecoderListener" = type { i32 (...)** }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.http2::HpackDecoder" = type { i32 (...)**, %"class.http2::HpackDecoderState", %"class.http2::HpackWholeEntryBuffer", %"class.http2::HpackBlockDecoder", i32, %"class.std::__1::basic_string" }
%"class.http2::HpackDecoderState" = type { %"class.http2::HpackWholeEntryListener", %"class.http2::HpackDecoderTables", %"class.http2::HpackDecoderListener"*, i32, i32, i8, i8, i8, i32, %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryListener" = type { i32 (...)** }
%"class.http2::HpackDecoderTables" = type { %"class.http2::HpackDecoderStaticTable", %"class.http2::HpackDecoderDynamicTable" }
%"class.http2::HpackDecoderStaticTable" = type { %"class.std::__1::vector.588"* }
%"class.std::__1::vector.588" = type opaque
%"class.http2::HpackDecoderDynamicTable" = type { %"class.quiche::QuicheCircularDeque.589", i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.589" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" = type { %"struct.http2::HpackStringPair"*, i64 }
%"struct.http2::HpackStringPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryBuffer" = type <{ %"class.http2::HpackEntryDecoderListener", %"class.http2::HpackWholeEntryListener"*, %"class.http2::HpackDecoderStringBuffer", %"class.http2::HpackDecoderStringBuffer", i64, i64, i32, i8, [3 x i8] }>
%"class.http2::HpackEntryDecoderListener" = type { i32 (...)** }
%"class.http2::HpackDecoderStringBuffer" = type <{ %"class.std::__1::basic_string", %"class.absl::string_view", %"class.http2::HpackHuffmanDecoder", i64, i8, i8, i8, [5 x i8] }>
%"class.http2::HpackBlockDecoder" = type <{ %"class.http2::HpackEntryDecoder", %"class.http2::HpackEntryDecoderListener"*, i8, [7 x i8] }>
%"class.http2::HpackEntryDecoder" = type { %"class.http2::HpackEntryTypeDecoder", %"class.http2::HpackStringDecoder", i32, i32 }
%"class.http2::HpackEntryTypeDecoder" = type { %"class.http2::HpackVarintDecoder", i32, [4 x i8] }
%"class.http2::HpackStringDecoder" = type <{ %"class.http2::HpackVarintDecoder", i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.http2::Http2FrameDecoder"* }
%"class.http2::Http2FrameDecoder" = type { %"class.http2::FrameDecoderState", %union.anon.598, i32, i64, %"class.http2::Http2FrameDecoderNoOpListener" }
%"class.http2::FrameDecoderState" = type { %"class.http2::Http2FrameDecoderListener"*, %"struct.http2::Http2FrameHeader", i32, i32, %"class.http2::Http2StructureDecoder" }
%"class.http2::Http2StructureDecoder" = type <{ i32, [9 x i8], [3 x i8] }>
%union.anon.598 = type { %"class.http2::HeadersPayloadDecoder" }
%"class.http2::HeadersPayloadDecoder" = type { i32, %"struct.http2::Http2PriorityFields" }
%"struct.http2::Http2PriorityFields" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.quic::QuicSpdySession::SpdyFramerVisitor"* }
%"class.quic::QuicSpdySession::SpdyFramerVisitor" = type opaque
%"class.quic::Http3DebugVisitor" = type { i32 (...)** }
%"class.absl::flat_hash_map.608" = type { %"class.absl::container_internal::raw_hash_map.609" }
%"class.absl::container_internal::raw_hash_map.609" = type { %"class.absl::container_internal::raw_hash_set.610" }
%"class.absl::container_internal::raw_hash_set.610" = type { i8*, %"union.absl::container_internal::map_slot_type.611"*, i64, i64, %"class.absl::container_internal::CompressedTuple.612" }
%"union.absl::container_internal::map_slot_type.611" = type opaque
%"class.absl::container_internal::CompressedTuple.612" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.613" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.613" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.absl::flat_hash_map.617" = type { %"class.absl::container_internal::raw_hash_map.618" }
%"class.absl::container_internal::raw_hash_map.618" = type { %"class.absl::container_internal::raw_hash_set.619" }
%"class.absl::container_internal::raw_hash_set.619" = type { i8*, %"union.absl::container_internal::map_slot_type.620"*, i64, i64, %"class.absl::container_internal::CompressedTuple.621" }
%"union.absl::container_internal::map_slot_type.620" = type opaque
%"class.absl::container_internal::CompressedTuple.621" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.622" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.622" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::list.626" = type { %"class.std::__1::__list_imp.627" }
%"class.std::__1::__list_imp.627" = type { %"struct.std::__1::__list_node_base.628", %"class.std::__1::__compressed_pair.629" }
%"struct.std::__1::__list_node_base.628" = type { %"struct.std::__1::__list_node_base.628"*, %"struct.std::__1::__list_node_base.628"* }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.quic::QuicSpdyStream::Visitor" = type { i32 (...)** }
%"class.quic::QuicHeaderList" = type { %"class.spdy::SpdyHeadersHandlerInterface", %"class.quiche::QuicheCircularDeque.633", i64, i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.633" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" = type { %"struct.std::__1::pair.636"*, i64 }
%"struct.std::__1::pair.636" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap.556", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap.556" = type { %"class.absl::node_hash_map.557", %"class.std::__1::list.568" }
%"class.absl::node_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"struct.std::__1::pair.560"**, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"struct.std::__1::pair.560" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.570"* }
%"struct.std::__1::__list_node_base.570" = type { %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"* }
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.5" }
%"class.std::__1::list.568" = type { %"class.std::__1::__list_imp.569" }
%"class.std::__1::__list_imp.569" = type { %"struct.std::__1::__list_node_base.570", %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.575", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.575" = type { %"class.std::__1::__vector_base.576" }
%"class.std::__1::__vector_base.576" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.583" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr.577", i64, i64 }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { i8* }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.quic::QpackDecodedHeadersAccumulator"* }
%"class.quic::QpackDecodedHeadersAccumulator" = type <{ %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface", %"class.std::__1::unique_ptr.640", %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64, i64, %"class.quic::QuicHeaderList", i64, i64, i8, i8, i8, [5 x i8] }>
%"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.quic::QpackProgressiveDecoder"* }
%"class.quic::QpackProgressiveDecoder" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackDecoderHeaderTable::Observer", i32, [4 x i8], %"class.std::__1::unique_ptr.643", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer"*, %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor"*, %"class.quic::QpackDecoderHeaderTable"*, %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface"*, i64, i64, i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.quic::QpackDecoderHeaderTable::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.quic::QpackInstructionDecoder"* }
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* }
%"class.quic::QuicSpdyStream::HttpDecoderVisitor" = type { %"class.quic::HttpDecoder::Visitor", %"class.quic::QuicSpdyStream"* }
%"class.quic::HttpDecoder" = type <{ %"class.quic::HttpDecoder::Visitor"*, i8, [3 x i8], i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array.534", %"struct.std::__1::array.534", %"struct.std::__1::array.534", i8, i8, [6 x i8] }>
%"struct.std::__1::array.534" = type { [8 x i8] }
%"class.quic::QuicSpdyStreamBodyManager" = type { %"class.quiche::QuicheCircularDeque.661", i64 }
%"class.quiche::QuicheCircularDeque.661" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" = type { %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, i64 }
%"struct.quic::QuicSpdyStreamBodyManager::Fragment" = type { %"class.absl::string_view", i64 }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.quic::QuicAckListenerInterface"* }
%"class.quic::QuicAckListenerInterface" = type { %"class.quic::QuicReferenceCounted.base", [4 x i8] }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.519" }>
%"class.base::RefCountedThreadSafe.519" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.2" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.2" = type { %"class.absl::container_internal::btree_node"* }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.quic::WebTransportHttp3"* }
%"class.quic::WebTransportHttp3" = type { %"class.quic::WebTransportSession", %"class.quic::QuicSpdySession::Http3DatagramVisitor", %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdyStream"*, i64, i64, i8, %"class.std::__1::unique_ptr.667", %"class.absl::flat_hash_set", %"class.quiche::QuicheCircularDeque.673", %"class.quiche::QuicheCircularDeque.673" }
%"class.quic::WebTransportSession" = type { i32 (...)** }
%"class.quic::QuicSpdySession::Http3DatagramVisitor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.quic::WebTransportVisitor"* }
%"class.quic::WebTransportVisitor" = type { i32 (...)** }
%"class.quiche::QuicheCircularDeque.673" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<unsigned int, 3, std::__1::allocator<unsigned int> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<unsigned int, 3, std::__1::allocator<unsigned int> >::AllocatorAndData" = type { i32*, i64 }
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"struct.quic::QuicSpdyStream::WebTransportDataStream"* }
%"struct.quic::QuicSpdyStream::WebTransportDataStream" = type { i64, %"class.quic::WebTransportStreamAdapter" }
%"class.quic::WebTransportStreamAdapter" = type <{ %"class.quic::WebTransportStream", %"class.quic::QuicSession"*, %"class.quic::QuicStream"*, %"class.quic::QuicStreamSequencer"*, %"class.std::__1::unique_ptr.680", i8, [7 x i8] }>
%"class.quic::WebTransportStream" = type { i32 (...)** }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.quic::WebTransportStreamVisitor"* }
%"class.quic::WebTransportStreamVisitor" = type { i32 (...)** }
%"class.quic::PendingStream" = type { %"class.quic::QuicStreamSequencer::StreamInterface", i32, %"struct.quic::ParsedQuicVersion", %"class.quic::StreamDelegateInterface"*, i64, i8, %"class.quic::QuicFlowController"*, %"class.quic::QuicFlowController", %"class.quic::QuicStreamSequencer" }
%"class.std::__1::allocator" = type { i8 }
%"class.quic::QuicReferenceCountedImpl" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.519", [4 x i8] }>
%"class.quic::QuicInterval" = type { i64, i64 }
%"class.quic::QuicConnection::ScopedPacketFlusher" = type <{ %"class.quic::QuicConnection"*, i8, i8, [6 x i8] }>
%"class.quic::QuicDataWriter" = type { %"class.quiche::QuicheDataWriter.base", [4 x i8] }
%"class.quiche::QuicheDataWriter.base" = type <{ i8*, i64, i64, i32 }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.quiche::QuicheDataWriter" = type <{ i8*, i64, i64, i32, [4 x i8] }>
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.spdy::Http2HeaderBlock::iterator" = type { %"class.std::__1::__list_const_iterator" }
%"class.std::__1::__list_const_iterator" = type { %"struct.std::__1::__list_node_base.570"* }
%"class.spdy::Http2HeaderBlock::ValueProxy" = type <{ %"class.spdy::Http2HeaderBlock"*, %"class.std::__1::__list_iterator", %"class.absl::string_view", i64*, i8, [7 x i8] }>
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base.570", %"struct.std::__1::pair.726" }
%"struct.std::__1::pair.726" = type { %"class.absl::string_view", %"class.spdy::Http2HeaderBlock::HeaderValue" }
%"class.spdy::Http2HeaderBlock::HeaderValue" = type { %"class.spdy::SpdyHeaderStorage"*, %"class.std::__1::vector.727", %"struct.std::__1::pair.689", i64, i64 }
%"class.std::__1::vector.727" = type { %"class.std::__1::__vector_base.728" }
%"class.std::__1::__vector_base.728" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.absl::string_view"* }
%"struct.std::__1::pair.689" = type { %"class.absl::string_view", %"class.absl::string_view" }
%"struct.std::__1::pair.690" = type { i8*, %"class.std::__1::basic_string" }
%struct.iovec = type { i8*, i64 }
%"class.quic::QuicMemSliceSpanImpl" = type { %class.scoped_refptr*, i64*, i64 }
%"class.quic::QuicMemSliceStorage" = type { %"class.quic::QuicMemSliceStorageImpl" }
%"class.quic::QuicMemSliceStorageImpl" = type { %"class.std::__1::vector.691", %"class.std::__1::vector.698" }
%"class.std::__1::vector.691" = type { %"class.std::__1::__vector_base.692" }
%"class.std::__1::__vector_base.692" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %class.scoped_refptr* }
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { i64*, i64*, %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { i64* }
%"class.quic::QuicMemSliceSpan" = type { %"class.quic::QuicMemSliceSpanImpl" }
%"struct.quic::PriorityUpdateFrame" = type { i8, i64, %"class.std::__1::basic_string" }
%"struct.quic::QuicRstStreamFrame" = type { i32, i32, i32, i64, i64 }
%"struct.std::__1::pair.750" = type { i64, %"struct.absl::container_internal::btree_iterator.746" }
%"struct.absl::container_internal::btree_iterator.746" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"struct.absl::container_internal::btree_iterator.705" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"struct.std::__1::pair.748" = type { %"struct.absl::container_internal::btree_iterator.746", i8, [7 x i8] }
%"struct.quic::QuicWindowUpdateFrame" = type { i32, i32, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.quic::CancelPushFrame" = type { i64 }
%"struct.quic::MaxPushIdFrame" = type { i64 }
%"struct.quic::GoAwayFrame" = type { i64 }
%"struct.quic::AcceptChFrame" = type { %"class.std::__1::vector.739" }
%"class.std::__1::vector.739" = type { %"class.std::__1::__vector_base.740" }
%"class.std::__1::__vector_base.740" = type { %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"*, %"class.std::__1::__compressed_pair.741" }
%"struct.spdy::AcceptChOriginValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"struct.spdy::AcceptChOriginValuePair"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }

$_ZN4quic15QuicIntervalSetImE12IntersectionERKS1_ = comdat any

$_ZNK4quic10QuicStream2idEv = comdat any

$_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE = comdat any

$_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE5eraseIjEEmRKj = comdat any

$_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_14const_iteratorERSH_ = comdat any

$_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitorD0Ev = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor7OnErrorEPNS_11HttpDecoderE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnCancelPushFrameERKNS_15CancelPushFrameE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor16OnMaxPushIdFrameERKNS_14MaxPushIdFrameE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor13OnGoAwayFrameERKNS_11GoAwayFrameE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor20OnSettingsFrameStartEm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor15OnSettingsFrameERKNS_13SettingsFrameE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor16OnDataFrameStartEmm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor18OnDataFramePayloadEN4absl11string_viewE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor14OnDataFrameEndEv = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor19OnHeadersFrameStartEmm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnHeadersFramePayloadEN4absl11string_viewE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnHeadersFrameEndEv = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor23OnPushPromiseFrameStartEm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor24OnPushPromiseFramePushIdEmmm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor25OnPushPromiseFramePayloadEN4absl11string_viewE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnPushPromiseFrameEndEv = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor26OnPriorityUpdateFrameStartEm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnPriorityUpdateFrameERKNS_19PriorityUpdateFrameE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor20OnAcceptChFrameStartEm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor15OnAcceptChFrameERKNS_13AcceptChFrameE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor29OnWebTransportStreamFrameTypeEmm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor19OnUnknownFrameStartEmmm = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnUnknownFramePayloadEN4absl11string_viewE = comdat any

$_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnUnknownFrameEndEv = comdat any

$_ZN4quic11HttpDecoder7VisitorD2Ev = comdat any

$_ZN4quic15QuicIntervalSetImE3AddERKNS_12QuicIntervalImEE = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE11erase_rangeENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESJ_ = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE22rebalance_after_deleteENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5eraseENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE22try_merge_or_rebalanceEPNS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE = comdat any

$_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE23rebalance_right_to_leftEiPSD_PSB_ = comdat any

$_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE23rebalance_left_to_rightEiPSD_PSB_ = comdat any

$_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5mergeEPSD_PSB_ = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE13insert_uniqueIS5_JRKS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEERKT_DpOT0_ = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJRKS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESM_DpOT_ = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18rebalance_or_splitEPNS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE = comdat any

$_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5splitEiPSD_PSB_ = comdat any

$_ZNK4quic15QuicIntervalSetImE16SpanningIntervalEv = comdat any

$_ZN4quic15QuicIntervalSetImE10DifferenceERKS1_ = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18insert_hint_uniqueIS5_JRKS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEESN_RKT_DpOT0_ = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18insert_hint_uniqueIS5_JS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEESL_RKT_DpOT0_ = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESK_DpOT_ = comdat any

$_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE13insert_uniqueIS5_JS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEERKT_DpOT0_ = comdat any

$_ZNK4quic15QuicIntervalSetImE25FindIntersectionCandidateERKNS_12QuicIntervalImEE = comdat any

$_ZN4quic15QuicIntervalSetImE28FindNextIntersectingPairImplIS1_ZNS1_37FindNextIntersectingPairAndEraseHolesERKS1_PN4absl18container_internal14btree_iteratorIKNS6_10btree_nodeINS6_10set_paramsINS_12QuicIntervalImEENS1_12IntervalLessENSt3__19allocatorISB_EELi256ELb0EEEEERKSB_PSJ_EESN_EUlPS1_SM_SM_E_EEbPT_S4_SN_SN_T0_ = comdat any

$_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node = comdat any

$_ZTVN4quic14QuicSpdyStream18HttpDecoderVisitorE = comdat any

@_ZTVN4quic14QuicSpdyStreamE = hidden unnamed_addr constant { [46 x i8*], [6 x i8*] } { [46 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStreamD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStreamD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStream15OnDataAvailableEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream9OnFinReadEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64)* @_ZN4quic10QuicStream16AddBytesConsumedEm to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, i32)* @_ZN4quic14QuicSpdyStream5ResetENS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)* @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, i64, %"class.std::__1::basic_string"*)* @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream2idEv to i8*), i8* bitcast (void (%"struct.quic::ParsedQuicVersion"*, %"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream7versionEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)* @_ZN4quic10QuicStream13OnStreamFrameERKNS_15QuicStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStream10OnCanWriteEv to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZN4quic14QuicSpdyStream13OnStreamResetERKNS_18QuicRstStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i32, i32)* @_ZN4quic10QuicStream18OnConnectionClosedENS_13QuicErrorCodeENS_21ConnectionCloseSourceE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStream28MaybeSendPriorityUpdateFrameEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, %"struct.quic::QuicWindowUpdateFrame"*)* @_ZN4quic10QuicStream19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream11StopReadingEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream"*, i64, i64, i1, i64, i64, i64*)* @_ZN4quic14QuicSpdyStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, i64, i64, i1)* @_ZN4quic14QuicSpdyStream26OnStreamFrameRetransmittedEmmb to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, i1)* @_ZN4quic10QuicStream17OnStreamFrameLostEmmb to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*, i64, i64, i1, i8)* @_ZN4quic10QuicStream20RetransmitStreamDataEmmbNS_16TransmissionTypeE to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*)* @_ZNK4quic10QuicStream24HasPendingRetransmissionEv to i8*), i8* bitcast (i1 (%"class.quic::QuicStream"*, i32)* @_ZN4quic10QuicStream13OnStopSendingENS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64, i64, %"class.quic::QuicReferenceCountedPointer"*)* @_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStream7OnCloseEv to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStream17OnCanWriteNewDataEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*, i64)* @_ZN4quic10QuicStream20OnStreamDataConsumedEm to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream26WritePendingRetransmissionEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream16OnDeadlinePassedEv to i8*), i8* bitcast (void (%"class.quic::QuicStream"*)* @_ZN4quic10QuicStream14CloseWriteSideEv to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, %"class.spdy::StreamPrecedence"*)* @_ZN4quic14QuicSpdyStream23OnStreamHeadersPriorityERKN4spdy16StreamPrecedenceIjEE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)* @_ZN4quic14QuicSpdyStream18OnStreamHeaderListEbmRKNS_14QuicHeaderListE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, i32, i64, %"class.quic::QuicHeaderList"*)* @_ZN4quic14QuicSpdyStream19OnPromiseHeaderListEjmRKNS_14QuicHeaderListE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)* @_ZN4quic14QuicSpdyStream12WriteHeadersEN4spdy16Http2HeaderBlockEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE to i8*), i8* bitcast (i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, %"class.quic::QuicReferenceCountedPointer"*)* @_ZN4quic14QuicSpdyStream13WriteTrailersEN4spdy16Http2HeaderBlockENS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE to i8*), i8* bitcast (i64 (%"class.quic::QuicSpdyStream"*, %struct.iovec*, i64)* @_ZN4quic14QuicSpdyStream5ReadvEPK5iovecm to i8*), i8* bitcast (i32 (%"class.quic::QuicSpdyStream"*, %struct.iovec*, i64)* @_ZNK4quic14QuicSpdyStream18GetReadableRegionsEP5iovecm to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, %"class.quic::QuicHeaderList"*, i1)* @_ZN4quic14QuicSpdyStream16OnHeadersDecodedENS_14QuicHeaderListEb to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, i8*, i64)* @_ZN4quic14QuicSpdyStream21OnHeaderDecodingErrorEN4absl11string_viewE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStream17OnHeadersTooLargeEv to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)* @_ZN4quic14QuicSpdyStream24OnInitialHeadersCompleteEbmRKNS_14QuicHeaderListE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)* @_ZN4quic14QuicSpdyStream25OnTrailingHeadersCompleteEbmRKNS_14QuicHeaderListE to i8*), i8* bitcast (i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)* @_ZN4quic14QuicSpdyStream16WriteHeadersImplEN4spdy16Http2HeaderBlockEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE to i8*)], [6 x i8*] [i8* inttoptr (i64 -560 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZThn560_N4quic14QuicSpdyStreamD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*)* @_ZThn560_N4quic14QuicSpdyStreamD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, %"class.quic::QuicHeaderList"*, i1)* @_ZThn560_N4quic14QuicSpdyStream16OnHeadersDecodedENS_14QuicHeaderListEb to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream"*, i8*, i64)* @_ZThn560_N4quic14QuicSpdyStream21OnHeaderDecodingErrorEN4absl11string_viewE to i8*)] }, align 8
@.str = private unnamed_addr constant [16 x i8] c"writing headers\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"../../net/third_party/quiche/src/quic/core/http/quic_spdy_stream.cc\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"Server: \00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Client: \00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Stream \00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c" is writing type as server push\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"writing body data\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"Trailers cannot be sent after a FIN, on stream \00", align 1
@_ZN4quic21kFinalOffsetHeaderKeyE = external local_unnamed_addr constant i8*, align 8
@FLAGS_quic_send_buffer_max_data_slice_size = external local_unnamed_addr global i64, align 8
@_ZN4quic20kUserAgentHeaderNameE = external local_unnamed_addr global %"class.absl::string_view", align 8
@.str.8 = private unnamed_addr constant [16 x i8] c"Error decoding \00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"trailers\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"headers\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c" on stream \00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"u=\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"Promise headers received by server\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"Trailers after fin\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"Fin missing from trailers\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"Trailers are malformed\00", align 1
@FLAGS_quic_reloadable_flag_quic_abort_qpack_on_stream_reset = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_fix_on_stream_reset = external local_unnamed_addr global i8, align 1
@_ZN4spdy18kHttp2StatusHeaderE = external local_unnamed_addr constant i8*, align 8
@.str.18 = private unnamed_addr constant [32 x i8] c"Unexpected DATA frame received.\00", align 1
@.str.19 = private unnamed_addr constant [47 x i8] c"HEADERS frame received after trailing HEADERS.\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c":method\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c":protocol\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"datagram-flow-id\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"CONNECT\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"webtransport\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"Attempted to \00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c" on WebTransport data stream \00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c" associated with session \00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c" on WebTransport data stream\00", align 1
@.str.29 = private unnamed_addr constant [99 x i8] c"Attempted to send a WEBTRANSPORT_STREAM frame when other data has already been sent on the stream.\00", align 1
@.str.30 = private unnamed_addr constant [49 x i8] c"Failed to serialize a WEBTRANSPORT_STREAM frame.\00", align 1
@_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node = linkonce_odr hidden constant { %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 } { %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), i8 0, i8 0, i8 0, i8 1 }, comdat, align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN4quic14QuicSpdyStream18HttpDecoderVisitorE = linkonce_odr hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::HttpDecoder::Visitor"*)* @_ZN4quic11HttpDecoder7VisitorD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitorD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"class.quic::HttpDecoder"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor7OnErrorEPNS_11HttpDecoderE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::CancelPushFrame"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnCancelPushFrameERKNS_15CancelPushFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::MaxPushIdFrame"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor16OnMaxPushIdFrameERKNS_14MaxPushIdFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::GoAwayFrame"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor13OnGoAwayFrameERKNS_11GoAwayFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor20OnSettingsFrameStartEm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::SettingsFrame"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor15OnSettingsFrameERKNS_13SettingsFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor16OnDataFrameStartEmm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i8*, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor18OnDataFramePayloadEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor14OnDataFrameEndEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor19OnHeadersFrameStartEmm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i8*, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnHeadersFramePayloadEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnHeadersFrameEndEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor23OnPushPromiseFrameStartEm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor24OnPushPromiseFramePushIdEmmm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i8*, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor25OnPushPromiseFramePayloadEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnPushPromiseFrameEndEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor26OnPriorityUpdateFrameStartEm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::PriorityUpdateFrame"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnPriorityUpdateFrameERKNS_19PriorityUpdateFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor20OnAcceptChFrameStartEm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::AcceptChFrame"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor15OnAcceptChFrameERKNS_13AcceptChFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor29OnWebTransportStreamFrameTypeEmm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor19OnUnknownFrameStartEmmm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i8*, i64)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnUnknownFramePayloadEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)* @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnUnknownFrameEndEv to i8*)] }, comdat, align 8
@.str.33 = private unnamed_addr constant [12 x i8] c"Cancel Push\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c" frame received on data stream\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"Max Push Id\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"Goaway\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"Settings\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"Headers\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"Push Promise\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"Priority update\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"ACCEPT_CH\00", align 1
@_ZTVN4quic25WebTransportStreamAdapterE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.42 = private unnamed_addr constant [63 x i8] c"../../net/third_party/quiche/src/quic/core/quic_interval_set.h\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"x != nullptr\00", align 1

@_ZN4quic14QuicSpdyStreamD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicSpdyStream"*), void (%"class.quic::QuicSpdyStream"*)* @_ZN4quic14QuicSpdyStreamD2Ev
@_ZN4quic14QuicSpdyStream22WebTransportDataStreamC1EPS0_m = hidden unnamed_addr alias void (%"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"class.quic::QuicSpdyStream"*, i64), void (%"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"class.quic::QuicSpdyStream"*, i64)* @_ZN4quic14QuicSpdyStream22WebTransportDataStreamC2EPS0_m

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStreamC2EjPNS_15QuicSpdySessionENS_10StreamTypeE(%"class.quic::QuicSpdyStream"*, i32, %"class.quic::QuicSpdySession"*, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %6 = bitcast %"class.quic::QuicSpdySession"* %2 to %"class.quic::QuicSession"*
  tail call void @_ZN4quic10QuicStreamC2EjPNS_11QuicSessionEbNS_10StreamTypeE(%"class.quic::QuicStream"* %5, i32 %1, %"class.quic::QuicSession"* %6, i1 zeroext false, i32 %3) #14
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [6 x i8*] }, { [46 x i8*], [6 x i8*] }* @_ZTVN4quic14QuicSpdyStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [6 x i8*] }, { [46 x i8*], [6 x i8*] }* @_ZTVN4quic14QuicSpdyStreamE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  store %"class.quic::QuicSpdySession"* %2, %"class.quic::QuicSpdySession"** %9, align 8
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 3
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8
  %13 = bitcast %"class.quic::QuicSpdyStream::Visitor"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 11, i1 false)
  tail call void @_ZN4quic14QuicHeaderListC1Ev(%"class.quic::QuicHeaderList"* %12) #14
  %14 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 9
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 10
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 11
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 12
  tail call void @_ZN4spdy16Http2HeaderBlockC1Ev(%"class.spdy::Http2HeaderBlock"* %17) #14
  %18 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13
  %19 = bitcast %"class.std::__1::unique_ptr.637"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = ptrtoint %"class.quic::QuicSpdyStream"* %0 to i64
  %21 = tail call i8* @_Znwm(i64 16) #18
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN4quic14QuicSpdyStream18HttpDecoderVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %26 = bitcast %"class.quic::QuicSpdyStream::HttpDecoderVisitor"** %25 to i8**
  store i8* %21, i8** %26, align 8
  %27 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 15
  %28 = bitcast i8* %21 to %"class.quic::HttpDecoder::Visitor"*
  %29 = tail call zeroext i1 @_ZN4quic15QuicSpdySession25WillNegotiateWebTransportEv(%"class.quic::QuicSpdySession"* %2) #14
  %30 = zext i1 %29 to i8
  tail call void @_ZN4quic11HttpDecoderC1EPNS0_7VisitorENS0_7OptionsE(%"class.quic::HttpDecoder"* %27, %"class.quic::HttpDecoder::Visitor"* nonnull %28, i8 %30) #14
  %31 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  tail call void @_ZN4quic25QuicSpdyStreamBodyManagerC1Ev(%"class.quic::QuicSpdyStreamBodyManager"* %31) #14
  %32 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 17
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 18
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %34, align 8
  %35 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  %36 = bitcast %"class.quic::QuicIntervalSet"* %35 to i64*
  store i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64* %36, align 8
  %37 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 1
  store %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"** %37, align 8
  %38 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 21
  store i32 3, i32* %39, align 8
  %40 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 22
  %41 = bitcast %"class.std::__1::unique_ptr.664"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false)
  %42 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %5) #14
  %43 = icmp sgt i32 %42, 51
  br i1 %43, label %46, label %44

44:                                               ; preds = %4
  %45 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN4quic19QuicStreamSequencer20SetBlockedUntilFlushEv(%"class.quic::QuicStreamSequencer"* %45) #14
  br label %46

46:                                               ; preds = %44, %4
  %47 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %5) #14
  %48 = icmp sgt i32 %47, 51
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1, i32 10
  store i8 1, i8* %50, align 1
  br label %51

51:                                               ; preds = %49, %46
  %52 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %9, align 8
  tail call void @_ZN4quic15QuicSpdySession15OnStreamCreatedEPNS_14QuicSpdyStreamE(%"class.quic::QuicSpdySession"* %52, %"class.quic::QuicSpdyStream"* %0) #14
  ret void
}

declare void @_ZN4quic10QuicStreamC2EjPNS_11QuicSessionEbNS_10StreamTypeE(%"class.quic::QuicStream"*, i32, %"class.quic::QuicSession"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN4quic14QuicHeaderListC1Ev(%"class.quic::QuicHeaderList"*) unnamed_addr #1

declare void @_ZN4spdy16Http2HeaderBlockC1Ev(%"class.spdy::Http2HeaderBlock"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4quic11HttpDecoderC1EPNS0_7VisitorENS0_7OptionsE(%"class.quic::HttpDecoder"*, %"class.quic::HttpDecoder::Visitor"*, i8) unnamed_addr #1

declare void @_ZN4quic25QuicSpdyStreamBodyManagerC1Ev(%"class.quic::QuicSpdyStreamBodyManager"*) unnamed_addr #1

declare i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"*) local_unnamed_addr #1

declare void @_ZN4quic19QuicStreamSequencer20SetBlockedUntilFlushEv(%"class.quic::QuicStreamSequencer"*) local_unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession15OnStreamCreatedEPNS_14QuicSpdyStreamE(%"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdyStream"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStreamC2EPNS_13PendingStreamEPNS_15QuicSpdySessionENS_10StreamTypeE(%"class.quic::QuicSpdyStream"*, %"class.quic::PendingStream"*, %"class.quic::QuicSpdySession"*, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %6 = bitcast %"class.quic::QuicSpdySession"* %2 to %"class.quic::QuicSession"*
  tail call void @_ZN4quic10QuicStreamC2EPNS_13PendingStreamEPNS_11QuicSessionENS_10StreamTypeEb(%"class.quic::QuicStream"* %5, %"class.quic::PendingStream"* %1, %"class.quic::QuicSession"* %6, i32 %3, i1 zeroext false) #14
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [6 x i8*] }, { [46 x i8*], [6 x i8*] }* @_ZTVN4quic14QuicSpdyStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [6 x i8*] }, { [46 x i8*], [6 x i8*] }* @_ZTVN4quic14QuicSpdyStreamE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  store %"class.quic::QuicSpdySession"* %2, %"class.quic::QuicSpdySession"** %9, align 8
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 3
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8
  %13 = bitcast %"class.quic::QuicSpdyStream::Visitor"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 11, i1 false)
  tail call void @_ZN4quic14QuicHeaderListC1Ev(%"class.quic::QuicHeaderList"* %12) #14
  %14 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 9
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 10
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 11
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 12
  tail call void @_ZN4spdy16Http2HeaderBlockC1Ev(%"class.spdy::Http2HeaderBlock"* %17) #14
  %18 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13
  %19 = bitcast %"class.std::__1::unique_ptr.637"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = ptrtoint %"class.quic::QuicSpdyStream"* %0 to i64
  %21 = tail call i8* @_Znwm(i64 16) #18
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN4quic14QuicSpdyStream18HttpDecoderVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to i64*
  store i64 %20, i64* %24, align 8
  %25 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %26 = bitcast %"class.quic::QuicSpdyStream::HttpDecoderVisitor"** %25 to i8**
  store i8* %21, i8** %26, align 8
  %27 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 15
  %28 = bitcast i8* %21 to %"class.quic::HttpDecoder::Visitor"*
  tail call void @_ZN4quic11HttpDecoderC1EPNS0_7VisitorE(%"class.quic::HttpDecoder"* %27, %"class.quic::HttpDecoder::Visitor"* nonnull %28) #14
  %29 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  tail call void @_ZN4quic25QuicSpdyStreamBodyManagerC1Ev(%"class.quic::QuicSpdyStreamBodyManager"* %29) #14
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 17
  %31 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %32 = tail call i64 @_ZNK4quic19QuicStreamSequencer16NumBytesConsumedEv(%"class.quic::QuicStreamSequencer"* %31) #14
  store i64 %32, i64* %30, align 8
  %33 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 18
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %34, align 8
  %35 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  %36 = bitcast %"class.quic::QuicIntervalSet"* %35 to i64*
  store i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64* %36, align 8
  %37 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 1
  store %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"** %37, align 8
  %38 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 21
  store i32 3, i32* %39, align 8
  %40 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 22
  %41 = bitcast %"class.std::__1::unique_ptr.664"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false)
  %42 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %5) #14
  %43 = icmp sgt i32 %42, 51
  br i1 %43, label %45, label %44

44:                                               ; preds = %4
  tail call void @_ZN4quic19QuicStreamSequencer20SetBlockedUntilFlushEv(%"class.quic::QuicStreamSequencer"* %31) #14
  br label %45

45:                                               ; preds = %44, %4
  %46 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %5) #14
  %47 = icmp sgt i32 %46, 51
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1, i32 10
  store i8 1, i8* %49, align 1
  br label %50

50:                                               ; preds = %48, %45
  %51 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %9, align 8
  tail call void @_ZN4quic15QuicSpdySession15OnStreamCreatedEPNS_14QuicSpdyStreamE(%"class.quic::QuicSpdySession"* %51, %"class.quic::QuicSpdyStream"* %0) #14
  ret void
}

declare void @_ZN4quic10QuicStreamC2EPNS_13PendingStreamEPNS_11QuicSessionENS_10StreamTypeEb(%"class.quic::QuicStream"*, %"class.quic::PendingStream"*, %"class.quic::QuicSession"*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic11HttpDecoderC1EPNS0_7VisitorE(%"class.quic::HttpDecoder"*, %"class.quic::HttpDecoder::Visitor"*) unnamed_addr #1

declare i64 @_ZNK4quic19QuicStreamSequencer16NumBytesConsumedEv(%"class.quic::QuicStreamSequencer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStreamD2Ev(%"class.quic::QuicSpdyStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [6 x i8*] }, { [46 x i8*], [6 x i8*] }* @_ZTVN4quic14QuicSpdyStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [46 x i8*], [6 x i8*] }, { [46 x i8*], [6 x i8*] }* @_ZTVN4quic14QuicSpdyStreamE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %5 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %4, align 8
  store %"struct.quic::QuicSpdyStream::WebTransportDataStream"* null, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %4, align 8
  %6 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %5, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN4quic25WebTransportStreamAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %10 = load %"class.quic::WebTransportStreamVisitor"*, %"class.quic::WebTransportStreamVisitor"** %9, align 8
  store %"class.quic::WebTransportStreamVisitor"* null, %"class.quic::WebTransportStreamVisitor"** %9, align 8
  %11 = icmp eq %"class.quic::WebTransportStreamVisitor"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.quic::WebTransportStreamVisitor"* %10 to void (%"class.quic::WebTransportStreamVisitor"*)***
  %14 = load void (%"class.quic::WebTransportStreamVisitor"*)**, void (%"class.quic::WebTransportStreamVisitor"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.quic::WebTransportStreamVisitor"*)*, void (%"class.quic::WebTransportStreamVisitor"*)** %14, i64 1
  %16 = load void (%"class.quic::WebTransportStreamVisitor"*)*, void (%"class.quic::WebTransportStreamVisitor"*)** %15, align 8
  tail call void %16(%"class.quic::WebTransportStreamVisitor"* nonnull %10) #14
  br label %17

17:                                               ; preds = %12, %7
  %18 = bitcast %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %5 to i8*
  tail call void @_ZdlPv(i8* %18) #18
  br label %19

19:                                               ; preds = %1, %17
  %20 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %21 = load %"class.quic::WebTransportHttp3"*, %"class.quic::WebTransportHttp3"** %20, align 8
  store %"class.quic::WebTransportHttp3"* null, %"class.quic::WebTransportHttp3"** %20, align 8
  %22 = icmp eq %"class.quic::WebTransportHttp3"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.quic::WebTransportHttp3"* %21 to void (%"class.quic::WebTransportHttp3"*)***
  %25 = load void (%"class.quic::WebTransportHttp3"*)**, void (%"class.quic::WebTransportHttp3"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.quic::WebTransportHttp3"*)*, void (%"class.quic::WebTransportHttp3"*)** %25, i64 1
  %27 = load void (%"class.quic::WebTransportHttp3"*)*, void (%"class.quic::WebTransportHttp3"*)** %26, align 8
  tail call void %27(%"class.quic::WebTransportHttp3"* nonnull %21) #14
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %34, align 8
  %36 = bitcast %"class.quic::QuicIntervalSet"* %29 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %35, %"class.std::__1::allocator"* %36) #14
  br label %37

37:                                               ; preds = %28, %33
  %38 = bitcast %"class.quic::QuicIntervalSet"* %29 to <2 x %"class.absl::container_internal::btree_node"*>*
  store <2 x %"class.absl::container_internal::btree_node"*> <%"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*)>, <2 x %"class.absl::container_internal::btree_node"*>* %38, align 8
  store i64 0, i64* %30, align 8
  %39 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %40 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %39, align 8
  %41 = icmp eq %"class.quic::QuicAckListenerInterface"* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %40, i64 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe.519"* %48 to %"class.quic::QuicReferenceCountedImpl"*
  %50 = bitcast %"class.base::RefCountedThreadSafe.519"* %48 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %51 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %51, i64 1
  %53 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %52, align 8
  tail call void %53(%"class.quic::QuicReferenceCountedImpl"* nonnull %49) #14
  br label %54

54:                                               ; preds = %37, %42, %47
  %55 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 0, i32 2, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 0, i32 2, i32 0
  %60 = bitcast %"struct.quic::QuicSpdyStreamBodyManager::Fragment"** %59 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #18
  br label %62

62:                                               ; preds = %54, %58
  %63 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 15
  tail call void @_ZN4quic11HttpDecoderD1Ev(%"class.quic::HttpDecoder"* %63) #14
  %64 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %65 = load %"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"class.quic::QuicSpdyStream::HttpDecoderVisitor"** %64, align 8
  store %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* null, %"class.quic::QuicSpdyStream::HttpDecoderVisitor"** %64, align 8
  %66 = icmp eq %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %65 to void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)***
  %69 = load void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)**, void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)*, void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)** %69, i64 1
  %71 = load void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)*, void (%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*)** %70, align 8
  tail call void %71(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"* nonnull %65) #14
  br label %72

72:                                               ; preds = %62, %67
  %73 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %74 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %73, align 8
  store %"class.quic::QpackDecodedHeadersAccumulator"* null, %"class.quic::QpackDecodedHeadersAccumulator"** %73, align 8
  %75 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %74 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %78 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %78, i64 1
  %80 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %79, align 8
  tail call void %80(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %74) #14
  br label %81

81:                                               ; preds = %72, %76
  %82 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 12
  tail call void @_ZN4spdy16Http2HeaderBlockD1Ev(%"class.spdy::Http2HeaderBlock"* %82) #14
  %83 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8
  tail call void @_ZN4quic14QuicHeaderListD1Ev(%"class.quic::QuicHeaderList"* %83) #14
  %84 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStreamD2Ev(%"class.quic::QuicStream"* %84) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4quic11HttpDecoderD1Ev(%"class.quic::HttpDecoder"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlockD1Ev(%"class.spdy::Http2HeaderBlock"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4quic14QuicHeaderListD1Ev(%"class.quic::QuicHeaderList"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4quic10QuicStreamD2Ev(%"class.quic::QuicStream"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn560_N4quic14QuicSpdyStreamD1Ev(%"class.quic::QuicSpdyStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 -1, i32 0, i32 37
  %3 = bitcast i8* %2 to %"class.quic::QuicSpdyStream"*
  tail call void @_ZN4quic14QuicSpdyStreamD2Ev(%"class.quic::QuicSpdyStream"* %3) #14
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStreamD0Ev(%"class.quic::QuicSpdyStream"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn560_N4quic14QuicSpdyStreamD0Ev(%"class.quic::QuicSpdyStream"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic14QuicSpdyStream12WriteHeadersEN4spdy16Http2HeaderBlockEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1 zeroext, %"class.quic::QuicReferenceCountedPointer"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.quic::QuicInterval", align 8
  %6 = alloca %"class.quic::QuicConnection::ScopedPacketFlusher", align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.quic::QuicDataWriter", align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %11 = alloca %"class.spdy::Http2HeaderBlock", align 8
  %12 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %13 = tail call zeroext i1 @_ZN4quic14QuicSpdyStream31AssertNotWebTransportDataStreamEN4absl11string_viewE(%"class.quic::QuicSpdyStream"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i64 15)
  br i1 %13, label %14, label %125

14:                                               ; preds = %4
  %15 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %17 = bitcast %"class.quic::QuicSpdySession"** %16 to %"class.quic::QuicSession"**
  %18 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %17, align 8
  %20 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %19, i64 0, i32 8
  %21 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %20, align 8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherC1EPS0_(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %6, %"class.quic::QuicConnection"* %21) #14
  %22 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %23 = call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %22) #14
  %24 = icmp sgt i32 %23, 51
  br i1 %24, label %25, label %89

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 35
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %89

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 28, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %89

33:                                               ; preds = %29
  %34 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = bitcast %"class.quic::QuicDataWriter"* %8 to i8*
  store i64 -6148914691236517206, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #14
  %36 = getelementptr inbounds %"class.quic::QuicDataWriter", %"class.quic::QuicDataWriter"* %8, i64 0, i32 0, i32 2
  %37 = bitcast %"class.quic::QuicDataWriter"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  call void @_ZN4quic14QuicDataWriterC1EmPc(%"class.quic::QuicDataWriter"* nonnull %8, i64 8, i8* nonnull %34) #14
  %38 = call zeroext i1 @_ZN4quic14QuicDataWriter13WriteVarInt62Em(%"class.quic::QuicDataWriter"* nonnull %8, i64 1) #14
  %39 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  %40 = bitcast %"class.quic::QuicDataWriter"* %8 to %"class.quiche::QuicheDataWriter"*
  %41 = load i64, i64* %36, align 8
  %42 = bitcast %"class.quic::QuicInterval"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #14
  %43 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %5, i64 0, i32 0
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %5, i64 0, i32 1
  store i64 %41, i64* %44, align 8
  call void @_ZN4quic15QuicIntervalSetImE3AddERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"* %39, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #14
  %45 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i64 68) #14
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %67

47:                                               ; preds = %33
  %48 = bitcast %"class.logging::LogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %48) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 310, i32 -1) #14
  %49 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %50 = bitcast %"class.std::__1::basic_ostringstream"* %49 to %"class.std::__1::basic_ostream"*
  %51 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 4
  %52 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %51, align 8
  %53 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %52, i64 0, i32 9
  %54 = load i8, i8* %53, align 8
  %55 = icmp eq i8 %54, 0
  %56 = select i1 %55, [9 x i8]* @.str.2, [9 x i8]* @.str.3
  %57 = getelementptr inbounds [9 x i8], [9 x i8]* %56, i64 0, i64 0
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* nonnull %57, i64 8) #14
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7) #14
  %60 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %61 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %60, align 8
  %62 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %61, i64 8
  %63 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %62, align 8
  %64 = call i32 %63(%"class.quic::QuicStream"* %22) #14
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %59, i32 %64) #14
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %65, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i64 31) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %48) #14
  br label %67

67:                                               ; preds = %33, %47
  %68 = call i8* @_ZN6quiche16QuicheDataWriter4dataEv(%"class.quiche::QuicheDataWriter"* nonnull %40) #14
  %69 = load i64, i64* %36, align 8
  %70 = icmp sgt i64 %69, -1
  br i1 %70, label %72, label %71, !prof !2

71:                                               ; preds = %67
  call void @llvm.trap() #14
  unreachable

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %73, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %22, i8* %68, i64 %69, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %10) #14
  %74 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %73, align 8
  %75 = icmp eq %"class.quic::QuicAckListenerInterface"* %74, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %74, i64 0, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %88

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %77, i64 -2
  %83 = bitcast %"class.base::RefCountedThreadSafe.519"* %82 to %"class.quic::QuicReferenceCountedImpl"*
  %84 = bitcast %"class.base::RefCountedThreadSafe.519"* %82 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %85 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %85, i64 1
  %87 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %86, align 8
  call void %87(%"class.quic::QuicReferenceCountedImpl"* nonnull %83) #14
  br label %88

88:                                               ; preds = %72, %76, %81
  call void @_ZN4quic14QuicDataWriterD1Ev(%"class.quic::QuicDataWriter"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  br label %89

89:                                               ; preds = %88, %29, %25, %14
  call void @_ZN4quic14QuicSpdyStream35MaybeProcessSentWebTransportHeadersERN4spdy16Http2HeaderBlockE(%"class.quic::QuicSpdyStream"* %0, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %1)
  call void @_ZN4spdy16Http2HeaderBlockC1EOS0_(%"class.spdy::Http2HeaderBlock"* nonnull %11, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %1) #14
  %90 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %3, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.quic::QuicReferenceCountedPointer"* %3 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.quic::QuicReferenceCountedPointer"* %12 to i64*
  store i64 %92, i64* %93, align 8
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %90, align 8
  %94 = bitcast %"class.quic::QuicSpdyStream"* %0 to i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)***
  %95 = load i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)**, i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)*** %94, align 8
  %96 = getelementptr inbounds i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)*, i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)** %95, i64 43
  %97 = load i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)*, i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)** %96, align 8
  %98 = call i64 %97(%"class.quic::QuicSpdyStream"* %0, %"class.spdy::Http2HeaderBlock"* nonnull %11, i1 zeroext %2, %"class.quic::QuicReferenceCountedPointer"* nonnull %12) #14
  %99 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %12, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %99, align 8
  %101 = icmp eq %"class.quic::QuicAckListenerInterface"* %100, null
  br i1 %101, label %114, label %102

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %100, i64 0, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw sub i32* %104, i32 1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %114

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %103, i64 -2
  %109 = bitcast %"class.base::RefCountedThreadSafe.519"* %108 to %"class.quic::QuicReferenceCountedImpl"*
  %110 = bitcast %"class.base::RefCountedThreadSafe.519"* %108 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %111 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %111, i64 1
  %113 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %112, align 8
  call void %113(%"class.quic::QuicReferenceCountedImpl"* nonnull %109) #14
  br label %114

114:                                              ; preds = %89, %102, %107
  call void @_ZN4spdy16Http2HeaderBlockD1Ev(%"class.spdy::Http2HeaderBlock"* nonnull %11) #14
  %115 = call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %22) #14
  %116 = icmp sgt i32 %115, 51
  %117 = xor i1 %2, true
  %118 = or i1 %116, %117
  br i1 %118, label %124, label %119

119:                                              ; preds = %114
  call void @_ZN4quic10QuicStream10SetFinSentEv(%"class.quic::QuicStream"* %22) #14
  %120 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*)***
  %121 = load void (%"class.quic::QuicStream"*)**, void (%"class.quic::QuicStream"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.quic::QuicStream"*)*, void (%"class.quic::QuicStream"*)** %121, i64 29
  %123 = load void (%"class.quic::QuicStream"*)*, void (%"class.quic::QuicStream"*)** %122, align 8
  call void %123(%"class.quic::QuicStream"* %22) #14
  br label %124

124:                                              ; preds = %114, %119
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherD1Ev(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  br label %125

125:                                              ; preds = %4, %124
  %126 = phi i64 [ %98, %124 ], [ 0, %4 ]
  ret i64 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream31AssertNotWebTransportDataStreamEN4absl11string_viewE(%"class.quic::QuicSpdyStream"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %10 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %9, align 8
  %11 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %10, null
  br i1 %11, label %59, label %12

12:                                               ; preds = %3
  %13 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #14
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  br label %35

16:                                               ; preds = %12
  %17 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %17) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 1323, i32 2) #14
  %18 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %18 to %"class.std::__1::basic_ostream"*
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), i64 13) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4absllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_11string_viewE(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %1, i64 %2) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0), i64 29) #14
  %23 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %24 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %25 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %25, i64 8
  %27 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %26, align 8
  %28 = call i32 %27(%"class.quic::QuicStream"* %23) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %22, i32 %28) #14
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0), i64 25) #14
  %31 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %9, align 8
  %32 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %31, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %30, i64 %33) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %17) #14
  br label %35

35:                                               ; preds = %14, %16
  %36 = phi %"class.quic::QuicStream"* [ %15, %14 ], [ %23, %16 ]
  %37 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #14
  %38 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #14
  %39 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 13, i64* %40, align 8
  %41 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %41) #14
  %42 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* %1, i8** %42, align 8
  %43 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  store i64 %2, i64* %43, align 8
  %44 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %44) #14
  %45 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 28, i64* %46, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8) #14
  %47 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %48 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %48, i64 6
  %50 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %49, align 8
  call void %50(%"class.quic::QuicStream"* %36, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %51 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %35
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %35, %55
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %41) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #14
  br label %59

59:                                               ; preds = %3, %58
  %60 = phi i1 [ false, %58 ], [ true, %3 ]
  ret i1 %60
}

declare void @_ZN4quic14QuicConnection19ScopedPacketFlusherC1EPS0_(%"class.quic::QuicConnection::ScopedPacketFlusher"*, %"class.quic::QuicConnection"*) unnamed_addr #1

declare void @_ZN4quic14QuicDataWriterC1EmPc(%"class.quic::QuicDataWriter"*, i64, i8*) unnamed_addr #1

declare zeroext i1 @_ZN4quic14QuicDataWriter13WriteVarInt62Em(%"class.quic::QuicDataWriter"*, i64) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"*, i8*, i64, i1 zeroext, %"class.quic::QuicReferenceCountedPointer"*) local_unnamed_addr #1

declare i8* @_ZN6quiche16QuicheDataWriter4dataEv(%"class.quiche::QuicheDataWriter"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic14QuicDataWriterD1Ev(%"class.quic::QuicDataWriter"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream35MaybeProcessSentWebTransportHeadersERN4spdy16Http2HeaderBlockE(%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::string_view", align 8
  %4 = alloca %"class.absl::string_view", align 8
  %5 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %6 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %7 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %8 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.absl::AlphaNum", align 8
  %11 = alloca %"class.spdy::Http2HeaderBlock::ValueProxy", align 8
  %12 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %13 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %12, align 8
  %14 = tail call zeroext i1 @_ZN4quic15QuicSpdySession20SupportsWebTransportEv(%"class.quic::QuicSpdySession"* %13) #14
  br i1 %14, label %15, label %188

15:                                               ; preds = %2
  %16 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %17 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 4
  %18 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %17, align 8
  %19 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %18, i64 0, i32 9
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 1
  br i1 %21, label %22, label %188

22:                                               ; preds = %15
  %23 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  %24 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %5, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.570"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base.570"*), %"struct.std::__1::__list_node_base.570"** %24, align 8
  %25 = bitcast %"class.absl::string_view"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25)
  %26 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8** %26, align 8, !noalias !3
  %27 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 1
  store i64 7, i64* %27, align 8, !noalias !3
  %28 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = call { i8*, %"struct.std::__1::pair.560"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.559"* %28, %"class.absl::string_view"* nonnull dereferenceable(16) %4) #14, !noalias !3
  %30 = extractvalue { i8*, %"struct.std::__1::pair.560"** } %29, 0
  %31 = extractvalue { i8*, %"struct.std::__1::pair.560"** } %29, 1
  %32 = icmp eq i8* %30, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %22
  %34 = load i8, i8* %30, align 1
  %35 = icmp sgt i8 %34, -1
  br i1 %35, label %39, label %36, !prof !2

36:                                               ; preds = %33
  call void @llvm.trap() #14
  unreachable

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %43

39:                                               ; preds = %33
  %40 = load %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %31, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.560", %"struct.std::__1::pair.560"* %40, i64 0, i32 1, i32 0
  %42 = load %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"** %41, align 8
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi %"struct.std::__1::__list_node_base.570"* [ %38, %37 ], [ %42, %39 ]
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5, %"struct.std::__1::__list_node_base.570"* %44) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25)
  %45 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  %46 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %6, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.570"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base.570"*), %"struct.std::__1::__list_node_base.570"** %46, align 8
  %47 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47)
  %48 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8** %48, align 8, !noalias !6
  %49 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  store i64 9, i64* %49, align 8, !noalias !6
  %50 = call { i8*, %"struct.std::__1::pair.560"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.559"* %28, %"class.absl::string_view"* nonnull dereferenceable(16) %3) #14, !noalias !6
  %51 = extractvalue { i8*, %"struct.std::__1::pair.560"** } %50, 0
  %52 = extractvalue { i8*, %"struct.std::__1::pair.560"** } %50, 1
  %53 = icmp eq i8* %51, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %43
  %55 = load i8, i8* %51, align 1
  %56 = icmp sgt i8 %55, -1
  br i1 %56, label %60, label %57, !prof !2

57:                                               ; preds = %54
  call void @llvm.trap() #14
  unreachable

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %64

60:                                               ; preds = %54
  %61 = load %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %52, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.560", %"struct.std::__1::pair.560"* %61, i64 0, i32 1, i32 0
  %63 = load %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"** %62, align 8
  br label %64

64:                                               ; preds = %58, %60
  %65 = phi %"struct.std::__1::__list_node_base.570"* [ %59, %58 ], [ %63, %60 ]
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %6, %"struct.std::__1::__list_node_base.570"* %65) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47)
  %66 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  %67 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %7, %"struct.std::__1::__list_node_base.570"* %67) #14
  %68 = load %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"** %24, align 8
  %69 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %7, i64 0, i32 0, i32 0
  %70 = load %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__list_node_base.570"* %68, %70
  br i1 %71, label %72, label %73

72:                                               ; preds = %64
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  br label %187

73:                                               ; preds = %64
  %74 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #14
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %8, %"struct.std::__1::__list_node_base.570"* %67) #14
  %75 = load %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"** %46, align 8
  %76 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %8, i64 0, i32 0, i32 0
  %77 = load %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__list_node_base.570"* %75, %77
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #14
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  br i1 %78, label %187, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %5 to %"struct.std::__1::__list_node"**
  %81 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %81, i64 0, i32 1, i32 1
  %83 = call dereferenceable(32) %"struct.std::__1::pair.689"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %82) #14
  %84 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %83, i64 0, i32 1, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 7
  br i1 %86, label %87, label %92

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %83, i64 0, i32 1, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = call i32 @bcmp(i8* %89, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i64 7) #14
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %105, label %92

92:                                               ; preds = %87, %79
  %93 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %6 to %"struct.std::__1::__list_node"**
  %94 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %93, align 8
  %95 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %94, i64 0, i32 1, i32 1
  %96 = call dereferenceable(32) %"struct.std::__1::pair.689"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %95) #14
  %97 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %96, i64 0, i32 1, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 12
  br i1 %99, label %100, label %187

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %96, i64 0, i32 1, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 @bcmp(i8* %102, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i64 12) #14
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %187

105:                                              ; preds = %87, %100
  %106 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %12, align 8
  %107 = call i64 @_ZN4quic15QuicSpdySession21GetNextDatagramFlowIdEv(%"class.quic::QuicSpdySession"* %106) #14
  %108 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #14
  %109 = bitcast %"class.absl::AlphaNum"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %109) #14
  %110 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 1, i64 0
  %111 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %107, i8* %110) #14
  %112 = ptrtoint i8* %111 to i64
  %113 = ptrtoint i8* %110 to i64
  %114 = sub i64 %112, %113
  %115 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 0
  store i8* %110, i8** %115, align 8
  %116 = icmp sgt i64 %114, -1
  br i1 %116, label %118, label %117, !prof !2

117:                                              ; preds = %105
  call void @llvm.trap() #14
  unreachable

118:                                              ; preds = %105
  %119 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 1
  store i64 %114, i64* %119, align 8
  %120 = icmp ult i64 %114, 23
  br i1 %120, label %130, label %121

121:                                              ; preds = %118
  %122 = add nuw i64 %114, 16
  %123 = and i64 %122, -16
  %124 = call i8* @_Znwm(i64 %123) #18
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %124, i8** %125, align 8, !alias.scope !9
  %126 = or i64 %123, -9223372036854775808
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %126, i64* %127, align 8, !alias.scope !9
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %114, i64* %128, align 8, !alias.scope !9
  %129 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %135

130:                                              ; preds = %118
  %131 = trunc i64 %114 to i8
  %132 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  store i8 %131, i8* %133, align 1, !alias.scope !9
  %134 = icmp eq i64 %114, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %130, %121
  %136 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %132, %130 ], [ %129, %121 ]
  %137 = phi i8* [ %108, %130 ], [ %124, %121 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %137, i8* align 8 %110, i64 %114, i1 false) #14
  br label %138

138:                                              ; preds = %130, %135
  %139 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %132, %130 ], [ %136, %135 ]
  %140 = phi i8* [ %108, %130 ], [ %137, %135 ]
  %141 = getelementptr inbounds i8, i8* %140, i64 %114
  store i8 0, i8* %141, align 1
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %138
  %146 = zext i8 %143 to i64
  %147 = ptrtoint %"class.std::__1::basic_string"* %9 to i64
  br label %155

148:                                              ; preds = %138
  %149 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = icmp sgt i64 %152, -1
  br i1 %153, label %155, label %154, !prof !2

154:                                              ; preds = %148
  call void @llvm.trap() #14
  unreachable

155:                                              ; preds = %145, %148
  %156 = phi i64 [ %150, %148 ], [ %147, %145 ]
  %157 = phi i64 [ %152, %148 ], [ %146, %145 ]
  %158 = bitcast %"class.spdy::Http2HeaderBlock::ValueProxy"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %158) #14
  call void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull sret %11, %"class.spdy::Http2HeaderBlock"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i64 16) #14
  %159 = inttoptr i64 %156 to i8*
  %160 = call dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %11, i8* %159, i64 %157) #14
  call void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %158) #14
  %161 = load i8, i8* %142, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %165) #18
  br label %166

166:                                              ; preds = %155, %163
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %109) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #14
  %167 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %168 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %167, align 8
  %169 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %168, i64 8
  %170 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %169, align 8
  %171 = call i32 %170(%"class.quic::QuicStream"* %16) #14
  %172 = call i8* @_Znwm(i64 168) #18
  %173 = bitcast i8* %172 to %"class.quic::WebTransportHttp3"*
  %174 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %12, align 8
  %175 = zext i32 %171 to i64
  call void @_ZN4quic17WebTransportHttp3C1EPNS_15QuicSpdySessionEPNS_14QuicSpdyStreamEmm(%"class.quic::WebTransportHttp3"* nonnull %173, %"class.quic::QuicSpdySession"* %174, %"class.quic::QuicSpdyStream"* %0, i64 %175, i64 %107) #14
  %176 = ptrtoint i8* %172 to i64
  %177 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 22
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.664", %"class.std::__1::unique_ptr.664"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.quic::WebTransportHttp3"*, %"class.quic::WebTransportHttp3"** %178, align 8
  %180 = bitcast %"class.std::__1::unique_ptr.664"* %177 to i64*
  store i64 %176, i64* %180, align 8
  %181 = icmp eq %"class.quic::WebTransportHttp3"* %179, null
  br i1 %181, label %187, label %182

182:                                              ; preds = %166
  %183 = bitcast %"class.quic::WebTransportHttp3"* %179 to void (%"class.quic::WebTransportHttp3"*)***
  %184 = load void (%"class.quic::WebTransportHttp3"*)**, void (%"class.quic::WebTransportHttp3"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.quic::WebTransportHttp3"*)*, void (%"class.quic::WebTransportHttp3"*)** %184, i64 1
  %186 = load void (%"class.quic::WebTransportHttp3"*)*, void (%"class.quic::WebTransportHttp3"*)** %185, align 8
  call void %186(%"class.quic::WebTransportHttp3"* nonnull %179) #14
  br label %187

187:                                              ; preds = %100, %92, %166, %182, %72, %73
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  br label %188

188:                                              ; preds = %15, %2, %187
  ret void
}

declare void @_ZN4spdy16Http2HeaderBlockC1EOS0_(%"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) unnamed_addr #1

declare void @_ZN4quic10QuicStream10SetFinSentEv(%"class.quic::QuicStream"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic14QuicConnection19ScopedPacketFlusherD1Ev(%"class.quic::QuicConnection::ScopedPacketFlusher"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream17WriteOrBufferBodyEN4absl11string_viewEb(%"class.quic::QuicSpdyStream"*, i8*, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.quic::QuicInterval", align 8
  %6 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %7 = alloca %"class.quic::QuicConnection::ScopedPacketFlusher", align 8
  %8 = alloca %"class.std::__1::unique_ptr.577", align 8
  %9 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %10 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %11 = tail call zeroext i1 @_ZN4quic14QuicSpdyStream31AssertNotWebTransportDataStreamEN4absl11string_viewE(%"class.quic::QuicSpdyStream"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i64 17)
  br i1 %11, label %12, label %108

12:                                               ; preds = %4
  %13 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %14 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %13) #14
  %15 = icmp slt i32 %14, 52
  %16 = icmp eq i64 %2, 0
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %34

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %19, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %13, i8* %1, i64 %2, i1 zeroext %3, %"class.quic::QuicReferenceCountedPointer"* nonnull %6) #14
  %20 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %19, align 8
  %21 = icmp eq %"class.quic::QuicAckListenerInterface"* %20, null
  br i1 %21, label %108, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %20, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %108

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe.519"* %28 to %"class.quic::QuicReferenceCountedImpl"*
  %30 = bitcast %"class.base::RefCountedThreadSafe.519"* %28 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %31 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %31, i64 1
  %33 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %32, align 8
  call void %33(%"class.quic::QuicReferenceCountedImpl"* nonnull %29) #14
  br label %108

34:                                               ; preds = %12
  %35 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #14
  %36 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %37 = bitcast %"class.quic::QuicSpdySession"** %36 to %"class.quic::QuicSession"**
  %38 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  %39 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %37, align 8
  %40 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %39, i64 0, i32 8
  %41 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %40, align 8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherC1EPS0_(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %7, %"class.quic::QuicConnection"* %41) #14
  %42 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %36, align 8
  %43 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %42, i64 0, i32 26
  %44 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %43, align 8
  %45 = icmp eq %"class.quic::Http3DebugVisitor"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %34
  %47 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %48 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %47, align 8
  %49 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %48, i64 8
  %50 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %49, align 8
  %51 = call i32 %50(%"class.quic::QuicStream"* %13) #14
  %52 = bitcast %"class.quic::Http3DebugVisitor"* %44 to void (%"class.quic::Http3DebugVisitor"*, i32, i64)***
  %53 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64)**, void (%"class.quic::Http3DebugVisitor"*, i32, i64)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64)** %53, i64 26
  %55 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64)** %54, align 8
  call void %55(%"class.quic::Http3DebugVisitor"* nonnull %44, i32 %51, i64 %2) #14
  br label %56

56:                                               ; preds = %34, %46
  %57 = bitcast %"class.std::__1::unique_ptr.577"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #14
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %8, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr.577"* %8 to i64*
  store i64 0, i64* %59, align 8
  %60 = call i64 @_ZN4quic11HttpEncoder24SerializeDataFrameHeaderEmPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(i64 %2, %"class.std::__1::unique_ptr.577"* nonnull %8) #14
  %61 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  %62 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 28, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, %60
  %65 = bitcast %"class.quic::QuicInterval"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #14
  %66 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %5, i64 0, i32 0
  store i64 %63, i64* %66, align 8
  %67 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %5, i64 0, i32 1
  store i64 %64, i64* %67, align 8
  call void @_ZN4quic15QuicIntervalSetImE3AddERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"* %61, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #14
  %68 = icmp sgt i64 %60, -1
  br i1 %68, label %70, label %69, !prof !2

69:                                               ; preds = %56
  call void @llvm.trap() #14
  unreachable

70:                                               ; preds = %56
  %71 = load i8*, i8** %58, align 8
  %72 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %72, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %13, i8* %71, i64 %60, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %9) #14
  %73 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %72, align 8
  %74 = icmp eq %"class.quic::QuicAckListenerInterface"* %73, null
  br i1 %74, label %87, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %73, i64 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw sub i32* %77, i32 1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %87

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %76, i64 -2
  %82 = bitcast %"class.base::RefCountedThreadSafe.519"* %81 to %"class.quic::QuicReferenceCountedImpl"*
  %83 = bitcast %"class.base::RefCountedThreadSafe.519"* %81 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %84 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %84, i64 1
  %86 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %85, align 8
  call void %86(%"class.quic::QuicReferenceCountedImpl"* nonnull %82) #14
  br label %87

87:                                               ; preds = %70, %75, %80
  %88 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %88, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %13, i8* %1, i64 %2, i1 zeroext %3, %"class.quic::QuicReferenceCountedPointer"* nonnull %10) #14
  %89 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %88, align 8
  %90 = icmp eq %"class.quic::QuicAckListenerInterface"* %89, null
  br i1 %90, label %103, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %89, i64 0, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw sub i32* %93, i32 1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %103

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %92, i64 -2
  %98 = bitcast %"class.base::RefCountedThreadSafe.519"* %97 to %"class.quic::QuicReferenceCountedImpl"*
  %99 = bitcast %"class.base::RefCountedThreadSafe.519"* %97 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %100 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %100, i64 1
  %102 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %101, align 8
  call void %102(%"class.quic::QuicReferenceCountedImpl"* nonnull %98) #14
  br label %103

103:                                              ; preds = %87, %91, %96
  %104 = load i8*, i8** %58, align 8
  store i8* null, i8** %58, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %103
  call void @_ZdaPv(i8* nonnull %104) #18
  br label %107

107:                                              ; preds = %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherD1Ev(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #14
  br label %108

108:                                              ; preds = %27, %22, %18, %4, %107
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZN4quic11HttpEncoder24SerializeDataFrameHeaderEmPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(i64, %"class.std::__1::unique_ptr.577"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic14QuicSpdyStream13WriteTrailersEN4spdy16Http2HeaderBlockENS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, %"class.quic::QuicReferenceCountedPointer"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"struct.std::__1::pair.689", align 8
  %6 = alloca %"struct.std::__1::pair.690", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.spdy::Http2HeaderBlock", align 8
  %10 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %11 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %12 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 13
  %13 = load i8, i8* %12, align 1, !range !12
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #14
  br i1 %16, label %17, label %143

17:                                               ; preds = %15
  %18 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %18) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 369, i32 2) #14
  %19 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %19 to %"class.std::__1::basic_ostream"*
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0), i64 47) #14
  %22 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %23 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %23, i64 8
  %25 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %24, align 8
  %26 = call i32 %25(%"class.quic::QuicStream"* %11) #14
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %21, i32 %26) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %18) #14
  br label %143

28:                                               ; preds = %3
  %29 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %11) #14
  %30 = icmp sgt i32 %29, 51
  br i1 %30, label %107, label %31

31:                                               ; preds = %28
  %32 = tail call i64 @_ZNK4quic10QuicStream20stream_bytes_writtenEv(%"class.quic::QuicStream"* %11) #14
  %33 = tail call i64 @_ZNK4quic10QuicStream17BufferedDataBytesEv(%"class.quic::QuicStream"* %11) #14
  %34 = add i64 %33, %32
  %35 = bitcast %"struct.std::__1::pair.689"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #14
  %36 = bitcast %"struct.std::__1::pair.690"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #14
  %37 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #14
  %38 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #14
  %39 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 1, i64 0
  %40 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %34, i8* %39) #14
  %41 = ptrtoint i8* %40 to i64
  %42 = ptrtoint i8* %39 to i64
  %43 = sub i64 %41, %42
  %44 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* %39, i8** %44, align 8
  %45 = icmp sgt i64 %43, -1
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %31
  call void @llvm.trap() #14
  unreachable

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 %43, i64* %48, align 8
  %49 = icmp ult i64 %43, 23
  br i1 %49, label %58, label %50

50:                                               ; preds = %47
  %51 = add nuw i64 %43, 16
  %52 = and i64 %51, -16
  %53 = call i8* @_Znwm(i64 %52) #18
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %53, i8** %54, align 8, !alias.scope !13
  %55 = or i64 %52, -9223372036854775808
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %55, i64* %56, align 8, !alias.scope !13
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %57, align 8, !alias.scope !13
  br label %63

58:                                               ; preds = %47
  %59 = trunc i64 %43 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 %59, i8* %61, align 1, !alias.scope !13
  %62 = icmp eq i64 %43, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %58, %50
  %64 = phi i8* [ %53, %50 ], [ %37, %58 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* align 8 %39, i64 %43, i1 false) #14
  br label %65

65:                                               ; preds = %58, %63
  %66 = phi i8* [ %37, %58 ], [ %64, %63 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 %43
  store i8 0, i8* %67, align 1
  %68 = load i64, i64* bitcast (i8** @_ZN4quic21kFinalOffsetHeaderKeyE to i64*), align 8, !noalias !16
  %69 = bitcast %"struct.std::__1::pair.690"* %6 to i64*
  store i64 %68, i64* %69, align 8, !alias.scope !16
  %70 = getelementptr inbounds %"struct.std::__1::pair.690", %"struct.std::__1::pair.690"* %6, i64 0, i32 1
  %71 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %37, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #14, !noalias !16
  %72 = inttoptr i64 %68 to i8*
  %73 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %5, i64 0, i32 0, i32 0
  store i8* %72, i8** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %5, i64 0, i32 0, i32 1
  %75 = icmp eq i64 %68, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %65
  %77 = call i64 @strlen(i8* nonnull %72) #14
  %78 = icmp sgt i64 %77, -1
  br i1 %78, label %80, label %79, !prof !2

79:                                               ; preds = %76
  call void @llvm.trap() #14
  unreachable

80:                                               ; preds = %76, %65
  %81 = phi i64 [ 0, %65 ], [ %77, %76 ]
  store i64 %81, i64* %74, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %5, i64 0, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %80
  %88 = zext i8 %85 to i64
  %89 = bitcast %"class.absl::string_view"* %82 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"** %89, align 8
  br label %98

90:                                               ; preds = %80
  %91 = bitcast %"class.std::__1::basic_string"* %70 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.690", %"struct.std::__1::pair.690"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.absl::string_view"* %82 to i64*
  store i64 %92, i64* %95, align 8
  %96 = icmp sgt i64 %94, -1
  br i1 %96, label %98, label %97, !prof !2

97:                                               ; preds = %90
  call void @llvm.trap() #14
  unreachable

98:                                               ; preds = %87, %90
  %99 = phi i64 [ %88, %87 ], [ %94, %90 ]
  %100 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %5, i64 0, i32 1, i32 1
  store i64 %99, i64* %100, align 8
  call void @_ZN4spdy16Http2HeaderBlock6insertERKNSt3__14pairIN4absl11string_viewES4_EE(%"class.spdy::Http2HeaderBlock"* %1, %"struct.std::__1::pair.689"* nonnull dereferenceable(32) %5) #14
  %101 = load i8, i8* %84, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #18
  br label %106

106:                                              ; preds = %103, %98
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #14
  br label %107

107:                                              ; preds = %106, %28
  call void @_ZN4spdy16Http2HeaderBlockC1EOS0_(%"class.spdy::Http2HeaderBlock"* nonnull %9, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %1) #14
  %108 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %2, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.quic::QuicReferenceCountedPointer"* %2 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.quic::QuicReferenceCountedPointer"* %10 to i64*
  store i64 %110, i64* %111, align 8
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %108, align 8
  %112 = bitcast %"class.quic::QuicSpdyStream"* %0 to i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)***
  %113 = load i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)**, i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)*** %112, align 8
  %114 = getelementptr inbounds i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)*, i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)** %113, i64 43
  %115 = load i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)*, i64 (%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1, %"class.quic::QuicReferenceCountedPointer"*)** %114, align 8
  %116 = call i64 %115(%"class.quic::QuicSpdyStream"* %0, %"class.spdy::Http2HeaderBlock"* nonnull %9, i1 zeroext true, %"class.quic::QuicReferenceCountedPointer"* nonnull %10) #14
  %117 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %10, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %117, align 8
  %119 = icmp eq %"class.quic::QuicAckListenerInterface"* %118, null
  br i1 %119, label %132, label %120

120:                                              ; preds = %107
  %121 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %118, i64 0, i32 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw sub i32* %122, i32 1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %132

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %121, i64 -2
  %127 = bitcast %"class.base::RefCountedThreadSafe.519"* %126 to %"class.quic::QuicReferenceCountedImpl"*
  %128 = bitcast %"class.base::RefCountedThreadSafe.519"* %126 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %129 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %129, i64 1
  %131 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %130, align 8
  call void %131(%"class.quic::QuicReferenceCountedImpl"* nonnull %127) #14
  br label %132

132:                                              ; preds = %107, %120, %125
  call void @_ZN4spdy16Http2HeaderBlockD1Ev(%"class.spdy::Http2HeaderBlock"* nonnull %9) #14
  %133 = call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %11) #14
  %134 = icmp sgt i32 %133, 51
  br i1 %134, label %143, label %135

135:                                              ; preds = %132
  call void @_ZN4quic10QuicStream10SetFinSentEv(%"class.quic::QuicStream"* %11) #14
  %136 = call i64 @_ZNK4quic10QuicStream17BufferedDataBytesEv(%"class.quic::QuicStream"* %11) #14
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %143

138:                                              ; preds = %135
  %139 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*)***
  %140 = load void (%"class.quic::QuicStream"*)**, void (%"class.quic::QuicStream"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.quic::QuicStream"*)*, void (%"class.quic::QuicStream"*)** %140, i64 29
  %142 = load void (%"class.quic::QuicStream"*)*, void (%"class.quic::QuicStream"*)** %141, align 8
  call void %142(%"class.quic::QuicStream"* %11) #14
  br label %143

143:                                              ; preds = %17, %15, %132, %138, %135
  %144 = phi i64 [ %116, %135 ], [ %116, %138 ], [ %116, %132 ], [ 0, %15 ], [ 0, %17 ]
  ret i64 %144
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare i64 @_ZNK4quic10QuicStream20stream_bytes_writtenEv(%"class.quic::QuicStream"*) local_unnamed_addr #1

declare i64 @_ZNK4quic10QuicStream17BufferedDataBytesEv(%"class.quic::QuicStream"*) local_unnamed_addr #1

declare void @_ZN4spdy16Http2HeaderBlock6insertERKNSt3__14pairIN4absl11string_viewES4_EE(%"class.spdy::Http2HeaderBlock"*, %"struct.std::__1::pair.689"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZN4quic14QuicSpdyStream10WritevBodyEPK5iovecib(%"class.quic::QuicSpdyStream"*, %struct.iovec*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.quic::QuicMemSliceSpanImpl", align 8
  %6 = alloca %"class.quic::QuicMemSliceStorage", align 8
  %7 = alloca %"class.quic::QuicMemSliceSpan", align 8
  %8 = bitcast %"class.quic::QuicMemSliceStorage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.quic::QuicMemSliceStorage", %"class.quic::QuicMemSliceStorage"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.quic::QuicMemSliceStorage", %"class.quic::QuicMemSliceStorage"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.quic::QuicMemSliceStorage", %"class.quic::QuicMemSliceStorage"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 4
  %13 = bitcast %"class.quic::QuicMemSliceStorage"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  %14 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %12, align 8
  %15 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %14, i64 0, i32 8
  %16 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %15, align 8
  %17 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %16, i64 0, i32 14
  %18 = load %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicConnectionHelperInterface"** %17, align 8
  %19 = bitcast %"class.quic::QuicConnectionHelperInterface"* %18 to %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)***
  %20 = load %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)**, %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)** %20, i64 4
  %22 = load %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)** %21, align 8
  %23 = tail call %"class.quic::QuicBufferAllocator"* %22(%"class.quic::QuicConnectionHelperInterface"* %18) #14
  %24 = load i64, i64* @FLAGS_quic_send_buffer_max_data_slice_size, align 8
  %25 = getelementptr inbounds %"class.quic::QuicMemSliceStorage", %"class.quic::QuicMemSliceStorage"* %6, i64 0, i32 0
  call void @_ZN4quic23QuicMemSliceStorageImplC1EPK5ioveciPNS_19QuicBufferAllocatorEm(%"class.quic::QuicMemSliceStorageImpl"* nonnull %25, %struct.iovec* %1, i32 %2, %"class.quic::QuicBufferAllocator"* %23, i64 %24) #14
  %26 = bitcast %"class.quic::QuicMemSliceSpanImpl"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14, !noalias !19
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %9, align 8, !noalias !22
  %28 = load i64*, i64** %11, align 8, !noalias !22
  %29 = bitcast %class.scoped_refptr** %10 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !22
  %31 = ptrtoint %class.scoped_refptr* %27 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  call void @_ZN4quic20QuicMemSliceSpanImplC1EPK13scoped_refptrIN3net8IOBufferEEPKmm(%"class.quic::QuicMemSliceSpanImpl"* nonnull %5, %class.scoped_refptr* %27, i64* %28, i64 %33) #14, !noalias !22
  %34 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %7, i64 0, i32 0
  call void @_ZN4quic20QuicMemSliceSpanImplC1ERKS0_(%"class.quic::QuicMemSliceSpanImpl"* nonnull %34, %"class.quic::QuicMemSliceSpanImpl"* nonnull dereferenceable(24) %5) #14
  call void @_ZN4quic20QuicMemSliceSpanImplD1Ev(%"class.quic::QuicMemSliceSpanImpl"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14, !noalias !19
  %35 = call { i64, i8 } @_ZN4quic14QuicSpdyStream15WriteBodySlicesENS_16QuicMemSliceSpanEb(%"class.quic::QuicSpdyStream"* %0, %"class.quic::QuicMemSliceSpan"* nonnull %7, i1 zeroext %3)
  call void @_ZN4quic20QuicMemSliceSpanImplD1Ev(%"class.quic::QuicMemSliceSpanImpl"* nonnull %34) #14
  call void @_ZN4quic23QuicMemSliceStorageImplD1Ev(%"class.quic::QuicMemSliceStorageImpl"* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #14
  ret { i64, i8 } %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZN4quic14QuicSpdyStream15WriteBodySlicesENS_16QuicMemSliceSpanEb(%"class.quic::QuicSpdyStream"*, %"class.quic::QuicMemSliceSpan"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.quic::QuicInterval", align 8
  %5 = alloca %"class.quic::QuicMemSliceSpanImpl", align 8
  %6 = alloca %"class.quic::QuicMemSliceSpan", align 8
  %7 = alloca %"class.std::__1::unique_ptr.577", align 8
  %8 = alloca %"class.quic::QuicConnection::ScopedPacketFlusher", align 8
  %9 = alloca %struct.iovec, align 8
  %10 = alloca %"class.quic::QuicMemSliceStorage", align 8
  %11 = alloca %"class.quic::QuicMemSliceSpan", align 8
  %12 = alloca %"class.quic::QuicMemSliceSpan", align 8
  %13 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %14 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %13) #14
  %15 = icmp sgt i32 %14, 51
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %1, i64 0, i32 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %16, %3
  %21 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %6, i64 0, i32 0
  %22 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %1, i64 0, i32 0
  call void @_ZN4quic20QuicMemSliceSpanImplC1ERKS0_(%"class.quic::QuicMemSliceSpanImpl"* nonnull %21, %"class.quic::QuicMemSliceSpanImpl"* dereferenceable(24) %22) #14
  %23 = call { i64, i8 } @_ZN4quic10QuicStream14WriteMemSlicesENS_16QuicMemSliceSpanEb(%"class.quic::QuicStream"* %13, %"class.quic::QuicMemSliceSpan"* nonnull %6, i1 zeroext %2) #14
  %24 = extractvalue { i64, i8 } %23, 0
  %25 = extractvalue { i64, i8 } %23, 1
  call void @_ZN4quic20QuicMemSliceSpanImplD1Ev(%"class.quic::QuicMemSliceSpanImpl"* nonnull %21) #14
  br label %112

26:                                               ; preds = %16
  %27 = bitcast %"class.std::__1::unique_ptr.577"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %7, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr.577"* %7 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %1, i64 0, i32 0
  %31 = tail call i64 @_ZN4quic20QuicMemSliceSpanImpl12total_lengthEv(%"class.quic::QuicMemSliceSpanImpl"* %30) #14
  %32 = call i64 @_ZN4quic11HttpEncoder24SerializeDataFrameHeaderEmPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(i64 %31, %"class.std::__1::unique_ptr.577"* nonnull %7) #14
  %33 = call zeroext i1 @_ZNK4quic10QuicStream24CanWriteNewDataAfterDataEm(%"class.quic::QuicStream"* %13, i64 %32) #14
  br i1 %33, label %34, label %105

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %36 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %35, align 8
  %37 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %36, i64 0, i32 26
  %38 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %37, align 8
  %39 = icmp eq %"class.quic::Http3DebugVisitor"* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = bitcast %"class.quic::QuicSpdySession"* %36 to %"class.quic::QuicSession"*
  %42 = bitcast %"class.quic::QuicSpdySession"** %35 to %"class.quic::QuicSession"**
  br label %56

43:                                               ; preds = %34
  %44 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %45 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %44, align 8
  %46 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %45, i64 8
  %47 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %46, align 8
  %48 = call i32 %47(%"class.quic::QuicStream"* %13) #14
  %49 = call i64 @_ZN4quic20QuicMemSliceSpanImpl12total_lengthEv(%"class.quic::QuicMemSliceSpanImpl"* %30) #14
  %50 = bitcast %"class.quic::Http3DebugVisitor"* %38 to void (%"class.quic::Http3DebugVisitor"*, i32, i64)***
  %51 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64)**, void (%"class.quic::Http3DebugVisitor"*, i32, i64)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64)** %51, i64 26
  %53 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64)** %52, align 8
  call void %53(%"class.quic::Http3DebugVisitor"* nonnull %38, i32 %48, i64 %49) #14
  %54 = bitcast %"class.quic::QuicSpdySession"** %35 to %"class.quic::QuicSession"**
  %55 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %54, align 8
  br label %56

56:                                               ; preds = %40, %43
  %57 = phi %"class.quic::QuicSession"** [ %42, %40 ], [ %54, %43 ]
  %58 = phi %"class.quic::QuicSession"* [ %41, %40 ], [ %55, %43 ]
  %59 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #14
  %60 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %58, i64 0, i32 8
  %61 = bitcast %"class.quic::QuicConnection::ScopedPacketFlusher"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 16, i1 false)
  %62 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %60, align 8
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherC1EPS0_(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %8, %"class.quic::QuicConnection"* %62) #14
  %63 = bitcast %struct.iovec* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  %64 = getelementptr inbounds %struct.iovec, %struct.iovec* %9, i64 0, i32 1
  %65 = load i64, i64* %29, align 8
  %66 = bitcast %struct.iovec* %9 to i64*
  store i64 %65, i64* %66, align 8
  store i64 %32, i64* %64, align 8
  %67 = bitcast %"class.quic::QuicMemSliceStorage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67) #14
  %68 = getelementptr inbounds %"class.quic::QuicMemSliceStorage", %"class.quic::QuicMemSliceStorage"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.quic::QuicMemSliceStorage", %"class.quic::QuicMemSliceStorage"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.quic::QuicMemSliceStorage", %"class.quic::QuicMemSliceStorage"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %71 = bitcast %"class.quic::QuicMemSliceStorage"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 48, i1 false)
  %72 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %57, align 8
  %73 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %72, i64 0, i32 8
  %74 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %73, align 8
  %75 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %74, i64 0, i32 14
  %76 = load %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicConnectionHelperInterface"** %75, align 8
  %77 = bitcast %"class.quic::QuicConnectionHelperInterface"* %76 to %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)***
  %78 = load %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)**, %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)** %78, i64 4
  %80 = load %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicBufferAllocator"* (%"class.quic::QuicConnectionHelperInterface"*)** %79, align 8
  %81 = call %"class.quic::QuicBufferAllocator"* %80(%"class.quic::QuicConnectionHelperInterface"* %76) #14
  %82 = load i64, i64* @FLAGS_quic_send_buffer_max_data_slice_size, align 8
  %83 = getelementptr inbounds %"class.quic::QuicMemSliceStorage", %"class.quic::QuicMemSliceStorage"* %10, i64 0, i32 0
  call void @_ZN4quic23QuicMemSliceStorageImplC1EPK5ioveciPNS_19QuicBufferAllocatorEm(%"class.quic::QuicMemSliceStorageImpl"* nonnull %83, %struct.iovec* nonnull %9, i32 1, %"class.quic::QuicBufferAllocator"* %81, i64 %82) #14
  %84 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  %85 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 28, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %32
  %88 = bitcast %"class.quic::QuicInterval"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #14
  %89 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 0
  store i64 %86, i64* %89, align 8
  %90 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 1
  store i64 %87, i64* %90, align 8
  call void @_ZN4quic15QuicIntervalSetImE3AddERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"* %84, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #14
  %91 = bitcast %"class.quic::QuicMemSliceSpanImpl"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #14, !noalias !25
  %92 = load %class.scoped_refptr*, %class.scoped_refptr** %68, align 8, !noalias !28
  %93 = load i64*, i64** %70, align 8, !noalias !28
  %94 = bitcast %class.scoped_refptr** %69 to i64*
  %95 = load i64, i64* %94, align 8, !noalias !28
  %96 = ptrtoint %class.scoped_refptr* %92 to i64
  %97 = sub i64 %95, %96
  %98 = ashr exact i64 %97, 3
  call void @_ZN4quic20QuicMemSliceSpanImplC1EPK13scoped_refptrIN3net8IOBufferEEPKmm(%"class.quic::QuicMemSliceSpanImpl"* nonnull %5, %class.scoped_refptr* %92, i64* %93, i64 %98) #14, !noalias !28
  %99 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %11, i64 0, i32 0
  call void @_ZN4quic20QuicMemSliceSpanImplC1ERKS0_(%"class.quic::QuicMemSliceSpanImpl"* nonnull %99, %"class.quic::QuicMemSliceSpanImpl"* nonnull dereferenceable(24) %5) #14
  call void @_ZN4quic20QuicMemSliceSpanImplD1Ev(%"class.quic::QuicMemSliceSpanImpl"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #14, !noalias !25
  %100 = call { i64, i8 } @_ZN4quic10QuicStream14WriteMemSlicesENS_16QuicMemSliceSpanEb(%"class.quic::QuicStream"* %13, %"class.quic::QuicMemSliceSpan"* nonnull %11, i1 zeroext false) #14
  call void @_ZN4quic20QuicMemSliceSpanImplD1Ev(%"class.quic::QuicMemSliceSpanImpl"* nonnull %99) #14
  %101 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %12, i64 0, i32 0
  call void @_ZN4quic20QuicMemSliceSpanImplC1ERKS0_(%"class.quic::QuicMemSliceSpanImpl"* nonnull %101, %"class.quic::QuicMemSliceSpanImpl"* dereferenceable(24) %30) #14
  %102 = call { i64, i8 } @_ZN4quic10QuicStream14WriteMemSlicesENS_16QuicMemSliceSpanEb(%"class.quic::QuicStream"* %13, %"class.quic::QuicMemSliceSpan"* nonnull %12, i1 zeroext %2) #14
  %103 = extractvalue { i64, i8 } %102, 0
  %104 = extractvalue { i64, i8 } %102, 1
  call void @_ZN4quic20QuicMemSliceSpanImplD1Ev(%"class.quic::QuicMemSliceSpanImpl"* nonnull %101) #14
  call void @_ZN4quic23QuicMemSliceStorageImplD1Ev(%"class.quic::QuicMemSliceStorageImpl"* nonnull %83) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  call void @_ZN4quic14QuicConnection19ScopedPacketFlusherD1Ev(%"class.quic::QuicConnection::ScopedPacketFlusher"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #14
  br label %105

105:                                              ; preds = %26, %56
  %106 = phi i64 [ %103, %56 ], [ 0, %26 ]
  %107 = phi i8 [ %104, %56 ], [ 0, %26 ]
  %108 = load i8*, i8** %28, align 8
  store i8* null, i8** %28, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %105
  call void @_ZdaPv(i8* nonnull %108) #18
  br label %111

111:                                              ; preds = %105, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %112

112:                                              ; preds = %111, %20
  %113 = phi i64 [ %24, %20 ], [ %106, %111 ]
  %114 = phi i8 [ %25, %20 ], [ %107, %111 ]
  %115 = insertvalue { i64, i8 } undef, i64 %113, 0
  %116 = insertvalue { i64, i8 } %115, i8 %114, 1
  ret { i64, i8 } %116
}

declare { i64, i8 } @_ZN4quic10QuicStream14WriteMemSlicesENS_16QuicMemSliceSpanEb(%"class.quic::QuicStream"*, %"class.quic::QuicMemSliceSpan"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK4quic10QuicStream24CanWriteNewDataAfterDataEm(%"class.quic::QuicStream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic14QuicSpdyStream5ReadvEPK5iovecm(%"class.quic::QuicSpdyStream"*, %struct.iovec*, i64) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %6 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %5) #14
  %7 = icmp sgt i32 %6, 51
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %10 = tail call i64 @_ZN4quic19QuicStreamSequencer5ReadvEPK5iovecm(%"class.quic::QuicStreamSequencer"* %9, %struct.iovec* %1, i64 %2) #14
  br label %17

11:                                               ; preds = %3
  %12 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  store i64 0, i64* %4, align 8
  %13 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %15 = call i64 @_ZN4quic25QuicSpdyStreamBodyManager8ReadBodyEPK5iovecmPm(%"class.quic::QuicSpdyStreamBodyManager"* %14, %struct.iovec* %1, i64 %2, i64* nonnull %4) #14
  call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %13, i64 %15) #14
  %16 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  br label %17

17:                                               ; preds = %11, %8
  %18 = phi i64 [ %16, %11 ], [ %10, %8 ]
  ret i64 %18
}

declare i64 @_ZN4quic19QuicStreamSequencer5ReadvEPK5iovecm(%"class.quic::QuicStreamSequencer"*, %struct.iovec*, i64) local_unnamed_addr #1

declare void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"*, i64) local_unnamed_addr #1

declare i64 @_ZN4quic25QuicSpdyStreamBodyManager8ReadBodyEPK5iovecmPm(%"class.quic::QuicSpdyStreamBodyManager"*, %struct.iovec*, i64, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4quic14QuicSpdyStream18GetReadableRegionsEP5iovecm(%"class.quic::QuicSpdyStream"*, %struct.iovec*, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %5 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %4) #14
  %6 = icmp sgt i32 %5, 51
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %9 = tail call i32 @_ZNK4quic19QuicStreamSequencer18GetReadableRegionsEP5iovecm(%"class.quic::QuicStreamSequencer"* %8, %struct.iovec* %1, i64 %2) #14
  br label %13

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %12 = tail call i32 @_ZNK4quic25QuicSpdyStreamBodyManager8PeekBodyEP5iovecm(%"class.quic::QuicSpdyStreamBodyManager"* %11, %struct.iovec* %1, i64 %2) #14
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %12, %10 ], [ %9, %7 ]
  ret i32 %14
}

declare i32 @_ZNK4quic19QuicStreamSequencer18GetReadableRegionsEP5iovecm(%"class.quic::QuicStreamSequencer"*, %struct.iovec*, i64) local_unnamed_addr #1

declare i32 @_ZNK4quic25QuicSpdyStreamBodyManager8PeekBodyEP5iovecm(%"class.quic::QuicSpdyStreamBodyManager"*, %struct.iovec*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream12MarkConsumedEm(%"class.quic::QuicSpdyStream"*, i64) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %4 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %3) #14
  %5 = icmp sgt i32 %4, 51
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  br i1 %5, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %9 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager14OnBodyConsumedEm(%"class.quic::QuicSpdyStreamBodyManager"* %8, i64 %1) #14
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i64 [ %9, %7 ], [ %1, %2 ]
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %6, i64 %11) #14
  ret void
}

declare i64 @_ZN4quic25QuicSpdyStreamBodyManager14OnBodyConsumedEm(%"class.quic::QuicSpdyStreamBodyManager"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic14QuicSpdyStream13IsDoneReadingEv(%"class.quic::QuicSpdyStream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 1, !range !12
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  %13 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %14 = tail call zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"* %13) #14
  %15 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 16
  %16 = load i8, i8* %15, align 2, !range !12
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 10
  %20 = load i8, i8* %19, align 8, !range !12
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 11
  %24 = load i8, i8* %23, align 1, !range !12
  %25 = icmp ne i8 %24, 0
  br label %26

26:                                               ; preds = %11, %18, %22
  %27 = phi i1 [ %25, %22 ], [ false, %11 ], [ true, %18 ]
  br i1 %12, label %28, label %30

28:                                               ; preds = %26
  %29 = and i1 %14, %27
  ret i1 %29

30:                                               ; preds = %26
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic14QuicSpdyStream22FinishedReadingHeadersEv(%"class.quic::QuicSpdyStream"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 1, !range !12
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic14QuicSpdyStream23FinishedReadingTrailersEv(%"class.quic::QuicSpdyStream"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 16
  %3 = load i8, i8* %2, align 2, !range !12
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 10
  %7 = load i8, i8* %6, align 8, !range !12
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 11
  %11 = load i8, i8* %10, align 1, !range !12
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %1, %5, %9
  %14 = phi i1 [ %12, %9 ], [ false, %1 ], [ true, %5 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic14QuicSpdyStream14HasBytesToReadEv(%"class.quic::QuicSpdyStream"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %3 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %2) #14
  %4 = icmp sgt i32 %3, 51
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %7 = tail call zeroext i1 @_ZNK4quic19QuicStreamSequencer14HasBytesToReadEv(%"class.quic::QuicStreamSequencer"* %6) #14
  br label %14

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br label %14

14:                                               ; preds = %8, %5
  %15 = phi i1 [ %13, %8 ], [ %7, %5 ]
  ret i1 %15
}

declare zeroext i1 @_ZNK4quic19QuicStreamSequencer14HasBytesToReadEv(%"class.quic::QuicStreamSequencer"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic14QuicSpdyStream20MarkTrailersConsumedEv(%"class.quic::QuicSpdyStream"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 11
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4quic14QuicSpdyStream21total_body_bytes_readEv(%"class.quic::QuicSpdyStream"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %3 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %2) #14
  %4 = icmp sgt i32 %3, 51
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 1
  %7 = load i64, i64* %6, align 8
  br label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %10 = tail call i64 @_ZNK4quic19QuicStreamSequencer16NumBytesConsumedEv(%"class.quic::QuicStreamSequencer"* %9) #14
  br label %11

11:                                               ; preds = %8, %5
  %12 = phi i64 [ %7, %5 ], [ %10, %8 ]
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream17ConsumeHeaderListEv(%"class.quic::QuicSpdyStream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8
  tail call void @_ZN4quic14QuicHeaderList5ClearEv(%"class.quic::QuicHeaderList"* %2) #14
  %3 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 1, !range !12
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %41, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %12, label %41

12:                                               ; preds = %6
  %13 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %14 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %13) #14
  %15 = icmp sgt i32 %14, 51
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN4quic19QuicStreamSequencer12SetUnblockedEv(%"class.quic::QuicStreamSequencer"* %17) #14
  br label %41

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*)***
  %26 = load void (%"class.quic::QuicSpdyStream"*)**, void (%"class.quic::QuicSpdyStream"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %26, i64 33
  %28 = load void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %27, align 8
  tail call void %28(%"class.quic::QuicSpdyStream"* %0) #14
  br label %41

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %31 = tail call zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"* %30) #14
  br i1 %31, label %32, label %41

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 3
  %34 = load i8, i8* %33, align 8, !range !12
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %37 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*)***
  %38 = load void (%"class.quic::QuicSpdyStream"*)**, void (%"class.quic::QuicSpdyStream"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %38, i64 33
  %40 = load void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %39, align 8
  tail call void %40(%"class.quic::QuicSpdyStream"* %0) #14
  br label %41

41:                                               ; preds = %1, %32, %6, %16, %24, %36, %29
  ret void
}

declare void @_ZN4quic14QuicHeaderList5ClearEv(%"class.quic::QuicHeaderList"*) local_unnamed_addr #1

declare void @_ZN4quic19QuicStreamSequencer12SetUnblockedEv(%"class.quic::QuicStreamSequencer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream23OnStreamHeadersPriorityERKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicSpdyStream"*, %"class.spdy::StreamPrecedence"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStream11SetPriorityERKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicStream"* %3, %"class.spdy::StreamPrecedence"* dereferenceable(16) %1) #14
  ret void
}

declare void @_ZN4quic10QuicStream11SetPriorityERKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicStream"*, %"class.spdy::StreamPrecedence"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream18OnStreamHeaderListEbmRKNS_14QuicHeaderListE(%"class.quic::QuicSpdyStream"*, i1 zeroext, i64, %"class.quic::QuicHeaderList"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::optional.404", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca [15 x i8], align 8
  %9 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %11 = bitcast %"class.quic::QuicSpdySession"** %10 to %"class.quic::QuicSession"**
  %12 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %11, align 8
  %13 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %12, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #14, !alias.scope !31
  %14 = load i8, i8* %13, align 8, !range !12, !noalias !31
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %12, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1, !noalias !31
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #14
  br label %31

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !noalias !31
  %29 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %12, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !31
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %18, i8* %28, i64 %30) #14
  br label %31

31:                                               ; preds = %26, %23
  store i8 1, i8* %9, align 8, !alias.scope !31
  %32 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %31, %37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #14
  br label %215

41:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #14
  %42 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #14
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #14
  %45 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %3, i64 0, i32 1, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %3, i64 0, i32 1, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %46, %48
  br i1 %49, label %165, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %3, i64 0, i32 1, i32 2, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = ptrtoint %"class.std::__1::basic_string"* %7 to i64
  %59 = bitcast %"class.std::__1::basic_string"* %7 to i64*
  %60 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %3, i64 0, i32 1, i32 2, i32 1
  br label %61

61:                                               ; preds = %50, %158
  %62 = phi i64 [ %46, %50 ], [ %163, %158 ]
  %63 = load %"struct.std::__1::pair.636"*, %"struct.std::__1::pair.636"** %51, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %63, i64 %62
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  %65 = bitcast %"struct.std::__1::pair.636"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %61
  %70 = zext i8 %67 to i64
  %71 = ptrtoint %"struct.std::__1::pair.636"* %64 to i64
  br label %79

72:                                               ; preds = %61
  %73 = bitcast %"struct.std::__1::pair.636"* %64 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %63, i64 %62, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = icmp sgt i64 %76, -1
  br i1 %77, label %79, label %78, !prof !2

78:                                               ; preds = %72
  call void @llvm.trap() #14
  unreachable

79:                                               ; preds = %69, %72
  %80 = phi i64 [ %74, %72 ], [ %71, %69 ]
  %81 = phi i64 [ %76, %72 ], [ %70, %69 ]
  %82 = inttoptr i64 %80 to i8*
  %83 = icmp eq i64 %80, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false) #14, !alias.scope !34
  br i1 %83, label %84, label %85

84:                                               ; preds = %79
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #14, !alias.scope !39
  br label %100

85:                                               ; preds = %79
  %86 = icmp ult i64 %81, 23
  br i1 %86, label %92, label %87

87:                                               ; preds = %85
  %88 = add nuw i64 %81, 16
  %89 = and i64 %88, -16
  %90 = call i8* @_Znwm(i64 %89) #18
  store i8* %90, i8** %53, align 8, !alias.scope !39
  %91 = or i64 %89, -9223372036854775808
  store i64 %91, i64* %55, align 8, !alias.scope !39
  store i64 %81, i64* %54, align 8, !alias.scope !39
  br label %95

92:                                               ; preds = %85
  %93 = trunc i64 %81 to i8
  store i8 %93, i8* %57, align 1, !alias.scope !39
  %94 = icmp eq i64 %81, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %92, %87
  %96 = phi i8* [ %90, %87 ], [ %52, %92 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %96, i8* nonnull align 1 %82, i64 %81, i1 false) #14
  br label %97

97:                                               ; preds = %95, %92
  %98 = phi i8* [ %52, %92 ], [ %96, %95 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 %81
  store i8 0, i8* %99, align 1
  br label %100

100:                                              ; preds = %84, %97
  call void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %7) #14
  %101 = load i8, i8* %57, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = zext i8 %101 to i64
  br label %110

105:                                              ; preds = %100
  %106 = load i64, i64* %59, align 8
  %107 = load i64, i64* %54, align 8
  %108 = icmp sgt i64 %107, -1
  br i1 %108, label %110, label %109, !prof !2

109:                                              ; preds = %105
  call void @llvm.trap() #14
  unreachable

110:                                              ; preds = %103, %105
  %111 = phi i64 [ %106, %105 ], [ %58, %103 ]
  %112 = phi i64 [ %107, %105 ], [ %104, %103 ]
  %113 = load i8*, i8** getelementptr inbounds (%"class.absl::string_view", %"class.absl::string_view"* @_ZN4quic20kUserAgentHeaderNameE, i64 0, i32 0), align 8
  %114 = load i64, i64* getelementptr inbounds (%"class.absl::string_view", %"class.absl::string_view"* @_ZN4quic20kUserAgentHeaderNameE, i64 0, i32 1), align 8
  %115 = inttoptr i64 %111 to i8*
  %116 = icmp eq i64 %112, %114
  br i1 %116, label %117, label %122

117:                                              ; preds = %110
  %118 = icmp eq i64 %112, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %117
  %120 = call i32 @bcmp(i8* %115, i8* %113, i64 %112) #14
  %121 = icmp eq i32 %120, 0
  br label %122

122:                                              ; preds = %110, %117, %119
  %123 = phi i1 [ false, %110 ], [ true, %117 ], [ %121, %119 ]
  br i1 %102, label %124, label %126

124:                                              ; preds = %122
  %125 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %125) #18
  br label %126

126:                                              ; preds = %122, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  br i1 %123, label %127, label %158

127:                                              ; preds = %126
  %128 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %63, i64 %62, i32 1
  %129 = icmp eq %"class.std::__1::basic_string"* %6, %128
  br i1 %129, label %165, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  %135 = bitcast %"class.std::__1::basic_string"* %128 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %134, label %148, label %139

139:                                              ; preds = %130
  br i1 %138, label %142, label %140

140:                                              ; preds = %139
  %141 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 %141, i64 24, i1 false) #14
  br label %165

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %63, i64 %62, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %144, i64 %146) #14
  br label %165

148:                                              ; preds = %130
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %63, i64 %62, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  %154 = zext i8 %137 to i64
  %155 = select i1 %138, i8* %150, i8* %153
  %156 = select i1 %138, i64 %152, i64 %154
  %157 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %155, i64 %156) #14
  br label %165

158:                                              ; preds = %126
  %159 = load i64, i64* %60, align 8
  %160 = add i64 %159, -1
  %161 = icmp eq i64 %160, %62
  %162 = add i64 %62, 1
  %163 = select i1 %161, i64 0, i64 %162
  %164 = icmp eq i64 %163, %48
  br i1 %164, label %165, label %61

165:                                              ; preds = %158, %41, %148, %142, %140, %127
  %166 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %10, align 8
  %167 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast i64* %44 to i8*
  %170 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %170, i8* align 8 %169, i64 15, i1 false)
  %171 = getelementptr inbounds i8, i8* %42, i64 23
  %172 = load i8, i8* %171, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #14
  %173 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %166, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %174 = load i8, i8* %173, align 8, !range !12
  %175 = icmp eq i8 %174, 0
  %176 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %166, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %175, label %192, label %177

177:                                              ; preds = %165
  %178 = bitcast %"class.std::__1::basic_string"* %176 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #18
  br label %185

185:                                              ; preds = %182, %177
  %186 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %166, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = bitcast i8** %186 to i64*
  store i64 %168, i64* %187, align 8
  %188 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %166, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = bitcast i64* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* nonnull align 8 %170, i64 15, i1 false)
  %190 = bitcast %"class.quic::QuicSpdySession"* %166 to i8*
  %191 = getelementptr inbounds i8, i8* %190, i64 2855
  store i8 %172, i8* %191, align 1
  br label %199

192:                                              ; preds = %165
  %193 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %166, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = bitcast i8** %193 to i64*
  store i64 %168, i64* %194, align 8
  %195 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %166, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %196 = bitcast i64* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* nonnull align 8 %170, i64 15, i1 false)
  %197 = bitcast %"class.quic::QuicSpdySession"* %166 to i8*
  %198 = getelementptr inbounds i8, i8* %197, i64 2855
  store i8 %172, i8* %198, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 15, i1 false)
  store i8 1, i8* %173, align 8
  br label %199

199:                                              ; preds = %192, %185
  %200 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %166, i64 0, i32 0, i32 8
  %201 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %200, align 8
  %202 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %201, i64 0, i32 80, i32 10
  %203 = load %"class.quic::LossDetectionInterface"*, %"class.quic::LossDetectionInterface"** %202, align 8
  %204 = bitcast %"class.quic::LossDetectionInterface"* %203 to void (%"class.quic::LossDetectionInterface"*)***
  %205 = load void (%"class.quic::LossDetectionInterface"*)**, void (%"class.quic::LossDetectionInterface"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.quic::LossDetectionInterface"*)*, void (%"class.quic::LossDetectionInterface"*)** %205, i64 8
  %207 = load void (%"class.quic::LossDetectionInterface"*)*, void (%"class.quic::LossDetectionInterface"*)** %206, align 8
  call void %207(%"class.quic::LossDetectionInterface"* %203) #14
  %208 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %199
  %213 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %213) #18
  br label %214

214:                                              ; preds = %199, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #14
  br label %215

215:                                              ; preds = %40, %214
  %216 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %217 = call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %216) #14
  %218 = icmp sgt i32 %217, 51
  br i1 %218, label %219, label %223

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 7
  %221 = load i8, i8* %220, align 2, !range !12
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %232

223:                                              ; preds = %219, %215
  %224 = call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %216) #14
  %225 = icmp sgt i32 %224, 51
  br i1 %225, label %265, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %3, i64 0, i32 1, i32 0
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %3, i64 0, i32 1, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = icmp eq i64 %228, %230
  br i1 %231, label %232, label %265

232:                                              ; preds = %219, %226
  %233 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*)***
  %234 = load void (%"class.quic::QuicSpdyStream"*)**, void (%"class.quic::QuicSpdyStream"*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %234, i64 40
  %236 = load void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %235, align 8
  call void %236(%"class.quic::QuicSpdyStream"* %0) #14
  %237 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %238 = load i8, i8* %237, align 1, !range !12
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %246, label %240

240:                                              ; preds = %232
  %241 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 0
  %242 = load i64, i64* %241, align 8
  %243 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 1
  %244 = load i64, i64* %243, align 8
  %245 = icmp eq i64 %242, %244
  br label %246

246:                                              ; preds = %240, %232
  %247 = phi i1 [ false, %232 ], [ %245, %240 ]
  %248 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %249 = call zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"* %248) #14
  %250 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 16
  %251 = load i8, i8* %250, align 2, !range !12
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %265, label %253

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 10
  %255 = load i8, i8* %254, align 8, !range !12
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %261, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 11
  %259 = load i8, i8* %258, align 1, !range !12
  %260 = icmp ne i8 %259, 0
  br label %261

261:                                              ; preds = %257, %253
  %262 = phi i1 [ %260, %257 ], [ true, %253 ]
  %263 = and i1 %249, %262
  %264 = and i1 %247, %263
  br i1 %264, label %277, label %265

265:                                              ; preds = %246, %261, %226, %223
  %266 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %267 = load i8, i8* %266, align 1, !range !12
  %268 = icmp eq i8 %267, 0
  %269 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)***
  %270 = load void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)**, void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)*** %269, align 8
  br i1 %268, label %271, label %274

271:                                              ; preds = %265
  %272 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)** %270, i64 41
  %273 = load void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)** %272, align 8
  call void %273(%"class.quic::QuicSpdyStream"* %0, i1 zeroext %1, i64 %2, %"class.quic::QuicHeaderList"* dereferenceable(72) %3) #14
  br label %277

274:                                              ; preds = %265
  %275 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)** %270, i64 42
  %276 = load void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)** %275, align 8
  call void %276(%"class.quic::QuicSpdyStream"* %0, i1 zeroext %1, i64 %2, %"class.quic::QuicHeaderList"* dereferenceable(72) %3) #14
  br label %277

277:                                              ; preds = %261, %274, %271
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream16OnHeadersDecodedENS_14QuicHeaderListEb(%"class.quic::QuicSpdyStream"*, %"class.quic::QuicHeaderList"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.quic::QuicHeaderList", align 8
  %5 = alloca %"class.quic::QuicHeaderList", align 8
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 7
  store i8 %6, i8* %7, align 2
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %8, align 8
  store %"class.quic::QpackDecodedHeadersAccumulator"* null, %"class.quic::QpackDecodedHeadersAccumulator"** %8, align 8
  %10 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %9 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %13 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %13, i64 1
  %15 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %14, align 8
  tail call void %15(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %9) #14
  br label %16

16:                                               ; preds = %3, %11
  %17 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %1, i64 0, i32 5
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.quic::QuicHeaderList", %"class.quic::QuicHeaderList"* %1, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  tail call void @_ZN4quic15QuicSpdySession34LogHeaderCompressionRatioHistogramEbbmm(i1 zeroext true, i1 zeroext false, i64 %18, i64 %20) #14
  %21 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %22 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %21, align 8
  %23 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %22, i64 0, i32 18
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %22, i64 0, i32 26
  %26 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %25, align 8
  %27 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %28 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %27) #14
  %29 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %28) #14
  %30 = icmp eq i32 %24, %29
  %31 = icmp ne %"class.quic::Http3DebugVisitor"* %26, null
  br i1 %30, label %32, label %50

32:                                               ; preds = %16
  br i1 %31, label %33, label %43

33:                                               ; preds = %32
  %34 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %35 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %35, i64 8
  %37 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %36, align 8
  %38 = tail call i32 %37(%"class.quic::QuicStream"* %27) #14
  call void @_ZN4quic14QuicHeaderListC1ERKS0_(%"class.quic::QuicHeaderList"* nonnull %4, %"class.quic::QuicHeaderList"* dereferenceable(72) %1) #14
  %39 = bitcast %"class.quic::Http3DebugVisitor"* %26 to void (%"class.quic::Http3DebugVisitor"*, i32, %"class.quic::QuicHeaderList"*)***
  %40 = load void (%"class.quic::Http3DebugVisitor"*, i32, %"class.quic::QuicHeaderList"*)**, void (%"class.quic::Http3DebugVisitor"*, i32, %"class.quic::QuicHeaderList"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::Http3DebugVisitor"*, i32, %"class.quic::QuicHeaderList"*)** %40, i64 18
  %42 = load void (%"class.quic::Http3DebugVisitor"*, i32, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::Http3DebugVisitor"*, i32, %"class.quic::QuicHeaderList"*)** %41, align 8
  call void %42(%"class.quic::Http3DebugVisitor"* nonnull %26, i32 %38, %"class.quic::QuicHeaderList"* nonnull %4) #14
  call void @_ZN4quic14QuicHeaderListD1Ev(%"class.quic::QuicHeaderList"* nonnull %4) #14
  br label %43

43:                                               ; preds = %33, %32
  %44 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 9
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)***
  %47 = load void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)**, void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)** %47, i64 31
  %49 = load void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::QuicSpdyStream"*, i1, i64, %"class.quic::QuicHeaderList"*)** %48, align 8
  call void %49(%"class.quic::QuicSpdyStream"* %0, i1 zeroext false, i64 %45, %"class.quic::QuicHeaderList"* dereferenceable(72) %1) #14
  br label %63

50:                                               ; preds = %16
  br i1 %31, label %51, label %61

51:                                               ; preds = %50
  %52 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %53 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %53, i64 8
  %55 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %54, align 8
  %56 = tail call i32 %55(%"class.quic::QuicStream"* %27) #14
  call void @_ZN4quic14QuicHeaderListC1ERKS0_(%"class.quic::QuicHeaderList"* nonnull %5, %"class.quic::QuicHeaderList"* dereferenceable(72) %1) #14
  %57 = bitcast %"class.quic::Http3DebugVisitor"* %26 to void (%"class.quic::Http3DebugVisitor"*, i32, i32, %"class.quic::QuicHeaderList"*)***
  %58 = load void (%"class.quic::Http3DebugVisitor"*, i32, i32, %"class.quic::QuicHeaderList"*)**, void (%"class.quic::Http3DebugVisitor"*, i32, i32, %"class.quic::QuicHeaderList"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, i32, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::Http3DebugVisitor"*, i32, i32, %"class.quic::QuicHeaderList"*)** %58, i64 20
  %60 = load void (%"class.quic::Http3DebugVisitor"*, i32, i32, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::Http3DebugVisitor"*, i32, i32, %"class.quic::QuicHeaderList"*)** %59, align 8
  call void %60(%"class.quic::Http3DebugVisitor"* nonnull %26, i32 %56, i32 %24, %"class.quic::QuicHeaderList"* nonnull %5) #14
  call void @_ZN4quic14QuicHeaderListD1Ev(%"class.quic::QuicHeaderList"* nonnull %5) #14
  br label %61

61:                                               ; preds = %51, %50
  %62 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %21, align 8
  call void @_ZN4quic15QuicSpdySession12OnHeaderListERKNS_14QuicHeaderListE(%"class.quic::QuicSpdySession"* %62, %"class.quic::QuicHeaderList"* dereferenceable(72) %1) #14
  br label %63

63:                                               ; preds = %61, %43
  %64 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 5
  %65 = load i8, i8* %64, align 8, !range !12
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  store i8 0, i8* %64, align 8
  %68 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*)***
  %69 = load void (%"class.quic::QuicSpdyStream"*)**, void (%"class.quic::QuicSpdyStream"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %69, i64 2
  %71 = load void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %70, align 8
  call void %71(%"class.quic::QuicSpdyStream"* %0) #14
  br label %72

72:                                               ; preds = %63, %67
  ret void
}

declare void @_ZN4quic15QuicSpdySession34LogHeaderCompressionRatioHistogramEbbmm(i1 zeroext, i1 zeroext, i64, i64) local_unnamed_addr #1

declare i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32) local_unnamed_addr #1

declare void @_ZN4quic14QuicHeaderListC1ERKS0_(%"class.quic::QuicHeaderList"*, %"class.quic::QuicHeaderList"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession12OnHeaderListERKNS_14QuicHeaderListE(%"class.quic::QuicSpdySession"*, %"class.quic::QuicHeaderList"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn560_N4quic14QuicSpdyStream16OnHeadersDecodedENS_14QuicHeaderListEb(%"class.quic::QuicSpdyStream"*, %"class.quic::QuicHeaderList"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 -1, i32 0, i32 37
  %5 = bitcast i8* %4 to %"class.quic::QuicSpdyStream"*
  tail call void @_ZN4quic14QuicSpdyStream16OnHeadersDecodedENS_14QuicHeaderListEb(%"class.quic::QuicSpdyStream"* %5, %"class.quic::QuicHeaderList"* %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream21OnHeaderDecodingErrorEN4absl11string_viewE(%"class.quic::QuicSpdyStream"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca [6 x %"class.absl::string_view"], align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = ptrtoint i8* %1 to i64
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %9 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %8, align 8
  store %"class.quic::QpackDecodedHeadersAccumulator"* null, %"class.quic::QpackDecodedHeadersAccumulator"** %8, align 8
  %10 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %9 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %13 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %13, i64 1
  %15 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %14, align 8
  tail call void %15(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %9) #14
  br label %16

16:                                               ; preds = %3, %11
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  %21 = load i8, i8* %19, align 1, !range !12
  %22 = icmp eq i8 %21, 0
  %23 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #14
  %24 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %25 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %26 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %26, i64 8
  %28 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %27, align 8
  %29 = tail call i32 %28(%"class.quic::QuicStream"* %24) #14
  %30 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 1, i64 0
  %31 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %29, i8* %30) #14
  %32 = ptrtoint i8* %31 to i64
  %33 = ptrtoint i8* %30 to i64
  %34 = sub i64 %32, %33
  %35 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* %30, i8** %35, align 8
  %36 = icmp sgt i64 %34, -1
  br i1 %36, label %38, label %37, !prof !2

37:                                               ; preds = %16
  call void @llvm.trap() #14
  unreachable

38:                                               ; preds = %16
  %39 = select i1 %22, i64 7, i64 8
  %40 = select i1 %22, i64 ptrtoint ([8 x i8]* @.str.10 to i64), i64 ptrtoint ([9 x i8]* @.str.9 to i64)
  %41 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 %34, i64* %41, align 8
  %42 = bitcast [6 x %"class.absl::string_view"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %42) #14, !noalias !42
  %43 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 0
  %44 = bitcast [6 x %"class.absl::string_view"]* %4 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([16 x i8]* @.str.8 to i64), i64 15>, <2 x i64>* %44, align 16, !noalias !42
  %45 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 1, i32 0
  %46 = bitcast i8** %45 to i64*
  store i64 %40, i64* %46, align 16, !noalias !42
  %47 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 1, i32 1
  store i64 %39, i64* %47, align 8, !noalias !42
  %48 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 2, i32 0
  %49 = bitcast i8** %48 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([12 x i8]* @.str.11 to i64), i64 11>, <2 x i64>* %49, align 16, !noalias !42
  %50 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 3, i32 0
  %51 = bitcast i8** %50 to i64*
  store i64 %33, i64* %51, align 16, !noalias !42
  %52 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 3, i32 1
  store i64 %34, i64* %52, align 8, !noalias !42
  %53 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 4, i32 0
  %54 = bitcast i8** %53 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([3 x i8]* @.str.12 to i64), i64 2>, <2 x i64>* %54, align 16, !noalias !42
  %55 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 5, i32 0
  %56 = bitcast i8** %55 to i64*
  store i64 %7, i64* %56, align 16, !noalias !42
  %57 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %4, i64 0, i64 5, i32 1
  store i64 %2, i64* %57, align 8, !noalias !42
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::string_view"* nonnull %43, i64 6) #14
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %42) #14, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #14
  %58 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %59 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %59, i64 6
  %61 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %60, align 8
  call void %61(%"class.quic::QuicStream"* %24, i32 126, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %62 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %38
  %67 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %67) #18
  br label %68

68:                                               ; preds = %38, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn560_N4quic14QuicSpdyStream21OnHeaderDecodingErrorEN4absl11string_viewE(%"class.quic::QuicSpdyStream"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 -1, i32 0, i32 37
  %5 = bitcast i8* %4 to %"class.quic::QuicSpdyStream"*
  tail call void @_ZN4quic14QuicSpdyStream21OnHeaderDecodingErrorEN4absl11string_viewE(%"class.quic::QuicSpdyStream"* %5, i8* %1, i64 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream28MaybeSendPriorityUpdateFrameEv(%"class.quic::QuicSpdyStream"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.quic::PriorityUpdateFrame", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %7 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %6) #14
  %8 = icmp sgt i32 %7, 51
  br i1 %8, label %9, label %73

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 4
  %11 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %10, align 8
  %12 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %11, i64 0, i32 9
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %73

15:                                               ; preds = %9
  %16 = tail call dereferenceable(16) %"class.spdy::StreamPrecedence"* @_ZNK4quic10QuicStream10precedenceEv(%"class.quic::QuicStream"* %6) #14
  %17 = getelementptr inbounds %"class.spdy::StreamPrecedence", %"class.spdy::StreamPrecedence"* %16, i64 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !12
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.spdy::StreamPrecedence", %"class.spdy::StreamPrecedence"* %16, i64 0, i32 1
  %22 = bitcast %union.anon.409* %21 to i8*
  %23 = load i8, i8* %22, align 4
  br label %28

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.spdy::StreamPrecedence", %"class.spdy::StreamPrecedence"* %16, i64 0, i32 1, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = tail call zeroext i8 @_ZN4spdy26Http2WeightToSpdy3PriorityEi(i32 %26) #14
  br label %28

28:                                               ; preds = %20, %24
  %29 = phi i8 [ %23, %20 ], [ %27, %24 ]
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 21
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, %30
  br i1 %33, label %73, label %34

34:                                               ; preds = %28
  store i32 %30, i32* %31, align 8
  %35 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #14
  %36 = bitcast %"struct.quic::PriorityUpdateFrame"* %2 to i64*
  store i64 -6148914691236517206, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 1
  %38 = getelementptr inbounds i64, i64* %37, i64 1
  %39 = bitcast i64* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #14
  store i8 0, i8* %35, align 8
  %40 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %41 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %41, i64 8
  %43 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %42, align 8
  %44 = tail call i32 %43(%"class.quic::QuicStream"* %6) #14
  %45 = zext i32 %44 to i64
  store i64 %45, i64* %37, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #14
  %47 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %47) #14
  %48 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 2, i64* %49, align 8
  %50 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #14
  %51 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 1, i64 0
  %52 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32 %30, i8* %51) #14
  %53 = ptrtoint i8* %52 to i64
  %54 = ptrtoint i8* %51 to i64
  %55 = sub i64 %53, %54
  %56 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* %51, i8** %56, align 8
  %57 = icmp sgt i64 %55, -1
  br i1 %57, label %59, label %58, !prof !2

58:                                               ; preds = %34
  call void @llvm.trap() #14
  unreachable

59:                                               ; preds = %34
  %60 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 %55, i64* %60, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %61 = getelementptr inbounds %"struct.quic::PriorityUpdateFrame", %"struct.quic::PriorityUpdateFrame"* %2, i64 0, i32 2
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %65 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %46, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %47) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #14
  call void @_ZN4quic15QuicSpdySession24WriteHttp3PriorityUpdateERKNS_19PriorityUpdateFrameE(%"class.quic::QuicSpdySession"* %65, %"struct.quic::PriorityUpdateFrame"* nonnull dereferenceable(40) %2) #14
  %67 = load i8, i8* %63, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %59, %69
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #14
  br label %73

73:                                               ; preds = %72, %28, %9, %1
  ret void
}

declare dereferenceable(16) %"class.spdy::StreamPrecedence"* @_ZNK4quic10QuicStream10precedenceEv(%"class.quic::QuicStream"*) local_unnamed_addr #1

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession24WriteHttp3PriorityUpdateERKNS_19PriorityUpdateFrameE(%"class.quic::QuicSpdySession"*, %"struct.quic::PriorityUpdateFrame"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream17OnHeadersTooLargeEv(%"class.quic::QuicSpdyStream"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*, i32)***
  %3 = load void (%"class.quic::QuicSpdyStream"*, i32)**, void (%"class.quic::QuicSpdyStream"*, i32)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*, i32)*, void (%"class.quic::QuicSpdyStream"*, i32)** %3, i64 5
  %5 = load void (%"class.quic::QuicSpdyStream"*, i32)*, void (%"class.quic::QuicSpdyStream"*, i32)** %4, align 8
  tail call void %5(%"class.quic::QuicSpdyStream"* %0, i32 15) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream24OnInitialHeadersCompleteEbmRKNS_14QuicHeaderListE(%"class.quic::QuicSpdyStream"*, i1 zeroext, i64, %"class.quic::QuicHeaderList"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.quic::QuicStreamFrame", align 8
  %6 = alloca %"struct.quic::QuicStreamFrame", align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8
  %9 = tail call dereferenceable(72) %"class.quic::QuicHeaderList"* @_ZN4quic14QuicHeaderListaSERKS0_(%"class.quic::QuicHeaderList"* %8, %"class.quic::QuicHeaderList"* dereferenceable(72) %3) #14
  tail call void @_ZN4quic14QuicSpdyStream39MaybeProcessReceivedWebTransportHeadersEv(%"class.quic::QuicSpdyStream"* %0)
  %10 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %11 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %10) #14
  %12 = icmp sgt i32 %11, 51
  br i1 %12, label %13, label %26

13:                                               ; preds = %4
  br i1 %1, label %14, label %53

14:                                               ; preds = %13
  %15 = getelementptr inbounds %"struct.quic::QuicStreamFrame", %"struct.quic::QuicStreamFrame"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %17 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %17, i64 8
  %19 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %18, align 8
  %20 = tail call i32 %19(%"class.quic::QuicStream"* %10) #14
  %21 = tail call i64 @_ZNK4quic10QuicStream28highest_received_byte_offsetEv(%"class.quic::QuicStream"* %10) #14
  call void @_ZN4quic15QuicStreamFrameC1EjbmN4absl11string_viewE(%"struct.quic::QuicStreamFrame"* nonnull %5, i32 %20, i1 zeroext true, i64 %21, i8* null, i64 0) #14
  %22 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)***
  %23 = load void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)**, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)** %23, i64 10
  %25 = load void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)** %24, align 8
  call void %25(%"class.quic::QuicStream"* %10, %"struct.quic::QuicStreamFrame"* nonnull dereferenceable(24) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  br label %53

26:                                               ; preds = %4
  br i1 %1, label %27, label %42

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 17
  %29 = load i8, i8* %28, align 1, !range !12
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %42

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.quic::QuicStreamFrame", %"struct.quic::QuicStreamFrame"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #14
  %33 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %34 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %34, i64 8
  %36 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %35, align 8
  %37 = tail call i32 %36(%"class.quic::QuicStream"* %10) #14
  call void @_ZN4quic15QuicStreamFrameC1EjbmN4absl11string_viewE(%"struct.quic::QuicStreamFrame"* nonnull %6, i32 %37, i1 zeroext true, i64 0, i8* null, i64 0) #14
  %38 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)***
  %39 = load void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)**, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)** %39, i64 10
  %41 = load void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)** %40, align 8
  call void %41(%"class.quic::QuicStream"* %10, %"struct.quic::QuicStreamFrame"* nonnull dereferenceable(24) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #14
  br label %42

42:                                               ; preds = %27, %31, %26
  %43 = load i8, i8* %7, align 1, !range !12
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  call void @_ZN4quic19QuicStreamSequencer12SetUnblockedEv(%"class.quic::QuicStreamSequencer"* %52) #14
  br label %53

53:                                               ; preds = %42, %13, %14, %51, %45
  ret void
}

declare dereferenceable(72) %"class.quic::QuicHeaderList"* @_ZN4quic14QuicHeaderListaSERKS0_(%"class.quic::QuicHeaderList"*, %"class.quic::QuicHeaderList"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream39MaybeProcessReceivedWebTransportHeadersEv(%"class.quic::QuicSpdyStream"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %6 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %7 = tail call zeroext i1 @_ZN4quic15QuicSpdySession20SupportsWebTransportEv(%"class.quic::QuicSpdySession"* %6) #14
  br i1 %7, label %8, label %260

8:                                                ; preds = %1
  %9 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 4
  %11 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %10, align 8
  %12 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %11, i64 0, i32 9
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %260

15:                                               ; preds = %8
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #14
  %19 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #14
  %22 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %23, %25
  br i1 %26, label %245, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 2, i32 0
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = bitcast i64* %2 to i8*
  %34 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 2, i32 1
  br label %35

35:                                               ; preds = %27, %191
  %36 = phi i64 [ -6148914691236517206, %27 ], [ %193, %191 ]
  %37 = phi i8 [ 0, %27 ], [ %192, %191 ]
  %38 = phi i64 [ %23, %27 ], [ %198, %191 ]
  %39 = load %"struct.std::__1::pair.636"*, %"struct.std::__1::pair.636"** %28, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38
  %41 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %40, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1
  %43 = bitcast %"struct.std::__1::pair.636"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = icmp eq i64 %50, 7
  br i1 %51, label %52, label %97

52:                                               ; preds = %35
  %53 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %41, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i64 7) #14
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %97

55:                                               ; preds = %52
  %56 = load i8, i8* %30, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i64, i64* %18, align 8
  %59 = zext i8 %56 to i64
  %60 = select i1 %57, i64 %58, i64 %59
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %245

62:                                               ; preds = %55
  %63 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  br label %72

70:                                               ; preds = %62
  %71 = zext i8 %65 to i64
  br label %72

72:                                               ; preds = %67, %70
  %73 = phi i64 [ %69, %67 ], [ %71, %70 ]
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %245, label %75

75:                                               ; preds = %72
  %76 = icmp eq %"class.std::__1::basic_string"* %3, %42
  br i1 %76, label %97, label %77

77:                                               ; preds = %75
  br i1 %57, label %87, label %78

78:                                               ; preds = %77
  br i1 %66, label %81, label %79

79:                                               ; preds = %78
  %80 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %80, i64 24, i1 false) #14
  br label %97

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %83, i64 %85) #14
  br label %97

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %93 = zext i8 %65 to i64
  %94 = select i1 %66, i8* %89, i8* %92
  %95 = select i1 %66, i64 %91, i64 %93
  %96 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %94, i64 %95) #14
  br label %97

97:                                               ; preds = %35, %87, %81, %79, %75, %52
  %98 = load i8, i8* %44, align 1
  %99 = icmp slt i8 %98, 0
  %100 = load i64, i64* %47, align 8
  %101 = zext i8 %98 to i64
  %102 = select i1 %99, i64 %100, i64 %101
  %103 = icmp eq i64 %102, 9
  br i1 %103, label %104, label %149

104:                                              ; preds = %97
  %105 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %41, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i64 9) #14
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %149

107:                                              ; preds = %104
  %108 = load i8, i8* %32, align 1
  %109 = icmp slt i8 %108, 0
  %110 = load i64, i64* %21, align 8
  %111 = zext i8 %108 to i64
  %112 = select i1 %109, i64 %110, i64 %111
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %245

114:                                              ; preds = %107
  %115 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  br label %124

122:                                              ; preds = %114
  %123 = zext i8 %117 to i64
  br label %124

124:                                              ; preds = %119, %122
  %125 = phi i64 [ %121, %119 ], [ %123, %122 ]
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %245, label %127

127:                                              ; preds = %124
  %128 = icmp eq %"class.std::__1::basic_string"* %4, %42
  br i1 %128, label %149, label %129

129:                                              ; preds = %127
  br i1 %109, label %139, label %130

130:                                              ; preds = %129
  br i1 %118, label %133, label %131

131:                                              ; preds = %130
  %132 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %132, i64 24, i1 false) #14
  br label %149

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %135, i64 %137) #14
  br label %149

139:                                              ; preds = %129
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %145 = zext i8 %117 to i64
  %146 = select i1 %118, i8* %141, i8* %144
  %147 = select i1 %118, i64 %143, i64 %145
  %148 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %146, i64 %147) #14
  br label %149

149:                                              ; preds = %97, %139, %133, %131, %127, %104
  %150 = load i8, i8* %44, align 1
  %151 = icmp slt i8 %150, 0
  %152 = load i64, i64* %47, align 8
  %153 = zext i8 %150 to i64
  %154 = select i1 %151, i64 %152, i64 %153
  %155 = icmp eq i64 %154, 16
  br i1 %155, label %156, label %191

156:                                              ; preds = %149
  %157 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %41, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i64 16) #14
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %191

159:                                              ; preds = %156
  %160 = icmp eq i8 %37, 0
  br i1 %160, label %161, label %245

161:                                              ; preds = %159
  %162 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  br label %171

169:                                              ; preds = %161
  %170 = zext i8 %164 to i64
  br label %171

171:                                              ; preds = %166, %169
  %172 = phi i64 [ %168, %166 ], [ %170, %169 ]
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %245, label %174

174:                                              ; preds = %171
  br i1 %165, label %178, label %175

175:                                              ; preds = %174
  %176 = zext i8 %164 to i64
  %177 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %185

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::basic_string"* %42 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.636", %"struct.std::__1::pair.636"* %39, i64 %38, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp sgt i64 %182, -1
  br i1 %183, label %185, label %184, !prof !2

184:                                              ; preds = %178
  call void @llvm.trap() #14
  unreachable

185:                                              ; preds = %175, %178
  %186 = phi i64 [ %180, %178 ], [ %177, %175 ]
  %187 = phi i64 [ %182, %178 ], [ %176, %175 ]
  %188 = inttoptr i64 %186 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  store i64 -6148914691236517206, i64* %2, align 8
  %189 = call zeroext i1 @_ZN4absl16numbers_internal18safe_strtou64_baseENS_11string_viewEPmi(i8* %188, i64 %187, i64* nonnull %2, i32 10) #14
  %190 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  br i1 %189, label %191, label %245

191:                                              ; preds = %185, %149, %156
  %192 = phi i8 [ %37, %156 ], [ %37, %149 ], [ 1, %185 ]
  %193 = phi i64 [ %36, %156 ], [ %36, %149 ], [ %190, %185 ]
  %194 = load i64, i64* %34, align 8
  %195 = add i64 %194, -1
  %196 = icmp eq i64 %195, %38
  %197 = add i64 %38, 1
  %198 = select i1 %196, i64 0, i64 %197
  %199 = icmp eq i64 %198, %25
  br i1 %199, label %200, label %35

200:                                              ; preds = %191
  %201 = load i8, i8* %30, align 1
  %202 = load i64, i64* %18, align 8
  %203 = icmp slt i8 %201, 0
  %204 = zext i8 %201 to i64
  %205 = select i1 %203, i64 %202, i64 %204
  %206 = icmp eq i64 %205, 7
  br i1 %206, label %207, label %245

207:                                              ; preds = %200
  %208 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i64 7) #14
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %245

210:                                              ; preds = %207
  %211 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  %215 = load i64, i64* %21, align 8
  %216 = zext i8 %213 to i64
  %217 = select i1 %214, i64 %215, i64 %216
  %218 = icmp eq i64 %217, 12
  br i1 %218, label %219, label %245

219:                                              ; preds = %210
  %220 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i64 12) #14
  %221 = icmp eq i32 %220, 0
  %222 = icmp ne i8 %192, 0
  %223 = and i1 %222, %221
  br i1 %223, label %224, label %245

224:                                              ; preds = %219
  %225 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %226 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %225, align 8
  %227 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %226, i64 8
  %228 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %227, align 8
  %229 = call i32 %228(%"class.quic::QuicStream"* %9) #14
  %230 = call i8* @_Znwm(i64 168) #18
  %231 = bitcast i8* %230 to %"class.quic::WebTransportHttp3"*
  %232 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %233 = zext i32 %229 to i64
  call void @_ZN4quic17WebTransportHttp3C1EPNS_15QuicSpdySessionEPNS_14QuicSpdyStreamEmm(%"class.quic::WebTransportHttp3"* nonnull %231, %"class.quic::QuicSpdySession"* %232, %"class.quic::QuicSpdyStream"* %0, i64 %233, i64 %193) #14
  %234 = ptrtoint i8* %230 to i64
  %235 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 22
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.664", %"class.std::__1::unique_ptr.664"* %235, i64 0, i32 0, i32 0, i32 0
  %237 = load %"class.quic::WebTransportHttp3"*, %"class.quic::WebTransportHttp3"** %236, align 8
  %238 = bitcast %"class.std::__1::unique_ptr.664"* %235 to i64*
  store i64 %234, i64* %238, align 8
  %239 = icmp eq %"class.quic::WebTransportHttp3"* %237, null
  br i1 %239, label %245, label %240

240:                                              ; preds = %224
  %241 = bitcast %"class.quic::WebTransportHttp3"* %237 to void (%"class.quic::WebTransportHttp3"*)***
  %242 = load void (%"class.quic::WebTransportHttp3"*)**, void (%"class.quic::WebTransportHttp3"*)*** %241, align 8
  %243 = getelementptr inbounds void (%"class.quic::WebTransportHttp3"*)*, void (%"class.quic::WebTransportHttp3"*)** %242, i64 1
  %244 = load void (%"class.quic::WebTransportHttp3"*)*, void (%"class.quic::WebTransportHttp3"*)** %243, align 8
  call void %244(%"class.quic::WebTransportHttp3"* nonnull %237) #14
  br label %245

245:                                              ; preds = %159, %185, %171, %107, %124, %55, %72, %15, %207, %219, %210, %200, %224, %240
  %246 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %246, i64 0, i32 1, i32 0
  %248 = load i8, i8* %247, align 1
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %250, label %252

250:                                              ; preds = %245
  %251 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %251) #18
  br label %252

252:                                              ; preds = %245, %250
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  %253 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %254 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %253, i64 0, i32 1, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %252
  %258 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %258) #18
  br label %259

259:                                              ; preds = %252, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  br label %260

260:                                              ; preds = %8, %1, %259
  ret void
}

declare i64 @_ZNK4quic10QuicStream28highest_received_byte_offsetEv(%"class.quic::QuicStream"*) local_unnamed_addr #1

declare void @_ZN4quic15QuicStreamFrameC1EjbmN4absl11string_viewE(%"struct.quic::QuicStreamFrame"*, i32, i1 zeroext, i64, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream19OnPromiseHeaderListEjmRKNS_14QuicHeaderListE(%"class.quic::QuicSpdyStream"* nocapture readonly, i32, i64, %"class.quic::QuicHeaderList"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 5
  %7 = load %"class.quic::StreamDelegateInterface"*, %"class.quic::StreamDelegateInterface"** %6, align 8
  %8 = tail call i8* @_Znwm(i64 48) #18
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i64 34, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %8, i64 34
  store i8 0, i8* %12, align 1
  %13 = bitcast %"class.quic::StreamDelegateInterface"* %7 to void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %14 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %14, i64 2
  %16 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %15, align 8
  call void %16(%"class.quic::StreamDelegateInterface"* %7, i32 56, %"class.std::__1::basic_string"* nonnull %5) #14
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %4
  %22 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %4, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream25OnTrailingHeadersCompleteEbmRKNS_14QuicHeaderListE(%"class.quic::QuicSpdyStream"*, i1 zeroext, i64, %"class.quic::QuicHeaderList"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.quic::QuicStreamFrame", align 8
  %10 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %11 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %10) #14
  %12 = icmp sgt i32 %11, 51
  br i1 %12, label %33, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 16
  %15 = load i8, i8* %14, align 2, !range !12
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 5
  %19 = load %"class.quic::StreamDelegateInterface"*, %"class.quic::StreamDelegateInterface"** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 18, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i64 18, i1 false) #14
  %23 = getelementptr inbounds i8, i8* %22, i64 18
  store i8 0, i8* %23, align 2
  %24 = bitcast %"class.quic::StreamDelegateInterface"* %19 to void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %25 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %25, i64 2
  %27 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %26, align 8
  call void %27(%"class.quic::StreamDelegateInterface"* %19, i32 56, %"class.std::__1::basic_string"* nonnull %5) #14
  %28 = load i8, i8* %21, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %99

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #18
  br label %99

33:                                               ; preds = %13, %4
  %34 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %10) #14
  %35 = icmp sgt i32 %34, 51
  %36 = or i1 %35, %1
  br i1 %36, label %55, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 5
  %39 = load %"class.quic::StreamDelegateInterface"*, %"class.quic::StreamDelegateInterface"** %38, align 8
  %40 = tail call i8* @_Znwm(i64 32) #18
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %43, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i64 25, i1 false) #14
  %44 = getelementptr inbounds i8, i8* %40, i64 25
  store i8 0, i8* %44, align 1
  %45 = bitcast %"class.quic::StreamDelegateInterface"* %39 to void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %46 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %46, i64 2
  %48 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %47, align 8
  call void %48(%"class.quic::StreamDelegateInterface"* %39, i32 56, %"class.std::__1::basic_string"* nonnull %6) #14
  %49 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %99

53:                                               ; preds = %37
  %54 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %54) #18
  br label %99

55:                                               ; preds = %33
  %56 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  store i64 0, i64* %7, align 8
  %57 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %10) #14
  %58 = icmp slt i32 %57, 52
  %59 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 12
  %60 = call zeroext i1 @_ZN4quic9SpdyUtils23CopyAndValidateTrailersERKNS_14QuicHeaderListEbPmPN4spdy16Http2HeaderBlockE(%"class.quic::QuicHeaderList"* dereferenceable(72) %3, i1 zeroext %58, i64* nonnull %7, %"class.spdy::Http2HeaderBlock"* %59) #14
  br i1 %60, label %77, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 5
  %63 = load %"class.quic::StreamDelegateInterface"*, %"class.quic::StreamDelegateInterface"** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  store i8 22, i8* %65, align 1
  %66 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i64 22, i1 false) #14
  %67 = getelementptr inbounds i8, i8* %66, i64 22
  store i8 0, i8* %67, align 2
  %68 = bitcast %"class.quic::StreamDelegateInterface"* %63 to void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %69 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %69, i64 2
  %71 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %70, align 8
  call void %71(%"class.quic::StreamDelegateInterface"* %63, i32 56, %"class.std::__1::basic_string"* nonnull %8) #14
  %72 = load i8, i8* %65, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %98

74:                                               ; preds = %61
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #18
  br label %98

77:                                               ; preds = %55
  %78 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 10
  store i8 1, i8* %78, align 8
  br i1 %1, label %79, label %98

79:                                               ; preds = %77
  %80 = call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %10) #14
  %81 = icmp sgt i32 %80, 51
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = call i64 @_ZNK4quic10QuicStream28highest_received_byte_offsetEv(%"class.quic::QuicStream"* %10) #14
  br label %86

84:                                               ; preds = %79
  %85 = load i64, i64* %7, align 8
  br label %86

86:                                               ; preds = %84, %82
  %87 = phi i64 [ %83, %82 ], [ %85, %84 ]
  %88 = getelementptr inbounds %"struct.quic::QuicStreamFrame", %"struct.quic::QuicStreamFrame"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #14
  %89 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %90 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %89, align 8
  %91 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %90, i64 8
  %92 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %91, align 8
  %93 = call i32 %92(%"class.quic::QuicStream"* %10) #14
  call void @_ZN4quic15QuicStreamFrameC1EjbmN4absl11string_viewE(%"struct.quic::QuicStreamFrame"* nonnull %9, i32 %93, i1 zeroext true, i64 %87, i8* null, i64 0) #14
  %94 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)***
  %95 = load void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)**, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)** %95, i64 10
  %97 = load void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)*, void (%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"*)** %96, align 8
  call void %97(%"class.quic::QuicStream"* %10, %"struct.quic::QuicStreamFrame"* nonnull dereferenceable(24) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #14
  br label %98

98:                                               ; preds = %74, %61, %77, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %99

99:                                               ; preds = %53, %37, %30, %17, %98
  ret void
}

declare zeroext i1 @_ZN4quic9SpdyUtils23CopyAndValidateTrailersERKNS_14QuicHeaderListEbPmPN4spdy16Http2HeaderBlockE(%"class.quic::QuicHeaderList"* dereferenceable(72), i1 zeroext, i64*, %"class.spdy::Http2HeaderBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream15OnPriorityFrameERKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicSpdyStream"*, %"class.spdy::StreamPrecedence"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStream11SetPriorityERKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicStream"* %3, %"class.spdy::StreamPrecedence"* dereferenceable(16) %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream13OnStreamResetERKNS_18QuicRstStreamFrameE(%"class.quic::QuicSpdyStream"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %3, align 8
  %5 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStream13OnStreamResetERKNS_18QuicRstStreamFrameE(%"class.quic::QuicStream"* %7, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32) %1) #14
  br label %89

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.quic::QuicRstStreamFrame", %"struct.quic::QuicRstStreamFrame"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %45, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %14 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %13) #14
  %15 = icmp sgt i32 %14, 51
  br i1 %15, label %16, label %44

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 16
  %18 = load i8, i8* %17, align 2, !range !12
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %44

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %22 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %21, align 8
  %23 = tail call %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"* %22) #14
  %24 = icmp eq %"class.quic::QpackDecoder"* %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %20
  %26 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %21, align 8
  %27 = tail call %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"* %26) #14
  %28 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %29 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %29, i64 8
  %31 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %30, align 8
  %32 = tail call i32 %31(%"class.quic::QuicStream"* %13) #14
  tail call void @_ZN4quic12QpackDecoder13OnStreamResetEj(%"class.quic::QpackDecoder"* %27, i32 %32) #14
  %33 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_abort_qpack_on_stream_reset, align 1, !range !12
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %37 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %36, align 8
  store %"class.quic::QpackDecodedHeadersAccumulator"* null, %"class.quic::QpackDecodedHeadersAccumulator"** %36, align 8
  %38 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %37 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %41 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %41, i64 1
  %43 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %42, align 8
  tail call void %43(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %37) #14
  br label %44

44:                                               ; preds = %25, %16, %39, %35, %20, %12
  tail call void @_ZN4quic10QuicStream13OnStreamResetERKNS_18QuicRstStreamFrameE(%"class.quic::QuicStream"* %13, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32) %1) #14
  br label %89

45:                                               ; preds = %8
  %46 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_fix_on_stream_reset, align 1, !range !12
  %47 = icmp eq i8 %46, 0
  %48 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  br i1 %47, label %78, label %49

49:                                               ; preds = %45
  %50 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %48) #14
  %51 = icmp sgt i32 %50, 51
  br i1 %51, label %52, label %78

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 16
  %54 = load i8, i8* %53, align 2, !range !12
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %77

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %58 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %57, align 8
  %59 = tail call %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"* %58) #14
  %60 = icmp eq %"class.quic::QpackDecoder"* %59, null
  br i1 %60, label %77, label %61

61:                                               ; preds = %56
  %62 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %57, align 8
  %63 = tail call %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"* %62) #14
  %64 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %65 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %65, i64 8
  %67 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %66, align 8
  %68 = tail call i32 %67(%"class.quic::QuicStream"* %48) #14
  tail call void @_ZN4quic12QpackDecoder13OnStreamResetEj(%"class.quic::QpackDecoder"* %63, i32 %68) #14
  %69 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %70 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %69, align 8
  store %"class.quic::QpackDecodedHeadersAccumulator"* null, %"class.quic::QpackDecodedHeadersAccumulator"** %69, align 8
  %71 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %61
  %73 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %70 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %74 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %74, i64 1
  %76 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %75, align 8
  tail call void %76(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %70) #14
  br label %77

77:                                               ; preds = %52, %72, %61, %56
  tail call void @_ZN4quic10QuicStream13OnStreamResetERKNS_18QuicRstStreamFrameE(%"class.quic::QuicStream"* %48, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32) %1) #14
  br label %89

78:                                               ; preds = %45, %49
  %79 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 18
  store i8 1, i8* %79, align 8
  %80 = getelementptr inbounds %"struct.quic::QuicRstStreamFrame", %"struct.quic::QuicRstStreamFrame"* %1, i64 0, i32 4
  %81 = load i64, i64* %80, align 8
  %82 = tail call zeroext i1 @_ZN4quic10QuicStream34MaybeIncreaseHighestReceivedOffsetEm(%"class.quic::QuicStream"* %48, i64 %81) #14
  %83 = load i32, i32* %9, align 8
  %84 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 8
  store i32 %83, i32* %84, align 8
  %85 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*)***
  %86 = load void (%"class.quic::QuicStream"*)**, void (%"class.quic::QuicStream"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.quic::QuicStream"*)*, void (%"class.quic::QuicStream"*)** %86, i64 29
  %88 = load void (%"class.quic::QuicStream"*)*, void (%"class.quic::QuicStream"*)** %87, align 8
  tail call void %88(%"class.quic::QuicStream"* %48) #14
  br label %89

89:                                               ; preds = %78, %77, %44, %6
  ret void
}

declare void @_ZN4quic10QuicStream13OnStreamResetERKNS_18QuicRstStreamFrameE(%"class.quic::QuicStream"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #1

declare %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"*) local_unnamed_addr #1

declare void @_ZN4quic12QpackDecoder13OnStreamResetEj(%"class.quic::QpackDecoder"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic10QuicStream34MaybeIncreaseHighestReceivedOffsetEm(%"class.quic::QuicStream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream5ResetENS_22QuicRstStreamErrorCodeE(%"class.quic::QuicSpdyStream"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %4 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %3) #14
  %5 = icmp sgt i32 %4, 51
  br i1 %5, label %6, label %38

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 16
  %8 = load i8, i8* %7, align 2, !range !12
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %38

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %12 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %11, align 8
  %13 = tail call %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"* %12) #14
  %14 = icmp eq %"class.quic::QpackDecoder"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %17 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %16, align 8
  %18 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %17, null
  br i1 %18, label %19, label %38

19:                                               ; preds = %15
  %20 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %11, align 8
  %21 = tail call %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"* %20) #14
  %22 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %23 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %23, i64 8
  %25 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %24, align 8
  %26 = tail call i32 %25(%"class.quic::QuicStream"* %3) #14
  tail call void @_ZN4quic12QpackDecoder13OnStreamResetEj(%"class.quic::QpackDecoder"* %21, i32 %26) #14
  %27 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_abort_qpack_on_stream_reset, align 1, !range !12
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %31 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %30, align 8
  store %"class.quic::QpackDecodedHeadersAccumulator"* null, %"class.quic::QpackDecodedHeadersAccumulator"** %30, align 8
  %32 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %31 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %35 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %35, i64 1
  %37 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %36, align 8
  tail call void %37(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %31) #14
  br label %38

38:                                               ; preds = %19, %6, %33, %29, %10, %15, %2
  tail call void @_ZN4quic10QuicStream5ResetENS_22QuicRstStreamErrorCodeE(%"class.quic::QuicStream"* %3, i32 %1) #14
  ret void
}

declare void @_ZN4quic10QuicStream5ResetENS_22QuicRstStreamErrorCodeE(%"class.quic::QuicStream"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream15OnDataAvailableEv(%"class.quic::QuicSpdyStream"*) unnamed_addr #0 align 2 {
  %2 = alloca %struct.iovec, align 8
  %3 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %4 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %3) #14
  %5 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %3) #14
  %6 = icmp sgt i32 %5, 51
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*)***
  %9 = load void (%"class.quic::QuicSpdyStream"*)**, void (%"class.quic::QuicSpdyStream"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %9, i64 33
  %11 = load void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %10, align 8
  tail call void %11(%"class.quic::QuicSpdyStream"* %0) #14
  br label %112

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %14 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %13, align 8
  %15 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %14, i64 0, i32 1
  tail call void @_ZN4quic25WebTransportStreamAdapter15OnDataAvailableEv(%"class.quic::WebTransportStreamAdapter"* %17) #14
  br label %112

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %20 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %19, align 8
  %21 = tail call zeroext i1 @_ZN4quic15QuicSpdySession29ShouldProcessIncomingRequestsEv(%"class.quic::QuicSpdySession"* %20) #14
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %19, align 8
  %24 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %25 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %25, i64 8
  %27 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %26, align 8
  %28 = tail call i32 %27(%"class.quic::QuicStream"* %3) #14
  tail call void @_ZN4quic15QuicSpdySession32OnStreamWaitingForClientSettingsEj(%"class.quic::QuicSpdySession"* %23, i32 %28) #14
  br label %112

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 18
  %31 = load i8, i8* %30, align 8, !range !12
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %112

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 5
  %35 = load i8, i8* %34, align 8, !range !12
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %112

37:                                               ; preds = %33
  %38 = bitcast %struct.iovec* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #14
  %39 = getelementptr inbounds %struct.iovec, %struct.iovec* %2, i64 0, i32 0
  %40 = getelementptr inbounds %struct.iovec, %struct.iovec* %2, i64 0, i32 1
  %41 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 4
  %42 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1, i32 9
  %43 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 10
  %44 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 15
  %45 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 15, i32 13
  %46 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 17
  %48 = bitcast %struct.iovec* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false)
  br label %49

49:                                               ; preds = %76, %37
  %50 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %41, align 8
  %51 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %50, i64 0, i32 8
  %52 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %51, align 8
  %53 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %52, i64 0, i32 83
  %54 = load i8, i8* %53, align 2, !range !12
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %79, label %56

56:                                               ; preds = %49
  %57 = load i8, i8* %42, align 4, !range !12
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %79

59:                                               ; preds = %56
  %60 = load i8, i8* %43, align 8, !range !12
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = load i32, i32* %45, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %62
  %66 = load i64, i64* %47, align 8
  %67 = call zeroext i1 @_ZNK4quic19QuicStreamSequencer10PeekRegionEmP5iovec(%"class.quic::QuicStreamSequencer"* %46, i64 %66, %struct.iovec* nonnull %2) #14
  br i1 %67, label %68, label %79

68:                                               ; preds = %65
  store i8 1, i8* %30, align 8
  %69 = load i8*, i8** %39, align 8
  %70 = load i64, i64* %40, align 8
  %71 = call i64 @_ZN4quic11HttpDecoder12ProcessInputEPKcm(%"class.quic::HttpDecoder"* %44, i8* %69, i64 %70) #14
  store i8 0, i8* %30, align 8
  %72 = load i64, i64* %47, align 8
  %73 = add i64 %72, %71
  store i64 %73, i64* %47, align 8
  %74 = load i8, i8* %34, align 8, !range !12
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %111

76:                                               ; preds = %68
  %77 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %13, align 8
  %78 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %77, null
  br i1 %78, label %49, label %111

79:                                               ; preds = %59, %49, %56, %65, %62
  %80 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %81 = load i8, i8* %80, align 1, !range !12
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 8, i32 1, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %85, %87
  br i1 %88, label %89, label %111

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %91, %93
  br i1 %94, label %100, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*)***
  %97 = load void (%"class.quic::QuicSpdyStream"*)**, void (%"class.quic::QuicSpdyStream"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %97, i64 33
  %99 = load void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %98, align 8
  call void %99(%"class.quic::QuicSpdyStream"* %0) #14
  br label %111

100:                                              ; preds = %89
  %101 = call zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"* %46) #14
  br i1 %101, label %102, label %111

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 3
  %104 = load i8, i8* %103, align 8, !range !12
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %111

106:                                              ; preds = %102
  store i8 1, i8* %103, align 8
  %107 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*)***
  %108 = load void (%"class.quic::QuicSpdyStream"*)**, void (%"class.quic::QuicSpdyStream"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %108, i64 33
  %110 = load void (%"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream"*)** %109, align 8
  call void %110(%"class.quic::QuicSpdyStream"* %0) #14
  br label %111

111:                                              ; preds = %68, %76, %79, %100, %106, %102, %83, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  br label %112

112:                                              ; preds = %33, %29, %111, %7, %16, %22
  ret void
}

declare void @_ZN4quic25WebTransportStreamAdapter15OnDataAvailableEv(%"class.quic::WebTransportStreamAdapter"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic15QuicSpdySession29ShouldProcessIncomingRequestsEv(%"class.quic::QuicSpdySession"*) local_unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession32OnStreamWaitingForClientSettingsEj(%"class.quic::QuicSpdySession"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK4quic19QuicStreamSequencer10PeekRegionEmP5iovec(%"class.quic::QuicStreamSequencer"*, i64, %struct.iovec*) local_unnamed_addr #1

declare i64 @_ZN4quic11HttpDecoder12ProcessInputEPKcm(%"class.quic::HttpDecoder"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream7OnCloseEv(%"class.quic::QuicSpdyStream"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStream7OnCloseEv(%"class.quic::QuicStream"* %3) #14
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %4, align 8
  store %"class.quic::QpackDecodedHeadersAccumulator"* null, %"class.quic::QpackDecodedHeadersAccumulator"** %4, align 8
  %6 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %5 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %9 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %9, i64 1
  %11 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %10, align 8
  tail call void %11(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %5) #14
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 4
  %14 = load %"class.quic::QuicSpdyStream::Visitor"*, %"class.quic::QuicSpdyStream::Visitor"** %13, align 8
  %15 = icmp eq %"class.quic::QuicSpdyStream::Visitor"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  store %"class.quic::QuicSpdyStream::Visitor"* null, %"class.quic::QuicSpdyStream::Visitor"** %13, align 8
  %17 = bitcast %"class.quic::QuicSpdyStream::Visitor"* %14 to void (%"class.quic::QuicSpdyStream::Visitor"*, %"class.quic::QuicSpdyStream"*)***
  %18 = load void (%"class.quic::QuicSpdyStream::Visitor"*, %"class.quic::QuicSpdyStream"*)**, void (%"class.quic::QuicSpdyStream::Visitor"*, %"class.quic::QuicSpdyStream"*)*** %17, align 8
  %19 = load void (%"class.quic::QuicSpdyStream::Visitor"*, %"class.quic::QuicSpdyStream"*)*, void (%"class.quic::QuicSpdyStream::Visitor"*, %"class.quic::QuicSpdyStream"*)** %18, align 8
  tail call void %19(%"class.quic::QuicSpdyStream::Visitor"* nonnull %14, %"class.quic::QuicSpdyStream"* %0) #14
  br label %20

20:                                               ; preds = %12, %16
  %21 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %22 = load %"class.quic::WebTransportHttp3"*, %"class.quic::WebTransportHttp3"** %21, align 8
  %23 = icmp eq %"class.quic::WebTransportHttp3"* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZN4quic17WebTransportHttp325CloseAllAssociatedStreamsEv(%"class.quic::WebTransportHttp3"* nonnull %22) #14
  br label %25

25:                                               ; preds = %20, %24
  %26 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %27 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %26, align 8
  %28 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %27, null
  br i1 %28, label %45, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %31 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %30, align 8
  %32 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %27, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = tail call %"class.quic::WebTransportHttp3"* @_ZN4quic15QuicSpdySession22GetWebTransportSessionEm(%"class.quic::QuicSpdySession"* %31, i64 %33) #14
  %35 = icmp eq %"class.quic::WebTransportHttp3"* %34, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %38 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %38, i64 8
  %40 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %39, align 8
  %41 = tail call i32 %40(%"class.quic::QuicStream"* %3) #14
  %42 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42)
  store i32 %41, i32* %2, align 4
  %43 = getelementptr inbounds %"class.quic::WebTransportHttp3", %"class.quic::WebTransportHttp3"* %34, i64 0, i32 8, i32 0
  %44 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE5eraseIjEEmRKj(%"class.absl::container_internal::raw_hash_set.366"* %43, i32* nonnull dereferenceable(4) %2) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42)
  br label %45

45:                                               ; preds = %25, %29, %36
  ret void
}

declare void @_ZN4quic10QuicStream7OnCloseEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic17WebTransportHttp325CloseAllAssociatedStreamsEv(%"class.quic::WebTransportHttp3"*) local_unnamed_addr #1

declare %"class.quic::WebTransportHttp3"* @_ZN4quic15QuicSpdySession22GetWebTransportSessionEm(%"class.quic::QuicSpdySession"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream10OnCanWriteEv(%"class.quic::QuicSpdyStream"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStream10OnCanWriteEv(%"class.quic::QuicStream"* %2) #14
  %3 = tail call zeroext i1 @_ZNK4quic10QuicStream15HasBufferedDataEv(%"class.quic::QuicStream"* %2) #14
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 13
  %6 = load i8, i8* %5, align 1, !range !12
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*)***
  %10 = load void (%"class.quic::QuicStream"*)**, void (%"class.quic::QuicStream"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.quic::QuicStream"*)*, void (%"class.quic::QuicStream"*)** %10, i64 29
  %12 = load void (%"class.quic::QuicStream"*)*, void (%"class.quic::QuicStream"*)** %11, align 8
  tail call void %12(%"class.quic::QuicStream"* %2) #14
  br label %13

13:                                               ; preds = %4, %8, %1
  ret void
}

declare void @_ZN4quic10QuicStream10OnCanWriteEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare zeroext i1 @_ZNK4quic10QuicStream15HasBufferedDataEv(%"class.quic::QuicStream"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream21ParseHeaderStatusCodeERKN4spdy16Http2HeaderBlockEPi(%"class.spdy::Http2HeaderBlock"* dereferenceable(120), i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.absl::string_view", align 8
  %5 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %6 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %7 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %5, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base.570"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__list_node_base.570"*), %"struct.std::__1::__list_node_base.570"** %8, align 8
  %9 = load i8*, i8** @_ZN4spdy18kHttp2StatusHeaderE, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #14
  %13 = icmp sgt i64 %12, -1
  br i1 %13, label %15, label %14, !prof !2

14:                                               ; preds = %11
  tail call void @llvm.trap() #14
  unreachable

15:                                               ; preds = %2, %11
  %16 = phi i64 [ 0, %2 ], [ %12, %11 ]
  %17 = bitcast %"class.absl::string_view"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 0
  store i8* %9, i8** %18, align 8, !noalias !45
  %19 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %4, i64 0, i32 1
  store i64 %16, i64* %19, align 8, !noalias !45
  %20 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = call { i8*, %"struct.std::__1::pair.560"** } @_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_14const_iteratorERSH_(%"class.absl::container_internal::raw_hash_set.559"* %20, %"class.absl::string_view"* nonnull dereferenceable(16) %4) #14, !noalias !45
  %22 = extractvalue { i8*, %"struct.std::__1::pair.560"** } %21, 0
  %23 = extractvalue { i8*, %"struct.std::__1::pair.560"** } %21, 1
  %24 = icmp eq i8* %22, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %15
  %26 = load i8, i8* %22, align 1
  %27 = icmp sgt i8 %26, -1
  br i1 %27, label %32, label %28, !prof !2

28:                                               ; preds = %25
  call void @llvm.trap() #14
  unreachable

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = ptrtoint %"struct.std::__1::__list_node_base.570"* %30 to i64
  br label %37

32:                                               ; preds = %25
  %33 = load %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %23, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.560", %"struct.std::__1::pair.560"* %33, i64 0, i32 1
  %35 = bitcast %"class.std::__1::__list_iterator"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br label %37

37:                                               ; preds = %29, %32
  %38 = phi i64 [ %31, %29 ], [ %36, %32 ]
  %39 = inttoptr i64 %38 to %"struct.std::__1::__list_node_base.570"*
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5, %"struct.std::__1::__list_node_base.570"* %39) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  %40 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  %41 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %6, %"struct.std::__1::__list_node_base.570"* %41) #14
  %42 = load %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"** %8, align 8
  %43 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %6, i64 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__list_node_base.570"* %42, %44
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  br i1 %45, label %76, label %46

46:                                               ; preds = %37
  %47 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %5 to %"struct.std::__1::__list_node"**
  %48 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %48, i64 0, i32 1, i32 1
  %50 = call dereferenceable(32) %"struct.std::__1::pair.689"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %49) #14
  %51 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %50, i64 0, i32 1, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.689", %"struct.std::__1::pair.689"* %50, i64 0, i32 1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 3
  br i1 %55, label %56, label %76

56:                                               ; preds = %46
  %57 = load i8, i8* %52, align 1
  %58 = add i8 %57, -49
  %59 = icmp ugt i8 %58, 4
  br i1 %59, label %76, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds i8, i8* %52, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = add nsw i32 %63, -48
  %65 = icmp ult i32 %64, 10
  br i1 %65, label %66, label %76

66:                                               ; preds = %60
  %67 = getelementptr inbounds i8, i8* %52, i64 2
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  %70 = add nsw i32 %69, -48
  %71 = icmp ult i32 %70, 10
  br i1 %71, label %72, label %76

72:                                               ; preds = %66
  %73 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #14
  store i32 -1431655766, i32* %3, align 4
  %74 = call zeroext i1 @_ZN4absl16numbers_internal17safe_strto32_baseENS_11string_viewEPii(i8* %52, i64 3, i32* nonnull %3, i32 10) #14
  %75 = load i32, i32* %3, align 4
  store i32 %75, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #14
  br label %76

76:                                               ; preds = %72, %46, %56, %66, %60, %37
  %77 = phi i1 [ false, %37 ], [ %74, %72 ], [ false, %46 ], [ false, %56 ], [ false, %66 ], [ false, %60 ]
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret i1 %77
}

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream16OnDataFrameStartEmm(%"class.quic::QuicSpdyStream"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %6 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %6, i64 0, i32 26
  %8 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %7, align 8
  %9 = icmp eq %"class.quic::Http3DebugVisitor"* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %12 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %13 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %13, i64 8
  %15 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %14, align 8
  %16 = tail call i32 %15(%"class.quic::QuicStream"* %11) #14
  %17 = bitcast %"class.quic::Http3DebugVisitor"* %8 to void (%"class.quic::Http3DebugVisitor"*, i32, i64)***
  %18 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64)**, void (%"class.quic::Http3DebugVisitor"*, i32, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64)** %18, i64 16
  %20 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64)** %19, align 8
  tail call void %20(%"class.quic::Http3DebugVisitor"* nonnull %8, i32 %16, i64 %2) #14
  br label %21

21:                                               ; preds = %3, %10
  %22 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %23 = load i8, i8* %22, align 1, !range !12
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 10
  %27 = load i8, i8* %26, align 8, !range !12
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %47, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 5
  %31 = load %"class.quic::StreamDelegateInterface"*, %"class.quic::StreamDelegateInterface"** %30, align 8
  %32 = tail call i8* @_Znwm(i64 32) #18
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast i64* %34 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %35, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i64 31, i1 false) #14
  %36 = getelementptr inbounds i8, i8* %32, i64 31
  store i8 0, i8* %36, align 1
  %37 = bitcast %"class.quic::StreamDelegateInterface"* %31 to void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %38 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %38, i64 2
  %40 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %39, align 8
  call void %40(%"class.quic::StreamDelegateInterface"* %31, i32 151, %"class.std::__1::basic_string"* nonnull %4) #14
  %41 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %29
  %46 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %46) #18
  br label %51

47:                                               ; preds = %25
  %48 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %50 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %49, i64 %1) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %48, i64 %50) #14
  br label %51

51:                                               ; preds = %45, %29, %47
  %52 = phi i1 [ true, %47 ], [ false, %29 ], [ false, %45 ]
  ret i1 %52
}

declare i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream18OnDataFramePayloadEN4absl11string_viewE(%"class.quic::QuicSpdyStream"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  tail call void @_ZN4quic25QuicSpdyStreamBodyManager6OnBodyEN4absl11string_viewE(%"class.quic::QuicSpdyStreamBodyManager"* %4, i8* %1, i64 %2) #14
  ret i1 true
}

declare void @_ZN4quic25QuicSpdyStreamBodyManager6OnBodyEN4absl11string_viewE(%"class.quic::QuicSpdyStreamBodyManager"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream14OnDataFrameEndEv(%"class.quic::QuicSpdyStream"* nocapture readnone) local_unnamed_addr #8 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm(%"class.quic::QuicSpdyStream"*, i64, i64, i1 zeroext, i64, i64, i64*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.quic::QuicIntervalSet", align 8
  %9 = alloca %"class.quic::QuicInterval", align 8
  %10 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %11 = tail call zeroext i1 @_ZN4quic10QuicStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm(%"class.quic::QuicStream"* %10, i64 %1, i64 %2, i1 zeroext %3, i64 %4, i64 %5, i64* %6) #14
  %12 = tail call i64 @_ZNK4quic14QuicSpdyStream28GetNumFrameHeadersInIntervalEmm(%"class.quic::QuicSpdyStream"* %0, i64 %1, i64 %2)
  %13 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  %14 = add i64 %2, %1
  %15 = bitcast %"class.quic::QuicInterval"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %9, i64 0, i32 0
  store i64 %1, i64* %16, align 8
  %17 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %9, i64 0, i32 1
  store i64 %14, i64* %17, align 8
  %18 = tail call { i64, i64 } @_ZNK4quic15QuicIntervalSetImE16SpanningIntervalEv(%"class.quic::QuicIntervalSet"* %13) #14
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  %21 = icmp ult i64 %19, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %7
  %23 = icmp ugt i64 %14, %1
  %24 = icmp ult i64 %19, %14
  %25 = and i1 %23, %24
  %26 = icmp ugt i64 %20, %1
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %40

28:                                               ; preds = %22
  %29 = bitcast %"class.quic::QuicIntervalSet"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %30 = bitcast %"class.quic::QuicIntervalSet"* %8 to i64*
  store i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64* %30, align 8
  %31 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"** %31, align 8
  %32 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 0, i64* %32, align 8
  call void @_ZN4quic15QuicIntervalSetImE3AddERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"* nonnull %8, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %9) #14
  call void @_ZN4quic15QuicIntervalSetImE10DifferenceERKS1_(%"class.quic::QuicIntervalSet"* %13, %"class.quic::QuicIntervalSet"* nonnull dereferenceable(24) %8) #14
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %36, align 8
  %38 = bitcast %"class.quic::QuicIntervalSet"* %8 to %"class.std::__1::allocator"*
  call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %37, %"class.std::__1::allocator"* nonnull %38) #14
  br label %39

39:                                               ; preds = %35, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  br label %40

40:                                               ; preds = %7, %22, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  %41 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %42 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %41, align 8
  %43 = icmp eq %"class.quic::QuicAckListenerInterface"* %42, null
  %44 = xor i1 %11, true
  %45 = or i1 %43, %44
  br i1 %45, label %54, label %46

46:                                               ; preds = %40
  %47 = load i64, i64* %6, align 8
  %48 = sub i64 %47, %12
  %49 = trunc i64 %48 to i32
  %50 = bitcast %"class.quic::QuicAckListenerInterface"* %42 to void (%"class.quic::QuicAckListenerInterface"*, i32, i64)***
  %51 = load void (%"class.quic::QuicAckListenerInterface"*, i32, i64)**, void (%"class.quic::QuicAckListenerInterface"*, i32, i64)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.quic::QuicAckListenerInterface"*, i32, i64)*, void (%"class.quic::QuicAckListenerInterface"*, i32, i64)** %51, i64 2
  %53 = load void (%"class.quic::QuicAckListenerInterface"*, i32, i64)*, void (%"class.quic::QuicAckListenerInterface"*, i32, i64)** %52, align 8
  call void %53(%"class.quic::QuicAckListenerInterface"* nonnull %42, i32 %49, i64 %4) #14
  br label %54

54:                                               ; preds = %40, %46
  ret i1 %11
}

declare zeroext i1 @_ZN4quic10QuicStream18OnStreamFrameAckedEmmbNS_8QuicTime5DeltaES1_Pm(%"class.quic::QuicStream"*, i64, i64, i1 zeroext, i64, i64, i64*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4quic14QuicSpdyStream28GetNumFrameHeadersInIntervalEmm(%"class.quic::QuicSpdyStream"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.quic::QuicInterval", align 8
  %5 = alloca %"class.quic::QuicIntervalSet", align 8
  %6 = bitcast %"class.quic::QuicIntervalSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = add i64 %2, %1
  %10 = bitcast %"class.quic::QuicIntervalSet"* %5 to i64*
  store i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64* %10, align 8
  store %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"** %7, align 8
  store i64 0, i64* %8, align 8
  %11 = bitcast %"class.quic::QuicInterval"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 0
  store i64 %1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 1
  store i64 %9, i64* %13, align 8
  call void @_ZN4quic15QuicIntervalSetImE3AddERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"* nonnull %5, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %14 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  call void @_ZN4quic15QuicIntervalSetImE12IntersectionERKS1_(%"class.quic::QuicIntervalSet"* nonnull %5, %"class.quic::QuicIntervalSet"* dereferenceable(24) %14)
  %15 = bitcast %"class.quic::QuicIntervalSet"* %5 to i64**
  %16 = load i64*, i64** %15, align 8
  %17 = load i64, i64* %16, align 8
  %18 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %18, i64 8, i32 0
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = inttoptr i64 %17 to %"class.absl::container_internal::btree_node"*
  %24 = icmp ne %"class.absl::container_internal::btree_node"* %18, %23
  %25 = icmp ne i8 %21, 0
  %26 = or i1 %24, %25
  %27 = bitcast i64* %16 to %"class.absl::container_internal::btree_node"*
  br i1 %26, label %35, label %28

28:                                               ; preds = %109, %3
  %29 = phi i64 [ 0, %3 ], [ %63, %109 ]
  %30 = load i64, i64* %8, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.quic::QuicIntervalSet"* %5 to %"class.std::__1::allocator"*
  call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %27, %"class.std::__1::allocator"* nonnull %33) #14
  br label %34

34:                                               ; preds = %28, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret i64 %29

35:                                               ; preds = %3, %109
  %36 = phi %"class.absl::container_internal::btree_node"* [ %112, %109 ], [ %23, %3 ]
  %37 = phi i64 [ %63, %109 ], [ 0, %3 ]
  %38 = phi i32 [ %111, %109 ], [ 0, %3 ]
  %39 = phi i64 [ %110, %109 ], [ %17, %3 ]
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %42, !prof !48

41:                                               ; preds = %35
  call void @llvm.trap() #14
  unreachable

42:                                               ; preds = %35
  %43 = icmp slt i32 %38, 0
  br i1 %43, label %44, label %45, !prof !48

44:                                               ; preds = %42
  call void @llvm.trap() #14
  unreachable

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %36, i64 8, i32 0
  %47 = getelementptr inbounds i8, i8* %46, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = icmp slt i32 %38, %49
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %45
  call void @llvm.trap() #14
  unreachable

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %36, i64 16, i32 0
  %54 = bitcast i8* %53 to %"class.quic::QuicInterval"*
  %55 = sext i32 %38 to i64
  %56 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 %55, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 %55, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %57, %59
  %61 = select i1 %60, i64 %59, i64 %57
  %62 = sub i64 %37, %57
  %63 = add i64 %62, %61
  %64 = getelementptr inbounds i8, i8* %46, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  %67 = add nuw nsw i32 %38, 1
  br i1 %66, label %84, label %68

68:                                               ; preds = %52
  %69 = icmp eq i32 %67, %49
  br i1 %69, label %70, label %109

70:                                               ; preds = %68, %79
  %71 = phi i8* [ %75, %79 ], [ %46, %68 ]
  %72 = phi %"class.absl::container_internal::btree_node"* [ %74, %79 ], [ %36, %68 ]
  %73 = bitcast %"class.absl::container_internal::btree_node"* %72 to %"class.absl::container_internal::btree_node"**
  %74 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %73, align 8
  %75 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %74, i64 8, i32 0
  %76 = getelementptr inbounds i8, i8* %75, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %109

79:                                               ; preds = %70
  %80 = load i8, i8* %71, align 1
  %81 = getelementptr inbounds i8, i8* %75, i64 2
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %80, %82
  br i1 %83, label %70, label %106

84:                                               ; preds = %52
  %85 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %36, i64 256, i32 0
  %86 = bitcast i8* %85 to %"class.absl::container_internal::btree_node"**
  %87 = sext i32 %67 to i64
  %88 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %86, i64 %87
  %89 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %88, align 8
  %90 = ptrtoint %"class.absl::container_internal::btree_node"* %89 to i64
  %91 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %89, i64 8, i32 0
  %92 = getelementptr inbounds i8, i8* %91, i64 3
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %109

95:                                               ; preds = %84, %95
  %96 = phi %"class.absl::container_internal::btree_node"* [ %99, %95 ], [ %89, %84 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %96, i64 256, i32 0
  %98 = bitcast i8* %97 to %"class.absl::container_internal::btree_node"**
  %99 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %98, align 8
  %100 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %99, i64 8, i32 0
  %101 = getelementptr inbounds i8, i8* %100, i64 3
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %95, label %104

104:                                              ; preds = %95
  %105 = ptrtoint %"class.absl::container_internal::btree_node"* %99 to i64
  br label %109

106:                                              ; preds = %79
  %107 = ptrtoint %"class.absl::container_internal::btree_node"* %74 to i64
  %108 = zext i8 %80 to i32
  br label %109

109:                                              ; preds = %70, %106, %104, %68, %84
  %110 = phi i64 [ %39, %68 ], [ %90, %84 ], [ %105, %104 ], [ %107, %106 ], [ %39, %70 ]
  %111 = phi i32 [ %67, %68 ], [ 0, %84 ], [ 0, %104 ], [ %108, %106 ], [ %49, %70 ]
  %112 = inttoptr i64 %110 to %"class.absl::container_internal::btree_node"*
  %113 = icmp ne %"class.absl::container_internal::btree_node"* %18, %112
  %114 = icmp ne i32 %111, %22
  %115 = or i1 %113, %114
  br i1 %115, label %35, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream26OnStreamFrameRetransmittedEmmb(%"class.quic::QuicSpdyStream"*, i64, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  tail call void @_ZN4quic10QuicStream26OnStreamFrameRetransmittedEmmb(%"class.quic::QuicStream"* %5, i64 %1, i64 %2, i1 zeroext %3) #14
  %6 = tail call i64 @_ZNK4quic14QuicSpdyStream28GetNumFrameHeadersInIntervalEmm(%"class.quic::QuicSpdyStream"* %0, i64 %1, i64 %2)
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %8 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %7, align 8
  %9 = icmp eq %"class.quic::QuicAckListenerInterface"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %4
  %11 = sub i64 %2, %6
  %12 = trunc i64 %11 to i32
  %13 = bitcast %"class.quic::QuicAckListenerInterface"* %8 to void (%"class.quic::QuicAckListenerInterface"*, i32)***
  %14 = load void (%"class.quic::QuicAckListenerInterface"*, i32)**, void (%"class.quic::QuicAckListenerInterface"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.quic::QuicAckListenerInterface"*, i32)*, void (%"class.quic::QuicAckListenerInterface"*, i32)** %14, i64 3
  %16 = load void (%"class.quic::QuicAckListenerInterface"*, i32)*, void (%"class.quic::QuicAckListenerInterface"*, i32)** %15, align 8
  tail call void %16(%"class.quic::QuicAckListenerInterface"* nonnull %8, i32 %12) #14
  br label %17

17:                                               ; preds = %4, %10
  ret void
}

declare void @_ZN4quic10QuicStream26OnStreamFrameRetransmittedEmmb(%"class.quic::QuicStream"*, i64, i64, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic15QuicIntervalSetImE12IntersectionERKS1_(%"class.quic::QuicIntervalSet"*, %"class.quic::QuicIntervalSet"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.750", align 8
  %4 = alloca { %"class.absl::container_internal::btree_node"*, i32 }, align 8
  %5 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %4 to %"struct.absl::container_internal::btree_iterator.705"*
  %6 = alloca { %"class.absl::container_internal::btree_node"*, i32 }, align 8
  %7 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %6 to %"struct.absl::container_internal::btree_iterator.705"*
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.quic::QuicInterval", align 8
  %11 = alloca %"struct.std::__1::pair.748", align 8
  %12 = tail call { i64, i64 } @_ZNK4quic15QuicIntervalSetImE16SpanningIntervalEv(%"class.quic::QuicIntervalSet"* %0)
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  %15 = tail call { i64, i64 } @_ZNK4quic15QuicIntervalSetImE16SpanningIntervalEv(%"class.quic::QuicIntervalSet"* %1)
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = icmp ult i64 %13, %14
  br i1 %18, label %19, label %25

19:                                               ; preds = %2
  %20 = icmp ult i64 %16, %17
  %21 = icmp ult i64 %13, %17
  %22 = and i1 %20, %21
  %23 = icmp ugt i64 %14, %16
  %24 = and i1 %23, %22
  br i1 %24, label %35, label %25

25:                                               ; preds = %2, %19
  %26 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %30, align 8
  %32 = bitcast %"class.quic::QuicIntervalSet"* %0 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %31, %"class.std::__1::allocator"* %32) #14
  br label %33

33:                                               ; preds = %25, %29
  %34 = bitcast %"class.quic::QuicIntervalSet"* %0 to <2 x %"class.absl::container_internal::btree_node"*>*
  store <2 x %"class.absl::container_internal::btree_node"*> <%"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*)>, <2 x %"class.absl::container_internal::btree_node"*>* %34, align 8
  store i64 0, i64* %26, align 8
  br label %376

35:                                               ; preds = %19
  %36 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #14
  %37 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %4, i64 0, i32 0
  %38 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %4, i64 0, i32 1
  %39 = bitcast %"class.quic::QuicIntervalSet"* %1 to %"class.absl::container_internal::btree_node"***
  %40 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  %41 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %39, align 8
  %42 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %41, align 8
  %43 = icmp eq %"class.absl::container_internal::btree_node"* %42, null
  br i1 %43, label %44, label %45, !prof !48

44:                                               ; preds = %35
  tail call void @llvm.trap() #14
  unreachable

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %42, i64 8, i32 0
  %47 = getelementptr inbounds i8, i8* %46, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %51, !prof !48

50:                                               ; preds = %45
  tail call void @llvm.trap() #14
  unreachable

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %42, i64 16, i32 0
  %53 = bitcast i8* %52 to %"class.quic::QuicInterval"*
  %54 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZNK4quic15QuicIntervalSetImE25FindIntersectionCandidateERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"* %0, %"class.quic::QuicInterval"* dereferenceable(16) %53) #14
  %55 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %54, 0
  store %"class.absl::container_internal::btree_node"* %55, %"class.absl::container_internal::btree_node"** %37, align 8
  %56 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %54, 1
  store i32 %56, i32* %38, align 8
  %57 = bitcast %"class.quic::QuicIntervalSet"* %0 to %"class.absl::container_internal::btree_node"***
  %58 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %57, align 8
  %59 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %58, align 8
  %60 = bitcast %"struct.std::__1::pair.750"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #14
  %61 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE11erase_rangeENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESJ_(%"struct.std::__1::pair.750"* nonnull sret %3, %"class.absl::container_internal::btree"* %61, %"class.absl::container_internal::btree_node"* %59, i32 0, %"class.absl::container_internal::btree_node"* %55, i32 %56) #14
  %62 = getelementptr inbounds %"struct.std::__1::pair.750", %"struct.std::__1::pair.750"* %3, i64 0, i32 1, i32 0
  %63 = bitcast %"class.absl::container_internal::btree_node"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.750", %"struct.std::__1::pair.750"* %3, i64 0, i32 1, i32 1
  %66 = load i32, i32* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #14
  %67 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %4 to i64*
  store i64 %64, i64* %67, align 8
  store i32 %66, i32* %38, align 8
  %68 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #14
  %69 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %6, i64 0, i32 0
  %70 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %6, i64 0, i32 1
  %71 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 16, i1 false)
  %72 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %57, align 8
  %73 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %72, align 8
  %74 = icmp eq %"class.absl::container_internal::btree_node"* %73, null
  br i1 %74, label %75, label %76, !prof !48

75:                                               ; preds = %51
  call void @llvm.trap() #14
  unreachable

76:                                               ; preds = %51
  %77 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %73, i64 8, i32 0
  %78 = getelementptr inbounds i8, i8* %77, i64 2
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %82, !prof !48

81:                                               ; preds = %76
  call void @llvm.trap() #14
  unreachable

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %73, i64 16, i32 0
  %84 = bitcast i8* %83 to %"class.quic::QuicInterval"*
  %85 = call { %"class.absl::container_internal::btree_node"*, i32 } @_ZNK4quic15QuicIntervalSetImE25FindIntersectionCandidateERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"* %1, %"class.quic::QuicInterval"* dereferenceable(16) %84) #14
  %86 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %85, 0
  store %"class.absl::container_internal::btree_node"* %86, %"class.absl::container_internal::btree_node"** %69, align 8
  %87 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %85, 1
  store i32 %87, i32* %70, align 8
  %88 = call zeroext i1 @_ZN4quic15QuicIntervalSetImE28FindNextIntersectingPairImplIS1_ZNS1_37FindNextIntersectingPairAndEraseHolesERKS1_PN4absl18container_internal14btree_iteratorIKNS6_10btree_nodeINS6_10set_paramsINS_12QuicIntervalImEENS1_12IntervalLessENSt3__19allocatorISB_EELi256ELb0EEEEERKSB_PSJ_EESN_EUlPS1_SM_SM_E_EEbPT_S4_SN_SN_T0_(%"class.quic::QuicIntervalSet"* %0, %"class.quic::QuicIntervalSet"* dereferenceable(24) %1, %"struct.absl::container_internal::btree_iterator.705"* nonnull %5, %"struct.absl::container_internal::btree_iterator.705"* nonnull %7) #14
  br i1 %88, label %89, label %375

89:                                               ; preds = %82
  %90 = bitcast i64* %8 to i8*
  %91 = bitcast i64* %9 to i8*
  %92 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.quic::QuicInterval"* %10 to i8*
  %94 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %10, i64 0, i32 0
  %95 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %10, i64 0, i32 1
  %96 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast %"struct.std::__1::pair.748"* %11 to i8*
  %98 = bitcast %"struct.std::__1::pair.748"* %11 to i64*
  %99 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %11, i64 0, i32 0, i32 1
  %100 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %6 to i64*
  br label %101

101:                                              ; preds = %89, %373
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  store i64 -6148914691236517206, i64* %8, align 8
  store i64 -6148914691236517206, i64* %9, align 8
  %102 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %37, align 8
  %103 = icmp eq %"class.absl::container_internal::btree_node"* %102, null
  br i1 %103, label %104, label %105, !prof !48

104:                                              ; preds = %101
  call void @llvm.trap() #14
  unreachable

105:                                              ; preds = %101
  %106 = load i32, i32* %38, align 8
  %107 = icmp slt i32 %106, 0
  br i1 %107, label %108, label %109, !prof !48

108:                                              ; preds = %105
  call void @llvm.trap() #14
  unreachable

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %102, i64 8, i32 0
  %111 = getelementptr inbounds i8, i8* %110, i64 2
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp slt i32 %106, %113
  br i1 %114, label %116, label %115, !prof !2

115:                                              ; preds = %109
  call void @llvm.trap() #14
  unreachable

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %102, i64 16, i32 0
  %118 = bitcast i8* %117 to %"class.quic::QuicInterval"*
  %119 = sext i32 %106 to i64
  %120 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %118, i64 %119, i32 0
  %121 = load i64, i64* %120, align 8
  store i64 %121, i64* %8, align 8
  %122 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %118, i64 %119, i32 1
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %9, align 8
  %124 = call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5eraseENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %61, %"class.absl::container_internal::btree_node"* nonnull %102, i32 %106) #14
  %125 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %92, align 8
  %126 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %125, i64 8, i32 0
  %127 = getelementptr inbounds i8, i8* %126, i64 2
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  store %"class.absl::container_internal::btree_node"* %125, %"class.absl::container_internal::btree_node"** %37, align 8
  store i32 %129, i32* %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 16, i1 false) #14
  %130 = icmp ult i64 %121, %123
  %131 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %69, align 8
  br label %132

132:                                              ; preds = %247, %116
  %133 = phi i32 [ %129, %116 ], [ %181, %247 ]
  %134 = phi %"class.absl::container_internal::btree_node"* [ %125, %116 ], [ %188, %247 ]
  %135 = phi %"class.absl::container_internal::btree_node"* [ %131, %116 ], [ %248, %247 ]
  %136 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %96, align 8
  %137 = icmp eq %"class.absl::container_internal::btree_node"* %135, %136
  br i1 %137, label %138, label %145

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %135, i64 8, i32 0
  %140 = getelementptr inbounds i8, i8* %139, i64 2
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = load i32, i32* %70, align 8
  %144 = icmp eq i32 %143, %142
  br i1 %144, label %249, label %145

145:                                              ; preds = %138, %132
  %146 = icmp eq %"class.absl::container_internal::btree_node"* %135, null
  br i1 %146, label %147, label %148, !prof !48

147:                                              ; preds = %145
  call void @llvm.trap() #14
  unreachable

148:                                              ; preds = %145
  %149 = load i32, i32* %70, align 8
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %151, label %152, !prof !48

151:                                              ; preds = %148
  call void @llvm.trap() #14
  unreachable

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %135, i64 8, i32 0
  %154 = getelementptr inbounds i8, i8* %153, i64 2
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = icmp slt i32 %149, %156
  br i1 %157, label %159, label %158, !prof !2

158:                                              ; preds = %152
  call void @llvm.trap() #14
  unreachable

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %135, i64 16, i32 0
  %161 = bitcast i8* %160 to %"class.quic::QuicInterval"*
  %162 = sext i32 %149 to i64
  br i1 %130, label %163, label %251

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %161, i64 %162, i32 0
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %161, i64 %162, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = icmp ult i64 %165, %167
  %169 = icmp ult i64 %121, %167
  %170 = and i1 %168, %169
  %171 = icmp ugt i64 %123, %165
  %172 = and i1 %171, %170
  br i1 %172, label %173, label %251

173:                                              ; preds = %163
  %174 = icmp ult i64 %121, %165
  %175 = select i1 %174, i64* %164, i64* %8
  %176 = icmp ult i64 %167, %123
  %177 = select i1 %176, i64* %166, i64* %9
  %178 = load i64, i64* %175, align 8
  %179 = load i64, i64* %177, align 8
  store i64 %178, i64* %94, align 8
  store i64 %179, i64* %95, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #14
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE13insert_uniqueIS5_JRKS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEERKT_DpOT0_(%"struct.std::__1::pair.748"* nonnull sret %11, %"class.absl::container_internal::btree"* %61, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %10, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %10) #14
  %180 = load i64, i64* %98, align 8
  %181 = load i32, i32* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #14
  store i64 %180, i64* %67, align 8
  store i32 %181, i32* %38, align 8
  %182 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %69, align 8
  %183 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %182, i64 8, i32 0
  %184 = getelementptr inbounds i8, i8* %183, i64 3
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 0
  %187 = load i32, i32* %70, align 8
  %188 = inttoptr i64 %180 to %"class.absl::container_internal::btree_node"*
  br i1 %186, label %221, label %189

189:                                              ; preds = %173
  %190 = add nsw i32 %187, 1
  store i32 %190, i32* %70, align 8
  %191 = getelementptr inbounds i8, i8* %183, i64 2
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = icmp slt i32 %190, %193
  br i1 %194, label %247, label %195

195:                                              ; preds = %189
  %196 = load i8, i8* %184, align 1
  %197 = icmp eq i8 %196, 0
  %198 = ptrtoint %"class.absl::container_internal::btree_node"* %182 to i64
  br i1 %197, label %221, label %199

199:                                              ; preds = %195
  %200 = icmp eq i32 %190, %193
  br i1 %200, label %201, label %247

201:                                              ; preds = %199, %210
  %202 = phi i8* [ %216, %210 ], [ %183, %199 ]
  %203 = phi %"class.absl::container_internal::btree_node"* [ %215, %210 ], [ %182, %199 ]
  %204 = bitcast %"class.absl::container_internal::btree_node"* %203 to %"class.absl::container_internal::btree_node"**
  %205 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %204, align 8
  %206 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %205, i64 8, i32 0
  %207 = getelementptr inbounds i8, i8* %206, i64 3
  %208 = load i8, i8* %207, align 1
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %220

210:                                              ; preds = %201
  %211 = load i8, i8* %202, align 1
  %212 = zext i8 %211 to i32
  store i32 %212, i32* %70, align 8
  %213 = bitcast %"class.absl::container_internal::btree_node"* %203 to i64*
  %214 = load i64, i64* %213, align 8
  store i64 %214, i64* %100, align 8
  %215 = inttoptr i64 %214 to %"class.absl::container_internal::btree_node"*
  %216 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %215, i64 8, i32 0
  %217 = getelementptr inbounds i8, i8* %216, i64 2
  %218 = load i8, i8* %217, align 1
  %219 = icmp eq i8 %211, %218
  br i1 %219, label %201, label %245

220:                                              ; preds = %201
  store i64 %198, i64* %100, align 8
  store i32 %190, i32* %70, align 8
  br label %247

221:                                              ; preds = %195, %173
  %222 = phi i32 [ %190, %195 ], [ %187, %173 ]
  %223 = add nsw i32 %222, 1
  %224 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %182, i64 256, i32 0
  %225 = bitcast i8* %224 to %"class.absl::container_internal::btree_node"**
  %226 = sext i32 %223 to i64
  %227 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %225, i64 %226
  %228 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %227, align 8
  store %"class.absl::container_internal::btree_node"* %228, %"class.absl::container_internal::btree_node"** %69, align 8
  %229 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %228, i64 8, i32 0
  %230 = getelementptr inbounds i8, i8* %229, i64 3
  %231 = load i8, i8* %230, align 1
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %243

233:                                              ; preds = %221, %233
  %234 = phi %"class.absl::container_internal::btree_node"* [ %237, %233 ], [ %228, %221 ]
  %235 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %234, i64 256, i32 0
  %236 = bitcast i8* %235 to %"class.absl::container_internal::btree_node"**
  %237 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %236, align 8
  %238 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %237, i64 8, i32 0
  %239 = getelementptr inbounds i8, i8* %238, i64 3
  %240 = load i8, i8* %239, align 1
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %233, label %242

242:                                              ; preds = %233
  store %"class.absl::container_internal::btree_node"* %237, %"class.absl::container_internal::btree_node"** %69, align 8
  br label %243

243:                                              ; preds = %242, %221
  %244 = phi %"class.absl::container_internal::btree_node"* [ %237, %242 ], [ %228, %221 ]
  store i32 0, i32* %70, align 8
  br label %247

245:                                              ; preds = %210
  %246 = inttoptr i64 %214 to %"class.absl::container_internal::btree_node"*
  br label %247

247:                                              ; preds = %245, %189, %199, %220, %243
  %248 = phi %"class.absl::container_internal::btree_node"* [ %246, %245 ], [ %182, %189 ], [ %182, %199 ], [ %182, %220 ], [ %244, %243 ]
  br label %132

249:                                              ; preds = %138
  %250 = zext i8 %141 to i32
  br label %251

251:                                              ; preds = %163, %159, %249
  %252 = phi i32 [ %250, %249 ], [ %149, %159 ], [ %149, %163 ]
  %253 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %135, i64 8, i32 0
  %254 = getelementptr inbounds i8, i8* %253, i64 3
  %255 = load i8, i8* %254, align 1
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %282, label %257

257:                                              ; preds = %251
  %258 = add nsw i32 %252, -1
  store i32 %258, i32* %70, align 8
  %259 = icmp sgt i32 %252, 0
  br i1 %259, label %313, label %260

260:                                              ; preds = %257
  %261 = load i8, i8* %254, align 1
  %262 = icmp eq i8 %261, 0
  %263 = ptrtoint %"class.absl::container_internal::btree_node"* %135 to i64
  br i1 %262, label %282, label %264

264:                                              ; preds = %260, %272
  %265 = phi %"class.absl::container_internal::btree_node"* [ %280, %272 ], [ %135, %260 ]
  %266 = bitcast %"class.absl::container_internal::btree_node"* %265 to %"class.absl::container_internal::btree_node"**
  %267 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %266, align 8
  %268 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %267, i64 8, i32 0
  %269 = getelementptr inbounds i8, i8* %268, i64 3
  %270 = load i8, i8* %269, align 1
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %272, label %281

272:                                              ; preds = %264
  %273 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %265, i64 8, i32 0
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i32 %275, -1
  store i32 %276, i32* %70, align 8
  %277 = bitcast %"class.absl::container_internal::btree_node"* %265 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %100, align 8
  %279 = icmp eq i8 %274, 0
  %280 = inttoptr i64 %278 to %"class.absl::container_internal::btree_node"*
  br i1 %279, label %264, label %313

281:                                              ; preds = %264
  store i64 %263, i64* %100, align 8
  store i32 %258, i32* %70, align 8
  br label %313

282:                                              ; preds = %260, %251
  %283 = phi i32 [ %258, %260 ], [ %252, %251 ]
  %284 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %135, i64 256, i32 0
  %285 = bitcast i8* %284 to %"class.absl::container_internal::btree_node"**
  %286 = sext i32 %283 to i64
  %287 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %285, i64 %286
  %288 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %287, align 8
  store %"class.absl::container_internal::btree_node"* %288, %"class.absl::container_internal::btree_node"** %69, align 8
  %289 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %288, i64 8, i32 0
  %290 = getelementptr inbounds i8, i8* %289, i64 3
  %291 = load i8, i8* %290, align 1
  %292 = icmp eq i8 %291, 0
  %293 = getelementptr inbounds i8, i8* %289, i64 2
  %294 = load i8, i8* %293, align 1
  br i1 %292, label %295, label %309

295:                                              ; preds = %282, %295
  %296 = phi i8 [ %308, %295 ], [ %294, %282 ]
  %297 = phi %"class.absl::container_internal::btree_node"* [ %302, %295 ], [ %288, %282 ]
  %298 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %297, i64 256, i32 0
  %299 = bitcast i8* %298 to %"class.absl::container_internal::btree_node"**
  %300 = zext i8 %296 to i64
  %301 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %299, i64 %300
  %302 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %301, align 8
  store %"class.absl::container_internal::btree_node"* %302, %"class.absl::container_internal::btree_node"** %69, align 8
  %303 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %302, i64 8, i32 0
  %304 = getelementptr inbounds i8, i8* %303, i64 3
  %305 = load i8, i8* %304, align 1
  %306 = icmp eq i8 %305, 0
  %307 = getelementptr inbounds i8, i8* %303, i64 2
  %308 = load i8, i8* %307, align 1
  br i1 %306, label %295, label %309

309:                                              ; preds = %295, %282
  %310 = phi i8 [ %294, %282 ], [ %308, %295 ]
  %311 = zext i8 %310 to i32
  %312 = add nsw i32 %311, -1
  store i32 %312, i32* %70, align 8
  br label %313

313:                                              ; preds = %272, %257, %281, %309
  %314 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %134, i64 8, i32 0
  %315 = getelementptr inbounds i8, i8* %314, i64 3
  %316 = load i8, i8* %315, align 1
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %350, label %318

318:                                              ; preds = %313
  %319 = add nsw i32 %133, 1
  store i32 %319, i32* %38, align 8
  %320 = getelementptr inbounds i8, i8* %314, i64 2
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i32
  %323 = icmp slt i32 %319, %322
  br i1 %323, label %373, label %324

324:                                              ; preds = %318
  %325 = load i8, i8* %315, align 1
  %326 = icmp eq i8 %325, 0
  %327 = ptrtoint %"class.absl::container_internal::btree_node"* %134 to i64
  br i1 %326, label %350, label %328

328:                                              ; preds = %324
  %329 = icmp eq i32 %319, %322
  br i1 %329, label %330, label %373

330:                                              ; preds = %328, %339
  %331 = phi i8* [ %345, %339 ], [ %314, %328 ]
  %332 = phi %"class.absl::container_internal::btree_node"* [ %344, %339 ], [ %134, %328 ]
  %333 = bitcast %"class.absl::container_internal::btree_node"* %332 to %"class.absl::container_internal::btree_node"**
  %334 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %333, align 8
  %335 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %334, i64 8, i32 0
  %336 = getelementptr inbounds i8, i8* %335, i64 3
  %337 = load i8, i8* %336, align 1
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %339, label %349

339:                                              ; preds = %330
  %340 = load i8, i8* %331, align 1
  %341 = zext i8 %340 to i32
  store i32 %341, i32* %38, align 8
  %342 = bitcast %"class.absl::container_internal::btree_node"* %332 to i64*
  %343 = load i64, i64* %342, align 8
  store i64 %343, i64* %67, align 8
  %344 = inttoptr i64 %343 to %"class.absl::container_internal::btree_node"*
  %345 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %344, i64 8, i32 0
  %346 = getelementptr inbounds i8, i8* %345, i64 2
  %347 = load i8, i8* %346, align 1
  %348 = icmp eq i8 %340, %347
  br i1 %348, label %330, label %373

349:                                              ; preds = %330
  store i64 %327, i64* %67, align 8
  store i32 %319, i32* %38, align 8
  br label %373

350:                                              ; preds = %324, %313
  %351 = phi i32 [ %319, %324 ], [ %133, %313 ]
  %352 = add nsw i32 %351, 1
  %353 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %134, i64 256, i32 0
  %354 = bitcast i8* %353 to %"class.absl::container_internal::btree_node"**
  %355 = sext i32 %352 to i64
  %356 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %354, i64 %355
  %357 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %356, align 8
  store %"class.absl::container_internal::btree_node"* %357, %"class.absl::container_internal::btree_node"** %37, align 8
  %358 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %357, i64 8, i32 0
  %359 = getelementptr inbounds i8, i8* %358, i64 3
  %360 = load i8, i8* %359, align 1
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %362, label %372

362:                                              ; preds = %350, %362
  %363 = phi %"class.absl::container_internal::btree_node"* [ %366, %362 ], [ %357, %350 ]
  %364 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %363, i64 256, i32 0
  %365 = bitcast i8* %364 to %"class.absl::container_internal::btree_node"**
  %366 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %365, align 8
  %367 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %366, i64 8, i32 0
  %368 = getelementptr inbounds i8, i8* %367, i64 3
  %369 = load i8, i8* %368, align 1
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %362, label %371

371:                                              ; preds = %362
  store %"class.absl::container_internal::btree_node"* %366, %"class.absl::container_internal::btree_node"** %37, align 8
  br label %372

372:                                              ; preds = %371, %350
  store i32 0, i32* %38, align 8
  br label %373

373:                                              ; preds = %339, %318, %328, %349, %372
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  %374 = call zeroext i1 @_ZN4quic15QuicIntervalSetImE28FindNextIntersectingPairImplIS1_ZNS1_37FindNextIntersectingPairAndEraseHolesERKS1_PN4absl18container_internal14btree_iteratorIKNS6_10btree_nodeINS6_10set_paramsINS_12QuicIntervalImEENS1_12IntervalLessENSt3__19allocatorISB_EELi256ELb0EEEEERKSB_PSJ_EESN_EUlPS1_SM_SM_E_EEbPT_S4_SN_SN_T0_(%"class.quic::QuicIntervalSet"* %0, %"class.quic::QuicIntervalSet"* dereferenceable(24) %1, %"struct.absl::container_internal::btree_iterator.705"* nonnull %5, %"struct.absl::container_internal::btree_iterator.705"* nonnull %7) #14
  br i1 %374, label %101, label %375

375:                                              ; preds = %373, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #14
  br label %376

376:                                              ; preds = %375, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream19OnHeadersFrameStartEmm(%"class.quic::QuicSpdyStream"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %6 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %6, i64 0, i32 26
  %8 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %7, align 8
  %9 = icmp eq %"class.quic::Http3DebugVisitor"* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %12 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %13 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %13, i64 8
  %15 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %14, align 8
  %16 = tail call i32 %15(%"class.quic::QuicStream"* %11) #14
  %17 = bitcast %"class.quic::Http3DebugVisitor"* %8 to void (%"class.quic::Http3DebugVisitor"*, i32, i64)***
  %18 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64)**, void (%"class.quic::Http3DebugVisitor"*, i32, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64)** %18, i64 17
  %20 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64)** %19, align 8
  tail call void %20(%"class.quic::Http3DebugVisitor"* nonnull %8, i32 %16, i64 %2) #14
  br label %21

21:                                               ; preds = %3, %10
  %22 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 9
  store i64 %2, i64* %22, align 8
  %23 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 10
  %24 = load i8, i8* %23, align 8, !range !12
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 5
  %28 = load %"class.quic::StreamDelegateInterface"*, %"class.quic::StreamDelegateInterface"** %27, align 8
  %29 = tail call i8* @_Znwm(i64 48) #18
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 46, i64 -9223372036854775760>, <2 x i64>* %32, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 getelementptr inbounds ([47 x i8], [47 x i8]* @.str.19, i64 0, i64 0), i64 46, i1 false) #14
  %33 = getelementptr inbounds i8, i8* %29, i64 46
  store i8 0, i8* %33, align 1
  %34 = bitcast %"class.quic::StreamDelegateInterface"* %28 to void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %35 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %35, i64 2
  %37 = load void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::StreamDelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %36, align 8
  call void %37(%"class.quic::StreamDelegateInterface"* %28, i32 151, %"class.std::__1::basic_string"* nonnull %4) #14
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %75

42:                                               ; preds = %26
  %43 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %43) #18
  br label %75

44:                                               ; preds = %21
  %45 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %46 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %48 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %47, i64 %1) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %46, i64 %48) #14
  %49 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %50 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %50, i64 8
  %52 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %51, align 8
  %53 = tail call i32 %52(%"class.quic::QuicStream"* %45) #14
  %54 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %55 = tail call %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"* %54) #14
  %56 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %57 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %56, i64 0, i32 15
  %58 = load i64, i64* %57, align 8
  %59 = tail call i8* @_Znwm(i64 136) #18
  %60 = bitcast i8* %59 to %"class.quic::QpackDecodedHeadersAccumulator"*
  %61 = icmp eq %"class.quic::QuicSpdyStream"* %0, null
  %62 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 1
  %63 = select i1 %61, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* null, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %62
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulatorC1EjPNS_12QpackDecoderEPNS0_7VisitorEm(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %60, i32 %53, %"class.quic::QpackDecoder"* %55, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %63, i64 %58) #14
  %64 = ptrtoint i8* %59 to i64
  %65 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.637"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %66, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.637"* %65 to i64*
  store i64 %64, i64* %68, align 8
  %69 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %67, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %44
  %71 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %67 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %72 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %72, i64 1
  %74 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %73, align 8
  tail call void %74(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %67) #14
  br label %75

75:                                               ; preds = %44, %70, %42, %26
  %76 = phi i1 [ false, %26 ], [ false, %42 ], [ true, %70 ], [ true, %44 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream21OnHeadersFramePayloadEN4absl11string_viewE(%"class.quic::QuicSpdyStream"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %4, align 8
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulator6DecodeEN4absl11string_viewE(%"class.quic::QpackDecodedHeadersAccumulator"* %5, i8* %1, i64 %2) #14
  %6 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %4, align 8
  %7 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %11 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %10, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %9, i64 %11) #14
  br label %12

12:                                               ; preds = %3, %8
  %13 = phi i1 [ true, %8 ], [ false, %3 ]
  ret i1 %13
}

declare void @_ZN4quic30QpackDecodedHeadersAccumulator6DecodeEN4absl11string_viewE(%"class.quic::QpackDecodedHeadersAccumulator"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream17OnHeadersFrameEndEv(%"class.quic::QuicSpdyStream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %2, align 8
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulator14EndHeaderBlockEv(%"class.quic::QpackDecodedHeadersAccumulator"* %3) #14
  %4 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %2, align 8
  %5 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 5
  store i8 1, i8* %7, align 8
  br label %19

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %10 = tail call zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"* %9) #14
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1, i32 9
  %13 = load i8, i8* %12, align 4, !range !12
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 10
  %17 = load i8, i8* %16, align 8, !range !12
  %18 = icmp eq i8 %17, 0
  br label %19

19:                                               ; preds = %15, %11, %8, %6
  %20 = phi i1 [ false, %6 ], [ false, %8 ], [ false, %11 ], [ %18, %15 ]
  ret i1 %20
}

declare void @_ZN4quic30QpackDecodedHeadersAccumulator14EndHeaderBlockEv(%"class.quic::QpackDecodedHeadersAccumulator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream23OnPushPromiseFrameStartEm(%"class.quic::QuicSpdyStream"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %5 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %4, i64 %1) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %3, i64 %5) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream24OnPushPromiseFramePushIdEmmm(%"class.quic::QuicSpdyStream"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %6 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %6, i64 0, i32 26
  %8 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %7, align 8
  %9 = icmp eq %"class.quic::Http3DebugVisitor"* %8, null
  %10 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %11 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  br i1 %9, label %12, label %14

12:                                               ; preds = %4
  %13 = trunc i64 %1 to i32
  br label %25

14:                                               ; preds = %4
  %15 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %11, align 8
  %16 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %15, i64 8
  %17 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %16, align 8
  %18 = tail call i32 %17(%"class.quic::QuicStream"* %10) #14
  %19 = trunc i64 %1 to i32
  %20 = bitcast %"class.quic::Http3DebugVisitor"* %8 to void (%"class.quic::Http3DebugVisitor"*, i32, i32, i64)***
  %21 = load void (%"class.quic::Http3DebugVisitor"*, i32, i32, i64)**, void (%"class.quic::Http3DebugVisitor"*, i32, i32, i64)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i32, i64)** %21, i64 19
  %23 = load void (%"class.quic::Http3DebugVisitor"*, i32, i32, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i32, i64)** %22, align 8
  tail call void %23(%"class.quic::Http3DebugVisitor"* nonnull %8, i32 %18, i32 %19, i64 %3) #14
  %24 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  br label %25

25:                                               ; preds = %12, %14
  %26 = phi i32 [ %13, %12 ], [ %19, %14 ]
  %27 = phi %"class.quic::QuicSpdySession"* [ %6, %12 ], [ %24, %14 ]
  %28 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %11, align 8
  %29 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %28, i64 8
  %30 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %29, align 8
  %31 = tail call i32 %30(%"class.quic::QuicStream"* %10) #14
  tail call void @_ZN4quic15QuicSpdySession13OnPushPromiseEjj(%"class.quic::QuicSpdySession"* %27, i32 %31, i32 %26) #14
  %32 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %34 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %33, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %32, i64 %34) #14
  %35 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %11, align 8
  %36 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %35, i64 8
  %37 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %36, align 8
  %38 = tail call i32 %37(%"class.quic::QuicStream"* %10) #14
  %39 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %40 = tail call %"class.quic::QpackDecoder"* @_ZN4quic15QuicSpdySession13qpack_decoderEv(%"class.quic::QuicSpdySession"* %39) #14
  %41 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %42 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %41, i64 0, i32 15
  %43 = load i64, i64* %42, align 8
  %44 = tail call i8* @_Znwm(i64 136) #18
  %45 = bitcast i8* %44 to %"class.quic::QpackDecodedHeadersAccumulator"*
  %46 = icmp eq %"class.quic::QuicSpdyStream"* %0, null
  %47 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 1
  %48 = select i1 %46, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* null, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %47
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulatorC1EjPNS_12QpackDecoderEPNS0_7VisitorEm(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %45, i32 %38, %"class.quic::QpackDecoder"* %40, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %48, i64 %43) #14
  %49 = ptrtoint i8* %44 to i64
  %50 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.637"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.637"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %52, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %25
  %56 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %52 to void (%"class.quic::QpackDecodedHeadersAccumulator"*)***
  %57 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)**, void (%"class.quic::QpackDecodedHeadersAccumulator"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %57, i64 1
  %59 = load void (%"class.quic::QpackDecodedHeadersAccumulator"*)*, void (%"class.quic::QpackDecodedHeadersAccumulator"*)** %58, align 8
  tail call void %59(%"class.quic::QpackDecodedHeadersAccumulator"* nonnull %52) #14
  br label %60

60:                                               ; preds = %55, %25
  ret i1 true
}

declare void @_ZN4quic15QuicSpdySession13OnPushPromiseEjj(%"class.quic::QuicSpdySession"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream25OnPushPromiseFramePayloadEN4absl11string_viewE(%"class.quic::QuicSpdyStream"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %5 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %4, align 8
  tail call void @_ZN4quic15QuicSpdySession21OnCompressedFrameSizeEm(%"class.quic::QuicSpdySession"* %5, i64 %2) #14
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %7 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %6, align 8
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulator6DecodeEN4absl11string_viewE(%"class.quic::QpackDecodedHeadersAccumulator"* %7, i8* %1, i64 %2) #14
  %8 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %6, align 8
  %9 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %13 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %12, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %11, i64 %13) #14
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i1 [ true, %10 ], [ false, %3 ]
  ret i1 %15
}

declare void @_ZN4quic15QuicSpdySession21OnCompressedFrameSizeEm(%"class.quic::QuicSpdySession"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream21OnPushPromiseFrameEndEv(%"class.quic::QuicSpdyStream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %2, align 8
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulator14EndHeaderBlockEv(%"class.quic::QpackDecodedHeadersAccumulator"* %3) #14
  %4 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %2, align 8
  %5 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 5
  store i8 1, i8* %7, align 8
  br label %19

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %10 = tail call zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"* %9) #14
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1, i32 9
  %13 = load i8, i8* %12, align 4, !range !12
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 10
  %17 = load i8, i8* %16, align 8, !range !12
  %18 = icmp eq i8 %17, 0
  br label %19

19:                                               ; preds = %6, %8, %11, %15
  %20 = phi i1 [ false, %6 ], [ false, %8 ], [ false, %11 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream29OnWebTransportStreamFrameTypeEmm(%"class.quic::QuicSpdyStream"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %5 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %6, i64 %1) #14
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 9
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 6
  %12 = load i8, i8* %11, align 1, !range !12
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10, %3
  %15 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*, i32)***
  %16 = load void (%"class.quic::QuicSpdyStream"*, i32)**, void (%"class.quic::QuicSpdyStream"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*, i32)*, void (%"class.quic::QuicSpdyStream"*, i32)** %16, i64 5
  %18 = load void (%"class.quic::QuicSpdyStream"*, i32)*, void (%"class.quic::QuicSpdyStream"*, i32)** %17, align 8
  tail call void %18(%"class.quic::QuicSpdyStream"* %0, i32 22) #14
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %21 = bitcast %"class.quic::QuicSpdySession"** %20 to %"class.quic::QuicSession"**
  %22 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %21, align 8
  %23 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %22, i64 0, i32 8
  %24 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %23, align 8, !noalias !49
  %25 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %24, i64 0, i32 8, i32 8, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !52
  %27 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %24, i64 0, i32 8, i32 8, i32 1
  %28 = load i32, i32* %27, align 4, !noalias !52
  %29 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 0
  store i32 %26, i32* %29, align 4, !alias.scope !52
  %30 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 1
  store i32 %28, i32* %30, align 4, !alias.scope !52
  %31 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %32 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %32, i64 8
  %34 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %33, align 8
  %35 = tail call i32 %34(%"class.quic::QuicStream"* %5) #14
  %36 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %21, align 8
  %37 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %36, i64 0, i32 9
  %38 = load i8, i8* %37, align 8
  %39 = call zeroext i1 @_ZN4quic9QuicUtils18IsOutgoingStreamIdENS_17ParsedQuicVersionEjNS_11PerspectiveE(%"struct.quic::ParsedQuicVersion"* nonnull %4, i32 %35, i8 zeroext %38) #14
  br i1 %39, label %40, label %45

40:                                               ; preds = %19
  %41 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicSpdyStream"*, i32)***
  %42 = load void (%"class.quic::QuicSpdyStream"*, i32)**, void (%"class.quic::QuicSpdyStream"*, i32)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*, i32)*, void (%"class.quic::QuicSpdyStream"*, i32)** %42, i64 5
  %44 = load void (%"class.quic::QuicSpdyStream"*, i32)*, void (%"class.quic::QuicSpdyStream"*, i32)** %43, align 8
  call void %44(%"class.quic::QuicSpdyStream"* %0, i32 22) #14
  br label %45

45:                                               ; preds = %40, %19
  %46 = call i8* @_Znwm(i64 56) #18
  %47 = bitcast i8* %46 to i64*
  store i64 %2, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 8
  %49 = bitcast i8* %48 to %"class.quic::WebTransportStreamAdapter"*
  %50 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %21, align 8
  call void @_ZN4quic25WebTransportStreamAdapterC1EPNS_11QuicSessionEPNS_10QuicStreamEPNS_19QuicStreamSequencerE(%"class.quic::WebTransportStreamAdapter"* %49, %"class.quic::QuicSession"* %50, %"class.quic::QuicStream"* %5, %"class.quic::QuicStreamSequencer"* %6) #14
  %51 = ptrtoint i8* %46 to i64
  %52 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.677", %"class.std::__1::unique_ptr.677"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %53, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.677"* %52 to i64*
  store i64 %51, i64* %55, align 8
  %56 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %54, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %54, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN4quic25WebTransportStreamAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %54, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.quic::WebTransportStreamVisitor"*, %"class.quic::WebTransportStreamVisitor"** %59, align 8
  store %"class.quic::WebTransportStreamVisitor"* null, %"class.quic::WebTransportStreamVisitor"** %59, align 8
  %61 = icmp eq %"class.quic::WebTransportStreamVisitor"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.quic::WebTransportStreamVisitor"* %60 to void (%"class.quic::WebTransportStreamVisitor"*)***
  %64 = load void (%"class.quic::WebTransportStreamVisitor"*)**, void (%"class.quic::WebTransportStreamVisitor"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.quic::WebTransportStreamVisitor"*)*, void (%"class.quic::WebTransportStreamVisitor"*)** %64, i64 1
  %66 = load void (%"class.quic::WebTransportStreamVisitor"*)*, void (%"class.quic::WebTransportStreamVisitor"*)** %65, align 8
  call void %66(%"class.quic::WebTransportStreamVisitor"* nonnull %60) #14
  br label %67

67:                                               ; preds = %62, %57
  %68 = bitcast %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %54 to i8*
  call void @_ZdlPv(i8* %68) #18
  br label %69

69:                                               ; preds = %67, %45
  %70 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %20, align 8
  %71 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %31, align 8
  %72 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %71, i64 8
  %73 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %72, align 8
  %74 = call i32 %73(%"class.quic::QuicStream"* %5) #14
  call void @_ZN4quic15QuicSpdySession46AssociateIncomingWebTransportStreamWithSessionEmj(%"class.quic::QuicSpdySession"* %70, i64 %2, i32 %74) #14
  ret void
}

declare zeroext i1 @_ZN4quic9QuicUtils18IsOutgoingStreamIdENS_17ParsedQuicVersionEjNS_11PerspectiveE(%"struct.quic::ParsedQuicVersion"*, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession46AssociateIncomingWebTransportStreamWithSessionEmj(%"class.quic::QuicSpdySession"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream19OnUnknownFrameStartEmmm(%"class.quic::QuicSpdyStream"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %6 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %5, align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %6, i64 0, i32 26
  %8 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %7, align 8
  %9 = icmp eq %"class.quic::Http3DebugVisitor"* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %12 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %13 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %13, i64 8
  %15 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %14, align 8
  %16 = tail call i32 %15(%"class.quic::QuicStream"* %11) #14
  %17 = bitcast %"class.quic::Http3DebugVisitor"* %8 to void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)***
  %18 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)**, void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)** %18, i64 21
  %20 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)** %19, align 8
  tail call void %20(%"class.quic::Http3DebugVisitor"* nonnull %8, i32 %16, i64 %1, i64 %3) #14
  br label %21

21:                                               ; preds = %4, %10
  %22 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %24 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %23, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %22, i64 %24) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream21OnUnknownFramePayloadEN4absl11string_viewE(%"class.quic::QuicSpdyStream"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 16
  %6 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %5, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %4, i64 %6) #14
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4quic14QuicSpdyStream17OnUnknownFrameEndEv(%"class.quic::QuicSpdyStream"* nocapture readnone) local_unnamed_addr #8 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic14QuicSpdyStream16WriteHeadersImplEN4spdy16Http2HeaderBlockEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicSpdyStream"*, %"class.spdy::Http2HeaderBlock"*, i1 zeroext, %"class.quic::QuicReferenceCountedPointer"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.quic::QuicInterval", align 8
  %6 = alloca %"class.spdy::Http2HeaderBlock", align 8
  %7 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::unique_ptr.577", align 8
  %11 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %12 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %13 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %14 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %13) #14
  %15 = icmp sgt i32 %14, 51
  br i1 %15, label %50, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %18 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %17, align 8
  %19 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %20 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %20, i64 8
  %22 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %21, align 8
  %23 = tail call i32 %22(%"class.quic::QuicStream"* %13) #14
  call void @_ZN4spdy16Http2HeaderBlockC1EOS0_(%"class.spdy::Http2HeaderBlock"* nonnull %6, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %1) #14
  %24 = call dereferenceable(16) %"class.spdy::StreamPrecedence"* @_ZNK4quic10QuicStream10precedenceEv(%"class.quic::QuicStream"* %13) #14
  %25 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %3, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.quic::QuicReferenceCountedPointer"* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.quic::QuicReferenceCountedPointer"* %7 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %25, align 8
  %29 = bitcast %"class.quic::QuicSpdySession"* %18 to i64 (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1, %"class.spdy::StreamPrecedence"*, %"class.quic::QuicReferenceCountedPointer"*)***
  %30 = load i64 (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1, %"class.spdy::StreamPrecedence"*, %"class.quic::QuicReferenceCountedPointer"*)**, i64 (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1, %"class.spdy::StreamPrecedence"*, %"class.quic::QuicReferenceCountedPointer"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1, %"class.spdy::StreamPrecedence"*, %"class.quic::QuicReferenceCountedPointer"*)*, i64 (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1, %"class.spdy::StreamPrecedence"*, %"class.quic::QuicReferenceCountedPointer"*)** %30, i64 120
  %32 = load i64 (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1, %"class.spdy::StreamPrecedence"*, %"class.quic::QuicReferenceCountedPointer"*)*, i64 (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1, %"class.spdy::StreamPrecedence"*, %"class.quic::QuicReferenceCountedPointer"*)** %31, align 8
  %33 = call i64 %32(%"class.quic::QuicSpdySession"* %18, i32 %23, %"class.spdy::Http2HeaderBlock"* nonnull %6, i1 zeroext %2, %"class.spdy::StreamPrecedence"* dereferenceable(16) %24, %"class.quic::QuicReferenceCountedPointer"* nonnull %7) #14
  %34 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %7, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %34, align 8
  %36 = icmp eq %"class.quic::QuicAckListenerInterface"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %35, i64 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.519"* %43 to %"class.quic::QuicReferenceCountedImpl"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.519"* %43 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %46 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %46, i64 1
  %48 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %47, align 8
  call void %48(%"class.quic::QuicReferenceCountedImpl"* nonnull %44) #14
  br label %49

49:                                               ; preds = %16, %37, %42
  call void @_ZN4spdy16Http2HeaderBlockD1Ev(%"class.spdy::Http2HeaderBlock"* nonnull %6) #14
  br label %174

50:                                               ; preds = %4
  %51 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #14
  store i64 -6148914691236517206, i64* %8, align 8
  %52 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %56 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %55, align 8
  %58 = tail call %"class.quic::QpackEncoder"* @_ZN4quic15QuicSpdySession13qpack_encoderEv(%"class.quic::QuicSpdySession"* %57) #14
  %59 = bitcast %"class.quic::QuicSpdyStream"* %0 to i32 (%"class.quic::QuicStream"*)***
  %60 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %60, i64 8
  %62 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %61, align 8
  %63 = tail call i32 %62(%"class.quic::QuicStream"* %13) #14
  call void @_ZN4quic12QpackEncoder16EncodeHeaderListEjRKN4spdy16Http2HeaderBlockEPm(%"class.std::__1::basic_string"* nonnull sret %9, %"class.quic::QpackEncoder"* %58, i32 %63, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %1, i64* nonnull %8) #14
  %64 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %55, align 8
  %65 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %64, i64 0, i32 26
  %66 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %65, align 8
  %67 = icmp eq %"class.quic::Http3DebugVisitor"* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %50
  %69 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %59, align 8
  %70 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %69, i64 8
  %71 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %70, align 8
  %72 = call i32 %71(%"class.quic::QuicStream"* %13) #14
  %73 = bitcast %"class.quic::Http3DebugVisitor"* %66 to void (%"class.quic::Http3DebugVisitor"*, i32, %"class.spdy::Http2HeaderBlock"*)***
  %74 = load void (%"class.quic::Http3DebugVisitor"*, i32, %"class.spdy::Http2HeaderBlock"*)**, void (%"class.quic::Http3DebugVisitor"*, i32, %"class.spdy::Http2HeaderBlock"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, %"class.spdy::Http2HeaderBlock"*)*, void (%"class.quic::Http3DebugVisitor"*, i32, %"class.spdy::Http2HeaderBlock"*)** %74, i64 27
  %76 = load void (%"class.quic::Http3DebugVisitor"*, i32, %"class.spdy::Http2HeaderBlock"*)*, void (%"class.quic::Http3DebugVisitor"*, i32, %"class.spdy::Http2HeaderBlock"*)** %75, align 8
  call void %76(%"class.quic::Http3DebugVisitor"* nonnull %66, i32 %72, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %1) #14
  br label %77

77:                                               ; preds = %50, %68
  %78 = bitcast %"class.std::__1::unique_ptr.577"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #14
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %10, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::unique_ptr.577"* %10 to i64*
  store i64 0, i64* %80, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = load i64, i64* %54, align 8
  %86 = zext i8 %83 to i64
  %87 = select i1 %84, i64 %85, i64 %86
  %88 = call i64 @_ZN4quic11HttpEncoder27SerializeHeadersFrameHeaderEmPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(i64 %87, %"class.std::__1::unique_ptr.577"* nonnull %10) #14
  %89 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 20
  %90 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 28, i32 2
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, %88
  %93 = bitcast %"class.quic::QuicInterval"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #14
  %94 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %5, i64 0, i32 0
  store i64 %91, i64* %94, align 8
  %95 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %5, i64 0, i32 1
  store i64 %92, i64* %95, align 8
  call void @_ZN4quic15QuicIntervalSetImE3AddERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"* %89, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #14
  %96 = icmp sgt i64 %88, -1
  br i1 %96, label %98, label %97, !prof !2

97:                                               ; preds = %77
  call void @llvm.trap() #14
  unreachable

98:                                               ; preds = %77
  %99 = load i8*, i8** %79, align 8
  %100 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %100, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %13, i8* %99, i64 %88, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %11) #14
  %101 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %100, align 8
  %102 = icmp eq %"class.quic::QuicAckListenerInterface"* %101, null
  br i1 %102, label %115, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %101, i64 0, i32 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw sub i32* %105, i32 1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %115

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %104, i64 -2
  %110 = bitcast %"class.base::RefCountedThreadSafe.519"* %109 to %"class.quic::QuicReferenceCountedImpl"*
  %111 = bitcast %"class.base::RefCountedThreadSafe.519"* %109 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %112 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %112, i64 1
  %114 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %113, align 8
  call void %114(%"class.quic::QuicReferenceCountedImpl"* nonnull %110) #14
  br label %115

115:                                              ; preds = %98, %103, %108
  %116 = load i8, i8* %82, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = zext i8 %116 to i64
  %120 = ptrtoint %"class.std::__1::basic_string"* %9 to i64
  br label %127

121:                                              ; preds = %115
  %122 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = load i64, i64* %54, align 8
  %125 = icmp sgt i64 %124, -1
  br i1 %125, label %127, label %126, !prof !2

126:                                              ; preds = %121
  call void @llvm.trap() #14
  unreachable

127:                                              ; preds = %118, %121
  %128 = phi i64 [ %123, %121 ], [ %120, %118 ]
  %129 = phi i64 [ %124, %121 ], [ %119, %118 ]
  %130 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %130, align 8
  %131 = inttoptr i64 %128 to i8*
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %13, i8* %131, i64 %129, i1 zeroext %2, %"class.quic::QuicReferenceCountedPointer"* nonnull %12) #14
  %132 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %130, align 8
  %133 = icmp eq %"class.quic::QuicAckListenerInterface"* %132, null
  br i1 %133, label %146, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %132, i64 0, i32 0, i32 0, i32 1
  %136 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw sub i32* %136, i32 1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %146

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %135, i64 -2
  %141 = bitcast %"class.base::RefCountedThreadSafe.519"* %140 to %"class.quic::QuicReferenceCountedImpl"*
  %142 = bitcast %"class.base::RefCountedThreadSafe.519"* %140 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %143 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %143, i64 1
  %145 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %144, align 8
  call void %145(%"class.quic::QuicReferenceCountedImpl"* nonnull %141) #14
  br label %146

146:                                              ; preds = %127, %134, %139
  %147 = load i8, i8* %82, align 1
  %148 = icmp slt i8 %147, 0
  %149 = load i64, i64* %54, align 8
  %150 = zext i8 %147 to i64
  %151 = select i1 %148, i64 %149, i64 %150
  %152 = load i64, i64* %8, align 8
  %153 = add i64 %151, %152
  %154 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 2
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %1, i64 0, i32 3
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, %155
  call void @_ZN4quic15QuicSpdySession34LogHeaderCompressionRatioHistogramEbbmm(i1 zeroext true, i1 zeroext true, i64 %153, i64 %158) #14
  %159 = load i8, i8* %82, align 1
  %160 = icmp slt i8 %159, 0
  %161 = load i64, i64* %54, align 8
  %162 = zext i8 %159 to i64
  %163 = select i1 %160, i64 %161, i64 %162
  %164 = load i8*, i8** %79, align 8
  store i8* null, i8** %79, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %146
  call void @_ZdaPv(i8* nonnull %164) #18
  %167 = load i8, i8* %82, align 1
  br label %168

168:                                              ; preds = %146, %166
  %169 = phi i8 [ %159, %146 ], [ %167, %166 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #14
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %168
  %172 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %172) #18
  br label %173

173:                                              ; preds = %168, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #14
  br label %174

174:                                              ; preds = %173, %49
  %175 = phi i64 [ %163, %173 ], [ %33, %49 ]
  ret i64 %175
}

declare %"class.quic::QpackEncoder"* @_ZN4quic15QuicSpdySession13qpack_encoderEv(%"class.quic::QuicSpdySession"*) local_unnamed_addr #1

declare void @_ZN4quic12QpackEncoder16EncodeHeaderListEjRKN4spdy16Http2HeaderBlockEPm(%"class.std::__1::basic_string"* sret, %"class.quic::QpackEncoder"*, i32, %"class.spdy::Http2HeaderBlock"* dereferenceable(120), i64*) local_unnamed_addr #1

declare i64 @_ZN4quic11HttpEncoder27SerializeHeadersFrameHeaderEmPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(i64, %"class.std::__1::unique_ptr.577"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic15QuicSpdySession20SupportsWebTransportEv(%"class.quic::QuicSpdySession"*) local_unnamed_addr #1

declare i64 @_ZN4quic15QuicSpdySession21GetNextDatagramFlowIdEv(%"class.quic::QuicSpdySession"*) local_unnamed_addr #1

declare void @_ZN4spdy16Http2HeaderBlockixEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"* sret, %"class.spdy::Http2HeaderBlock"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(48) %"class.spdy::Http2HeaderBlock::ValueProxy"* @_ZN4spdy16Http2HeaderBlock10ValueProxyaSEN4absl11string_viewE(%"class.spdy::Http2HeaderBlock::ValueProxy"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlock10ValueProxyD1Ev(%"class.spdy::Http2HeaderBlock::ValueProxy"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream17OnCanWriteNewDataEv(%"class.quic::QuicSpdyStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %3 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %2, align 8
  %4 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %3, i64 0, i32 1
  tail call void @_ZN4quic25WebTransportStreamAdapter17OnCanWriteNewDataEv(%"class.quic::WebTransportStreamAdapter"* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN4quic25WebTransportStreamAdapter17OnCanWriteNewDataEv(%"class.quic::WebTransportStreamAdapter"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4absllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_11string_viewE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream31ConvertToWebTransportDataStreamEm(%"class.quic::QuicSpdyStream"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::unique_ptr.577", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.quic::QuicReferenceCountedPointer", align 8
  %9 = bitcast %"class.quic::QuicSpdyStream"* %0 to %"class.quic::QuicStream"*
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 28, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %38, label %13

13:                                               ; preds = %2
  %14 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #14
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %16) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 1338, i32 2) #14
  %17 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %17 to %"class.std::__1::basic_ostream"*
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.29, i64 0, i64 0), i64 98) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %16) #14
  br label %20

20:                                               ; preds = %13, %15
  %21 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #14
  %22 = call i8* @_Znwm(i64 112) #18
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 98, i64 -9223372036854775696>, <2 x i64>* %25, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 getelementptr inbounds ([99 x i8], [99 x i8]* @.str.29, i64 0, i64 0), i64 98, i1 false) #14
  %26 = getelementptr inbounds i8, i8* %22, i64 98
  store i8 0, i8* %26, align 1
  %27 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %28 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %28, i64 6
  %30 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %29, align 8
  call void %30(%"class.quic::QuicStream"* %9, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %20
  %36 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %20, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #14
  br label %121

38:                                               ; preds = %2
  %39 = bitcast %"class.std::__1::unique_ptr.577"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %5, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.577"* %5 to i64*
  store i64 0, i64* %41, align 8
  %42 = call i64 @_ZN4quic11HttpEncoder38SerializeWebTransportStreamFrameHeaderEmPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(i64 %1, %"class.std::__1::unique_ptr.577"* nonnull %5) #14
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %69

44:                                               ; preds = %38
  %45 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #14
  br i1 %45, label %46, label %51

46:                                               ; preds = %44
  %47 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %47) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 1351, i32 2) #14
  %48 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %49 = bitcast %"class.std::__1::basic_ostringstream"* %48 to %"class.std::__1::basic_ostream"*
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %49, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.30, i64 0, i64 0), i64 48) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %47) #14
  br label %51

51:                                               ; preds = %44, %46
  %52 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  %53 = call i8* @_Znwm(i64 64) #18
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %53, i8** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast i64* %55 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %56, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.30, i64 0, i64 0), i64 48, i1 false) #14
  %57 = getelementptr inbounds i8, i8* %53, i64 48
  store i8 0, i8* %57, align 1
  %58 = bitcast %"class.quic::QuicSpdyStream"* %0 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %59 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %59, i64 6
  %61 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %60, align 8
  call void %61(%"class.quic::QuicStream"* %9, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #14
  %62 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %51
  %67 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %67) #18
  br label %68

68:                                               ; preds = %51, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  br label %116

69:                                               ; preds = %38
  %70 = icmp sgt i64 %42, -1
  br i1 %70, label %72, label %71, !prof !2

71:                                               ; preds = %69
  call void @llvm.trap() #14
  unreachable

72:                                               ; preds = %69
  %73 = load i8*, i8** %40, align 8
  %74 = getelementptr inbounds %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicReferenceCountedPointer"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.quic::QuicAckListenerInterface"* null, %"class.quic::QuicAckListenerInterface"** %74, align 8
  call void @_ZN4quic10QuicStream17WriteOrBufferDataEN4absl11string_viewEbNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"* %9, i8* %73, i64 %42, i1 zeroext false, %"class.quic::QuicReferenceCountedPointer"* nonnull %8) #14
  %75 = load %"class.quic::QuicAckListenerInterface"*, %"class.quic::QuicAckListenerInterface"** %74, align 8
  %76 = icmp eq %"class.quic::QuicAckListenerInterface"* %75, null
  br i1 %76, label %89, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.quic::QuicAckListenerInterface", %"class.quic::QuicAckListenerInterface"* %75, i64 0, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw sub i32* %79, i32 1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %89

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.base::RefCountedThreadSafe.519", %"class.base::RefCountedThreadSafe.519"* %78, i64 -2
  %84 = bitcast %"class.base::RefCountedThreadSafe.519"* %83 to %"class.quic::QuicReferenceCountedImpl"*
  %85 = bitcast %"class.base::RefCountedThreadSafe.519"* %83 to void (%"class.quic::QuicReferenceCountedImpl"*)***
  %86 = load void (%"class.quic::QuicReferenceCountedImpl"*)**, void (%"class.quic::QuicReferenceCountedImpl"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %86, i64 1
  %88 = load void (%"class.quic::QuicReferenceCountedImpl"*)*, void (%"class.quic::QuicReferenceCountedImpl"*)** %87, align 8
  call void %88(%"class.quic::QuicReferenceCountedImpl"* nonnull %84) #14
  br label %89

89:                                               ; preds = %72, %77, %82
  %90 = call i8* @_Znwm(i64 56) #18
  %91 = bitcast i8* %90 to i64*
  store i64 %1, i64* %91, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 8
  %93 = bitcast i8* %92 to %"class.quic::WebTransportStreamAdapter"*
  %94 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 2
  %95 = bitcast %"class.quic::QuicSpdySession"** %94 to %"class.quic::QuicSession"**
  %96 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %95, align 8
  %97 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 0, i32 1
  call void @_ZN4quic25WebTransportStreamAdapterC1EPNS_11QuicSessionEPNS_10QuicStreamEPNS_19QuicStreamSequencerE(%"class.quic::WebTransportStreamAdapter"* %93, %"class.quic::QuicSession"* %96, %"class.quic::QuicStream"* %9, %"class.quic::QuicStreamSequencer"* %97) #14
  %98 = ptrtoint i8* %90 to i64
  %99 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %0, i64 0, i32 23
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.677", %"class.std::__1::unique_ptr.677"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"struct.quic::QuicSpdyStream::WebTransportDataStream"** %100, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.677"* %99 to i64*
  store i64 %98, i64* %102, align 8
  %103 = icmp eq %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %101, null
  br i1 %103, label %116, label %104

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %101, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN4quic25WebTransportStreamAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %106 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %101, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %107 = load %"class.quic::WebTransportStreamVisitor"*, %"class.quic::WebTransportStreamVisitor"** %106, align 8
  store %"class.quic::WebTransportStreamVisitor"* null, %"class.quic::WebTransportStreamVisitor"** %106, align 8
  %108 = icmp eq %"class.quic::WebTransportStreamVisitor"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = bitcast %"class.quic::WebTransportStreamVisitor"* %107 to void (%"class.quic::WebTransportStreamVisitor"*)***
  %111 = load void (%"class.quic::WebTransportStreamVisitor"*)**, void (%"class.quic::WebTransportStreamVisitor"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.quic::WebTransportStreamVisitor"*)*, void (%"class.quic::WebTransportStreamVisitor"*)** %111, i64 1
  %113 = load void (%"class.quic::WebTransportStreamVisitor"*)*, void (%"class.quic::WebTransportStreamVisitor"*)** %112, align 8
  call void %113(%"class.quic::WebTransportStreamVisitor"* nonnull %107) #14
  br label %114

114:                                              ; preds = %109, %104
  %115 = bitcast %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %101 to i8*
  call void @_ZdlPv(i8* %115) #18
  br label %116

116:                                              ; preds = %89, %114, %68
  %117 = load i8*, i8** %40, align 8
  store i8* null, i8** %40, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  call void @_ZdaPv(i8* nonnull %117) #18
  br label %120

120:                                              ; preds = %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  br label %121

121:                                              ; preds = %120, %37
  ret void
}

declare i64 @_ZN4quic11HttpEncoder38SerializeWebTransportStreamFrameHeaderEmPNSt3__110unique_ptrIA_cNS1_14default_deleteIS3_EEEE(i64, %"class.std::__1::unique_ptr.577"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic14QuicSpdyStream22WebTransportDataStreamC2EPS0_m(%"struct.quic::QuicSpdyStream::WebTransportDataStream"*, %"class.quic::QuicSpdyStream"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %0, i64 0, i32 0
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.quic::QuicSpdyStream::WebTransportDataStream", %"struct.quic::QuicSpdyStream::WebTransportDataStream"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %1, i64 0, i32 2
  %7 = bitcast %"class.quic::QuicSpdySession"** %6 to %"class.quic::QuicSession"**
  %8 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %7, align 8
  %9 = bitcast %"class.quic::QuicSpdyStream"* %1 to %"class.quic::QuicStream"*
  %10 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %1, i64 0, i32 0, i32 1
  tail call void @_ZN4quic25WebTransportStreamAdapterC1EPNS_11QuicSessionEPNS_10QuicStreamEPNS_19QuicStreamSequencerE(%"class.quic::WebTransportStreamAdapter"* %5, %"class.quic::QuicSession"* %8, %"class.quic::QuicStream"* %9, %"class.quic::QuicStreamSequencer"* %10) #14
  ret void
}

declare void @_ZN4quic25WebTransportStreamAdapterC1EPNS_11QuicSessionEPNS_10QuicStreamEPNS_19QuicStreamSequencerE(%"class.quic::WebTransportStreamAdapter"*, %"class.quic::QuicSession"*, %"class.quic::QuicStream"*, %"class.quic::QuicStreamSequencer"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream9OnFinReadEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream16AddBytesConsumedEm(%"class.quic::QuicStream"*, i64) unnamed_addr #1

declare void @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic10QuicStream20OnUnrecoverableErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::QuicStream"*, i32, i64, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4quic10QuicStream2idEv(%"class.quic::QuicStream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicStream", %"class.quic::QuicStream"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZNK4quic10QuicStream7versionEv(%"struct.quic::ParsedQuicVersion"* sret, %"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream13OnStreamFrameERKNS_15QuicStreamFrameE(%"class.quic::QuicStream"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic10QuicStream18OnConnectionClosedENS_13QuicErrorCodeENS_21ConnectionCloseSourceE(%"class.quic::QuicStream"*, i32, i32) unnamed_addr #1

declare void @_ZN4quic10QuicStream19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE(%"class.quic::QuicStream"*, %"struct.quic::QuicWindowUpdateFrame"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic10QuicStream11StopReadingEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream17OnStreamFrameLostEmmb(%"class.quic::QuicStream"*, i64, i64, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN4quic10QuicStream20RetransmitStreamDataEmmbNS_16TransmissionTypeE(%"class.quic::QuicStream"*, i64, i64, i1 zeroext, i8 signext) unnamed_addr #1

declare zeroext i1 @_ZNK4quic10QuicStream24HasPendingRetransmissionEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare zeroext i1 @_ZN4quic10QuicStream13OnStopSendingENS_22QuicRstStreamErrorCodeE(%"class.quic::QuicStream"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic10QuicStream14OnDataBufferedEmmRKNS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicStream"*, i64, i64, %"class.quic::QuicReferenceCountedPointer"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic10QuicStream20OnStreamDataConsumedEm(%"class.quic::QuicStream"*, i64) unnamed_addr #1

declare void @_ZN4quic10QuicStream26WritePendingRetransmissionEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream16OnDeadlinePassedEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic10QuicStream14CloseWriteSideEv(%"class.quic::QuicStream"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN4quic15QuicSpdySession25WillNegotiateWebTransportEv(%"class.quic::QuicSpdySession"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"*, %"class.std::__1::allocator"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 8, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 3
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %83

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %3, i64 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %83, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.absl::container_internal::btree_node"* %0 to %"class.absl::container_internal::btree_node"**
  %13 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %12, align 8
  br label %14

14:                                               ; preds = %11, %14
  %15 = phi %"class.absl::container_internal::btree_node"* [ %18, %14 ], [ %0, %11 ]
  %16 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %15, i64 256, i32 0
  %17 = bitcast i8* %16 to %"class.absl::container_internal::btree_node"**
  %18 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %17, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %18, i64 8, i32 0
  %20 = getelementptr inbounds i8, i8* %19, i64 3
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %14, label %23

23:                                               ; preds = %14
  %24 = bitcast %"class.absl::container_internal::btree_node"* %18 to %"class.absl::container_internal::btree_node"**
  %25 = load i8, i8* %19, align 1
  %26 = zext i8 %25 to i32
  %27 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %24, align 8
  br label %30

28:                                               ; preds = %78
  %29 = zext i8 %73 to i32
  br label %66

30:                                               ; preds = %66, %23
  %31 = phi i32 [ %26, %23 ], [ %69, %66 ]
  %32 = phi %"class.absl::container_internal::btree_node"* [ %27, %23 ], [ %68, %66 ]
  %33 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %32, i64 256, i32 0
  %34 = bitcast i8* %33 to %"class.absl::container_internal::btree_node"**
  %35 = sext i32 %31 to i64
  %36 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %34, i64 %35
  %37 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %36, align 8
  %38 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %37, i64 8, i32 0
  %39 = getelementptr inbounds i8, i8* %38, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %56

42:                                               ; preds = %30, %42
  %43 = phi %"class.absl::container_internal::btree_node"* [ %46, %42 ], [ %37, %30 ]
  %44 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %43, i64 256, i32 0
  %45 = bitcast i8* %44 to %"class.absl::container_internal::btree_node"**
  %46 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %45, align 8
  %47 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %46, i64 8, i32 0
  %48 = getelementptr inbounds i8, i8* %47, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %42, label %51

51:                                               ; preds = %42
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  %54 = bitcast %"class.absl::container_internal::btree_node"* %46 to %"class.absl::container_internal::btree_node"**
  %55 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %54, align 8
  br label %56

56:                                               ; preds = %30, %51
  %57 = phi %"class.absl::container_internal::btree_node"* [ %37, %30 ], [ %46, %51 ]
  %58 = phi i32 [ %31, %30 ], [ %53, %51 ]
  %59 = phi %"class.absl::container_internal::btree_node"* [ %32, %30 ], [ %55, %51 ]
  %60 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %57, i64 0, i32 0
  tail call void @_ZdlPv(i8* %60) #18
  %61 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %59, i64 8, i32 0
  %62 = getelementptr inbounds i8, i8* %61, i64 2
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = icmp slt i32 %58, %64
  br i1 %65, label %66, label %70

66:                                               ; preds = %56, %28
  %67 = phi i32 [ %58, %56 ], [ %29, %28 ]
  %68 = phi %"class.absl::container_internal::btree_node"* [ %59, %56 ], [ %75, %28 ]
  %69 = add nsw i32 %67, 1
  br label %30

70:                                               ; preds = %56, %78
  %71 = phi %"class.absl::container_internal::btree_node"* [ %75, %78 ], [ %59, %56 ]
  %72 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %71, i64 8, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = bitcast %"class.absl::container_internal::btree_node"* %71 to %"class.absl::container_internal::btree_node"**
  %75 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %74, align 8
  %76 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %71, i64 0, i32 0
  tail call void @_ZdlPv(i8* %76) #18
  %77 = icmp eq %"class.absl::container_internal::btree_node"* %75, %13
  br i1 %77, label %85, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %75, i64 8, i32 0
  %80 = getelementptr inbounds i8, i8* %79, i64 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp ult i8 %73, %81
  br i1 %82, label %28, label %70

83:                                               ; preds = %7, %2
  %84 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 0, i32 0
  tail call void @_ZdlPv(i8* %84) #18
  br label %85

85:                                               ; preds = %70, %83
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #1

declare void @_ZN4quic23QuicMemSliceStorageImplC1EPK5ioveciPNS_19QuicBufferAllocatorEm(%"class.quic::QuicMemSliceStorageImpl"*, %struct.iovec*, i32, %"class.quic::QuicBufferAllocator"*, i64) unnamed_addr #1

declare void @_ZN4quic20QuicMemSliceSpanImplC1EPK13scoped_refptrIN3net8IOBufferEEPKmm(%"class.quic::QuicMemSliceSpanImpl"*, %class.scoped_refptr*, i64*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic20QuicMemSliceSpanImplD1Ev(%"class.quic::QuicMemSliceSpanImpl"*) unnamed_addr #3

declare void @_ZN4quic20QuicMemSliceSpanImplC1ERKS0_(%"class.quic::QuicMemSliceSpanImpl"*, %"class.quic::QuicMemSliceSpanImpl"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic23QuicMemSliceStorageImplD1Ev(%"class.quic::QuicMemSliceStorageImpl"*) unnamed_addr #3

declare i64 @_ZN4quic20QuicMemSliceSpanImpl12total_lengthEv(%"class.quic::QuicMemSliceSpanImpl"*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #1

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32, i8*) local_unnamed_addr #1

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEiPc(i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE5eraseIjEEmRKj(%"class.absl::container_internal::raw_hash_set.366"*, i32* dereferenceable(4)) local_unnamed_addr #13 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = zext i32 %3 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 1
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i64 [ %19, %2 ], [ %57, %55 ]
  %27 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load i32*, i32** %24, align 8
  br label %38

38:                                               ; preds = %47, %35
  %39 = phi i32 [ %36, %35 ], [ %49, %47 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #14, !range !57
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds i32, i32* %37, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %3
  br i1 %46, label %58, label %47, !prof !2

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %105, !prof !48

55:                                               ; preds = %51
  %56 = add i64 %27, 16
  %57 = add i64 %56, %28
  br label %25

58:                                               ; preds = %38
  %59 = getelementptr inbounds i8, i8* %13, i64 %43
  %60 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %60) #14
  %61 = load i8, i8* %59, align 1
  %62 = icmp sgt i8 %61, -1
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %58
  tail call void @llvm.trap() #14
  unreachable

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, -1
  store i64 %67, i64* %65, align 8
  %68 = add i64 %43, -16
  %69 = and i64 %68, %15
  %70 = bitcast i8* %59 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = icmp eq <16 x i8> %71, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = getelementptr inbounds i8, i8* %13, i64 %69
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1
  %77 = icmp eq <16 x i8> %76, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %78 = bitcast <16 x i1> %77 to i16
  %79 = icmp ne i16 %78, 0
  %80 = icmp ne i16 %73, 0
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %92

82:                                               ; preds = %64
  %83 = zext i16 %73 to i32
  %84 = zext i16 %78 to i32
  %85 = tail call i32 @llvm.cttz.i32(i32 %83, i1 false) #14, !range !57
  %86 = shl nuw i32 %84, 16
  %87 = tail call i32 @llvm.ctlz.i32(i32 %86, i1 false) #14, !range !57
  %88 = add nuw nsw i32 %87, %85
  %89 = icmp ult i32 %88, 16
  %90 = zext i1 %89 to i64
  %91 = select i1 %89, i8 -128, i8 -2
  br label %92

92:                                               ; preds = %64, %82
  %93 = phi i64 [ 0, %64 ], [ %90, %82 ]
  %94 = phi i8 [ -2, %64 ], [ %91, %82 ]
  store i8 %94, i8* %59, align 1
  %95 = load i8*, i8** %12, align 8
  %96 = add i64 %43, -15
  %97 = load i64, i64* %14, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %94, i8* %101, align 1
  %102 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.366", %"class.absl::container_internal::raw_hash_set.366"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, %93
  store i64 %104, i64* %102, align 8
  br label %105

105:                                              ; preds = %51, %92
  %106 = phi i64 [ 1, %92 ], [ 0, %51 ]
  ret i64 %106
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #14

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #15

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #15

declare void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"*, %"struct.std::__1::__list_node_base.570"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"struct.std::__1::pair.560"** } @_ZNK4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_14const_iteratorERSH_(%"class.absl::container_internal::raw_hash_set.559"*, %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 4
  %4 = bitcast %"class.absl::container_internal::CompressedTuple.561"* %3 to %"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"* %4, i8* %6, i64 %8)
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 0
  %11 = bitcast %"class.absl::container_internal::raw_hash_set.559"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %9, 7
  %16 = lshr i64 %12, 12
  %17 = xor i64 %16, %15
  %18 = trunc i64 %9 to i8
  %19 = and i8 %18, 127
  %20 = insertelement <16 x i8> undef, i8 %19, i32 0
  %21 = shufflevector <16 x i8> %20, <16 x i8> undef, <16 x i32> zeroinitializer
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 1
  %23 = inttoptr i64 %12 to i8*
  br label %24

24:                                               ; preds = %67, %2
  %25 = phi i8* [ %23, %2 ], [ %70, %67 ]
  %26 = phi i64 [ %17, %2 ], [ %69, %67 ]
  %27 = phi i64 [ 0, %2 ], [ %68, %67 ]
  %28 = and i64 %26, %14
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %21, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %63, label %35

35:                                               ; preds = %24
  %36 = zext i16 %33 to i32
  br label %37

37:                                               ; preds = %53, %35
  %38 = phi i32 [ %55, %53 ], [ %36, %35 ]
  %39 = tail call i32 @llvm.cttz.i32(i32 %38, i1 false) #14, !range !57
  %40 = load %"struct.std::__1::pair.560"**, %"struct.std::__1::pair.560"*** %22, align 8
  %41 = zext i32 %39 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %14
  %44 = getelementptr inbounds %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %40, i64 %43
  %45 = load %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.560", %"struct.std::__1::pair.560"* %45, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.560", %"struct.std::__1::pair.560"* %45, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = load i64, i64* %7, align 8
  %52 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %47, i64 %49, i8* %50, i64 %51) #14
  br i1 %52, label %57, label %53, !prof !2

53:                                               ; preds = %37
  %54 = add i32 %38, -1
  %55 = and i32 %54, %38
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %37

57:                                               ; preds = %37
  %58 = load i8*, i8** %10, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %43
  %60 = load %"struct.std::__1::pair.560"**, %"struct.std::__1::pair.560"*** %22, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %60, i64 %43
  %62 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %62) #14
  br label %71

63:                                               ; preds = %53, %24
  %64 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %71, !prof !48

67:                                               ; preds = %63
  %68 = add i64 %27, 16
  %69 = add i64 %68, %28
  %70 = load i8*, i8** %10, align 8
  br label %24

71:                                               ; preds = %63, %57
  %72 = phi %"struct.std::__1::pair.560"** [ %61, %57 ], [ undef, %63 ]
  %73 = phi i8* [ %59, %57 ], [ null, %63 ]
  %74 = insertvalue { i8*, %"struct.std::__1::pair.560"** } undef, i8* %73, 0
  %75 = insertvalue { i8*, %"struct.std::__1::pair.560"** } %74, %"struct.std::__1::pair.560"** %72, 1
  ret { i8*, %"struct.std::__1::pair.560"** } %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = icmp eq i8* %1, null
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  br i1 %9, label %11, label %12

11:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #14, !alias.scope !58
  br label %33

12:                                               ; preds = %3
  %13 = icmp ugt i64 %2, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #19
  unreachable

16:                                               ; preds = %12
  %17 = icmp ult i64 %2, 23
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %2, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #18
  store i8* %21, i8** %6, align 8, !alias.scope !58
  %22 = or i64 %20, -9223372036854775808
  store i64 %22, i64* %8, align 8, !alias.scope !58
  store i64 %2, i64* %7, align 8, !alias.scope !58
  br label %28

23:                                               ; preds = %16
  %24 = trunc i64 %2 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1, !alias.scope !58
  %27 = icmp eq i64 %2, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23, %18
  %29 = phi i8* [ %21, %18 ], [ %5, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %1, i64 %2, i1 false) #14
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %5, %23 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %2
  store i8 0, i8* %32, align 1
  br label %33

33:                                               ; preds = %11, %30
  call void @_ZN4absl15AsciiStrToLowerEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %4) #14
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = zext i8 %36 to i64
  %40 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  br label %47

41:                                               ; preds = %33
  %42 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %7, align 8
  %45 = icmp sgt i64 %44, -1
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %41
  call void @llvm.trap() #14
  unreachable

47:                                               ; preds = %38, %41
  %48 = phi i64 [ %43, %41 ], [ %40, %38 ]
  %49 = phi i64 [ %44, %41 ], [ %39, %38 ]
  %50 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %51 = inttoptr i64 %48 to i8*
  %52 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %50, i8* %51, i64 %49) #14
  %53 = add i64 %52, %49
  %54 = zext i64 %53 to i128
  %55 = mul nuw i128 %54, 11376068507788127593
  %56 = lshr i128 %55, 64
  %57 = xor i128 %56, %55
  %58 = trunc i128 %57 to i64
  %59 = load i8, i8* %35, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %47
  %62 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %47, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i64 %58
}

; Function Attrs: nounwind
declare zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !48

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #14
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #14
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #1

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #1

declare dereferenceable(32) %"struct.std::__1::pair.689"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"struct.std::__1::pair.560"** } @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyINS_11string_viewENSt3__115__list_iteratorINS4_4pairIS3_N4spdy16Http2HeaderBlock11HeaderValueEEEPvEEEENS8_19StringPieceCaseHashENS8_20StringPieceCaseEqualENS4_9allocatorINS6_IKS3_SC_EEEEE4findIS3_EENSK_8iteratorERSH_(%"class.absl::container_internal::raw_hash_set.559"*, %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 4
  %4 = bitcast %"class.absl::container_internal::CompressedTuple.561"* %3 to %"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"*
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @_ZNK4spdy16Http2HeaderBlock19StringPieceCaseHashclEN4absl11string_viewE(%"struct.spdy::Http2HeaderBlock::StringPieceCaseHash"* %4, i8* %6, i64 %8)
  %10 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 0
  %11 = bitcast %"class.absl::container_internal::raw_hash_set.559"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %9, 7
  %16 = lshr i64 %12, 12
  %17 = xor i64 %16, %15
  %18 = trunc i64 %9 to i8
  %19 = and i8 %18, 127
  %20 = insertelement <16 x i8> undef, i8 %19, i32 0
  %21 = shufflevector <16 x i8> %20, <16 x i8> undef, <16 x i32> zeroinitializer
  %22 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.559", %"class.absl::container_internal::raw_hash_set.559"* %0, i64 0, i32 1
  %23 = inttoptr i64 %12 to i8*
  br label %24

24:                                               ; preds = %67, %2
  %25 = phi i8* [ %23, %2 ], [ %70, %67 ]
  %26 = phi i64 [ %17, %2 ], [ %69, %67 ]
  %27 = phi i64 [ 0, %2 ], [ %68, %67 ]
  %28 = and i64 %26, %14
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %21, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %63, label %35

35:                                               ; preds = %24
  %36 = zext i16 %33 to i32
  br label %37

37:                                               ; preds = %53, %35
  %38 = phi i32 [ %55, %53 ], [ %36, %35 ]
  %39 = tail call i32 @llvm.cttz.i32(i32 %38, i1 false) #14, !range !57
  %40 = load %"struct.std::__1::pair.560"**, %"struct.std::__1::pair.560"*** %22, align 8
  %41 = zext i32 %39 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %14
  %44 = getelementptr inbounds %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %40, i64 %43
  %45 = load %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.560", %"struct.std::__1::pair.560"* %45, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.560", %"struct.std::__1::pair.560"* %45, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = load i8*, i8** %5, align 8
  %51 = load i64, i64* %7, align 8
  %52 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %47, i64 %49, i8* %50, i64 %51) #14
  br i1 %52, label %57, label %53, !prof !2

53:                                               ; preds = %37
  %54 = add i32 %38, -1
  %55 = and i32 %54, %38
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %37

57:                                               ; preds = %37
  %58 = load i8*, i8** %10, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %43
  %60 = load %"struct.std::__1::pair.560"**, %"struct.std::__1::pair.560"*** %22, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.560"*, %"struct.std::__1::pair.560"** %60, i64 %43
  %62 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %62) #14
  br label %71

63:                                               ; preds = %53, %24
  %64 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %71, !prof !48

67:                                               ; preds = %63
  %68 = add i64 %27, 16
  %69 = add i64 %68, %28
  %70 = load i8*, i8** %10, align 8
  br label %24

71:                                               ; preds = %63, %57
  %72 = phi %"struct.std::__1::pair.560"** [ %61, %57 ], [ undef, %63 ]
  %73 = phi i8* [ %59, %57 ], [ null, %63 ]
  %74 = insertvalue { i8*, %"struct.std::__1::pair.560"** } undef, i8* %73, 0
  %75 = insertvalue { i8*, %"struct.std::__1::pair.560"** } %74, %"struct.std::__1::pair.560"** %72, 1
  ret { i8*, %"struct.std::__1::pair.560"** } %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !12
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare zeroext i8 @_ZN4spdy26Http2WeightToSpdy3PriorityEi(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic14QuicSpdyStream18HttpDecoderVisitorD0Ev(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*) unnamed_addr #16 comdat align 2 {
  %2 = bitcast %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor7OnErrorEPNS_11HttpDecoderE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"class.quic::HttpDecoder"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %4 = bitcast %"class.quic::QuicSpdyStream"** %3 to %"class.quic::QuicStream"**
  %5 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %4, align 8
  %6 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %1, i64 0, i32 13
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.quic::HttpDecoder", %"class.quic::HttpDecoder"* %1, i64 0, i32 15
  %9 = bitcast %"class.quic::QuicStream"* %5 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %10 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %10, i64 6
  %12 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %11, align 8
  tail call void %12(%"class.quic::QuicStream"* %5, i32 %7, %"class.std::__1::basic_string"* dereferenceable(24) %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnCancelPushFrameERKNS_15CancelPushFrameE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::CancelPushFrame"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 11, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor16OnMaxPushIdFrameERKNS_14MaxPushIdFrameE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::MaxPushIdFrame"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 11, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor13OnGoAwayFrameERKNS_11GoAwayFrameE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::GoAwayFrame"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 6, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor20OnSettingsFrameStartEm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 8, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor15OnSettingsFrameERKNS_13SettingsFrameE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::SettingsFrame"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 8, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor16OnDataFrameStartEmm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %5 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %4, align 8
  %6 = tail call zeroext i1 @_ZN4quic14QuicSpdyStream16OnDataFrameStartEmm(%"class.quic::QuicSpdyStream"* %5, i64 %1, i64 %2)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor18OnDataFramePayloadEN4absl11string_viewE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %5 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %5, i64 0, i32 16
  tail call void @_ZN4quic25QuicSpdyStreamBodyManager6OnBodyEN4absl11string_viewE(%"class.quic::QuicSpdyStreamBodyManager"* %6, i8* %1, i64 %2) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor14OnDataFrameEndEv(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor19OnHeadersFrameStartEmm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %8 = bitcast %"class.quic::QuicSpdyStream"** %7 to %"class.quic::QuicStream"**
  %9 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %8, align 8
  %10 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %9) #14
  %11 = icmp sgt i32 %10, 51
  br i1 %11, label %33, label %12

12:                                               ; preds = %3
  %13 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %8, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 7, i64* %17, align 8
  %18 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 30, i64* %20, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6) #14
  %21 = bitcast %"class.quic::QuicStream"* %13 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %22 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %22, i64 6
  %24 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %23, align 8
  call void %24(%"class.quic::QuicStream"* %13, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %12, %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  br label %36

33:                                               ; preds = %3
  %34 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %7, align 8
  %35 = tail call zeroext i1 @_ZN4quic14QuicSpdyStream19OnHeadersFrameStartEmm(%"class.quic::QuicSpdyStream"* %34, i64 %1, i64 %2)
  br label %36

36:                                               ; preds = %33, %32
  %37 = phi i1 [ %35, %33 ], [ false, %32 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnHeadersFramePayloadEN4absl11string_viewE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %8 = bitcast %"class.quic::QuicSpdyStream"** %7 to %"class.quic::QuicStream"**
  %9 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %8, align 8
  %10 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %9) #14
  %11 = icmp sgt i32 %10, 51
  br i1 %11, label %33, label %12

12:                                               ; preds = %3
  %13 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %8, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 7, i64* %17, align 8
  %18 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 30, i64* %20, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6) #14
  %21 = bitcast %"class.quic::QuicStream"* %13 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %22 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %22, i64 6
  %24 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %23, align 8
  call void %24(%"class.quic::QuicStream"* %13, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %12, %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  br label %43

33:                                               ; preds = %3
  %34 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %7, align 8
  %35 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %34, i64 0, i32 13, i32 0, i32 0, i32 0
  %36 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %35, align 8
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulator6DecodeEN4absl11string_viewE(%"class.quic::QpackDecodedHeadersAccumulator"* %36, i8* %1, i64 %2) #14
  %37 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %35, align 8
  %38 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %34, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %34, i64 0, i32 16
  %42 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %41, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %40, i64 %42) #14
  br label %43

43:                                               ; preds = %39, %33, %32
  %44 = phi i1 [ false, %32 ], [ true, %39 ], [ false, %33 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnHeadersFrameEndEv(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %6 = bitcast %"class.quic::QuicSpdyStream"** %5 to %"class.quic::QuicStream"**
  %7 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %6, align 8
  %8 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %7) #14
  %9 = icmp sgt i32 %8, 51
  br i1 %9, label %31, label %10

10:                                               ; preds = %1
  %11 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %6, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #14
  %13 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 7, i64* %15, align 8
  %16 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 30, i64* %18, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %2, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4) #14
  %19 = bitcast %"class.quic::QuicStream"* %11 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %20 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %20, i64 6
  %22 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %21, align 8
  call void %22(%"class.quic::QuicStream"* %11, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #14
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %10
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %10, %27
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #14
  br label %50

31:                                               ; preds = %1
  %32 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %5, align 8
  %33 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 13, i32 0, i32 0, i32 0
  %34 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %33, align 8
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulator14EndHeaderBlockEv(%"class.quic::QpackDecodedHeadersAccumulator"* %34) #14
  %35 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %33, align 8
  %36 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 5
  store i8 1, i8* %38, align 8
  br label %50

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 0, i32 1
  %41 = tail call zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"* %40) #14
  br i1 %41, label %50, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 0, i32 1, i32 9
  %44 = load i8, i8* %43, align 4, !range !12
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 0, i32 10
  %48 = load i8, i8* %47, align 8, !range !12
  %49 = icmp eq i8 %48, 0
  br label %50

50:                                               ; preds = %46, %42, %39, %37, %30
  %51 = phi i1 [ false, %30 ], [ false, %37 ], [ false, %39 ], [ false, %42 ], [ %49, %46 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor23OnPushPromiseFrameStartEm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %8) #14
  %10 = icmp sgt i32 %9, 51
  br i1 %10, label %32, label %11

11:                                               ; preds = %2
  %12 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i8** %15, align 8
  %16 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 12, i64* %16, align 8
  %17 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %19, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %20 = bitcast %"class.quic::QuicStream"* %12 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %21 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %21, i64 6
  %23 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %22, align 8
  call void %23(%"class.quic::QuicStream"* %12, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %24 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %11
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %11, %28
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  br label %37

32:                                               ; preds = %2
  %33 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %6, align 8
  %34 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %33, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %33, i64 0, i32 16
  %36 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %35, i64 %1) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %34, i64 %36) #14
  br label %37

37:                                               ; preds = %32, %31
  %38 = phi i1 [ true, %32 ], [ false, %31 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor24OnPushPromiseFramePushIdEmmm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %9 = bitcast %"class.quic::QuicSpdyStream"** %8 to %"class.quic::QuicStream"**
  %10 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %9, align 8
  %11 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %10) #14
  %12 = icmp sgt i32 %11, 51
  br i1 %12, label %34, label %13

13:                                               ; preds = %4
  %14 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %9, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 12, i64* %18, align 8
  %19 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  store i64 30, i64* %21, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7) #14
  %22 = bitcast %"class.quic::QuicStream"* %14 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %23 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %23, i64 6
  %25 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %24, align 8
  call void %25(%"class.quic::QuicStream"* %14, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %13
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %13, %30
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  br label %37

34:                                               ; preds = %4
  %35 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %8, align 8
  %36 = tail call zeroext i1 @_ZN4quic14QuicSpdyStream24OnPushPromiseFramePushIdEmmm(%"class.quic::QuicSpdyStream"* %35, i64 %1, i64 %2, i64 %3)
  br label %37

37:                                               ; preds = %34, %33
  %38 = phi i1 [ true, %34 ], [ false, %33 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor25OnPushPromiseFramePayloadEN4absl11string_viewE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %8 = bitcast %"class.quic::QuicSpdyStream"** %7 to %"class.quic::QuicStream"**
  %9 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %8, align 8
  %10 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %9) #14
  %11 = icmp sgt i32 %10, 51
  br i1 %11, label %33, label %12

12:                                               ; preds = %3
  %13 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %8, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 12, i64* %17, align 8
  %18 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 30, i64* %20, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6) #14
  %21 = bitcast %"class.quic::QuicStream"* %13 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %22 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %22, i64 6
  %24 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %23, align 8
  call void %24(%"class.quic::QuicStream"* %13, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %12, %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  br label %45

33:                                               ; preds = %3
  %34 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %7, align 8
  %35 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %34, i64 0, i32 2
  %36 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %35, align 8
  tail call void @_ZN4quic15QuicSpdySession21OnCompressedFrameSizeEm(%"class.quic::QuicSpdySession"* %36, i64 %2) #14
  %37 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %34, i64 0, i32 13, i32 0, i32 0, i32 0
  %38 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %37, align 8
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulator6DecodeEN4absl11string_viewE(%"class.quic::QpackDecodedHeadersAccumulator"* %38, i8* %1, i64 %2) #14
  %39 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %37, align 8
  %40 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %34, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %34, i64 0, i32 16
  %44 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %43, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %42, i64 %44) #14
  br label %45

45:                                               ; preds = %41, %33, %32
  %46 = phi i1 [ false, %32 ], [ true, %41 ], [ false, %33 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnPushPromiseFrameEndEv(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %6 = bitcast %"class.quic::QuicSpdyStream"** %5 to %"class.quic::QuicStream"**
  %7 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %6, align 8
  %8 = tail call i32 @_ZNK4quic10QuicStream17transport_versionEv(%"class.quic::QuicStream"* %7) #14
  %9 = icmp sgt i32 %8, 51
  br i1 %9, label %31, label %10

10:                                               ; preds = %1
  %11 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %6, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #14
  %13 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 12, i64* %15, align 8
  %16 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 30, i64* %18, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %2, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4) #14
  %19 = bitcast %"class.quic::QuicStream"* %11 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %20 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %20, i64 6
  %22 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %21, align 8
  call void %22(%"class.quic::QuicStream"* %11, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #14
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %10
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %10, %27
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #14
  br label %50

31:                                               ; preds = %1
  %32 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %5, align 8
  %33 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 13, i32 0, i32 0, i32 0
  %34 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %33, align 8
  tail call void @_ZN4quic30QpackDecodedHeadersAccumulator14EndHeaderBlockEv(%"class.quic::QpackDecodedHeadersAccumulator"* %34) #14
  %35 = load %"class.quic::QpackDecodedHeadersAccumulator"*, %"class.quic::QpackDecodedHeadersAccumulator"** %33, align 8
  %36 = icmp eq %"class.quic::QpackDecodedHeadersAccumulator"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 5
  store i8 1, i8* %38, align 8
  br label %50

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 0, i32 1
  %41 = tail call zeroext i1 @_ZNK4quic19QuicStreamSequencer8IsClosedEv(%"class.quic::QuicStreamSequencer"* %40) #14
  br i1 %41, label %50, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 0, i32 1, i32 9
  %44 = load i8, i8* %43, align 4, !range !12
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %32, i64 0, i32 0, i32 10
  %48 = load i8, i8* %47, align 8, !range !12
  %49 = icmp eq i8 %48, 0
  br label %50

50:                                               ; preds = %46, %42, %39, %37, %30
  %51 = phi i1 [ false, %30 ], [ false, %37 ], [ false, %39 ], [ false, %42 ], [ %49, %46 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor26OnPriorityUpdateFrameStartEm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 15, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnPriorityUpdateFrameERKNS_19PriorityUpdateFrameE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::PriorityUpdateFrame"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 15, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor20OnAcceptChFrameStartEm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 9, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor15OnAcceptChFrameERKNS_13AcceptChFrameE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, %"struct.quic::AcceptChFrame"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %7 = bitcast %"class.quic::QuicSpdyStream"** %6 to %"class.quic::QuicStream"**
  %8 = load %"class.quic::QuicStream"*, %"class.quic::QuicStream"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 9, i64* %12, align 8
  %13 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 30, i64* %15, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_(%"class.std::__1::basic_string"* nonnull sret %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5) #14
  %16 = bitcast %"class.quic::QuicStream"* %8 to void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)***
  %17 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %17, i64 6
  %19 = load void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicStream"*, i32, %"class.std::__1::basic_string"*)** %18, align 8
  call void %19(%"class.quic::QuicStream"* %8, i32 133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %27

27:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor29OnWebTransportStreamFrameTypeEmm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %5 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %4, align 8
  tail call void @_ZN4quic14QuicSpdyStream29OnWebTransportStreamFrameTypeEmm(%"class.quic::QuicSpdyStream"* %5, i64 %1, i64 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor19OnUnknownFrameStartEmmm(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %6 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %5, align 8
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %6, i64 0, i32 2
  %8 = load %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdySession"** %7, align 8
  %9 = getelementptr inbounds %"class.quic::QuicSpdySession", %"class.quic::QuicSpdySession"* %8, i64 0, i32 26
  %10 = load %"class.quic::Http3DebugVisitor"*, %"class.quic::Http3DebugVisitor"** %9, align 8
  %11 = icmp eq %"class.quic::Http3DebugVisitor"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.quic::QuicSpdyStream"* %6 to %"class.quic::QuicStream"*
  %14 = bitcast %"class.quic::QuicSpdyStream"* %6 to i32 (%"class.quic::QuicStream"*)***
  %15 = load i32 (%"class.quic::QuicStream"*)**, i32 (%"class.quic::QuicStream"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %15, i64 8
  %17 = load i32 (%"class.quic::QuicStream"*)*, i32 (%"class.quic::QuicStream"*)** %16, align 8
  %18 = tail call i32 %17(%"class.quic::QuicStream"* %13) #14
  %19 = bitcast %"class.quic::Http3DebugVisitor"* %10 to void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)***
  %20 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)**, void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)** %20, i64 21
  %22 = load void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)*, void (%"class.quic::Http3DebugVisitor"*, i32, i64, i64)** %21, align 8
  tail call void %22(%"class.quic::Http3DebugVisitor"* nonnull %10, i32 %18, i64 %1, i64 %3) #14
  br label %23

23:                                               ; preds = %4, %12
  %24 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %6, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %6, i64 0, i32 16
  %26 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %25, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %24, i64 %26) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor21OnUnknownFramePayloadEN4absl11string_viewE(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.quic::QuicSpdyStream::HttpDecoderVisitor", %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* %0, i64 0, i32 1
  %5 = load %"class.quic::QuicSpdyStream"*, %"class.quic::QuicSpdyStream"** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %5, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.quic::QuicSpdyStream", %"class.quic::QuicSpdyStream"* %5, i64 0, i32 16
  %8 = tail call i64 @_ZN4quic25QuicSpdyStreamBodyManager9OnNonBodyEm(%"class.quic::QuicSpdyStreamBodyManager"* %7, i64 %2) #14
  tail call void @_ZN4quic19QuicStreamSequencer12MarkConsumedEm(%"class.quic::QuicStreamSequencer"* %6, i64 %8) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic14QuicSpdyStream18HttpDecoderVisitor17OnUnknownFrameEndEv(%"class.quic::QuicSpdyStream::HttpDecoderVisitor"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic11HttpDecoder7VisitorD2Ev(%"class.quic::HttpDecoder::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic15QuicIntervalSetImE3AddERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"*, %"class.quic::QuicInterval"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.750", align 8
  %4 = alloca %"class.quic::QuicInterval", align 8
  %5 = alloca %"struct.std::__1::pair.748", align 8
  %6 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %343

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %45, %11
  %14 = phi %"class.absl::container_internal::btree_node"** [ %12, %11 ], [ %49, %45 ]
  %15 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %14, align 8
  %16 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %15, i64 8, i32 0
  %17 = getelementptr inbounds i8, i8* %16, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %37, label %20

20:                                               ; preds = %13
  %21 = zext i8 %18 to i32
  %22 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %15, i64 16, i32 0
  %23 = bitcast i8* %22 to %"class.quic::QuicInterval"*
  br label %24

24:                                               ; preds = %24, %20
  %25 = phi i32 [ 0, %20 ], [ %35, %24 ]
  %26 = phi i32 [ %21, %20 ], [ %34, %24 ]
  %27 = add nsw i32 %26, %25
  %28 = ashr i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %23, i64 %29, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %31, %7
  %33 = add nsw i32 %28, 1
  %34 = select i1 %32, i32 %26, i32 %28
  %35 = select i1 %32, i32 %33, i32 %25
  %36 = icmp eq i32 %35, %34
  br i1 %36, label %37, label %24

37:                                               ; preds = %24, %13
  %38 = phi i32 [ 0, %13 ], [ %34, %24 ]
  %39 = getelementptr inbounds i8, i8* %16, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = zext i8 %18 to i32
  %44 = icmp eq i32 %38, %43
  br i1 %44, label %50, label %66

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %15, i64 256, i32 0
  %47 = bitcast i8* %46 to %"class.absl::container_internal::btree_node"**
  %48 = sext i32 %38 to i64
  %49 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %47, i64 %48
  br label %13

50:                                               ; preds = %42, %58
  %51 = phi %"class.absl::container_internal::btree_node"* [ %53, %58 ], [ %15, %42 ]
  %52 = bitcast %"class.absl::container_internal::btree_node"* %51 to %"class.absl::container_internal::btree_node"**
  %53 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %52, align 8
  %54 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %53, i64 8, i32 0
  %55 = getelementptr inbounds i8, i8* %54, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %51, i64 8, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds i8, i8* %54, i64 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %60, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %58
  %65 = zext i8 %60 to i32
  br label %66

66:                                               ; preds = %64, %42
  %67 = phi i32 [ %65, %64 ], [ %38, %42 ]
  %68 = phi %"class.absl::container_internal::btree_node"* [ %53, %64 ], [ %15, %42 ]
  %69 = icmp eq %"class.absl::container_internal::btree_node"* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %50, %66
  %71 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %71, align 8
  %73 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %72, i64 8, i32 0
  %74 = getelementptr inbounds i8, i8* %73, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi %"class.absl::container_internal::btree_node"* [ %72, %70 ], [ %68, %66 ]
  %79 = phi i32 [ %76, %70 ], [ %67, %66 ]
  %80 = ptrtoint %"class.absl::container_internal::btree_node"* %78 to i64
  %81 = bitcast %"class.quic::QuicInterval"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #14
  %82 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 0
  %83 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 1
  %84 = bitcast %"class.quic::QuicInterval"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %81, i8* align 8 %84, i64 16, i1 false)
  %85 = bitcast %"class.quic::QuicIntervalSet"* %0 to %"class.absl::container_internal::btree_node"***
  %86 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %85, align 8
  %87 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %86, align 8
  %88 = icmp ne %"class.absl::container_internal::btree_node"* %78, %87
  %89 = icmp ne i32 %79, 0
  %90 = or i1 %89, %88
  br i1 %90, label %91, label %226

91:                                               ; preds = %77
  %92 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %78, i64 8, i32 0
  %93 = getelementptr inbounds i8, i8* %92, i64 3
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %111, label %96

96:                                               ; preds = %91
  %97 = add nsw i32 %79, -1
  %98 = icmp sgt i32 %79, 0
  br i1 %98, label %147, label %99

99:                                               ; preds = %96, %107
  %100 = phi %"class.absl::container_internal::btree_node"* [ %102, %107 ], [ %78, %96 ]
  %101 = bitcast %"class.absl::container_internal::btree_node"* %100 to %"class.absl::container_internal::btree_node"**
  %102 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %101, align 8
  %103 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %102, i64 8, i32 0
  %104 = getelementptr inbounds i8, i8* %103, i64 3
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %147

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %100, i64 8, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %99, label %143

111:                                              ; preds = %91
  %112 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %78, i64 256, i32 0
  %113 = bitcast i8* %112 to %"class.absl::container_internal::btree_node"**
  %114 = sext i32 %79 to i64
  %115 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %113, i64 %114
  %116 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %115, align 8
  %117 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %116, i64 8, i32 0
  %118 = getelementptr inbounds i8, i8* %117, i64 3
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 0
  %121 = getelementptr inbounds i8, i8* %117, i64 2
  %122 = load i8, i8* %121, align 1
  br i1 %120, label %123, label %137

123:                                              ; preds = %111, %123
  %124 = phi i8 [ %136, %123 ], [ %122, %111 ]
  %125 = phi %"class.absl::container_internal::btree_node"* [ %130, %123 ], [ %116, %111 ]
  %126 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %125, i64 256, i32 0
  %127 = bitcast i8* %126 to %"class.absl::container_internal::btree_node"**
  %128 = zext i8 %124 to i64
  %129 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %127, i64 %128
  %130 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %129, align 8
  %131 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %130, i64 8, i32 0
  %132 = getelementptr inbounds i8, i8* %131, i64 3
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 0
  %135 = getelementptr inbounds i8, i8* %131, i64 2
  %136 = load i8, i8* %135, align 1
  br i1 %134, label %123, label %137

137:                                              ; preds = %123, %111
  %138 = phi %"class.absl::container_internal::btree_node"* [ %116, %111 ], [ %130, %123 ]
  %139 = phi i8 [ %122, %111 ], [ %136, %123 ]
  %140 = ptrtoint %"class.absl::container_internal::btree_node"* %138 to i64
  %141 = zext i8 %139 to i32
  %142 = add nsw i32 %141, -1
  br label %147

143:                                              ; preds = %107
  %144 = ptrtoint %"class.absl::container_internal::btree_node"* %102 to i64
  %145 = zext i8 %109 to i32
  %146 = add nsw i32 %145, -1
  br label %147

147:                                              ; preds = %99, %143, %96, %137
  %148 = phi i64 [ %140, %137 ], [ %80, %96 ], [ %144, %143 ], [ %80, %99 ]
  %149 = phi i32 [ %142, %137 ], [ %97, %96 ], [ %146, %143 ], [ %97, %99 ]
  %150 = inttoptr i64 %148 to %"class.absl::container_internal::btree_node"*
  %151 = icmp eq i64 %148, 0
  br i1 %151, label %152, label %153, !prof !48

152:                                              ; preds = %147
  tail call void @llvm.trap() #14
  unreachable

153:                                              ; preds = %147
  %154 = icmp slt i32 %149, 0
  br i1 %154, label %155, label %156, !prof !48

155:                                              ; preds = %153
  tail call void @llvm.trap() #14
  unreachable

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %150, i64 8, i32 0
  %158 = getelementptr inbounds i8, i8* %157, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = icmp slt i32 %149, %160
  br i1 %161, label %163, label %162, !prof !2

162:                                              ; preds = %156
  tail call void @llvm.trap() #14
  unreachable

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %150, i64 16, i32 0
  %165 = bitcast i8* %164 to %"class.quic::QuicInterval"*
  %166 = sext i32 %149 to i64
  %167 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %165, i64 %166, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %165, i64 %166, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = icmp ult i64 %168, %170
  br i1 %171, label %172, label %180

172:                                              ; preds = %163
  %173 = load i64, i64* %82, align 8
  %174 = load i64, i64* %83, align 8
  %175 = icmp uge i64 %173, %174
  %176 = icmp ult i64 %174, %168
  %177 = or i1 %175, %176
  %178 = icmp ult i64 %170, %173
  %179 = or i1 %178, %177
  br i1 %179, label %180, label %226

180:                                              ; preds = %163, %172
  %181 = getelementptr inbounds i8, i8* %157, i64 3
  %182 = load i8, i8* %181, align 1
  %183 = icmp eq i8 %182, 0
  %184 = add nuw nsw i32 %149, 1
  br i1 %183, label %201, label %185

185:                                              ; preds = %180
  %186 = icmp eq i32 %184, %160
  br i1 %186, label %187, label %226

187:                                              ; preds = %185, %196
  %188 = phi i8* [ %192, %196 ], [ %157, %185 ]
  %189 = phi %"class.absl::container_internal::btree_node"* [ %191, %196 ], [ %150, %185 ]
  %190 = bitcast %"class.absl::container_internal::btree_node"* %189 to %"class.absl::container_internal::btree_node"**
  %191 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %190, align 8
  %192 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %191, i64 8, i32 0
  %193 = getelementptr inbounds i8, i8* %192, i64 3
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %196, label %226

196:                                              ; preds = %187
  %197 = load i8, i8* %188, align 1
  %198 = getelementptr inbounds i8, i8* %192, i64 2
  %199 = load i8, i8* %198, align 1
  %200 = icmp eq i8 %197, %199
  br i1 %200, label %187, label %223

201:                                              ; preds = %180
  %202 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %150, i64 256, i32 0
  %203 = bitcast i8* %202 to %"class.absl::container_internal::btree_node"**
  %204 = sext i32 %184 to i64
  %205 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %203, i64 %204
  %206 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %205, align 8
  %207 = ptrtoint %"class.absl::container_internal::btree_node"* %206 to i64
  %208 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %206, i64 8, i32 0
  %209 = getelementptr inbounds i8, i8* %208, i64 3
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %226

212:                                              ; preds = %201, %212
  %213 = phi %"class.absl::container_internal::btree_node"* [ %216, %212 ], [ %206, %201 ]
  %214 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %213, i64 256, i32 0
  %215 = bitcast i8* %214 to %"class.absl::container_internal::btree_node"**
  %216 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %215, align 8
  %217 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %216, i64 8, i32 0
  %218 = getelementptr inbounds i8, i8* %217, i64 3
  %219 = load i8, i8* %218, align 1
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %212, label %221

221:                                              ; preds = %212
  %222 = ptrtoint %"class.absl::container_internal::btree_node"* %216 to i64
  br label %226

223:                                              ; preds = %196
  %224 = ptrtoint %"class.absl::container_internal::btree_node"* %191 to i64
  %225 = zext i8 %197 to i32
  br label %226

226:                                              ; preds = %187, %223, %221, %185, %77, %201, %172
  %227 = phi i64 [ %148, %172 ], [ %148, %185 ], [ %207, %201 ], [ %80, %77 ], [ %222, %221 ], [ %224, %223 ], [ %148, %187 ]
  %228 = phi i32 [ %149, %172 ], [ %184, %185 ], [ 0, %201 ], [ 0, %77 ], [ 0, %221 ], [ %225, %223 ], [ %160, %187 ]
  %229 = inttoptr i64 %227 to %"class.absl::container_internal::btree_node"*
  %230 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %231 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %230, align 8
  %232 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %231, i64 8, i32 0
  %233 = getelementptr inbounds i8, i8* %232, i64 2
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = icmp ne %"class.absl::container_internal::btree_node"* %231, %229
  %237 = icmp ne i32 %228, %235
  %238 = or i1 %236, %237
  br i1 %238, label %239, label %337

239:                                              ; preds = %226, %328
  %240 = phi %"class.absl::container_internal::btree_node"* [ %333, %328 ], [ %229, %226 ]
  %241 = phi i32 [ %330, %328 ], [ %228, %226 ]
  %242 = phi i64 [ %329, %328 ], [ %227, %226 ]
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %245, !prof !48

244:                                              ; preds = %239
  tail call void @llvm.trap() #14
  unreachable

245:                                              ; preds = %239
  %246 = icmp slt i32 %241, 0
  br i1 %246, label %247, label %248, !prof !48

247:                                              ; preds = %245
  tail call void @llvm.trap() #14
  unreachable

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %240, i64 8, i32 0
  %250 = getelementptr inbounds i8, i8* %249, i64 2
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = icmp slt i32 %241, %252
  br i1 %253, label %255, label %254, !prof !2

254:                                              ; preds = %248
  tail call void @llvm.trap() #14
  unreachable

255:                                              ; preds = %248
  %256 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %240, i64 16, i32 0
  %257 = bitcast i8* %256 to %"class.quic::QuicInterval"*
  %258 = sext i32 %241 to i64
  %259 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %257, i64 %258, i32 0
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %257, i64 %258, i32 1
  %262 = load i64, i64* %261, align 8
  %263 = icmp ult i64 %260, %262
  br i1 %263, label %264, label %337

264:                                              ; preds = %255
  %265 = load i64, i64* %82, align 8
  %266 = load i64, i64* %83, align 8
  %267 = icmp uge i64 %265, %266
  %268 = icmp ult i64 %266, %260
  %269 = or i1 %267, %268
  %270 = icmp ult i64 %262, %265
  %271 = or i1 %270, %269
  br i1 %271, label %337, label %272

272:                                              ; preds = %264
  %273 = icmp ult i64 %260, %265
  br i1 %273, label %274, label %276

274:                                              ; preds = %272
  store i64 %260, i64* %82, align 8
  %275 = load i64, i64* %261, align 8
  br label %276

276:                                              ; preds = %274, %272
  %277 = phi i64 [ %275, %274 ], [ %262, %272 ]
  %278 = icmp ugt i64 %277, %266
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  store i64 %277, i64* %83, align 8
  br label %280

280:                                              ; preds = %276, %279
  %281 = getelementptr inbounds i8, i8* %249, i64 3
  %282 = load i8, i8* %281, align 1
  %283 = icmp eq i8 %282, 0
  %284 = add nuw nsw i32 %241, 1
  br i1 %283, label %303, label %285

285:                                              ; preds = %280
  %286 = load i8, i8* %250, align 1
  %287 = zext i8 %286 to i32
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %289, label %328

289:                                              ; preds = %285, %298
  %290 = phi i8* [ %294, %298 ], [ %249, %285 ]
  %291 = phi %"class.absl::container_internal::btree_node"* [ %293, %298 ], [ %240, %285 ]
  %292 = bitcast %"class.absl::container_internal::btree_node"* %291 to %"class.absl::container_internal::btree_node"**
  %293 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %292, align 8
  %294 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %293, i64 8, i32 0
  %295 = getelementptr inbounds i8, i8* %294, i64 3
  %296 = load i8, i8* %295, align 1
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %328

298:                                              ; preds = %289
  %299 = load i8, i8* %290, align 1
  %300 = getelementptr inbounds i8, i8* %294, i64 2
  %301 = load i8, i8* %300, align 1
  %302 = icmp eq i8 %299, %301
  br i1 %302, label %289, label %325

303:                                              ; preds = %280
  %304 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %240, i64 256, i32 0
  %305 = bitcast i8* %304 to %"class.absl::container_internal::btree_node"**
  %306 = sext i32 %284 to i64
  %307 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %305, i64 %306
  %308 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %307, align 8
  %309 = ptrtoint %"class.absl::container_internal::btree_node"* %308 to i64
  %310 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %308, i64 8, i32 0
  %311 = getelementptr inbounds i8, i8* %310, i64 3
  %312 = load i8, i8* %311, align 1
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %314, label %328

314:                                              ; preds = %303, %314
  %315 = phi %"class.absl::container_internal::btree_node"* [ %318, %314 ], [ %308, %303 ]
  %316 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %315, i64 256, i32 0
  %317 = bitcast i8* %316 to %"class.absl::container_internal::btree_node"**
  %318 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %317, align 8
  %319 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %318, i64 8, i32 0
  %320 = getelementptr inbounds i8, i8* %319, i64 3
  %321 = load i8, i8* %320, align 1
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %314, label %323

323:                                              ; preds = %314
  %324 = ptrtoint %"class.absl::container_internal::btree_node"* %318 to i64
  br label %328

325:                                              ; preds = %298
  %326 = ptrtoint %"class.absl::container_internal::btree_node"* %293 to i64
  %327 = zext i8 %299 to i32
  br label %328

328:                                              ; preds = %289, %325, %323, %285, %303
  %329 = phi i64 [ %242, %285 ], [ %309, %303 ], [ %324, %323 ], [ %326, %325 ], [ %242, %289 ]
  %330 = phi i32 [ %284, %285 ], [ 0, %303 ], [ 0, %323 ], [ %327, %325 ], [ %284, %289 ]
  %331 = load i8, i8* %233, align 1
  %332 = zext i8 %331 to i32
  %333 = inttoptr i64 %329 to %"class.absl::container_internal::btree_node"*
  %334 = icmp ne %"class.absl::container_internal::btree_node"* %231, %333
  %335 = icmp ne i32 %330, %332
  %336 = or i1 %334, %335
  br i1 %336, label %239, label %337

337:                                              ; preds = %264, %255, %328, %226
  %338 = phi i32 [ %228, %226 ], [ %241, %264 ], [ %241, %255 ], [ %330, %328 ]
  %339 = phi %"class.absl::container_internal::btree_node"* [ %229, %226 ], [ %240, %264 ], [ %240, %255 ], [ %231, %328 ]
  %340 = bitcast %"struct.std::__1::pair.750"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %340) #14
  %341 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE11erase_rangeENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESJ_(%"struct.std::__1::pair.750"* nonnull sret %3, %"class.absl::container_internal::btree"* %341, %"class.absl::container_internal::btree_node"* %229, i32 %228, %"class.absl::container_internal::btree_node"* %339, i32 %338) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %340) #14
  %342 = bitcast %"struct.std::__1::pair.748"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %342) #14
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE13insert_uniqueIS5_JRKS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEERKT_DpOT0_(%"struct.std::__1::pair.748"* nonnull sret %5, %"class.absl::container_internal::btree"* %341, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %4, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %342) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #14
  br label %343

343:                                              ; preds = %2, %337
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE11erase_rangeENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESJ_(%"struct.std::__1::pair.750"* noalias sret, %"class.absl::container_internal::btree"*, %"class.absl::container_internal::btree_node"*, i32, %"class.absl::container_internal::btree_node"*, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = icmp ne %"class.absl::container_internal::btree_node"* %2, %4
  %8 = icmp ne i32 %5, %3
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %406

10:                                               ; preds = %6
  %11 = ptrtoint %"class.absl::container_internal::btree_node"* %2 to i64
  br label %12

12:                                               ; preds = %67, %10
  %13 = phi %"class.absl::container_internal::btree_node"* [ %70, %67 ], [ %2, %10 ]
  %14 = phi i64 [ %17, %67 ], [ 0, %10 ]
  %15 = phi i32 [ %69, %67 ], [ %3, %10 ]
  %16 = phi i64 [ %68, %67 ], [ %11, %10 ]
  %17 = add nuw nsw i64 %14, 1
  %18 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %13, i64 8, i32 0
  %19 = getelementptr inbounds i8, i8* %18, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  %22 = add nsw i32 %15, 1
  br i1 %21, label %42, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds i8, i8* %18, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %22, %26
  br i1 %27, label %28, label %67

28:                                               ; preds = %23, %37
  %29 = phi i8* [ %33, %37 ], [ %18, %23 ]
  %30 = phi %"class.absl::container_internal::btree_node"* [ %32, %37 ], [ %13, %23 ]
  %31 = bitcast %"class.absl::container_internal::btree_node"* %30 to %"class.absl::container_internal::btree_node"**
  %32 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %31, align 8
  %33 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %32, i64 8, i32 0
  %34 = getelementptr inbounds i8, i8* %33, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %67

37:                                               ; preds = %28
  %38 = load i8, i8* %29, align 1
  %39 = getelementptr inbounds i8, i8* %33, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %38, %40
  br i1 %41, label %28, label %64

42:                                               ; preds = %12
  %43 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %13, i64 256, i32 0
  %44 = bitcast i8* %43 to %"class.absl::container_internal::btree_node"**
  %45 = sext i32 %22 to i64
  %46 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %44, i64 %45
  %47 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %46, align 8
  %48 = ptrtoint %"class.absl::container_internal::btree_node"* %47 to i64
  %49 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %47, i64 8, i32 0
  %50 = getelementptr inbounds i8, i8* %49, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %67

53:                                               ; preds = %42, %53
  %54 = phi %"class.absl::container_internal::btree_node"* [ %57, %53 ], [ %47, %42 ]
  %55 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %54, i64 256, i32 0
  %56 = bitcast i8* %55 to %"class.absl::container_internal::btree_node"**
  %57 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %56, align 8
  %58 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %57, i64 8, i32 0
  %59 = getelementptr inbounds i8, i8* %58, i64 3
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %53, label %62

62:                                               ; preds = %53
  %63 = ptrtoint %"class.absl::container_internal::btree_node"* %57 to i64
  br label %67

64:                                               ; preds = %37
  %65 = ptrtoint %"class.absl::container_internal::btree_node"* %32 to i64
  %66 = zext i8 %38 to i32
  br label %67

67:                                               ; preds = %28, %64, %62, %42, %23
  %68 = phi i64 [ %16, %23 ], [ %48, %42 ], [ %63, %62 ], [ %65, %64 ], [ %16, %28 ]
  %69 = phi i32 [ %22, %23 ], [ 0, %42 ], [ 0, %62 ], [ %66, %64 ], [ %22, %28 ]
  %70 = inttoptr i64 %68 to %"class.absl::container_internal::btree_node"*
  %71 = icmp ne %"class.absl::container_internal::btree_node"* %70, %4
  %72 = icmp ne i32 %69, %5
  %73 = or i1 %71, %72
  br i1 %73, label %12, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, %17
  br i1 %77, label %78, label %83

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %79, align 8
  %81 = bitcast %"class.absl::container_internal::btree"* %1 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %80, %"class.std::__1::allocator"* %81) #14
  %82 = bitcast %"class.absl::container_internal::btree"* %1 to <2 x %"class.absl::container_internal::btree_node"*>*
  store <2 x %"class.absl::container_internal::btree_node"*> <%"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*)>, <2 x %"class.absl::container_internal::btree_node"*>* %82, align 8
  store i64 0, i64* %75, align 8
  br label %406

83:                                               ; preds = %74
  %84 = icmp eq %"class.absl::container_internal::btree_node"* %2, %4
  br i1 %84, label %85, label %236

85:                                               ; preds = %83
  %86 = sub nsw i32 %5, %3
  %87 = trunc i32 %86 to i8
  %88 = bitcast %"class.absl::container_internal::btree"* %1 to %"class.std::__1::allocator"*
  %89 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %90 = getelementptr inbounds i8, i8* %89, i64 2
  %91 = load i8, i8* %90, align 1
  %92 = and i32 %3, 255
  %93 = and i32 %86, 255
  %94 = add nuw nsw i32 %93, %92
  %95 = zext i8 %91 to i32
  %96 = and i32 %94, 255
  %97 = sub nsw i32 %95, %96
  %98 = sext i32 %97 to i64
  %99 = zext i32 %96 to i64
  %100 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 16, i32 0
  %101 = bitcast i8* %100 to %"class.quic::QuicInterval"*
  %102 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %101, i64 %99
  %103 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %102, i64 %98
  %104 = icmp eq i32 %97, 0
  br i1 %104, label %152, label %105

105:                                              ; preds = %85
  %106 = zext i32 %92 to i64
  %107 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %101, i64 %106
  %108 = zext i8 %91 to i64
  %109 = shl nuw nsw i64 %108, 4
  %110 = add nsw i64 %109, -16
  %111 = shl nuw nsw i32 %96, 4
  %112 = zext i32 %111 to i64
  %113 = sub nsw i64 %110, %112
  %114 = lshr exact i64 %113, 4
  %115 = add nuw nsw i64 %114, 1
  %116 = and i64 %115, 3
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %128, label %118

118:                                              ; preds = %105, %118
  %119 = phi %"class.quic::QuicInterval"* [ %125, %118 ], [ %107, %105 ]
  %120 = phi %"class.quic::QuicInterval"* [ %124, %118 ], [ %102, %105 ]
  %121 = phi i64 [ %126, %118 ], [ %116, %105 ]
  %122 = bitcast %"class.quic::QuicInterval"* %119 to i8*
  %123 = bitcast %"class.quic::QuicInterval"* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #14
  %124 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %120, i64 1
  %125 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %119, i64 1
  %126 = add i64 %121, -1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %118, !llvm.loop !63

128:                                              ; preds = %118, %105
  %129 = phi %"class.quic::QuicInterval"* [ %107, %105 ], [ %125, %118 ]
  %130 = phi %"class.quic::QuicInterval"* [ %102, %105 ], [ %124, %118 ]
  %131 = icmp ult i64 %113, 48
  br i1 %131, label %152, label %132

132:                                              ; preds = %128, %132
  %133 = phi %"class.quic::QuicInterval"* [ %150, %132 ], [ %129, %128 ]
  %134 = phi %"class.quic::QuicInterval"* [ %149, %132 ], [ %130, %128 ]
  %135 = bitcast %"class.quic::QuicInterval"* %133 to i8*
  %136 = bitcast %"class.quic::QuicInterval"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #14
  %137 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %134, i64 1
  %138 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %133, i64 1
  %139 = bitcast %"class.quic::QuicInterval"* %138 to i8*
  %140 = bitcast %"class.quic::QuicInterval"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false) #14
  %141 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %134, i64 2
  %142 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %133, i64 2
  %143 = bitcast %"class.quic::QuicInterval"* %142 to i8*
  %144 = bitcast %"class.quic::QuicInterval"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #14
  %145 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %134, i64 3
  %146 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %133, i64 3
  %147 = bitcast %"class.quic::QuicInterval"* %146 to i8*
  %148 = bitcast %"class.quic::QuicInterval"* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #14
  %149 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %134, i64 4
  %150 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %133, i64 4
  %151 = icmp eq %"class.quic::QuicInterval"* %149, %103
  br i1 %151, label %152, label %132

152:                                              ; preds = %128, %132, %85
  %153 = getelementptr inbounds i8, i8* %89, i64 3
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %229

156:                                              ; preds = %152
  %157 = icmp eq i8 %87, 0
  br i1 %157, label %163, label %158

158:                                              ; preds = %156
  %159 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %160 = bitcast i8* %159 to %"class.absl::container_internal::btree_node"**
  %161 = zext i32 %92 to i64
  %162 = zext i32 %93 to i64
  br label %191

163:                                              ; preds = %191, %156
  %164 = icmp ult i32 %94, %95
  br i1 %164, label %165, label %229

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %167 = bitcast i8* %166 to %"class.absl::container_internal::btree_node"**
  %168 = zext i32 %94 to i64
  %169 = zext i32 %93 to i64
  %170 = zext i8 %91 to i64
  %171 = sub nsw i64 %170, %168
  %172 = xor i64 %168, -1
  %173 = add nsw i64 %172, %170
  %174 = and i64 %171, 3
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %188, label %176

176:                                              ; preds = %165, %176
  %177 = phi i64 [ %179, %176 ], [ %168, %165 ]
  %178 = phi i64 [ %186, %176 ], [ %174, %165 ]
  %179 = add nuw nsw i64 %177, 1
  %180 = sub nsw i64 %179, %169
  %181 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %179
  %182 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %181, align 8
  %183 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %180
  store %"class.absl::container_internal::btree_node"* %182, %"class.absl::container_internal::btree_node"** %183, align 8
  %184 = trunc i64 %180 to i8
  %185 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %182, i64 8, i32 0
  store i8 %184, i8* %185, align 1
  %186 = add i64 %178, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %176, !llvm.loop !65

188:                                              ; preds = %176, %165
  %189 = phi i64 [ %168, %165 ], [ %179, %176 ]
  %190 = icmp ult i64 %173, 3
  br i1 %190, label %229, label %198

191:                                              ; preds = %191, %158
  %192 = phi i64 [ 0, %158 ], [ %193, %191 ]
  %193 = add nuw nsw i64 %192, 1
  %194 = add nuw nsw i64 %193, %161
  %195 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %160, i64 %194
  %196 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %195, align 8
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %196, %"class.std::__1::allocator"* %88) #14
  %197 = icmp eq i64 %193, %162
  br i1 %197, label %163, label %191

198:                                              ; preds = %188, %198
  %199 = phi i64 [ %221, %198 ], [ %189, %188 ]
  %200 = add nuw nsw i64 %199, 1
  %201 = sub nsw i64 %200, %169
  %202 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %200
  %203 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %202, align 8
  %204 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %201
  store %"class.absl::container_internal::btree_node"* %203, %"class.absl::container_internal::btree_node"** %204, align 8
  %205 = trunc i64 %201 to i8
  %206 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %203, i64 8, i32 0
  store i8 %205, i8* %206, align 1
  %207 = add nuw nsw i64 %199, 2
  %208 = sub nsw i64 %207, %169
  %209 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %207
  %210 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %209, align 8
  %211 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %208
  store %"class.absl::container_internal::btree_node"* %210, %"class.absl::container_internal::btree_node"** %211, align 8
  %212 = trunc i64 %208 to i8
  %213 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %210, i64 8, i32 0
  store i8 %212, i8* %213, align 1
  %214 = add nuw nsw i64 %199, 3
  %215 = sub nsw i64 %214, %169
  %216 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %214
  %217 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %216, align 8
  %218 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %215
  store %"class.absl::container_internal::btree_node"* %217, %"class.absl::container_internal::btree_node"** %218, align 8
  %219 = trunc i64 %215 to i8
  %220 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %217, i64 8, i32 0
  store i8 %219, i8* %220, align 1
  %221 = add nuw nsw i64 %199, 4
  %222 = sub nsw i64 %221, %169
  %223 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %221
  %224 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %223, align 8
  %225 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %167, i64 %222
  store %"class.absl::container_internal::btree_node"* %224, %"class.absl::container_internal::btree_node"** %225, align 8
  %226 = trunc i64 %222 to i8
  %227 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %224, i64 8, i32 0
  store i8 %226, i8* %227, align 1
  %228 = icmp eq i64 %221, %170
  br i1 %228, label %229, label %198

229:                                              ; preds = %188, %198, %152, %163
  %230 = sub i8 %91, %87
  store i8 %230, i8* %90, align 1
  %231 = load i64, i64* %75, align 8
  %232 = sub nsw i64 %231, %17
  store i64 %232, i64* %75, align 8
  %233 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE22rebalance_after_deleteENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %2, i32 %3)
  %234 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %233, 0
  %235 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %233, 1
  br label %406

236:                                              ; preds = %83
  %237 = sub nsw i64 %76, %17
  %238 = bitcast %"class.absl::container_internal::btree"* %1 to %"class.std::__1::allocator"*
  br label %239

239:                                              ; preds = %236, %400
  %240 = phi i64 [ %76, %236 ], [ %404, %400 ]
  %241 = phi i32 [ %3, %236 ], [ %403, %400 ]
  %242 = phi %"class.absl::container_internal::btree_node"* [ %2, %236 ], [ %402, %400 ]
  %243 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %242, i64 8, i32 0
  %244 = getelementptr inbounds i8, i8* %243, i64 3
  %245 = load i8, i8* %244, align 1
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %398, label %247

247:                                              ; preds = %239
  %248 = sub nsw i64 %240, %237
  %249 = getelementptr inbounds i8, i8* %243, i64 2
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = sub nsw i32 %251, %241
  %253 = sext i32 %252 to i64
  %254 = icmp sgt i64 %248, %253
  %255 = select i1 %254, i64 %253, i64 %248
  %256 = trunc i64 %255 to i8
  %257 = and i32 %241, 255
  %258 = trunc i64 %255 to i32
  %259 = and i32 %258, 255
  %260 = add nuw nsw i32 %259, %257
  %261 = and i32 %260, 255
  %262 = sub nsw i32 %251, %261
  %263 = sext i32 %262 to i64
  %264 = zext i32 %261 to i64
  %265 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %242, i64 16, i32 0
  %266 = bitcast i8* %265 to %"class.quic::QuicInterval"*
  %267 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %266, i64 %264
  %268 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %267, i64 %263
  %269 = icmp eq i32 %262, 0
  br i1 %269, label %393, label %270

270:                                              ; preds = %247
  %271 = zext i32 %257 to i64
  %272 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %266, i64 %271
  %273 = zext i8 %250 to i64
  %274 = shl nuw nsw i64 %273, 4
  %275 = add nsw i64 %274, -16
  %276 = shl nuw nsw i32 %261, 4
  %277 = zext i32 %276 to i64
  %278 = sub nsw i64 %275, %277
  %279 = lshr exact i64 %278, 4
  %280 = add nuw nsw i64 %279, 1
  %281 = and i64 %280, 3
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %293, label %283

283:                                              ; preds = %270, %283
  %284 = phi %"class.quic::QuicInterval"* [ %290, %283 ], [ %272, %270 ]
  %285 = phi %"class.quic::QuicInterval"* [ %289, %283 ], [ %267, %270 ]
  %286 = phi i64 [ %291, %283 ], [ %281, %270 ]
  %287 = bitcast %"class.quic::QuicInterval"* %284 to i8*
  %288 = bitcast %"class.quic::QuicInterval"* %285 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* align 8 %288, i64 16, i1 false) #14
  %289 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %285, i64 1
  %290 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %284, i64 1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %283, !llvm.loop !66

293:                                              ; preds = %283, %270
  %294 = phi %"class.quic::QuicInterval"* [ %272, %270 ], [ %290, %283 ]
  %295 = phi %"class.quic::QuicInterval"* [ %267, %270 ], [ %289, %283 ]
  %296 = icmp ult i64 %278, 48
  br i1 %296, label %317, label %297

297:                                              ; preds = %293, %297
  %298 = phi %"class.quic::QuicInterval"* [ %315, %297 ], [ %294, %293 ]
  %299 = phi %"class.quic::QuicInterval"* [ %314, %297 ], [ %295, %293 ]
  %300 = bitcast %"class.quic::QuicInterval"* %298 to i8*
  %301 = bitcast %"class.quic::QuicInterval"* %299 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %301, i64 16, i1 false) #14
  %302 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %299, i64 1
  %303 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %298, i64 1
  %304 = bitcast %"class.quic::QuicInterval"* %303 to i8*
  %305 = bitcast %"class.quic::QuicInterval"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %304, i8* align 8 %305, i64 16, i1 false) #14
  %306 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %299, i64 2
  %307 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %298, i64 2
  %308 = bitcast %"class.quic::QuicInterval"* %307 to i8*
  %309 = bitcast %"class.quic::QuicInterval"* %306 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 16, i1 false) #14
  %310 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %299, i64 3
  %311 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %298, i64 3
  %312 = bitcast %"class.quic::QuicInterval"* %311 to i8*
  %313 = bitcast %"class.quic::QuicInterval"* %310 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %312, i8* align 8 %313, i64 16, i1 false) #14
  %314 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %299, i64 4
  %315 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %298, i64 4
  %316 = icmp eq %"class.quic::QuicInterval"* %314, %268
  br i1 %316, label %317, label %297

317:                                              ; preds = %297, %293
  %318 = load i8, i8* %244, align 1
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %393

320:                                              ; preds = %317
  %321 = icmp eq i8 %256, 0
  br i1 %321, label %327, label %322

322:                                              ; preds = %320
  %323 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %242, i64 256, i32 0
  %324 = bitcast i8* %323 to %"class.absl::container_internal::btree_node"**
  %325 = zext i32 %257 to i64
  %326 = and i64 %255, 255
  br label %355

327:                                              ; preds = %355, %320
  %328 = icmp ult i32 %260, %251
  br i1 %328, label %329, label %393

329:                                              ; preds = %327
  %330 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %242, i64 256, i32 0
  %331 = bitcast i8* %330 to %"class.absl::container_internal::btree_node"**
  %332 = zext i32 %260 to i64
  %333 = and i64 %255, 255
  %334 = zext i8 %250 to i64
  %335 = sub nsw i64 %273, %332
  %336 = xor i64 %332, -1
  %337 = add nsw i64 %336, %273
  %338 = and i64 %335, 3
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %352, label %340

340:                                              ; preds = %329, %340
  %341 = phi i64 [ %343, %340 ], [ %332, %329 ]
  %342 = phi i64 [ %350, %340 ], [ %338, %329 ]
  %343 = add nuw nsw i64 %341, 1
  %344 = sub nsw i64 %343, %333
  %345 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %343
  %346 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %345, align 8
  %347 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %344
  store %"class.absl::container_internal::btree_node"* %346, %"class.absl::container_internal::btree_node"** %347, align 8
  %348 = trunc i64 %344 to i8
  %349 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %346, i64 8, i32 0
  store i8 %348, i8* %349, align 1
  %350 = add i64 %342, -1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %352, label %340, !llvm.loop !67

352:                                              ; preds = %340, %329
  %353 = phi i64 [ %332, %329 ], [ %343, %340 ]
  %354 = icmp ult i64 %337, 3
  br i1 %354, label %393, label %362

355:                                              ; preds = %355, %322
  %356 = phi i64 [ 0, %322 ], [ %357, %355 ]
  %357 = add nuw nsw i64 %356, 1
  %358 = add nuw nsw i64 %357, %325
  %359 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %324, i64 %358
  %360 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %359, align 8
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %360, %"class.std::__1::allocator"* %238) #14
  %361 = icmp eq i64 %357, %326
  br i1 %361, label %327, label %355

362:                                              ; preds = %352, %362
  %363 = phi i64 [ %385, %362 ], [ %353, %352 ]
  %364 = add nuw nsw i64 %363, 1
  %365 = sub nsw i64 %364, %333
  %366 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %364
  %367 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %366, align 8
  %368 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %365
  store %"class.absl::container_internal::btree_node"* %367, %"class.absl::container_internal::btree_node"** %368, align 8
  %369 = trunc i64 %365 to i8
  %370 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %367, i64 8, i32 0
  store i8 %369, i8* %370, align 1
  %371 = add nuw nsw i64 %363, 2
  %372 = sub nsw i64 %371, %333
  %373 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %371
  %374 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %373, align 8
  %375 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %372
  store %"class.absl::container_internal::btree_node"* %374, %"class.absl::container_internal::btree_node"** %375, align 8
  %376 = trunc i64 %372 to i8
  %377 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %374, i64 8, i32 0
  store i8 %376, i8* %377, align 1
  %378 = add nuw nsw i64 %363, 3
  %379 = sub nsw i64 %378, %333
  %380 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %378
  %381 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %380, align 8
  %382 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %379
  store %"class.absl::container_internal::btree_node"* %381, %"class.absl::container_internal::btree_node"** %382, align 8
  %383 = trunc i64 %379 to i8
  %384 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %381, i64 8, i32 0
  store i8 %383, i8* %384, align 1
  %385 = add nuw nsw i64 %363, 4
  %386 = sub nsw i64 %385, %333
  %387 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %385
  %388 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %387, align 8
  %389 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %331, i64 %386
  store %"class.absl::container_internal::btree_node"* %388, %"class.absl::container_internal::btree_node"** %389, align 8
  %390 = trunc i64 %386 to i8
  %391 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %388, i64 8, i32 0
  store i8 %390, i8* %391, align 1
  %392 = icmp eq i64 %385, %334
  br i1 %392, label %393, label %362

393:                                              ; preds = %352, %362, %247, %317, %327
  %394 = sub i8 %250, %256
  store i8 %394, i8* %249, align 1
  %395 = load i64, i64* %75, align 8
  %396 = sub nsw i64 %395, %255
  store i64 %396, i64* %75, align 8
  %397 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE22rebalance_after_deleteENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %242, i32 %241)
  br label %400

398:                                              ; preds = %239
  %399 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5eraseENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %242, i32 %241)
  br label %400

400:                                              ; preds = %398, %393
  %401 = phi { %"class.absl::container_internal::btree_node"*, i32 } [ %399, %398 ], [ %397, %393 ]
  %402 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %401, 0
  %403 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %401, 1
  %404 = load i64, i64* %75, align 8
  %405 = icmp sgt i64 %404, %237
  br i1 %405, label %239, label %406

406:                                              ; preds = %400, %6, %229, %78
  %407 = phi i64 [ %17, %229 ], [ %17, %78 ], [ 0, %6 ], [ %17, %400 ]
  %408 = phi %"class.absl::container_internal::btree_node"* [ %234, %229 ], [ bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %78 ], [ %2, %6 ], [ %402, %400 ]
  %409 = phi i32 [ %235, %229 ], [ 0, %78 ], [ %5, %6 ], [ %403, %400 ]
  %410 = getelementptr inbounds %"struct.std::__1::pair.750", %"struct.std::__1::pair.750"* %0, i64 0, i32 0
  store i64 %407, i64* %410, align 8
  %411 = getelementptr inbounds %"struct.std::__1::pair.750", %"struct.std::__1::pair.750"* %0, i64 0, i32 1, i32 0
  store %"class.absl::container_internal::btree_node"* %408, %"class.absl::container_internal::btree_node"** %411, align 8
  %412 = getelementptr inbounds %"struct.std::__1::pair.750", %"struct.std::__1::pair.750"* %0, i64 0, i32 1, i32 1
  store i32 %409, i32* %412, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE22rebalance_after_deleteENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"*, %"class.absl::container_internal::btree_node"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca { %"class.absl::container_internal::btree_node"*, i32 }, align 8
  %5 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %4 to %"struct.absl::container_internal::btree_iterator.746"*
  %6 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %4, i64 0, i32 0
  store %"class.absl::container_internal::btree_node"* %1, %"class.absl::container_internal::btree_node"** %6, align 8
  %7 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %4, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %4 to i64*
  %9 = ptrtoint %"class.absl::container_internal::btree_node"* %1 to i64
  %10 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %10, align 8
  %12 = icmp eq %"class.absl::container_internal::btree_node"* %11, %1
  br i1 %12, label %15, label %51

13:                                               ; preds = %68
  %14 = inttoptr i64 %75 to %"class.absl::container_internal::btree_node"*
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi i32 [ %2, %3 ], [ %66, %13 ]
  %17 = phi i64 [ %9, %3 ], [ %67, %13 ]
  %18 = phi %"class.absl::container_internal::btree_node"* [ %1, %3 ], [ %14, %13 ]
  %19 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %18, i64 8, i32 0
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %40

23:                                               ; preds = %15
  %24 = getelementptr inbounds i8, i8* %19, i64 3
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 1
  store %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"** %28, align 8
  br label %37

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %18, i64 256, i32 0
  %31 = bitcast i8* %30 to %"class.absl::container_internal::btree_node"**
  %32 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %31, align 8
  %33 = bitcast %"class.absl::container_internal::btree_node"* %32 to i64**
  %34 = load i64*, i64** %33, align 8
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.absl::container_internal::btree_node"* %32 to i64*
  store i64 %35, i64* %36, align 8
  br label %37

37:                                               ; preds = %29, %27
  %38 = phi %"class.absl::container_internal::btree_node"* [ %32, %29 ], [ bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %27 ]
  store %"class.absl::container_internal::btree_node"* %38, %"class.absl::container_internal::btree_node"** %10, align 8
  %39 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %18, %"class.std::__1::allocator"* %39) #14
  br label %40

40:                                               ; preds = %15, %37
  %41 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %79

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 1
  %46 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %45, align 8
  %47 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %46, i64 8, i32 0
  %48 = getelementptr inbounds i8, i8* %47, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  br label %135

51:                                               ; preds = %3, %68
  %52 = phi %"class.absl::container_internal::btree_node"* [ %76, %68 ], [ %1, %3 ]
  %53 = phi i8 [ %70, %68 ], [ 1, %3 ]
  %54 = phi i64 [ %67, %68 ], [ %9, %3 ]
  %55 = phi i32 [ %66, %68 ], [ %2, %3 ]
  %56 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %52, i64 8, i32 0
  %57 = getelementptr inbounds i8, i8* %56, i64 2
  %58 = load i8, i8* %57, align 1
  %59 = icmp ugt i8 %58, 6
  br i1 %59, label %79, label %60

60:                                               ; preds = %51
  %61 = call zeroext i1 @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE22try_merge_or_rebalanceEPNS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %0, %"struct.absl::container_internal::btree_iterator.746"* nonnull %5)
  %62 = and i8 %53, 1
  %63 = icmp eq i8 %62, 0
  %64 = load i64, i64* %8, align 8
  %65 = load i32, i32* %7, align 8
  %66 = select i1 %63, i32 %55, i32 %65
  %67 = select i1 %63, i64 %54, i64 %64
  br i1 %61, label %68, label %79

68:                                               ; preds = %60
  %69 = inttoptr i64 %64 to %"class.absl::container_internal::btree_node"*
  %70 = select i1 %63, i8 %53, i8 0
  %71 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %69, i64 8, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  store i32 %73, i32* %7, align 8
  %74 = inttoptr i64 %64 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %8, align 8
  %76 = inttoptr i64 %75 to %"class.absl::container_internal::btree_node"*
  %77 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %10, align 8
  %78 = icmp eq %"class.absl::container_internal::btree_node"* %77, %76
  br i1 %78, label %13, label %51

79:                                               ; preds = %60, %51, %40
  %80 = phi i32 [ %16, %40 ], [ %66, %60 ], [ %55, %51 ]
  %81 = phi i64 [ %17, %40 ], [ %67, %60 ], [ %54, %51 ]
  %82 = inttoptr i64 %81 to %"class.absl::container_internal::btree_node"*
  %83 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %82, i64 8, i32 0
  %84 = getelementptr inbounds i8, i8* %83, i64 2
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = icmp eq i32 %80, %86
  br i1 %87, label %88, label %131

88:                                               ; preds = %79
  %89 = getelementptr inbounds i8, i8* %83, i64 3
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %88, %101
  %93 = phi i8* [ %97, %101 ], [ %83, %88 ]
  %94 = phi %"class.absl::container_internal::btree_node"* [ %96, %101 ], [ %82, %88 ]
  %95 = bitcast %"class.absl::container_internal::btree_node"* %94 to %"class.absl::container_internal::btree_node"**
  %96 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %95, align 8
  %97 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %96, i64 8, i32 0
  %98 = getelementptr inbounds i8, i8* %97, i64 3
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %131

101:                                              ; preds = %92
  %102 = load i8, i8* %93, align 1
  %103 = getelementptr inbounds i8, i8* %97, i64 2
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %102, %104
  br i1 %105, label %92, label %128

106:                                              ; preds = %88
  %107 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %82, i64 256, i32 0
  %108 = bitcast i8* %107 to %"class.absl::container_internal::btree_node"**
  %109 = zext i8 %85 to i64
  %110 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %108, i64 %109
  %111 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %110, align 8
  %112 = ptrtoint %"class.absl::container_internal::btree_node"* %111 to i64
  %113 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %111, i64 8, i32 0
  %114 = getelementptr inbounds i8, i8* %113, i64 3
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %131

117:                                              ; preds = %106, %117
  %118 = phi %"class.absl::container_internal::btree_node"* [ %121, %117 ], [ %111, %106 ]
  %119 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %118, i64 256, i32 0
  %120 = bitcast i8* %119 to %"class.absl::container_internal::btree_node"**
  %121 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %120, align 8
  %122 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %121, i64 8, i32 0
  %123 = getelementptr inbounds i8, i8* %122, i64 3
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %117, label %126

126:                                              ; preds = %117
  %127 = ptrtoint %"class.absl::container_internal::btree_node"* %121 to i64
  br label %131

128:                                              ; preds = %101
  %129 = ptrtoint %"class.absl::container_internal::btree_node"* %96 to i64
  %130 = zext i8 %102 to i32
  br label %131

131:                                              ; preds = %92, %128, %126, %106, %79
  %132 = phi i32 [ %80, %79 ], [ 0, %106 ], [ 0, %126 ], [ %130, %128 ], [ %80, %92 ]
  %133 = phi i64 [ %81, %79 ], [ %112, %106 ], [ %127, %126 ], [ %129, %128 ], [ %81, %92 ]
  %134 = inttoptr i64 %133 to %"class.absl::container_internal::btree_node"*
  br label %135

135:                                              ; preds = %131, %44
  %136 = phi %"class.absl::container_internal::btree_node"* [ %46, %44 ], [ %134, %131 ]
  %137 = phi i32 [ %50, %44 ], [ %132, %131 ]
  %138 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } undef, %"class.absl::container_internal::btree_node"* %136, 0
  %139 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } %138, i32 %137, 1
  ret { %"class.absl::container_internal::btree_node"*, i32 } %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5eraseENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"*, %"class.absl::container_internal::btree_node"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 8, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 3
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %48

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 256, i32 0
  %10 = bitcast i8* %9 to %"class.absl::container_internal::btree_node"**
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %10, i64 %11
  %13 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %13, i64 8, i32 0
  %15 = getelementptr inbounds i8, i8* %14, i64 3
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds i8, i8* %14, i64 2
  %19 = load i8, i8* %18, align 1
  br i1 %17, label %20, label %34

20:                                               ; preds = %8, %20
  %21 = phi i8 [ %33, %20 ], [ %19, %8 ]
  %22 = phi %"class.absl::container_internal::btree_node"* [ %27, %20 ], [ %13, %8 ]
  %23 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %22, i64 256, i32 0
  %24 = bitcast i8* %23 to %"class.absl::container_internal::btree_node"**
  %25 = zext i8 %21 to i64
  %26 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %24, i64 %25
  %27 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %26, align 8
  %28 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %27, i64 8, i32 0
  %29 = getelementptr inbounds i8, i8* %28, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds i8, i8* %28, i64 2
  %33 = load i8, i8* %32, align 1
  br i1 %31, label %20, label %34

34:                                               ; preds = %20, %8
  %35 = phi %"class.absl::container_internal::btree_node"* [ %13, %8 ], [ %27, %20 ]
  %36 = phi i8 [ %19, %8 ], [ %33, %20 ]
  %37 = zext i8 %36 to i32
  %38 = add nsw i32 %37, -1
  %39 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %35, i64 16, i32 0
  %40 = bitcast i8* %39 to %"class.quic::QuicInterval"*
  %41 = sext i32 %38 to i64
  %42 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %40, i64 %41
  %43 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 16, i32 0
  %44 = bitcast i8* %43 to %"class.quic::QuicInterval"*
  %45 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %44, i64 %11
  %46 = bitcast %"class.quic::QuicInterval"* %45 to i8*
  %47 = bitcast %"class.quic::QuicInterval"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #14
  br label %48

48:                                               ; preds = %3, %34
  %49 = phi i32 [ %38, %34 ], [ %2, %3 ]
  %50 = phi %"class.absl::container_internal::btree_node"* [ %35, %34 ], [ %1, %3 ]
  %51 = phi i1 [ true, %34 ], [ false, %3 ]
  %52 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  %53 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %50, i64 8, i32 0
  %54 = getelementptr inbounds i8, i8* %53, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = and i32 %49, 255
  %57 = add nuw nsw i32 %56, 1
  %58 = zext i8 %55 to i32
  %59 = and i32 %57, 255
  %60 = sub nsw i32 %58, %59
  %61 = sext i32 %60 to i64
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %50, i64 16, i32 0
  %64 = bitcast i8* %63 to %"class.quic::QuicInterval"*
  %65 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %64, i64 %62
  %66 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %65, i64 %61
  %67 = icmp eq i32 %60, 0
  br i1 %67, label %115, label %68

68:                                               ; preds = %48
  %69 = zext i32 %56 to i64
  %70 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %64, i64 %69
  %71 = zext i8 %55 to i64
  %72 = shl nuw nsw i64 %71, 4
  %73 = add nsw i64 %72, -16
  %74 = shl nuw nsw i32 %59, 4
  %75 = zext i32 %74 to i64
  %76 = sub nsw i64 %73, %75
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %68, %81
  %82 = phi %"class.quic::QuicInterval"* [ %88, %81 ], [ %70, %68 ]
  %83 = phi %"class.quic::QuicInterval"* [ %87, %81 ], [ %65, %68 ]
  %84 = phi i64 [ %89, %81 ], [ %79, %68 ]
  %85 = bitcast %"class.quic::QuicInterval"* %82 to i8*
  %86 = bitcast %"class.quic::QuicInterval"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #14
  %87 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %83, i64 1
  %88 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %82, i64 1
  %89 = add i64 %84, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %81, !llvm.loop !68

91:                                               ; preds = %81, %68
  %92 = phi %"class.quic::QuicInterval"* [ %70, %68 ], [ %88, %81 ]
  %93 = phi %"class.quic::QuicInterval"* [ %65, %68 ], [ %87, %81 ]
  %94 = icmp ult i64 %76, 48
  br i1 %94, label %115, label %95

95:                                               ; preds = %91, %95
  %96 = phi %"class.quic::QuicInterval"* [ %113, %95 ], [ %92, %91 ]
  %97 = phi %"class.quic::QuicInterval"* [ %112, %95 ], [ %93, %91 ]
  %98 = bitcast %"class.quic::QuicInterval"* %96 to i8*
  %99 = bitcast %"class.quic::QuicInterval"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #14
  %100 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %97, i64 1
  %101 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %96, i64 1
  %102 = bitcast %"class.quic::QuicInterval"* %101 to i8*
  %103 = bitcast %"class.quic::QuicInterval"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #14
  %104 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %97, i64 2
  %105 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %96, i64 2
  %106 = bitcast %"class.quic::QuicInterval"* %105 to i8*
  %107 = bitcast %"class.quic::QuicInterval"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #14
  %108 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %97, i64 3
  %109 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %96, i64 3
  %110 = bitcast %"class.quic::QuicInterval"* %109 to i8*
  %111 = bitcast %"class.quic::QuicInterval"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 16, i1 false) #14
  %112 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %97, i64 4
  %113 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %96, i64 4
  %114 = icmp eq %"class.quic::QuicInterval"* %112, %66
  br i1 %114, label %115, label %95

115:                                              ; preds = %91, %95, %48
  %116 = getelementptr inbounds i8, i8* %53, i64 3
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %177

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %50, i64 256, i32 0
  %121 = bitcast i8* %120 to %"class.absl::container_internal::btree_node"**
  %122 = add nuw nsw i32 %56, 1
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %123
  %125 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %124, align 8
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %125, %"class.std::__1::allocator"* %52) #14
  %126 = icmp ult i32 %57, %58
  br i1 %126, label %127, label %177

127:                                              ; preds = %119
  %128 = zext i32 %57 to i64
  %129 = zext i8 %55 to i64
  %130 = add nsw i64 %128, -1
  %131 = sub nsw i64 %129, %128
  %132 = add nsw i64 %129, -2
  %133 = sub nsw i64 %132, %130
  %134 = and i64 %131, 3
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %147, label %136

136:                                              ; preds = %127, %136
  %137 = phi i64 [ %139, %136 ], [ %128, %127 ]
  %138 = phi i64 [ %145, %136 ], [ %134, %127 ]
  %139 = add nuw nsw i64 %137, 1
  %140 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %139
  %141 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %140, align 8
  %142 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %137
  store %"class.absl::container_internal::btree_node"* %141, %"class.absl::container_internal::btree_node"** %142, align 8
  %143 = trunc i64 %137 to i8
  %144 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %141, i64 8, i32 0
  store i8 %143, i8* %144, align 1
  %145 = add i64 %138, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %136, !llvm.loop !69

147:                                              ; preds = %136, %127
  %148 = phi i64 [ %128, %127 ], [ %139, %136 ]
  %149 = icmp ult i64 %133, 3
  br i1 %149, label %177, label %150

150:                                              ; preds = %147, %150
  %151 = phi i64 [ %170, %150 ], [ %148, %147 ]
  %152 = add nuw nsw i64 %151, 1
  %153 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %152
  %154 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %153, align 8
  %155 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %151
  store %"class.absl::container_internal::btree_node"* %154, %"class.absl::container_internal::btree_node"** %155, align 8
  %156 = trunc i64 %151 to i8
  %157 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %154, i64 8, i32 0
  store i8 %156, i8* %157, align 1
  %158 = add nuw nsw i64 %151, 2
  %159 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %158
  %160 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %159, align 8
  %161 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %152
  store %"class.absl::container_internal::btree_node"* %160, %"class.absl::container_internal::btree_node"** %161, align 8
  %162 = trunc i64 %152 to i8
  %163 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %160, i64 8, i32 0
  store i8 %162, i8* %163, align 1
  %164 = add nuw nsw i64 %151, 3
  %165 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %164
  %166 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %165, align 8
  %167 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %158
  store %"class.absl::container_internal::btree_node"* %166, %"class.absl::container_internal::btree_node"** %167, align 8
  %168 = trunc i64 %158 to i8
  %169 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %166, i64 8, i32 0
  store i8 %168, i8* %169, align 1
  %170 = add nuw nsw i64 %151, 4
  %171 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %170
  %172 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %171, align 8
  %173 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %121, i64 %164
  store %"class.absl::container_internal::btree_node"* %172, %"class.absl::container_internal::btree_node"** %173, align 8
  %174 = trunc i64 %164 to i8
  %175 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %172, i64 8, i32 0
  store i8 %174, i8* %175, align 1
  %176 = icmp eq i64 %170, %129
  br i1 %176, label %177, label %150

177:                                              ; preds = %147, %150, %115, %119
  %178 = add i8 %55, -1
  store i8 %178, i8* %54, align 1
  %179 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 2
  %180 = load i64, i64* %179, align 8
  %181 = add nsw i64 %180, -1
  store i64 %181, i64* %179, align 8
  %182 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE22rebalance_after_deleteENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %0, %"class.absl::container_internal::btree_node"* %50, i32 %49)
  %183 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %182, 0
  %184 = ptrtoint %"class.absl::container_internal::btree_node"* %183 to i64
  %185 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %182, 1
  br i1 %51, label %186, label %236

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %183, i64 8, i32 0
  %188 = getelementptr inbounds i8, i8* %187, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = icmp eq i8 %189, 0
  %191 = add nsw i32 %185, 1
  br i1 %190, label %211, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds i8, i8* %187, i64 2
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp eq i32 %191, %195
  br i1 %196, label %197, label %236

197:                                              ; preds = %192, %206
  %198 = phi i8* [ %202, %206 ], [ %187, %192 ]
  %199 = phi %"class.absl::container_internal::btree_node"* [ %201, %206 ], [ %183, %192 ]
  %200 = bitcast %"class.absl::container_internal::btree_node"* %199 to %"class.absl::container_internal::btree_node"**
  %201 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %200, align 8
  %202 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %201, i64 8, i32 0
  %203 = getelementptr inbounds i8, i8* %202, i64 3
  %204 = load i8, i8* %203, align 1
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %236

206:                                              ; preds = %197
  %207 = load i8, i8* %198, align 1
  %208 = getelementptr inbounds i8, i8* %202, i64 2
  %209 = load i8, i8* %208, align 1
  %210 = icmp eq i8 %207, %209
  br i1 %210, label %197, label %233

211:                                              ; preds = %186
  %212 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %183, i64 256, i32 0
  %213 = bitcast i8* %212 to %"class.absl::container_internal::btree_node"**
  %214 = sext i32 %191 to i64
  %215 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %213, i64 %214
  %216 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %215, align 8
  %217 = ptrtoint %"class.absl::container_internal::btree_node"* %216 to i64
  %218 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %216, i64 8, i32 0
  %219 = getelementptr inbounds i8, i8* %218, i64 3
  %220 = load i8, i8* %219, align 1
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %236

222:                                              ; preds = %211, %222
  %223 = phi %"class.absl::container_internal::btree_node"* [ %226, %222 ], [ %216, %211 ]
  %224 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %223, i64 256, i32 0
  %225 = bitcast i8* %224 to %"class.absl::container_internal::btree_node"**
  %226 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %225, align 8
  %227 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %226, i64 8, i32 0
  %228 = getelementptr inbounds i8, i8* %227, i64 3
  %229 = load i8, i8* %228, align 1
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %222, label %231

231:                                              ; preds = %222
  %232 = ptrtoint %"class.absl::container_internal::btree_node"* %226 to i64
  br label %236

233:                                              ; preds = %206
  %234 = ptrtoint %"class.absl::container_internal::btree_node"* %201 to i64
  %235 = zext i8 %207 to i32
  br label %236

236:                                              ; preds = %197, %233, %231, %192, %211, %177
  %237 = phi i32 [ %185, %177 ], [ %191, %192 ], [ 0, %211 ], [ 0, %231 ], [ %235, %233 ], [ %191, %197 ]
  %238 = phi i64 [ %184, %177 ], [ %184, %192 ], [ %217, %211 ], [ %232, %231 ], [ %234, %233 ], [ %184, %197 ]
  %239 = inttoptr i64 %238 to %"class.absl::container_internal::btree_node"*
  %240 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } undef, %"class.absl::container_internal::btree_node"* %239, 0
  %241 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } %240, i32 %237, 1
  ret { %"class.absl::container_internal::btree_node"*, i32 } %241
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE22try_merge_or_rebalanceEPNS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"*, %"struct.absl::container_internal::btree_iterator.746"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.746", %"struct.absl::container_internal::btree_iterator.746"* %1, i64 0, i32 0
  %4 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %3, align 8
  %5 = bitcast %"class.absl::container_internal::btree_node"* %4 to %"class.absl::container_internal::btree_node"**
  %6 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %4, i64 8, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %2
  %11 = zext i8 %8 to i64
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %6, i64 256, i32 0
  %14 = bitcast i8* %13 to %"class.absl::container_internal::btree_node"**
  %15 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %14, i64 %12
  %16 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, align 8
  %17 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %16, i64 8, i32 0
  %18 = getelementptr inbounds i8, i8* %17, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = add nuw nsw i32 %20, 1
  %22 = getelementptr inbounds i8, i8* %7, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nuw nsw i32 %21, %24
  %26 = icmp ult i32 %25, 16
  br i1 %26, label %27, label %37

27:                                               ; preds = %10
  %28 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.746", %"struct.absl::container_internal::btree_iterator.746"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, %21
  store i32 %30, i32* %28, align 8
  %31 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5mergeEPSD_PSB_(%"class.absl::container_internal::btree_node"* %16, %"class.absl::container_internal::btree_node"* %4, %"class.std::__1::allocator"* %31) #14
  %32 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 1
  %33 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %32, align 8
  %34 = icmp eq %"class.absl::container_internal::btree_node"* %33, %4
  br i1 %34, label %35, label %36

35:                                               ; preds = %27
  store %"class.absl::container_internal::btree_node"* %16, %"class.absl::container_internal::btree_node"** %32, align 8
  br label %36

36:                                               ; preds = %27, %35
  store %"class.absl::container_internal::btree_node"* %16, %"class.absl::container_internal::btree_node"** %3, align 8
  br label %113

37:                                               ; preds = %2, %10
  %38 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %6, i64 8, i32 0
  %39 = getelementptr inbounds i8, i8* %38, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp ult i8 %8, %40
  br i1 %41, label %42, label %80

42:                                               ; preds = %37
  %43 = zext i8 %8 to i64
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %6, i64 256, i32 0
  %46 = bitcast i8* %45 to %"class.absl::container_internal::btree_node"**
  %47 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %46, i64 %44
  %48 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %47, align 8
  %49 = getelementptr inbounds i8, i8* %7, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = add nuw nsw i32 %51, 1
  %53 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %48, i64 8, i32 0
  %54 = getelementptr inbounds i8, i8* %53, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = add nuw nsw i32 %52, %56
  %58 = icmp ult i32 %57, 16
  br i1 %58, label %59, label %65

59:                                               ; preds = %42
  %60 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5mergeEPSD_PSB_(%"class.absl::container_internal::btree_node"* %4, %"class.absl::container_internal::btree_node"* %48, %"class.std::__1::allocator"* %60) #14
  %61 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 1
  %62 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %61, align 8
  %63 = icmp eq %"class.absl::container_internal::btree_node"* %62, %48
  br i1 %63, label %64, label %113

64:                                               ; preds = %59
  store %"class.absl::container_internal::btree_node"* %4, %"class.absl::container_internal::btree_node"** %61, align 8
  br label %113

65:                                               ; preds = %42
  %66 = icmp ugt i8 %55, 7
  br i1 %66, label %67, label %80

67:                                               ; preds = %65
  %68 = icmp eq i8 %50, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.746", %"struct.absl::container_internal::btree_iterator.746"* %1, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %69, %67
  %74 = sub nsw i32 %56, %51
  %75 = sdiv i32 %74, 2
  %76 = add nsw i32 %56, -1
  %77 = icmp slt i32 %76, %75
  %78 = select i1 %77, i32 %76, i32 %75
  %79 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE23rebalance_right_to_leftEiPSD_PSB_(%"class.absl::container_internal::btree_node"* %4, i32 %78, %"class.absl::container_internal::btree_node"* %48, %"class.std::__1::allocator"* %79)
  br label %113

80:                                               ; preds = %69, %65, %37
  br i1 %9, label %113, label %81

81:                                               ; preds = %80
  %82 = zext i8 %8 to i64
  %83 = add nsw i64 %82, -1
  %84 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %6, i64 256, i32 0
  %85 = bitcast i8* %84 to %"class.absl::container_internal::btree_node"**
  %86 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %85, i64 %83
  %87 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %86, align 8
  %88 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %87, i64 8, i32 0
  %89 = getelementptr inbounds i8, i8* %88, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = icmp ugt i8 %90, 7
  br i1 %91, label %92, label %113

92:                                               ; preds = %81
  %93 = getelementptr inbounds i8, i8* %7, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.746", %"struct.absl::container_internal::btree_iterator.746"* %1, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = zext i8 %94 to i32
  %100 = icmp slt i32 %98, %99
  br i1 %100, label %101, label %113

101:                                              ; preds = %92, %96
  %102 = phi i32 [ %99, %96 ], [ 0, %92 ]
  %103 = zext i8 %90 to i32
  %104 = sub nsw i32 %103, %102
  %105 = sdiv i32 %104, 2
  %106 = add nsw i32 %103, -1
  %107 = icmp slt i32 %106, %105
  %108 = select i1 %107, i32 %106, i32 %105
  %109 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE23rebalance_left_to_rightEiPSD_PSB_(%"class.absl::container_internal::btree_node"* %87, i32 %108, %"class.absl::container_internal::btree_node"* %4, %"class.std::__1::allocator"* %109)
  %110 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.746", %"struct.absl::container_internal::btree_iterator.746"* %1, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = add nsw i32 %111, %108
  store i32 %112, i32* %110, align 8
  br label %113

113:                                              ; preds = %80, %81, %96, %64, %59, %73, %101, %36
  %114 = phi i1 [ false, %101 ], [ true, %36 ], [ false, %80 ], [ true, %64 ], [ true, %59 ], [ false, %73 ], [ false, %96 ], [ false, %81 ]
  ret i1 %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE23rebalance_right_to_leftEiPSD_PSB_(%"class.absl::container_internal::btree_node"*, i32, %"class.absl::container_internal::btree_node"*, %"class.std::__1::allocator"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 8, i32 0
  %6 = getelementptr inbounds i8, i8* %5, i64 2
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = load i8, i8* %5, align 1
  %10 = zext i8 %9 to i64
  %11 = bitcast %"class.absl::container_internal::btree_node"* %0 to %"class.absl::container_internal::btree_node"**
  %12 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %11, align 8
  %13 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 16, i32 0
  %14 = bitcast i8* %13 to %"class.quic::QuicInterval"*
  %15 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %14, i64 %8
  %16 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %12, i64 16, i32 0
  %17 = bitcast i8* %16 to %"class.quic::QuicInterval"*
  %18 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %17, i64 %10
  %19 = bitcast %"class.quic::QuicInterval"* %15 to i8*
  %20 = bitcast %"class.quic::QuicInterval"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false) #14
  %21 = add nsw i32 %1, -1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 16, i32 0
  %24 = bitcast i8* %23 to %"class.quic::QuicInterval"*
  %25 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %24, i64 %22
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %76, label %27

27:                                               ; preds = %4
  %28 = shl nuw nsw i64 %8, 32
  %29 = add nuw nsw i64 %28, 4294967296
  %30 = lshr exact i64 %29, 32
  %31 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %14, i64 %30
  %32 = shl nsw i64 %22, 4
  %33 = add nsw i64 %32, -16
  %34 = lshr exact i64 %33, 4
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 3
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %27, %38
  %39 = phi %"class.quic::QuicInterval"* [ %45, %38 ], [ %31, %27 ]
  %40 = phi %"class.quic::QuicInterval"* [ %44, %38 ], [ %24, %27 ]
  %41 = phi i64 [ %46, %38 ], [ %36, %27 ]
  %42 = bitcast %"class.quic::QuicInterval"* %39 to i8*
  %43 = bitcast %"class.quic::QuicInterval"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false) #14
  %44 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %40, i64 1
  %45 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %39, i64 1
  %46 = add i64 %41, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %38, !llvm.loop !70

48:                                               ; preds = %38, %27
  %49 = phi %"class.quic::QuicInterval"* [ %31, %27 ], [ %45, %38 ]
  %50 = phi %"class.quic::QuicInterval"* [ %24, %27 ], [ %44, %38 ]
  %51 = icmp ult i64 %33, 48
  br i1 %51, label %72, label %52

52:                                               ; preds = %48, %52
  %53 = phi %"class.quic::QuicInterval"* [ %70, %52 ], [ %49, %48 ]
  %54 = phi %"class.quic::QuicInterval"* [ %69, %52 ], [ %50, %48 ]
  %55 = bitcast %"class.quic::QuicInterval"* %53 to i8*
  %56 = bitcast %"class.quic::QuicInterval"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false) #14
  %57 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 1
  %58 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %53, i64 1
  %59 = bitcast %"class.quic::QuicInterval"* %58 to i8*
  %60 = bitcast %"class.quic::QuicInterval"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #14
  %61 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 2
  %62 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %53, i64 2
  %63 = bitcast %"class.quic::QuicInterval"* %62 to i8*
  %64 = bitcast %"class.quic::QuicInterval"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false) #14
  %65 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 3
  %66 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %53, i64 3
  %67 = bitcast %"class.quic::QuicInterval"* %66 to i8*
  %68 = bitcast %"class.quic::QuicInterval"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false) #14
  %69 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 4
  %70 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %53, i64 4
  %71 = icmp eq %"class.quic::QuicInterval"* %69, %25
  br i1 %71, label %72, label %52

72:                                               ; preds = %52, %48
  %73 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %11, align 8
  %74 = load i8, i8* %5, align 1
  %75 = zext i8 %74 to i64
  br label %76

76:                                               ; preds = %72, %4
  %77 = phi i64 [ %75, %72 ], [ %10, %4 ]
  %78 = phi %"class.absl::container_internal::btree_node"* [ %73, %72 ], [ %12, %4 ]
  %79 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %78, i64 16, i32 0
  %80 = bitcast i8* %79 to %"class.quic::QuicInterval"*
  %81 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %80, i64 %77
  %82 = bitcast %"class.quic::QuicInterval"* %81 to i8*
  %83 = bitcast %"class.quic::QuicInterval"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 16, i1 false) #14
  %84 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %85 = getelementptr inbounds i8, i8* %84, i64 2
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = sub nsw i32 %87, %1
  %89 = sext i32 %88 to i64
  %90 = sext i32 %1 to i64
  %91 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %24, i64 %90
  %92 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %91, i64 %89
  %93 = icmp eq i32 %88, 0
  br i1 %93, label %138, label %94

94:                                               ; preds = %76
  %95 = zext i8 %86 to i64
  %96 = shl nuw nsw i64 %95, 4
  %97 = add nsw i64 %96, -16
  %98 = shl nsw i64 %90, 4
  %99 = sub nsw i64 %97, %98
  %100 = lshr exact i64 %99, 4
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 3
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %114, label %104

104:                                              ; preds = %94, %104
  %105 = phi %"class.quic::QuicInterval"* [ %111, %104 ], [ %24, %94 ]
  %106 = phi %"class.quic::QuicInterval"* [ %110, %104 ], [ %91, %94 ]
  %107 = phi i64 [ %112, %104 ], [ %102, %94 ]
  %108 = bitcast %"class.quic::QuicInterval"* %105 to i8*
  %109 = bitcast %"class.quic::QuicInterval"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 16, i1 false) #14
  %110 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %106, i64 1
  %111 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %105, i64 1
  %112 = add i64 %107, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %104, !llvm.loop !71

114:                                              ; preds = %104, %94
  %115 = phi %"class.quic::QuicInterval"* [ %24, %94 ], [ %111, %104 ]
  %116 = phi %"class.quic::QuicInterval"* [ %91, %94 ], [ %110, %104 ]
  %117 = icmp ult i64 %99, 48
  br i1 %117, label %138, label %118

118:                                              ; preds = %114, %118
  %119 = phi %"class.quic::QuicInterval"* [ %136, %118 ], [ %115, %114 ]
  %120 = phi %"class.quic::QuicInterval"* [ %135, %118 ], [ %116, %114 ]
  %121 = bitcast %"class.quic::QuicInterval"* %119 to i8*
  %122 = bitcast %"class.quic::QuicInterval"* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 16, i1 false) #14
  %123 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %120, i64 1
  %124 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %119, i64 1
  %125 = bitcast %"class.quic::QuicInterval"* %124 to i8*
  %126 = bitcast %"class.quic::QuicInterval"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #14
  %127 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %120, i64 2
  %128 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %119, i64 2
  %129 = bitcast %"class.quic::QuicInterval"* %128 to i8*
  %130 = bitcast %"class.quic::QuicInterval"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 16, i1 false) #14
  %131 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %120, i64 3
  %132 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %119, i64 3
  %133 = bitcast %"class.quic::QuicInterval"* %132 to i8*
  %134 = bitcast %"class.quic::QuicInterval"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 16, i1 false) #14
  %135 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %120, i64 4
  %136 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %119, i64 4
  %137 = icmp eq %"class.quic::QuicInterval"* %135, %92
  br i1 %137, label %138, label %118

138:                                              ; preds = %114, %118, %76
  %139 = getelementptr inbounds i8, i8* %5, i64 3
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %221

142:                                              ; preds = %138
  %143 = icmp sgt i32 %1, 0
  br i1 %143, label %144, label %170

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %146 = bitcast i8* %145 to %"class.absl::container_internal::btree_node"**
  %147 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 256, i32 0
  %148 = bitcast i8* %147 to %"class.absl::container_internal::btree_node"**
  %149 = zext i32 %1 to i64
  %150 = and i64 %149, 1
  %151 = icmp eq i32 %1, 1
  br i1 %151, label %154, label %152

152:                                              ; preds = %144
  %153 = sub nsw i64 %149, %150
  br label %177

154:                                              ; preds = %177, %144
  %155 = phi i64 [ 0, %144 ], [ %194, %177 ]
  %156 = icmp eq i64 %150, 0
  br i1 %156, label %170, label %157

157:                                              ; preds = %154
  %158 = load i8, i8* %6, align 1
  %159 = zext i8 %158 to i32
  %160 = trunc i64 %155 to i32
  %161 = add i32 %160, 1
  %162 = add i32 %161, %159
  %163 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %146, i64 %155
  %164 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %163, align 8
  %165 = zext i32 %162 to i64
  %166 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %148, i64 %165
  store %"class.absl::container_internal::btree_node"* %164, %"class.absl::container_internal::btree_node"** %166, align 8
  %167 = trunc i32 %162 to i8
  %168 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %164, i64 8, i32 0
  store i8 %167, i8* %168, align 1
  %169 = bitcast %"class.absl::container_internal::btree_node"* %164 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %0, %"class.absl::container_internal::btree_node"** %169, align 8
  br label %170

170:                                              ; preds = %157, %154, %142
  %171 = load i8, i8* %85, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp slt i32 %172, %1
  br i1 %173, label %221, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %176 = bitcast i8* %175 to %"class.absl::container_internal::btree_node"**
  br label %206

177:                                              ; preds = %177, %152
  %178 = phi i64 [ 0, %152 ], [ %194, %177 ]
  %179 = phi i64 [ %153, %152 ], [ %204, %177 ]
  %180 = load i8, i8* %6, align 1
  %181 = zext i8 %180 to i32
  %182 = or i64 %178, 1
  %183 = trunc i64 %182 to i32
  %184 = add i32 %183, %181
  %185 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %146, i64 %178
  %186 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %185, align 8
  %187 = zext i32 %184 to i64
  %188 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %148, i64 %187
  store %"class.absl::container_internal::btree_node"* %186, %"class.absl::container_internal::btree_node"** %188, align 8
  %189 = trunc i32 %184 to i8
  %190 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %186, i64 8, i32 0
  store i8 %189, i8* %190, align 1
  %191 = bitcast %"class.absl::container_internal::btree_node"* %186 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %0, %"class.absl::container_internal::btree_node"** %191, align 8
  %192 = load i8, i8* %6, align 1
  %193 = zext i8 %192 to i32
  %194 = add nuw nsw i64 %178, 2
  %195 = trunc i64 %194 to i32
  %196 = add i32 %195, %193
  %197 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %146, i64 %182
  %198 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %197, align 8
  %199 = zext i32 %196 to i64
  %200 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %148, i64 %199
  store %"class.absl::container_internal::btree_node"* %198, %"class.absl::container_internal::btree_node"** %200, align 8
  %201 = trunc i32 %196 to i8
  %202 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %198, i64 8, i32 0
  store i8 %201, i8* %202, align 1
  %203 = bitcast %"class.absl::container_internal::btree_node"* %198 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %0, %"class.absl::container_internal::btree_node"** %203, align 8
  %204 = add i64 %179, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %154, label %177

206:                                              ; preds = %206, %174
  %207 = phi i64 [ %215, %206 ], [ 0, %174 ]
  %208 = add nsw i64 %207, %90
  %209 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %176, i64 %208
  %210 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %209, align 8
  %211 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %176, i64 %207
  store %"class.absl::container_internal::btree_node"* %210, %"class.absl::container_internal::btree_node"** %211, align 8
  %212 = trunc i64 %207 to i8
  %213 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %210, i64 8, i32 0
  store i8 %212, i8* %213, align 1
  %214 = bitcast %"class.absl::container_internal::btree_node"* %210 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %214, align 8
  %215 = add nuw nsw i64 %207, 1
  %216 = load i8, i8* %85, align 1
  %217 = zext i8 %216 to i32
  %218 = sub nsw i32 %217, %1
  %219 = sext i32 %218 to i64
  %220 = icmp slt i64 %207, %219
  br i1 %220, label %206, label %221

221:                                              ; preds = %206, %170, %138
  %222 = load i8, i8* %6, align 1
  %223 = trunc i32 %1 to i8
  %224 = add i8 %222, %223
  store i8 %224, i8* %6, align 1
  %225 = load i8, i8* %85, align 1
  %226 = sub i8 %225, %223
  store i8 %226, i8* %85, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE23rebalance_left_to_rightEiPSD_PSB_(%"class.absl::container_internal::btree_node"*, i32, %"class.absl::container_internal::btree_node"*, %"class.std::__1::allocator"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %6 = getelementptr inbounds i8, i8* %5, i64 2
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 16, i32 0
  %10 = bitcast i8* %9 to %"class.quic::QuicInterval"*
  %11 = shl nuw nsw i64 %8, 32
  %12 = add nsw i64 %11, -4294967296
  %13 = ashr exact i64 %12, 32
  %14 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %10, i64 %13
  %15 = sub nsw i64 0, %8
  %16 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %14, i64 %15
  %17 = icmp eq i8 %7, 0
  br i1 %17, label %65, label %18

18:                                               ; preds = %4
  %19 = zext i32 %1 to i64
  %20 = add nuw nsw i64 %8, %19
  %21 = shl i64 %20, 32
  %22 = add i64 %21, -4294967296
  %23 = ashr exact i64 %22, 32
  %24 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %10, i64 %23
  %25 = shl nuw nsw i64 %8, 4
  %26 = add nsw i64 %25, -16
  %27 = lshr exact i64 %26, 4
  %28 = add nuw nsw i64 %27, 1
  %29 = and i64 %28, 3
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %18, %31
  %32 = phi %"class.quic::QuicInterval"* [ %38, %31 ], [ %24, %18 ]
  %33 = phi %"class.quic::QuicInterval"* [ %37, %31 ], [ %14, %18 ]
  %34 = phi i64 [ %39, %31 ], [ %29, %18 ]
  %35 = bitcast %"class.quic::QuicInterval"* %32 to i8*
  %36 = bitcast %"class.quic::QuicInterval"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #14
  %37 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %33, i64 -1
  %38 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %32, i64 -1
  %39 = add i64 %34, -1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %31, !llvm.loop !72

41:                                               ; preds = %31, %18
  %42 = phi %"class.quic::QuicInterval"* [ %24, %18 ], [ %38, %31 ]
  %43 = phi %"class.quic::QuicInterval"* [ %14, %18 ], [ %37, %31 ]
  %44 = icmp ult i64 %26, 48
  br i1 %44, label %65, label %45

45:                                               ; preds = %41, %45
  %46 = phi %"class.quic::QuicInterval"* [ %63, %45 ], [ %42, %41 ]
  %47 = phi %"class.quic::QuicInterval"* [ %62, %45 ], [ %43, %41 ]
  %48 = bitcast %"class.quic::QuicInterval"* %46 to i8*
  %49 = bitcast %"class.quic::QuicInterval"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 16, i1 false) #14
  %50 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %47, i64 -1
  %51 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %46, i64 -1
  %52 = bitcast %"class.quic::QuicInterval"* %51 to i8*
  %53 = bitcast %"class.quic::QuicInterval"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false) #14
  %54 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %47, i64 -2
  %55 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %46, i64 -2
  %56 = bitcast %"class.quic::QuicInterval"* %55 to i8*
  %57 = bitcast %"class.quic::QuicInterval"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #14
  %58 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %47, i64 -3
  %59 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %46, i64 -3
  %60 = bitcast %"class.quic::QuicInterval"* %59 to i8*
  %61 = bitcast %"class.quic::QuicInterval"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false) #14
  %62 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %47, i64 -4
  %63 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %46, i64 -4
  %64 = icmp eq %"class.quic::QuicInterval"* %62, %16
  br i1 %64, label %65, label %45

65:                                               ; preds = %41, %45, %4
  %66 = add nsw i32 %1, -1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 8, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = bitcast %"class.absl::container_internal::btree_node"* %0 to %"class.absl::container_internal::btree_node"**
  %72 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %71, align 8
  %73 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %10, i64 %67
  %74 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %72, i64 16, i32 0
  %75 = bitcast i8* %74 to %"class.quic::QuicInterval"*
  %76 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %75, i64 %70
  %77 = bitcast %"class.quic::QuicInterval"* %73 to i8*
  %78 = bitcast %"class.quic::QuicInterval"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #14
  %79 = getelementptr inbounds i8, i8* %68, i64 2
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = sub nsw i32 %81, %66
  %83 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 16, i32 0
  %84 = bitcast i8* %83 to %"class.quic::QuicInterval"*
  %85 = sext i32 %82 to i64
  %86 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %84, i64 %85
  %87 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %86, i64 %67
  %88 = icmp eq i32 %66, 0
  br i1 %88, label %133, label %89

89:                                               ; preds = %65
  %90 = shl nsw i64 %67, 4
  %91 = add nsw i64 %90, -16
  %92 = lshr exact i64 %91, 4
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 3
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %89, %96
  %97 = phi %"class.quic::QuicInterval"* [ %103, %96 ], [ %10, %89 ]
  %98 = phi %"class.quic::QuicInterval"* [ %102, %96 ], [ %86, %89 ]
  %99 = phi i64 [ %104, %96 ], [ %94, %89 ]
  %100 = bitcast %"class.quic::QuicInterval"* %97 to i8*
  %101 = bitcast %"class.quic::QuicInterval"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #14
  %102 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %98, i64 1
  %103 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %97, i64 1
  %104 = add i64 %99, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %96, !llvm.loop !73

106:                                              ; preds = %96, %89
  %107 = phi %"class.quic::QuicInterval"* [ %10, %89 ], [ %103, %96 ]
  %108 = phi %"class.quic::QuicInterval"* [ %86, %89 ], [ %102, %96 ]
  %109 = icmp ult i64 %91, 48
  br i1 %109, label %130, label %110

110:                                              ; preds = %106, %110
  %111 = phi %"class.quic::QuicInterval"* [ %128, %110 ], [ %107, %106 ]
  %112 = phi %"class.quic::QuicInterval"* [ %127, %110 ], [ %108, %106 ]
  %113 = bitcast %"class.quic::QuicInterval"* %111 to i8*
  %114 = bitcast %"class.quic::QuicInterval"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #14
  %115 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %112, i64 1
  %116 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 1
  %117 = bitcast %"class.quic::QuicInterval"* %116 to i8*
  %118 = bitcast %"class.quic::QuicInterval"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #14
  %119 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %112, i64 2
  %120 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 2
  %121 = bitcast %"class.quic::QuicInterval"* %120 to i8*
  %122 = bitcast %"class.quic::QuicInterval"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 16, i1 false) #14
  %123 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %112, i64 3
  %124 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 3
  %125 = bitcast %"class.quic::QuicInterval"* %124 to i8*
  %126 = bitcast %"class.quic::QuicInterval"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #14
  %127 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %112, i64 4
  %128 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 4
  %129 = icmp eq %"class.quic::QuicInterval"* %127, %87
  br i1 %129, label %130, label %110

130:                                              ; preds = %110, %106
  %131 = load i8, i8* %79, align 1
  %132 = zext i8 %131 to i32
  br label %133

133:                                              ; preds = %130, %65
  %134 = phi i32 [ %132, %130 ], [ %81, %65 ]
  %135 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %71, align 8
  %136 = load i8, i8* %68, align 1
  %137 = zext i8 %136 to i64
  %138 = sub nsw i32 %134, %1
  %139 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %135, i64 16, i32 0
  %140 = bitcast i8* %139 to %"class.quic::QuicInterval"*
  %141 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %140, i64 %137
  %142 = sext i32 %138 to i64
  %143 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %84, i64 %142
  %144 = bitcast %"class.quic::QuicInterval"* %141 to i8*
  %145 = bitcast %"class.quic::QuicInterval"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #14
  %146 = getelementptr inbounds i8, i8* %68, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %247

149:                                              ; preds = %133
  %150 = load i8, i8* %6, align 1
  %151 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %152 = bitcast i8* %151 to %"class.absl::container_internal::btree_node"**
  %153 = zext i8 %150 to i64
  %154 = sext i32 %1 to i64
  %155 = and i64 %153, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %166

157:                                              ; preds = %149
  %158 = add nsw i64 %153, %154
  %159 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %153
  %160 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %159, align 8
  %161 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %158
  store %"class.absl::container_internal::btree_node"* %160, %"class.absl::container_internal::btree_node"** %161, align 8
  %162 = trunc i64 %158 to i8
  %163 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %160, i64 8, i32 0
  store i8 %162, i8* %163, align 1
  %164 = bitcast %"class.absl::container_internal::btree_node"* %160 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %164, align 8
  %165 = add nsw i64 %153, -1
  br label %166

166:                                              ; preds = %157, %149
  %167 = phi i64 [ %153, %149 ], [ %165, %157 ]
  %168 = icmp eq i8 %150, 0
  br i1 %168, label %169, label %179

169:                                              ; preds = %179, %166
  %170 = icmp slt i32 %1, 1
  br i1 %170, label %247, label %171

171:                                              ; preds = %169
  %172 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 256, i32 0
  %173 = bitcast i8* %172 to %"class.absl::container_internal::btree_node"**
  %174 = zext i32 %1 to i64
  %175 = and i64 %174, 1
  %176 = icmp eq i32 %1, 1
  br i1 %176, label %230, label %177

177:                                              ; preds = %171
  %178 = sub nsw i64 %174, %175
  br label %198

179:                                              ; preds = %166, %179
  %180 = phi i64 [ %196, %179 ], [ %167, %166 ]
  %181 = add nsw i64 %180, %154
  %182 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %180
  %183 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %182, align 8
  %184 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %181
  store %"class.absl::container_internal::btree_node"* %183, %"class.absl::container_internal::btree_node"** %184, align 8
  %185 = trunc i64 %181 to i8
  %186 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %183, i64 8, i32 0
  store i8 %185, i8* %186, align 1
  %187 = bitcast %"class.absl::container_internal::btree_node"* %183 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %187, align 8
  %188 = add nsw i64 %180, -1
  %189 = add nsw i64 %188, %154
  %190 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %188
  %191 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %190, align 8
  %192 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %189
  store %"class.absl::container_internal::btree_node"* %191, %"class.absl::container_internal::btree_node"** %192, align 8
  %193 = trunc i64 %189 to i8
  %194 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %191, i64 8, i32 0
  store i8 %193, i8* %194, align 1
  %195 = bitcast %"class.absl::container_internal::btree_node"* %191 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %195, align 8
  %196 = add nsw i64 %180, -2
  %197 = icmp slt i64 %180, 2
  br i1 %197, label %169, label %179

198:                                              ; preds = %198, %177
  %199 = phi i64 [ 1, %177 ], [ %227, %198 ]
  %200 = phi i64 [ %178, %177 ], [ %228, %198 ]
  %201 = add nsw i64 %199, -1
  %202 = load i8, i8* %79, align 1
  %203 = zext i8 %202 to i32
  %204 = trunc i64 %199 to i32
  %205 = sub i32 %204, %1
  %206 = add i32 %205, %203
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %173, i64 %207
  %209 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %208, align 8
  %210 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %201
  store %"class.absl::container_internal::btree_node"* %209, %"class.absl::container_internal::btree_node"** %210, align 8
  %211 = trunc i64 %201 to i8
  %212 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %209, i64 8, i32 0
  store i8 %211, i8* %212, align 1
  %213 = bitcast %"class.absl::container_internal::btree_node"* %209 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %213, align 8
  %214 = load i8, i8* %79, align 1
  %215 = zext i8 %214 to i32
  %216 = trunc i64 %199 to i32
  %217 = add i32 %216, 1
  %218 = sub i32 %217, %1
  %219 = add i32 %218, %215
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %173, i64 %220
  %222 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %221, align 8
  %223 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %199
  store %"class.absl::container_internal::btree_node"* %222, %"class.absl::container_internal::btree_node"** %223, align 8
  %224 = trunc i64 %199 to i8
  %225 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %222, i64 8, i32 0
  store i8 %224, i8* %225, align 1
  %226 = bitcast %"class.absl::container_internal::btree_node"* %222 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %226, align 8
  %227 = add nuw nsw i64 %199, 2
  %228 = add i64 %200, -2
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %198

230:                                              ; preds = %198, %171
  %231 = phi i64 [ 1, %171 ], [ %227, %198 ]
  %232 = icmp eq i64 %175, 0
  br i1 %232, label %247, label %233

233:                                              ; preds = %230
  %234 = add nsw i64 %231, -1
  %235 = load i8, i8* %79, align 1
  %236 = zext i8 %235 to i32
  %237 = trunc i64 %231 to i32
  %238 = sub i32 %237, %1
  %239 = add i32 %238, %236
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %173, i64 %240
  %242 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %241, align 8
  %243 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %152, i64 %234
  store %"class.absl::container_internal::btree_node"* %242, %"class.absl::container_internal::btree_node"** %243, align 8
  %244 = trunc i64 %234 to i8
  %245 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %242, i64 8, i32 0
  store i8 %244, i8* %245, align 1
  %246 = bitcast %"class.absl::container_internal::btree_node"* %242 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %246, align 8
  br label %247

247:                                              ; preds = %233, %230, %169, %133
  %248 = load i8, i8* %79, align 1
  %249 = trunc i32 %1 to i8
  %250 = sub i8 %248, %249
  store i8 %250, i8* %79, align 1
  %251 = load i8, i8* %6, align 1
  %252 = add i8 %251, %249
  store i8 %252, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5mergeEPSD_PSB_(%"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"*, %"class.std::__1::allocator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 8, i32 0
  %5 = getelementptr inbounds i8, i8* %4, i64 2
  %6 = load i8, i8* %5, align 1
  %7 = bitcast %"class.absl::container_internal::btree_node"* %0 to %"class.absl::container_internal::btree_node"**
  %8 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  %9 = load i8, i8* %4, align 1
  %10 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 16, i32 0
  %11 = bitcast i8* %10 to %"class.quic::QuicInterval"*
  %12 = zext i8 %9 to i64
  %13 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %11, i64 %12
  %14 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 16, i32 0
  %15 = bitcast i8* %14 to %"class.quic::QuicInterval"*
  %16 = zext i8 %6 to i64
  %17 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %15, i64 %16
  %18 = bitcast %"class.quic::QuicInterval"* %13 to i8*
  %19 = bitcast %"class.quic::QuicInterval"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %18, i64 16, i1 false) #14
  %20 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 8, i32 0
  %21 = getelementptr inbounds i8, i8* %20, i64 2
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 16, i32 0
  %25 = bitcast i8* %24 to %"class.quic::QuicInterval"*
  %26 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %25, i64 %23
  %27 = icmp eq i8 %22, 0
  br i1 %27, label %73, label %28

28:                                               ; preds = %3
  %29 = shl nuw nsw i64 %16, 32
  %30 = add nuw nsw i64 %29, 4294967296
  %31 = lshr exact i64 %30, 32
  %32 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %15, i64 %31
  %33 = shl nuw nsw i64 %23, 4
  %34 = add nsw i64 %33, -16
  %35 = lshr exact i64 %34, 4
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %28, %39
  %40 = phi %"class.quic::QuicInterval"* [ %46, %39 ], [ %32, %28 ]
  %41 = phi %"class.quic::QuicInterval"* [ %45, %39 ], [ %25, %28 ]
  %42 = phi i64 [ %47, %39 ], [ %37, %28 ]
  %43 = bitcast %"class.quic::QuicInterval"* %40 to i8*
  %44 = bitcast %"class.quic::QuicInterval"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false) #14
  %45 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %41, i64 1
  %46 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %40, i64 1
  %47 = add i64 %42, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %39, !llvm.loop !74

49:                                               ; preds = %39, %28
  %50 = phi %"class.quic::QuicInterval"* [ %32, %28 ], [ %46, %39 ]
  %51 = phi %"class.quic::QuicInterval"* [ %25, %28 ], [ %45, %39 ]
  %52 = icmp ult i64 %34, 48
  br i1 %52, label %73, label %53

53:                                               ; preds = %49, %53
  %54 = phi %"class.quic::QuicInterval"* [ %71, %53 ], [ %50, %49 ]
  %55 = phi %"class.quic::QuicInterval"* [ %70, %53 ], [ %51, %49 ]
  %56 = bitcast %"class.quic::QuicInterval"* %54 to i8*
  %57 = bitcast %"class.quic::QuicInterval"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #14
  %58 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %55, i64 1
  %59 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 1
  %60 = bitcast %"class.quic::QuicInterval"* %59 to i8*
  %61 = bitcast %"class.quic::QuicInterval"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false) #14
  %62 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %55, i64 2
  %63 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 2
  %64 = bitcast %"class.quic::QuicInterval"* %63 to i8*
  %65 = bitcast %"class.quic::QuicInterval"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #14
  %66 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %55, i64 3
  %67 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 3
  %68 = bitcast %"class.quic::QuicInterval"* %67 to i8*
  %69 = bitcast %"class.quic::QuicInterval"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #14
  %70 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %55, i64 4
  %71 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %54, i64 4
  %72 = icmp eq %"class.quic::QuicInterval"* %70, %26
  br i1 %72, label %73, label %53

73:                                               ; preds = %49, %53, %3
  %74 = getelementptr inbounds i8, i8* %4, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = load i8, i8* %21, align 1
  br label %100

79:                                               ; preds = %73
  %80 = load i8, i8* %5, align 1
  %81 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 256, i32 0
  %82 = bitcast i8* %81 to %"class.absl::container_internal::btree_node"**
  %83 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 256, i32 0
  %84 = bitcast i8* %83 to %"class.absl::container_internal::btree_node"**
  %85 = zext i8 %80 to i64
  br label %86

86:                                               ; preds = %86, %79
  %87 = phi i64 [ %96, %86 ], [ 0, %79 ]
  %88 = phi i64 [ %89, %86 ], [ %85, %79 ]
  %89 = add nuw nsw i64 %88, 1
  %90 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %82, i64 %87
  %91 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %90, align 8
  %92 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %84, i64 %89
  store %"class.absl::container_internal::btree_node"* %91, %"class.absl::container_internal::btree_node"** %92, align 8
  %93 = trunc i64 %89 to i8
  %94 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %91, i64 8, i32 0
  store i8 %93, i8* %94, align 1
  %95 = bitcast %"class.absl::container_internal::btree_node"* %91 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %0, %"class.absl::container_internal::btree_node"** %95, align 8
  %96 = add nuw nsw i64 %87, 1
  %97 = load i8, i8* %21, align 1
  %98 = zext i8 %97 to i64
  %99 = icmp ult i64 %87, %98
  br i1 %99, label %86, label %100

100:                                              ; preds = %86, %77
  %101 = phi i8 [ %78, %77 ], [ %97, %86 ]
  %102 = load i8, i8* %5, align 1
  %103 = add i8 %102, 1
  %104 = add i8 %103, %101
  store i8 %104, i8* %5, align 1
  store i8 0, i8* %21, align 1
  %105 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  %106 = load i8, i8* %4, align 1
  %107 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %105, i64 8, i32 0
  %108 = getelementptr inbounds i8, i8* %107, i64 2
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %106 to i32
  %111 = add nuw nsw i32 %110, 1
  %112 = zext i8 %109 to i32
  %113 = and i32 %111, 255
  %114 = sub nsw i32 %112, %113
  %115 = sext i32 %114 to i64
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %105, i64 16, i32 0
  %118 = bitcast i8* %117 to %"class.quic::QuicInterval"*
  %119 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %118, i64 %116
  %120 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %119, i64 %115
  %121 = icmp eq i32 %114, 0
  br i1 %121, label %169, label %122

122:                                              ; preds = %100
  %123 = zext i8 %106 to i64
  %124 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %118, i64 %123
  %125 = zext i8 %109 to i64
  %126 = shl nuw nsw i64 %125, 4
  %127 = add nsw i64 %126, -16
  %128 = shl nuw nsw i32 %113, 4
  %129 = zext i32 %128 to i64
  %130 = sub nsw i64 %127, %129
  %131 = lshr exact i64 %130, 4
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 3
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %145, label %135

135:                                              ; preds = %122, %135
  %136 = phi %"class.quic::QuicInterval"* [ %142, %135 ], [ %124, %122 ]
  %137 = phi %"class.quic::QuicInterval"* [ %141, %135 ], [ %119, %122 ]
  %138 = phi i64 [ %143, %135 ], [ %133, %122 ]
  %139 = bitcast %"class.quic::QuicInterval"* %136 to i8*
  %140 = bitcast %"class.quic::QuicInterval"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false) #14
  %141 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %137, i64 1
  %142 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %136, i64 1
  %143 = add i64 %138, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %135, !llvm.loop !75

145:                                              ; preds = %135, %122
  %146 = phi %"class.quic::QuicInterval"* [ %124, %122 ], [ %142, %135 ]
  %147 = phi %"class.quic::QuicInterval"* [ %119, %122 ], [ %141, %135 ]
  %148 = icmp ult i64 %130, 48
  br i1 %148, label %169, label %149

149:                                              ; preds = %145, %149
  %150 = phi %"class.quic::QuicInterval"* [ %167, %149 ], [ %146, %145 ]
  %151 = phi %"class.quic::QuicInterval"* [ %166, %149 ], [ %147, %145 ]
  %152 = bitcast %"class.quic::QuicInterval"* %150 to i8*
  %153 = bitcast %"class.quic::QuicInterval"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #14
  %154 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %151, i64 1
  %155 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %150, i64 1
  %156 = bitcast %"class.quic::QuicInterval"* %155 to i8*
  %157 = bitcast %"class.quic::QuicInterval"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %157, i64 16, i1 false) #14
  %158 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %151, i64 2
  %159 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %150, i64 2
  %160 = bitcast %"class.quic::QuicInterval"* %159 to i8*
  %161 = bitcast %"class.quic::QuicInterval"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 16, i1 false) #14
  %162 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %151, i64 3
  %163 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %150, i64 3
  %164 = bitcast %"class.quic::QuicInterval"* %163 to i8*
  %165 = bitcast %"class.quic::QuicInterval"* %162 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 16, i1 false) #14
  %166 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %151, i64 4
  %167 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %150, i64 4
  %168 = icmp eq %"class.quic::QuicInterval"* %166, %120
  br i1 %168, label %169, label %149

169:                                              ; preds = %145, %149, %100
  %170 = getelementptr inbounds i8, i8* %107, i64 3
  %171 = load i8, i8* %170, align 1
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %231

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %105, i64 256, i32 0
  %175 = bitcast i8* %174 to %"class.absl::container_internal::btree_node"**
  %176 = zext i8 %106 to i64
  %177 = add nuw nsw i64 %176, 1
  %178 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %177
  %179 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %178, align 8
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %179, %"class.std::__1::allocator"* %2) #14
  %180 = icmp ult i32 %111, %112
  br i1 %180, label %181, label %231

181:                                              ; preds = %173
  %182 = zext i32 %111 to i64
  %183 = zext i8 %109 to i64
  %184 = add nsw i64 %182, -1
  %185 = sub nsw i64 %183, %182
  %186 = add nsw i64 %183, -2
  %187 = sub nsw i64 %186, %184
  %188 = and i64 %185, 3
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %193, %190 ], [ %182, %181 ]
  %192 = phi i64 [ %199, %190 ], [ %188, %181 ]
  %193 = add nuw nsw i64 %191, 1
  %194 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %193
  %195 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %194, align 8
  %196 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %191
  store %"class.absl::container_internal::btree_node"* %195, %"class.absl::container_internal::btree_node"** %196, align 8
  %197 = trunc i64 %191 to i8
  %198 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %195, i64 8, i32 0
  store i8 %197, i8* %198, align 1
  %199 = add i64 %192, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %190, !llvm.loop !76

201:                                              ; preds = %190, %181
  %202 = phi i64 [ %182, %181 ], [ %193, %190 ]
  %203 = icmp ult i64 %187, 3
  br i1 %203, label %231, label %204

204:                                              ; preds = %201, %204
  %205 = phi i64 [ %224, %204 ], [ %202, %201 ]
  %206 = add nuw nsw i64 %205, 1
  %207 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %206
  %208 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %207, align 8
  %209 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %205
  store %"class.absl::container_internal::btree_node"* %208, %"class.absl::container_internal::btree_node"** %209, align 8
  %210 = trunc i64 %205 to i8
  %211 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %208, i64 8, i32 0
  store i8 %210, i8* %211, align 1
  %212 = add nuw nsw i64 %205, 2
  %213 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %212
  %214 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %213, align 8
  %215 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %206
  store %"class.absl::container_internal::btree_node"* %214, %"class.absl::container_internal::btree_node"** %215, align 8
  %216 = trunc i64 %206 to i8
  %217 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %214, i64 8, i32 0
  store i8 %216, i8* %217, align 1
  %218 = add nuw nsw i64 %205, 3
  %219 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %218
  %220 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %219, align 8
  %221 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %212
  store %"class.absl::container_internal::btree_node"* %220, %"class.absl::container_internal::btree_node"** %221, align 8
  %222 = trunc i64 %212 to i8
  %223 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %220, i64 8, i32 0
  store i8 %222, i8* %223, align 1
  %224 = add nuw nsw i64 %205, 4
  %225 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %224
  %226 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %225, align 8
  %227 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %175, i64 %218
  store %"class.absl::container_internal::btree_node"* %226, %"class.absl::container_internal::btree_node"** %227, align 8
  %228 = trunc i64 %218 to i8
  %229 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %226, i64 8, i32 0
  store i8 %228, i8* %229, align 1
  %230 = icmp eq i64 %224, %183
  br i1 %230, label %231, label %204

231:                                              ; preds = %201, %204, %169, %173
  %232 = add i8 %109, -1
  store i8 %232, i8* %108, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE13insert_uniqueIS5_JRKS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEERKT_DpOT0_(%"struct.std::__1::pair.748"* noalias sret, %"class.absl::container_internal::btree"*, %"class.quic::QuicInterval"* dereferenceable(16), %"class.quic::QuicInterval"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 32) #18
  %10 = bitcast i8* %9 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %9, i64 9
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %9, i64 10
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 11
  store i8 1, i8* %14, align 1
  %15 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 1
  %16 = bitcast %"class.absl::container_internal::btree_node"** %15 to i8**
  store i8* %9, i8** %16, align 8
  %17 = bitcast %"class.absl::container_internal::btree"* %1 to i8**
  store i8* %9, i8** %17, align 8
  br label %18

18:                                               ; preds = %8, %4
  %19 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %2, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %54, %18
  %23 = phi %"class.absl::container_internal::btree_node"** [ %19, %18 ], [ %58, %54 ]
  %24 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %23, align 8
  %25 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %24, i64 8, i32 0
  %26 = getelementptr inbounds i8, i8* %25, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %22
  %30 = zext i8 %27 to i32
  %31 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %24, i64 16, i32 0
  %32 = bitcast i8* %31 to %"class.quic::QuicInterval"*
  br label %33

33:                                               ; preds = %33, %29
  %34 = phi i32 [ 0, %29 ], [ %44, %33 ]
  %35 = phi i32 [ %30, %29 ], [ %43, %33 ]
  %36 = add nsw i32 %35, %34
  %37 = ashr i32 %36, 1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %32, i64 %38, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %40, %21
  %42 = add nsw i32 %37, 1
  %43 = select i1 %41, i32 %35, i32 %37
  %44 = select i1 %41, i32 %42, i32 %34
  %45 = icmp eq i32 %44, %43
  br i1 %45, label %46, label %33

46:                                               ; preds = %33, %22
  %47 = phi i32 [ 0, %22 ], [ %43, %33 ]
  %48 = getelementptr inbounds i8, i8* %25, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = zext i8 %27 to i32
  %53 = icmp eq i32 %47, %52
  br i1 %53, label %59, label %75

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %24, i64 256, i32 0
  %56 = bitcast i8* %55 to %"class.absl::container_internal::btree_node"**
  %57 = sext i32 %47 to i64
  %58 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %56, i64 %57
  br label %22

59:                                               ; preds = %51, %67
  %60 = phi %"class.absl::container_internal::btree_node"* [ %62, %67 ], [ %24, %51 ]
  %61 = bitcast %"class.absl::container_internal::btree_node"* %60 to %"class.absl::container_internal::btree_node"**
  %62 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %61, align 8
  %63 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %62, i64 8, i32 0
  %64 = getelementptr inbounds i8, i8* %63, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %92

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %60, i64 8, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %63, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %69, %71
  br i1 %72, label %59, label %73

73:                                               ; preds = %67
  %74 = zext i8 %69 to i32
  br label %75

75:                                               ; preds = %73, %51
  %76 = phi i32 [ %74, %73 ], [ %47, %51 ]
  %77 = phi %"class.absl::container_internal::btree_node"* [ %62, %73 ], [ %24, %51 ]
  %78 = icmp eq %"class.absl::container_internal::btree_node"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %77, i64 16, i32 0
  %81 = bitcast i8* %80 to %"class.quic::QuicInterval"*
  %82 = sext i32 %76 to i64
  %83 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %81, i64 %82, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %21, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 0
  store %"class.absl::container_internal::btree_node"* %77, %"class.absl::container_internal::btree_node"** %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %76, i32* %88, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 2, i64 0
  %90 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  %91 = bitcast i8* %89 to i32*
  store i32 -1431655766, i32* %91, align 4
  store i8 0, i8* %90, align 8
  br label %99

92:                                               ; preds = %59, %79, %75
  %93 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJRKS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESM_DpOT_(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %24, i32 %47, %"class.quic::QuicInterval"* dereferenceable(16) %3)
  %94 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %93, 0
  %95 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %93, 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 0
  store %"class.absl::container_internal::btree_node"* %94, %"class.absl::container_internal::btree_node"** %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %95, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  store i8 1, i8* %98, align 8
  br label %99

99:                                               ; preds = %86, %92
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJRKS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESM_DpOT_(%"class.absl::container_internal::btree"*, %"class.absl::container_internal::btree_node"*, i32, %"class.quic::QuicInterval"* dereferenceable(16)) local_unnamed_addr #16 comdat align 2 {
  %5 = alloca { %"class.absl::container_internal::btree_node"*, i32 }, align 8
  %6 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %5 to %"struct.absl::container_internal::btree_iterator.746"*
  %7 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %5, i64 0, i32 0
  store %"class.absl::container_internal::btree_node"* %1, %"class.absl::container_internal::btree_node"** %7, align 8
  %8 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %5, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 8, i32 0
  %10 = getelementptr inbounds i8, i8* %9, i64 3
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 256, i32 0
  %15 = bitcast i8* %14 to %"class.absl::container_internal::btree_node"**
  %16 = sext i32 %2 to i64
  %17 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, i64 %16
  %18 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %17, align 8
  store %"class.absl::container_internal::btree_node"* %18, %"class.absl::container_internal::btree_node"** %7, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %18, i64 8, i32 0
  %20 = getelementptr inbounds i8, i8* %19, i64 3
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds i8, i8* %19, i64 2
  %24 = load i8, i8* %23, align 1
  br i1 %22, label %25, label %39

25:                                               ; preds = %13, %25
  %26 = phi i8 [ %38, %25 ], [ %24, %13 ]
  %27 = phi %"class.absl::container_internal::btree_node"* [ %32, %25 ], [ %18, %13 ]
  %28 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %27, i64 256, i32 0
  %29 = bitcast i8* %28 to %"class.absl::container_internal::btree_node"**
  %30 = zext i8 %26 to i64
  %31 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %29, i64 %30
  %32 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %31, align 8
  store %"class.absl::container_internal::btree_node"* %32, %"class.absl::container_internal::btree_node"** %7, align 8
  %33 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %32, i64 8, i32 0
  %34 = getelementptr inbounds i8, i8* %33, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds i8, i8* %33, i64 2
  %38 = load i8, i8* %37, align 1
  br i1 %36, label %25, label %39

39:                                               ; preds = %25, %13
  %40 = phi %"class.absl::container_internal::btree_node"* [ %18, %13 ], [ %32, %25 ]
  %41 = phi i8 [ %24, %13 ], [ %38, %25 ]
  %42 = zext i8 %41 to i32
  store i32 %42, i32* %8, align 8
  %43 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %40, i64 8, i32 0
  %44 = getelementptr inbounds i8, i8* %43, i64 3
  %45 = load i8, i8* %44, align 1
  br label %46

46:                                               ; preds = %4, %39
  %47 = phi i8 [ %11, %4 ], [ %45, %39 ]
  %48 = phi %"class.absl::container_internal::btree_node"* [ %1, %4 ], [ %40, %39 ]
  %49 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %48, i64 8, i32 0
  %50 = icmp eq i8 %47, 0
  %51 = select i1 %50, i8 15, i8 %47
  %52 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  %53 = getelementptr inbounds i8, i8* %49, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %51 to i32
  %56 = icmp eq i8 %54, %51
  br i1 %56, label %57, label %138

57:                                               ; preds = %46
  %58 = icmp ult i8 %51, 15
  br i1 %58, label %59, label %136

59:                                               ; preds = %57
  %60 = shl nuw nsw i32 %55, 1
  %61 = icmp ult i32 %60, 15
  %62 = select i1 %61, i32 %60, i32 15
  %63 = shl nuw nsw i32 %62, 4
  %64 = add nuw nsw i32 %63, 23
  %65 = and i32 %64, 496
  %66 = zext i32 %65 to i64
  %67 = tail call i8* @_Znwm(i64 %66) #18
  %68 = bitcast i8* %67 to i8**
  store i8* %67, i8** %68, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 8
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds i8, i8* %67, i64 9
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds i8, i8* %67, i64 10
  store i8 0, i8* %71, align 1
  %72 = trunc i32 %62 to i8
  %73 = getelementptr inbounds i8, i8* %67, i64 11
  store i8 %72, i8* %73, align 1
  %74 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %5 to i8**
  store i8* %67, i8** %74, align 8
  %75 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %75, align 8
  %77 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %76, i64 8, i32 0
  %78 = getelementptr inbounds i8, i8* %77, i64 2
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %76, i64 16, i32 0
  %82 = bitcast i8* %81 to %"class.quic::QuicInterval"*
  %83 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %82, i64 %80
  %84 = icmp eq i8 %79, 0
  %85 = bitcast i8* %67 to %"class.absl::container_internal::btree_node"*
  br i1 %84, label %131, label %86

86:                                               ; preds = %59
  %87 = getelementptr inbounds i8, i8* %67, i64 16
  %88 = bitcast i8* %87 to %"class.quic::QuicInterval"*
  %89 = shl nuw nsw i64 %80, 4
  %90 = add nsw i64 %89, -16
  %91 = lshr exact i64 %90, 4
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %86, %95
  %96 = phi %"class.quic::QuicInterval"* [ %102, %95 ], [ %88, %86 ]
  %97 = phi %"class.quic::QuicInterval"* [ %101, %95 ], [ %82, %86 ]
  %98 = phi i64 [ %103, %95 ], [ %93, %86 ]
  %99 = bitcast %"class.quic::QuicInterval"* %96 to i8*
  %100 = bitcast %"class.quic::QuicInterval"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #14
  %101 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %97, i64 1
  %102 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %96, i64 1
  %103 = add i64 %98, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %95, !llvm.loop !77

105:                                              ; preds = %95, %86
  %106 = phi %"class.quic::QuicInterval"* [ %88, %86 ], [ %102, %95 ]
  %107 = phi %"class.quic::QuicInterval"* [ %82, %86 ], [ %101, %95 ]
  %108 = icmp ult i64 %90, 48
  br i1 %108, label %129, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"class.quic::QuicInterval"* [ %127, %109 ], [ %106, %105 ]
  %111 = phi %"class.quic::QuicInterval"* [ %126, %109 ], [ %107, %105 ]
  %112 = bitcast %"class.quic::QuicInterval"* %110 to i8*
  %113 = bitcast %"class.quic::QuicInterval"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 16, i1 false) #14
  %114 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 1
  %115 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %110, i64 1
  %116 = bitcast %"class.quic::QuicInterval"* %115 to i8*
  %117 = bitcast %"class.quic::QuicInterval"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 16, i1 false) #14
  %118 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 2
  %119 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %110, i64 2
  %120 = bitcast %"class.quic::QuicInterval"* %119 to i8*
  %121 = bitcast %"class.quic::QuicInterval"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 16, i1 false) #14
  %122 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 3
  %123 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %110, i64 3
  %124 = bitcast %"class.quic::QuicInterval"* %123 to i8*
  %125 = bitcast %"class.quic::QuicInterval"* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #14
  %126 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 4
  %127 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %110, i64 4
  %128 = icmp eq %"class.quic::QuicInterval"* %126, %83
  br i1 %128, label %129, label %109

129:                                              ; preds = %109, %105
  %130 = load i8, i8* %78, align 1
  br label %131

131:                                              ; preds = %129, %59
  %132 = phi i8 [ %130, %129 ], [ 0, %59 ]
  store i8 %132, i8* %71, align 1
  store i8 0, i8* %78, align 1
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %76, %"class.std::__1::allocator"* %52)
  %133 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 1
  %134 = bitcast %"class.absl::container_internal::btree_node"** %133 to i8**
  store i8* %67, i8** %134, align 8
  %135 = bitcast %"class.absl::container_internal::btree"* %0 to i8**
  store i8* %67, i8** %135, align 8
  br label %138

136:                                              ; preds = %57
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18rebalance_or_splitEPNS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %0, %"struct.absl::container_internal::btree_iterator.746"* nonnull %6)
  %137 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  br label %138

138:                                              ; preds = %131, %136, %46
  %139 = phi %"class.absl::container_internal::btree_node"* [ %85, %131 ], [ %137, %136 ], [ %48, %46 ]
  %140 = load i32, i32* %8, align 8
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %139, i64 8, i32 0
  %143 = getelementptr inbounds i8, i8* %142, i64 2
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = icmp sgt i64 %145, %141
  br i1 %146, label %147, label %204

147:                                              ; preds = %138
  %148 = sub nsw i64 %145, %141
  %149 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %139, i64 16, i32 0
  %150 = bitcast i8* %149 to %"class.quic::QuicInterval"*
  %151 = shl nuw nsw i64 %145, 32
  %152 = add nsw i64 %151, -4294967296
  %153 = ashr exact i64 %152, 32
  %154 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %150, i64 %153
  %155 = sub nsw i64 0, %148
  %156 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %154, i64 %155
  %157 = icmp eq i64 %148, 0
  br i1 %157, label %204, label %158

158:                                              ; preds = %147
  %159 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %150, i64 %145
  %160 = shl nuw nsw i64 %145, 4
  %161 = add nsw i64 %160, -16
  %162 = shl nsw i64 %141, 4
  %163 = sub nsw i64 %161, %162
  %164 = lshr exact i64 %163, 4
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 3
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %158, %168
  %169 = phi %"class.quic::QuicInterval"* [ %175, %168 ], [ %159, %158 ]
  %170 = phi %"class.quic::QuicInterval"* [ %174, %168 ], [ %154, %158 ]
  %171 = phi i64 [ %176, %168 ], [ %166, %158 ]
  %172 = bitcast %"class.quic::QuicInterval"* %169 to i8*
  %173 = bitcast %"class.quic::QuicInterval"* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 16, i1 false) #14
  %174 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %170, i64 -1
  %175 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %169, i64 -1
  %176 = add i64 %171, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %168, !llvm.loop !78

178:                                              ; preds = %168, %158
  %179 = phi %"class.quic::QuicInterval"* [ %159, %158 ], [ %175, %168 ]
  %180 = phi %"class.quic::QuicInterval"* [ %154, %158 ], [ %174, %168 ]
  %181 = icmp ult i64 %163, 48
  br i1 %181, label %202, label %182

182:                                              ; preds = %178, %182
  %183 = phi %"class.quic::QuicInterval"* [ %200, %182 ], [ %179, %178 ]
  %184 = phi %"class.quic::QuicInterval"* [ %199, %182 ], [ %180, %178 ]
  %185 = bitcast %"class.quic::QuicInterval"* %183 to i8*
  %186 = bitcast %"class.quic::QuicInterval"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 16, i1 false) #14
  %187 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %184, i64 -1
  %188 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %183, i64 -1
  %189 = bitcast %"class.quic::QuicInterval"* %188 to i8*
  %190 = bitcast %"class.quic::QuicInterval"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 16, i1 false) #14
  %191 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %184, i64 -2
  %192 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %183, i64 -2
  %193 = bitcast %"class.quic::QuicInterval"* %192 to i8*
  %194 = bitcast %"class.quic::QuicInterval"* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 16, i1 false) #14
  %195 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %184, i64 -3
  %196 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %183, i64 -3
  %197 = bitcast %"class.quic::QuicInterval"* %196 to i8*
  %198 = bitcast %"class.quic::QuicInterval"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 16, i1 false) #14
  %199 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %184, i64 -4
  %200 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %183, i64 -4
  %201 = icmp eq %"class.quic::QuicInterval"* %199, %156
  br i1 %201, label %202, label %182

202:                                              ; preds = %182, %178
  %203 = load i8, i8* %143, align 1
  br label %204

204:                                              ; preds = %138, %202, %147
  %205 = phi i8 [ %203, %202 ], [ %144, %147 ], [ %144, %138 ]
  %206 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %139, i64 16, i32 0
  %207 = bitcast i8* %206 to %"class.quic::QuicInterval"*
  %208 = and i64 %141, 255
  %209 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %207, i64 %208
  %210 = bitcast %"class.quic::QuicInterval"* %209 to i8*
  %211 = bitcast %"class.quic::QuicInterval"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %211, i64 16, i1 false) #14
  %212 = add i8 %205, 1
  store i8 %212, i8* %143, align 1
  %213 = getelementptr inbounds i8, i8* %142, i64 3
  %214 = load i8, i8* %213, align 1
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %270

216:                                              ; preds = %204
  %217 = zext i8 %212 to i64
  %218 = add nsw i64 %141, 1
  %219 = icmp slt i64 %218, %217
  br i1 %219, label %220, label %270

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %139, i64 256, i32 0
  %222 = bitcast i8* %221 to %"class.absl::container_internal::btree_node"**
  %223 = xor i64 %141, 3
  %224 = add nsw i64 %223, %217
  %225 = add nsw i64 %217, -2
  %226 = sub nsw i64 %225, %141
  %227 = and i64 %224, 3
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %240, label %229

229:                                              ; preds = %220, %229
  %230 = phi i64 [ %232, %229 ], [ %217, %220 ]
  %231 = phi i64 [ %238, %229 ], [ %227, %220 ]
  %232 = add nsw i64 %230, -1
  %233 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %232
  %234 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %233, align 8
  %235 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %230
  store %"class.absl::container_internal::btree_node"* %234, %"class.absl::container_internal::btree_node"** %235, align 8
  %236 = trunc i64 %230 to i8
  %237 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %234, i64 8, i32 0
  store i8 %236, i8* %237, align 1
  %238 = add i64 %231, -1
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %229, !llvm.loop !79

240:                                              ; preds = %229, %220
  %241 = phi i64 [ %217, %220 ], [ %232, %229 ]
  %242 = icmp ult i64 %226, 3
  br i1 %242, label %270, label %243

243:                                              ; preds = %240, %243
  %244 = phi i64 [ %263, %243 ], [ %241, %240 ]
  %245 = add nsw i64 %244, -1
  %246 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %245
  %247 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %246, align 8
  %248 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %244
  store %"class.absl::container_internal::btree_node"* %247, %"class.absl::container_internal::btree_node"** %248, align 8
  %249 = trunc i64 %244 to i8
  %250 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %247, i64 8, i32 0
  store i8 %249, i8* %250, align 1
  %251 = add nsw i64 %244, -2
  %252 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %251
  %253 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %252, align 8
  %254 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %245
  store %"class.absl::container_internal::btree_node"* %253, %"class.absl::container_internal::btree_node"** %254, align 8
  %255 = trunc i64 %245 to i8
  %256 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %253, i64 8, i32 0
  store i8 %255, i8* %256, align 1
  %257 = add nsw i64 %244, -3
  %258 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %257
  %259 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %258, align 8
  %260 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %251
  store %"class.absl::container_internal::btree_node"* %259, %"class.absl::container_internal::btree_node"** %260, align 8
  %261 = trunc i64 %251 to i8
  %262 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %259, i64 8, i32 0
  store i8 %261, i8* %262, align 1
  %263 = add nsw i64 %244, -4
  %264 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %263
  %265 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %264, align 8
  %266 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %257
  store %"class.absl::container_internal::btree_node"* %265, %"class.absl::container_internal::btree_node"** %266, align 8
  %267 = trunc i64 %257 to i8
  %268 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %265, i64 8, i32 0
  store i8 %267, i8* %268, align 1
  %269 = icmp slt i64 %218, %263
  br i1 %269, label %243, label %270

270:                                              ; preds = %240, %243, %204, %216
  %271 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 2
  %272 = load i64, i64* %271, align 8
  %273 = add nsw i64 %272, 1
  store i64 %273, i64* %271, align 8
  %274 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  %275 = load i32, i32* %8, align 8
  %276 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } undef, %"class.absl::container_internal::btree_node"* %274, 0
  %277 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } %276, i32 %275, 1
  ret { %"class.absl::container_internal::btree_node"*, i32 } %277
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18rebalance_or_splitEPNS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"*, %"struct.absl::container_internal::btree_iterator.746"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.absl::container_internal::btree_iterator.746", align 8
  %4 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.746", %"struct.absl::container_internal::btree_iterator.746"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.746", %"struct.absl::container_internal::btree_iterator.746"* %1, i64 0, i32 1
  %6 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %4, align 8
  %7 = bitcast %"class.absl::container_internal::btree_node"* %6 to %"class.absl::container_internal::btree_node"**
  %8 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  %9 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %9, align 8
  %11 = icmp eq %"class.absl::container_internal::btree_node"* %6, %10
  br i1 %11, label %106, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %6, i64 8, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %50, label %16

16:                                               ; preds = %12
  %17 = zext i8 %14 to i64
  %18 = add nsw i64 %17, -1
  %19 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 256, i32 0
  %20 = bitcast i8* %19 to %"class.absl::container_internal::btree_node"**
  %21 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %20, i64 %18
  %22 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %21, align 8
  %23 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %22, i64 8, i32 0
  %24 = getelementptr inbounds i8, i8* %23, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp ult i8 %25, 15
  br i1 %26, label %27, label %50

27:                                               ; preds = %16
  %28 = zext i8 %25 to i32
  %29 = sub nuw nsw i32 15, %28
  %30 = load i32, i32* %5, align 4
  %31 = icmp slt i32 %30, 15
  %32 = zext i1 %31 to i32
  %33 = lshr i32 %29, %32
  %34 = icmp sgt i32 %33, 1
  %35 = select i1 %34, i32 %33, i32 1
  %36 = icmp sge i32 %30, %35
  %37 = add nuw nsw i32 %35, %28
  %38 = icmp ult i32 %37, 15
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %50

40:                                               ; preds = %27
  %41 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE23rebalance_right_to_leftEiPSD_PSB_(%"class.absl::container_internal::btree_node"* %22, i32 %35, %"class.absl::container_internal::btree_node"* %6, %"class.std::__1::allocator"* %41)
  %42 = load i32, i32* %5, align 4
  %43 = sub nsw i32 %42, %35
  store i32 %43, i32* %5, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %160

45:                                               ; preds = %40
  %46 = load i8, i8* %24, align 1
  %47 = zext i8 %46 to i32
  %48 = add nsw i32 %43, 1
  %49 = add nsw i32 %48, %47
  store i32 %49, i32* %5, align 4
  store %"class.absl::container_internal::btree_node"* %22, %"class.absl::container_internal::btree_node"** %4, align 8
  br label %160

50:                                               ; preds = %12, %27, %16
  %51 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 8, i32 0
  %52 = getelementptr inbounds i8, i8* %51, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp ult i8 %14, %53
  br i1 %54, label %55, label %95

55:                                               ; preds = %50
  %56 = zext i8 %14 to i64
  %57 = add nuw nsw i64 %56, 1
  %58 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 256, i32 0
  %59 = bitcast i8* %58 to %"class.absl::container_internal::btree_node"**
  %60 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %59, i64 %57
  %61 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %60, align 8
  %62 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %61, i64 8, i32 0
  %63 = getelementptr inbounds i8, i8* %62, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp ult i8 %64, 15
  br i1 %65, label %66, label %95

66:                                               ; preds = %55
  %67 = zext i8 %64 to i32
  %68 = sub nuw nsw i32 15, %67
  %69 = load i32, i32* %5, align 4
  %70 = icmp sgt i32 %69, 0
  %71 = select i1 %70, i32 2, i32 1
  %72 = sdiv i32 %68, %71
  %73 = icmp sgt i32 %72, 1
  %74 = select i1 %73, i32 %72, i32 1
  %75 = getelementptr inbounds i8, i8* %13, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = sub nsw i32 %77, %74
  %79 = icmp sle i32 %69, %78
  %80 = add nuw nsw i32 %74, %67
  %81 = icmp ult i32 %80, 15
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %95

83:                                               ; preds = %66
  %84 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE23rebalance_left_to_rightEiPSD_PSB_(%"class.absl::container_internal::btree_node"* %6, i32 %74, %"class.absl::container_internal::btree_node"* %61, %"class.std::__1::allocator"* %84)
  %85 = load i32, i32* %5, align 4
  %86 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %4, align 8
  %87 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %86, i64 8, i32 0
  %88 = getelementptr inbounds i8, i8* %87, i64 2
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp sgt i32 %85, %90
  br i1 %91, label %92, label %160

92:                                               ; preds = %83
  %93 = xor i32 %90, -1
  %94 = add i32 %85, %93
  store i32 %94, i32* %5, align 4
  store %"class.absl::container_internal::btree_node"* %61, %"class.absl::container_internal::btree_node"** %4, align 8
  br label %160

95:                                               ; preds = %55, %66, %50
  %96 = icmp eq i8 %53, 15
  br i1 %96, label %97, label %117

97:                                               ; preds = %95
  %98 = bitcast %"struct.absl::container_internal::btree_iterator.746"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #14
  %99 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.746", %"struct.absl::container_internal::btree_iterator.746"* %3, i64 0, i32 1
  %100 = bitcast %"class.absl::container_internal::btree_node"* %6 to i64*
  %101 = bitcast %"struct.absl::container_internal::btree_iterator.746"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false)
  %102 = load i64, i64* %100, align 8
  %103 = load i8, i8* %13, align 1
  %104 = zext i8 %103 to i32
  %105 = bitcast %"struct.absl::container_internal::btree_iterator.746"* %3 to i64*
  store i64 %102, i64* %105, align 8
  store i32 %104, i32* %99, align 8
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18rebalance_or_splitEPNS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %0, %"struct.absl::container_internal::btree_iterator.746"* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #14
  br label %117

106:                                              ; preds = %2
  %107 = tail call i8* @_Znwm(i64 384) #18
  %108 = bitcast i8* %107 to %"class.absl::container_internal::btree_node"*
  %109 = bitcast i8* %107 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %8, %"class.absl::container_internal::btree_node"** %109, align 8
  %110 = getelementptr inbounds i8, i8* %107, i64 8
  %111 = bitcast i8* %110 to i32*
  store i32 0, i32* %111, align 1
  %112 = getelementptr inbounds i8, i8* %107, i64 256
  %113 = bitcast i8* %112 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %6, %"class.absl::container_internal::btree_node"** %113, align 8
  %114 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %6, i64 8, i32 0
  store i8 0, i8* %114, align 1
  %115 = bitcast %"class.absl::container_internal::btree_node"* %6 to i8**
  store i8* %107, i8** %115, align 8
  %116 = bitcast %"class.absl::container_internal::btree"* %0 to i8**
  store i8* %107, i8** %116, align 8
  br label %117

117:                                              ; preds = %95, %97, %106
  %118 = phi %"class.absl::container_internal::btree_node"* [ %8, %97 ], [ %8, %95 ], [ %108, %106 ]
  %119 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %4, align 8
  %120 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %119, i64 8, i32 0
  %121 = getelementptr inbounds i8, i8* %120, i64 3
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %117
  %125 = call i8* @_Znwm(i64 256) #18
  %126 = bitcast i8* %125 to %"class.absl::container_internal::btree_node"*
  %127 = bitcast i8* %125 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %118, %"class.absl::container_internal::btree_node"** %127, align 8
  %128 = getelementptr inbounds i8, i8* %125, i64 8
  store i8 0, i8* %128, align 1
  %129 = getelementptr inbounds i8, i8* %125, i64 9
  store i8 0, i8* %129, align 1
  %130 = getelementptr inbounds i8, i8* %125, i64 10
  store i8 0, i8* %130, align 1
  %131 = getelementptr inbounds i8, i8* %125, i64 11
  store i8 15, i8* %131, align 1
  %132 = load i32, i32* %5, align 4
  %133 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5splitEiPSD_PSB_(%"class.absl::container_internal::btree_node"* %119, i32 %132, %"class.absl::container_internal::btree_node"* nonnull %126, %"class.std::__1::allocator"* %133)
  %134 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 1
  %135 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %134, align 8
  %136 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %4, align 8
  %137 = icmp eq %"class.absl::container_internal::btree_node"* %135, %136
  br i1 %137, label %138, label %148

138:                                              ; preds = %124
  %139 = bitcast %"class.absl::container_internal::btree_node"** %134 to i8**
  store i8* %125, i8** %139, align 8
  br label %148

140:                                              ; preds = %117
  %141 = call i8* @_Znwm(i64 384) #18
  %142 = bitcast i8* %141 to %"class.absl::container_internal::btree_node"*
  %143 = bitcast i8* %141 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %118, %"class.absl::container_internal::btree_node"** %143, align 8
  %144 = getelementptr inbounds i8, i8* %141, i64 8
  %145 = bitcast i8* %144 to i32*
  store i32 0, i32* %145, align 1
  %146 = load i32, i32* %5, align 4
  %147 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5splitEiPSD_PSB_(%"class.absl::container_internal::btree_node"* %119, i32 %146, %"class.absl::container_internal::btree_node"* nonnull %142, %"class.std::__1::allocator"* %147)
  br label %148

148:                                              ; preds = %124, %138, %140
  %149 = phi %"class.absl::container_internal::btree_node"* [ %126, %138 ], [ %126, %124 ], [ %142, %140 ]
  %150 = load i32, i32* %5, align 4
  %151 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %4, align 8
  %152 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %151, i64 8, i32 0
  %153 = getelementptr inbounds i8, i8* %152, i64 2
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = icmp sgt i32 %150, %155
  br i1 %156, label %157, label %160

157:                                              ; preds = %148
  %158 = xor i32 %155, -1
  %159 = add i32 %150, %158
  store i32 %159, i32* %5, align 4
  store %"class.absl::container_internal::btree_node"* %149, %"class.absl::container_internal::btree_node"** %4, align 8
  br label %160

160:                                              ; preds = %83, %92, %40, %45, %148, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE5splitEiPSD_PSB_(%"class.absl::container_internal::btree_node"*, i32, %"class.absl::container_internal::btree_node"*, %"class.std::__1::allocator"*) local_unnamed_addr #0 comdat align 2 {
  switch i32 %1, label %10 [
    i32 0, label %5
    i32 15, label %15
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 8, i32 0
  %7 = getelementptr inbounds i8, i8* %6, i64 2
  %8 = load i8, i8* %7, align 1
  %9 = add i8 %8, -1
  br label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 8, i32 0
  %12 = getelementptr inbounds i8, i8* %11, i64 2
  %13 = load i8, i8* %12, align 1
  %14 = lshr i8 %13, 1
  br label %15

15:                                               ; preds = %4, %10, %5
  %16 = phi i8 [ %14, %10 ], [ %9, %5 ], [ 0, %4 ]
  %17 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %18 = getelementptr inbounds i8, i8* %17, i64 2
  store i8 %16, i8* %18, align 1
  %19 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 8, i32 0
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %23 = getelementptr inbounds i8, i8* %22, i64 2
  %24 = sub i8 %21, %16
  store i8 %24, i8* %20, align 1
  %25 = load i8, i8* %23, align 1
  %26 = zext i8 %25 to i64
  %27 = zext i8 %24 to i64
  %28 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 16, i32 0
  %29 = bitcast i8* %28 to %"class.quic::QuicInterval"*
  %30 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %29, i64 %27
  %31 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %30, i64 %26
  %32 = icmp eq i8 %25, 0
  br i1 %32, label %78, label %33

33:                                               ; preds = %15
  %34 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 16, i32 0
  %35 = bitcast i8* %34 to %"class.quic::QuicInterval"*
  %36 = shl nuw nsw i64 %26, 4
  %37 = add nsw i64 %36, -16
  %38 = lshr exact i64 %37, 4
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 3
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %33, %42
  %43 = phi %"class.quic::QuicInterval"* [ %49, %42 ], [ %35, %33 ]
  %44 = phi %"class.quic::QuicInterval"* [ %48, %42 ], [ %30, %33 ]
  %45 = phi i64 [ %50, %42 ], [ %40, %33 ]
  %46 = bitcast %"class.quic::QuicInterval"* %43 to i8*
  %47 = bitcast %"class.quic::QuicInterval"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #14
  %48 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %44, i64 1
  %49 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %43, i64 1
  %50 = add i64 %45, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %42, !llvm.loop !80

52:                                               ; preds = %42, %33
  %53 = phi %"class.quic::QuicInterval"* [ %35, %33 ], [ %49, %42 ]
  %54 = phi %"class.quic::QuicInterval"* [ %30, %33 ], [ %48, %42 ]
  %55 = icmp ult i64 %37, 48
  br i1 %55, label %76, label %56

56:                                               ; preds = %52, %56
  %57 = phi %"class.quic::QuicInterval"* [ %74, %56 ], [ %53, %52 ]
  %58 = phi %"class.quic::QuicInterval"* [ %73, %56 ], [ %54, %52 ]
  %59 = bitcast %"class.quic::QuicInterval"* %57 to i8*
  %60 = bitcast %"class.quic::QuicInterval"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #14
  %61 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %58, i64 1
  %62 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %57, i64 1
  %63 = bitcast %"class.quic::QuicInterval"* %62 to i8*
  %64 = bitcast %"class.quic::QuicInterval"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false) #14
  %65 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %58, i64 2
  %66 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %57, i64 2
  %67 = bitcast %"class.quic::QuicInterval"* %66 to i8*
  %68 = bitcast %"class.quic::QuicInterval"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false) #14
  %69 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %58, i64 3
  %70 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %57, i64 3
  %71 = bitcast %"class.quic::QuicInterval"* %70 to i8*
  %72 = bitcast %"class.quic::QuicInterval"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false) #14
  %73 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %58, i64 4
  %74 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %57, i64 4
  %75 = icmp eq %"class.quic::QuicInterval"* %73, %31
  br i1 %75, label %76, label %56

76:                                               ; preds = %56, %52
  %77 = load i8, i8* %20, align 1
  br label %78

78:                                               ; preds = %76, %15
  %79 = phi i8 [ %77, %76 ], [ %24, %15 ]
  %80 = add i8 %79, -1
  store i8 %80, i8* %20, align 1
  %81 = bitcast %"class.absl::container_internal::btree_node"* %0 to %"class.absl::container_internal::btree_node"**
  %82 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %81, align 8
  %83 = load i8, i8* %19, align 1
  %84 = zext i8 %83 to i64
  %85 = zext i8 %80 to i64
  %86 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %29, i64 %85
  %87 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %82, i64 8, i32 0
  %88 = getelementptr inbounds i8, i8* %87, i64 2
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = icmp ugt i8 %89, %83
  br i1 %91, label %92, label %149

92:                                               ; preds = %78
  %93 = sub nsw i64 %90, %84
  %94 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %82, i64 16, i32 0
  %95 = bitcast i8* %94 to %"class.quic::QuicInterval"*
  %96 = shl nuw nsw i64 %90, 32
  %97 = add nsw i64 %96, -4294967296
  %98 = ashr exact i64 %97, 32
  %99 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %95, i64 %98
  %100 = sub nsw i64 0, %93
  %101 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %99, i64 %100
  %102 = icmp eq i64 %93, 0
  br i1 %102, label %149, label %103

103:                                              ; preds = %92
  %104 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %95, i64 %90
  %105 = shl nuw nsw i64 %90, 4
  %106 = add nsw i64 %105, -16
  %107 = shl nuw nsw i64 %84, 4
  %108 = sub nsw i64 %106, %107
  %109 = lshr exact i64 %108, 4
  %110 = add nuw nsw i64 %109, 1
  %111 = and i64 %110, 3
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %103, %113
  %114 = phi %"class.quic::QuicInterval"* [ %120, %113 ], [ %104, %103 ]
  %115 = phi %"class.quic::QuicInterval"* [ %119, %113 ], [ %99, %103 ]
  %116 = phi i64 [ %121, %113 ], [ %111, %103 ]
  %117 = bitcast %"class.quic::QuicInterval"* %114 to i8*
  %118 = bitcast %"class.quic::QuicInterval"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #14
  %119 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %115, i64 -1
  %120 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %114, i64 -1
  %121 = add i64 %116, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %113, !llvm.loop !81

123:                                              ; preds = %113, %103
  %124 = phi %"class.quic::QuicInterval"* [ %104, %103 ], [ %120, %113 ]
  %125 = phi %"class.quic::QuicInterval"* [ %99, %103 ], [ %119, %113 ]
  %126 = icmp ult i64 %108, 48
  br i1 %126, label %147, label %127

127:                                              ; preds = %123, %127
  %128 = phi %"class.quic::QuicInterval"* [ %145, %127 ], [ %124, %123 ]
  %129 = phi %"class.quic::QuicInterval"* [ %144, %127 ], [ %125, %123 ]
  %130 = bitcast %"class.quic::QuicInterval"* %128 to i8*
  %131 = bitcast %"class.quic::QuicInterval"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 16, i1 false) #14
  %132 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %129, i64 -1
  %133 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %128, i64 -1
  %134 = bitcast %"class.quic::QuicInterval"* %133 to i8*
  %135 = bitcast %"class.quic::QuicInterval"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 16, i1 false) #14
  %136 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %129, i64 -2
  %137 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %128, i64 -2
  %138 = bitcast %"class.quic::QuicInterval"* %137 to i8*
  %139 = bitcast %"class.quic::QuicInterval"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 16, i1 false) #14
  %140 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %129, i64 -3
  %141 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %128, i64 -3
  %142 = bitcast %"class.quic::QuicInterval"* %141 to i8*
  %143 = bitcast %"class.quic::QuicInterval"* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 16, i1 false) #14
  %144 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %129, i64 -4
  %145 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %128, i64 -4
  %146 = icmp eq %"class.quic::QuicInterval"* %144, %101
  br i1 %146, label %147, label %127

147:                                              ; preds = %127, %123
  %148 = load i8, i8* %88, align 1
  br label %149

149:                                              ; preds = %78, %147, %92
  %150 = phi i8 [ %148, %147 ], [ %89, %92 ], [ %89, %78 ]
  %151 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %82, i64 16, i32 0
  %152 = bitcast i8* %151 to %"class.quic::QuicInterval"*
  %153 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %152, i64 %84
  %154 = bitcast %"class.quic::QuicInterval"* %86 to i8*
  %155 = bitcast %"class.quic::QuicInterval"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %154, i64 16, i1 false) #14
  %156 = add i8 %150, 1
  store i8 %156, i8* %88, align 1
  %157 = getelementptr inbounds i8, i8* %87, i64 3
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %214

160:                                              ; preds = %149
  %161 = zext i8 %156 to i64
  %162 = add nuw nsw i64 %84, 1
  %163 = icmp ult i64 %162, %161
  br i1 %163, label %164, label %214

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %82, i64 256, i32 0
  %166 = bitcast i8* %165 to %"class.absl::container_internal::btree_node"**
  %167 = xor i64 %84, 3
  %168 = add nuw nsw i64 %167, %161
  %169 = add nsw i64 %161, -2
  %170 = sub nsw i64 %169, %84
  %171 = and i64 %168, 3
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %164, %173
  %174 = phi i64 [ %176, %173 ], [ %161, %164 ]
  %175 = phi i64 [ %182, %173 ], [ %171, %164 ]
  %176 = add nsw i64 %174, -1
  %177 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %176
  %178 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %177, align 8
  %179 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %174
  store %"class.absl::container_internal::btree_node"* %178, %"class.absl::container_internal::btree_node"** %179, align 8
  %180 = trunc i64 %174 to i8
  %181 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %178, i64 8, i32 0
  store i8 %180, i8* %181, align 1
  %182 = add i64 %175, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !82

184:                                              ; preds = %173, %164
  %185 = phi i64 [ %161, %164 ], [ %176, %173 ]
  %186 = icmp ult i64 %170, 3
  br i1 %186, label %214, label %187

187:                                              ; preds = %184, %187
  %188 = phi i64 [ %207, %187 ], [ %185, %184 ]
  %189 = add nsw i64 %188, -1
  %190 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %189
  %191 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %190, align 8
  %192 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %188
  store %"class.absl::container_internal::btree_node"* %191, %"class.absl::container_internal::btree_node"** %192, align 8
  %193 = trunc i64 %188 to i8
  %194 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %191, i64 8, i32 0
  store i8 %193, i8* %194, align 1
  %195 = add nsw i64 %188, -2
  %196 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %195
  %197 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %196, align 8
  %198 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %189
  store %"class.absl::container_internal::btree_node"* %197, %"class.absl::container_internal::btree_node"** %198, align 8
  %199 = trunc i64 %189 to i8
  %200 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %197, i64 8, i32 0
  store i8 %199, i8* %200, align 1
  %201 = add nsw i64 %188, -3
  %202 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %201
  %203 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %202, align 8
  %204 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %195
  store %"class.absl::container_internal::btree_node"* %203, %"class.absl::container_internal::btree_node"** %204, align 8
  %205 = trunc i64 %195 to i8
  %206 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %203, i64 8, i32 0
  store i8 %205, i8* %206, align 1
  %207 = add nsw i64 %188, -4
  %208 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %207
  %209 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %208, align 8
  %210 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %166, i64 %201
  store %"class.absl::container_internal::btree_node"* %209, %"class.absl::container_internal::btree_node"** %210, align 8
  %211 = trunc i64 %201 to i8
  %212 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %209, i64 8, i32 0
  store i8 %211, i8* %212, align 1
  %213 = icmp slt i64 %162, %207
  br i1 %213, label %187, label %214

214:                                              ; preds = %184, %187, %149, %160
  %215 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %81, align 8
  %216 = load i8, i8* %19, align 1
  %217 = zext i8 %216 to i32
  %218 = add nuw nsw i32 %217, 1
  %219 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %215, i64 256, i32 0
  %220 = bitcast i8* %219 to %"class.absl::container_internal::btree_node"**
  %221 = zext i32 %218 to i64
  %222 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %220, i64 %221
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %222, align 8
  %223 = trunc i32 %218 to i8
  store i8 %223, i8* %22, align 1
  %224 = bitcast %"class.absl::container_internal::btree_node"* %2 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %215, %"class.absl::container_internal::btree_node"** %224, align 8
  %225 = getelementptr inbounds i8, i8* %19, i64 3
  %226 = load i8, i8* %225, align 1
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %251

228:                                              ; preds = %214
  %229 = load i8, i8* %20, align 1
  %230 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %0, i64 256, i32 0
  %231 = bitcast i8* %230 to %"class.absl::container_internal::btree_node"**
  %232 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %233 = bitcast i8* %232 to %"class.absl::container_internal::btree_node"**
  %234 = zext i8 %229 to i64
  br label %235

235:                                              ; preds = %235, %228
  %236 = phi i64 [ %246, %235 ], [ 0, %228 ]
  %237 = phi i64 [ %239, %235 ], [ %234, %228 ]
  %238 = phi i32 [ %247, %235 ], [ 0, %228 ]
  %239 = add nuw nsw i64 %237, 1
  %240 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %231, i64 %239
  %241 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %240, align 8
  %242 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %233, i64 %236
  store %"class.absl::container_internal::btree_node"* %241, %"class.absl::container_internal::btree_node"** %242, align 8
  %243 = trunc i32 %238 to i8
  %244 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %241, i64 8, i32 0
  store i8 %243, i8* %244, align 1
  %245 = bitcast %"class.absl::container_internal::btree_node"* %241 to %"class.absl::container_internal::btree_node"**
  store %"class.absl::container_internal::btree_node"* %2, %"class.absl::container_internal::btree_node"** %245, align 8
  %246 = add nuw nsw i64 %236, 1
  %247 = add nuw nsw i32 %238, 1
  %248 = load i8, i8* %23, align 1
  %249 = zext i8 %248 to i64
  %250 = icmp ult i64 %236, %249
  br i1 %250, label %235, label %251

251:                                              ; preds = %235, %214
  ret void
}

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #1

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4absl16numbers_internal17safe_strto32_baseENS_11string_viewEPii(i8*, i64, i32*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK4quic15QuicIntervalSetImE16SpanningIntervalEv(%"class.quic::QuicIntervalSet"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %104, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.quic::QuicIntervalSet"* %0 to %"class.absl::container_internal::btree_node"***
  %7 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %6, align 8
  %8 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  %9 = icmp eq %"class.absl::container_internal::btree_node"* %8, null
  br i1 %9, label %10, label %11, !prof !48

10:                                               ; preds = %5
  tail call void @llvm.trap() #14
  unreachable

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 8, i32 0
  %13 = getelementptr inbounds i8, i8* %12, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17, !prof !48

16:                                               ; preds = %11
  tail call void @llvm.trap() #14
  unreachable

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 16, i32 0
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %21, align 8, !noalias !83
  %23 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %22, i64 8, i32 0
  %24 = getelementptr inbounds i8, i8* %23, i64 2
  %25 = load i8, i8* %24, align 1, !noalias !83
  %26 = ptrtoint %"class.absl::container_internal::btree_node"* %22 to i64
  %27 = getelementptr inbounds i8, i8* %23, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %46, label %30

30:                                               ; preds = %17
  %31 = zext i8 %25 to i32
  %32 = add nsw i32 %31, -1
  %33 = icmp eq i8 %25, 0
  br i1 %33, label %34, label %82

34:                                               ; preds = %30, %42
  %35 = phi %"class.absl::container_internal::btree_node"* [ %37, %42 ], [ %22, %30 ]
  %36 = bitcast %"class.absl::container_internal::btree_node"* %35 to %"class.absl::container_internal::btree_node"**
  %37 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %36, align 8
  %38 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %37, i64 8, i32 0
  %39 = getelementptr inbounds i8, i8* %38, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %82

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %35, i64 8, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %34, label %78

46:                                               ; preds = %17
  %47 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %22, i64 256, i32 0
  %48 = bitcast i8* %47 to %"class.absl::container_internal::btree_node"**
  %49 = zext i8 %25 to i64
  %50 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %48, i64 %49
  %51 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %50, align 8
  %52 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %51, i64 8, i32 0
  %53 = getelementptr inbounds i8, i8* %52, i64 3
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds i8, i8* %52, i64 2
  %57 = load i8, i8* %56, align 1
  br i1 %55, label %58, label %72

58:                                               ; preds = %46, %58
  %59 = phi i8 [ %71, %58 ], [ %57, %46 ]
  %60 = phi %"class.absl::container_internal::btree_node"* [ %65, %58 ], [ %51, %46 ]
  %61 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %60, i64 256, i32 0
  %62 = bitcast i8* %61 to %"class.absl::container_internal::btree_node"**
  %63 = zext i8 %59 to i64
  %64 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %62, i64 %63
  %65 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %64, align 8
  %66 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %65, i64 8, i32 0
  %67 = getelementptr inbounds i8, i8* %66, i64 3
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  %70 = getelementptr inbounds i8, i8* %66, i64 2
  %71 = load i8, i8* %70, align 1
  br i1 %69, label %58, label %72

72:                                               ; preds = %58, %46
  %73 = phi %"class.absl::container_internal::btree_node"* [ %51, %46 ], [ %65, %58 ]
  %74 = phi i8 [ %57, %46 ], [ %71, %58 ]
  %75 = ptrtoint %"class.absl::container_internal::btree_node"* %73 to i64
  %76 = zext i8 %74 to i32
  %77 = add nsw i32 %76, -1
  br label %82

78:                                               ; preds = %42
  %79 = ptrtoint %"class.absl::container_internal::btree_node"* %37 to i64
  %80 = zext i8 %44 to i32
  %81 = add nsw i32 %80, -1
  br label %82

82:                                               ; preds = %34, %30, %78, %72
  %83 = phi i32 [ %77, %72 ], [ %32, %30 ], [ %81, %78 ], [ %32, %34 ]
  %84 = phi i64 [ %75, %72 ], [ %26, %30 ], [ %79, %78 ], [ %26, %34 ]
  %85 = inttoptr i64 %84 to %"class.absl::container_internal::btree_node"*
  %86 = icmp eq i64 %84, 0
  br i1 %86, label %87, label %88, !prof !48

87:                                               ; preds = %82
  tail call void @llvm.trap() #14
  unreachable

88:                                               ; preds = %82
  %89 = icmp slt i32 %83, 0
  br i1 %89, label %90, label %91, !prof !48

90:                                               ; preds = %88
  tail call void @llvm.trap() #14
  unreachable

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %85, i64 8, i32 0
  %93 = getelementptr inbounds i8, i8* %92, i64 2
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp slt i32 %83, %95
  br i1 %96, label %98, label %97, !prof !2

97:                                               ; preds = %91
  tail call void @llvm.trap() #14
  unreachable

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %85, i64 16, i32 0
  %100 = bitcast i8* %99 to %"class.quic::QuicInterval"*
  %101 = sext i32 %83 to i64
  %102 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %100, i64 %101, i32 1
  %103 = load i64, i64* %102, align 8
  br label %104

104:                                              ; preds = %98, %1
  %105 = phi i64 [ 0, %1 ], [ %103, %98 ]
  %106 = phi i64 [ 0, %1 ], [ %20, %98 ]
  %107 = insertvalue { i64, i64 } undef, i64 %106, 0
  %108 = insertvalue { i64, i64 } %107, i64 %105, 1
  ret { i64, i64 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic15QuicIntervalSetImE10DifferenceERKS1_(%"class.quic::QuicIntervalSet"*, %"class.quic::QuicIntervalSet"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.748", align 8
  %4 = alloca %"struct.std::__1::pair.748", align 8
  %5 = alloca %"class.absl::btree_set", align 16
  %6 = alloca %"class.absl::btree_set", align 16
  %7 = alloca %"class.quic::QuicInterval", align 8
  %8 = alloca %"class.quic::QuicInterval", align 8
  %9 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %325, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.absl::btree_set"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.absl::btree_set", %"class.absl::btree_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.absl::btree_set", %"class.absl::btree_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.absl::btree_set", %"class.absl::btree_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = bitcast %"class.absl::btree_set"* %6 to i64*
  store i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64* %17, align 16
  store %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"** %15, align 8
  store i64 0, i64* %16, align 16
  %18 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0
  %19 = bitcast %"class.quic::QuicIntervalSet"* %0 to %"class.absl::container_internal::btree_node"***
  %20 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %19, align 8
  %21 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %20, align 8
  %22 = ptrtoint %"class.absl::container_internal::btree_node"* %21 to i64
  %23 = bitcast %"class.quic::QuicInterval"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %7, i64 0, i32 0
  %25 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %7, i64 0, i32 1
  %26 = icmp eq %"class.absl::container_internal::btree_node"* %21, null
  %27 = bitcast %"class.quic::QuicInterval"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  br i1 %26, label %28, label %29, !prof !48

28:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %21, i64 8, i32 0
  %31 = getelementptr inbounds i8, i8* %30, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35, !prof !48

34:                                               ; preds = %29
  tail call void @llvm.trap() #14
  unreachable

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %21, i64 16, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %36, i64 16, i1 false)
  %37 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %37, align 8
  %39 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %38, i64 8, i32 0
  %40 = getelementptr inbounds i8, i8* %39, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = icmp ne %"class.absl::container_internal::btree_node"* %38, %21
  %43 = icmp ne i8 %41, 0
  %44 = or i1 %42, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %35
  %46 = ptrtoint %"class.absl::container_internal::btree_node"* %38 to i64
  br label %281

47:                                               ; preds = %35
  %48 = bitcast %"class.quic::QuicIntervalSet"* %1 to i64**
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.quic::QuicInterval"* %8 to i8*
  %53 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %8, i64 0, i32 0
  %54 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %8, i64 0, i32 1
  %55 = bitcast %"struct.std::__1::pair.748"* %4 to i8*
  %56 = getelementptr inbounds %"class.absl::btree_set", %"class.absl::btree_set"* %6, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"struct.std::__1::pair.748"* %3 to i8*
  br label %58

58:                                               ; preds = %47, %262
  %59 = phi %"class.absl::container_internal::btree_node"* [ %21, %47 ], [ %265, %262 ]
  %60 = phi i32 [ 0, %47 ], [ %269, %262 ]
  %61 = phi i64 [ %22, %47 ], [ %268, %262 ]
  %62 = phi i32 [ 0, %47 ], [ %263, %262 ]
  %63 = phi i64 [ %50, %47 ], [ %264, %262 ]
  %64 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %51, align 8
  %65 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %64, i64 8, i32 0
  %66 = getelementptr inbounds i8, i8* %65, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = inttoptr i64 %63 to %"class.absl::container_internal::btree_node"*
  %70 = icmp eq %"class.absl::container_internal::btree_node"* %64, %69
  %71 = icmp eq i32 %62, %68
  %72 = and i1 %70, %71
  br i1 %72, label %94, label %73

73:                                               ; preds = %58
  %74 = load i64, i64* %25, align 8
  %75 = icmp eq i64 %63, 0
  br i1 %75, label %76, label %77, !prof !48

76:                                               ; preds = %73
  call void @llvm.trap() #14
  unreachable

77:                                               ; preds = %73
  %78 = icmp slt i32 %62, 0
  br i1 %78, label %79, label %80, !prof !48

79:                                               ; preds = %77
  call void @llvm.trap() #14
  unreachable

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %69, i64 8, i32 0
  %82 = getelementptr inbounds i8, i8* %81, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = icmp slt i32 %62, %84
  br i1 %85, label %87, label %86, !prof !2

86:                                               ; preds = %80
  call void @llvm.trap() #14
  unreachable

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %69, i64 16, i32 0
  %89 = bitcast i8* %88 to %"class.quic::QuicInterval"*
  %90 = sext i32 %62 to i64
  %91 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %89, i64 %90, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp ugt i64 %74, %92
  br i1 %93, label %100, label %94

94:                                               ; preds = %87, %58
  %95 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, align 8
  %96 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %95, i64 8, i32 0
  %97 = getelementptr inbounds i8, i8* %96, i64 2
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #14
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18insert_hint_uniqueIS5_JRKS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEESN_RKT_DpOT0_(%"struct.std::__1::pair.748"* nonnull sret %3, %"class.absl::container_internal::btree"* nonnull %56, %"class.absl::container_internal::btree_node"* %95, i32 %99, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %7, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #14
  br label %178

100:                                              ; preds = %87
  %101 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %89, i64 %90, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = load i64, i64* %24, align 8
  %104 = icmp ugt i64 %102, %103
  br i1 %104, label %146, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds i8, i8* %81, i64 3
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 0
  %109 = add nuw nsw i32 %62, 1
  br i1 %108, label %126, label %110

110:                                              ; preds = %105
  %111 = icmp eq i32 %109, %84
  br i1 %111, label %112, label %168

112:                                              ; preds = %110, %121
  %113 = phi i8* [ %117, %121 ], [ %81, %110 ]
  %114 = phi %"class.absl::container_internal::btree_node"* [ %116, %121 ], [ %69, %110 ]
  %115 = bitcast %"class.absl::container_internal::btree_node"* %114 to %"class.absl::container_internal::btree_node"**
  %116 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %115, align 8
  %117 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %116, i64 8, i32 0
  %118 = getelementptr inbounds i8, i8* %117, i64 3
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %168

121:                                              ; preds = %112
  %122 = load i8, i8* %113, align 1
  %123 = getelementptr inbounds i8, i8* %117, i64 2
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %122, %124
  br i1 %125, label %112, label %165

126:                                              ; preds = %105
  %127 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %69, i64 256, i32 0
  %128 = bitcast i8* %127 to %"class.absl::container_internal::btree_node"**
  %129 = sext i32 %109 to i64
  %130 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %128, i64 %129
  %131 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %130, align 8
  %132 = ptrtoint %"class.absl::container_internal::btree_node"* %131 to i64
  %133 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %131, i64 8, i32 0
  %134 = getelementptr inbounds i8, i8* %133, i64 3
  %135 = load i8, i8* %134, align 1
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %168

137:                                              ; preds = %126, %137
  %138 = phi %"class.absl::container_internal::btree_node"* [ %141, %137 ], [ %131, %126 ]
  %139 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %138, i64 256, i32 0
  %140 = bitcast i8* %139 to %"class.absl::container_internal::btree_node"**
  %141 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %140, align 8
  %142 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %141, i64 8, i32 0
  %143 = getelementptr inbounds i8, i8* %142, i64 3
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %137, label %163

146:                                              ; preds = %100
  %147 = icmp ult i64 %103, %92
  br i1 %147, label %148, label %162

148:                                              ; preds = %146
  %149 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, align 8
  %150 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %149, i64 8, i32 0
  %151 = getelementptr inbounds i8, i8* %150, i64 2
  %152 = load i8, i8* %151, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #14
  %153 = zext i8 %152 to i32
  store i64 %103, i64* %53, align 8
  %154 = load i64, i64* %91, align 8
  store i64 %154, i64* %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #14
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18insert_hint_uniqueIS5_JS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEESL_RKT_DpOT0_(%"struct.std::__1::pair.748"* nonnull sret %4, %"class.absl::container_internal::btree"* nonnull %56, %"class.absl::container_internal::btree_node"* %149, i32 %153, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %8, %"class.quic::QuicInterval"* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #14
  %155 = load i8, i8* %82, align 1
  %156 = zext i8 %155 to i32
  %157 = icmp slt i32 %62, %156
  br i1 %157, label %159, label %158, !prof !2

158:                                              ; preds = %148
  call void @llvm.trap() #14
  unreachable

159:                                              ; preds = %148
  %160 = load i64, i64* %101, align 8
  store i64 %160, i64* %24, align 8
  %161 = load i64, i64* %25, align 8
  br label %168

162:                                              ; preds = %146
  store i64 %102, i64* %24, align 8
  br label %168

163:                                              ; preds = %137
  %164 = ptrtoint %"class.absl::container_internal::btree_node"* %141 to i64
  br label %168

165:                                              ; preds = %121
  %166 = ptrtoint %"class.absl::container_internal::btree_node"* %116 to i64
  %167 = zext i8 %122 to i32
  br label %168

168:                                              ; preds = %112, %165, %163, %110, %126, %162, %159
  %169 = phi i64 [ %161, %159 ], [ %74, %162 ], [ %74, %110 ], [ %74, %126 ], [ %74, %163 ], [ %74, %165 ], [ %74, %112 ]
  %170 = phi i64 [ %160, %159 ], [ %102, %162 ], [ %103, %110 ], [ %103, %126 ], [ %103, %163 ], [ %103, %165 ], [ %103, %112 ]
  %171 = phi i64 [ %63, %159 ], [ %63, %162 ], [ %63, %110 ], [ %132, %126 ], [ %164, %163 ], [ %166, %165 ], [ %63, %112 ]
  %172 = phi i32 [ %62, %159 ], [ %62, %162 ], [ %109, %110 ], [ 0, %126 ], [ 0, %163 ], [ %167, %165 ], [ %84, %112 ]
  %173 = icmp ult i64 %170, %169
  br i1 %173, label %174, label %178

174:                                              ; preds = %168
  %175 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %37, align 8
  %176 = ptrtoint %"class.absl::container_internal::btree_node"* %175 to i64
  %177 = inttoptr i64 %61 to %"class.absl::container_internal::btree_node"*
  br label %262

178:                                              ; preds = %94, %168
  %179 = phi i32 [ %62, %94 ], [ %172, %168 ]
  %180 = phi i64 [ %63, %94 ], [ %171, %168 ]
  %181 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %59, i64 8, i32 0
  %182 = getelementptr inbounds i8, i8* %181, i64 3
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i8 %183, 0
  %185 = add nsw i32 %60, 1
  br i1 %184, label %205, label %186

186:                                              ; preds = %178
  %187 = getelementptr inbounds i8, i8* %181, i64 2
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp eq i32 %185, %189
  br i1 %190, label %191, label %230

191:                                              ; preds = %186, %200
  %192 = phi i8* [ %196, %200 ], [ %181, %186 ]
  %193 = phi %"class.absl::container_internal::btree_node"* [ %195, %200 ], [ %59, %186 ]
  %194 = bitcast %"class.absl::container_internal::btree_node"* %193 to %"class.absl::container_internal::btree_node"**
  %195 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %194, align 8
  %196 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %195, i64 8, i32 0
  %197 = getelementptr inbounds i8, i8* %196, i64 3
  %198 = load i8, i8* %197, align 1
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %200, label %230

200:                                              ; preds = %191
  %201 = load i8, i8* %192, align 1
  %202 = getelementptr inbounds i8, i8* %196, i64 2
  %203 = load i8, i8* %202, align 1
  %204 = icmp eq i8 %201, %203
  br i1 %204, label %191, label %227

205:                                              ; preds = %178
  %206 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %59, i64 256, i32 0
  %207 = bitcast i8* %206 to %"class.absl::container_internal::btree_node"**
  %208 = sext i32 %185 to i64
  %209 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %207, i64 %208
  %210 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %209, align 8
  %211 = ptrtoint %"class.absl::container_internal::btree_node"* %210 to i64
  %212 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %210, i64 8, i32 0
  %213 = getelementptr inbounds i8, i8* %212, i64 3
  %214 = load i8, i8* %213, align 1
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %230

216:                                              ; preds = %205, %216
  %217 = phi %"class.absl::container_internal::btree_node"* [ %220, %216 ], [ %210, %205 ]
  %218 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %217, i64 256, i32 0
  %219 = bitcast i8* %218 to %"class.absl::container_internal::btree_node"**
  %220 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %219, align 8
  %221 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %220, i64 8, i32 0
  %222 = getelementptr inbounds i8, i8* %221, i64 3
  %223 = load i8, i8* %222, align 1
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %216, label %225

225:                                              ; preds = %216
  %226 = ptrtoint %"class.absl::container_internal::btree_node"* %220 to i64
  br label %230

227:                                              ; preds = %200
  %228 = ptrtoint %"class.absl::container_internal::btree_node"* %195 to i64
  %229 = zext i8 %201 to i32
  br label %230

230:                                              ; preds = %191, %227, %225, %186, %205
  %231 = phi i64 [ %61, %186 ], [ %211, %205 ], [ %226, %225 ], [ %228, %227 ], [ %61, %191 ]
  %232 = phi i32 [ %185, %186 ], [ 0, %205 ], [ 0, %225 ], [ %229, %227 ], [ %185, %191 ]
  %233 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %37, align 8
  %234 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %233, i64 8, i32 0
  %235 = getelementptr inbounds i8, i8* %234, i64 2
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = inttoptr i64 %231 to %"class.absl::container_internal::btree_node"*
  %239 = icmp ne %"class.absl::container_internal::btree_node"* %233, %238
  %240 = icmp ne i32 %232, %237
  %241 = or i1 %239, %240
  %242 = ptrtoint %"class.absl::container_internal::btree_node"* %233 to i64
  br i1 %241, label %243, label %262

243:                                              ; preds = %230
  %244 = icmp eq i64 %231, 0
  br i1 %244, label %245, label %246, !prof !48

245:                                              ; preds = %243
  call void @llvm.trap() #14
  unreachable

246:                                              ; preds = %243
  %247 = icmp slt i32 %232, 0
  br i1 %247, label %248, label %249, !prof !48

248:                                              ; preds = %246
  call void @llvm.trap() #14
  unreachable

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %238, i64 8, i32 0
  %251 = getelementptr inbounds i8, i8* %250, i64 2
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = icmp slt i32 %232, %253
  br i1 %254, label %256, label %255, !prof !2

255:                                              ; preds = %249
  call void @llvm.trap() #14
  unreachable

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %238, i64 16, i32 0
  %258 = bitcast i8* %257 to %"class.quic::QuicInterval"*
  %259 = sext i32 %232 to i64
  %260 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %258, i64 %259
  %261 = bitcast %"class.quic::QuicInterval"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %261, i64 16, i1 false)
  br label %262

262:                                              ; preds = %174, %230, %256
  %263 = phi i32 [ %172, %174 ], [ %179, %230 ], [ %179, %256 ]
  %264 = phi i64 [ %171, %174 ], [ %180, %230 ], [ %180, %256 ]
  %265 = phi %"class.absl::container_internal::btree_node"* [ %177, %174 ], [ %238, %230 ], [ %238, %256 ]
  %266 = phi i64 [ %176, %174 ], [ %242, %230 ], [ %242, %256 ]
  %267 = phi %"class.absl::container_internal::btree_node"* [ %175, %174 ], [ %233, %230 ], [ %233, %256 ]
  %268 = phi i64 [ %61, %174 ], [ %231, %230 ], [ %231, %256 ]
  %269 = phi i32 [ %60, %174 ], [ %232, %230 ], [ %232, %256 ]
  %270 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %267, i64 8, i32 0
  %271 = getelementptr inbounds i8, i8* %270, i64 2
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = icmp ne %"class.absl::container_internal::btree_node"* %267, %265
  %275 = icmp ne i32 %269, %273
  %276 = or i1 %274, %275
  br i1 %276, label %58, label %277

277:                                              ; preds = %262
  %278 = bitcast %"class.absl::btree_set"* %6 to <2 x i64>*
  %279 = load <2 x i64>, <2 x i64>* %278, align 16
  %280 = load i64, i64* %16, align 16
  br label %281

281:                                              ; preds = %45, %277
  %282 = phi i64 [ %46, %45 ], [ %266, %277 ]
  %283 = phi i64 [ 0, %45 ], [ %280, %277 ]
  %284 = phi <2 x i64> [ <i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64)>, %45 ], [ %279, %277 ]
  %285 = bitcast %"class.absl::container_internal::btree_node"** %15 to i64*
  %286 = bitcast %"class.absl::btree_set"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %286) #14
  %287 = getelementptr inbounds %"class.absl::btree_set", %"class.absl::btree_set"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  store i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64* %285, align 8
  %288 = bitcast %"class.absl::btree_set"* %5 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %288, align 16
  store i64 0, i64* %16, align 16
  store i64 %283, i64* %287, align 16
  store %"class.absl::container_internal::btree_node"* bitcast ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to %"class.absl::container_internal::btree_node"*), %"class.absl::container_internal::btree_node"** %14, align 16
  %289 = icmp eq %"class.absl::btree_set"* %6, %18
  %290 = extractelement <2 x i64> %284, i32 0
  %291 = inttoptr i64 %290 to %"class.absl::container_internal::btree_node"*
  br i1 %289, label %297, label %292

292:                                              ; preds = %281
  %293 = bitcast %"class.quic::QuicIntervalSet"* %0 to i64*
  %294 = load i64, i64* %293, align 8
  store i64 %294, i64* %17, align 16
  store i64 %282, i64* %285, align 8
  %295 = bitcast %"class.quic::QuicIntervalSet"* %0 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64)>, <2 x i64>* %295, align 8
  %296 = load i64, i64* %9, align 8
  store i64 %296, i64* %16, align 16
  store i64 0, i64* %9, align 8
  br label %297

297:                                              ; preds = %292, %281
  %298 = icmp eq %"class.absl::btree_set"* %5, %18
  br i1 %298, label %314, label %299

299:                                              ; preds = %297
  %300 = load i64, i64* %9, align 8
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %309, label %302

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %303, align 8
  %305 = bitcast %"class.quic::QuicIntervalSet"* %0 to %"class.std::__1::allocator"*
  call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %304, %"class.std::__1::allocator"* %305) #14
  %306 = bitcast %"class.absl::btree_set"* %5 to <2 x i64>*
  %307 = load <2 x i64>, <2 x i64>* %306, align 16
  %308 = load i64, i64* %287, align 16
  br label %309

309:                                              ; preds = %302, %299
  %310 = phi i64 [ %308, %302 ], [ %283, %299 ]
  %311 = phi <2 x i64> [ %307, %302 ], [ %284, %299 ]
  %312 = bitcast %"class.quic::QuicIntervalSet"* %0 to <2 x i64>*
  store <2 x i64> %311, <2 x i64>* %312, align 8
  %313 = bitcast %"class.absl::btree_set"* %5 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64), i64 ptrtoint ({ %"class.absl::container_internal::btree_node"*, i8, i8, i8, i8 }* @_ZZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE9EmptyNodeEvE10empty_node to i64)>, <2 x i64>* %313, align 16
  store i64 %310, i64* %9, align 8
  store i64 0, i64* %287, align 16
  br label %318

314:                                              ; preds = %297
  %315 = icmp eq i64 %283, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = bitcast %"class.absl::btree_set"* %5 to %"class.std::__1::allocator"*
  call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %291, %"class.std::__1::allocator"* nonnull %317) #14
  br label %318

318:                                              ; preds = %309, %314, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %286) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  %319 = load i64, i64* %16, align 16
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %324, label %321

321:                                              ; preds = %318
  %322 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %14, align 16
  %323 = bitcast %"class.absl::btree_set"* %6 to %"class.std::__1::allocator"*
  call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %322, %"class.std::__1::allocator"* nonnull %323) #14
  br label %324

324:                                              ; preds = %318, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  br label %325

325:                                              ; preds = %2, %324
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18insert_hint_uniqueIS5_JRKS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEESN_RKT_DpOT0_(%"struct.std::__1::pair.748"* noalias sret, %"class.absl::container_internal::btree"*, %"class.absl::container_internal::btree_node"*, i32, %"class.quic::QuicInterval"* dereferenceable(16), %"class.quic::QuicInterval"* dereferenceable(16)) local_unnamed_addr #16 comdat align 2 {
  %7 = ptrtoint %"class.absl::container_internal::btree_node"* %2 to i64
  %8 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %181, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 1
  %13 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %13, i64 8, i32 0
  %15 = getelementptr inbounds i8, i8* %14, i64 2
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = icmp eq %"class.absl::container_internal::btree_node"* %13, %2
  %19 = icmp eq i32 %17, %3
  %20 = and i1 %18, %19
  br i1 %20, label %30, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 16, i32 0
  %23 = bitcast i8* %22 to %"class.quic::QuicInterval"*
  %24 = sext i32 %3 to i64
  %25 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %23, i64 %24, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %30, label %109

30:                                               ; preds = %11, %21
  %31 = bitcast %"class.absl::container_internal::btree"* %1 to %"class.absl::container_internal::btree_node"***
  %32 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %31, align 8
  %33 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %32, align 8
  %34 = icmp eq %"class.absl::container_internal::btree_node"* %33, %2
  %35 = icmp eq i32 %3, 0
  %36 = and i1 %35, %34
  br i1 %36, label %102, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %39 = getelementptr inbounds i8, i8* %38, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %57, label %42

42:                                               ; preds = %37
  %43 = add nsw i32 %3, -1
  %44 = icmp sgt i32 %3, 0
  br i1 %44, label %91, label %45

45:                                               ; preds = %42, %53
  %46 = phi %"class.absl::container_internal::btree_node"* [ %48, %53 ], [ %2, %42 ]
  %47 = bitcast %"class.absl::container_internal::btree_node"* %46 to %"class.absl::container_internal::btree_node"**
  %48 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %47, align 8
  %49 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %48, i64 8, i32 0
  %50 = getelementptr inbounds i8, i8* %49, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %91

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %46, i64 8, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %45, label %88

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %59 = bitcast i8* %58 to %"class.absl::container_internal::btree_node"**
  %60 = sext i32 %3 to i64
  %61 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %59, i64 %60
  %62 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %61, align 8
  %63 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %62, i64 8, i32 0
  %64 = getelementptr inbounds i8, i8* %63, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  %67 = getelementptr inbounds i8, i8* %63, i64 2
  %68 = load i8, i8* %67, align 1
  br i1 %66, label %69, label %83

69:                                               ; preds = %57, %69
  %70 = phi i8 [ %82, %69 ], [ %68, %57 ]
  %71 = phi %"class.absl::container_internal::btree_node"* [ %76, %69 ], [ %62, %57 ]
  %72 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %71, i64 256, i32 0
  %73 = bitcast i8* %72 to %"class.absl::container_internal::btree_node"**
  %74 = zext i8 %70 to i64
  %75 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %73, i64 %74
  %76 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %75, align 8
  %77 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %76, i64 8, i32 0
  %78 = getelementptr inbounds i8, i8* %77, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  %81 = getelementptr inbounds i8, i8* %77, i64 2
  %82 = load i8, i8* %81, align 1
  br i1 %80, label %69, label %83

83:                                               ; preds = %69, %57
  %84 = phi %"class.absl::container_internal::btree_node"* [ %62, %57 ], [ %76, %69 ]
  %85 = phi i8 [ %68, %57 ], [ %82, %69 ]
  %86 = zext i8 %85 to i32
  %87 = add nsw i32 %86, -1
  br label %91

88:                                               ; preds = %53
  %89 = zext i8 %55 to i32
  %90 = add nsw i32 %89, -1
  br label %91

91:                                               ; preds = %45, %88, %83, %42
  %92 = phi i32 [ %87, %83 ], [ %43, %42 ], [ %90, %88 ], [ %43, %45 ]
  %93 = phi %"class.absl::container_internal::btree_node"* [ %84, %83 ], [ %2, %42 ], [ %48, %88 ], [ %2, %45 ]
  %94 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %93, i64 16, i32 0
  %95 = bitcast i8* %94 to %"class.quic::QuicInterval"*
  %96 = sext i32 %92 to i64
  %97 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %95, i64 %96, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp ult i64 %98, %100
  br i1 %101, label %102, label %181

102:                                              ; preds = %30, %91
  %103 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJRKS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESM_DpOT_(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %2, i32 %3, %"class.quic::QuicInterval"* dereferenceable(16) %5)
  %104 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %103, 0
  %105 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %103, 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 0
  store %"class.absl::container_internal::btree_node"* %104, %"class.absl::container_internal::btree_node"** %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %105, i32* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  store i8 1, i8* %108, align 8
  br label %182

109:                                              ; preds = %21
  %110 = icmp ult i64 %28, %26
  br i1 %110, label %111, label %177

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %113 = getelementptr inbounds i8, i8* %112, i64 3
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 0
  %116 = add nsw i32 %3, 1
  br i1 %115, label %136, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds i8, i8* %112, i64 2
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %116, %120
  br i1 %121, label %122, label %157

122:                                              ; preds = %117, %131
  %123 = phi i8* [ %127, %131 ], [ %112, %117 ]
  %124 = phi %"class.absl::container_internal::btree_node"* [ %126, %131 ], [ %2, %117 ]
  %125 = bitcast %"class.absl::container_internal::btree_node"* %124 to %"class.absl::container_internal::btree_node"**
  %126 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %125, align 8
  %127 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %126, i64 8, i32 0
  %128 = getelementptr inbounds i8, i8* %127, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %157

131:                                              ; preds = %122
  %132 = load i8, i8* %123, align 1
  %133 = getelementptr inbounds i8, i8* %127, i64 2
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %132, %134
  br i1 %135, label %122, label %155

136:                                              ; preds = %111
  %137 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %138 = bitcast i8* %137 to %"class.absl::container_internal::btree_node"**
  %139 = sext i32 %116 to i64
  %140 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %138, i64 %139
  %141 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %140, align 8
  %142 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %141, i64 8, i32 0
  %143 = getelementptr inbounds i8, i8* %142, i64 3
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %157

146:                                              ; preds = %136, %146
  %147 = phi %"class.absl::container_internal::btree_node"* [ %150, %146 ], [ %141, %136 ]
  %148 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %147, i64 256, i32 0
  %149 = bitcast i8* %148 to %"class.absl::container_internal::btree_node"**
  %150 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %149, align 8
  %151 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %150, i64 8, i32 0
  %152 = getelementptr inbounds i8, i8* %151, i64 3
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %146, label %157

155:                                              ; preds = %131
  %156 = zext i8 %132 to i32
  br label %157

157:                                              ; preds = %122, %146, %155, %117, %136
  %158 = phi %"class.absl::container_internal::btree_node"* [ %2, %117 ], [ %141, %136 ], [ %126, %155 ], [ %150, %146 ], [ %2, %122 ]
  %159 = phi i32 [ %116, %117 ], [ 0, %136 ], [ %156, %155 ], [ 0, %146 ], [ %116, %122 ]
  %160 = icmp eq %"class.absl::container_internal::btree_node"* %158, %13
  %161 = icmp eq i32 %159, %17
  %162 = and i1 %160, %161
  br i1 %162, label %170, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %158, i64 16, i32 0
  %165 = bitcast i8* %164 to %"class.quic::QuicInterval"*
  %166 = sext i32 %159 to i64
  %167 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %165, i64 %166, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = icmp ult i64 %26, %168
  br i1 %169, label %170, label %181

170:                                              ; preds = %157, %163
  %171 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJRKS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESM_DpOT_(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %158, i32 %159, %"class.quic::QuicInterval"* dereferenceable(16) %5)
  %172 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %171, 0
  %173 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %171, 1
  %174 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 0
  store %"class.absl::container_internal::btree_node"* %172, %"class.absl::container_internal::btree_node"** %174, align 8
  %175 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %173, i32* %175, align 8
  %176 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  store i8 1, i8* %176, align 8
  br label %182

177:                                              ; preds = %109
  %178 = bitcast %"struct.std::__1::pair.748"* %0 to i64*
  store i64 %7, i64* %178, align 8
  %179 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %3, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  store i8 0, i8* %180, align 8
  br label %182

181:                                              ; preds = %91, %163, %6
  tail call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE13insert_uniqueIS5_JRKS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEERKT_DpOT0_(%"struct.std::__1::pair.748"* sret %0, %"class.absl::container_internal::btree"* %1, %"class.quic::QuicInterval"* dereferenceable(16) %4, %"class.quic::QuicInterval"* dereferenceable(16) %5)
  br label %182

182:                                              ; preds = %181, %177, %170, %102
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18insert_hint_uniqueIS5_JS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEESL_RKT_DpOT0_(%"struct.std::__1::pair.748"* noalias sret, %"class.absl::container_internal::btree"*, %"class.absl::container_internal::btree_node"*, i32, %"class.quic::QuicInterval"* dereferenceable(16), %"class.quic::QuicInterval"* dereferenceable(16)) local_unnamed_addr #16 comdat align 2 {
  %7 = ptrtoint %"class.absl::container_internal::btree_node"* %2 to i64
  %8 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %181, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 1
  %13 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %13, i64 8, i32 0
  %15 = getelementptr inbounds i8, i8* %14, i64 2
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = icmp eq %"class.absl::container_internal::btree_node"* %13, %2
  %19 = icmp eq i32 %17, %3
  %20 = and i1 %18, %19
  br i1 %20, label %30, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 16, i32 0
  %23 = bitcast i8* %22 to %"class.quic::QuicInterval"*
  %24 = sext i32 %3 to i64
  %25 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %23, i64 %24, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %30, label %109

30:                                               ; preds = %11, %21
  %31 = bitcast %"class.absl::container_internal::btree"* %1 to %"class.absl::container_internal::btree_node"***
  %32 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %31, align 8
  %33 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %32, align 8
  %34 = icmp eq %"class.absl::container_internal::btree_node"* %33, %2
  %35 = icmp eq i32 %3, 0
  %36 = and i1 %35, %34
  br i1 %36, label %102, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %39 = getelementptr inbounds i8, i8* %38, i64 3
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %57, label %42

42:                                               ; preds = %37
  %43 = add nsw i32 %3, -1
  %44 = icmp sgt i32 %3, 0
  br i1 %44, label %91, label %45

45:                                               ; preds = %42, %53
  %46 = phi %"class.absl::container_internal::btree_node"* [ %48, %53 ], [ %2, %42 ]
  %47 = bitcast %"class.absl::container_internal::btree_node"* %46 to %"class.absl::container_internal::btree_node"**
  %48 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %47, align 8
  %49 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %48, i64 8, i32 0
  %50 = getelementptr inbounds i8, i8* %49, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %91

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %46, i64 8, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %45, label %88

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %59 = bitcast i8* %58 to %"class.absl::container_internal::btree_node"**
  %60 = sext i32 %3 to i64
  %61 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %59, i64 %60
  %62 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %61, align 8
  %63 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %62, i64 8, i32 0
  %64 = getelementptr inbounds i8, i8* %63, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  %67 = getelementptr inbounds i8, i8* %63, i64 2
  %68 = load i8, i8* %67, align 1
  br i1 %66, label %69, label %83

69:                                               ; preds = %57, %69
  %70 = phi i8 [ %82, %69 ], [ %68, %57 ]
  %71 = phi %"class.absl::container_internal::btree_node"* [ %76, %69 ], [ %62, %57 ]
  %72 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %71, i64 256, i32 0
  %73 = bitcast i8* %72 to %"class.absl::container_internal::btree_node"**
  %74 = zext i8 %70 to i64
  %75 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %73, i64 %74
  %76 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %75, align 8
  %77 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %76, i64 8, i32 0
  %78 = getelementptr inbounds i8, i8* %77, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  %81 = getelementptr inbounds i8, i8* %77, i64 2
  %82 = load i8, i8* %81, align 1
  br i1 %80, label %69, label %83

83:                                               ; preds = %69, %57
  %84 = phi %"class.absl::container_internal::btree_node"* [ %62, %57 ], [ %76, %69 ]
  %85 = phi i8 [ %68, %57 ], [ %82, %69 ]
  %86 = zext i8 %85 to i32
  %87 = add nsw i32 %86, -1
  br label %91

88:                                               ; preds = %53
  %89 = zext i8 %55 to i32
  %90 = add nsw i32 %89, -1
  br label %91

91:                                               ; preds = %45, %88, %83, %42
  %92 = phi i32 [ %87, %83 ], [ %43, %42 ], [ %90, %88 ], [ %43, %45 ]
  %93 = phi %"class.absl::container_internal::btree_node"* [ %84, %83 ], [ %2, %42 ], [ %48, %88 ], [ %2, %45 ]
  %94 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %93, i64 16, i32 0
  %95 = bitcast i8* %94 to %"class.quic::QuicInterval"*
  %96 = sext i32 %92 to i64
  %97 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %95, i64 %96, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %4, i64 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp ult i64 %98, %100
  br i1 %101, label %102, label %181

102:                                              ; preds = %30, %91
  %103 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESK_DpOT_(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %2, i32 %3, %"class.quic::QuicInterval"* dereferenceable(16) %5)
  %104 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %103, 0
  %105 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %103, 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 0
  store %"class.absl::container_internal::btree_node"* %104, %"class.absl::container_internal::btree_node"** %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %105, i32* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  store i8 1, i8* %108, align 8
  br label %182

109:                                              ; preds = %21
  %110 = icmp ult i64 %28, %26
  br i1 %110, label %111, label %177

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 8, i32 0
  %113 = getelementptr inbounds i8, i8* %112, i64 3
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 0
  %116 = add nsw i32 %3, 1
  br i1 %115, label %136, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds i8, i8* %112, i64 2
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %116, %120
  br i1 %121, label %122, label %157

122:                                              ; preds = %117, %131
  %123 = phi i8* [ %127, %131 ], [ %112, %117 ]
  %124 = phi %"class.absl::container_internal::btree_node"* [ %126, %131 ], [ %2, %117 ]
  %125 = bitcast %"class.absl::container_internal::btree_node"* %124 to %"class.absl::container_internal::btree_node"**
  %126 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %125, align 8
  %127 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %126, i64 8, i32 0
  %128 = getelementptr inbounds i8, i8* %127, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %157

131:                                              ; preds = %122
  %132 = load i8, i8* %123, align 1
  %133 = getelementptr inbounds i8, i8* %127, i64 2
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %132, %134
  br i1 %135, label %122, label %155

136:                                              ; preds = %111
  %137 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %2, i64 256, i32 0
  %138 = bitcast i8* %137 to %"class.absl::container_internal::btree_node"**
  %139 = sext i32 %116 to i64
  %140 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %138, i64 %139
  %141 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %140, align 8
  %142 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %141, i64 8, i32 0
  %143 = getelementptr inbounds i8, i8* %142, i64 3
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %157

146:                                              ; preds = %136, %146
  %147 = phi %"class.absl::container_internal::btree_node"* [ %150, %146 ], [ %141, %136 ]
  %148 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %147, i64 256, i32 0
  %149 = bitcast i8* %148 to %"class.absl::container_internal::btree_node"**
  %150 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %149, align 8
  %151 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %150, i64 8, i32 0
  %152 = getelementptr inbounds i8, i8* %151, i64 3
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %146, label %157

155:                                              ; preds = %131
  %156 = zext i8 %132 to i32
  br label %157

157:                                              ; preds = %122, %146, %155, %117, %136
  %158 = phi %"class.absl::container_internal::btree_node"* [ %2, %117 ], [ %141, %136 ], [ %126, %155 ], [ %150, %146 ], [ %2, %122 ]
  %159 = phi i32 [ %116, %117 ], [ 0, %136 ], [ %156, %155 ], [ 0, %146 ], [ %116, %122 ]
  %160 = icmp eq %"class.absl::container_internal::btree_node"* %158, %13
  %161 = icmp eq i32 %159, %17
  %162 = and i1 %160, %161
  br i1 %162, label %170, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %158, i64 16, i32 0
  %165 = bitcast i8* %164 to %"class.quic::QuicInterval"*
  %166 = sext i32 %159 to i64
  %167 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %165, i64 %166, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = icmp ult i64 %26, %168
  br i1 %169, label %170, label %181

170:                                              ; preds = %157, %163
  %171 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESK_DpOT_(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %158, i32 %159, %"class.quic::QuicInterval"* dereferenceable(16) %5)
  %172 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %171, 0
  %173 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %171, 1
  %174 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 0
  store %"class.absl::container_internal::btree_node"* %172, %"class.absl::container_internal::btree_node"** %174, align 8
  %175 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %173, i32* %175, align 8
  %176 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  store i8 1, i8* %176, align 8
  br label %182

177:                                              ; preds = %109
  %178 = bitcast %"struct.std::__1::pair.748"* %0 to i64*
  store i64 %7, i64* %178, align 8
  %179 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %3, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  store i8 0, i8* %180, align 8
  br label %182

181:                                              ; preds = %91, %163, %6
  tail call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE13insert_uniqueIS5_JS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEERKT_DpOT0_(%"struct.std::__1::pair.748"* sret %0, %"class.absl::container_internal::btree"* %1, %"class.quic::QuicInterval"* dereferenceable(16) %4, %"class.quic::QuicInterval"* dereferenceable(16) %5)
  br label %182

182:                                              ; preds = %181, %177, %170, %102
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESK_DpOT_(%"class.absl::container_internal::btree"*, %"class.absl::container_internal::btree_node"*, i32, %"class.quic::QuicInterval"* dereferenceable(16)) local_unnamed_addr #16 comdat align 2 {
  %5 = alloca { %"class.absl::container_internal::btree_node"*, i32 }, align 8
  %6 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %5 to %"struct.absl::container_internal::btree_iterator.746"*
  %7 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %5, i64 0, i32 0
  store %"class.absl::container_internal::btree_node"* %1, %"class.absl::container_internal::btree_node"** %7, align 8
  %8 = getelementptr inbounds { %"class.absl::container_internal::btree_node"*, i32 }, { %"class.absl::container_internal::btree_node"*, i32 }* %5, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 8, i32 0
  %10 = getelementptr inbounds i8, i8* %9, i64 3
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %1, i64 256, i32 0
  %15 = bitcast i8* %14 to %"class.absl::container_internal::btree_node"**
  %16 = sext i32 %2 to i64
  %17 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, i64 %16
  %18 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %17, align 8
  store %"class.absl::container_internal::btree_node"* %18, %"class.absl::container_internal::btree_node"** %7, align 8
  %19 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %18, i64 8, i32 0
  %20 = getelementptr inbounds i8, i8* %19, i64 3
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  %23 = getelementptr inbounds i8, i8* %19, i64 2
  %24 = load i8, i8* %23, align 1
  br i1 %22, label %25, label %39

25:                                               ; preds = %13, %25
  %26 = phi i8 [ %38, %25 ], [ %24, %13 ]
  %27 = phi %"class.absl::container_internal::btree_node"* [ %32, %25 ], [ %18, %13 ]
  %28 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %27, i64 256, i32 0
  %29 = bitcast i8* %28 to %"class.absl::container_internal::btree_node"**
  %30 = zext i8 %26 to i64
  %31 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %29, i64 %30
  %32 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %31, align 8
  store %"class.absl::container_internal::btree_node"* %32, %"class.absl::container_internal::btree_node"** %7, align 8
  %33 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %32, i64 8, i32 0
  %34 = getelementptr inbounds i8, i8* %33, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds i8, i8* %33, i64 2
  %38 = load i8, i8* %37, align 1
  br i1 %36, label %25, label %39

39:                                               ; preds = %25, %13
  %40 = phi %"class.absl::container_internal::btree_node"* [ %18, %13 ], [ %32, %25 ]
  %41 = phi i8 [ %24, %13 ], [ %38, %25 ]
  %42 = zext i8 %41 to i32
  store i32 %42, i32* %8, align 8
  %43 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %40, i64 8, i32 0
  %44 = getelementptr inbounds i8, i8* %43, i64 3
  %45 = load i8, i8* %44, align 1
  br label %46

46:                                               ; preds = %4, %39
  %47 = phi i8 [ %11, %4 ], [ %45, %39 ]
  %48 = phi %"class.absl::container_internal::btree_node"* [ %1, %4 ], [ %40, %39 ]
  %49 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %48, i64 8, i32 0
  %50 = icmp eq i8 %47, 0
  %51 = select i1 %50, i8 15, i8 %47
  %52 = bitcast %"class.absl::container_internal::btree"* %0 to %"class.std::__1::allocator"*
  %53 = getelementptr inbounds i8, i8* %49, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %51 to i32
  %56 = icmp eq i8 %54, %51
  br i1 %56, label %57, label %138

57:                                               ; preds = %46
  %58 = icmp ult i8 %51, 15
  br i1 %58, label %59, label %136

59:                                               ; preds = %57
  %60 = shl nuw nsw i32 %55, 1
  %61 = icmp ult i32 %60, 15
  %62 = select i1 %61, i32 %60, i32 15
  %63 = shl nuw nsw i32 %62, 4
  %64 = add nuw nsw i32 %63, 23
  %65 = and i32 %64, 496
  %66 = zext i32 %65 to i64
  %67 = tail call i8* @_Znwm(i64 %66) #18
  %68 = bitcast i8* %67 to i8**
  store i8* %67, i8** %68, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 8
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds i8, i8* %67, i64 9
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds i8, i8* %67, i64 10
  store i8 0, i8* %71, align 1
  %72 = trunc i32 %62 to i8
  %73 = getelementptr inbounds i8, i8* %67, i64 11
  store i8 %72, i8* %73, align 1
  %74 = bitcast { %"class.absl::container_internal::btree_node"*, i32 }* %5 to i8**
  store i8* %67, i8** %74, align 8
  %75 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %75, align 8
  %77 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %76, i64 8, i32 0
  %78 = getelementptr inbounds i8, i8* %77, i64 2
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i64
  %81 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %76, i64 16, i32 0
  %82 = bitcast i8* %81 to %"class.quic::QuicInterval"*
  %83 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %82, i64 %80
  %84 = icmp eq i8 %79, 0
  %85 = bitcast i8* %67 to %"class.absl::container_internal::btree_node"*
  br i1 %84, label %131, label %86

86:                                               ; preds = %59
  %87 = getelementptr inbounds i8, i8* %67, i64 16
  %88 = bitcast i8* %87 to %"class.quic::QuicInterval"*
  %89 = shl nuw nsw i64 %80, 4
  %90 = add nsw i64 %89, -16
  %91 = lshr exact i64 %90, 4
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %86, %95
  %96 = phi %"class.quic::QuicInterval"* [ %102, %95 ], [ %88, %86 ]
  %97 = phi %"class.quic::QuicInterval"* [ %101, %95 ], [ %82, %86 ]
  %98 = phi i64 [ %103, %95 ], [ %93, %86 ]
  %99 = bitcast %"class.quic::QuicInterval"* %96 to i8*
  %100 = bitcast %"class.quic::QuicInterval"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #14
  %101 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %97, i64 1
  %102 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %96, i64 1
  %103 = add i64 %98, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %95, !llvm.loop !88

105:                                              ; preds = %95, %86
  %106 = phi %"class.quic::QuicInterval"* [ %88, %86 ], [ %102, %95 ]
  %107 = phi %"class.quic::QuicInterval"* [ %82, %86 ], [ %101, %95 ]
  %108 = icmp ult i64 %90, 48
  br i1 %108, label %129, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"class.quic::QuicInterval"* [ %127, %109 ], [ %106, %105 ]
  %111 = phi %"class.quic::QuicInterval"* [ %126, %109 ], [ %107, %105 ]
  %112 = bitcast %"class.quic::QuicInterval"* %110 to i8*
  %113 = bitcast %"class.quic::QuicInterval"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 16, i1 false) #14
  %114 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 1
  %115 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %110, i64 1
  %116 = bitcast %"class.quic::QuicInterval"* %115 to i8*
  %117 = bitcast %"class.quic::QuicInterval"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 16, i1 false) #14
  %118 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 2
  %119 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %110, i64 2
  %120 = bitcast %"class.quic::QuicInterval"* %119 to i8*
  %121 = bitcast %"class.quic::QuicInterval"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 16, i1 false) #14
  %122 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 3
  %123 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %110, i64 3
  %124 = bitcast %"class.quic::QuicInterval"* %123 to i8*
  %125 = bitcast %"class.quic::QuicInterval"* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #14
  %126 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 4
  %127 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %110, i64 4
  %128 = icmp eq %"class.quic::QuicInterval"* %126, %83
  br i1 %128, label %129, label %109

129:                                              ; preds = %109, %105
  %130 = load i8, i8* %78, align 1
  br label %131

131:                                              ; preds = %129, %59
  %132 = phi i8 [ %130, %129 ], [ 0, %59 ]
  store i8 %132, i8* %71, align 1
  store i8 0, i8* %78, align 1
  tail call void @_ZN4absl18container_internal10btree_nodeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16clear_and_deleteEPSD_PSB_(%"class.absl::container_internal::btree_node"* %76, %"class.std::__1::allocator"* %52)
  %133 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 1
  %134 = bitcast %"class.absl::container_internal::btree_node"** %133 to i8**
  store i8* %67, i8** %134, align 8
  %135 = bitcast %"class.absl::container_internal::btree"* %0 to i8**
  store i8* %67, i8** %135, align 8
  br label %138

136:                                              ; preds = %57
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE18rebalance_or_splitEPNS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EE(%"class.absl::container_internal::btree"* %0, %"struct.absl::container_internal::btree_iterator.746"* nonnull %6)
  %137 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  br label %138

138:                                              ; preds = %131, %136, %46
  %139 = phi %"class.absl::container_internal::btree_node"* [ %85, %131 ], [ %137, %136 ], [ %48, %46 ]
  %140 = load i32, i32* %8, align 8
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %139, i64 8, i32 0
  %143 = getelementptr inbounds i8, i8* %142, i64 2
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = icmp sgt i64 %145, %141
  br i1 %146, label %147, label %204

147:                                              ; preds = %138
  %148 = sub nsw i64 %145, %141
  %149 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %139, i64 16, i32 0
  %150 = bitcast i8* %149 to %"class.quic::QuicInterval"*
  %151 = shl nuw nsw i64 %145, 32
  %152 = add nsw i64 %151, -4294967296
  %153 = ashr exact i64 %152, 32
  %154 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %150, i64 %153
  %155 = sub nsw i64 0, %148
  %156 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %154, i64 %155
  %157 = icmp eq i64 %148, 0
  br i1 %157, label %204, label %158

158:                                              ; preds = %147
  %159 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %150, i64 %145
  %160 = shl nuw nsw i64 %145, 4
  %161 = add nsw i64 %160, -16
  %162 = shl nsw i64 %141, 4
  %163 = sub nsw i64 %161, %162
  %164 = lshr exact i64 %163, 4
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 3
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %158, %168
  %169 = phi %"class.quic::QuicInterval"* [ %175, %168 ], [ %159, %158 ]
  %170 = phi %"class.quic::QuicInterval"* [ %174, %168 ], [ %154, %158 ]
  %171 = phi i64 [ %176, %168 ], [ %166, %158 ]
  %172 = bitcast %"class.quic::QuicInterval"* %169 to i8*
  %173 = bitcast %"class.quic::QuicInterval"* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 16, i1 false) #14
  %174 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %170, i64 -1
  %175 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %169, i64 -1
  %176 = add i64 %171, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %168, !llvm.loop !89

178:                                              ; preds = %168, %158
  %179 = phi %"class.quic::QuicInterval"* [ %159, %158 ], [ %175, %168 ]
  %180 = phi %"class.quic::QuicInterval"* [ %154, %158 ], [ %174, %168 ]
  %181 = icmp ult i64 %163, 48
  br i1 %181, label %202, label %182

182:                                              ; preds = %178, %182
  %183 = phi %"class.quic::QuicInterval"* [ %200, %182 ], [ %179, %178 ]
  %184 = phi %"class.quic::QuicInterval"* [ %199, %182 ], [ %180, %178 ]
  %185 = bitcast %"class.quic::QuicInterval"* %183 to i8*
  %186 = bitcast %"class.quic::QuicInterval"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 8 %186, i64 16, i1 false) #14
  %187 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %184, i64 -1
  %188 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %183, i64 -1
  %189 = bitcast %"class.quic::QuicInterval"* %188 to i8*
  %190 = bitcast %"class.quic::QuicInterval"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 16, i1 false) #14
  %191 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %184, i64 -2
  %192 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %183, i64 -2
  %193 = bitcast %"class.quic::QuicInterval"* %192 to i8*
  %194 = bitcast %"class.quic::QuicInterval"* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 16, i1 false) #14
  %195 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %184, i64 -3
  %196 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %183, i64 -3
  %197 = bitcast %"class.quic::QuicInterval"* %196 to i8*
  %198 = bitcast %"class.quic::QuicInterval"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 16, i1 false) #14
  %199 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %184, i64 -4
  %200 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %183, i64 -4
  %201 = icmp eq %"class.quic::QuicInterval"* %199, %156
  br i1 %201, label %202, label %182

202:                                              ; preds = %182, %178
  %203 = load i8, i8* %143, align 1
  br label %204

204:                                              ; preds = %138, %202, %147
  %205 = phi i8 [ %203, %202 ], [ %144, %147 ], [ %144, %138 ]
  %206 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %139, i64 16, i32 0
  %207 = bitcast i8* %206 to %"class.quic::QuicInterval"*
  %208 = and i64 %141, 255
  %209 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %207, i64 %208
  %210 = bitcast %"class.quic::QuicInterval"* %209 to i8*
  %211 = bitcast %"class.quic::QuicInterval"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %211, i64 16, i1 false) #14
  %212 = add i8 %205, 1
  store i8 %212, i8* %143, align 1
  %213 = getelementptr inbounds i8, i8* %142, i64 3
  %214 = load i8, i8* %213, align 1
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %270

216:                                              ; preds = %204
  %217 = zext i8 %212 to i64
  %218 = add nsw i64 %141, 1
  %219 = icmp slt i64 %218, %217
  br i1 %219, label %220, label %270

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %139, i64 256, i32 0
  %222 = bitcast i8* %221 to %"class.absl::container_internal::btree_node"**
  %223 = xor i64 %141, 3
  %224 = add nsw i64 %223, %217
  %225 = add nsw i64 %217, -2
  %226 = sub nsw i64 %225, %141
  %227 = and i64 %224, 3
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %240, label %229

229:                                              ; preds = %220, %229
  %230 = phi i64 [ %232, %229 ], [ %217, %220 ]
  %231 = phi i64 [ %238, %229 ], [ %227, %220 ]
  %232 = add nsw i64 %230, -1
  %233 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %232
  %234 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %233, align 8
  %235 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %230
  store %"class.absl::container_internal::btree_node"* %234, %"class.absl::container_internal::btree_node"** %235, align 8
  %236 = trunc i64 %230 to i8
  %237 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %234, i64 8, i32 0
  store i8 %236, i8* %237, align 1
  %238 = add i64 %231, -1
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %229, !llvm.loop !90

240:                                              ; preds = %229, %220
  %241 = phi i64 [ %217, %220 ], [ %232, %229 ]
  %242 = icmp ult i64 %226, 3
  br i1 %242, label %270, label %243

243:                                              ; preds = %240, %243
  %244 = phi i64 [ %263, %243 ], [ %241, %240 ]
  %245 = add nsw i64 %244, -1
  %246 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %245
  %247 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %246, align 8
  %248 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %244
  store %"class.absl::container_internal::btree_node"* %247, %"class.absl::container_internal::btree_node"** %248, align 8
  %249 = trunc i64 %244 to i8
  %250 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %247, i64 8, i32 0
  store i8 %249, i8* %250, align 1
  %251 = add nsw i64 %244, -2
  %252 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %251
  %253 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %252, align 8
  %254 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %245
  store %"class.absl::container_internal::btree_node"* %253, %"class.absl::container_internal::btree_node"** %254, align 8
  %255 = trunc i64 %245 to i8
  %256 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %253, i64 8, i32 0
  store i8 %255, i8* %256, align 1
  %257 = add nsw i64 %244, -3
  %258 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %257
  %259 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %258, align 8
  %260 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %251
  store %"class.absl::container_internal::btree_node"* %259, %"class.absl::container_internal::btree_node"** %260, align 8
  %261 = trunc i64 %251 to i8
  %262 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %259, i64 8, i32 0
  store i8 %261, i8* %262, align 1
  %263 = add nsw i64 %244, -4
  %264 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %263
  %265 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %264, align 8
  %266 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %222, i64 %257
  store %"class.absl::container_internal::btree_node"* %265, %"class.absl::container_internal::btree_node"** %266, align 8
  %267 = trunc i64 %257 to i8
  %268 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %265, i64 8, i32 0
  store i8 %267, i8* %268, align 1
  %269 = icmp slt i64 %218, %263
  br i1 %269, label %243, label %270

270:                                              ; preds = %240, %243, %204, %216
  %271 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %0, i64 0, i32 2
  %272 = load i64, i64* %271, align 8
  %273 = add nsw i64 %272, 1
  store i64 %273, i64* %271, align 8
  %274 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  %275 = load i32, i32* %8, align 8
  %276 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } undef, %"class.absl::container_internal::btree_node"* %274, 0
  %277 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } %276, i32 %275, 1
  ret { %"class.absl::container_internal::btree_node"*, i32 } %277
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE13insert_uniqueIS5_JS5_EEENS9_4pairINS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EEbEERKT_DpOT0_(%"struct.std::__1::pair.748"* noalias sret, %"class.absl::container_internal::btree"*, %"class.quic::QuicInterval"* dereferenceable(16), %"class.quic::QuicInterval"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 32) #18
  %10 = bitcast i8* %9 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %9, i64 9
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %9, i64 10
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 11
  store i8 1, i8* %14, align 1
  %15 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 1
  %16 = bitcast %"class.absl::container_internal::btree_node"** %15 to i8**
  store i8* %9, i8** %16, align 8
  %17 = bitcast %"class.absl::container_internal::btree"* %1 to i8**
  store i8* %9, i8** %17, align 8
  br label %18

18:                                               ; preds = %8, %4
  %19 = getelementptr inbounds %"class.absl::container_internal::btree", %"class.absl::container_internal::btree"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %2, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  br label %22

22:                                               ; preds = %54, %18
  %23 = phi %"class.absl::container_internal::btree_node"** [ %19, %18 ], [ %58, %54 ]
  %24 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %23, align 8
  %25 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %24, i64 8, i32 0
  %26 = getelementptr inbounds i8, i8* %25, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %22
  %30 = zext i8 %27 to i32
  %31 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %24, i64 16, i32 0
  %32 = bitcast i8* %31 to %"class.quic::QuicInterval"*
  br label %33

33:                                               ; preds = %33, %29
  %34 = phi i32 [ 0, %29 ], [ %44, %33 ]
  %35 = phi i32 [ %30, %29 ], [ %43, %33 ]
  %36 = add nsw i32 %35, %34
  %37 = ashr i32 %36, 1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %32, i64 %38, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %40, %21
  %42 = add nsw i32 %37, 1
  %43 = select i1 %41, i32 %35, i32 %37
  %44 = select i1 %41, i32 %42, i32 %34
  %45 = icmp eq i32 %44, %43
  br i1 %45, label %46, label %33

46:                                               ; preds = %33, %22
  %47 = phi i32 [ 0, %22 ], [ %43, %33 ]
  %48 = getelementptr inbounds i8, i8* %25, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %46
  %52 = zext i8 %27 to i32
  %53 = icmp eq i32 %47, %52
  br i1 %53, label %59, label %75

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %24, i64 256, i32 0
  %56 = bitcast i8* %55 to %"class.absl::container_internal::btree_node"**
  %57 = sext i32 %47 to i64
  %58 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %56, i64 %57
  br label %22

59:                                               ; preds = %51, %67
  %60 = phi %"class.absl::container_internal::btree_node"* [ %62, %67 ], [ %24, %51 ]
  %61 = bitcast %"class.absl::container_internal::btree_node"* %60 to %"class.absl::container_internal::btree_node"**
  %62 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %61, align 8
  %63 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %62, i64 8, i32 0
  %64 = getelementptr inbounds i8, i8* %63, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %92

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %60, i64 8, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %63, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %69, %71
  br i1 %72, label %59, label %73

73:                                               ; preds = %67
  %74 = zext i8 %69 to i32
  br label %75

75:                                               ; preds = %73, %51
  %76 = phi i32 [ %74, %73 ], [ %47, %51 ]
  %77 = phi %"class.absl::container_internal::btree_node"* [ %62, %73 ], [ %24, %51 ]
  %78 = icmp eq %"class.absl::container_internal::btree_node"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %77, i64 16, i32 0
  %81 = bitcast i8* %80 to %"class.quic::QuicInterval"*
  %82 = sext i32 %76 to i64
  %83 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %81, i64 %82, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %21, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 0
  store %"class.absl::container_internal::btree_node"* %77, %"class.absl::container_internal::btree_node"** %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %76, i32* %88, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 2, i64 0
  %90 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  %91 = bitcast i8* %89 to i32*
  store i32 -1431655766, i32* %91, align 4
  store i8 0, i8* %90, align 8
  br label %99

92:                                               ; preds = %59, %79, %75
  %93 = tail call { %"class.absl::container_internal::btree_node"*, i32 } @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE16internal_emplaceIJS5_EEENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESK_DpOT_(%"class.absl::container_internal::btree"* %1, %"class.absl::container_internal::btree_node"* %24, i32 %47, %"class.quic::QuicInterval"* dereferenceable(16) %3)
  %94 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %93, 0
  %95 = extractvalue { %"class.absl::container_internal::btree_node"*, i32 } %93, 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 0
  store %"class.absl::container_internal::btree_node"* %94, %"class.absl::container_internal::btree_node"** %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 0, i32 1
  store i32 %95, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.748", %"struct.std::__1::pair.748"* %0, i64 0, i32 1
  store i8 1, i8* %98, align 8
  br label %99

99:                                               ; preds = %86, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.absl::container_internal::btree_node"*, i32 } @_ZNK4quic15QuicIntervalSetImE25FindIntersectionCandidateERKNS_12QuicIntervalImEE(%"class.quic::QuicIntervalSet"*, %"class.quic::QuicInterval"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %3, align 8
  br label %6

6:                                                ; preds = %38, %2
  %7 = phi %"class.absl::container_internal::btree_node"** [ %4, %2 ], [ %42, %38 ]
  %8 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %7, align 8
  %9 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 8, i32 0
  %10 = getelementptr inbounds i8, i8* %9, i64 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = zext i8 %11 to i32
  %15 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 16, i32 0
  %16 = bitcast i8* %15 to %"class.quic::QuicInterval"*
  br label %17

17:                                               ; preds = %17, %13
  %18 = phi i32 [ 0, %13 ], [ %28, %17 ]
  %19 = phi i32 [ %14, %13 ], [ %27, %17 ]
  %20 = add nsw i32 %19, %18
  %21 = ashr i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %16, i64 %22, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp uge i64 %5, %24
  %26 = add nsw i32 %21, 1
  %27 = select i1 %25, i32 %19, i32 %21
  %28 = select i1 %25, i32 %26, i32 %18
  %29 = icmp eq i32 %28, %27
  br i1 %29, label %30, label %17

30:                                               ; preds = %17, %6
  %31 = phi i32 [ 0, %6 ], [ %27, %17 ]
  %32 = getelementptr inbounds i8, i8* %9, i64 3
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = zext i8 %11 to i32
  %37 = icmp eq i32 %31, %36
  br i1 %37, label %43, label %59

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %8, i64 256, i32 0
  %40 = bitcast i8* %39 to %"class.absl::container_internal::btree_node"**
  %41 = sext i32 %31 to i64
  %42 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %40, i64 %41
  br label %6

43:                                               ; preds = %35, %51
  %44 = phi %"class.absl::container_internal::btree_node"* [ %46, %51 ], [ %8, %35 ]
  %45 = bitcast %"class.absl::container_internal::btree_node"* %44 to %"class.absl::container_internal::btree_node"**
  %46 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %45, align 8
  %47 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %46, i64 8, i32 0
  %48 = getelementptr inbounds i8, i8* %47, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %44, i64 8, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = getelementptr inbounds i8, i8* %47, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %53, %55
  br i1 %56, label %43, label %57

57:                                               ; preds = %51
  %58 = zext i8 %53 to i32
  br label %59

59:                                               ; preds = %57, %35
  %60 = phi i32 [ %58, %57 ], [ %31, %35 ]
  %61 = phi %"class.absl::container_internal::btree_node"* [ %46, %57 ], [ %8, %35 ]
  %62 = icmp eq %"class.absl::container_internal::btree_node"* %61, null
  br i1 %62, label %63, label %70

63:                                               ; preds = %43, %59
  %64 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %64, align 8
  %66 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %65, i64 8, i32 0
  %67 = getelementptr inbounds i8, i8* %66, i64 2
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  br label %70

70:                                               ; preds = %59, %63
  %71 = phi %"class.absl::container_internal::btree_node"* [ %65, %63 ], [ %61, %59 ]
  %72 = phi i32 [ %69, %63 ], [ %60, %59 ]
  %73 = ptrtoint %"class.absl::container_internal::btree_node"* %71 to i64
  %74 = bitcast %"class.quic::QuicIntervalSet"* %0 to %"class.absl::container_internal::btree_node"***
  %75 = load %"class.absl::container_internal::btree_node"**, %"class.absl::container_internal::btree_node"*** %74, align 8
  %76 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %75, align 8
  %77 = icmp ne %"class.absl::container_internal::btree_node"* %71, %76
  %78 = icmp ne i32 %72, 0
  %79 = or i1 %78, %77
  br i1 %79, label %80, label %136

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %71, i64 8, i32 0
  %82 = getelementptr inbounds i8, i8* %81, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %80
  %86 = add nsw i32 %72, -1
  %87 = icmp sgt i32 %72, 0
  br i1 %87, label %136, label %88

88:                                               ; preds = %85, %96
  %89 = phi %"class.absl::container_internal::btree_node"* [ %91, %96 ], [ %71, %85 ]
  %90 = bitcast %"class.absl::container_internal::btree_node"* %89 to %"class.absl::container_internal::btree_node"**
  %91 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %90, align 8
  %92 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %91, i64 8, i32 0
  %93 = getelementptr inbounds i8, i8* %92, i64 3
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %136

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %89, i64 8, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %88, label %132

100:                                              ; preds = %80
  %101 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %71, i64 256, i32 0
  %102 = bitcast i8* %101 to %"class.absl::container_internal::btree_node"**
  %103 = sext i32 %72 to i64
  %104 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %102, i64 %103
  %105 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %104, align 8
  %106 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %105, i64 8, i32 0
  %107 = getelementptr inbounds i8, i8* %106, i64 3
  %108 = load i8, i8* %107, align 1
  %109 = icmp eq i8 %108, 0
  %110 = getelementptr inbounds i8, i8* %106, i64 2
  %111 = load i8, i8* %110, align 1
  br i1 %109, label %112, label %126

112:                                              ; preds = %100, %112
  %113 = phi i8 [ %125, %112 ], [ %111, %100 ]
  %114 = phi %"class.absl::container_internal::btree_node"* [ %119, %112 ], [ %105, %100 ]
  %115 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %114, i64 256, i32 0
  %116 = bitcast i8* %115 to %"class.absl::container_internal::btree_node"**
  %117 = zext i8 %113 to i64
  %118 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %116, i64 %117
  %119 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %118, align 8
  %120 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %119, i64 8, i32 0
  %121 = getelementptr inbounds i8, i8* %120, i64 3
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 0
  %124 = getelementptr inbounds i8, i8* %120, i64 2
  %125 = load i8, i8* %124, align 1
  br i1 %123, label %112, label %126

126:                                              ; preds = %112, %100
  %127 = phi %"class.absl::container_internal::btree_node"* [ %105, %100 ], [ %119, %112 ]
  %128 = phi i8 [ %111, %100 ], [ %125, %112 ]
  %129 = ptrtoint %"class.absl::container_internal::btree_node"* %127 to i64
  %130 = zext i8 %128 to i32
  %131 = add nsw i32 %130, -1
  br label %136

132:                                              ; preds = %96
  %133 = ptrtoint %"class.absl::container_internal::btree_node"* %91 to i64
  %134 = zext i8 %98 to i32
  %135 = add nsw i32 %134, -1
  br label %136

136:                                              ; preds = %88, %132, %70, %126, %85
  %137 = phi i64 [ %129, %126 ], [ %73, %85 ], [ %73, %70 ], [ %133, %132 ], [ %73, %88 ]
  %138 = phi i32 [ %131, %126 ], [ %86, %85 ], [ 0, %70 ], [ %135, %132 ], [ %86, %88 ]
  %139 = inttoptr i64 %137 to %"class.absl::container_internal::btree_node"*
  %140 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } undef, %"class.absl::container_internal::btree_node"* %139, 0
  %141 = insertvalue { %"class.absl::container_internal::btree_node"*, i32 } %140, i32 %138, 1
  ret { %"class.absl::container_internal::btree_node"*, i32 } %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic15QuicIntervalSetImE28FindNextIntersectingPairImplIS1_ZNS1_37FindNextIntersectingPairAndEraseHolesERKS1_PN4absl18container_internal14btree_iteratorIKNS6_10btree_nodeINS6_10set_paramsINS_12QuicIntervalImEENS1_12IntervalLessENSt3__19allocatorISB_EELi256ELb0EEEEERKSB_PSJ_EESN_EUlPS1_SM_SM_E_EEbPT_S4_SN_SN_T0_(%"class.quic::QuicIntervalSet"*, %"class.quic::QuicIntervalSet"* dereferenceable(24), %"struct.absl::container_internal::btree_iterator.705"*, %"struct.absl::container_internal::btree_iterator.705"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::pair.750", align 8
  %6 = alloca %"struct.std::__1::pair.750", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = icmp eq %"class.quic::QuicIntervalSet"* %0, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.42, i64 0, i64 0), i32 665, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i64 0, i64 0)) #14
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  br label %12

12:                                               ; preds = %4, %9
  %13 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %13, align 8
  %15 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.705", %"struct.absl::container_internal::btree_iterator.705"* %2, i64 0, i32 0
  %16 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, align 8
  %17 = icmp eq %"class.absl::container_internal::btree_node"* %16, %14
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %14, i64 8, i32 0
  %20 = getelementptr inbounds i8, i8* %19, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.705", %"struct.absl::container_internal::btree_iterator.705"* %2, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %22
  br i1 %25, label %367, label %26

26:                                               ; preds = %12, %18
  %27 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %27, align 8
  %29 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.705", %"struct.absl::container_internal::btree_iterator.705"* %3, i64 0, i32 0
  %30 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %29, align 8
  %31 = icmp eq %"class.absl::container_internal::btree_node"* %30, %28
  br i1 %31, label %32, label %40

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %28, i64 8, i32 0
  %34 = getelementptr inbounds i8, i8* %33, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.705", %"struct.absl::container_internal::btree_iterator.705"* %3, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, %36
  br i1 %39, label %367, label %40

40:                                               ; preds = %32, %26
  %41 = icmp eq %"class.absl::container_internal::btree_node"* %16, null
  br i1 %41, label %51, label %42, !prof !48

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.705", %"struct.absl::container_internal::btree_iterator.705"* %2, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.absl::container_internal::btree_iterator.705", %"struct.absl::container_internal::btree_iterator.705"* %3, i64 0, i32 1
  %45 = bitcast %"struct.absl::container_internal::btree_iterator.705"* %2 to i64*
  %46 = bitcast %"struct.std::__1::pair.750"* %5 to i8*
  %47 = getelementptr inbounds %"class.quic::QuicIntervalSet", %"class.quic::QuicIntervalSet"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::pair.750", %"struct.std::__1::pair.750"* %5, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::pair.750", %"struct.std::__1::pair.750"* %5, i64 0, i32 1, i32 1
  %50 = bitcast %"struct.absl::container_internal::btree_iterator.705"* %3 to i64*
  br label %52

51:                                               ; preds = %355, %40
  call void @llvm.trap() #14
  unreachable

52:                                               ; preds = %42, %355
  %53 = phi %"class.absl::container_internal::btree_node"* [ %30, %42 ], [ %234, %355 ]
  %54 = phi %"class.absl::container_internal::btree_node"* [ %16, %42 ], [ %356, %355 ]
  %55 = load i32, i32* %43, align 8
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %57, label %58, !prof !48

57:                                               ; preds = %52
  call void @llvm.trap() #14
  unreachable

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %54, i64 8, i32 0
  %60 = getelementptr inbounds i8, i8* %59, i64 2
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp slt i32 %55, %62
  br i1 %63, label %65, label %64, !prof !2

64:                                               ; preds = %58
  call void @llvm.trap() #14
  unreachable

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %54, i64 16, i32 0
  %67 = bitcast i8* %66 to %"class.quic::QuicInterval"*
  %68 = sext i32 %55 to i64
  %69 = icmp eq %"class.absl::container_internal::btree_node"* %53, null
  br i1 %69, label %70, label %71, !prof !48

70:                                               ; preds = %65
  call void @llvm.trap() #14
  unreachable

71:                                               ; preds = %65
  %72 = load i32, i32* %44, align 8
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %75, !prof !48

74:                                               ; preds = %71
  call void @llvm.trap() #14
  unreachable

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %53, i64 8, i32 0
  %77 = getelementptr inbounds i8, i8* %76, i64 2
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = icmp slt i32 %72, %79
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %75
  call void @llvm.trap() #14
  unreachable

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %53, i64 16, i32 0
  %84 = bitcast i8* %83 to %"class.quic::QuicInterval"*
  %85 = sext i32 %72 to i64
  %86 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %67, i64 %68, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %67, i64 %68, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp ult i64 %87, %89
  br i1 %90, label %91, label %101

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %84, i64 %85, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %84, i64 %85, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp ult i64 %93, %95
  %97 = icmp ult i64 %87, %95
  %98 = and i1 %96, %97
  %99 = icmp ugt i64 %89, %93
  %100 = and i1 %99, %98
  br i1 %100, label %367, label %101

101:                                              ; preds = %82, %91
  br label %102

102:                                              ; preds = %214, %101
  %103 = phi i32 [ %55, %101 ], [ %215, %214 ]
  %104 = phi %"class.absl::container_internal::btree_node"* [ %54, %101 ], [ %216, %214 ]
  %105 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %104, i64 8, i32 0
  %106 = getelementptr inbounds i8, i8* %105, i64 2
  %107 = icmp eq %"class.absl::container_internal::btree_node"* %104, null
  %108 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %104, i64 8, i32 0
  %109 = getelementptr inbounds i8, i8* %108, i64 2
  %110 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %104, i64 16, i32 0
  %111 = bitcast i8* %110 to %"class.quic::QuicInterval"*
  %112 = getelementptr inbounds i8, i8* %108, i64 3
  %113 = ptrtoint %"class.absl::container_internal::btree_node"* %104 to i64
  br label %114

114:                                              ; preds = %165, %102
  %115 = phi i32 [ %103, %102 ], [ %161, %165 ]
  %116 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %13, align 8
  %117 = icmp eq %"class.absl::container_internal::btree_node"* %104, %116
  br i1 %117, label %118, label %122

118:                                              ; preds = %114
  %119 = load i8, i8* %106, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %115, %120
  br i1 %121, label %220, label %122

122:                                              ; preds = %118, %114
  br i1 %107, label %123, label %124, !prof !48

123:                                              ; preds = %122
  call void @llvm.trap() #14
  unreachable

124:                                              ; preds = %122
  %125 = icmp slt i32 %115, 0
  br i1 %125, label %126, label %127, !prof !48

126:                                              ; preds = %124
  call void @llvm.trap() #14
  unreachable

127:                                              ; preds = %124
  %128 = load i8, i8* %109, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp slt i32 %115, %129
  br i1 %130, label %132, label %131, !prof !2

131:                                              ; preds = %127
  call void @llvm.trap() #14
  unreachable

132:                                              ; preds = %127
  %133 = sext i32 %115 to i64
  %134 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %111, i64 %133, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %29, align 8
  %137 = icmp eq %"class.absl::container_internal::btree_node"* %136, null
  br i1 %137, label %138, label %139, !prof !48

138:                                              ; preds = %132
  call void @llvm.trap() #14
  unreachable

139:                                              ; preds = %132
  %140 = load i32, i32* %44, align 8
  %141 = icmp slt i32 %140, 0
  br i1 %141, label %142, label %143, !prof !48

142:                                              ; preds = %139
  call void @llvm.trap() #14
  unreachable

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %136, i64 8, i32 0
  %145 = getelementptr inbounds i8, i8* %144, i64 2
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = icmp slt i32 %140, %147
  br i1 %148, label %150, label %149, !prof !2

149:                                              ; preds = %143
  call void @llvm.trap() #14
  unreachable

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %136, i64 16, i32 0
  %152 = bitcast i8* %151 to %"class.quic::QuicInterval"*
  %153 = sext i32 %140 to i64
  %154 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %152, i64 %153, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp ugt i64 %135, %155
  br i1 %156, label %220, label %157

157:                                              ; preds = %150
  %158 = load i8, i8* %112, align 1
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %191, label %160

160:                                              ; preds = %157
  %161 = add nuw nsw i32 %115, 1
  store i32 %161, i32* %43, align 8
  %162 = load i8, i8* %109, align 1
  %163 = zext i8 %162 to i32
  %164 = icmp slt i32 %161, %163
  br i1 %164, label %165, label %166

165:                                              ; preds = %160, %169, %190
  br label %114

166:                                              ; preds = %160
  %167 = load i8, i8* %112, align 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %191, label %169

169:                                              ; preds = %166
  %170 = icmp eq i32 %161, %163
  br i1 %170, label %171, label %165

171:                                              ; preds = %169, %180
  %172 = phi i8* [ %186, %180 ], [ %108, %169 ]
  %173 = phi %"class.absl::container_internal::btree_node"* [ %185, %180 ], [ %104, %169 ]
  %174 = bitcast %"class.absl::container_internal::btree_node"* %173 to %"class.absl::container_internal::btree_node"**
  %175 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %174, align 8
  %176 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %175, i64 8, i32 0
  %177 = getelementptr inbounds i8, i8* %176, i64 3
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %190

180:                                              ; preds = %171
  %181 = load i8, i8* %172, align 1
  %182 = zext i8 %181 to i32
  store i32 %182, i32* %43, align 8
  %183 = bitcast %"class.absl::container_internal::btree_node"* %173 to i64*
  %184 = load i64, i64* %183, align 8
  store i64 %184, i64* %45, align 8
  %185 = inttoptr i64 %184 to %"class.absl::container_internal::btree_node"*
  %186 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %185, i64 8, i32 0
  %187 = getelementptr inbounds i8, i8* %186, i64 2
  %188 = load i8, i8* %187, align 1
  %189 = icmp eq i8 %181, %188
  br i1 %189, label %171, label %217

190:                                              ; preds = %171
  store i64 %113, i64* %45, align 8
  store i32 %161, i32* %43, align 8
  br label %165

191:                                              ; preds = %166, %157
  %192 = phi i32 [ %161, %166 ], [ %115, %157 ]
  %193 = add nuw nsw i32 %192, 1
  %194 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %104, i64 256, i32 0
  %195 = bitcast i8* %194 to %"class.absl::container_internal::btree_node"**
  %196 = sext i32 %193 to i64
  %197 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %195, i64 %196
  %198 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %197, align 8
  store %"class.absl::container_internal::btree_node"* %198, %"class.absl::container_internal::btree_node"** %15, align 8
  %199 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %198, i64 8, i32 0
  %200 = getelementptr inbounds i8, i8* %199, i64 3
  %201 = load i8, i8* %200, align 1
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %212

203:                                              ; preds = %191, %203
  %204 = phi %"class.absl::container_internal::btree_node"* [ %207, %203 ], [ %198, %191 ]
  %205 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %204, i64 256, i32 0
  %206 = bitcast i8* %205 to %"class.absl::container_internal::btree_node"**
  %207 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %206, align 8
  store %"class.absl::container_internal::btree_node"* %207, %"class.absl::container_internal::btree_node"** %15, align 8
  %208 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %207, i64 8, i32 0
  %209 = getelementptr inbounds i8, i8* %208, i64 3
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %203, label %212

212:                                              ; preds = %203, %191
  %213 = phi %"class.absl::container_internal::btree_node"* [ %198, %191 ], [ %207, %203 ]
  store i32 0, i32* %43, align 8
  br label %214

214:                                              ; preds = %212, %217
  %215 = phi i32 [ %218, %217 ], [ 0, %212 ]
  %216 = phi %"class.absl::container_internal::btree_node"* [ %219, %217 ], [ %213, %212 ]
  br label %102

217:                                              ; preds = %180
  %218 = zext i8 %181 to i32
  %219 = inttoptr i64 %184 to %"class.absl::container_internal::btree_node"*
  br label %214

220:                                              ; preds = %118, %150
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #14
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE11erase_rangeENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESJ_(%"struct.std::__1::pair.750"* nonnull sret %5, %"class.absl::container_internal::btree"* %47, %"class.absl::container_internal::btree_node"* nonnull %54, i32 %55, %"class.absl::container_internal::btree_node"* %104, i32 %115) #14
  %221 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %48, align 8
  %222 = load i32, i32* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #14
  store %"class.absl::container_internal::btree_node"* %221, %"class.absl::container_internal::btree_node"** %15, align 8
  store i32 %222, i32* %43, align 8
  %223 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %13, align 8
  %224 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %223, i64 8, i32 0
  %225 = getelementptr inbounds i8, i8* %224, i64 2
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = icmp eq %"class.absl::container_internal::btree_node"* %221, %223
  %229 = icmp eq i32 %222, %227
  %230 = and i1 %228, %229
  br i1 %230, label %367, label %231

231:                                              ; preds = %220
  %232 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %29, align 8
  br label %233

233:                                              ; preds = %345, %231
  %234 = phi %"class.absl::container_internal::btree_node"* [ %232, %231 ], [ %346, %345 ]
  %235 = icmp eq %"class.absl::container_internal::btree_node"* %234, null
  %236 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %234, i64 8, i32 0
  %237 = getelementptr inbounds i8, i8* %236, i64 2
  %238 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %234, i64 16, i32 0
  %239 = bitcast i8* %238 to %"class.quic::QuicInterval"*
  %240 = getelementptr inbounds i8, i8* %236, i64 3
  %241 = ptrtoint %"class.absl::container_internal::btree_node"* %234 to i64
  br label %242

242:                                              ; preds = %296, %233
  %243 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %27, align 8
  %244 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %243, i64 8, i32 0
  %245 = getelementptr inbounds i8, i8* %244, i64 2
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq %"class.absl::container_internal::btree_node"* %234, %243
  br i1 %247, label %248, label %252

248:                                              ; preds = %242
  %249 = zext i8 %246 to i32
  %250 = load i32, i32* %44, align 8
  %251 = icmp eq i32 %250, %249
  br i1 %251, label %358, label %252

252:                                              ; preds = %248, %242
  br i1 %235, label %253, label %254, !prof !48

253:                                              ; preds = %252
  call void @llvm.trap() #14
  unreachable

254:                                              ; preds = %252
  %255 = load i32, i32* %44, align 8
  %256 = icmp slt i32 %255, 0
  br i1 %256, label %257, label %258, !prof !48

257:                                              ; preds = %254
  call void @llvm.trap() #14
  unreachable

258:                                              ; preds = %254
  %259 = load i8, i8* %237, align 1
  %260 = zext i8 %259 to i32
  %261 = icmp slt i32 %255, %260
  br i1 %261, label %263, label %262, !prof !2

262:                                              ; preds = %258
  call void @llvm.trap() #14
  unreachable

263:                                              ; preds = %258
  %264 = sext i32 %255 to i64
  %265 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %239, i64 %264, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, align 8
  %268 = icmp eq %"class.absl::container_internal::btree_node"* %267, null
  br i1 %268, label %269, label %270, !prof !48

269:                                              ; preds = %263
  call void @llvm.trap() #14
  unreachable

270:                                              ; preds = %263
  %271 = load i32, i32* %43, align 8
  %272 = icmp slt i32 %271, 0
  br i1 %272, label %273, label %274, !prof !48

273:                                              ; preds = %270
  call void @llvm.trap() #14
  unreachable

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %267, i64 8, i32 0
  %276 = getelementptr inbounds i8, i8* %275, i64 2
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = icmp slt i32 %271, %278
  br i1 %279, label %281, label %280, !prof !2

280:                                              ; preds = %274
  call void @llvm.trap() #14
  unreachable

281:                                              ; preds = %274
  %282 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %267, i64 16, i32 0
  %283 = bitcast i8* %282 to %"class.quic::QuicInterval"*
  %284 = sext i32 %271 to i64
  %285 = getelementptr inbounds %"class.quic::QuicInterval", %"class.quic::QuicInterval"* %283, i64 %284, i32 0
  %286 = load i64, i64* %285, align 8
  %287 = icmp ugt i64 %266, %286
  br i1 %287, label %349, label %288

288:                                              ; preds = %281
  %289 = load i8, i8* %240, align 1
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %322, label %291

291:                                              ; preds = %288
  %292 = add nuw nsw i32 %255, 1
  store i32 %292, i32* %44, align 8
  %293 = load i8, i8* %237, align 1
  %294 = zext i8 %293 to i32
  %295 = icmp slt i32 %292, %294
  br i1 %295, label %296, label %297

296:                                              ; preds = %291, %300, %321
  br label %242

297:                                              ; preds = %291
  %298 = load i8, i8* %240, align 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %322, label %300

300:                                              ; preds = %297
  %301 = icmp eq i32 %292, %294
  br i1 %301, label %302, label %296

302:                                              ; preds = %300, %311
  %303 = phi i8* [ %317, %311 ], [ %236, %300 ]
  %304 = phi %"class.absl::container_internal::btree_node"* [ %316, %311 ], [ %234, %300 ]
  %305 = bitcast %"class.absl::container_internal::btree_node"* %304 to %"class.absl::container_internal::btree_node"**
  %306 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %305, align 8
  %307 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %306, i64 8, i32 0
  %308 = getelementptr inbounds i8, i8* %307, i64 3
  %309 = load i8, i8* %308, align 1
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %321

311:                                              ; preds = %302
  %312 = load i8, i8* %303, align 1
  %313 = zext i8 %312 to i32
  store i32 %313, i32* %44, align 8
  %314 = bitcast %"class.absl::container_internal::btree_node"* %304 to i64*
  %315 = load i64, i64* %314, align 8
  store i64 %315, i64* %50, align 8
  %316 = inttoptr i64 %315 to %"class.absl::container_internal::btree_node"*
  %317 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %316, i64 8, i32 0
  %318 = getelementptr inbounds i8, i8* %317, i64 2
  %319 = load i8, i8* %318, align 1
  %320 = icmp eq i8 %312, %319
  br i1 %320, label %302, label %347

321:                                              ; preds = %302
  store i64 %241, i64* %50, align 8
  store i32 %292, i32* %44, align 8
  br label %296

322:                                              ; preds = %297, %288
  %323 = phi i32 [ %292, %297 ], [ %255, %288 ]
  %324 = add nuw nsw i32 %323, 1
  %325 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %234, i64 256, i32 0
  %326 = bitcast i8* %325 to %"class.absl::container_internal::btree_node"**
  %327 = sext i32 %324 to i64
  %328 = getelementptr inbounds %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %326, i64 %327
  %329 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %328, align 8
  store %"class.absl::container_internal::btree_node"* %329, %"class.absl::container_internal::btree_node"** %29, align 8
  %330 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %329, i64 8, i32 0
  %331 = getelementptr inbounds i8, i8* %330, i64 3
  %332 = load i8, i8* %331, align 1
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %334, label %343

334:                                              ; preds = %322, %334
  %335 = phi %"class.absl::container_internal::btree_node"* [ %338, %334 ], [ %329, %322 ]
  %336 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %335, i64 256, i32 0
  %337 = bitcast i8* %336 to %"class.absl::container_internal::btree_node"**
  %338 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %337, align 8
  store %"class.absl::container_internal::btree_node"* %338, %"class.absl::container_internal::btree_node"** %29, align 8
  %339 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %338, i64 8, i32 0
  %340 = getelementptr inbounds i8, i8* %339, i64 3
  %341 = load i8, i8* %340, align 1
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %334, label %343

343:                                              ; preds = %334, %322
  %344 = phi %"class.absl::container_internal::btree_node"* [ %329, %322 ], [ %338, %334 ]
  store i32 0, i32* %44, align 8
  br label %345

345:                                              ; preds = %343, %347
  %346 = phi %"class.absl::container_internal::btree_node"* [ %348, %347 ], [ %344, %343 ]
  br label %233

347:                                              ; preds = %311
  %348 = inttoptr i64 %315 to %"class.absl::container_internal::btree_node"*
  br label %345

349:                                              ; preds = %281
  br i1 %247, label %350, label %355

350:                                              ; preds = %349
  %351 = zext i8 %246 to i32
  %352 = icmp eq i32 %255, %351
  br i1 %352, label %358, label %353

353:                                              ; preds = %350
  %354 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, align 8
  br label %355

355:                                              ; preds = %353, %349
  %356 = phi %"class.absl::container_internal::btree_node"* [ %354, %353 ], [ %267, %349 ]
  %357 = icmp eq %"class.absl::container_internal::btree_node"* %356, null
  br i1 %357, label %51, label %52, !prof !48

358:                                              ; preds = %350, %248
  %359 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %15, align 8
  %360 = load i32, i32* %43, align 8
  %361 = load %"class.absl::container_internal::btree_node"*, %"class.absl::container_internal::btree_node"** %13, align 8
  %362 = getelementptr inbounds %"class.absl::container_internal::btree_node", %"class.absl::container_internal::btree_node"* %361, i64 8, i32 0
  %363 = getelementptr inbounds i8, i8* %362, i64 2
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i32
  %366 = bitcast %"struct.std::__1::pair.750"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %366) #14
  call void @_ZN4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE11erase_rangeENS0_14btree_iteratorINS0_10btree_nodeISC_EERS5_PS5_EESJ_(%"struct.std::__1::pair.750"* nonnull sret %6, %"class.absl::container_internal::btree"* %47, %"class.absl::container_internal::btree_node"* %359, i32 %360, %"class.absl::container_internal::btree_node"* %361, i32 %365) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %366) #14
  br label %367

367:                                              ; preds = %220, %91, %18, %32, %358
  %368 = phi i1 [ false, %358 ], [ false, %32 ], [ false, %18 ], [ false, %220 ], [ true, %91 ]
  ret i1 %368
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN4quic30QpackDecodedHeadersAccumulatorC1EjPNS_12QpackDecoderEPNS0_7VisitorEm(%"class.quic::QpackDecodedHeadersAccumulator"*, i32, %"class.quic::QpackDecoder"*, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64) unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4absl16numbers_internal18safe_strtou64_baseENS_11string_viewEPmi(i8*, i64, i64*, i32) local_unnamed_addr #1

declare void @_ZN4quic17WebTransportHttp3C1EPNS_15QuicSpdySessionEPNS_14QuicSpdyStreamEmm(%"class.quic::WebTransportHttp3"*, %"class.quic::QuicSpdySession"*, %"class.quic::QuicSpdyStream"*, i64, i64) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4spdy16Http2HeaderBlock4findEN4absl11string_viewE: argument 0"}
!5 = distinct !{!5, !"_ZN4spdy16Http2HeaderBlock4findEN4absl11string_viewE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4spdy16Http2HeaderBlock4findEN4absl11string_viewE: argument 0"}
!8 = distinct !{!8, !"_ZN4spdy16Http2HeaderBlock4findEN4absl11string_viewE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4absl6StrCatERKNS_8AlphaNumE: argument 0"}
!11 = distinct !{!11, !"_ZN4absl6StrCatERKNS_8AlphaNumE"}
!12 = !{i8 0, i8 2}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4absl6StrCatERKNS_8AlphaNumE: argument 0"}
!15 = distinct !{!15, !"_ZN4absl6StrCatERKNS_8AlphaNumE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__19make_pairIRKPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSC_IT0_E4typeEEEOSD_OSG_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__19make_pairIRKPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSC_IT0_E4typeEEEOSD_OSG_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN4quic19QuicMemSliceStorage6ToSpanEv: argument 0"}
!21 = distinct !{!21, !"_ZN4quic19QuicMemSliceStorage6ToSpanEv"}
!22 = !{!23, !20}
!23 = distinct !{!23, !24, !"_ZN4quic23QuicMemSliceStorageImpl6ToSpanEv: argument 0"}
!24 = distinct !{!24, !"_ZN4quic23QuicMemSliceStorageImpl6ToSpanEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN4quic19QuicMemSliceStorage6ToSpanEv: argument 0"}
!27 = distinct !{!27, !"_ZN4quic19QuicMemSliceStorage6ToSpanEv"}
!28 = !{!29, !26}
!29 = distinct !{!29, !30, !"_ZN4quic23QuicMemSliceStorageImpl6ToSpanEv: argument 0"}
!30 = distinct !{!30, !"_ZN4quic23QuicMemSliceStorageImpl6ToSpanEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4quic11QuicSession13user_agent_idEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4quic11QuicSession13user_agent_idEv"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE: argument 0"}
!36 = distinct !{!36, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE"}
!37 = distinct !{!37, !38, !"_ZN6quiche15QuicheTextUtils7ToLowerEN4absl11string_viewE: argument 0"}
!38 = distinct !{!38, !"_ZN6quiche15QuicheTextUtils7ToLowerEN4absl11string_viewE"}
!39 = !{!40, !35, !37}
!40 = distinct !{!40, !41, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!41 = distinct !{!41, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN4absl6StrCatIJNS_11string_viewEEEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_8AlphaNumESB_SB_SB_SB_DpRKT_: argument 0"}
!44 = distinct !{!44, !"_ZN4absl6StrCatIJNS_11string_viewEEEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKNS_8AlphaNumESB_SB_SB_SB_DpRKT_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK4spdy16Http2HeaderBlock4findEN4absl11string_viewE: argument 0"}
!47 = distinct !{!47, !"_ZNK4spdy16Http2HeaderBlock4findEN4absl11string_viewE"}
!48 = !{!"branch_weights", i32 1, i32 2000}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK4quic11QuicSession7versionEv: argument 0"}
!51 = distinct !{!51, !"_ZNK4quic11QuicSession7versionEv"}
!52 = !{!53, !55, !50}
!53 = distinct !{!53, !54, !"_ZNK4quic10QuicFramer7versionEv: argument 0"}
!54 = distinct !{!54, !"_ZNK4quic10QuicFramer7versionEv"}
!55 = distinct !{!55, !56, !"_ZNK4quic14QuicConnection7versionEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4quic14QuicConnection7versionEv"}
!57 = !{i32 0, i32 33}
!58 = !{!59, !61}
!59 = distinct !{!59, !60, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!60 = distinct !{!60, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!61 = distinct !{!61, !62, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE: argument 0"}
!62 = distinct !{!62, !"_ZN4absl15AsciiStrToLowerENS_11string_viewE"}
!63 = distinct !{!63, !64}
!64 = !{!"llvm.loop.unroll.disable"}
!65 = distinct !{!65, !64}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !64}
!68 = distinct !{!68, !64}
!69 = distinct !{!69, !64}
!70 = distinct !{!70, !64}
!71 = distinct !{!71, !64}
!72 = distinct !{!72, !64}
!73 = distinct !{!73, !64}
!74 = distinct !{!74, !64}
!75 = distinct !{!75, !64}
!76 = distinct !{!76, !64}
!77 = distinct !{!77, !64}
!78 = distinct !{!78, !64}
!79 = distinct !{!79, !64}
!80 = distinct !{!80, !64}
!81 = distinct !{!81, !64}
!82 = distinct !{!82, !64}
!83 = !{!84, !86}
!84 = distinct !{!84, !85, !"_ZNK4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE6rbeginEv: argument 0"}
!85 = distinct !{!85, !"_ZNK4absl18container_internal5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS3_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS5_EELi256ELb0EEEE6rbeginEv"}
!86 = distinct !{!86, !87, !"_ZNK4absl18container_internal15btree_containerINS0_5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS4_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS6_EELi256ELb0EEEEEE6rbeginEv: argument 0"}
!87 = distinct !{!87, !"_ZNK4absl18container_internal15btree_containerINS0_5btreeINS0_10set_paramsIN4quic12QuicIntervalImEENS4_15QuicIntervalSetImE12IntervalLessENSt3__19allocatorIS6_EELi256ELb0EEEEEE6rbeginEv"}
!88 = distinct !{!88, !64}
!89 = distinct !{!89, !64}
!90 = distinct !{!90, !64}
