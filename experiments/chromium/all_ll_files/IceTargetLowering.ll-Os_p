; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceTargetLowering.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceTargetLowering.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.Ice::LiveRange" = type { %"class.std::__1::vector.310", %"class.std::__1::unordered_map.317", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"*, %"class.std::__1::__compressed_pair.313" }
%"struct.std::__1::pair.312" = type { i32, i32 }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314", %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::pair.312"* }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.Ice::sz_allocator.316" }
%"struct.Ice::sz_allocator.316" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.0" = type <{ %"class.llvm::SmallVectorImpl.1", %"struct.llvm::SmallVectorStorage.6", [7 x i8] }>
%"class.llvm::SmallVectorImpl.1" = type { %"class.llvm::SmallVectorTemplateBase.2" }
%"class.llvm::SmallVectorTemplateBase.2" = type { %"class.llvm::SmallVectorTemplateCommon.3" }
%"class.llvm::SmallVectorTemplateCommon.3" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.4" }
%"struct.llvm::AlignedCharArrayUnion.4" = type { %"struct.llvm::AlignedCharArray.5" }
%"struct.llvm::AlignedCharArray.5" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.6" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.std::__1::unordered_map.317" = type { %"class.std::__1::__hash_table.318" }
%"class.std::__1::__hash_table.318" = type <{ %"class.std::__1::unique_ptr.319", %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.337", [4 x i8] }>
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321", %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::__hash_node_base.322"** }
%"struct.std::__1::__hash_node_base.322" = type { %"struct.std::__1::__hash_node_base.322"* }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.std::__1::__bucket_list_deallocator.324" }
%"class.std::__1::__bucket_list_deallocator.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.Ice::sz_allocator.327" }
%"struct.Ice::sz_allocator.327" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329", %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::__hash_node_base.322" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.Ice::sz_allocator.331" }
%"struct.Ice::sz_allocator.331" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { float }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair.312"* }
%"class.Ice::ClFlags" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.std::__1::vector.92", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i32, i8, i8, i32, i8, %"class.std::__1::basic_string", i32, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::vector.92", i8, i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", i8, [7 x i8], %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.Ice::RangeSpec" = type { %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc" }
%"struct.Ice::RangeSpec::Desc" = type <{ %"class.std::__1::unordered_set.386", %"class.llvm::BitVector", i32, i8, [3 x i8] }>
%"class.std::__1::unordered_set.386" = type { %"class.std::__1::__hash_table.387" }
%"class.std::__1::__hash_table.387" = type <{ %"class.std::__1::unique_ptr.388", %"class.std::__1::__compressed_pair.398", %"class.std::__1::__compressed_pair.403", %"class.std::__1::__compressed_pair.405", [4 x i8] }>
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390", %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"struct.std::__1::__hash_node_base.391"** }
%"struct.std::__1::__hash_node_base.391" = type { %"struct.std::__1::__hash_node_base.391"* }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.std::__1::__bucket_list_deallocator.393" }
%"class.std::__1::__bucket_list_deallocator.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.std::__1::__hash_node_base.391" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.llvm::BitVector" = type { i64*, i32, i32 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.Ice::TargetLowering::AutoBundle" = type <{ %"class.Ice::TargetLowering"*, i8, [7 x i8] }>
%"class.Ice::TargetLowering" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32, [4 x i8] }>
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.202", i32, [4 x i8], %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.145", %"class.std::__1::vector.273", %"class.Ice::CfgNode"*, %"class.std::__1::vector.279", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::StringID" = type { i64 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.209" }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.309", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::StringID.309" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.Ice::sz_allocator.212" }
%"struct.Ice::sz_allocator.212" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.52", [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type { %"class.std::__1::unique_ptr", %"struct.Ice::sz_allocator_scope", %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.216", %"class.std::__1::vector.234", %"class.std::__1::vector.218", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", i32, i32 }
%"struct.Ice::sz_allocator_scope" = type { i8 }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.std::__1::__compressed_pair.230" }
%"class.Ice::Liveness::LivenessNode" = type { i32, i32, %"class.std::__1::vector.218", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", %"class.std::__1::vector.224", %"class.std::__1::vector.224" }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.226" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.Ice::sz_allocator.229" }
%"struct.Ice::sz_allocator.229" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.Ice::Liveness::LivenessNode"* }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.Ice::sz_allocator.233" }
%"struct.Ice::sz_allocator.233" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { i32*, i32*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.Ice::sz_allocator.239" }
%"struct.Ice::sz_allocator.239" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.Ice::sz_allocator.222" }
%"struct.Ice::sz_allocator.222" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::BitVectorTmpl" = type { i64*, i32, i32, %"struct.Ice::sz_allocator.223" }
%"struct.Ice::sz_allocator.223" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.Ice::TargetLowering"* }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.252" }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.266" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.254", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.Ice::sz_allocator.265" }
%"struct.Ice::sz_allocator.265" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.256", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259", %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.Ice::sz_allocator.261" }
%"struct.Ice::sz_allocator.261" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267", %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.Ice::sz_allocator.269" }
%"struct.Ice::sz_allocator.269" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.154", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.154" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.157", i8, [7 x i8] }>
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.160" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.159 }
%union.anon.159 = type { %"class.Ice::Constant"* }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.Ice::VariableDeclarationList"* }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.std::__1::vector.19", %"class.std::__1::vector.26" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.14" }
%"class.Ice::VariableDeclaration" = type <{ %"class.Ice::GlobalDeclaration", %"class.std::__1::vector.9", i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.Ice::GlobalDeclaration" = type { i32 (...)**, i32, i32, %"class.Ice::StringID" }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.Ice::VariableDeclaration::Initializer"**, %"class.Ice::VariableDeclaration::Initializer"**, %"class.std::__1::__compressed_pair.11" }
%"class.Ice::VariableDeclaration::Initializer" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.Ice::VariableDeclaration::Initializer"** }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::function"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.273" = type { %"class.std::__1::__vector_base.274" }
%"class.std::__1::__vector_base.274" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.275" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID", %"class.Ice::StringID" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.256", i32 }>
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276", %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.Ice::sz_allocator.278" }
%"struct.Ice::sz_allocator.278" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.308", i32, i8, i8, i8, i32, %"class.std::__1::vector.202", %"class.std::__1::vector.202", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::StringID.308" = type { i64 }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.304" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.281" }
%"class.std::__1::__hash_table.281" = type <{ %"class.std::__1::unique_ptr.282", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.299", [4 x i8] }>
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284", %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base.285"** }
%"struct.std::__1::__hash_node_base.285" = type { %"struct.std::__1::__hash_node_base.285"* }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.std::__1::__bucket_list_deallocator.287" }
%"class.std::__1::__bucket_list_deallocator.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.Ice::sz_allocator.290" }
%"struct.Ice::sz_allocator.290" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292", %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.285" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.Ice::sz_allocator.294" }
%"struct.Ice::sz_allocator.294" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305", %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.Ice::sz_allocator.307" }
%"struct.Ice::sz_allocator.307" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.19", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.33", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.58", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.64", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.125", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.141", %"class.std::__1::unique_ptr.178", i8, %"class.std::__1::unique_ptr.184", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.190", %"class.llvm::SmallVector.196", %"class.llvm::SmallVector.196" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.73" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.66" }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { i64*, i64*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { i64* }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.78" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.120" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.92", %"class.std::__1::vector.99", %"class.std::__1::vector.113", %"class.std::__1::vector.101", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.108" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.101", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { double*, double*, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { double* }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { i64*, i64*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64* }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.131"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.137, %union.anon.139, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.137 = type { i64 }
%union.anon.139 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.141" = type <{ [128 x %"class.std::__1::unique_ptr.142"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.llvm::SmallVector.190" = type { %"class.llvm::SmallVectorImpl.191", %"struct.llvm::SmallVectorStorage.195" }
%"class.llvm::SmallVectorImpl.191" = type { %"class.llvm::SmallVectorTemplateBase.192" }
%"class.llvm::SmallVectorTemplateBase.192" = type { %"class.llvm::SmallVectorTemplateCommon.193" }
%"class.llvm::SmallVectorTemplateCommon.193" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.194" }
%"struct.llvm::AlignedCharArrayUnion.194" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.195" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.194"] }
%"class.llvm::SmallVector.196" = type { %"class.llvm::SmallVectorImpl.197", %"struct.llvm::SmallVectorStorage.201" }
%"class.llvm::SmallVectorImpl.197" = type { %"class.llvm::SmallVectorTemplateBase.198" }
%"class.llvm::SmallVectorTemplateBase.198" = type { %"class.llvm::SmallVectorTemplateCommon.199" }
%"class.llvm::SmallVectorTemplateCommon.199" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.200" }
%"struct.llvm::AlignedCharArrayUnion.200" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.201" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.200"] }
%"class.Ice::LoweringContext" = type { %"class.Ice::CfgNode"*, %"class.Ice::Inst"*, %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"class.llvm::ilist_iterator" = type { %"class.llvm::ilist_node_impl"* }
%"class.Ice::TargetHeaderLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.Ice::SmallBitVector" = type <{ [2 x i64], i32, [4 x i8] }>
%"class.std::__1::function.343" = type { %"class.std::__1::__function::__policy_func.347" }
%"class.std::__1::__function::__policy_func.347" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.348", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.348" = type { void (%"class.std::__1::basic_string"*, %"union.std::__1::__function::__policy_storage"*, %"class.Ice::RegNumT"*)* }
%"class.std::__1::function.349" = type { %"class.std::__1::__function::__policy_func.353" }
%"class.std::__1::__function::__policy_func.353" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.354", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.354" = type { i8* (%"union.std::__1::__function::__policy_storage"*, i8)* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.529" = type { i8 }
%"class.std::__1::vector.355" = type { %"class.std::__1::__vector_base.356" }
%"class.std::__1::__vector_base.356" = type { %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"*, %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.Ice::SmallBitVector"* }
%"class.std::__1::unordered_map.362" = type { %"class.std::__1::__hash_table.363" }
%"class.std::__1::__hash_table.363" = type <{ %"class.std::__1::unique_ptr.364", %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.382", [4 x i8] }>
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366", %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.std::__1::__hash_node_base.367"** }
%"struct.std::__1::__hash_node_base.367" = type { %"struct.std::__1::__hash_node_base.367"* }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.std::__1::__bucket_list_deallocator.369" }
%"class.std::__1::__bucket_list_deallocator.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.367" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%class.anon = type { %"class.std::__1::unordered_map.362"*, %"class.std::__1::vector.92"*, i64*, %"class.std::__1::function.349"*, %"class.Ice::SmallBitVector"** }
%"class.llvm::raw_string_ostream" = type { %"class.llvm::raw_ostream.base", %"class.std::__1::basic_string"* }
%"class.llvm::raw_ostream.base" = type <{ i32 (...)**, i8*, i8*, i8*, i32 }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator.83" = type { i8 }
%"class.Ice::InstBundleLock" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstBundleUnlock" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstAlloca" = type <{ %"class.Ice::InstHighLevel.base", i32, i8, [7 x i8] }>
%"class.Ice::InstArithmetic" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstAssign" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstBr" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"* }
%"class.Ice::InstBreakpoint" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstCall" = type { %"class.Ice::InstHighLevel.base", i8, i8, i8, i8 }
%"class.Ice::InstCast" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstExtractElement" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstFcmp" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstIcmp" = type { %"class.Ice::InstHighLevel.base", i32 }
%"class.Ice::InstInsertElement" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstIntrinsic" = type { %"class.Ice::InstHighLevel.base", %"struct.Ice::Intrinsics::IntrinsicInfo" }
%"struct.Ice::Intrinsics::IntrinsicInfo" = type { i32 }
%"class.Ice::InstLoad" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstPhi" = type { %"class.Ice::InstHighLevel.base", %"class.std::__1::vector.202" }
%"class.Ice::InstRet" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstSelect" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstShuffleVector" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::ConstantPrimitive"**, i32, i32 }
%"class.Ice::ConstantPrimitive" = type { %"class.Ice::Constant.base", i32 }
%"class.Ice::Constant.base" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8 }>
%"class.Ice::InstStore" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstSwitch" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::CfgNode"*, i32, i64*, %"class.Ice::CfgNode"** }
%"class.Ice::InstUnreachable" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstHighLevel" = type { %"class.Ice::Inst.base", [4 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.Ice::LinearScan" = type { %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, %"class.Ice::TargetLowering"*, %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::vector.410", i32, [4 x i8], %"class.llvm::SmallVector.416", %"class.llvm::SmallVector.423", i8, i8, i8, i8, %"class.std::__1::vector.207" }
%"class.std::__1::vector.410" = type { %"class.std::__1::__vector_base.411" }
%"class.std::__1::__vector_base.411" = type { i32*, i32*, %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413", %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.413" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.Ice::sz_allocator.415" }
%"struct.Ice::sz_allocator.415" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::SmallVector.416" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage.422" }
%"class.llvm::SmallVectorImpl.base" = type { %"class.llvm::SmallVectorTemplateBase.base" }
%"class.llvm::SmallVectorTemplateBase.base" = type { %"class.llvm::SmallVectorTemplateCommon.base" }
%"class.llvm::SmallVectorTemplateCommon.base" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.420" }>
%"struct.llvm::AlignedCharArrayUnion.420" = type { %"struct.llvm::AlignedCharArray.421" }
%"struct.llvm::AlignedCharArray.421" = type { [4 x i8] }
%"struct.llvm::SmallVectorStorage.422" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.420"] }
%"class.llvm::SmallVector.423" = type { %"class.llvm::SmallVectorImpl.424", %"struct.llvm::SmallVectorStorage.428" }
%"class.llvm::SmallVectorImpl.424" = type { %"class.llvm::SmallVectorTemplateBase.425" }
%"class.llvm::SmallVectorTemplateBase.425" = type { %"class.llvm::SmallVectorTemplateCommon.426" }
%"class.llvm::SmallVectorTemplateCommon.426" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.427" }
%"struct.llvm::AlignedCharArrayUnion.427" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.428" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.427"] }
%"class.std::__1::set" = type { %"class.std::__1::__tree.429" }
%"class.std::__1::__tree.429" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.430", %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.86", %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"struct.Ice::sz_allocator.432" }
%"struct.Ice::sz_allocator.432" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.Ice::Variable"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::unordered_map.439" = type { %"class.std::__1::__hash_table.440" }
%"class.std::__1::__hash_table.440" = type <{ %"class.std::__1::unique_ptr.441", %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.459", [4 x i8] }>
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443", %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.444"** }
%"struct.std::__1::__hash_node_base.444" = type { %"struct.std::__1::__hash_node_base.444"* }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.std::__1::__bucket_list_deallocator.446" }
%"class.std::__1::__bucket_list_deallocator.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"struct.Ice::sz_allocator.449" }
%"struct.Ice::sz_allocator.449" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451", %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.std::__1::__hash_node_base.444" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"struct.Ice::sz_allocator.453" }
%"struct.Ice::sz_allocator.453" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467", %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.Ice::sz_allocator.469" }
%"struct.Ice::sz_allocator.469" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%struct.UseInfo = type <{ %"class.Ice::Variable"*, %"class.Ice::Inst"*, %"class.Ice::Inst"*, i32, [4 x i8] }>
%class.anon.511 = type { i32*, i8*, %"class.std::__1::vector.464"*, i32* }
%"class.Ice::InstFakeUse" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.Ice::InstFakeDef" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%class.anon.472 = type { %"class.Ice::TargetLowering"* }
%"class.std::__1::function.473" = type { %"class.std::__1::__function::__policy_func.477" }
%"class.std::__1::__function::__policy_func.477" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.478", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.478" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*)* }
%"class.std::__1::vector.481" = type { %"class.std::__1::__vector_base.482" }
%"class.std::__1::__vector_base.482" = type { i64*, i64*, %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.Ice::sz_allocator.480" }
%"struct.Ice::sz_allocator.480" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.Ice::ConstantUndef" = type { %"class.Ice::Constant.base", [6 x i8] }
%"class.std::__1::function.563" = type { %"class.std::__1::__function::__policy_func.566" }
%"class.std::__1::__function::__policy_func.566" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.567", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.567" = type { %"class.Ice::Inst"* (%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)* }
%"class.std::__1::function.568" = type { %"class.std::__1::__function::__policy_func.571" }
%"class.std::__1::__function::__policy_func.571" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.572", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.572" = type { %"class.Ice::Variable"* (%"union.std::__1::__function::__policy_storage"*)* }
%"class.Ice::VariableVecOn32" = type { %"class.Ice::Variable", %"class.std::__1::vector.207" }
%"class.Ice::ConstantRelocatable" = type { %"class.Ice::Constant.base", i32, %"class.llvm::SmallVector.486", %"class.Ice::StringID", %"class.std::__1::basic_string" }
%"class.llvm::SmallVector.486" = type { %"class.llvm::SmallVectorImpl.487", %"struct.llvm::SmallVectorStorage.491" }
%"class.llvm::SmallVectorImpl.487" = type { %"class.llvm::SmallVectorTemplateBase.488" }
%"class.llvm::SmallVectorTemplateBase.488" = type { %"class.llvm::SmallVectorTemplateCommon.489" }
%"class.llvm::SmallVectorTemplateCommon.489" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.490" }
%"struct.llvm::AlignedCharArrayUnion.490" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.491" = type { [3 x %"struct.llvm::AlignedCharArrayUnion.490"] }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.std::__1::allocator.97"* }
%"class.std::__1::allocator.97" = type { i8 }
%"struct.std::__1::pair.505" = type { i8*, i64 }
%"struct.std::__1::__hash_node.510" = type { %"struct.std::__1::__hash_node_base.322", i64, %"struct.std::__1::__hash_value_type.509" }
%"struct.std::__1::__hash_value_type.509" = type { %"struct.std::__1::pair.508" }
%"struct.std::__1::pair.508" = type { i32, %"class.Ice::CfgNode"* }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532", %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.367", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.500" }
%"struct.std::__1::pair.500" = type <{ %"class.std::__1::basic_string", %"class.Ice::RegNumT", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.std::__1::__hash_node_destructor.534" }
%"class.std::__1::__hash_node_destructor.534" = type <{ %"class.std::__1::allocator.377"*, i8, [7 x i8] }>
%"class.std::__1::allocator.377" = type { i8 }
%"struct.std::__1::__split_buffer.576" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.std::__1::allocator.24"* }
%"class.std::__1::allocator.24" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.585" = type { %class.anon.573 }
%class.anon.573 = type { %"class.Ice::TargetLowering"*, %"class.Ice::Constant"*, i32, %"class.Ice::Operand"* }

$_ZNSt3__16vectorIN3Ice14SmallBitVectorENS_9allocatorIS2_EEEC2EmRKS2_ = comdat any

$_ZN4llvm18raw_string_ostream3strEv = comdat any

$_ZN3Ice14SmallBitVector5resetERKS0_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc = comdat any

$_ZN4llvm11iplist_implINS_12simple_ilistIN3Ice4InstEJEEENS_12ilist_traitsIS3_EEE11insertAfterENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS3_Lb0ELb0EvEELb0ELb0EEEPS3_ = comdat any

$_ZN3Ice15LoweringContext6insertINS_11InstFakeUseEJPNS_8VariableEEEEPT_DpOT0_ = comdat any

$_ZN3Ice15LoweringContext6insertINS_11InstFakeUseEJRPNS_8VariableEEEEPT_DpOT0_ = comdat any

$_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJPNS_8VariableEEEEPT_DpOT0_ = comdat any

$_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJRPNS_8VariableEEEEPT_DpOT0_ = comdat any

$_ZNSt3__16vectorImN3Ice12sz_allocatorImNS1_18CfgAllocatorTraitsEEEEC2Em = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm = comdat any

$_ZN3Ice18TargetDataLowering24emitTargetRODataSectionsEv = comdat any

$_ZN3Ice20TargetHeaderLowering5lowerEv = comdat any

$_ZN3Ice14TargetLowering12translateOm1Ev = comdat any

$_ZN3Ice14TargetLowering11translateO0Ev = comdat any

$_ZN3Ice14TargetLowering11translateO1Ev = comdat any

$_ZN3Ice14TargetLowering11translateO2Ev = comdat any

$_ZN3Ice14TargetLowering12prelowerPhisEv = comdat any

$_ZN3Ice14TargetLowering11doBranchOptEPNS_4InstEPKNS_7CfgNodeE = comdat any

$_ZNK3Ice14TargetLowering15hasFramePointerEv = comdat any

$_ZNK3Ice14TargetLowering26needsStackPointerAlignmentEv = comdat any

$_ZNK3Ice14TargetLowering19maxOutArgsSizeBytesEv = comdat any

$_ZNK3Ice14TargetLowering21getFramePointerOffsetEjj = comdat any

$_ZNK3Ice14TargetLowering28shouldSplitToVariableVecOn32ENS_4TypeE = comdat any

$_ZN3Ice14TargetLowering19initNodeForLoweringEPNS_7CfgNodeE = comdat any

$_ZN3Ice14TargetLowering17createLoweredMoveEPNS_8VariableES2_ = comdat any

$_ZN3Ice14TargetLoweringD2Ev = comdat any

$_ZN3Ice14TargetLoweringD0Ev = comdat any

$_ZN3Ice14TargetLowering17doAddressOptOtherEv = comdat any

$_ZN3Ice14TargetLowering16doAddressOptLoadEv = comdat any

$_ZN3Ice14TargetLowering17doAddressOptStoreEv = comdat any

$_ZN3Ice14TargetLowering25doAddressOptLoadSubVectorEv = comdat any

$_ZN3Ice14TargetLowering26doAddressOptStoreSubVectorEv = comdat any

$_ZN3Ice14TargetLowering17doMockBoundsCheckEPNS_7OperandE = comdat any

$_ZN3Ice14TargetLowering9postLowerEv = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EmmS8_ = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endEPS6_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE11__vallocateEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE18__construct_at_endIPS6_EENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESC_SC_m = comdat any

$_ZN4llvm11raw_ostreamlsENS_9StringRefE = comdat any

$_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj = comdat any

$_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_ = comdat any

$_ZN3Ice15LoweringContext6insertINS_14InstBundleLockEJRNS2_6OptionEEEEPT_DpOT0_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZN3Ice15LoweringContext6insertINS_16InstBundleUnlockEJEEEPT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_ = comdat any

$_ZN3Ice9LiveRangeaSERKS0_ = comdat any

$_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEEEEvT_SP_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE27__node_insert_multi_prepareEmRS5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE27__node_insert_multi_performEPNS_11__hash_nodeIS5_PvEEPNS_16__hash_node_baseISL_EE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE15__emplace_multiIJRKNS_4pairIKiS4_EEEEENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEDpOT_ = comdat any

$_ZN3Ice8InstCallC2EPNS_3CfgEjPNS_8VariableEPNS_7OperandEbbbbNS_4Inst8InstKindE = comdat any

$_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev = comdat any

$_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE5clearEv = comdat any

$_ZNSt3__16vectorIN3Ice14SmallBitVectorENS_9allocatorIS2_EEE11__vallocateEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__13setIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6insertINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SH_ = comdat any

$_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE30__emplace_hint_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEENS_21__tree_const_iteratorIS3_SI_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SC_EElEERPNS_15__tree_end_nodeISE_EESF_RKT_ = comdat any

$_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_ = comdat any

$_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZNSt3__16vectorImN3Ice12sz_allocatorImNS1_18CfgAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZN3Ice15VariableVecOn3214initVecElementEPNS_3CfgE = comdat any

$_ZN3Ice15LoweringContext6insertINS_10InstAssignEJRPNS_8VariableERPNS_13ConstantUndefEEEEPT_DpOT0_ = comdat any

$_ZN3Ice13GlobalContext16getConstantInt32Ei = comdat any

$_ZN3Ice15LoweringContext6insertINS_17InstInsertElementEJRPNS_8VariableES5_S5_RPNS_8ConstantEEEEPT_DpOT0_ = comdat any

$_ZN3Ice15LoweringContext6insertINS_10InstAssignEJRPNS_8VariableES5_EEEPT_DpOT0_ = comdat any

$_ZN3Ice13GlobalContext8allocateINS_13ConstantUndefEEEPNSt3__19enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES5_E4typeEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS6_13ConstantUndefEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESB_E4typeEvEUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEEC2EmmS6_ = comdat any

$_ZNSt3__16vectorINS_8functionIFvvEEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE = comdat any

$_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEED2Ev = comdat any

$_ZN3Ice15LoweringContext6insertINS_14InstArithmeticEJRKNS2_6OpKindERPNS_8VariableERPNS_7OperandESB_EEEPT_DpOT0_ = comdat any

$_ZN3Ice15LoweringContext6insertINS_18InstExtractElementEJRPNS_8VariableERKPNS_7OperandERKPNS_8ConstantEEEEPT_DpOT0_ = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS4_13ConstantUndefEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES9_E4typeEvEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [36 x i8] c"Unrecognized use/exclude registers:\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZZN3Ice14TargetLowering10staticInitEPNS_13GlobalContextEE17InitGuardSZTARGET = internal unnamed_addr global i1 false, align 1
@_ZTVN3Ice14TargetLoweringE = hidden unnamed_addr constant { [76 x i8*] } { [76 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering12translateOm1Ev to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering11translateO0Ev to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering11translateO1Ev to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering11translateO2Ev to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering12prelowerPhisEv to i8*), i8* bitcast (i1 (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*)* @_ZN3Ice14TargetLowering11doBranchOptEPNS_4InstEPKNS_7CfgNodeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.Ice::TargetLowering"*)* @_ZNK3Ice14TargetLowering15hasFramePointerEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.Ice::TargetLowering"*)* @_ZNK3Ice14TargetLowering26needsStackPointerAlignmentEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.Ice::TargetLowering"*)* @_ZNK3Ice14TargetLowering19maxOutArgsSizeBytesEv to i8*), i8* bitcast (i32 (%"class.Ice::TargetLowering"*, i32, i32)* @_ZNK3Ice14TargetLowering21getFramePointerOffsetEjj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.Ice::TargetLowering"*, i32)* @_ZNK3Ice14TargetLowering28shouldSplitToVariableVecOn32ENS_4TypeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*)* @_ZN3Ice14TargetLowering19initNodeForLoweringEPNS_7CfgNodeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)* @_ZN3Ice14TargetLowering17createLoweredMoveEPNS_8VariableES2_ to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLoweringD2Ev to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLoweringD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)* @_ZN3Ice14TargetLowering10lowerOtherEPKNS_4InstE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering17doAddressOptOtherEv to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering16doAddressOptLoadEv to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering17doAddressOptStoreEv to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering25doAddressOptLoadSubVectorEv to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering26doAddressOptStoreSubVectorEv to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*, %"class.Ice::Operand"*)* @_ZN3Ice14TargetLowering17doMockBoundsCheckEPNS_7OperandE to i8*), i8* bitcast (void (%"class.Ice::TargetLowering"*)* @_ZN3Ice14TargetLowering9postLowerEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [41 x i8] c"Can't lower unsupported instruction type\00", align 1
@__const._ZN3Ice14TargetLowering21postRegallocSplittingERKNS_14SmallBitVectorE.LR = private unnamed_addr constant %"class.Ice::LiveRange" { %"class.std::__1::vector.310" { %"class.std::__1::__vector_base.311" { %"struct.std::__1::pair.312"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.312"*), %"struct.std::__1::pair.312"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.312"*), %"class.std::__1::__compressed_pair.313" { %"struct.std::__1::__compressed_pair_elem.314" { %"struct.std::__1::pair.312"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.312"*) }, %"struct.std::__1::__compressed_pair_elem.315" { %"struct.Ice::sz_allocator.316" { %"class.llvm::BumpPtrAllocatorImpl"* inttoptr (i64 -6148914691236517206 to %"class.llvm::BumpPtrAllocatorImpl"*) } } } } }, %"class.std::__1::unordered_map.317" { %"class.std::__1::__hash_table.318" <{ %"class.std::__1::unique_ptr.319" { %"class.std::__1::__compressed_pair.320" { %"struct.std::__1::__compressed_pair_elem.321" { %"struct.std::__1::__hash_node_base.322"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.322"**) }, %"struct.std::__1::__compressed_pair_elem.323" { %"class.std::__1::__bucket_list_deallocator.324" { %"class.std::__1::__compressed_pair.325" { %"struct.std::__1::__compressed_pair_elem.41" { i64 -6148914691236517206 }, %"struct.std::__1::__compressed_pair_elem.326" { %"struct.Ice::sz_allocator.327" { %"class.llvm::BumpPtrAllocatorImpl"* inttoptr (i64 -6148914691236517206 to %"class.llvm::BumpPtrAllocatorImpl"*) } } } } } } }, %"class.std::__1::__compressed_pair.328" { %"struct.std::__1::__compressed_pair_elem.329" { %"struct.std::__1::__hash_node_base.322" { %"struct.std::__1::__hash_node_base.322"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.322"*) } }, %"struct.std::__1::__compressed_pair_elem.330" { %"struct.Ice::sz_allocator.331" { %"class.llvm::BumpPtrAllocatorImpl"* inttoptr (i64 -6148914691236517206 to %"class.llvm::BumpPtrAllocatorImpl"*) } } }, %"class.std::__1::__compressed_pair.332" { %"struct.std::__1::__compressed_pair_elem.41" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.337" { %"struct.std::__1::__compressed_pair_elem.53" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::__wrap_iter" { %"struct.std::__1::pair.312"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.312"*) } }, align 8
@_ZTVN3Ice18TargetDataLoweringE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::TargetDataLowering"*)* @_ZN3Ice18TargetDataLoweringD2Ev to i8*), i8* bitcast (void (%"class.Ice::TargetDataLowering"*)* @_ZN3Ice18TargetDataLoweringD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Ice::TargetDataLowering"*)* @_ZN3Ice18TargetDataLowering24emitTargetRODataSectionsEv to i8*)] }, align 8
@_ZTVN3Ice20TargetHeaderLoweringE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::TargetHeaderLowering"*)* @_ZN3Ice20TargetHeaderLoweringD2Ev to i8*), i8* bitcast (void (%"class.Ice::TargetHeaderLowering"*)* @_ZN3Ice20TargetHeaderLoweringD0Ev to i8*), i8* bitcast (void (%"class.Ice::TargetHeaderLowering"*)* @_ZN3Ice20TargetHeaderLowering5lowerEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3Ice7ClFlags5FlagsE = external global %"class.Ice::ClFlags", align 8
@_ZTVN4llvm18raw_string_ostreamE = external unnamed_addr constant { [13 x i8*] }, align 8
@.str.6 = private unnamed_addr constant [21 x i8] c"Unsupported target: \00", align 1
@_ZTVN3Ice8InstCallE = external unnamed_addr constant { [19 x i8*] }, align 8
@.str.8 = private unnamed_addr constant [43 x i8] c"Target doesn't specify Om1 lowering steps.\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"Target doesn't specify O0 lowering steps.\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"Target doesn't specify O1 lowering steps.\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"Target doesn't specify O2 lowering steps.\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"createLoweredMove() unimplemented\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS4_13ConstantUndefEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES9_E4typeEvEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN3Ice13ConstantUndefE = external unnamed_addr constant { [9 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice14TargetLowering19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPNS4_7OperandESB_E3$_2FPNS4_4InstES9_S9_S9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

@_ZN3Ice14TargetLowering10AutoBundleC1EPS0_NS_14InstBundleLock6OptionE = hidden unnamed_addr alias void (%"class.Ice::TargetLowering::AutoBundle"*, %"class.Ice::TargetLowering"*, i32), void (%"class.Ice::TargetLowering::AutoBundle"*, %"class.Ice::TargetLowering"*, i32)* @_ZN3Ice14TargetLowering10AutoBundleC2EPS0_NS_14InstBundleLock6OptionE
@_ZN3Ice14TargetLowering10AutoBundleD1Ev = hidden unnamed_addr alias void (%"class.Ice::TargetLowering::AutoBundle"*), void (%"class.Ice::TargetLowering::AutoBundle"*)* @_ZN3Ice14TargetLowering10AutoBundleD2Ev
@_ZN3Ice18TargetDataLoweringD1Ev = hidden unnamed_addr alias void (%"class.Ice::TargetDataLowering"*), void (%"class.Ice::TargetDataLowering"*)* @_ZN3Ice18TargetDataLoweringD2Ev
@_ZN3Ice20TargetHeaderLoweringD1Ev = hidden unnamed_addr alias void (%"class.Ice::TargetHeaderLowering"*), void (%"class.Ice::TargetHeaderLowering"*)* @_ZN3Ice20TargetHeaderLoweringD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15LoweringContext4initEPNS_7CfgNodeE(%"class.Ice::LoweringContext"* nocapture, %"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  store %"class.Ice::CfgNode"* %1, %"class.Ice::CfgNode"** %3, align 8
  %4 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 5, i32 0
  store %"class.llvm::ilist_node_impl"* %4, %"class.llvm::ilist_node_impl"** %5, align 8
  tail call void @_ZN3Ice15LoweringContext6rewindEv(%"class.Ice::LoweringContext"* %0) #22
  %6 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3
  tail call void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* %0, %"class.llvm::ilist_iterator"* dereferenceable(8) %6) #22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15LoweringContext6rewindEv(%"class.Ice::LoweringContext"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %3 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %3, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.llvm::ilist_node_base"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 4, i32 0
  %8 = bitcast %"class.llvm::ilist_node_impl"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 2
  %10 = bitcast %"class.llvm::ilist_iterator"* %9 to i64*
  store i64 %6, i64* %10, align 8
  %11 = inttoptr i64 %6 to %"class.llvm::ilist_node_impl"*
  %12 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 5, i32 0
  %13 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %12, align 8
  %14 = icmp eq %"class.llvm::ilist_node_impl"* %13, %11
  br i1 %14, label %38, label %15

15:                                               ; preds = %1
  %16 = icmp eq i64 %6, 0
  %17 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 -1, i32 0, i32 1
  %18 = bitcast %"class.llvm::ilist_node_base"** %17 to %"class.Ice::Inst"*
  %19 = select i1 %16, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %18
  %20 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %19, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %38, label %31

23:                                               ; preds = %31
  %24 = icmp eq i64 %35, 0
  %25 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %36, i64 -1, i32 0, i32 1
  %26 = bitcast %"class.llvm::ilist_node_base"** %25 to %"class.Ice::Inst"*
  %27 = select i1 %24, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %26
  %28 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %27, i64 0, i32 4
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %15, %23
  %32 = phi %"class.llvm::ilist_node_impl"* [ %36, %23 ], [ %11, %15 ]
  %33 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %32, i64 0, i32 0, i32 1
  %34 = bitcast %"class.llvm::ilist_node_base"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %10, align 8
  %36 = inttoptr i64 %35 to %"class.llvm::ilist_node_impl"*
  %37 = icmp eq %"class.llvm::ilist_node_impl"* %13, %36
  br i1 %37, label %38, label %23

38:                                               ; preds = %31, %23, %15, %1
  %39 = phi i64 [ %6, %1 ], [ %6, %15 ], [ %35, %23 ], [ %35, %31 ]
  %40 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3
  %41 = bitcast %"class.llvm::ilist_iterator"* %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 6
  %43 = bitcast %"class.Ice::Variable"** %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #23
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* nocapture readonly, %"class.llvm::ilist_iterator"* nocapture dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator"* %1, i64 0, i32 0
  %4 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 5, i32 0
  %6 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %7 = icmp eq %"class.llvm::ilist_node_impl"* %4, %6
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.llvm::ilist_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.llvm::ilist_iterator"* %1 to i64*
  store i64 %11, i64* %12, align 8
  %13 = inttoptr i64 %11 to %"class.llvm::ilist_node_impl"*
  %14 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %15 = icmp eq %"class.llvm::ilist_node_impl"* %14, %13
  br i1 %15, label %32, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"class.llvm::ilist_node_impl"* [ %29, %25 ], [ %13, %8 ]
  %18 = icmp eq %"class.llvm::ilist_node_impl"* %17, null
  %19 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 -1, i32 0, i32 1
  %20 = bitcast %"class.llvm::ilist_node_base"** %19 to %"class.Ice::Inst"*
  %21 = select i1 %18, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %20
  %22 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %21, i64 0, i32 4
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 1
  %27 = bitcast %"class.llvm::ilist_node_base"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %12, align 8
  %29 = inttoptr i64 %28 to %"class.llvm::ilist_node_impl"*
  %30 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %31 = icmp eq %"class.llvm::ilist_node_impl"* %30, %29
  br i1 %31, label %32, label %16

32:                                               ; preds = %25, %16, %2, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice15LoweringContext11skipDeletedERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* nocapture readonly, %"class.llvm::ilist_iterator"* nocapture dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator"* %1, i64 0, i32 0
  %4 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 5, i32 0
  %6 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %7 = icmp eq %"class.llvm::ilist_node_impl"* %4, %6
  br i1 %7, label %26, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.llvm::ilist_iterator"* %1 to i64*
  br label %10

10:                                               ; preds = %8, %19
  %11 = phi %"class.llvm::ilist_node_impl"* [ %4, %8 ], [ %23, %19 ]
  %12 = icmp eq %"class.llvm::ilist_node_impl"* %11, null
  %13 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 -1, i32 0, i32 1
  %14 = bitcast %"class.llvm::ilist_node_base"** %13 to %"class.Ice::Inst"*
  %15 = select i1 %12, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %14
  %16 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 0, i32 0, i32 1
  %21 = bitcast %"class.llvm::ilist_node_base"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %9, align 8
  %23 = inttoptr i64 %22 to %"class.llvm::ilist_node_impl"*
  %24 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %25 = icmp eq %"class.llvm::ilist_node_impl"* %24, %23
  br i1 %25, label %26, label %10

26:                                               ; preds = %19, %10, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN3Ice15LoweringContext17availabilityResetEv(%"class.Ice::LoweringContext"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 6
  %3 = bitcast %"class.Ice::Variable"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15LoweringContext6insertEPNS_4InstE(%"class.Ice::LoweringContext"* nocapture, %"class.Ice::Inst"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %3, align 8
  %5 = icmp eq %"class.Ice::Inst"* %1, null
  %6 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 1, i32 0
  %7 = select i1 %5, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %6
  %8 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %7, i64 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %4, i64 0, i32 0, i32 0
  %11 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %10, align 8
  %12 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %7, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %8, %"class.llvm::ilist_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %7, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %11, %"class.llvm::ilist_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %11, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %9, %"class.llvm::ilist_node_base"** %14, align 8
  store %"class.llvm::ilist_node_base"* %9, %"class.llvm::ilist_node_base"** %10, align 8
  %15 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  store %"class.Ice::Inst"* %1, %"class.Ice::Inst"** %15, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Inst"* @_ZNK3Ice15LoweringContext15getLastInsertedEv(%"class.Ice::LoweringContext"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %3 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %2, align 8
  ret %"class.Ice::Inst"* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice15LoweringContext18availabilityUpdateEv(%"class.Ice::LoweringContext"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 6
  %3 = bitcast %"class.Ice::Variable"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #23
  %4 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %5 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %4, align 8
  %6 = icmp eq %"class.Ice::Inst"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.Ice::Inst"* %5 to i1 (%"class.Ice::Inst"*)***
  %9 = load i1 (%"class.Ice::Inst"*)**, i1 (%"class.Ice::Inst"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %9, i64 4
  %11 = load i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.Ice::Inst"* nonnull %5) #24
  br i1 %12, label %13, label %24

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %5, i64 0, i32 10
  %15 = bitcast %"class.Ice::Variable"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.Ice::Variable"** %2 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %5, i64 0, i32 13, i32 0, i32 0
  %19 = bitcast %"class.Ice::Operand"*** %18 to i64**
  %20 = load i64*, i64** %19, align 8
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 7
  %23 = bitcast %"class.Ice::Variable"** %22 to i64*
  store i64 %21, i64* %23, align 8
  br label %24

24:                                               ; preds = %7, %1, %13
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.Ice::Variable"* @_ZNK3Ice15LoweringContext15availabilityGetEPNS_7OperandE(%"class.Ice::LoweringContext"* nocapture readonly, %"class.Ice::Operand"* readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 6
  %4 = bitcast %"class.Ice::Variable"** %3 to %"class.Ice::Operand"**
  %5 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %4, align 8
  %6 = icmp eq %"class.Ice::Operand"* %5, %1
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 7
  %9 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.Ice::Variable"* [ %9, %7 ], [ null, %2 ]
  ret %"class.Ice::Variable"* %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering23filterTypeToRegisterSetEPNS_13GlobalContextEiPNS_14SmallBitVectorEmNSt3__18functionIFNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_7RegNumTEEEENS6_IFPKcNS_8RegClassEEEE(%"class.Ice::GlobalContext"* nocapture readnone, i32, %"class.Ice::SmallBitVector"*, i64, %"class.std::__1::function.343"*, %"class.std::__1::function.349"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.529", align 1
  %9 = alloca %"class.Ice::RegNumT", align 4
  %10 = alloca %"class.Ice::SmallBitVector"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__1::vector.355", align 8
  %13 = alloca %"class.Ice::SmallBitVector", align 8
  %14 = alloca %"class.std::__1::vector.355", align 8
  %15 = alloca %"class.Ice::SmallBitVector", align 8
  %16 = alloca %"class.std::__1::unordered_map.362", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::vector.92", align 8
  %19 = alloca %class.anon, align 8
  %20 = alloca %"class.std::__1::vector.92", align 8
  %21 = alloca %"class.std::__1::vector.92", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.llvm::raw_string_ostream", align 8
  store %"class.Ice::SmallBitVector"* %2, %"class.Ice::SmallBitVector"** %10, align 8
  store i64 %3, i64* %11, align 8
  %24 = bitcast %"class.std::__1::vector.355"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #23
  %25 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %12, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %12, i64 0, i32 0, i32 1
  %27 = bitcast %"class.Ice::SmallBitVector"* %13 to i8*
  %28 = bitcast %"class.std::__1::vector.355"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #23
  %29 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %13, i64 0, i32 1
  store i32 %1, i32* %29, align 8
  call void @_ZNSt3__16vectorIN3Ice14SmallBitVectorENS_9allocatorIS2_EEEC2EmRKS2_(%"class.std::__1::vector.355"* nonnull %12, i64 %3, %"class.Ice::SmallBitVector"* nonnull dereferenceable(24) %13) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #23
  %30 = bitcast %"class.std::__1::vector.355"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #23
  %31 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %14, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %14, i64 0, i32 0, i32 1
  %33 = bitcast %"class.Ice::SmallBitVector"* %15 to i8*
  %34 = bitcast %"class.std::__1::vector.355"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #23
  %35 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %15, i64 0, i32 1
  store i32 %1, i32* %35, align 8
  call void @_ZNSt3__16vectorIN3Ice14SmallBitVectorENS_9allocatorIS2_EEEC2EmRKS2_(%"class.std::__1::vector.355"* nonnull %14, i64 %3, %"class.Ice::SmallBitVector"* nonnull dereferenceable(24) %15) #22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #23
  %36 = bitcast %"class.std::__1::unordered_map.362"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #23
  %37 = getelementptr inbounds %"class.std::__1::unordered_map.362", %"class.std::__1::unordered_map.362"* %16, i64 0, i32 0, i32 4, i64 0
  %38 = getelementptr inbounds %"class.std::__1::unordered_map.362", %"class.std::__1::unordered_map.362"* %16, i64 0, i32 0, i32 3
  %39 = bitcast %"class.std::__1::__compressed_pair.382"* %38 to i32*
  %40 = bitcast i8* %37 to i32*
  store i32 -1431655766, i32* %40, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 32, i1 false) #23
  store i32 1065353216, i32* %39, align 8
  %41 = icmp sgt i32 %1, 0
  br i1 %41, label %42, label %55

42:                                               ; preds = %6
  %43 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %44 = bitcast %"class.Ice::RegNumT"* %9 to i8*
  %45 = getelementptr inbounds %"class.Ice::RegNumT", %"class.Ice::RegNumT"* %9, i64 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::function.343", %"class.std::__1::function.343"* %4, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::function.343", %"class.std::__1::function.343"* %4, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::unordered_map.362", %"class.std::__1::unordered_map.362"* %16, i64 0, i32 0
  %49 = bitcast %"class.std::__1::tuple"* %7 to i8*
  %50 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::tuple.529", %"class.std::__1::tuple.529"* %8, i64 0, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %75

55:                                               ; preds = %86, %6
  %56 = bitcast %"class.std::__1::vector.92"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #23
  %57 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %18, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %18, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #23
  %59 = bitcast %class.anon* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %59) #23
  %60 = getelementptr inbounds %class.anon, %class.anon* %19, i64 0, i32 0
  %61 = getelementptr inbounds %class.anon, %class.anon* %19, i64 0, i32 1
  %62 = getelementptr inbounds %class.anon, %class.anon* %19, i64 0, i32 2
  %63 = getelementptr inbounds %class.anon, %class.anon* %19, i64 0, i32 3
  %64 = getelementptr inbounds %class.anon, %class.anon* %19, i64 0, i32 4
  store %"class.std::__1::unordered_map.362"* %16, %"class.std::__1::unordered_map.362"** %60, align 8
  store %"class.std::__1::vector.92"* %18, %"class.std::__1::vector.92"** %61, align 8
  store i64* %11, i64** %62, align 8
  store %"class.std::__1::function.349"* %5, %"class.std::__1::function.349"** %63, align 8
  store %"class.Ice::SmallBitVector"** %10, %"class.Ice::SmallBitVector"*** %64, align 8
  %65 = bitcast %"class.std::__1::vector.92"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #23
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.92"* nonnull %20, %"class.std::__1::vector.92"* dereferenceable(24) getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 60)) #24
  call fastcc void @"_ZZN3Ice14TargetLowering23filterTypeToRegisterSetEPNS_13GlobalContextEiPNS_14SmallBitVectorEmNSt3__18functionIFNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_7RegNumTEEEENS6_IFPKcNS_8RegClassEEEEENK3$_0clERKNS5_6vectorISC_NSA_ISC_EEEERNSM_IS3_NSA_IS3_EEEE"(%class.anon* nonnull %19, %"class.std::__1::vector.92"* nonnull dereferenceable(24) %20, %"class.std::__1::vector.355"* nonnull dereferenceable(24) %12) #22
  %66 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %20, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev(%"class.std::__1::__vector_base.93"* nonnull %66) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #23
  %67 = bitcast %"class.std::__1::vector.92"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #23
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.92"* nonnull %21, %"class.std::__1::vector.92"* dereferenceable(24) getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 27)) #24
  call fastcc void @"_ZZN3Ice14TargetLowering23filterTypeToRegisterSetEPNS_13GlobalContextEiPNS_14SmallBitVectorEmNSt3__18functionIFNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_7RegNumTEEEENS6_IFPKcNS_8RegClassEEEEENK3$_0clERKNS5_6vectorISC_NSA_ISC_EEEERNSM_IS3_NSA_IS3_EEEE"(%class.anon* nonnull %19, %"class.std::__1::vector.92"* nonnull dereferenceable(24) %21, %"class.std::__1::vector.355"* nonnull dereferenceable(24) %14) #22
  %68 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %21, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev(%"class.std::__1::__vector_base.93"* nonnull %68) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #23
  %69 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %58, align 8
  %71 = icmp eq %"class.std::__1::basic_string"* %69, %70
  br i1 %71, label %72, label %89

72:                                               ; preds = %55
  %73 = load i64, i64* %11, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %122, label %139

75:                                               ; preds = %86, %42
  %76 = phi i32 [ 0, %42 ], [ %87, %86 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #23
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44)
  store i32 %76, i32* %45, align 4, !noalias !3
  %77 = load void (%"class.std::__1::basic_string"*, %"union.std::__1::__function::__policy_storage"*, %"class.Ice::RegNumT"*)*, void (%"class.std::__1::basic_string"*, %"union.std::__1::__function::__policy_storage"*, %"class.Ice::RegNumT"*)** %46, align 8, !noalias !6
  call void %77(%"class.std::__1::basic_string"* nonnull sret %17, %"union.std::__1::__function::__policy_storage"* %47, %"class.Ice::RegNumT"* nonnull dereferenceable(4) %9) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #23
  store %"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"** %50, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %51) #23
  %78 = call { %"struct.std::__1::__hash_node_base.367"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.363"* nonnull %48, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.529"* nonnull dereferenceable(1) %8) #24
  %79 = extractvalue { %"struct.std::__1::__hash_node_base.367"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %79, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %51) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #23
  %81 = bitcast %"struct.std::__1::__hash_node_base.367"* %80 to i32*
  store i32 %76, i32* %81, align 4
  %82 = load i8, i8* %53, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %75
  %85 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %85) #25
  br label %86

86:                                               ; preds = %75, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #23
  %87 = add nuw nsw i32 %76, 1
  %88 = icmp eq i32 %87, %1
  br i1 %88, label %55, label %75

89:                                               ; preds = %55
  %90 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #23
  %91 = bitcast %"class.llvm::raw_string_ostream"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %91) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 40, i1 false)
  %92 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %23, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %23, i64 0, i32 0, i32 4
  store i32 1, i32* %93, align 8
  %94 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %23, i64 0, i32 0, i32 1
  %95 = bitcast i8** %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %96 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %23, i64 0, i32 1
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %96, align 8
  %97 = bitcast %"class.llvm::raw_string_ostream"* %23 to %"class.llvm::raw_ostream"*
  %98 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %97, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i64 35) #24
  %99 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %100 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %58, align 8
  %101 = icmp eq %"class.std::__1::basic_string"* %99, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %104, %89
  %103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4llvm18raw_string_ostream3strEv(%"class.llvm::raw_string_ostream"* nonnull %23) #22
  call void @_ZN4llvm18report_fatal_errorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24) %103, i1 zeroext true) #26
  unreachable

104:                                              ; preds = %89, %104
  %105 = phi %"class.std::__1::basic_string"* [ %120, %104 ], [ %99, %89 ]
  %106 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %97, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #24
  %107 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %116 = zext i8 %109 to i64
  %117 = select i1 %110, i8* %112, i8* %115
  %118 = select i1 %110, i64 %114, i64 %116
  %119 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %106, i8* %117, i64 %118) #24
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 1
  %121 = icmp eq %"class.std::__1::basic_string"* %120, %100
  br i1 %121, label %102, label %104

122:                                              ; preds = %163, %72
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %59) #23
  %123 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %18, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev(%"class.std::__1::__vector_base.93"* nonnull %123) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #23
  %124 = getelementptr inbounds %"class.std::__1::unordered_map.362", %"class.std::__1::unordered_map.362"* %16, i64 0, i32 0
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEED2Ev(%"class.std::__1::__hash_table.363"* nonnull %124) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #23
  %125 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %31, align 8
  %126 = icmp eq %"class.Ice::SmallBitVector"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %122
  %128 = ptrtoint %"class.Ice::SmallBitVector"* %125 to i64
  %129 = bitcast %"class.Ice::SmallBitVector"** %32 to i64*
  store i64 %128, i64* %129, align 8
  %130 = bitcast %"class.Ice::SmallBitVector"* %125 to i8*
  call void @_ZdlPv(i8* %130) #25
  br label %131

131:                                              ; preds = %122, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #23
  %132 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %25, align 8
  %133 = icmp eq %"class.Ice::SmallBitVector"* %132, null
  br i1 %133, label %138, label %134

134:                                              ; preds = %131
  %135 = ptrtoint %"class.Ice::SmallBitVector"* %132 to i64
  %136 = bitcast %"class.Ice::SmallBitVector"** %26 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"class.Ice::SmallBitVector"* %132 to i8*
  call void @_ZdlPv(i8* %137) #25
  br label %138

138:                                              ; preds = %131, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #23
  ret void

139:                                              ; preds = %72, %163
  %140 = phi i64 [ %164, %163 ], [ 0, %72 ]
  %141 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %10, align 8
  %142 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %141, i64 %140
  %143 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %25, align 8
  %144 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %143, i64 %140
  %145 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %31, align 8
  %146 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %145, i64 %140
  br label %149

147:                                              ; preds = %149
  %148 = icmp eq i64 %154, 2
  br i1 %148, label %163, label %149

149:                                              ; preds = %147, %139
  %150 = phi i64 [ 0, %139 ], [ %154, %147 ]
  %151 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %143, i64 %140, i32 0, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = icmp eq i64 %152, 0
  %154 = add nuw nsw i64 %150, 1
  br i1 %153, label %147, label %155

155:                                              ; preds = %149
  %156 = icmp eq %"class.Ice::SmallBitVector"* %143, %141
  br i1 %156, label %163, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %143, i64 %140, i32 1
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %141, i64 %140, i32 1
  store i32 %159, i32* %160, align 8
  %161 = bitcast %"class.Ice::SmallBitVector"* %142 to i8*
  %162 = bitcast %"class.Ice::SmallBitVector"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 16, i1 false) #23
  br label %163

163:                                              ; preds = %147, %157, %155
  call void @_ZN3Ice14SmallBitVector5resetERKS0_(%"class.Ice::SmallBitVector"* %142, %"class.Ice::SmallBitVector"* dereferenceable(24) %146) #22
  %164 = add nuw i64 %140, 1
  %165 = load i64, i64* %11, align 8
  %166 = icmp ult i64 %164, %165
  br i1 %166, label %139, label %122
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice14SmallBitVectorENS_9allocatorIS2_EEEC2EmRKS2_(%"class.std::__1::vector.355"*, i64, %"class.Ice::SmallBitVector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.355"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #23
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  tail call void @_ZNSt3__16vectorIN3Ice14SmallBitVectorENS_9allocatorIS2_EEE11__vallocateEm(%"class.std::__1::vector.355"* %0, i64 %1) #22
  %7 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %7, align 8
  %9 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %8, i64 %1
  %10 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %2, i64 0, i32 1
  %11 = bitcast %"class.Ice::SmallBitVector"* %2 to i8*
  br label %12

12:                                               ; preds = %19, %6
  %13 = phi %"class.Ice::SmallBitVector"* [ %8, %6 ], [ %20, %19 ]
  %14 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %13, i64 0, i32 1
  store i32 0, i32* %14, align 8
  %15 = icmp eq %"class.Ice::SmallBitVector"* %13, %2
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = load i32, i32* %10, align 8
  store i32 %17, i32* %14, align 8
  %18 = bitcast %"class.Ice::SmallBitVector"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %11, i64 16, i1 false) #23
  br label %19

19:                                               ; preds = %16, %12
  %20 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %13, i64 1
  %21 = icmp eq %"class.Ice::SmallBitVector"* %20, %9
  br i1 %21, label %22, label %12

22:                                               ; preds = %19
  %23 = bitcast %"class.Ice::SmallBitVector"** %7 to i64*
  %24 = ptrtoint %"class.Ice::SmallBitVector"* %9 to i64
  store i64 %24, i64* %23, align 8
  br label %25

25:                                               ; preds = %3, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal fastcc void @"_ZZN3Ice14TargetLowering23filterTypeToRegisterSetEPNS_13GlobalContextEiPNS_14SmallBitVectorEmNSt3__18functionIFNS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_7RegNumTEEEENS6_IFPKcNS_8RegClassEEEEENK3$_0clERKNS5_6vectorISC_NSA_ISC_EEEERNSM_IS3_NSA_IS3_EEEE"(%class.anon* nocapture readonly, %"class.std::__1::vector.92"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.355"* nocapture readonly dereferenceable(24)) unnamed_addr #5 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %1, i64 0, i32 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string"* %9, %11
  br i1 %12, label %32, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 0
  %27 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %28 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 3
  %29 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %2, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1
  br label %33

32:                                               ; preds = %197, %3
  ret void

33:                                               ; preds = %13, %197
  %34 = phi %"class.std::__1::basic_string"* [ %9, %13 ], [ %198, %197 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #23
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #23
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %42 = select i1 %38, i8* %40, i8* %41
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %37 to i64
  %46 = select i1 %38, i64 %44, i64 %45
  %47 = getelementptr inbounds i8, i8* %42, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = ptrtoint i8* %42 to i64
  %50 = icmp slt i64 %46, 1
  br i1 %50, label %70, label %51

51:                                               ; preds = %33, %59
  %52 = phi i64 [ %62, %59 ], [ %46, %33 ]
  %53 = phi i8* [ %60, %59 ], [ %42, %33 ]
  %54 = call i8* @memchr(i8* %53, i32 58, i64 %52) #24
  %55 = icmp eq i8* %54, null
  br i1 %55, label %70, label %56

56:                                               ; preds = %51
  %57 = load i8, i8* %54, align 1
  %58 = icmp eq i8 %57, 58
  br i1 %58, label %64, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds i8, i8* %54, i64 1
  %61 = ptrtoint i8* %60 to i64
  %62 = sub i64 %48, %61
  %63 = icmp slt i64 %62, 1
  br i1 %63, label %70, label %51

64:                                               ; preds = %56
  %65 = ptrtoint i8* %54 to i64
  %66 = icmp eq i8* %54, %47
  %67 = sub i64 %65, %49
  %68 = icmp eq i64 %67, -1
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %73

70:                                               ; preds = %59, %51, %64, %33
  %71 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)) #24
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %34) #24
  br label %86

73:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #23
  %74 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::allocator.83"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %34, i64 0, i64 %67, %"class.std::__1::allocator.83"* dereferenceable(1) %74) #24
  %75 = load i8, i8* %22, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %78) #25
  br label %79

79:                                               ; preds = %77, %73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %20, i64 24, i1 false) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #23
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #23
  %80 = add nuw i64 %67, 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %34, i64 %80, i64 -1, %"class.std::__1::allocator.83"* dereferenceable(1) %74) #24
  %81 = load i8, i8* %25, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %84) #25
  br label %85

85:                                               ; preds = %83, %79
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %23, i64 24, i1 false) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #23
  br label %86

86:                                               ; preds = %70, %85
  %87 = load %"class.std::__1::unordered_map.362"*, %"class.std::__1::unordered_map.362"** %26, align 8
  %88 = getelementptr inbounds %"class.std::__1::unordered_map.362", %"class.std::__1::unordered_map.362"* %87, i64 0, i32 0
  %89 = call %"struct.std::__1::__hash_node_base.367"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table.363"* %88, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #24
  %90 = icmp eq %"struct.std::__1::__hash_node_base.367"* %89, null
  br i1 %90, label %91, label %121

91:                                               ; preds = %86
  %92 = load %"class.std::__1::vector.92"*, %"class.std::__1::vector.92"** %31, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %92, i64 0, i32 0, i32 1
  %94 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %92, i64 0, i32 0, i32 2, i32 0, i32 0
  %96 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %95, align 8
  %97 = icmp eq %"class.std::__1::basic_string"* %94, %96
  br i1 %97, label %110, label %98

98:                                               ; preds = %91
  %99 = load i8, i8* %25, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 8 %17, i64 24, i1 false) #23
  br label %106

103:                                              ; preds = %98
  %104 = load i8*, i8** %18, align 8
  %105 = load i64, i64* %19, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %94, i8* %104, i64 %105) #24
  br label %106

106:                                              ; preds = %103, %101
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 1
  %108 = ptrtoint %"class.std::__1::basic_string"* %107 to i64
  %109 = bitcast %"class.std::__1::basic_string"** %93 to i64*
  store i64 %108, i64* %109, align 8
  br label %111

110:                                              ; preds = %91
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.92"* %92, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #24
  br label %111

111:                                              ; preds = %106, %110
  %112 = load i8, i8* %25, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %115) #25
  br label %116

116:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #23
  %117 = load i8, i8* %22, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %197

119:                                              ; preds = %116
  %120 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %120) #25
  br label %197

121:                                              ; preds = %86
  %122 = load %"class.std::__1::unordered_map.362"*, %"class.std::__1::unordered_map.362"** %26, align 8
  %123 = getelementptr inbounds %"class.std::__1::unordered_map.362", %"class.std::__1::unordered_map.362"* %122, i64 0, i32 0
  %124 = call %"struct.std::__1::__hash_node_base.367"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table.363"* %123, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #24
  %125 = icmp eq %"struct.std::__1::__hash_node_base.367"* %124, null
  br i1 %125, label %126, label %127

126:                                              ; preds = %121
  call void @abort() #26
  unreachable

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %124, i64 5
  %129 = bitcast %"struct.std::__1::__hash_node_base.367"* %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = load i64*, i64** %27, align 8
  %132 = load i64, i64* %131, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %187, label %134

134:                                              ; preds = %127
  %135 = lshr i32 %130, 6
  %136 = zext i32 %135 to i64
  %137 = and i32 %130, 63
  %138 = zext i32 %137 to i64
  %139 = shl i64 1, %138
  %140 = xor i64 %139, -1
  br label %141

141:                                              ; preds = %134, %181
  %142 = phi i64 [ 0, %134 ], [ %183, %181 ]
  %143 = phi i32 [ 0, %134 ], [ %182, %181 ]
  %144 = load i8, i8* %22, align 1
  %145 = icmp slt i8 %144, 0
  %146 = load i64, i64* %16, align 8
  %147 = zext i8 %144 to i64
  %148 = select i1 %145, i64 %146, i64 %147
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %167, label %150

150:                                              ; preds = %141
  %151 = load %"class.std::__1::function.349"*, %"class.std::__1::function.349"** %28, align 8
  %152 = trunc i32 %143 to i8
  %153 = getelementptr inbounds %"class.std::__1::function.349", %"class.std::__1::function.349"* %151, i64 0, i32 0, i32 1, i32 0
  %154 = load i8* (%"union.std::__1::__function::__policy_storage"*, i8)*, i8* (%"union.std::__1::__function::__policy_storage"*, i8)** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::function.349", %"class.std::__1::function.349"* %151, i64 0, i32 0, i32 0
  %156 = call i8* %154(%"union.std::__1::__function::__policy_storage"* %155, i8 zeroext %152) #24
  %157 = call i64 @strlen(i8* %156) #24
  %158 = load i8, i8* %22, align 1
  %159 = icmp slt i8 %158, 0
  %160 = load i64, i64* %16, align 8
  %161 = zext i8 %158 to i64
  %162 = select i1 %159, i64 %160, i64 %161
  %163 = icmp eq i64 %157, %162
  br i1 %163, label %164, label %181

164:                                              ; preds = %150
  %165 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* %156, i64 %157) #24
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %181

167:                                              ; preds = %164, %141
  %168 = load %"class.Ice::SmallBitVector"**, %"class.Ice::SmallBitVector"*** %29, align 8
  %169 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %168, align 8
  %170 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %169, i64 %142, i32 0, i64 %136
  %171 = load %"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"** %30, align 8
  %172 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %171, i64 %142, i32 0, i64 %136
  %173 = load i64, i64* %170, align 8
  %174 = and i64 %173, %139
  %175 = icmp eq i64 %174, 0
  %176 = load i64, i64* %172, align 8
  br i1 %175, label %179, label %177

177:                                              ; preds = %167
  %178 = or i64 %176, %139
  store i64 %178, i64* %172, align 8
  br label %181

179:                                              ; preds = %167
  %180 = and i64 %176, %140
  store i64 %180, i64* %172, align 8
  br label %181

181:                                              ; preds = %150, %179, %177, %164
  %182 = add i32 %143, 1
  %183 = zext i32 %182 to i64
  %184 = load i64*, i64** %27, align 8
  %185 = load i64, i64* %184, align 8
  %186 = icmp ugt i64 %185, %183
  br i1 %186, label %141, label %187

187:                                              ; preds = %181, %127
  %188 = load i8, i8* %25, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %187
  %191 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %191) #25
  br label %192

192:                                              ; preds = %187, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #23
  %193 = load i8, i8* %22, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %196) #25
  br label %197

197:                                              ; preds = %195, %192, %119, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #23
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %199 = icmp eq %"class.std::__1::basic_string"* %198, %11
  br i1 %199, label %32, label %33
}

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4llvm18raw_string_ostream3strEv(%"class.llvm::raw_string_ostream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %0, i64 0, i32 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %0, i64 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.llvm::raw_string_ostream"* %0 to %"class.llvm::raw_ostream"*
  tail call void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"* %8) #24
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  ret %"class.std::__1::basic_string"* %11
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14SmallBitVector5resetERKS0_(%"class.Ice::SmallBitVector"*, %"class.Ice::SmallBitVector"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %1, i64 0, i32 0, i64 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @llvm.cttz.i64(i64 %4, i1 true) #23, !range !9
  %8 = trunc i64 %7 to i32
  br label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %1, i64 0, i32 0, i64 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = tail call i64 @llvm.cttz.i64(i64 %11, i1 true) #23, !range !9
  %15 = trunc i64 %14 to i32
  %16 = or i32 %15, 64
  br label %17

17:                                               ; preds = %6, %13
  %18 = phi i32 [ %8, %6 ], [ %16, %13 ]
  br label %20

19:                                               ; preds = %20, %9
  ret void

20:                                               ; preds = %17, %20
  %21 = phi i32 [ %31, %20 ], [ %18, %17 ]
  %22 = lshr i32 %21, 6
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %0, i64 0, i32 0, i64 %23
  %25 = and i32 %21, 63
  %26 = zext i32 %25 to i64
  %27 = shl i64 1, %26
  %28 = xor i64 %27, -1
  %29 = load i64, i64* %24, align 8
  %30 = and i64 %29, %28
  store i64 %30, i64* %24, align 8
  %31 = tail call i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"* %1, i32 %21) #24
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %19, label %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.Ice::TargetLowering"* @_ZN3Ice14TargetLowering14createLoweringENS_10TargetArchEPNS_3CfgE(i32, %"class.Ice::Cfg"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %0, 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call fastcc void @_ZN3Ice12_GLOBAL__N_119badTargetFatalErrorENS_10TargetArchE(i32 %0) #27
  unreachable

5:                                                ; preds = %2
  %6 = tail call %"class.Ice::TargetLowering"* @_ZN5X866420createTargetLoweringEPN3Ice3CfgE(%"class.Ice::Cfg"* %1) #24
  ret %"class.Ice::TargetLowering"* %6
}

; Function Attrs: noreturn nounwind optsize ssp uwtable
define internal fastcc void @_ZN3Ice12_GLOBAL__N_119badTargetFatalErrorENS_10TargetArchE(i32) unnamed_addr #7 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #23
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #23
  %6 = tail call i8* @_ZN3Ice16targetArchStringENS_10TargetArchE(i32 %0) #24
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* %6) #22
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #22
  call void @_ZN4llvm18report_fatal_errorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i1 zeroext true) #26
  unreachable
}

; Function Attrs: optsize
declare %"class.Ice::TargetLowering"* @_ZN5X866420createTargetLoweringEPN3Ice3CfgE(%"class.Ice::Cfg"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering10staticInitEPNS_13GlobalContextE(%"class.Ice::GlobalContext"*) local_unnamed_addr #0 align 2 {
  %2 = load i32, i32* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 4), align 8
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call fastcc void @_ZN3Ice12_GLOBAL__N_119badTargetFatalErrorENS_10TargetArchE(i32 %2) #27
  unreachable

5:                                                ; preds = %1
  %6 = load i1, i1* @_ZZN3Ice14TargetLowering10staticInitEPNS_13GlobalContextEE17InitGuardSZTARGET, align 1
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  store i1 true, i1* @_ZZN3Ice14TargetLowering10staticInitEPNS_13GlobalContextEE17InitGuardSZTARGET, align 1
  tail call void @_ZN5X866410staticInitEPN3Ice13GlobalContextE(%"class.Ice::GlobalContext"* %0) #24
  br label %8

8:                                                ; preds = %5, %7
  ret void
}

; Function Attrs: optsize
declare void @_ZN5X866410staticInitEPN3Ice13GlobalContextE(%"class.Ice::GlobalContext"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice14TargetLowering14shouldBePooledEPKNS_8ConstantE(%"class.Ice::Constant"*) local_unnamed_addr #0 align 2 {
  %2 = load i32, i32* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 4), align 8
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN5X866414shouldBePooledEPKN3Ice8ConstantE(%"class.Ice::Constant"* %0) #24
  br label %6

6:                                                ; preds = %1, %4
  %7 = phi i1 [ %5, %4 ], [ false, %1 ]
  ret i1 %7
}

; Function Attrs: optsize
declare zeroext i1 @_ZN5X866414shouldBePooledEPKN3Ice8ConstantE(%"class.Ice::Constant"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN3Ice14TargetLowering14getPointerTypeEv() local_unnamed_addr #0 align 2 {
  %1 = load i32, i32* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 4), align 8
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call i32 @_ZN5X866414getPointerTypeEv() #24
  br label %5

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ]
  ret i32 %6
}

; Function Attrs: optsize
declare i32 @_ZN5X866414getPointerTypeEv() local_unnamed_addr #8

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZN3Ice14TargetLowering29determineSandboxTypeFromFlagsERKNS_7ClFlagsE(%"class.Ice::ClFlags"* nocapture readonly dereferenceable(1280)) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.Ice::ClFlags", %"class.Ice::ClFlags"* %0, i64 0, i32 59
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.Ice::ClFlags", %"class.Ice::ClFlags"* %0, i64 0, i32 61
  %6 = load i8, i8* %5, align 8
  %7 = select i1 %4, i8 %6, i8 2
  %8 = zext i8 %7 to i32
  ret i32 %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLoweringC2EPNS_3CfgE(%"class.Ice::TargetLowering"* nocapture, %"class.Ice::Cfg"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [76 x i8*] }, { [76 x i8*] }* @_ZTVN3Ice14TargetLoweringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  store %"class.Ice::Cfg"* %1, %"class.Ice::Cfg"** %6, align 8
  %7 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 1
  %9 = bitcast %"class.Ice::GlobalContext"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.Ice::GlobalContext"** %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 6
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 9
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 10
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %17 = bitcast %"class.Ice::LoweringContext"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 64, i1 false) #23
  %18 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 13
  %19 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 59), align 8, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 61), align 8
  %22 = select i1 %20, i8 %21, i8 2
  %23 = zext i8 %22 to i32
  store i32 %23, i32* %18, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering10AutoBundleC2EPS0_NS_14InstBundleLock6OptionE(%"class.Ice::TargetLowering::AutoBundle"* nocapture, %"class.Ice::TargetLowering"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.Ice::TargetLowering::AutoBundle", %"class.Ice::TargetLowering::AutoBundle"* %0, i64 0, i32 0
  store %"class.Ice::TargetLowering"* %1, %"class.Ice::TargetLowering"** %5, align 8
  %6 = getelementptr inbounds %"class.Ice::TargetLowering::AutoBundle", %"class.Ice::TargetLowering::AutoBundle"* %0, i64 0, i32 1
  %7 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 61), align 8, !range !2
  store i8 %7, i8* %6, align 8
  %8 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %1, i64 0, i32 1
  store i8 1, i8* %8, align 8
  %9 = load i8, i8* %6, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store i32 %2, i32* %4, align 4
  %13 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %1, i64 0, i32 12
  %14 = call %"class.Ice::InstBundleLock"* @_ZN3Ice15LoweringContext6insertINS_14InstBundleLockEJRNS2_6OptionEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %13, i32* nonnull dereferenceable(4) %4) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  br label %15

15:                                               ; preds = %3, %11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering10AutoBundleD2Ev(%"class.Ice::TargetLowering::AutoBundle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::TargetLowering::AutoBundle", %"class.Ice::TargetLowering::AutoBundle"* %0, i64 0, i32 0
  %3 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %3, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.Ice::TargetLowering::AutoBundle", %"class.Ice::TargetLowering::AutoBundle"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %2, align 8
  %10 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %9, i64 0, i32 12
  %11 = tail call %"class.Ice::InstBundleUnlock"* @_ZN3Ice15LoweringContext6insertINS_16InstBundleUnlockEJEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %10) #24
  br label %12

12:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering20genTargetHelperCallsEv(%"class.Ice::TargetLowering"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1, !range !2
  store i8 1, i8* %3, align 1
  %5 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %6 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %5, i64 0, i32 14, i32 0, i32 0
  %7 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %6, align 8
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %5, i64 0, i32 14, i32 0, i32 1
  %9 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %8, align 8
  %10 = icmp eq %"class.Ice::CfgNode"** %7, %9
  br i1 %10, label %21, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %13 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 5, i32 0
  %15 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 3
  %16 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 2, i32 0
  %17 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)***
  %18 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 2
  %19 = bitcast %"class.llvm::ilist_iterator"* %15 to i64*
  %20 = bitcast %"class.llvm::ilist_iterator"* %18 to i64*
  br label %22

21:                                               ; preds = %42, %1
  store i8 %4, i8* %3, align 1
  ret void

22:                                               ; preds = %11, %42
  %23 = phi %"class.Ice::CfgNode"** [ %7, %11 ], [ %43, %42 ]
  %24 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %23, align 8
  store %"class.Ice::CfgNode"* %24, %"class.Ice::CfgNode"** %13, align 8
  %25 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %24, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store %"class.llvm::ilist_node_impl"* %25, %"class.llvm::ilist_node_impl"** %14, align 8
  tail call void @_ZN3Ice15LoweringContext6rewindEv(%"class.Ice::LoweringContext"* %12) #24
  tail call void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* %12, %"class.llvm::ilist_iterator"* dereferenceable(8) %15) #24
  %26 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %16, align 8
  %27 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %14, align 8
  %28 = icmp eq %"class.llvm::ilist_node_impl"* %26, %27
  br i1 %28, label %42, label %29

29:                                               ; preds = %22, %29
  %30 = phi %"class.llvm::ilist_node_impl"* [ %39, %29 ], [ %26, %22 ]
  %31 = icmp eq %"class.llvm::ilist_node_impl"* %30, null
  %32 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %30, i64 -1, i32 0, i32 1
  %33 = bitcast %"class.llvm::ilist_node_base"** %32 to %"class.Ice::Inst"*
  %34 = select i1 %31, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %33
  %35 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*** %17, align 8
  %36 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)** %35, i64 65
  %37 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)** %36, align 8
  tail call void %37(%"class.Ice::TargetLowering"* %0, %"class.Ice::Inst"* %34) #24
  %38 = load i64, i64* %19, align 8
  store i64 %38, i64* %20, align 8
  tail call void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* %12, %"class.llvm::ilist_iterator"* dereferenceable(8) %15) #24
  %39 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %16, align 8
  %40 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %14, align 8
  %41 = icmp eq %"class.llvm::ilist_node_impl"* %39, %40
  br i1 %41, label %42, label %29

42:                                               ; preds = %29, %22
  %43 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %23, i64 1
  %44 = icmp eq %"class.Ice::CfgNode"** %43, %9
  br i1 %44, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering12doAddressOptEv(%"class.Ice::TargetLowering"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*)***
  %3 = load void (%"class.Ice::TargetLowering"*)**, void (%"class.Ice::TargetLowering"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %3, i64 67
  %5 = load void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %4, align 8
  tail call void %5(%"class.Ice::TargetLowering"* %0) #24
  %6 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %7 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 2, i32 0
  %8 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %7, align 8
  %9 = icmp eq %"class.llvm::ilist_node_impl"* %8, null
  %10 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %8, i64 -1, i32 0, i32 1
  %11 = bitcast %"class.llvm::ilist_node_base"** %10 to %"class.Ice::Inst"*
  %12 = select i1 %9, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %11
  %13 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %12, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %23 [
    i32 11, label %15
    i32 15, label %19
  ]

15:                                               ; preds = %1
  %16 = load void (%"class.Ice::TargetLowering"*)**, void (%"class.Ice::TargetLowering"*)*** %2, align 8
  %17 = getelementptr inbounds void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %16, i64 68
  %18 = load void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %17, align 8
  tail call void %18(%"class.Ice::TargetLowering"* %0) #24
  br label %40

19:                                               ; preds = %1
  %20 = load void (%"class.Ice::TargetLowering"*)**, void (%"class.Ice::TargetLowering"*)*** %2, align 8
  %21 = getelementptr inbounds void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %20, i64 69
  %22 = load void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %21, align 8
  tail call void %22(%"class.Ice::TargetLowering"* %0) #24
  br label %40

23:                                               ; preds = %1
  %24 = icmp ne i32 %14, 9
  %25 = icmp eq %"class.Ice::Inst"* %12, null
  %26 = or i1 %24, %25
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %12, i64 0, i32 15
  %29 = bitcast [4 x i8]* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 536870911
  switch i32 %31, label %40 [
    i32 25, label %32
    i32 32, label %36
  ]

32:                                               ; preds = %27
  %33 = load void (%"class.Ice::TargetLowering"*)**, void (%"class.Ice::TargetLowering"*)*** %2, align 8
  %34 = getelementptr inbounds void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %33, i64 70
  %35 = load void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %34, align 8
  tail call void %35(%"class.Ice::TargetLowering"* %0) #24
  br label %40

36:                                               ; preds = %27
  %37 = load void (%"class.Ice::TargetLowering"*)**, void (%"class.Ice::TargetLowering"*)*** %2, align 8
  %38 = getelementptr inbounds void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %37, i64 71
  %39 = load void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %38, align 8
  tail call void %39(%"class.Ice::TargetLowering"* %0) #24
  br label %40

40:                                               ; preds = %27, %36, %32, %23, %19, %15
  %41 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 3
  %42 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 2
  %43 = bitcast %"class.llvm::ilist_iterator"* %41 to i64*
  %44 = bitcast %"class.llvm::ilist_iterator"* %42 to i64*
  %45 = load i64, i64* %43, align 8
  store i64 %45, i64* %44, align 8
  tail call void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* %6, %"class.llvm::ilist_iterator"* dereferenceable(8) %41) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering5lowerEv(%"class.Ice::TargetLowering"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 2, i32 0
  %4 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %3, align 8
  %5 = icmp eq %"class.llvm::ilist_node_impl"* %4, null
  %6 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %4, i64 -1, i32 0, i32 1
  %7 = bitcast %"class.llvm::ilist_node_base"** %6 to %"class.Ice::Inst"*
  %8 = select i1 %5, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %7
  tail call void @_ZN3Ice4Inst12deleteIfDeadEv(%"class.Ice::Inst"* %8) #24
  %9 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %156

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %8, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -21
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %156, label %17

17:                                               ; preds = %12
  store i8 1, i8* %9, align 8
  switch i32 %14, label %146 [
    i32 1, label %18
    i32 2, label %24
    i32 17, label %30
    i32 3, label %36
    i32 18, label %42
    i32 4, label %48
    i32 5, label %54
    i32 6, label %60
    i32 7, label %66
    i32 8, label %72
    i32 10, label %78
    i32 9, label %84
    i32 11, label %98
    i32 12, label %104
    i32 13, label %110
    i32 14, label %116
    i32 25, label %122
    i32 15, label %128
    i32 16, label %134
    i32 0, label %140
  ]

18:                                               ; preds = %17
  %19 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstAlloca"*
  %20 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAlloca"*)***
  %21 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAlloca"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAlloca"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAlloca"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAlloca"*)** %21, i64 44
  %23 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAlloca"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAlloca"*)** %22, align 8
  tail call void %23(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstAlloca"* %19) #24
  br label %151

24:                                               ; preds = %17
  %25 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstArithmetic"*
  %26 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstArithmetic"*)***
  %27 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstArithmetic"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstArithmetic"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstArithmetic"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstArithmetic"*)** %27, i64 45
  %29 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstArithmetic"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstArithmetic"*)** %28, align 8
  tail call void %29(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstArithmetic"* %25) #24
  br label %151

30:                                               ; preds = %17
  %31 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstAssign"*
  %32 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAssign"*)***
  %33 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAssign"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAssign"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAssign"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAssign"*)** %33, i64 46
  %35 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAssign"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstAssign"*)** %34, align 8
  tail call void %35(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstAssign"* %31) #24
  br label %151

36:                                               ; preds = %17
  %37 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstBr"*
  %38 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBr"*)***
  %39 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBr"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBr"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBr"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBr"*)** %39, i64 47
  %41 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBr"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBr"*)** %40, align 8
  tail call void %41(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstBr"* %37) #24
  br label %151

42:                                               ; preds = %17
  %43 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstBreakpoint"*
  %44 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBreakpoint"*)***
  %45 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBreakpoint"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBreakpoint"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBreakpoint"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBreakpoint"*)** %45, i64 48
  %47 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBreakpoint"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstBreakpoint"*)** %46, align 8
  tail call void %47(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstBreakpoint"* %43) #24
  br label %151

48:                                               ; preds = %17
  %49 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstCall"*
  %50 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCall"*)***
  %51 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCall"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCall"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCall"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCall"*)** %51, i64 49
  %53 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCall"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCall"*)** %52, align 8
  tail call void %53(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstCall"* %49) #24
  br label %151

54:                                               ; preds = %17
  %55 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstCast"*
  %56 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCast"*)***
  %57 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCast"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCast"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCast"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCast"*)** %57, i64 50
  %59 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCast"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstCast"*)** %58, align 8
  tail call void %59(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstCast"* %55) #24
  br label %151

60:                                               ; preds = %17
  %61 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstExtractElement"*
  %62 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstExtractElement"*)***
  %63 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstExtractElement"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstExtractElement"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstExtractElement"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstExtractElement"*)** %63, i64 52
  %65 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstExtractElement"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstExtractElement"*)** %64, align 8
  tail call void %65(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstExtractElement"* %61) #24
  br label %151

66:                                               ; preds = %17
  %67 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstFcmp"*
  %68 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstFcmp"*)***
  %69 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstFcmp"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstFcmp"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstFcmp"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstFcmp"*)** %69, i64 51
  %71 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstFcmp"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstFcmp"*)** %70, align 8
  tail call void %71(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstFcmp"* %67) #24
  br label %151

72:                                               ; preds = %17
  %73 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstIcmp"*
  %74 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIcmp"*)***
  %75 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIcmp"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIcmp"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIcmp"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIcmp"*)** %75, i64 53
  %77 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIcmp"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIcmp"*)** %76, align 8
  tail call void %77(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstIcmp"* %73) #24
  br label %151

78:                                               ; preds = %17
  %79 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstInsertElement"*
  %80 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstInsertElement"*)***
  %81 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstInsertElement"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstInsertElement"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstInsertElement"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstInsertElement"*)** %81, i64 54
  %83 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstInsertElement"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstInsertElement"*)** %82, align 8
  tail call void %83(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstInsertElement"* %79) #24
  br label %151

84:                                               ; preds = %17
  %85 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstIntrinsic"*
  %86 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %8, i64 0, i32 15
  %87 = bitcast [4 x i8]* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 1073741824
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 7
  store i8 1, i8* %92, align 1
  br label %93

93:                                               ; preds = %84, %91
  %94 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIntrinsic"*)***
  %95 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIntrinsic"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIntrinsic"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIntrinsic"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIntrinsic"*)** %95, i64 55
  %97 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIntrinsic"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstIntrinsic"*)** %96, align 8
  tail call void %97(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstIntrinsic"* %85) #24
  br label %151

98:                                               ; preds = %17
  %99 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstLoad"*
  %100 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstLoad"*)***
  %101 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstLoad"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstLoad"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstLoad"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstLoad"*)** %101, i64 56
  %103 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstLoad"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstLoad"*)** %102, align 8
  tail call void %103(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstLoad"* %99) #24
  br label %151

104:                                              ; preds = %17
  %105 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstPhi"*
  %106 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstPhi"*)***
  %107 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstPhi"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstPhi"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstPhi"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstPhi"*)** %107, i64 57
  %109 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstPhi"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstPhi"*)** %108, align 8
  tail call void %109(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstPhi"* %105) #24
  br label %151

110:                                              ; preds = %17
  %111 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstRet"*
  %112 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstRet"*)***
  %113 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstRet"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstRet"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstRet"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstRet"*)** %113, i64 58
  %115 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstRet"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstRet"*)** %114, align 8
  tail call void %115(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstRet"* %111) #24
  br label %151

116:                                              ; preds = %17
  %117 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstSelect"*
  %118 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSelect"*)***
  %119 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSelect"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSelect"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSelect"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSelect"*)** %119, i64 59
  %121 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSelect"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSelect"*)** %120, align 8
  tail call void %121(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstSelect"* %117) #24
  br label %151

122:                                              ; preds = %17
  %123 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstShuffleVector"*
  %124 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstShuffleVector"*)***
  %125 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstShuffleVector"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstShuffleVector"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstShuffleVector"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstShuffleVector"*)** %125, i64 60
  %127 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstShuffleVector"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstShuffleVector"*)** %126, align 8
  tail call void %127(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstShuffleVector"* %123) #24
  br label %151

128:                                              ; preds = %17
  %129 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstStore"*
  %130 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstStore"*)***
  %131 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstStore"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstStore"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstStore"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstStore"*)** %131, i64 61
  %133 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstStore"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstStore"*)** %132, align 8
  tail call void %133(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstStore"* %129) #24
  br label %151

134:                                              ; preds = %17
  %135 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstSwitch"*
  %136 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSwitch"*)***
  %137 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSwitch"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSwitch"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSwitch"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSwitch"*)** %137, i64 62
  %139 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSwitch"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstSwitch"*)** %138, align 8
  tail call void %139(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstSwitch"* %135) #24
  br label %151

140:                                              ; preds = %17
  %141 = bitcast %"class.Ice::Inst"* %8 to %"class.Ice::InstUnreachable"*
  %142 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::InstUnreachable"*)***
  %143 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstUnreachable"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstUnreachable"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::InstUnreachable"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstUnreachable"*)** %143, i64 63
  %145 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::InstUnreachable"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::InstUnreachable"*)** %144, align 8
  tail call void %145(%"class.Ice::TargetLowering"* %0, %"class.Ice::InstUnreachable"* %141) #24
  br label %151

146:                                              ; preds = %17
  %147 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)***
  %148 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)** %148, i64 64
  %150 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)** %149, align 8
  tail call void %150(%"class.Ice::TargetLowering"* %0, %"class.Ice::Inst"* %8) #24
  br label %151

151:                                              ; preds = %146, %140, %134, %128, %122, %116, %110, %104, %98, %93, %78, %72, %66, %60, %54, %48, %42, %36, %30, %24, %18
  %152 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*)***
  %153 = load void (%"class.Ice::TargetLowering"*)**, void (%"class.Ice::TargetLowering"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %153, i64 73
  %155 = load void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %154, align 8
  tail call void %155(%"class.Ice::TargetLowering"* %0) #24
  br label %156

156:                                              ; preds = %1, %12, %151
  %157 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 3
  %158 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 2
  %159 = bitcast %"class.llvm::ilist_iterator"* %157 to i64*
  %160 = bitcast %"class.llvm::ilist_iterator"* %158 to i64*
  %161 = load i64, i64* %159, align 8
  store i64 %161, i64* %160, align 8
  tail call void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* %2, %"class.llvm::ilist_iterator"* dereferenceable(8) %157) #24
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice4Inst12deleteIfDeadEv(%"class.Ice::Inst"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering9lowerInstEPNS_7CfgNodeEN4llvm14ilist_iteratorINS3_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEEPNS_13InstHighLevelE(%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*, %"class.llvm::ilist_node_impl"*, %"class.Ice::InstHighLevel"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %6 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %5, i64 0, i32 0
  store %"class.Ice::CfgNode"* %1, %"class.Ice::CfgNode"** %6, align 8
  %7 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 5, i32 0
  store %"class.llvm::ilist_node_impl"* %7, %"class.llvm::ilist_node_impl"** %8, align 8
  tail call void @_ZN3Ice15LoweringContext6rewindEv(%"class.Ice::LoweringContext"* %5) #24
  %9 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 3
  tail call void @_ZNK3Ice15LoweringContext14advanceForwardERN4llvm14ilist_iteratorINS1_12ilist_detail12node_optionsINS_4InstELb0ELb0EvEELb0ELb0EEE(%"class.Ice::LoweringContext"* %5, %"class.llvm::ilist_iterator"* dereferenceable(8) %9) #24
  %10 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 3, i32 0
  store %"class.llvm::ilist_node_impl"* %2, %"class.llvm::ilist_node_impl"** %10, align 8
  %11 = icmp eq %"class.Ice::InstHighLevel"* %3, null
  %12 = getelementptr inbounds %"class.Ice::InstHighLevel", %"class.Ice::InstHighLevel"* %3, i64 0, i32 0, i32 1, i32 0
  %13 = select i1 %11, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %12
  %14 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0
  %16 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %16, align 8
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %14, %"class.llvm::ilist_node_base"** %18, align 8
  %19 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %17, %"class.llvm::ilist_node_base"** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %17, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %15, %"class.llvm::ilist_node_base"** %20, align 8
  store %"class.llvm::ilist_node_base"* %15, %"class.llvm::ilist_node_base"** %16, align 8
  %21 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 1
  %22 = bitcast %"class.Ice::Inst"** %21 to %"class.Ice::InstHighLevel"**
  store %"class.Ice::InstHighLevel"* %3, %"class.Ice::InstHighLevel"** %22, align 8
  %23 = bitcast %"class.llvm::ilist_node_impl"* %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 2, i32 0
  %26 = bitcast %"class.llvm::ilist_node_impl"** %25 to i64*
  store i64 %24, i64* %26, align 8
  tail call void @_ZN3Ice14TargetLowering5lowerEv(%"class.Ice::TargetLowering"* %0) #22
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering10lowerOtherEPKNS_4InstE(%"class.Ice::TargetLowering"* nocapture readonly, %"class.Ice::Inst"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %5 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #22
  call void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #24
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #25
  br label %14

14:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #23
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i64 @strlen(i8* %1) #24
  %4 = icmp ugt i64 %3, -17
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #26
  unreachable

7:                                                ; preds = %2
  %8 = icmp ult i64 %3, 23
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = add nuw i64 %3, 16
  %11 = and i64 %10, -16
  %12 = tail call i8* @_Znwm(i64 %11) #25
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = or i64 %11, -9223372036854775808
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %16, align 8
  br label %23

17:                                               ; preds = %7
  %18 = trunc i64 %3 to i8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 %18, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %9
  %24 = phi i8* [ %12, %9 ], [ %21, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %1, i64 %3, i1 false) #23
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %3
  store i8 0, i8* %27, align 1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering8regAllocENS_12RegAllocKindE(%"class.Ice::TargetLowering"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Ice::LinearScan", align 8
  %4 = alloca %"class.Ice::SmallBitVector", align 8
  %5 = alloca %"class.std::__1::set", align 8
  %6 = alloca %"class.std::__1::set", align 8
  %7 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %8 = bitcast %"class.Ice::LinearScan"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1880, i8* nonnull %8) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 1880, i1 false)
  %9 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %7, align 8
  call void @_ZN3Ice10LinearScanC1EPNS_3CfgE(%"class.Ice::LinearScan"* nonnull %3, %"class.Ice::Cfg"* %9) #24
  %10 = bitcast %"class.Ice::TargetLowering"* %0 to i1 (%"class.Ice::TargetLowering"*)***
  %11 = load i1 (%"class.Ice::TargetLowering"*)**, i1 (%"class.Ice::TargetLowering"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.Ice::TargetLowering"*)*, i1 (%"class.Ice::TargetLowering"*)** %11, i64 10
  %13 = load i1 (%"class.Ice::TargetLowering"*)*, i1 (%"class.Ice::TargetLowering"*)** %12, align 8
  %14 = call zeroext i1 %13(%"class.Ice::TargetLowering"* %0) #24
  %15 = select i1 %14, i32 8, i32 0
  %16 = bitcast %"class.Ice::SmallBitVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #23
  %17 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)***
  %18 = bitcast %"class.Ice::SmallBitVector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = load void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)**, void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)*** %17, align 8
  %20 = getelementptr inbounds void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)*, void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)** %19, i64 24
  %21 = load void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)*, void (%"class.Ice::SmallBitVector"*, %"class.Ice::TargetLowering"*, i32, i32)** %20, align 8
  call void %21(%"class.Ice::SmallBitVector"* nonnull sret %4, %"class.Ice::TargetLowering"* %0, i32 3, i32 %15) #24
  %22 = icmp eq i32 %1, 1
  %23 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 48), align 1
  %24 = select i1 %22, i8 %23, i8 0
  %25 = bitcast %"class.std::__1::set"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #23
  %26 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__compressed_pair.430"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #23
  store %"class.std::__1::__tree_end_node"* %29, %"class.std::__1::__tree_end_node"** %26, align 8
  %31 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 0
  %32 = bitcast %"class.llvm::BumpPtrAllocatorImpl"** %27 to i64*
  %33 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 1
  %34 = bitcast %"struct.std::__1::__compressed_pair_elem.431"* %33 to i64*
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0
  %38 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node"**
  %39 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 8, i32 0, i32 0
  %40 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 8, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__compressed_pair.430"* %41 to i64*
  br label %43

43:                                               ; preds = %55, %2
  %44 = phi %"class.std::__1::__tree_end_node"* [ %29, %2 ], [ %57, %55 ]
  %45 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %46 = phi i32 [ %1, %2 ], [ 2, %55 ]
  %47 = phi i8 [ %24, %2 ], [ %52, %55 ]
  store i64 0, i64* %42, align 8
  store i64 %45, i64* %34, align 8
  store i64 0, i64* %35, align 8
  store %"class.std::__1::__tree_end_node"* %36, %"class.std::__1::__tree_end_node"** %31, align 8
  call void @_ZNSt3__13setIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6insertINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SH_(%"class.std::__1::set"* nonnull %6, %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"* %29) #24
  call void @_ZN3Ice10LinearScan4initENS_12RegAllocKindENSt3__13setIPNS_8VariableENS2_4lessIS5_EENS_12sz_allocatorIS5_NS_18CfgAllocatorTraitsEEEEE(%"class.Ice::LinearScan"* nonnull %3, i32 %46, %"class.std::__1::set"* nonnull %6) #24
  %48 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %38, align 8
  call void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.429"* nonnull %37, %"class.std::__1::__tree_node"* %48) #24
  call void @_ZN3Ice10LinearScan4scanERKNS_14SmallBitVectorE(%"class.Ice::LinearScan"* nonnull %3, %"class.Ice::SmallBitVector"* nonnull dereferenceable(24) %4) #24
  %49 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %39, align 8
  %50 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %40, align 8
  %51 = icmp eq %"class.Ice::Variable"** %49, %50
  %52 = select i1 %51, i8 0, i8 %47
  %53 = and i8 %52, 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %43
  %56 = load i64, i64* %32, align 8
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  br label %43

58:                                               ; preds = %43
  %59 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 33), align 2, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZN3Ice14TargetLowering21postRegallocSplittingERKNS_14SmallBitVectorE(%"class.Ice::TargetLowering"* %0, %"class.Ice::SmallBitVector"* nonnull dereferenceable(24) %4) #22
  br label %62

62:                                               ; preds = %58, %61
  %63 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0
  %64 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node"**
  %65 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %64, align 8
  call void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.429"* nonnull %63, %"class.std::__1::__tree_node"* %65) #24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #23
  %66 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 18, i32 0, i32 0
  %67 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %66, align 8
  %68 = icmp eq %"class.Ice::Variable"** %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  %70 = ptrtoint %"class.Ice::Variable"** %67 to i64
  %71 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 18, i32 0, i32 1
  %72 = bitcast %"class.Ice::Variable"*** %71 to i64*
  store i64 %70, i64* %72, align 8
  br label %73

73:                                               ; preds = %69, %62
  %74 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %77 = icmp eq i8* %75, %76
  br i1 %77, label %79, label %78

78:                                               ; preds = %73
  call void @free(i8* %75) #24
  br label %79

79:                                               ; preds = %78, %73
  %80 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %83 = icmp eq i8* %81, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %79
  call void @free(i8* %81) #24
  br label %85

85:                                               ; preds = %84, %79
  %86 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 9, i32 0, i32 0
  %87 = load i32*, i32** %86, align 8
  %88 = icmp eq i32* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = ptrtoint i32* %87 to i64
  %91 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 9, i32 0, i32 1
  %92 = bitcast i32** %91 to i64*
  store i64 %90, i64* %92, align 8
  br label %93

93:                                               ; preds = %89, %85
  %94 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %39, align 8
  %95 = icmp eq %"class.Ice::Variable"** %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = ptrtoint %"class.Ice::Variable"** %94 to i64
  %98 = bitcast %"class.Ice::Variable"*** %40 to i64*
  store i64 %97, i64* %98, align 8
  br label %99

99:                                               ; preds = %96, %93
  %100 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 7, i32 0, i32 0
  %101 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %100, align 8
  %102 = icmp eq %"class.Ice::Variable"** %101, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = ptrtoint %"class.Ice::Variable"** %101 to i64
  %105 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 7, i32 0, i32 1
  %106 = bitcast %"class.Ice::Variable"*** %105 to i64*
  store i64 %104, i64* %106, align 8
  br label %107

107:                                              ; preds = %103, %99
  %108 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 6, i32 0, i32 0
  %109 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %108, align 8
  %110 = icmp eq %"class.Ice::Variable"** %109, null
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = ptrtoint %"class.Ice::Variable"** %109 to i64
  %113 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 6, i32 0, i32 1
  %114 = bitcast %"class.Ice::Variable"*** %113 to i64*
  store i64 %112, i64* %114, align 8
  br label %115

115:                                              ; preds = %111, %107
  %116 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 5, i32 0, i32 0
  %117 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %116, align 8
  %118 = icmp eq %"class.Ice::Variable"** %117, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = ptrtoint %"class.Ice::Variable"** %117 to i64
  %121 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 5, i32 0, i32 1
  %122 = bitcast %"class.Ice::Variable"*** %121 to i64*
  store i64 %120, i64* %122, align 8
  br label %123

123:                                              ; preds = %119, %115
  %124 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 4, i32 0, i32 0
  %125 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %124, align 8
  %126 = icmp eq %"class.Ice::Variable"** %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = ptrtoint %"class.Ice::Variable"** %125 to i64
  %129 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 4, i32 0, i32 1
  %130 = bitcast %"class.Ice::Variable"*** %129 to i64*
  store i64 %128, i64* %130, align 8
  br label %131

131:                                              ; preds = %127, %123
  %132 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 3, i32 0, i32 0
  %133 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %132, align 8
  %134 = icmp eq %"class.Ice::Variable"** %133, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %131
  %136 = ptrtoint %"class.Ice::Variable"** %133 to i64
  %137 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %3, i64 0, i32 3, i32 0, i32 1
  %138 = bitcast %"class.Ice::Variable"*** %137 to i64*
  store i64 %136, i64* %138, align 8
  br label %139

139:                                              ; preds = %131, %135
  call void @llvm.lifetime.end.p0i8(i64 1880, i8* nonnull %8) #23
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice10LinearScanC1EPNS_3CfgE(%"class.Ice::LinearScan"*, %"class.Ice::Cfg"*) unnamed_addr #8

; Function Attrs: optsize
declare void @_ZN3Ice10LinearScan4initENS_12RegAllocKindENSt3__13setIPNS_8VariableENS2_4lessIS5_EENS_12sz_allocatorIS5_NS_18CfgAllocatorTraitsEEEEE(%"class.Ice::LinearScan"*, i32, %"class.std::__1::set"*) local_unnamed_addr #8

; Function Attrs: optsize
declare void @_ZN3Ice10LinearScan4scanERKNS_14SmallBitVectorE(%"class.Ice::LinearScan"*, %"class.Ice::SmallBitVector"* dereferenceable(24)) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering21postRegallocSplittingERKNS_14SmallBitVectorE(%"class.Ice::TargetLowering"* nocapture readonly, %"class.Ice::SmallBitVector"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::set", align 8
  %6 = alloca %"class.Ice::Variable"*, align 8
  %7 = alloca %"class.std::__1::set", align 8
  %8 = alloca %"class.std::__1::unordered_map.439", align 8
  %9 = alloca %"class.std::__1::vector.464", align 8
  %10 = alloca %"class.Ice::LiveRange", align 8
  %11 = alloca %"class.Ice::Variable"*, align 8
  %12 = alloca %"class.Ice::LinearScan", align 8
  %13 = alloca %"class.std::__1::set", align 8
  %14 = alloca %"class.Ice::Variable"*, align 8
  %15 = alloca %"class.std::__1::vector.464", align 8
  %16 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %17 = bitcast %"class.std::__1::set"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #23
  %18 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__compressed_pair.430"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #23
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %18, align 8
  %24 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %16, align 8
  %25 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %24, i64 0, i32 17, i32 0, i32 0
  %26 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %25, align 8
  %27 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %24, i64 0, i32 17, i32 0, i32 1
  %28 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %27, align 8
  %29 = icmp eq %"class.Ice::Variable"** %26, %28
  br i1 %29, label %541, label %30

30:                                               ; preds = %2
  %31 = bitcast %"class.Ice::Variable"** %6 to i8*
  %32 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0
  br label %36

33:                                               ; preds = %59
  %34 = load i64, i64* %20, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %541, label %62

36:                                               ; preds = %30, %59
  %37 = phi %"class.Ice::Variable"** [ %26, %30 ], [ %60, %59 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #23
  store %"class.Ice::Variable"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Variable"*), %"class.Ice::Variable"** %6, align 8
  %38 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %37, align 8
  store %"class.Ice::Variable"* %38, %"class.Ice::Variable"** %6, align 8
  %39 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %38, i64 0, i32 7
  %40 = load i8, i8* %39, align 4
  %41 = icmp eq i8 %40, 2
  br i1 %41, label %59, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %38, i64 0, i32 9, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %59

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %38, i64 0, i32 12
  %48 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %38, i64 0, i32 12, i32 0, i32 0, i32 1
  %49 = bitcast %"struct.std::__1::pair.312"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.Ice::LiveRange"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = lshr exact i64 %53, 3
  %55 = trunc i64 %54 to i32
  %56 = icmp ugt i32 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %46
  %58 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.429"* nonnull %32, %"class.Ice::Variable"** nonnull dereferenceable(8) %6, %"class.Ice::Variable"** nonnull dereferenceable(8) %6) #24
  br label %59

59:                                               ; preds = %42, %46, %57, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #23
  %60 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %37, i64 1
  %61 = icmp eq %"class.Ice::Variable"** %60, %28
  br i1 %61, label %33, label %36

62:                                               ; preds = %33
  %63 = bitcast %"class.std::__1::set"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #23
  %64 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %67 = bitcast %"class.std::__1::__compressed_pair.430"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #23
  store %"class.std::__1::__tree_end_node"* %66, %"class.std::__1::__tree_end_node"** %64, align 8
  %68 = bitcast %"class.std::__1::unordered_map.439"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %68) #23
  %69 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %8, i64 0, i32 0, i32 4, i64 0
  %70 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %8, i64 0, i32 0, i32 3
  %71 = bitcast %"class.std::__1::__compressed_pair.459"* %70 to i32*
  %72 = bitcast i8* %69 to i32*
  store i32 -1431655766, i32* %72, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 48, i1 false) #23
  store i32 1065353216, i32* %71, align 8
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %73, %22
  br i1 %74, label %92, label %75

75:                                               ; preds = %62
  %76 = bitcast i32* %3 to i8*
  %77 = bitcast %"class.std::__1::vector.464"* %9 to i8*
  %78 = getelementptr inbounds %"class.std::__1::vector.464", %"class.std::__1::vector.464"* %9, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::vector.464", %"class.std::__1::vector.464"* %9, i64 0, i32 0, i32 1
  %80 = bitcast %"class.Ice::Inst"*** %79 to i64*
  %81 = bitcast %"class.Ice::LiveRange"* %10 to i8*
  %82 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %10, i64 0, i32 1, i32 0, i32 3
  %83 = bitcast %"class.std::__1::__compressed_pair.337"* %82 to i32*
  %84 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %10, i64 0, i32 2, i32 0
  %85 = bitcast %"class.Ice::Variable"** %11 to i8*
  %86 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0
  %87 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %10, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %10, i64 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %10, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"struct.std::__1::pair.312"** %90 to i64*
  br label %118

92:                                               ; preds = %159, %62
  %93 = bitcast %"class.Ice::LinearScan"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1880, i8* nonnull %93) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 1880, i1 false)
  %94 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %16, align 8
  call void @_ZN3Ice10LinearScanC1EPNS_3CfgE(%"class.Ice::LinearScan"* nonnull %12, %"class.Ice::Cfg"* %94) #24
  %95 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %13, i64 0, i32 0, i32 0
  %96 = bitcast %"class.llvm::BumpPtrAllocatorImpl"** %19 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %13, i64 0, i32 0, i32 1, i32 1
  %100 = bitcast %"struct.std::__1::__compressed_pair_elem.431"* %99 to i64*
  store i64 %97, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"** %95, align 8
  %103 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %18, align 8
  call void @_ZNSt3__13setIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6insertINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SH_(%"class.std::__1::set"* nonnull %13, %"class.std::__1::__tree_end_node"* %103, %"class.std::__1::__tree_end_node"* %22) #24
  call void @_ZN3Ice10LinearScan4initENS_12RegAllocKindENSt3__13setIPNS_8VariableENS2_4lessIS5_EENS_12sz_allocatorIS5_NS_18CfgAllocatorTraitsEEEEE(%"class.Ice::LinearScan"* nonnull %12, i32 1, %"class.std::__1::set"* nonnull %13) #24
  %104 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %13, i64 0, i32 0
  %105 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.std::__1::__tree_node"**
  %106 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %105, align 8
  call void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.429"* nonnull %104, %"class.std::__1::__tree_node"* %106) #24
  call void @_ZN3Ice10LinearScan4scanERKNS_14SmallBitVectorE(%"class.Ice::LinearScan"* nonnull %12, %"class.Ice::SmallBitVector"* dereferenceable(24) %1) #24
  %107 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %107, %66
  br i1 %108, label %289, label %109

109:                                              ; preds = %92
  %110 = bitcast %"class.Ice::Variable"** %14 to i8*
  %111 = bitcast i32* %4 to i8*
  %112 = bitcast %"class.std::__1::vector.464"* %15 to i8*
  %113 = getelementptr inbounds %"class.std::__1::vector.464", %"class.std::__1::vector.464"* %15, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::vector.464", %"class.std::__1::vector.464"* %15, i64 0, i32 0, i32 1
  %115 = bitcast %"class.Ice::Variable"** %14 to i64*
  %116 = bitcast %"class.Ice::Inst"*** %114 to i64*
  %117 = bitcast %"class.std::__1::vector.464"* %15 to i8*
  br label %369

118:                                              ; preds = %75, %159
  %119 = phi %"class.std::__1::__tree_end_node"* [ %73, %75 ], [ %160, %159 ]
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 4
  %121 = bitcast %"class.std::__1::__tree_end_node"* %120 to %"class.Ice::Variable"**
  %122 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %121, align 8
  %123 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %122, i64 0, i32 12, i32 0, i32 0, i32 0
  %124 = load %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"** %123, align 8
  %125 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %122, i64 0, i32 12, i32 0, i32 0, i32 1
  %126 = load %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"** %125, align 8
  %127 = icmp eq %"struct.std::__1::pair.312"* %124, %126
  br i1 %127, label %131, label %128

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %122, i64 0, i32 12, i32 1, i32 0
  %130 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %122, i64 0, i32 0, i32 1
  br label %162

131:                                              ; preds = %286, %118
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 1, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %135, label %143

135:                                              ; preds = %131
  %136 = bitcast %"class.std::__1::__tree_end_node"* %119 to %"class.std::__1::__tree_node_base"*
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 2
  %138 = bitcast %"class.std::__1::__tree_end_node"* %137 to %"class.std::__1::__tree_end_node"**
  %139 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 0, i32 0
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_node_base"* %141, %136
  br i1 %142, label %159, label %150

143:                                              ; preds = %131, %143
  %144 = phi %"class.std::__1::__tree_node_base"* [ %146, %143 ], [ %133, %131 ]
  %145 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %148, label %143

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 0
  br label %159

150:                                              ; preds = %135, %150
  %151 = phi %"class.std::__1::__tree_end_node"** [ %154, %150 ], [ %138, %135 ]
  %152 = bitcast %"class.std::__1::__tree_end_node"** %151 to %"class.std::__1::__tree_node_base"**
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 2
  %155 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %155, i64 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, %153
  br i1 %158, label %159, label %150

159:                                              ; preds = %150, %135, %148
  %160 = phi %"class.std::__1::__tree_end_node"* [ %149, %148 ], [ %139, %135 ], [ %155, %150 ]
  %161 = icmp eq %"class.std::__1::__tree_end_node"* %160, %22
  br i1 %161, label %92, label %118

162:                                              ; preds = %128, %286
  %163 = phi %"struct.std::__1::pair.312"* [ %124, %128 ], [ %287, %286 ]
  %164 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76)
  store i32 %165, i32* %3, align 4
  %166 = call %"struct.std::__1::__hash_node_base.322"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.318"* %129, i32* nonnull dereferenceable(4) %3) #24
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %166, i64 3
  %168 = bitcast %"struct.std::__1::__hash_node_base.322"* %167 to %"class.Ice::CfgNode"**
  %169 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %168, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #23
  %170 = load i32, i32* %164, align 4
  %171 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %163, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  call fastcc void @_ZN3Ice12_GLOBAL__N_122getInstructionsInRangeEPNS_7CfgNodeEii(%"class.std::__1::vector.464"* nonnull sret %9, %"class.Ice::CfgNode"* %169, i32 %170, i32 %172) #22
  %173 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %78, align 8
  %174 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %79, align 8
  %175 = icmp eq %"class.Ice::Inst"** %173, %174
  br i1 %175, label %176, label %188

176:                                              ; preds = %250, %162
  %177 = phi i64 [ 0, %162 ], [ %211, %250 ]
  %178 = phi i64 [ 0, %162 ], [ %251, %250 ]
  %179 = phi i32 [ 0, %162 ], [ %212, %250 ]
  %180 = icmp eq %"class.Ice::Inst"** %173, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %176
  %182 = ptrtoint %"class.Ice::Inst"** %173 to i64
  store i64 %182, i64* %80, align 8
  br label %183

183:                                              ; preds = %176, %181
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #23
  %184 = icmp ult i32 %179, 3
  %185 = or i64 %178, %177
  %186 = icmp eq i64 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %286, label %254

188:                                              ; preds = %162, %250
  %189 = phi %"class.Ice::Inst"** [ %252, %250 ], [ %173, %162 ]
  %190 = phi i32 [ %212, %250 ], [ 0, %162 ]
  %191 = phi i64 [ %251, %250 ], [ 0, %162 ]
  %192 = phi i64 [ %211, %250 ], [ 0, %162 ]
  %193 = bitcast %"class.Ice::Inst"** %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = inttoptr i64 %194 to %"class.Ice::Inst"*
  %196 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %195, i64 0, i32 13
  %197 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %195, i64 0, i32 13, i32 0, i32 1
  %198 = bitcast %"class.Ice::Operand"*** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.std::__1::vector.256"* %196 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = sub i64 %199, %201
  %203 = lshr exact i64 %202, 3
  %204 = trunc i64 %203 to i32
  %205 = icmp eq i32 %204, 0
  %206 = inttoptr i64 %201 to %"class.Ice::Operand"**
  br i1 %205, label %210, label %207

207:                                              ; preds = %188
  %208 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %195, i64 0, i32 2
  %209 = and i64 %203, 4294967295
  br label %216

210:                                              ; preds = %240, %188
  %211 = phi i64 [ %192, %188 ], [ %241, %240 ]
  %212 = phi i32 [ %190, %188 ], [ %242, %240 ]
  %213 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %195, i64 0, i32 10
  %214 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %213, align 8
  %215 = icmp eq %"class.Ice::Variable"* %214, %122
  br i1 %215, label %245, label %250

216:                                              ; preds = %207, %240
  %217 = phi i64 [ 0, %207 ], [ %243, %240 ]
  %218 = phi i32 [ %190, %207 ], [ %242, %240 ]
  %219 = phi i64 [ %192, %207 ], [ %241, %240 ]
  %220 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %206, i64 %217
  %221 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %220, align 8
  %222 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %221, i64 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = add i32 %223, -18
  %225 = icmp ult i32 %224, 15
  %226 = bitcast %"class.Ice::Operand"* %221 to %"class.Ice::Variable"*
  %227 = select i1 %225, %"class.Ice::Variable"* %226, %"class.Ice::Variable"* null
  %228 = icmp ne %"class.Ice::Variable"* %227, null
  %229 = icmp eq %"class.Ice::Variable"* %227, %122
  %230 = and i1 %228, %229
  br i1 %230, label %231, label %240

231:                                              ; preds = %216
  %232 = icmp eq i64 %219, 0
  br i1 %232, label %233, label %237

233:                                              ; preds = %231
  %234 = load i32, i32* %208, align 8
  %235 = icmp eq i32 %234, 12
  %236 = select i1 %235, i64 0, i64 %194
  br label %237

237:                                              ; preds = %233, %231
  %238 = phi i64 [ %219, %231 ], [ %236, %233 ]
  %239 = add i32 %218, 1
  br label %240

240:                                              ; preds = %216, %237
  %241 = phi i64 [ %238, %237 ], [ %219, %216 ]
  %242 = phi i32 [ %239, %237 ], [ %218, %216 ]
  %243 = add nuw nsw i64 %217, 1
  %244 = icmp ult i64 %243, %209
  br i1 %244, label %216, label %210

245:                                              ; preds = %210
  %246 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %195, i64 0, i32 2
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 12
  %249 = select i1 %248, i64 %191, i64 %194
  br label %250

250:                                              ; preds = %245, %210
  %251 = phi i64 [ %191, %210 ], [ %249, %245 ]
  %252 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %189, i64 1
  %253 = icmp eq %"class.Ice::Inst"** %252, %174
  br i1 %253, label %176, label %188

254:                                              ; preds = %183
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %81) #23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %81, i8* align 8 bitcast (%"class.Ice::LiveRange"* @__const._ZN3Ice14TargetLowering21postRegallocSplittingERKNS_14SmallBitVectorE.LR to i8*), i64 88, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 80, i1 false) #23
  store i32 1065353216, i32* %83, align 8
  store %"struct.std::__1::pair.312"* null, %"struct.std::__1::pair.312"** %84, align 8
  %255 = bitcast %"struct.std::__1::pair.312"* %163 to i64*
  %256 = load i64, i64* %255, align 4
  %257 = trunc i64 %256 to i32
  %258 = lshr i64 %256, 32
  %259 = trunc i64 %258 to i32
  call void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"* nonnull %10, i32 %257, i32 %259, %"class.Ice::CfgNode"* null) #24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #23
  store %"class.Ice::Variable"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Variable"*), %"class.Ice::Variable"** %11, align 8
  %260 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %16, align 8
  %261 = load i32, i32* %130, align 8
  %262 = call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %260, i32 %261) #24
  store %"class.Ice::Variable"* %262, %"class.Ice::Variable"** %11, align 8
  %263 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %262, i64 0, i32 12
  %264 = call dereferenceable(96) %"class.Ice::LiveRange"* @_ZN3Ice9LiveRangeaSERKS0_(%"class.Ice::LiveRange"* %263, %"class.Ice::LiveRange"* nonnull dereferenceable(96) %10) #24
  %265 = call fastcc dereferenceable(32) %struct.UseInfo* @_ZNSt3__113unordered_mapIPN3Ice8VariableEZNS1_14TargetLowering21postRegallocSplittingERKNS1_14SmallBitVectorEE7UseInfoNS_4hashIS3_EENS_8equal_toIS3_EENS1_12sz_allocatorINS_4pairIKS3_S8_EENS1_18CfgAllocatorTraitsEEEEixERSF_(%"class.std::__1::unordered_map.439"* nonnull %8, %"class.Ice::Variable"** nonnull dereferenceable(8) %11) #22
  %266 = getelementptr inbounds %struct.UseInfo, %struct.UseInfo* %265, i64 0, i32 0
  store %"class.Ice::Variable"* %122, %"class.Ice::Variable"** %266, align 8
  %267 = getelementptr inbounds %struct.UseInfo, %struct.UseInfo* %265, i64 0, i32 1
  %268 = bitcast %"class.Ice::Inst"** %267 to i64*
  store i64 %177, i64* %268, align 8
  %269 = getelementptr inbounds %struct.UseInfo, %struct.UseInfo* %265, i64 0, i32 2
  %270 = bitcast %"class.Ice::Inst"** %269 to i64*
  store i64 %178, i64* %270, align 8
  %271 = getelementptr inbounds %struct.UseInfo, %struct.UseInfo* %265, i64 0, i32 3
  store i32 %179, i32* %271, align 8
  %272 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.429"* nonnull %86, %"class.Ice::Variable"** nonnull dereferenceable(8) %11, %"class.Ice::Variable"** nonnull dereferenceable(8) %11) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #23
  %273 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %87, align 8
  %274 = icmp eq %"struct.std::__1::__hash_node_base.322"* %273, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %254, %275
  %276 = phi %"struct.std::__1::__hash_node_base.322"* [ %278, %275 ], [ %273, %254 ]
  %277 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %276, i64 0, i32 0
  %278 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %277, align 8
  %279 = icmp eq %"struct.std::__1::__hash_node_base.322"* %278, null
  br i1 %279, label %280, label %275

280:                                              ; preds = %275, %254
  store %"struct.std::__1::__hash_node_base.322"** null, %"struct.std::__1::__hash_node_base.322"*** %88, align 8
  %281 = load %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"** %89, align 8
  %282 = icmp eq %"struct.std::__1::pair.312"* %281, null
  br i1 %282, label %285, label %283

283:                                              ; preds = %280
  %284 = ptrtoint %"struct.std::__1::pair.312"* %281 to i64
  store i64 %284, i64* %91, align 8
  br label %285

285:                                              ; preds = %280, %283
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %81) #23
  br label %286

286:                                              ; preds = %183, %285
  %287 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %163, i64 1
  %288 = icmp eq %"struct.std::__1::pair.312"* %287, %126
  br i1 %288, label %131, label %162

289:                                              ; preds = %538, %92
  %290 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 18, i32 0, i32 0
  %291 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %290, align 8
  %292 = icmp eq %"class.Ice::Variable"** %291, null
  br i1 %292, label %297, label %293

293:                                              ; preds = %289
  %294 = ptrtoint %"class.Ice::Variable"** %291 to i64
  %295 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 18, i32 0, i32 1
  %296 = bitcast %"class.Ice::Variable"*** %295 to i64*
  store i64 %294, i64* %296, align 8
  br label %297

297:                                              ; preds = %293, %289
  %298 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i8*, i8** %298, align 8
  %300 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %301 = icmp eq i8* %299, %300
  br i1 %301, label %303, label %302

302:                                              ; preds = %297
  call void @free(i8* %299) #24
  br label %303

303:                                              ; preds = %302, %297
  %304 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  %306 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %307 = icmp eq i8* %305, %306
  br i1 %307, label %309, label %308

308:                                              ; preds = %303
  call void @free(i8* %305) #24
  br label %309

309:                                              ; preds = %308, %303
  %310 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 9, i32 0, i32 0
  %311 = load i32*, i32** %310, align 8
  %312 = icmp eq i32* %311, null
  br i1 %312, label %317, label %313

313:                                              ; preds = %309
  %314 = ptrtoint i32* %311 to i64
  %315 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 9, i32 0, i32 1
  %316 = bitcast i32** %315 to i64*
  store i64 %314, i64* %316, align 8
  br label %317

317:                                              ; preds = %313, %309
  %318 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 8, i32 0, i32 0
  %319 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %318, align 8
  %320 = icmp eq %"class.Ice::Variable"** %319, null
  br i1 %320, label %325, label %321

321:                                              ; preds = %317
  %322 = ptrtoint %"class.Ice::Variable"** %319 to i64
  %323 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 8, i32 0, i32 1
  %324 = bitcast %"class.Ice::Variable"*** %323 to i64*
  store i64 %322, i64* %324, align 8
  br label %325

325:                                              ; preds = %321, %317
  %326 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 7, i32 0, i32 0
  %327 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %326, align 8
  %328 = icmp eq %"class.Ice::Variable"** %327, null
  br i1 %328, label %333, label %329

329:                                              ; preds = %325
  %330 = ptrtoint %"class.Ice::Variable"** %327 to i64
  %331 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 7, i32 0, i32 1
  %332 = bitcast %"class.Ice::Variable"*** %331 to i64*
  store i64 %330, i64* %332, align 8
  br label %333

333:                                              ; preds = %329, %325
  %334 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 6, i32 0, i32 0
  %335 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %334, align 8
  %336 = icmp eq %"class.Ice::Variable"** %335, null
  br i1 %336, label %341, label %337

337:                                              ; preds = %333
  %338 = ptrtoint %"class.Ice::Variable"** %335 to i64
  %339 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 6, i32 0, i32 1
  %340 = bitcast %"class.Ice::Variable"*** %339 to i64*
  store i64 %338, i64* %340, align 8
  br label %341

341:                                              ; preds = %337, %333
  %342 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 5, i32 0, i32 0
  %343 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %342, align 8
  %344 = icmp eq %"class.Ice::Variable"** %343, null
  br i1 %344, label %349, label %345

345:                                              ; preds = %341
  %346 = ptrtoint %"class.Ice::Variable"** %343 to i64
  %347 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 5, i32 0, i32 1
  %348 = bitcast %"class.Ice::Variable"*** %347 to i64*
  store i64 %346, i64* %348, align 8
  br label %349

349:                                              ; preds = %345, %341
  %350 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 4, i32 0, i32 0
  %351 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %350, align 8
  %352 = icmp eq %"class.Ice::Variable"** %351, null
  br i1 %352, label %357, label %353

353:                                              ; preds = %349
  %354 = ptrtoint %"class.Ice::Variable"** %351 to i64
  %355 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 4, i32 0, i32 1
  %356 = bitcast %"class.Ice::Variable"*** %355 to i64*
  store i64 %354, i64* %356, align 8
  br label %357

357:                                              ; preds = %353, %349
  %358 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 3, i32 0, i32 0
  %359 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %358, align 8
  %360 = icmp eq %"class.Ice::Variable"** %359, null
  br i1 %360, label %365, label %361

361:                                              ; preds = %357
  %362 = ptrtoint %"class.Ice::Variable"** %359 to i64
  %363 = getelementptr inbounds %"class.Ice::LinearScan", %"class.Ice::LinearScan"* %12, i64 0, i32 3, i32 0, i32 1
  %364 = bitcast %"class.Ice::Variable"*** %363 to i64*
  store i64 %362, i64* %364, align 8
  br label %365

365:                                              ; preds = %357, %361
  call void @llvm.lifetime.end.p0i8(i64 1880, i8* nonnull %93) #23
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #23
  %366 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0
  %367 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_node"**
  %368 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %367, align 8
  call void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.429"* nonnull %366, %"class.std::__1::__tree_node"* %368) #24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #23
  br label %541

369:                                              ; preds = %109, %538
  %370 = phi %"class.std::__1::__tree_end_node"* [ %107, %109 ], [ %539, %538 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #23
  %371 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %370, i64 4
  %372 = bitcast %"class.std::__1::__tree_end_node"* %371 to %"class.Ice::Variable"**
  %373 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %372, align 8
  store %"class.Ice::Variable"* %373, %"class.Ice::Variable"** %14, align 8
  %374 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %373, i64 0, i32 9, i32 0
  %375 = load i32, i32* %374, align 8
  %376 = icmp eq i32 %375, -1
  br i1 %376, label %510, label %377

377:                                              ; preds = %369
  %378 = call fastcc dereferenceable(32) %struct.UseInfo* @_ZNSt3__113unordered_mapIPN3Ice8VariableEZNS1_14TargetLowering21postRegallocSplittingERKNS1_14SmallBitVectorEE7UseInfoNS_4hashIS3_EENS_8equal_toIS3_EENS1_12sz_allocatorINS_4pairIKS3_S8_EENS1_18CfgAllocatorTraitsEEEEixERSF_(%"class.std::__1::unordered_map.439"* nonnull %8, %"class.Ice::Variable"** nonnull dereferenceable(8) %14) #22
  %379 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %14, align 8
  %380 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %379, i64 0, i32 12, i32 0, i32 0, i32 0
  %381 = load %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"** %380, align 8
  %382 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %381, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  %384 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %381, i64 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = getelementptr inbounds %struct.UseInfo, %struct.UseInfo* %378, i64 0, i32 0
  %387 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %386, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111)
  store i32 %383, i32* %4, align 4
  %388 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %387, i64 0, i32 12, i32 1, i32 0
  %389 = call %"struct.std::__1::__hash_node_base.322"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.318"* %388, i32* nonnull dereferenceable(4) %4) #24
  %390 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %389, i64 3
  %391 = bitcast %"struct.std::__1::__hash_node_base.322"* %390 to %"class.Ice::CfgNode"**
  %392 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %391, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false)
  call fastcc void @_ZN3Ice12_GLOBAL__N_122getInstructionsInRangeEPNS_7CfgNodeEii(%"class.std::__1::vector.464"* nonnull sret %15, %"class.Ice::CfgNode"* %392, i32 %383, i32 %385) #22
  %393 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %113, align 8
  %394 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %114, align 8
  %395 = icmp eq %"class.Ice::Inst"** %393, %394
  br i1 %395, label %505, label %400

396:                                              ; preds = %455
  %397 = getelementptr inbounds %struct.UseInfo, %struct.UseInfo* %378, i64 0, i32 1
  %398 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %397, align 8
  %399 = icmp eq %"class.Ice::Inst"* %398, null
  br i1 %399, label %481, label %458

400:                                              ; preds = %377, %455
  %401 = phi %"class.Ice::Inst"** [ %456, %455 ], [ %393, %377 ]
  %402 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %401, align 8
  %403 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %402, i64 0, i32 2
  %404 = load i32, i32* %403, align 8
  %405 = icmp eq i32 %404, 12
  br i1 %405, label %455, label %406

406:                                              ; preds = %400
  %407 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %402, i64 0, i32 13
  %408 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %402, i64 0, i32 13, i32 0, i32 1
  %409 = bitcast %"class.Ice::Operand"*** %408 to i64*
  %410 = load i64, i64* %409, align 8
  %411 = bitcast %"class.std::__1::vector.256"* %407 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = sub i64 %410, %412
  %414 = lshr exact i64 %413, 3
  %415 = trunc i64 %414 to i32
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %417, label %422

417:                                              ; preds = %444, %406
  %418 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %402, i64 0, i32 10
  %419 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %418, align 8
  %420 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %386, align 8
  %421 = icmp eq %"class.Ice::Variable"* %419, %420
  br i1 %421, label %452, label %455

422:                                              ; preds = %406, %444
  %423 = phi i64 [ %445, %444 ], [ %412, %406 ]
  %424 = phi i64 [ %446, %444 ], [ %410, %406 ]
  %425 = phi i64 [ %447, %444 ], [ 0, %406 ]
  %426 = inttoptr i64 %423 to %"class.Ice::Operand"**
  %427 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %426, i64 %425
  %428 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %427, align 8
  %429 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %428, i64 0, i32 2
  %430 = load i32, i32* %429, align 4
  %431 = add i32 %430, -18
  %432 = icmp ugt i32 %431, 14
  %433 = icmp eq %"class.Ice::Operand"* %428, null
  %434 = or i1 %433, %432
  br i1 %434, label %444, label %435

435:                                              ; preds = %422
  %436 = bitcast %"class.Ice::Operand"* %428 to %"class.Ice::Variable"*
  %437 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %386, align 8
  %438 = icmp eq %"class.Ice::Variable"* %437, %436
  br i1 %438, label %439, label %444

439:                                              ; preds = %435
  %440 = load i64, i64* %115, align 8
  %441 = bitcast %"class.Ice::Operand"** %427 to i64*
  store i64 %440, i64* %441, align 8
  %442 = load i64, i64* %409, align 8
  %443 = load i64, i64* %411, align 8
  br label %444

444:                                              ; preds = %422, %435, %439
  %445 = phi i64 [ %423, %422 ], [ %423, %435 ], [ %443, %439 ]
  %446 = phi i64 [ %424, %422 ], [ %424, %435 ], [ %442, %439 ]
  %447 = add nuw nsw i64 %425, 1
  %448 = sub i64 %446, %445
  %449 = lshr exact i64 %448, 3
  %450 = and i64 %449, 4294967295
  %451 = icmp ult i64 %447, %450
  br i1 %451, label %422, label %417

452:                                              ; preds = %417
  %453 = load i64, i64* %115, align 8
  %454 = bitcast %"class.Ice::Variable"** %418 to i64*
  store i64 %453, i64* %454, align 8
  br label %455

455:                                              ; preds = %417, %452, %400
  %456 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %401, i64 1
  %457 = icmp eq %"class.Ice::Inst"** %456, %394
  br i1 %457, label %396, label %400

458:                                              ; preds = %396
  %459 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %16, align 8
  %460 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %459, i64 0, i32 23, i32 0, i32 0, i32 0
  %461 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %460, align 8
  %462 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %14, align 8
  %463 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %386, align 8
  %464 = bitcast %"class.Ice::TargetLowering"* %461 to %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)***
  %465 = load %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)**, %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)*** %464, align 8
  %466 = getelementptr inbounds %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)*, %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)** %465, i64 41
  %467 = load %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)*, %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)** %466, align 8
  %468 = call %"class.Ice::Inst"* %467(%"class.Ice::TargetLowering"* %461, %"class.Ice::Variable"* %462, %"class.Ice::Variable"* %463) #24
  %469 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %397, align 8
  %470 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %469, i64 0, i32 1, i32 0
  %471 = icmp eq %"class.Ice::Inst"* %468, null
  %472 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %468, i64 0, i32 1, i32 0
  %473 = select i1 %471, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %472
  %474 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %470, i64 0, i32 0
  %475 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %473, i64 0, i32 0
  %476 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %470, i64 0, i32 0, i32 0
  %477 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %476, align 8
  %478 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %473, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %474, %"class.llvm::ilist_node_base"** %478, align 8
  %479 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %473, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %477, %"class.llvm::ilist_node_base"** %479, align 8
  %480 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %477, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %475, %"class.llvm::ilist_node_base"** %480, align 8
  store %"class.llvm::ilist_node_base"* %475, %"class.llvm::ilist_node_base"** %476, align 8
  br label %481

481:                                              ; preds = %396, %458
  %482 = getelementptr inbounds %struct.UseInfo, %struct.UseInfo* %378, i64 0, i32 2
  %483 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %482, align 8
  %484 = icmp eq %"class.Ice::Inst"* %483, null
  br i1 %484, label %500, label %485

485:                                              ; preds = %481
  %486 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %16, align 8
  %487 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %486, i64 0, i32 23, i32 0, i32 0, i32 0
  %488 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %487, align 8
  %489 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %386, align 8
  %490 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %14, align 8
  %491 = bitcast %"class.Ice::TargetLowering"* %488 to %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)***
  %492 = load %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)**, %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)*** %491, align 8
  %493 = getelementptr inbounds %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)*, %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)** %492, i64 41
  %494 = load %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)*, %"class.Ice::Inst"* (%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)** %493, align 8
  %495 = call %"class.Ice::Inst"* %494(%"class.Ice::TargetLowering"* %488, %"class.Ice::Variable"* %489, %"class.Ice::Variable"* %490) #24
  %496 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %392, i64 0, i32 12, i32 0
  %497 = load %"class.Ice::Inst"*, %"class.Ice::Inst"** %482, align 8
  %498 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %497, i64 0, i32 1, i32 0
  %499 = call %"class.llvm::ilist_node_impl"* @_ZN4llvm11iplist_implINS_12simple_ilistIN3Ice4InstEJEEENS_12ilist_traitsIS3_EEE11insertAfterENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS3_Lb0ELb0EvEELb0ELb0EEEPS3_(%"class.llvm::iplist_impl"* %496, %"class.llvm::ilist_node_impl"* %498, %"class.Ice::Inst"* %495) #22
  br label %500

500:                                              ; preds = %485, %481
  %501 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %113, align 8
  %502 = icmp eq %"class.Ice::Inst"** %501, null
  br i1 %502, label %509, label %503

503:                                              ; preds = %500
  %504 = ptrtoint %"class.Ice::Inst"** %501 to i64
  store i64 %504, i64* %116, align 8
  br label %509

505:                                              ; preds = %377
  %506 = icmp eq %"class.Ice::Inst"** %393, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %505
  %508 = ptrtoint %"class.Ice::Inst"** %393 to i64
  store i64 %508, i64* %116, align 8
  br label %509

509:                                              ; preds = %507, %505, %503, %500
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #23
  br label %510

510:                                              ; preds = %509, %369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #23
  %511 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %370, i64 1, i32 0
  %512 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %511, align 8
  %513 = icmp eq %"class.std::__1::__tree_node_base"* %512, null
  br i1 %513, label %514, label %522

514:                                              ; preds = %510
  %515 = bitcast %"class.std::__1::__tree_end_node"* %370 to %"class.std::__1::__tree_node_base"*
  %516 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %370, i64 2
  %517 = bitcast %"class.std::__1::__tree_end_node"* %516 to %"class.std::__1::__tree_end_node"**
  %518 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %517, align 8
  %519 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %518, i64 0, i32 0
  %520 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %519, align 8
  %521 = icmp eq %"class.std::__1::__tree_node_base"* %520, %515
  br i1 %521, label %538, label %529

522:                                              ; preds = %510, %522
  %523 = phi %"class.std::__1::__tree_node_base"* [ %525, %522 ], [ %512, %510 ]
  %524 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %523, i64 0, i32 0, i32 0
  %525 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %524, align 8
  %526 = icmp eq %"class.std::__1::__tree_node_base"* %525, null
  br i1 %526, label %527, label %522

527:                                              ; preds = %522
  %528 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %523, i64 0, i32 0
  br label %538

529:                                              ; preds = %514, %529
  %530 = phi %"class.std::__1::__tree_end_node"** [ %533, %529 ], [ %517, %514 ]
  %531 = bitcast %"class.std::__1::__tree_end_node"** %530 to %"class.std::__1::__tree_node_base"**
  %532 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %531, align 8
  %533 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %532, i64 0, i32 2
  %534 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %533, align 8
  %535 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %534, i64 0, i32 0
  %536 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %535, align 8
  %537 = icmp eq %"class.std::__1::__tree_node_base"* %536, %532
  br i1 %537, label %538, label %529

538:                                              ; preds = %529, %514, %527
  %539 = phi %"class.std::__1::__tree_end_node"* [ %528, %527 ], [ %518, %514 ], [ %534, %529 ]
  %540 = icmp eq %"class.std::__1::__tree_end_node"* %539, %66
  br i1 %540, label %289, label %369

541:                                              ; preds = %2, %33, %365
  %542 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %5, i64 0, i32 0
  %543 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %544 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %543, align 8
  call void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.429"* nonnull %542, %"class.std::__1::__tree_node"* %544) #24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN3Ice12_GLOBAL__N_122getInstructionsInRangeEPNS_7CfgNodeEii(%"class.std::__1::vector.464"* noalias sret, %"class.Ice::CfgNode"*, i32, i32) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca %class.anon.511, align 8
  store i32 %2, i32* %5, align 4
  store i32 %3, i32* %6, align 4
  %9 = bitcast %"class.std::__1::vector.464"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #23
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #23
  store i8 0, i8* %7, align 1
  %10 = bitcast %class.anon.511* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23
  %11 = getelementptr inbounds %class.anon.511, %class.anon.511* %8, i64 0, i32 0
  %12 = getelementptr inbounds %class.anon.511, %class.anon.511* %8, i64 0, i32 1
  %13 = getelementptr inbounds %class.anon.511, %class.anon.511* %8, i64 0, i32 2
  %14 = getelementptr inbounds %class.anon.511, %class.anon.511* %8, i64 0, i32 3
  store i32* %5, i32** %11, align 8
  store i8* %7, i8** %12, align 8
  store %"class.std::__1::vector.464"* %0, %"class.std::__1::vector.464"** %13, align 8
  store i32* %6, i32** %14, align 8
  %15 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 11
  call fastcc void @"_ZZN3Ice12_GLOBAL__N_122getInstructionsInRangeEPNS_7CfgNodeEiiENK3$_3clERN4llvm6iplistINS_4InstEJEEE"(%class.anon.511* nonnull %8, %"class.llvm::iplist"* dereferenceable(16) %15) #22
  %16 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 12
  call fastcc void @"_ZZN3Ice12_GLOBAL__N_122getInstructionsInRangeEPNS_7CfgNodeEiiENK3$_3clERN4llvm6iplistINS_4InstEJEEE"(%class.anon.511* nonnull %8, %"class.llvm::iplist"* dereferenceable(16) %16) #22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #23
  ret void
}

; Function Attrs: optsize
declare %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"*, i32) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc dereferenceable(32) %struct.UseInfo* @_ZNSt3__113unordered_mapIPN3Ice8VariableEZNS1_14TargetLowering21postRegallocSplittingERKNS1_14SmallBitVectorEE7UseInfoNS_4hashIS3_EENS_8equal_toIS3_EENS1_12sz_allocatorINS_4pairIKS3_S8_EENS1_18CfgAllocatorTraitsEEEEixERSF_(%"class.std::__1::unordered_map.439"*, %"class.Ice::Variable"** dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %0, i64 0, i32 0
  %4 = bitcast %"class.Ice::Variable"** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = inttoptr i64 %5 to %"class.Ice::Variable"*
  br i1 %21, label %67, label %23

23:                                               ; preds = %2
  %24 = tail call i64 @llvm.ctpop.i64(i64 %20) #23, !range !9
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %20, -1
  %28 = and i64 %18, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %18, %20
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %18, %20
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %18, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.444"* %38, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %33
  %41 = add i64 %20, -1
  br label %42

42:                                               ; preds = %62, %40
  %43 = phi %"struct.std::__1::__hash_node_base.444"* [ %45, %62 ], [ %38, %40 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.444"* %45, null
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %45, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.444"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %18
  br i1 %51, label %62, label %52

52:                                               ; preds = %47
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %41
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %20
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %20
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %62, label %67

62:                                               ; preds = %59, %47
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %45, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.444"* %63 to %"class.Ice::Variable"**
  %65 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %64, align 8
  %66 = icmp eq %"class.Ice::Variable"* %65, %22
  br i1 %66, label %196, label %42

67:                                               ; preds = %59, %42, %33, %2
  %68 = phi i64 [ %34, %33 ], [ -6148914691236517206, %2 ], [ %34, %42 ], [ %34, %59 ]
  %69 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24, !noalias !10
  %70 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %69, i64 56, i64 8) #24, !noalias !10
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = load i64, i64* %4, align 8, !noalias !10
  %73 = bitcast i8* %71 to i64*
  store i64 %72, i64* %73, align 8, !noalias !10
  %74 = getelementptr inbounds i8, i8* %70, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 32, i1 false) #23, !noalias !10
  %75 = getelementptr inbounds i8, i8* %70, i64 8
  %76 = bitcast i8* %75 to i64*
  store i64 %18, i64* %76, align 8, !noalias !10
  %77 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base.444"**
  store %"struct.std::__1::__hash_node_base.444"* null, %"struct.std::__1::__hash_node_base.444"** %77, align 8, !noalias !10
  %78 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  %81 = uitofp i64 %80 to float
  %82 = uitofp i64 %20 to float
  %83 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %84 = load float, float* %83, align 4
  %85 = fmul float %84, %82
  %86 = fcmp olt float %85, %81
  %87 = or i1 %21, %86
  br i1 %87, label %88, label %151

88:                                               ; preds = %67
  %89 = shl i64 %20, 1
  %90 = icmp ult i64 %20, 3
  %91 = tail call i64 @llvm.ctpop.i64(i64 %20) #23, !range !9
  %92 = icmp ugt i64 %91, 1
  %93 = or i1 %90, %92
  %94 = zext i1 %93 to i64
  %95 = or i64 %89, %94
  %96 = fdiv float %81, %84
  %97 = tail call float @llvm.ceil.f32(float %96) #23
  %98 = fptoui float %97 to i64
  %99 = icmp ult i64 %95, %98
  %100 = select i1 %99, i64 %98, i64 %95
  %101 = icmp eq i64 %100, 1
  br i1 %101, label %107, label %102

102:                                              ; preds = %88
  %103 = tail call i64 @llvm.ctpop.i64(i64 %100) #23, !range !9
  %104 = icmp ugt i64 %103, 1
  br i1 %104, label %105, label %107

105:                                              ; preds = %102
  %106 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %100) #24
  br label %107

107:                                              ; preds = %105, %102, %88
  %108 = phi i64 [ %106, %105 ], [ %100, %102 ], [ 2, %88 ]
  %109 = load i64, i64* %19, align 8
  %110 = icmp ugt i64 %108, %109
  br i1 %110, label %111, label %112

111:                                              ; preds = %107
  tail call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN3Ice8VariableEZNS2_14TargetLowering21postRegallocSplittingERKNS2_14SmallBitVectorEE7UseInfoEENS_22__unordered_map_hasherIS4_SA_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_SA_SF_SD_Lb1EEENS2_12sz_allocatorISA_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table.440"* %3, i64 %108) #24
  br label %140

112:                                              ; preds = %107
  %113 = icmp ult i64 %108, %109
  br i1 %113, label %114, label %140

114:                                              ; preds = %112
  %115 = icmp ugt i64 %109, 2
  %116 = tail call i64 @llvm.ctpop.i64(i64 %109) #23, !range !9
  %117 = icmp ult i64 %116, 2
  %118 = and i1 %115, %117
  %119 = load i64, i64* %78, align 8
  %120 = uitofp i64 %119 to float
  %121 = load float, float* %83, align 4
  %122 = fdiv float %120, %121
  %123 = tail call float @llvm.ceil.f32(float %122) #23
  %124 = fptoui float %123 to i64
  br i1 %118, label %125, label %132

125:                                              ; preds = %114
  %126 = icmp ult i64 %124, 2
  br i1 %126, label %134, label %127

127:                                              ; preds = %125
  %128 = add i64 %124, -1
  %129 = tail call i64 @llvm.ctlz.i64(i64 %128, i1 true) #23, !range !9
  %130 = sub nuw nsw i64 64, %129
  %131 = shl i64 1, %130
  br label %134

132:                                              ; preds = %114
  %133 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %124) #24
  br label %134

134:                                              ; preds = %132, %127, %125
  %135 = phi i64 [ %133, %132 ], [ %131, %127 ], [ %124, %125 ]
  %136 = icmp ult i64 %108, %135
  %137 = select i1 %136, i64 %135, i64 %108
  %138 = icmp ult i64 %137, %109
  br i1 %138, label %139, label %140

139:                                              ; preds = %134
  tail call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN3Ice8VariableEZNS2_14TargetLowering21postRegallocSplittingERKNS2_14SmallBitVectorEE7UseInfoEENS_22__unordered_map_hasherIS4_SA_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_SA_SF_SD_Lb1EEENS2_12sz_allocatorISA_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table.440"* %3, i64 %137) #24
  br label %140

140:                                              ; preds = %139, %134, %112, %111
  %141 = load i64, i64* %19, align 8
  %142 = tail call i64 @llvm.ctpop.i64(i64 %141) #23, !range !9
  %143 = icmp ugt i64 %142, 1
  br i1 %143, label %147, label %144

144:                                              ; preds = %140
  %145 = add i64 %141, -1
  %146 = and i64 %145, %18
  br label %151

147:                                              ; preds = %140
  %148 = icmp ult i64 %18, %141
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = urem i64 %18, %141
  br label %151

151:                                              ; preds = %149, %147, %144, %67
  %152 = phi i64 [ %20, %67 ], [ %141, %144 ], [ %141, %147 ], [ %141, %149 ]
  %153 = phi i64 [ %68, %67 ], [ %146, %144 ], [ %18, %147 ], [ %150, %149 ]
  %154 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %154, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %155, i64 %153
  %157 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.444"* %157, null
  br i1 %158, label %159, label %185

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::unordered_map.439", %"class.std::__1::unordered_map.439"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %161 = bitcast %"struct.std::__1::__hash_node_base.444"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast i8* %70 to i64*
  store i64 %162, i64* %163, align 8
  %164 = bitcast %"struct.std::__1::__hash_node_base.444"* %160 to i8**
  store i8* %70, i8** %164, align 8
  store %"struct.std::__1::__hash_node_base.444"* %160, %"struct.std::__1::__hash_node_base.444"** %156, align 8
  %165 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %77, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base.444"* %165, null
  br i1 %166, label %192, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %165, i64 1
  %169 = bitcast %"struct.std::__1::__hash_node_base.444"* %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = tail call i64 @llvm.ctpop.i64(i64 %152) #23, !range !9
  %172 = icmp ugt i64 %171, 1
  br i1 %172, label %176, label %173

173:                                              ; preds = %167
  %174 = add i64 %152, -1
  %175 = and i64 %170, %174
  br label %180

176:                                              ; preds = %167
  %177 = icmp ult i64 %170, %152
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = urem i64 %170, %152
  br label %180

180:                                              ; preds = %178, %176, %173
  %181 = phi i64 [ %175, %173 ], [ %179, %178 ], [ %170, %176 ]
  %182 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %154, align 8
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %182, i64 %181
  %184 = bitcast %"struct.std::__1::__hash_node_base.444"** %183 to i8**
  br label %190

185:                                              ; preds = %151
  %186 = bitcast %"struct.std::__1::__hash_node_base.444"* %157 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast i8* %70 to i64*
  store i64 %187, i64* %188, align 8
  %189 = bitcast %"struct.std::__1::__hash_node_base.444"* %157 to i8**
  br label %190

190:                                              ; preds = %180, %185
  %191 = phi i8** [ %189, %185 ], [ %184, %180 ]
  store i8* %70, i8** %191, align 8
  br label %192

192:                                              ; preds = %190, %159
  %193 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base.444"*
  %194 = load i64, i64* %78, align 8
  %195 = add i64 %194, 1
  store i64 %195, i64* %78, align 8
  br label %196

196:                                              ; preds = %62, %192
  %197 = phi %"struct.std::__1::__hash_node_base.444"* [ %193, %192 ], [ %45, %62 ]
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %197, i64 3
  %199 = bitcast %"struct.std::__1::__hash_node_base.444"* %198 to %struct.UseInfo*
  ret %struct.UseInfo* %199
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.llvm::ilist_node_impl"* @_ZN4llvm11iplist_implINS_12simple_ilistIN3Ice4InstEJEEENS_12ilist_traitsIS3_EEE11insertAfterENS_14ilist_iteratorINS_12ilist_detail12node_optionsIS3_Lb0ELb0EvEELb0ELb0EEEPS3_(%"class.llvm::iplist_impl"*, %"class.llvm::ilist_node_impl"*, %"class.Ice::Inst"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::iplist_impl", %"class.llvm::iplist_impl"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.llvm::iplist_impl"* %0 to %"class.llvm::ilist_node_impl"**
  %6 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %7 = icmp eq %"class.llvm::ilist_node_impl"* %4, %6
  br i1 %7, label %8, label %22

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.llvm::iplist_impl", %"class.llvm::iplist_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.llvm::ilist_node_base"** %9 to %"class.llvm::ilist_node_impl"**
  %11 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %10, align 8
  %12 = icmp eq %"class.Ice::Inst"* %2, null
  %13 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 1, i32 0
  %14 = select i1 %12, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %13
  %15 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 0, i32 0
  %16 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %14, i64 0, i32 0
  %17 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 0, i32 0, i32 0
  %18 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %17, align 8
  %19 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %14, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %15, %"class.llvm::ilist_node_base"** %19, align 8
  %20 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %14, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %18, %"class.llvm::ilist_node_base"** %20, align 8
  %21 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %18, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %16, %"class.llvm::ilist_node_base"** %21, align 8
  store %"class.llvm::ilist_node_base"* %16, %"class.llvm::ilist_node_base"** %17, align 8
  br label %36

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %1, i64 0, i32 0, i32 1
  %24 = bitcast %"class.llvm::ilist_node_base"** %23 to %"class.llvm::ilist_node_impl"**
  %25 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %24, align 8
  %26 = icmp eq %"class.Ice::Inst"* %2, null
  %27 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %2, i64 0, i32 1, i32 0
  %28 = select i1 %26, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %27
  %29 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %25, i64 0, i32 0
  %30 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %28, i64 0, i32 0
  %31 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %25, i64 0, i32 0, i32 0
  %32 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %31, align 8
  %33 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %28, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %29, %"class.llvm::ilist_node_base"** %33, align 8
  %34 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %28, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %32, %"class.llvm::ilist_node_base"** %34, align 8
  %35 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %32, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %30, %"class.llvm::ilist_node_base"** %35, align 8
  store %"class.llvm::ilist_node_base"* %30, %"class.llvm::ilist_node_base"** %31, align 8
  br label %36

36:                                               ; preds = %22, %8
  %37 = phi %"class.llvm::ilist_node_impl"* [ %14, %8 ], [ %28, %22 ]
  ret %"class.llvm::ilist_node_impl"* %37
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering17markRedefinitionsEv(%"class.Ice::TargetLowering"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 2, i32 0
  %3 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12, i32 3, i32 0
  %4 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %3, align 8
  %5 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %2, align 8
  %6 = icmp eq %"class.llvm::ilist_node_impl"* %5, %4
  br i1 %6, label %7, label %8

7:                                                ; preds = %59, %1
  ret void

8:                                                ; preds = %1, %59
  %9 = phi %"class.llvm::ilist_node_impl"* [ %62, %59 ], [ %5, %1 ]
  %10 = icmp eq %"class.llvm::ilist_node_impl"* %9, null
  %11 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %9, i64 -1, i32 0, i32 1
  %12 = bitcast %"class.llvm::ilist_node_base"** %11 to %"class.Ice::Inst"*
  %13 = select i1 %10, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %12
  %14 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %13, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %59

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %13, i64 0, i32 10
  %19 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %18, align 8
  %20 = icmp eq %"class.Ice::Variable"* %19, null
  br i1 %20, label %59, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %13, i64 0, i32 13
  %23 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %13, i64 0, i32 13, i32 0, i32 1
  %24 = bitcast %"class.Ice::Operand"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.256"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = lshr exact i64 %28, 3
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %30, 0
  %32 = inttoptr i64 %27 to %"class.Ice::Operand"**
  br i1 %31, label %59, label %33

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %13, i64 0, i32 7
  %35 = and i64 %29, 4294967295
  br label %36

36:                                               ; preds = %56, %33
  %37 = phi i64 [ 0, %33 ], [ %57, %56 ]
  %38 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %32, i64 %37
  %39 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %38, align 8
  %40 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %56, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %39, i64 0, i32 4
  %45 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %44, align 8
  %46 = zext i32 %41 to i64
  br label %47

47:                                               ; preds = %53, %43
  %48 = phi i64 [ 0, %43 ], [ %54, %53 ]
  %49 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %45, i64 %48
  %50 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %49, align 8
  %51 = icmp eq %"class.Ice::Variable"* %50, %19
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  store i8 1, i8* %34, align 1
  br label %56

53:                                               ; preds = %47
  %54 = add nuw nsw i64 %48, 1
  %55 = icmp eq i64 %54, %46
  br i1 %55, label %56, label %47

56:                                               ; preds = %53, %36, %52
  %57 = add nuw nsw i64 %37, 1
  %58 = icmp eq i64 %57, %35
  br i1 %58, label %59, label %36

59:                                               ; preds = %56, %21, %8, %17
  %60 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %9, i64 0, i32 0, i32 1
  %61 = bitcast %"class.llvm::ilist_node_base"** %60 to %"class.llvm::ilist_node_impl"**
  %62 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %61, align 8
  %63 = icmp eq %"class.llvm::ilist_node_impl"* %62, %4
  br i1 %63, label %7, label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering14addFakeDefUsesEPKNS_4InstE(%"class.Ice::TargetLowering"*, %"class.Ice::Inst"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.Ice::Variable"*, align 8
  %4 = alloca %"class.Ice::Variable"*, align 8
  %5 = alloca %"class.Ice::Variable"*, align 8
  %6 = alloca %"class.Ice::Variable"*, align 8
  %7 = alloca %"class.Ice::Variable"*, align 8
  %8 = alloca %"class.Ice::Variable"*, align 8
  %9 = alloca %"class.Ice::Variable"*, align 8
  %10 = alloca %"class.Ice::Variable"*, align 8
  %11 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 13
  %12 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 13, i32 0, i32 1
  %13 = bitcast %"class.Ice::Operand"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.256"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 3
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %2
  %22 = inttoptr i64 %16 to %"class.Ice::Operand"**
  %23 = bitcast %"class.Ice::Variable"** %3 to i8*
  %24 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 13, i32 0, i32 0
  %25 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %26 = bitcast %"class.Ice::Variable"** %4 to i8*
  %27 = bitcast %"class.Ice::Variable"** %4 to i64*
  %28 = bitcast %"class.Ice::Variable"** %5 to i8*
  %29 = bitcast %"class.Ice::Variable"** %5 to i64*
  %30 = bitcast %"class.Ice::Variable"** %6 to i8*
  %31 = bitcast %"class.Ice::Variable"** %6 to i64*
  %32 = and i64 %18, 4294967295
  br label %38

33:                                               ; preds = %59, %2
  %34 = bitcast %"class.Ice::Variable"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #23
  %35 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 10
  %36 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %35, align 8
  store %"class.Ice::Variable"* %36, %"class.Ice::Variable"** %7, align 8
  %37 = icmp eq %"class.Ice::Variable"* %36, null
  br i1 %37, label %135, label %96

38:                                               ; preds = %62, %21
  %39 = phi %"class.Ice::Operand"** [ %22, %21 ], [ %63, %62 ]
  %40 = phi i64 [ 0, %21 ], [ %60, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #23
  store %"class.Ice::Variable"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Variable"*), %"class.Ice::Variable"** %3, align 8
  %41 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %39, i64 %40
  %42 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %41, align 8
  %43 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %42, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  store %"class.Ice::Variable"* null, %"class.Ice::Variable"** %3, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %42, i64 0, i32 4
  %48 = zext i32 %44 to i64
  br label %49

49:                                               ; preds = %93, %46
  %50 = phi i64 [ 0, %46 ], [ %94, %93 ]
  %51 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %47, align 8
  %52 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %51, i64 %50
  %53 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %52, align 8
  store %"class.Ice::Variable"* %53, %"class.Ice::Variable"** %3, align 8
  %54 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp ne i32 %55, 19
  %57 = icmp eq %"class.Ice::Variable"* %53, null
  %58 = or i1 %57, %56
  br i1 %58, label %73, label %64

59:                                               ; preds = %93, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #23
  %60 = add nuw nsw i64 %40, 1
  %61 = icmp eq i64 %60, %32
  br i1 %61, label %33, label %62

62:                                               ; preds = %59
  %63 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %24, align 8
  br label %38

64:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #23
  %65 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 1
  %66 = bitcast %"class.Ice::Variable"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %27, align 8
  %68 = call %"class.Ice::InstFakeUse"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeUseEJPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %25, %"class.Ice::Variable"** nonnull dereferenceable(8) %4) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #23
  %69 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 1, i32 0, i32 1
  %70 = bitcast i32* %69 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %29, align 8
  %72 = call %"class.Ice::InstFakeUse"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeUseEJPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %25, %"class.Ice::Variable"** nonnull dereferenceable(8) %5) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #23
  br label %93

73:                                               ; preds = %49
  %74 = icmp ne i32 %55, 20
  %75 = or i1 %57, %74
  br i1 %75, label %91, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 1
  %78 = bitcast %"class.Ice::Variable"* %77 to %"class.Ice::Variable"***
  %79 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %78, align 8
  %80 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %53, i64 1, i32 0, i32 1
  %81 = bitcast i32* %80 to %"class.Ice::Variable"***
  %82 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %81, align 8
  %83 = icmp eq %"class.Ice::Variable"** %79, %82
  br i1 %83, label %93, label %84

84:                                               ; preds = %76, %84
  %85 = phi %"class.Ice::Variable"** [ %89, %84 ], [ %79, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #23
  store %"class.Ice::Variable"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Variable"*), %"class.Ice::Variable"** %6, align 8
  %86 = bitcast %"class.Ice::Variable"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %31, align 8
  %88 = call %"class.Ice::InstFakeUse"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeUseEJRPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %25, %"class.Ice::Variable"** nonnull dereferenceable(8) %6) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #23
  %89 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %85, i64 1
  %90 = icmp eq %"class.Ice::Variable"** %89, %82
  br i1 %90, label %93, label %84

91:                                               ; preds = %73
  %92 = call %"class.Ice::InstFakeUse"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeUseEJRPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %25, %"class.Ice::Variable"** nonnull dereferenceable(8) %3) #22
  br label %93

93:                                               ; preds = %84, %76, %91, %64
  %94 = add nuw nsw i64 %50, 1
  %95 = icmp eq i64 %94, %48
  br i1 %95, label %59, label %49

96:                                               ; preds = %33
  %97 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %36, i64 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  switch i32 %98, label %132 [
    i32 19, label %99
    i32 20, label %113
  ]

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %101 = bitcast %"class.Ice::Variable"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #23
  %102 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %36, i64 1
  %103 = bitcast %"class.Ice::Variable"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.Ice::Variable"** %8 to i64*
  store i64 %104, i64* %105, align 8
  %106 = call %"class.Ice::InstFakeDef"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %100, %"class.Ice::Variable"** nonnull dereferenceable(8) %8) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #23
  %107 = bitcast %"class.Ice::Variable"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #23
  %108 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %36, i64 1, i32 0, i32 1
  %109 = bitcast i32* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.Ice::Variable"** %9 to i64*
  store i64 %110, i64* %111, align 8
  %112 = call %"class.Ice::InstFakeDef"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %100, %"class.Ice::Variable"** nonnull dereferenceable(8) %9) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #23
  br label %135

113:                                              ; preds = %96
  %114 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %36, i64 1
  %115 = bitcast %"class.Ice::Variable"* %114 to %"class.Ice::Variable"***
  %116 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %115, align 8
  %117 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %36, i64 1, i32 0, i32 1
  %118 = bitcast i32* %117 to %"class.Ice::Variable"***
  %119 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %118, align 8
  %120 = icmp eq %"class.Ice::Variable"** %116, %119
  br i1 %120, label %135, label %121

121:                                              ; preds = %113
  %122 = bitcast %"class.Ice::Variable"** %10 to i8*
  %123 = bitcast %"class.Ice::Variable"** %10 to i64*
  %124 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  br label %125

125:                                              ; preds = %121, %125
  %126 = phi %"class.Ice::Variable"** [ %116, %121 ], [ %130, %125 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #23
  store %"class.Ice::Variable"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Variable"*), %"class.Ice::Variable"** %10, align 8
  %127 = bitcast %"class.Ice::Variable"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %123, align 8
  %129 = call %"class.Ice::InstFakeDef"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJRPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %124, %"class.Ice::Variable"** nonnull dereferenceable(8) %10) #22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #23
  %130 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %126, i64 1
  %131 = icmp eq %"class.Ice::Variable"** %130, %119
  br i1 %131, label %135, label %125

132:                                              ; preds = %96
  %133 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %134 = call %"class.Ice::InstFakeDef"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJRPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %133, %"class.Ice::Variable"** nonnull dereferenceable(8) %7) #22
  br label %135

135:                                              ; preds = %125, %113, %99, %132, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstFakeUse"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeUseEJPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"*, %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %4 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %4, i64 0, i32 0
  %6 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %5, align 8
  %7 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %8, align 8
  %10 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 104, i64 8) #24
  %11 = bitcast i8* %10 to %"class.Ice::InstFakeUse"*
  tail call void @_ZN3Ice11InstFakeUseC1EPNS_3CfgEPNS_8VariableEj(%"class.Ice::InstFakeUse"* %11, %"class.Ice::Cfg"* %6, %"class.Ice::Variable"* %7, i32 1) #24
  %12 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %12, align 8
  %14 = icmp eq i8* %10, null
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = bitcast i8* %15 to %"class.llvm::ilist_node_impl"*
  %17 = select i1 %14, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %16
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0
  %19 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0
  %20 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0, i32 0
  %21 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %20, align 8
  %22 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %18, %"class.llvm::ilist_node_base"** %22, align 8
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %21, %"class.llvm::ilist_node_base"** %23, align 8
  %24 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %21, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %24, align 8
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %20, align 8
  %25 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %26 = bitcast %"class.Ice::Inst"** %25 to i8**
  store i8* %10, i8** %26, align 8
  ret %"class.Ice::InstFakeUse"* %11
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstFakeUse"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeUseEJRPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"*, %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %4 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %4, i64 0, i32 0
  %6 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %5, align 8
  %7 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %8, align 8
  %10 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 104, i64 8) #24
  %11 = bitcast i8* %10 to %"class.Ice::InstFakeUse"*
  tail call void @_ZN3Ice11InstFakeUseC1EPNS_3CfgEPNS_8VariableEj(%"class.Ice::InstFakeUse"* %11, %"class.Ice::Cfg"* %6, %"class.Ice::Variable"* %7, i32 1) #24
  %12 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %12, align 8
  %14 = icmp eq i8* %10, null
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = bitcast i8* %15 to %"class.llvm::ilist_node_impl"*
  %17 = select i1 %14, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %16
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0
  %19 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0
  %20 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0, i32 0
  %21 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %20, align 8
  %22 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %18, %"class.llvm::ilist_node_base"** %22, align 8
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %21, %"class.llvm::ilist_node_base"** %23, align 8
  %24 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %21, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %24, align 8
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %20, align 8
  %25 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %26 = bitcast %"class.Ice::Inst"** %25 to i8**
  store i8* %10, i8** %26, align 8
  ret %"class.Ice::InstFakeUse"* %11
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstFakeDef"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"*, %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %4 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %4, i64 0, i32 0
  %6 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %5, align 8
  %7 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %8, align 8
  %10 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 104, i64 8) #24
  %11 = bitcast i8* %10 to %"class.Ice::InstFakeDef"*
  tail call void @_ZN3Ice11InstFakeDefC1EPNS_3CfgEPNS_8VariableES4_(%"class.Ice::InstFakeDef"* %11, %"class.Ice::Cfg"* %6, %"class.Ice::Variable"* %7, %"class.Ice::Variable"* null) #24
  %12 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %12, align 8
  %14 = icmp eq i8* %10, null
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = bitcast i8* %15 to %"class.llvm::ilist_node_impl"*
  %17 = select i1 %14, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %16
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0
  %19 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0
  %20 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0, i32 0
  %21 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %20, align 8
  %22 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %18, %"class.llvm::ilist_node_base"** %22, align 8
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %21, %"class.llvm::ilist_node_base"** %23, align 8
  %24 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %21, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %24, align 8
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %20, align 8
  %25 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %26 = bitcast %"class.Ice::Inst"** %25 to i8**
  store i8* %10, i8** %26, align 8
  ret %"class.Ice::InstFakeDef"* %11
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstFakeDef"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJRPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"*, %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %4 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %4, i64 0, i32 0
  %6 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %5, align 8
  %7 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %8, align 8
  %10 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 104, i64 8) #24
  %11 = bitcast i8* %10 to %"class.Ice::InstFakeDef"*
  tail call void @_ZN3Ice11InstFakeDefC1EPNS_3CfgEPNS_8VariableES4_(%"class.Ice::InstFakeDef"* %11, %"class.Ice::Cfg"* %6, %"class.Ice::Variable"* %7, %"class.Ice::Variable"* null) #24
  %12 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %12, align 8
  %14 = icmp eq i8* %10, null
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = bitcast i8* %15 to %"class.llvm::ilist_node_impl"*
  %17 = select i1 %14, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %16
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0
  %19 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0
  %20 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0, i32 0
  %21 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %20, align 8
  %22 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %18, %"class.llvm::ilist_node_base"** %22, align 8
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %21, %"class.llvm::ilist_node_base"** %23, align 8
  %24 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %21, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %24, align 8
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %20, align 8
  %25 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %26 = bitcast %"class.Ice::Inst"** %25 to i8**
  store i8* %10, i8** %26, align 8
  ret %"class.Ice::InstFakeDef"* %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice14TargetLowering19sortVarsByAlignmentERNSt3__16vectorIPNS_8VariableENS_12sz_allocatorIS4_NS_18CfgAllocatorTraitsEEEEERKS8_(%"class.Ice::TargetLowering"*, %"class.std::__1::vector.207"* dereferenceable(32), %"class.std::__1::vector.207"* readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.anon.472, align 8
  %5 = icmp eq %"class.std::__1::vector.207"* %1, %2
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %2, i64 0, i32 0, i32 1
  %10 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %9, align 8
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.207"* %1, %"class.Ice::Variable"** %8, %"class.Ice::Variable"** %10) #24
  br label %11

11:                                               ; preds = %3, %6
  %12 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %1, i64 0, i32 0, i32 1
  %15 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %14, align 8
  %16 = bitcast %class.anon.472* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = getelementptr inbounds %class.anon.472, %class.anon.472* %4, i64 0, i32 0
  store %"class.Ice::TargetLowering"* %0, %"class.Ice::TargetLowering"** %17, align 8
  call fastcc void @"_ZNSt3__16__sortIRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEvT0_SG_T_"(%"class.Ice::Variable"** %13, %"class.Ice::Variable"** %15, %class.anon.472* nonnull dereferenceable(8) %4) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering21getVarStackSlotParamsERNSt3__16vectorIPNS_8VariableENS_12sz_allocatorIS4_NS_18CfgAllocatorTraitsEEEEERNS_14SmallBitVectorEPmSC_PjSD_NS1_8functionIFbS4_EEE(%"class.Ice::TargetLowering"*, %"class.std::__1::vector.207"* dereferenceable(32), %"class.Ice::SmallBitVector"* dereferenceable(24), i64* nocapture, i64* nocapture, i32* nocapture, i32* nocapture, %"class.std::__1::function.473"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::vector.481", align 8
  %10 = alloca %"class.std::__1::vector.207", align 8
  %11 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %12 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %11, align 8
  %13 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %12, i64 0, i32 24, i32 0, i32 0, i32 0
  %14 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %13, align 8
  %15 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %12, i64 0, i32 17
  %16 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %12, i64 0, i32 17, i32 0, i32 1
  %17 = bitcast %"class.Ice::Variable"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.207"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = lshr exact i64 %21, 3
  %23 = add nuw nsw i64 %22, 63
  %24 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %25 = lshr i64 %23, 3
  %26 = and i64 %25, 536870904
  %27 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %24, i64 %26, i64 8) #24
  %28 = bitcast i8* %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 %26, i1 false) #23
  %29 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %11, align 8
  %30 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %29, i64 0, i32 14, i32 0, i32 0
  %31 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %30, align 8
  %32 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %29, i64 0, i32 14, i32 0, i32 1
  %33 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %32, align 8
  %34 = icmp eq %"class.Ice::CfgNode"** %31, %33
  %35 = ptrtoint %"class.Ice::CfgNode"** %33 to i64
  %36 = ptrtoint %"class.Ice::CfgNode"** %31 to i64
  br i1 %34, label %37, label %66

37:                                               ; preds = %74, %8
  %38 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 7
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = bitcast %"class.std::__1::vector.481"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #23
  %42 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %9, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %9, i64 0, i32 0, i32 1
  %44 = sub i64 %35, %36
  %45 = lshr exact i64 %44, 3
  %46 = and i64 %45, 4294967295
  %47 = bitcast %"class.std::__1::vector.481"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 32, i1 false)
  call void @_ZNSt3__16vectorImN3Ice12sz_allocatorImNS1_18CfgAllocatorTraitsEEEEC2Em(%"class.std::__1::vector.481"* nonnull %9, i64 %46) #22
  %48 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %11, align 8
  %49 = bitcast %"class.std::__1::vector.207"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #23
  %50 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %10, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %10, i64 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 32, i1 false) #23
  %53 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %48, i64 0, i32 17, i32 0, i32 0
  %54 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %53, align 8
  %55 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %48, i64 0, i32 17, i32 0, i32 1
  %56 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %55, align 8
  %57 = icmp eq %"class.Ice::Variable"** %54, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %37
  %59 = bitcast %"class.Ice::Variable"*** %51 to i64*
  br label %153

60:                                               ; preds = %37
  %61 = getelementptr inbounds %"class.std::__1::function.473", %"class.std::__1::function.473"* %7, i64 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::function.473", %"class.std::__1::function.473"* %7, i64 0, i32 0, i32 0
  %63 = bitcast %"class.Ice::Variable"*** %51 to i64*
  %64 = bitcast %"class.std::__1::vector.207"* %10 to i64*
  %65 = bitcast %"class.Ice::Variable"*** %52 to i64*
  br label %170

66:                                               ; preds = %8, %74
  %67 = phi %"class.Ice::CfgNode"** [ %75, %74 ], [ %31, %8 ]
  %68 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %67, align 8
  %69 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %68, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %68, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.llvm::ilist_node_base"** %69 to %"class.llvm::ilist_node_impl"**
  %72 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %71, align 8
  %73 = icmp eq %"class.llvm::ilist_node_impl"* %72, %70
  br i1 %73, label %74, label %77

74:                                               ; preds = %145, %66
  %75 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %67, i64 1
  %76 = icmp eq %"class.Ice::CfgNode"** %75, %33
  br i1 %76, label %37, label %66

77:                                               ; preds = %66, %145
  %78 = phi %"class.llvm::ilist_node_impl"* [ %148, %145 ], [ %72, %66 ]
  %79 = icmp eq %"class.llvm::ilist_node_impl"* %78, null
  %80 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %78, i64 -1, i32 0, i32 1
  %81 = bitcast %"class.llvm::ilist_node_base"** %80 to %"class.Ice::Inst"*
  %82 = select i1 %79, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %81
  %83 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %82, i64 0, i32 4
  %84 = load i8, i8* %83, align 8, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %145

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %82, i64 0, i32 10
  %88 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %87, align 8
  %89 = icmp eq %"class.Ice::Variable"* %88, null
  br i1 %89, label %101, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %88, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = lshr i32 %92, 6
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i64, i64* %28, i64 %94
  %96 = and i32 %92, 63
  %97 = zext i32 %96 to i64
  %98 = shl i64 1, %97
  %99 = load i64, i64* %95, align 8
  %100 = or i64 %98, %99
  store i64 %100, i64* %95, align 8
  br label %101

101:                                              ; preds = %86, %90
  %102 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %82, i64 0, i32 13
  %103 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %82, i64 0, i32 13, i32 0, i32 1
  %104 = bitcast %"class.Ice::Operand"*** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.256"* %102 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %105, %107
  %109 = lshr exact i64 %108, 3
  %110 = trunc i64 %109 to i32
  %111 = icmp eq i32 %110, 0
  %112 = inttoptr i64 %107 to %"class.Ice::Operand"**
  br i1 %111, label %145, label %113

113:                                              ; preds = %101
  %114 = and i64 %109, 4294967295
  br label %115

115:                                              ; preds = %142, %113
  %116 = phi i64 [ 0, %113 ], [ %143, %142 ]
  %117 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %112, i64 %116
  %118 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %117, align 8
  %119 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %118, i64 0, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %142, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %118, i64 0, i32 4
  %124 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %123, align 8
  %125 = zext i32 %120 to i64
  br label %126

126:                                              ; preds = %126, %122
  %127 = phi i64 [ 0, %122 ], [ %140, %126 ]
  %128 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %124, i64 %127
  %129 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %128, align 8
  %130 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %129, i64 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = lshr i32 %131, 6
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i64, i64* %28, i64 %133
  %135 = and i32 %131, 63
  %136 = zext i32 %135 to i64
  %137 = shl i64 1, %136
  %138 = load i64, i64* %134, align 8
  %139 = or i64 %137, %138
  store i64 %139, i64* %134, align 8
  %140 = add nuw nsw i64 %127, 1
  %141 = icmp eq i64 %140, %125
  br i1 %141, label %142, label %126

142:                                              ; preds = %126, %115
  %143 = add nuw nsw i64 %116, 1
  %144 = icmp eq i64 %143, %114
  br i1 %144, label %145, label %115

145:                                              ; preds = %142, %101, %77
  %146 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %78, i64 0, i32 0, i32 1
  %147 = bitcast %"class.llvm::ilist_node_base"** %146 to %"class.llvm::ilist_node_impl"**
  %148 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %147, align 8
  %149 = icmp eq %"class.llvm::ilist_node_impl"* %148, %70
  br i1 %149, label %74, label %77

150:                                              ; preds = %279
  %151 = load i64, i64* %63, align 8
  %152 = load i64, i64* %64, align 8
  br label %153

153:                                              ; preds = %58, %150
  %154 = phi i64* [ %59, %58 ], [ %63, %150 ]
  %155 = phi i64 [ 0, %58 ], [ %152, %150 ]
  %156 = phi i64 [ 0, %58 ], [ %151, %150 ]
  %157 = sub i64 %156, %155
  %158 = ashr exact i64 %157, 3
  call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.207"* %1, i64 %158) #22
  call void @_ZNK3Ice14TargetLowering19sortVarsByAlignmentERNSt3__16vectorIPNS_8VariableENS_12sz_allocatorIS4_NS_18CfgAllocatorTraitsEEEEERKS8_(%"class.Ice::TargetLowering"* %0, %"class.std::__1::vector.207"* dereferenceable(32) %1, %"class.std::__1::vector.207"* nonnull dereferenceable(32) %10) #22
  %159 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %1, i64 0, i32 0, i32 0
  %160 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %1, i64 0, i32 0, i32 1
  %162 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %161, align 8
  %163 = icmp eq %"class.Ice::Variable"** %160, %162
  br i1 %163, label %282, label %164

164:                                              ; preds = %153
  %165 = bitcast %"class.Ice::TargetLowering"* %0 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %166 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %14, i64 0, i32 2
  %167 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %14, i64 0, i32 2, i32 0, i32 1
  %168 = bitcast %"class.Ice::VariableTracking"** %167 to i64*
  %169 = bitcast %"class.std::__1::vector.252"* %166 to i64*
  br label %298

170:                                              ; preds = %60, %279
  %171 = phi %"class.Ice::Variable"** [ %54, %60 ], [ %280, %279 ]
  %172 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %171, align 8
  %173 = ptrtoint %"class.Ice::Variable"* %172 to i64
  %174 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %172, i64 0, i32 9, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, -1
  br i1 %176, label %190, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %172, i64 0, i32 6
  %179 = load i8, i8* %178, align 1, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %279

181:                                              ; preds = %177
  %182 = lshr i32 %175, 6
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %2, i64 0, i32 0, i64 %183
  %185 = and i32 %175, 63
  %186 = zext i32 %185 to i64
  %187 = shl i64 1, %186
  %188 = load i64, i64* %184, align 8
  %189 = or i64 %188, %187
  store i64 %189, i64* %184, align 8
  br label %279

190:                                              ; preds = %170
  %191 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %172, i64 0, i32 3
  %192 = load i8, i8* %191, align 8, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %199, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %172, i64 0, i32 11
  %196 = load i32, i32* %195, align 8
  %197 = icmp eq i32 %196, -2147483648
  br i1 %197, label %198, label %279

198:                                              ; preds = %194
  store i32 -2147483647, i32* %195, align 8
  br label %279

199:                                              ; preds = %190
  %200 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %172, i64 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = lshr i32 %201, 6
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i64, i64* %28, i64 %203
  %205 = and i32 %201, 63
  %206 = load i64, i64* %204, align 8
  %207 = zext i32 %205 to i64
  %208 = shl i64 1, %207
  %209 = and i64 %208, %206
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %279, label %211

211:                                              ; preds = %199
  %212 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*)** %61, align 8
  %213 = call zeroext i1 %212(%"union.std::__1::__function::__policy_storage"* %62, %"class.Ice::Variable"* %172) #24
  br i1 %213, label %279, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %172, i64 0, i32 11
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %216, -2147483648
  br i1 %217, label %218, label %219

218:                                              ; preds = %214
  store i32 -2147483647, i32* %215, align 8
  br label %219

219:                                              ; preds = %214, %218
  %220 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %51, align 8
  %221 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %52, align 8
  %222 = icmp eq %"class.Ice::Variable"** %220, %221
  %223 = ptrtoint %"class.Ice::Variable"** %221 to i64
  br i1 %222, label %228, label %224

224:                                              ; preds = %219
  %225 = bitcast %"class.Ice::Variable"** %220 to i64*
  store i64 %173, i64* %225, align 8
  %226 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %220, i64 1
  %227 = ptrtoint %"class.Ice::Variable"** %226 to i64
  store i64 %227, i64* %63, align 8
  br label %279

228:                                              ; preds = %219
  %229 = ptrtoint %"class.Ice::Variable"** %220 to i64
  %230 = load i64, i64* %64, align 8
  %231 = sub i64 %229, %230
  %232 = ashr exact i64 %231, 3
  %233 = add nsw i64 %232, 1
  %234 = icmp ugt i64 %233, 2305843009213693951
  %235 = inttoptr i64 %230 to %"class.Ice::Variable"**
  br i1 %234, label %236, label %238

236:                                              ; preds = %228
  %237 = bitcast %"class.std::__1::vector.207"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %237) #26
  unreachable

238:                                              ; preds = %228
  %239 = sub i64 %223, %230
  %240 = ashr exact i64 %239, 3
  %241 = icmp ult i64 %240, 1152921504606846975
  br i1 %241, label %242, label %247

242:                                              ; preds = %238
  %243 = ashr exact i64 %239, 2
  %244 = icmp ult i64 %243, %233
  %245 = select i1 %244, i64 %233, i64 %243
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %255, label %247

247:                                              ; preds = %242, %238
  %248 = phi i64 [ %245, %242 ], [ 2305843009213693951, %238 ]
  %249 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %250 = shl i64 %248, 3
  %251 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %249, i64 %250, i64 8) #24
  %252 = bitcast i8* %251 to %"class.Ice::Variable"**
  %253 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %50, align 8
  %254 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %51, align 8
  br label %255

255:                                              ; preds = %247, %242
  %256 = phi %"class.Ice::Variable"** [ %254, %247 ], [ %220, %242 ]
  %257 = phi %"class.Ice::Variable"** [ %253, %247 ], [ %235, %242 ]
  %258 = phi i64 [ %248, %247 ], [ 0, %242 ]
  %259 = phi %"class.Ice::Variable"** [ %252, %247 ], [ null, %242 ]
  %260 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %259, i64 %232
  %261 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %259, i64 %258
  %262 = ptrtoint %"class.Ice::Variable"** %261 to i64
  %263 = bitcast %"class.Ice::Variable"** %260 to i64*
  store i64 %173, i64* %263, align 8
  %264 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %260, i64 1
  %265 = ptrtoint %"class.Ice::Variable"** %264 to i64
  %266 = icmp eq %"class.Ice::Variable"** %256, %257
  br i1 %266, label %276, label %267

267:                                              ; preds = %255, %267
  %268 = phi %"class.Ice::Variable"** [ %270, %267 ], [ %260, %255 ]
  %269 = phi %"class.Ice::Variable"** [ %271, %267 ], [ %256, %255 ]
  %270 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %268, i64 -1
  %271 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %269, i64 -1
  %272 = bitcast %"class.Ice::Variable"** %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.Ice::Variable"** %270 to i64*
  store i64 %273, i64* %274, align 8
  %275 = icmp eq %"class.Ice::Variable"** %271, %257
  br i1 %275, label %276, label %267

276:                                              ; preds = %267, %255
  %277 = phi %"class.Ice::Variable"** [ %260, %255 ], [ %270, %267 ]
  %278 = ptrtoint %"class.Ice::Variable"** %277 to i64
  store i64 %278, i64* %64, align 8
  store i64 %265, i64* %63, align 8
  store i64 %262, i64* %65, align 8
  br label %279

279:                                              ; preds = %177, %199, %276, %224, %198, %194, %211, %181
  %280 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %171, i64 1
  %281 = icmp eq %"class.Ice::Variable"** %280, %56
  br i1 %281, label %150, label %170

282:                                              ; preds = %349, %153
  %283 = load i32, i32* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 54), align 8
  %284 = zext i32 %283 to i64
  %285 = load i64, i64* %4, align 8
  %286 = add i64 %285, %284
  store i64 %286, i64* %4, align 8
  %287 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %50, align 8
  %288 = icmp eq %"class.Ice::Variable"** %287, null
  br i1 %288, label %291, label %289

289:                                              ; preds = %282
  %290 = ptrtoint %"class.Ice::Variable"** %287 to i64
  store i64 %290, i64* %154, align 8
  br label %291

291:                                              ; preds = %282, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #23
  %292 = load i64*, i64** %42, align 8
  %293 = icmp eq i64* %292, null
  br i1 %293, label %297, label %294

294:                                              ; preds = %291
  %295 = ptrtoint i64* %292 to i64
  %296 = bitcast i64** %43 to i64*
  store i64 %295, i64* %296, align 8
  br label %297

297:                                              ; preds = %291, %294
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #23
  ret void

298:                                              ; preds = %164, %349
  %299 = phi %"class.Ice::Variable"** [ %160, %164 ], [ %350, %349 ]
  %300 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %299, align 8
  %301 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %300, i64 0, i32 0, i32 1
  %302 = load i32, i32* %301, align 8
  %303 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %165, align 8
  %304 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %303, i64 15
  %305 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %304, align 8
  %306 = call i64 %305(%"class.Ice::TargetLowering"* %0, i32 %302) #24
  %307 = load i32, i32* %5, align 4
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %298
  %310 = trunc i64 %306 to i32
  store i32 %310, i32* %5, align 4
  br label %311

311:                                              ; preds = %298, %309
  br i1 %40, label %312, label %346

312:                                              ; preds = %311
  %313 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %300, i64 0, i32 1
  %314 = load i32, i32* %313, align 8
  %315 = zext i32 %314 to i64
  %316 = load i64, i64* %168, align 8
  %317 = load i64, i64* %169, align 8
  %318 = sub i64 %316, %317
  %319 = sdiv exact i64 %318, 72
  %320 = icmp ugt i64 %319, %315
  br i1 %320, label %321, label %346

321:                                              ; preds = %312
  %322 = call zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %14, %"class.Ice::Variable"* %300) #24
  br i1 %322, label %323, label %326

323:                                              ; preds = %321
  %324 = load i64, i64* %3, align 8
  %325 = add i64 %324, %306
  store i64 %325, i64* %3, align 8
  br label %349

326:                                              ; preds = %321
  %327 = call %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %14, %"class.Ice::Variable"* %300) #24
  %328 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %327, i64 0, i32 1
  %329 = load i32, i32* %328, align 8
  %330 = zext i32 %329 to i64
  %331 = load i64*, i64** %42, align 8
  %332 = getelementptr inbounds i64, i64* %331, i64 %330
  %333 = load i64, i64* %332, align 8
  %334 = add i64 %333, %306
  store i64 %334, i64* %332, align 8
  %335 = load i64*, i64** %42, align 8
  %336 = getelementptr inbounds i64, i64* %335, i64 %330
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %4, align 8
  %339 = icmp ugt i64 %337, %338
  br i1 %339, label %340, label %341

340:                                              ; preds = %326
  store i64 %337, i64* %4, align 8
  br label %341

341:                                              ; preds = %340, %326
  %342 = load i32, i32* %6, align 4
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %349

344:                                              ; preds = %341
  %345 = trunc i64 %306 to i32
  store i32 %345, i32* %6, align 4
  br label %349

346:                                              ; preds = %311, %312
  %347 = load i64, i64* %4, align 8
  %348 = add i64 %347, %306
  store i64 %348, i64* %4, align 8
  br label %349

349:                                              ; preds = %344, %341, %323, %346
  %350 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %299, i64 1
  %351 = icmp eq %"class.Ice::Variable"** %350, %162
  br i1 %351, label %282, label %298
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImN3Ice12sz_allocatorImNS1_18CfgAllocatorTraitsEEEEC2Em(%"class.std::__1::vector.481"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.481"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #23
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  tail call void @_ZNSt3__16vectorImN3Ice12sz_allocatorImNS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.481"* %0, i64 %1) #22
  %6 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %8 to i64*
  %10 = getelementptr inbounds i64, i64* %9, i64 %1
  %11 = inttoptr i64 %8 to i8*
  %12 = add i64 %1, -1
  %13 = getelementptr i64, i64* %9, i64 %12
  %14 = bitcast i64* %13 to i8*
  %15 = sub i64 0, %8
  %16 = getelementptr i8, i8* %14, i64 %15
  %17 = ptrtoint i8* %16 to i64
  %18 = add i64 %17, 8
  %19 = and i64 %18, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 %19, i1 false) #23
  %20 = ptrtoint i64* %10 to i64
  store i64 %20, i64* %7, align 8
  br label %21

21:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.207"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.Ice::Variable"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.207"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %42

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.Ice::Variable"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = ashr exact i64 %15, 3
  %17 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %18 = shl i64 %1, 3
  %19 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %17, i64 %18, i64 8) #24
  %20 = bitcast i8* %19 to %"class.Ice::Variable"**
  %21 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %20, i64 %16
  %22 = ptrtoint %"class.Ice::Variable"** %21 to i64
  %23 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %20, i64 %1
  %24 = ptrtoint %"class.Ice::Variable"** %23 to i64
  %25 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %0, i64 0, i32 0, i32 0
  %26 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %25, align 8
  %27 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %12, align 8
  %28 = icmp eq %"class.Ice::Variable"** %27, %26
  br i1 %28, label %40, label %29

29:                                               ; preds = %11, %29
  %30 = phi %"class.Ice::Variable"** [ %32, %29 ], [ %21, %11 ]
  %31 = phi %"class.Ice::Variable"** [ %33, %29 ], [ %27, %11 ]
  %32 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %30, i64 -1
  %33 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %31, i64 -1
  %34 = bitcast %"class.Ice::Variable"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.Ice::Variable"** %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = icmp eq %"class.Ice::Variable"** %33, %26
  br i1 %37, label %38, label %29

38:                                               ; preds = %29
  %39 = ptrtoint %"class.Ice::Variable"** %32 to i64
  br label %40

40:                                               ; preds = %11, %38
  %41 = phi i64 [ %39, %38 ], [ %22, %11 ]
  store i64 %41, i64* %6, align 8
  store i64 %22, i64* %13, align 8
  store i64 %24, i64* %4, align 8
  ret void

42:                                               ; preds = %2
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #8

; Function Attrs: optsize
declare %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN3Ice14TargetLowering20alignStackSpillAreasEjjmjPjS1_(%"class.Ice::TargetLowering"* nocapture readnone, i32, i32, i64, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #3 align 2 {
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %7
  %10 = add i32 %1, -1
  %11 = add i32 %10, %2
  %12 = sub i32 0, %2
  %13 = and i32 %11, %12
  %14 = sub i32 %13, %1
  store i32 %14, i32* %5, align 4
  br label %15

15:                                               ; preds = %7, %9
  %16 = icmp eq i32 %4, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %15
  %18 = trunc i64 %3 to i32
  %19 = add i32 %18, -1
  %20 = add i32 %19, %4
  %21 = sub i32 0, %4
  %22 = and i32 %20, %21
  %23 = sub i32 %22, %18
  store i32 %23, i32* %6, align 4
  br label %24

24:                                               ; preds = %15, %17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering19assignVarStackSlotsERNSt3__16vectorIPNS_8VariableENS_12sz_allocatorIS4_NS_18CfgAllocatorTraitsEEEEEmmmb(%"class.Ice::TargetLowering"*, %"class.std::__1::vector.207"* nocapture readonly dereferenceable(32), i64, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector.481", align 8
  %8 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %9 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %8, align 8
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %9, i64 0, i32 24, i32 0, i32 0, i32 0
  %11 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %10, align 8
  %12 = load i32, i32* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 54), align 8
  %13 = zext i32 %12 to i64
  %14 = select i1 %5, i64 %13, i64 0
  %15 = add i64 %14, %2
  %16 = bitcast %"class.std::__1::vector.481"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #23
  %17 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %7, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %7, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %9, i64 0, i32 14
  %20 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %9, i64 0, i32 14, i32 0, i32 1
  %21 = bitcast %"class.Ice::CfgNode"*** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.481"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.std::__1::vector.202"* %19 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = and i64 %27, 4294967295
  call void @_ZNSt3__16vectorImN3Ice12sz_allocatorImNS1_18CfgAllocatorTraitsEEEEC2Em(%"class.std::__1::vector.481"* nonnull %7, i64 %28) #22
  %29 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 7
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %1, i64 0, i32 0, i32 0
  %33 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %1, i64 0, i32 0, i32 1
  %35 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %34, align 8
  %36 = icmp eq %"class.Ice::Variable"** %33, %35
  br i1 %36, label %44, label %37

37:                                               ; preds = %6
  %38 = bitcast %"class.Ice::TargetLowering"* %0 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %39 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %11, i64 0, i32 2
  %40 = getelementptr inbounds %"class.Ice::VariablesMetadata", %"class.Ice::VariablesMetadata"* %11, i64 0, i32 2, i32 0, i32 1
  %41 = bitcast %"class.Ice::VariableTracking"** %40 to i64*
  %42 = bitcast %"class.std::__1::vector.252"* %39 to i64*
  %43 = add i64 %15, %4
  br label %51

44:                                               ; preds = %90, %6
  %45 = load i64*, i64** %17, align 8
  %46 = icmp eq i64* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = ptrtoint i64* %45 to i64
  %49 = bitcast i64** %18 to i64*
  store i64 %48, i64* %49, align 8
  br label %50

50:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #23
  ret void

51:                                               ; preds = %37, %90
  %52 = phi i64 [ %15, %37 ], [ %92, %90 ]
  %53 = phi i64 [ %15, %37 ], [ %91, %90 ]
  %54 = phi %"class.Ice::Variable"** [ %33, %37 ], [ %99, %90 ]
  %55 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %54, align 8
  %56 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %55, i64 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %38, align 8
  %59 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %58, i64 15
  %60 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %59, align 8
  %61 = call i64 %60(%"class.Ice::TargetLowering"* %0, i32 %57) #24
  br i1 %31, label %62, label %88

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %55, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = zext i32 %64 to i64
  %66 = load i64, i64* %41, align 8
  %67 = load i64, i64* %42, align 8
  %68 = sub i64 %66, %67
  %69 = sdiv exact i64 %68, 72
  %70 = icmp ugt i64 %69, %65
  br i1 %70, label %71, label %88

71:                                               ; preds = %62
  %72 = call zeroext i1 @_ZNK3Ice17VariablesMetadata12isMultiBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %11, %"class.Ice::Variable"* %55) #24
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = add i64 %61, %53
  br label %90

75:                                               ; preds = %71
  %76 = call %"class.Ice::CfgNode"* @_ZNK3Ice17VariablesMetadata15getLocalUseNodeEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %11, %"class.Ice::Variable"* %55) #24
  %77 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %76, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = zext i32 %78 to i64
  %80 = load i64*, i64** %17, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 %79
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %61
  store i64 %83, i64* %81, align 8
  %84 = load i64*, i64** %17, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 %79
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %43, %86
  br label %90

88:                                               ; preds = %51, %62
  %89 = add i64 %61, %52
  br label %90

90:                                               ; preds = %73, %75, %88
  %91 = phi i64 [ %74, %73 ], [ %53, %75 ], [ %53, %88 ]
  %92 = phi i64 [ %74, %73 ], [ %87, %75 ], [ %89, %88 ]
  %93 = sub i64 %3, %92
  %94 = trunc i64 %93 to i32
  %95 = trunc i64 %92 to i32
  %96 = sub i32 0, %95
  %97 = select i1 %5, i32 %96, i32 %94
  %98 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %55, i64 0, i32 11
  store i32 %97, i32* %98, align 8
  %99 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %54, i64 1
  %100 = icmp eq %"class.Ice::Variable"** %99, %35
  br i1 %100, label %44, label %51
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.Ice::InstCall"* @_ZN3Ice14TargetLowering14makeHelperCallENS_13RuntimeHelperEPNS_8VariableEj(%"class.Ice::TargetLowering"* nocapture readonly, i32, %"class.Ice::Variable"*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 5
  %6 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %6, i64 0, i32 38, i64 %7
  %9 = load %"class.Ice::Constant"*, %"class.Ice::Constant"** %8, align 8
  %10 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %11 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %10, align 8
  %12 = getelementptr inbounds %"class.Ice::Constant", %"class.Ice::Constant"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %13, align 8
  %15 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %14, i64 104, i64 8) #24
  %16 = bitcast i8* %15 to %"class.Ice::InstCall"*
  tail call void @_ZN3Ice8InstCallC2EPNS_3CfgEjPNS_8VariableEPNS_7OperandEbbbbNS_4Inst8InstKindE(%"class.Ice::InstCall"* %16, %"class.Ice::Cfg"* %11, i32 %3, %"class.Ice::Variable"* %2, %"class.Ice::Operand"* %12, i1 zeroext false, i1 zeroext false, i1 zeroext false, i1 zeroext true, i32 4) #24
  ret %"class.Ice::InstCall"* %16
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN3Ice14TargetLowering24shouldOptimizeMemIntrinsEv(%"class.Ice::TargetLowering"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %3 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 1
  %7 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 28), align 8
  %8 = icmp ne i8 %7, 0
  %9 = or i1 %6, %8
  ret i1 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice14TargetLowering19scalarizeArithmeticENS_14InstArithmetic6OpKindEPNS_8VariableEPNS_7OperandES6_(%"class.Ice::TargetLowering"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.Ice::Variable"*, align 8
  %7 = alloca %"class.Ice::Variable"*, align 8
  %8 = alloca %"class.Ice::Variable"*, align 8
  %9 = alloca %"class.Ice::ConstantUndef"*, align 8
  %10 = alloca %"class.Ice::Constant"*, align 8
  %11 = alloca %"class.Ice::Variable"*, align 8
  %12 = alloca %"class.std::__1::function.563", align 8
  %13 = alloca %"class.std::__1::function.568", align 8
  %14 = alloca %"class.Ice::Variable"*, align 8
  %15 = bitcast %"class.Ice::Variable"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = bitcast %"class.std::__1::function.563"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16)
  %17 = bitcast %"class.std::__1::function.568"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17)
  store %"class.Ice::Variable"* %2, %"class.Ice::Variable"** %7, align 8
  %18 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %2, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = tail call i32 @_ZN3Ice15typeElementTypeENS_4TypeE(i32 %19) #24
  %21 = tail call i64 @_ZN3Ice15typeNumElementsENS_4TypeE(i32 %19) #24
  %22 = trunc i64 %21 to i32
  %23 = bitcast %"class.Ice::Variable"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #23
  %24 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %25 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %24, align 8
  %26 = tail call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %25, i32 %19) #24
  store %"class.Ice::Variable"* %26, %"class.Ice::Variable"** %8, align 8
  %27 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %26, i64 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 20
  %30 = icmp eq %"class.Ice::Variable"* %26, null
  %31 = or i1 %30, %29
  br i1 %31, label %50, label %32

32:                                               ; preds = %5
  %33 = bitcast %"class.Ice::Variable"* %26 to %"class.Ice::VariableVecOn32"*
  %34 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %24, align 8
  tail call void @_ZN3Ice15VariableVecOn3214initVecElementEPNS_3CfgE(%"class.Ice::VariableVecOn32"* nonnull %33, %"class.Ice::Cfg"* %34) #24
  %35 = bitcast %"class.Ice::ConstantUndef"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #23
  %36 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 5
  %37 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %36, align 8
  %38 = tail call %"class.Ice::ConstantUndef"* @_ZN3Ice13GlobalContext8allocateINS_13ConstantUndefEEEPNSt3__19enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES5_E4typeEv(%"class.Ice::GlobalContext"* %37) #24
  %39 = getelementptr inbounds %"class.Ice::ConstantUndef", %"class.Ice::ConstantUndef"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.Ice::ConstantUndef", %"class.Ice::ConstantUndef"* %38, i64 0, i32 0, i32 0, i32 1
  store i32 %19, i32* %40, align 8
  %41 = getelementptr inbounds %"class.Ice::ConstantUndef", %"class.Ice::ConstantUndef"* %38, i64 0, i32 0, i32 0, i32 2
  store i32 6, i32* %41, align 4
  %42 = getelementptr inbounds %"class.Ice::ConstantUndef", %"class.Ice::ConstantUndef"* %38, i64 0, i32 0, i32 0, i32 3
  %43 = getelementptr inbounds %"class.Ice::ConstantUndef", %"class.Ice::ConstantUndef"* %38, i64 0, i32 0, i32 0, i32 4
  %44 = getelementptr inbounds %"class.Ice::Variable"**, %"class.Ice::Variable"*** %43, i64 1
  %45 = bitcast %"class.Ice::Variable"*** %44 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %"class.Ice::ConstantUndef", %"class.Ice::ConstantUndef"* %38, i64 0, i32 0, i32 2
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.Ice::ConstantUndef", %"class.Ice::ConstantUndef"* %38, i64 0, i32 0, i32 3
  store i8 0, i8* %47, align 1
  store %"class.Ice::Variable"** null, %"class.Ice::Variable"*** %43, align 8
  store i32 0, i32* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3Ice13ConstantUndefE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  store %"class.Ice::ConstantUndef"* %38, %"class.Ice::ConstantUndef"** %9, align 8
  %48 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %49 = call %"class.Ice::InstAssign"* @_ZN3Ice15LoweringContext6insertINS_10InstAssignEJRPNS_8VariableERPNS_13ConstantUndefEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %48, %"class.Ice::Variable"** nonnull dereferenceable(8) %8, %"class.Ice::ConstantUndef"** nonnull dereferenceable(8) %9) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #23
  br label %53

50:                                               ; preds = %5
  %51 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %52 = call %"class.Ice::InstFakeDef"* @_ZN3Ice15LoweringContext6insertINS_11InstFakeDefEJRPNS_8VariableEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %51, %"class.Ice::Variable"** nonnull dereferenceable(8) %8) #24
  br label %53

53:                                               ; preds = %50, %32
  %54 = icmp eq i32 %22, 0
  br i1 %54, label %135, label %55

55:                                               ; preds = %53
  %56 = bitcast %"class.Ice::Constant"** %10 to i8*
  %57 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 5
  %58 = ptrtoint %"class.Ice::TargetLowering"* %0 to i64
  %59 = bitcast %"class.Ice::Variable"** %11 to i8*
  %60 = getelementptr inbounds %"class.std::__1::function.563", %"class.std::__1::function.563"* %12, i64 0, i32 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.std::__1::function.563", %"class.std::__1::function.563"* %12, i64 0, i32 0, i32 2
  %62 = bitcast %"class.std::__1::function.563"* %12 to %"class.Ice::TargetLowering"**
  %63 = getelementptr inbounds %"class.std::__1::function.563", %"class.std::__1::function.563"* %12, i64 0, i32 0, i32 0, i32 1
  %64 = bitcast [8 x i8]* %63 to i32*
  %65 = getelementptr inbounds %"class.std::__1::function.568", %"class.std::__1::function.568"* %13, i64 0, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.std::__1::function.568", %"class.std::__1::function.568"* %13, i64 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.std::__1::function.568", %"class.std::__1::function.568"* %13, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.std::__1::function.568", %"class.std::__1::function.568"* %13, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::function.563", %"class.std::__1::function.563"* %12, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::function.563", %"class.std::__1::function.563"* %12, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.Ice::TargetLowering"* %0 to void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)***
  %72 = bitcast %"class.Ice::Variable"** %14 to i8*
  %73 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %74 = bitcast %"class.Ice::Variable"** %14 to i64*
  %75 = bitcast %"class.Ice::Variable"** %8 to i64*
  %76 = bitcast %"class.Ice::Variable"** %6 to i8*
  %77 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %3, i64 0, i32 1
  br label %78

78:                                               ; preds = %125, %55
  %79 = phi i32 [ 0, %55 ], [ %133, %125 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #23
  store %"class.Ice::Constant"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Constant"*), %"class.Ice::Constant"** %10, align 8
  %80 = load %"class.Ice::GlobalContext"*, %"class.Ice::GlobalContext"** %57, align 8
  %81 = call %"class.Ice::Constant"* @_ZN3Ice13GlobalContext16getConstantInt32Ei(%"class.Ice::GlobalContext"* %80, i32 %79) #24
  store %"class.Ice::Constant"* %81, %"class.Ice::Constant"** %10, align 8
  %82 = ptrtoint %"class.Ice::Constant"* %81 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #23
  store %"class.Ice::Variable"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Variable"*), %"class.Ice::Variable"** %11, align 8
  %83 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %24, align 8
  %84 = call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %83, i32 %20) #24
  store %"class.Ice::Variable"* %84, %"class.Ice::Variable"** %11, align 8
  store %"class.Ice::Inst"* (%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)* @"_ZNSt3__110__function16__policy_invokerIFPN3Ice4InstEPNS2_8VariableES6_S6_EE11__call_implINS0_20__default_alloc_funcIZNS2_14TargetLowering19scalarizeArithmeticENS2_14InstArithmetic6OpKindES6_PNS2_7OperandESF_E3$_2S7_EEEES4_PKNS0_16__policy_storageES6_S6_S6_", %"class.Ice::Inst"* (%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)** %60, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice14TargetLowering19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPNS4_7OperandESB_E3$_2FPNS4_4InstES9_S9_S9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %61, align 8
  store %"class.Ice::TargetLowering"* %0, %"class.Ice::TargetLowering"** %62, align 8
  store i32 %1, i32* %64, align 8
  %85 = call i8* @_Znwm(i64 32) #25, !noalias !13
  %86 = bitcast i8* %85 to i64*
  store i64 %58, i64* %86, align 8
  %87 = getelementptr inbounds i8, i8* %85, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 %82, i64* %88, align 8
  %89 = getelementptr inbounds i8, i8* %85, i64 16
  %90 = bitcast i8* %89 to i32*
  store i32 %22, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %85, i64 24
  %92 = bitcast i8* %91 to %"class.Ice::Operand"**
  store %"class.Ice::Operand"* %3, %"class.Ice::Operand"** %92, align 8
  store %"class.Ice::Variable"* (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFPN3Ice8VariableEvEE11__call_implINS0_20__default_alloc_funcIZZNS2_14TargetLowering20scalarizeInstructionIJNS2_7OperandESB_EZNS9_19scalarizeArithmeticENS2_14InstArithmetic6OpKindES4_PSB_SE_E3$_2EEvS4_T0_DpPT_ENKUlSE_E_clESE_EUlvE_S5_EEEES4_PKNS0_16__policy_storageE", %"class.Ice::Variable"* (%"union.std::__1::__function::__policy_storage"*)** %65, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %66, align 8
  %93 = call i8* @_Znwm(i64 32) #25, !noalias !18
  %94 = bitcast i8* %93 to i64*
  store i64 %58, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = bitcast i8* %95 to i64*
  store i64 %82, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to i32*
  store i32 %22, i32* %98, align 8
  %99 = getelementptr inbounds i8, i8* %93, i64 24
  %100 = bitcast i8* %99 to %"class.Ice::Operand"**
  store %"class.Ice::Operand"* %4, %"class.Ice::Operand"** %100, align 8
  store i8* %93, i8** %67, align 8
  %101 = load i32, i32* %77, align 8
  %102 = call i32 @_ZN3Ice15typeElementTypeENS_4TypeE(i32 %101) #24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #23
  store %"class.Ice::Variable"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Variable"*), %"class.Ice::Variable"** %6, align 8
  %103 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %24, align 8
  %104 = call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %103, i32 %102) #24
  store %"class.Ice::Variable"* %104, %"class.Ice::Variable"** %6, align 8
  %105 = bitcast i8* %87 to %"class.Ice::Constant"**
  %106 = call %"class.Ice::InstExtractElement"* @_ZN3Ice15LoweringContext6insertINS_18InstExtractElementEJRPNS_8VariableERKPNS_7OperandERKPNS_8ConstantEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %73, %"class.Ice::Variable"** nonnull dereferenceable(8) %6, %"class.Ice::Operand"** dereferenceable(8) %92, %"class.Ice::Constant"** dereferenceable(8) %105) #24
  %107 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #23
  %108 = load %"class.Ice::Variable"* (%"union.std::__1::__function::__policy_storage"*)*, %"class.Ice::Variable"* (%"union.std::__1::__function::__policy_storage"*)** %65, align 8
  %109 = call %"class.Ice::Variable"* %108(%"union.std::__1::__function::__policy_storage"* nonnull %68) #24
  %110 = load %"class.Ice::Inst"* (%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)*, %"class.Ice::Inst"* (%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*)** %60, align 8
  %111 = call %"class.Ice::Inst"* %110(%"union.std::__1::__function::__policy_storage"* nonnull %69, %"class.Ice::Variable"* %84, %"class.Ice::Variable"* %107, %"class.Ice::Variable"* %109) #24
  %112 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %66, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %112, i64 0, i32 1
  %114 = load void (i8*)*, void (i8*)** %113, align 8
  %115 = icmp eq void (i8*)* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %78
  %117 = load i8*, i8** %67, align 8
  call void %114(i8* %117) #24
  br label %118

118:                                              ; preds = %116, %78
  call void @_ZdlPv(i8* nonnull %85) #25
  %119 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %61, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %119, i64 0, i32 1
  %121 = load void (i8*)*, void (i8*)** %120, align 8
  %122 = icmp eq void (i8*)* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %118
  %124 = load i8*, i8** %70, align 8
  call void %121(i8* %124) #24
  br label %125

125:                                              ; preds = %123, %118
  %126 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*** %71, align 8
  %127 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)** %126, i64 65
  %128 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*)** %127, align 8
  call void %128(%"class.Ice::TargetLowering"* %0, %"class.Ice::Inst"* %111) #24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #23
  store %"class.Ice::Variable"* inttoptr (i64 -6148914691236517206 to %"class.Ice::Variable"*), %"class.Ice::Variable"** %14, align 8
  %129 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %24, align 8
  %130 = call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %129, i32 %19) #24
  store %"class.Ice::Variable"* %130, %"class.Ice::Variable"** %14, align 8
  %131 = call %"class.Ice::InstInsertElement"* @_ZN3Ice15LoweringContext6insertINS_17InstInsertElementEJRPNS_8VariableES5_S5_RPNS_8ConstantEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %73, %"class.Ice::Variable"** nonnull dereferenceable(8) %14, %"class.Ice::Variable"** nonnull dereferenceable(8) %8, %"class.Ice::Variable"** nonnull dereferenceable(8) %11, %"class.Ice::Constant"** nonnull dereferenceable(8) %10) #24
  %132 = load i64, i64* %74, align 8
  store i64 %132, i64* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #23
  %133 = add nuw i32 %79, 1
  %134 = icmp eq i32 %133, %22
  br i1 %134, label %135, label %78

135:                                              ; preds = %125, %53
  %136 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 12
  %137 = call %"class.Ice::InstAssign"* @_ZN3Ice15LoweringContext6insertINS_10InstAssignEJRPNS_8VariableES5_EEEPT_DpOT0_(%"class.Ice::LoweringContext"* %136, %"class.Ice::Variable"** nonnull dereferenceable(8) %7, %"class.Ice::Variable"** nonnull dereferenceable(8) %8) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17)
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice14TargetLowering17emitWithoutPrefixEPKNS_19ConstantRelocatableEPKc(%"class.Ice::TargetLowering"* nocapture, %"class.Ice::ConstantRelocatable"* nocapture, i8* nocapture) local_unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.Ice::TargetDataLowering"* @_ZN3Ice18TargetDataLowering14createLoweringEPNS_13GlobalContextE(%"class.Ice::GlobalContext"*) local_unnamed_addr #0 align 2 {
  %2 = load i32, i32* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 4), align 8
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call fastcc void @_ZN3Ice12_GLOBAL__N_119badTargetFatalErrorENS_10TargetArchE(i32 %2) #27
  unreachable

5:                                                ; preds = %1
  %6 = tail call %"class.Ice::TargetDataLowering"* @_ZN5X866424createTargetDataLoweringEPN3Ice13GlobalContextE(%"class.Ice::GlobalContext"* %0) #24
  ret %"class.Ice::TargetDataLowering"* %6
}

; Function Attrs: optsize
declare %"class.Ice::TargetDataLowering"* @_ZN5X866424createTargetDataLoweringEPN3Ice13GlobalContextE(%"class.Ice::GlobalContext"*) local_unnamed_addr #8

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3Ice18TargetDataLoweringD2Ev(%"class.Ice::TargetDataLowering"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden void @_ZN3Ice18TargetDataLoweringD0Ev(%"class.Ice::TargetDataLowering"* nocapture readnone) unnamed_addr #7 align 2 {
  tail call void @llvm.trap() #28
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3Ice18TargetDataLowering10emitGlobalERKNS_19VariableDeclarationERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.Ice::TargetDataLowering"* nocapture, %"class.Ice::VariableDeclaration"* nocapture dereferenceable(64), %"class.std::__1::basic_string"* nocapture dereferenceable(24)) local_unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.Ice::TargetHeaderLowering"* @_ZN3Ice20TargetHeaderLowering14createLoweringEPNS_13GlobalContextE(%"class.Ice::GlobalContext"*) local_unnamed_addr #0 align 2 {
  %2 = load i32, i32* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 4), align 8
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %1
  tail call fastcc void @_ZN3Ice12_GLOBAL__N_119badTargetFatalErrorENS_10TargetArchE(i32 %2) #27
  unreachable

5:                                                ; preds = %1
  %6 = tail call %"class.Ice::TargetHeaderLowering"* @_ZN5X866426createTargetHeaderLoweringEPN3Ice13GlobalContextE(%"class.Ice::GlobalContext"* %0) #24
  ret %"class.Ice::TargetHeaderLowering"* %6
}

; Function Attrs: optsize
declare %"class.Ice::TargetHeaderLowering"* @_ZN5X866426createTargetHeaderLoweringEPN3Ice13GlobalContextE(%"class.Ice::GlobalContext"*) local_unnamed_addr #8

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3Ice20TargetHeaderLoweringD2Ev(%"class.Ice::TargetHeaderLowering"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice20TargetHeaderLoweringD0Ev(%"class.Ice::TargetHeaderLowering"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.Ice::TargetHeaderLowering"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #25
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice18TargetDataLowering24emitTargetRODataSectionsEv(%"class.Ice::TargetDataLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice20TargetHeaderLowering5lowerEv(%"class.Ice::TargetHeaderLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering12translateOm1Ev(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %4 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0)) #22
  call void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #24
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #25
  br label %13

13:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering11translateO0Ev(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %4 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0)) #22
  call void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #24
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #25
  br label %13

13:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering11translateO1Ev(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %4 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0)) #22
  call void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #24
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #25
  br label %13

13:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering11translateO2Ev(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %0, i64 0, i32 4
  %4 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0)) #22
  call void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #24
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #25
  br label %13

13:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #23
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering12prelowerPhisEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3Ice14TargetLowering11doBranchOptEPNS_4InstEPKNS_7CfgNodeE(%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice14TargetLowering15hasFramePointerEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice14TargetLowering26needsStackPointerAlignmentEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice14TargetLowering19maxOutArgsSizeBytesEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice14TargetLowering21getFramePointerOffsetEjj(%"class.Ice::TargetLowering"*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = add i32 %1, %2
  %5 = sub i32 0, %4
  ret i32 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice14TargetLowering28shouldSplitToVariableVecOn32ENS_4TypeE(%"class.Ice::TargetLowering"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering19initNodeForLoweringEPNS_7CfgNodeE(%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Inst"* @_ZN3Ice14TargetLowering17createLoweredMoveEPNS_8VariableES2_(%"class.Ice::TargetLowering"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), i1 zeroext true) #26
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLoweringD2Ev(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLoweringD0Ev(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #28
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering17doAddressOptOtherEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering16doAddressOptLoadEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering17doAddressOptStoreEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering25doAddressOptLoadSubVectorEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering26doAddressOptStoreSubVectorEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering17doMockBoundsCheckEPNS_7OperandE(%"class.Ice::TargetLowering"*, %"class.Ice::Operand"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice14TargetLowering9postLowerEv(%"class.Ice::TargetLowering"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %8, label %23, label %13

13:                                               ; preds = %4
  br i1 %12, label %17, label %14

14:                                               ; preds = %13
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  br label %33

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %19, i64 %21) #24
  br label %33

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %29 = zext i8 %11 to i64
  %30 = select i1 %12, i8* %25, i8* %28
  %31 = select i1 %12, i64 %27, i64 %29
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %30, i64 %31) #24
  br label %33

33:                                               ; preds = %14, %2, %23, %17
  %34 = phi %"class.std::__1::basic_string"* [ %32, %23 ], [ %22, %17 ], [ %0, %2 ], [ %0, %14 ]
  ret %"class.std::__1::basic_string"* %34
}

; Function Attrs: nofree nounwind optsize readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = tail call i1 @llvm.is.constant.i8(i8 %3)
  br i1 %4, label %5, label %28

5:                                                ; preds = %2
  %6 = tail call i64 @strlen(i8* %1) #24
  %7 = icmp ult i64 %6, 23
  br i1 %7, label %8, label %26

8:                                                ; preds = %5
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  br label %20

17:                                               ; preds = %8
  %18 = trunc i64 %6 to i8
  store i8 %18, i8* %10, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %20

20:                                               ; preds = %17, %13
  %21 = phi i8* [ %16, %13 ], [ %19, %17 ]
  %22 = icmp eq i64 %6, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %1, i64 %6, i1 false) #23
  br label %24

24:                                               ; preds = %20, %23
  %25 = getelementptr inbounds i8, i8* %21, i64 %6
  store i8 0, i8* %25, align 1
  br label %30

26:                                               ; preds = %5
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %1, i64 %6) #24
  br label %30

28:                                               ; preds = %2
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %0, i8* %1) #24
  br label %30

30:                                               ; preds = %24, %26, %28
  %31 = phi %"class.std::__1::basic_string"* [ %29, %28 ], [ %0, %24 ], [ %27, %26 ]
  ret %"class.std::__1::basic_string"* %31
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #14

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #8

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #8

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #8

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.83"* dereferenceable(1)) unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.367"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table.363"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #23
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #23
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #23, !range !9
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.367"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.367"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.367"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.367"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.367"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.367"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.367"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.367"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #23
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.367"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.367"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.367"* %112
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2) #22
  br label %212

9:                                                ; preds = %5
  %10 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8* %1, i64 %2) #22
  br label %212

11:                                               ; preds = %3
  %12 = icmp ult i64 %2, 65
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8* %1, i64 %2) #22
  br label %212

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -40
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = getelementptr inbounds i8, i8* %16, i64 -16
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = getelementptr inbounds i8, i8* %16, i64 -56
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 1
  %26 = add i64 %25, %22
  %27 = getelementptr inbounds i8, i8* %16, i64 -48
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 1
  %30 = add i64 %29, %2
  %31 = getelementptr inbounds i8, i8* %16, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 1
  %34 = xor i64 %33, %30
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  %43 = getelementptr inbounds i8, i8* %16, i64 -64
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %2
  %47 = add i64 %19, %46
  %48 = add i64 %47, %42
  %49 = lshr i64 %48, 21
  %50 = shl i64 %48, 43
  %51 = or i64 %50, %49
  %52 = add i64 %46, %25
  %53 = add i64 %52, %29
  %54 = lshr i64 %53, 44
  %55 = shl i64 %53, 20
  %56 = or i64 %55, %54
  %57 = add i64 %53, %19
  %58 = add i64 %56, %46
  %59 = add i64 %58, %51
  %60 = getelementptr inbounds i8, i8* %16, i64 -32
  %61 = add i64 %26, -5435081209227447693
  %62 = bitcast i8* %60 to i64*
  %63 = load i64, i64* %62, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 1
  %67 = add i64 %61, %63
  %68 = add i64 %67, %19
  %69 = add i64 %68, %66
  %70 = lshr i64 %69, 21
  %71 = shl i64 %69, 43
  %72 = or i64 %71, %70
  %73 = add i64 %67, %33
  %74 = add i64 %73, %22
  %75 = lshr i64 %74, 44
  %76 = shl i64 %74, 20
  %77 = or i64 %76, %75
  %78 = add i64 %74, %66
  %79 = add i64 %77, %67
  %80 = add i64 %79, %72
  %81 = mul i64 %19, -5435081209227447693
  %82 = bitcast i8* %1 to i64*
  %83 = load i64, i64* %82, align 1
  %84 = add i64 %83, %81
  %85 = add i64 %2, -1
  %86 = and i64 %85, -64
  br label %87

87:                                               ; preds = %175, %15
  %88 = phi i64 [ %83, %15 ], [ %177, %175 ]
  %89 = phi i64 [ %80, %15 ], [ %171, %175 ]
  %90 = phi i64 [ %78, %15 ], [ %169, %175 ]
  %91 = phi i64 [ %57, %15 ], [ %147, %175 ]
  %92 = phi i64 [ %59, %15 ], [ %149, %175 ]
  %93 = phi i64 [ %42, %15 ], [ %117, %175 ]
  %94 = phi i64 [ %84, %15 ], [ %127, %175 ]
  %95 = phi i64 [ %86, %15 ], [ %173, %175 ]
  %96 = phi i8* [ %1, %15 ], [ %172, %175 ]
  %97 = phi i64 [ %26, %15 ], [ %122, %175 ]
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 1
  %101 = add i64 %94, %91
  %102 = add i64 %101, %97
  %103 = add i64 %102, %100
  %104 = lshr i64 %103, 37
  %105 = shl i64 %103, 27
  %106 = or i64 %105, %104
  %107 = mul i64 %106, -5435081209227447693
  %108 = add i64 %97, %92
  %109 = getelementptr inbounds i8, i8* %96, i64 48
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = add i64 %108, %111
  %113 = lshr i64 %112, 42
  %114 = shl i64 %112, 22
  %115 = or i64 %114, %113
  %116 = mul i64 %115, -5435081209227447693
  %117 = xor i64 %107, %89
  %118 = getelementptr inbounds i8, i8* %96, i64 40
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = add i64 %120, %91
  %122 = add i64 %121, %116
  %123 = add i64 %93, %90
  %124 = lshr i64 %123, 33
  %125 = shl i64 %123, 31
  %126 = or i64 %125, %124
  %127 = mul i64 %126, -5435081209227447693
  %128 = mul i64 %92, -5435081209227447693
  %129 = getelementptr inbounds i8, i8* %96, i64 16
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 1
  %132 = getelementptr inbounds i8, i8* %96, i64 24
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 1
  %135 = add i64 %88, %128
  %136 = add i64 %135, %90
  %137 = add i64 %136, %134
  %138 = add i64 %137, %117
  %139 = lshr i64 %138, 21
  %140 = shl i64 %138, 43
  %141 = or i64 %140, %139
  %142 = add i64 %135, %100
  %143 = add i64 %142, %131
  %144 = lshr i64 %143, 44
  %145 = shl i64 %143, 20
  %146 = or i64 %145, %144
  %147 = add i64 %143, %134
  %148 = add i64 %146, %135
  %149 = add i64 %148, %141
  %150 = getelementptr inbounds i8, i8* %96, i64 32
  %151 = add i64 %127, %89
  %152 = add i64 %122, %131
  %153 = bitcast i8* %150 to i64*
  %154 = load i64, i64* %153, align 1
  %155 = getelementptr inbounds i8, i8* %96, i64 56
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 1
  %158 = add i64 %151, %154
  %159 = add i64 %152, %158
  %160 = add i64 %159, %157
  %161 = lshr i64 %160, 21
  %162 = shl i64 %160, 43
  %163 = or i64 %162, %161
  %164 = add i64 %158, %120
  %165 = add i64 %164, %111
  %166 = lshr i64 %165, 44
  %167 = shl i64 %165, 20
  %168 = or i64 %167, %166
  %169 = add i64 %165, %157
  %170 = add i64 %168, %158
  %171 = add i64 %170, %163
  %172 = getelementptr inbounds i8, i8* %96, i64 64
  %173 = add i64 %95, -64
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %87
  %176 = bitcast i8* %172 to i64*
  %177 = load i64, i64* %176, align 1
  br label %87

178:                                              ; preds = %87
  %179 = xor i64 %169, %147
  %180 = mul i64 %179, -7070675565921424023
  %181 = lshr i64 %180, 47
  %182 = xor i64 %180, %169
  %183 = xor i64 %182, %181
  %184 = mul i64 %183, -7070675565921424023
  %185 = lshr i64 %184, 47
  %186 = xor i64 %185, %184
  %187 = mul i64 %186, -7070675565921424023
  %188 = lshr i64 %122, 47
  %189 = xor i64 %188, %122
  %190 = mul i64 %189, -5435081209227447693
  %191 = add i64 %190, %117
  %192 = add i64 %191, %187
  %193 = xor i64 %171, %149
  %194 = mul i64 %193, -7070675565921424023
  %195 = lshr i64 %194, 47
  %196 = xor i64 %194, %171
  %197 = xor i64 %196, %195
  %198 = mul i64 %197, -7070675565921424023
  %199 = lshr i64 %198, 47
  %200 = xor i64 %199, %198
  %201 = mul i64 %200, -7070675565921424023
  %202 = add i64 %201, %127
  %203 = xor i64 %202, %192
  %204 = mul i64 %203, -7070675565921424023
  %205 = lshr i64 %204, 47
  %206 = xor i64 %204, %202
  %207 = xor i64 %206, %205
  %208 = mul i64 %207, -7070675565921424023
  %209 = lshr i64 %208, 47
  %210 = xor i64 %209, %208
  %211 = mul i64 %210, -7070675565921424023
  br label %212

212:                                              ; preds = %178, %13, %9, %7
  %213 = phi i64 [ %8, %7 ], [ %10, %9 ], [ %14, %13 ], [ %211, %178 ]
  ret i64 %213
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to i64*
  %4 = load i64, i64* %3, align 1
  %5 = mul i64 %4, -5435081209227447693
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 1
  %9 = getelementptr inbounds i8, i8* %0, i64 %1
  %10 = getelementptr inbounds i8, i8* %9, i64 -8
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = mul i64 %12, -7286425919675154353
  %14 = getelementptr inbounds i8, i8* %9, i64 -16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = mul i64 %16, -4348849565147123417
  %18 = sub i64 %5, %8
  %19 = lshr i64 %18, 43
  %20 = shl i64 %18, 21
  %21 = or i64 %20, %19
  %22 = lshr i64 %13, 30
  %23 = mul i64 %12, -4737503975807385600
  %24 = or i64 %22, %23
  %25 = add i64 %17, %21
  %26 = add i64 %25, %24
  %27 = xor i64 %8, -3942382747735136937
  %28 = lshr i64 %27, 20
  %29 = shl i64 %27, 44
  %30 = or i64 %29, %28
  %31 = add i64 %5, %1
  %32 = sub i64 %31, %13
  %33 = add i64 %32, %30
  %34 = xor i64 %33, %26
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  ret i64 %42
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %0, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 1
  %6 = bitcast i8* %0 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %0, i64 %1
  %9 = getelementptr inbounds i8, i8* %8, i64 -16
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = add i64 %11, %1
  %13 = mul i64 %12, -4348849565147123417
  %14 = add i64 %13, %7
  %15 = add i64 %14, %5
  %16 = lshr i64 %15, 52
  %17 = shl i64 %15, 12
  %18 = or i64 %17, %16
  %19 = lshr i64 %14, 37
  %20 = shl i64 %14, 27
  %21 = or i64 %20, %19
  %22 = getelementptr inbounds i8, i8* %0, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = add i64 %14, %24
  %26 = lshr i64 %25, 7
  %27 = shl i64 %25, 57
  %28 = or i64 %27, %26
  %29 = getelementptr inbounds i8, i8* %0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 1
  %32 = add i64 %25, %31
  %33 = lshr i64 %32, 31
  %34 = shl i64 %32, 33
  %35 = or i64 %34, %33
  %36 = add i64 %28, %21
  %37 = add i64 %36, %18
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds i8, i8* %8, i64 -32
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 1
  %42 = add i64 %41, %31
  %43 = getelementptr inbounds i8, i8* %8, i64 -8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %5
  %47 = add i64 %46, %42
  %48 = lshr i64 %47, 52
  %49 = shl i64 %47, 12
  %50 = or i64 %49, %48
  %51 = lshr i64 %42, 37
  %52 = shl i64 %42, 27
  %53 = or i64 %52, %51
  %54 = getelementptr inbounds i8, i8* %8, i64 -24
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 1
  %57 = add i64 %56, %42
  %58 = lshr i64 %57, 7
  %59 = shl i64 %57, 57
  %60 = or i64 %59, %58
  %61 = add i64 %57, %11
  %62 = add i64 %61, %46
  %63 = lshr i64 %61, 31
  %64 = shl i64 %61, 33
  %65 = or i64 %64, %63
  %66 = add i64 %32, %5
  %67 = add i64 %66, %53
  %68 = add i64 %67, %60
  %69 = add i64 %68, %50
  %70 = add i64 %69, %65
  %71 = mul i64 %70, -7286425919675154353
  %72 = add i64 %62, %38
  %73 = mul i64 %72, -4348849565147123417
  %74 = add i64 %71, %73
  %75 = lshr i64 %74, 47
  %76 = xor i64 %75, %74
  %77 = mul i64 %76, -4348849565147123417
  %78 = add i64 %77, %38
  %79 = lshr i64 %78, 47
  %80 = xor i64 %79, %78
  %81 = mul i64 %80, -7286425919675154353
  ret i64 %81
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.92"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair.94"* %4 to %"class.std::__1::allocator.97"*
  %6 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #23
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.std::__1::vector.92"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 24
  %18 = add nsw i64 %17, 1
  %19 = icmp ugt i64 %18, 768614336404564650
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::vector.92"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #26
  unreachable

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %15
  %27 = sdiv exact i64 %26, 24
  %28 = icmp ult i64 %27, 384307168202282325
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = shl nsw i64 %27, 1
  %31 = icmp ult i64 %30, %18
  %32 = select i1 %31, i64 %18, i64 %30
  br label %33

33:                                               ; preds = %22, %29
  %34 = phi i64 [ %32, %29 ], [ 768614336404564650, %22 ]
  call void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EmmS8_(%"struct.std::__1::__split_buffer"* nonnull %3, i64 %34, i64 %17, %"class.std::__1::allocator.97"* dereferenceable(1) %5) #22
  %35 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #23
  br label %48

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %35, i8* %45, i64 %47) #24
  br label %48

48:                                               ; preds = %40, %43
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 1
  store %"class.std::__1::basic_string"* %50, %"class.std::__1::basic_string"** %8, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %51, align 8
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %54 = icmp eq %"class.std::__1::basic_string"* %53, %52
  br i1 %54, label %55, label %62

55:                                               ; preds = %48
  %56 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  %58 = ptrtoint %"class.std::__1::basic_string"* %52 to i64
  %59 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  br label %81

62:                                               ; preds = %48
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi %"class.std::__1::basic_string"* [ %72, %64 ], [ %63, %62 ]
  %66 = phi %"class.std::__1::basic_string"* [ %68, %64 ], [ %53, %62 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 -1
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %69 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %70 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 24, i1 false) #23
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #23
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 -1
  store %"class.std::__1::basic_string"* %72, %"class.std::__1::basic_string"** %7, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %68, %52
  br i1 %73, label %74, label %64

74:                                               ; preds = %64
  %75 = ptrtoint %"class.std::__1::basic_string"* %72 to i64
  %76 = load i64, i64* %14, align 8
  %77 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %78 = load i64, i64* %11, align 8
  %79 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %80 = load i64, i64* %79, align 8
  br label %81

81:                                               ; preds = %55, %74
  %82 = phi i64* [ %61, %55 ], [ %79, %74 ]
  %83 = phi i64 [ %56, %55 ], [ %80, %74 ]
  %84 = phi i64 [ %57, %55 ], [ %78, %74 ]
  %85 = phi i64* [ %59, %55 ], [ %77, %74 ]
  %86 = phi i64 [ %60, %55 ], [ %75, %74 ]
  %87 = phi i64 [ %58, %55 ], [ %76, %74 ]
  store i64 %86, i64* %14, align 8
  store i64 %87, i64* %85, align 8
  store i64 %83, i64* %11, align 8
  store i64 %84, i64* %82, align 8
  %88 = load i64, i64* %24, align 8
  %89 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %24, align 8
  store i64 %88, i64* %89, align 8
  %91 = bitcast %"struct.std::__1::__split_buffer"* %3 to i64*
  store i64 %87, i64* %91, align 8
  call void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev(%"struct.std::__1::__split_buffer"* nonnull %3) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #23
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EmmS8_(%"struct.std::__1::__split_buffer"*, i64, i64, %"class.std::__1::allocator.97"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.97"* %3, %"class.std::__1::allocator.97"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 768614336404564650
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #26
  unreachable

11:                                               ; preds = %8
  %12 = mul i64 %1, 24
  %13 = tail call i8* @_Znwm(i64 %12) #25
  %14 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"class.std::__1::basic_string"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  store %"class.std::__1::basic_string"* %18, %"class.std::__1::basic_string"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %18, %"class.std::__1::basic_string"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 %1
  store %"class.std::__1::basic_string"* %21, %"class.std::__1::basic_string"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev(%"struct.std::__1::__split_buffer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2, align 8
  tail call void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endEPS6_(%"struct.std::__1::__split_buffer"* %0, %"class.std::__1::basic_string"* %3) #24
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #25
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #15

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #16

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endEPS6_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %1
  br i1 %5, label %20, label %6

6:                                                ; preds = %2, %17
  %7 = phi %"class.std::__1::basic_string"* [ %18, %17 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 -1
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %3, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #25
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %17

17:                                               ; preds = %13, %6
  %18 = phi %"class.std::__1::basic_string"* [ %8, %6 ], [ %16, %13 ]
  %19 = icmp eq %"class.std::__1::basic_string"* %18, %1
  br i1 %19, label %20, label %6

20:                                               ; preds = %17, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.367"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table.363"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #23
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #23
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #23, !range !9
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.367"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.367"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.367"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.367"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.367"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.367"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.367"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.367"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #23
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.367"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.367"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.367"* %112
}

; Function Attrs: optsize
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2ERKS8_(%"class.std::__1::vector.92"*, %"class.std::__1::vector.92"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.92"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #23
  %4 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.92"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE11__vallocateEm(%"class.std::__1::vector.92"* %0, i64 %10) #22
  %13 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE18__construct_at_endIPS6_EENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESC_SC_m(%"class.std::__1::vector.92"* %0, %"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"* %15, i64 %10) #22
  br label %16

16:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE11__vallocateEm(%"class.std::__1::vector.92"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 768614336404564650
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.92"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #26
  unreachable

6:                                                ; preds = %2
  %7 = mul i64 %1, 24
  %8 = tail call i8* @_Znwm(i64 %7) #25
  %9 = bitcast i8* %8 to %"class.std::__1::basic_string"*
  %10 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = bitcast %"class.std::__1::vector.92"* %0 to i8**
  store i8* %8, i8** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 %1
  %14 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE18__construct_at_endIPS6_EENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESC_SC_m(%"class.std::__1::vector.92"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %8, label %32, label %9

9:                                                ; preds = %4
  %10 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br label %11

11:                                               ; preds = %26, %9
  %12 = phi %"class.std::__1::basic_string"* [ %28, %26 ], [ %10, %9 ]
  %13 = phi %"class.std::__1::basic_string"* [ %27, %26 ], [ %1, %9 ]
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #23
  br label %26

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %23, i64 %25) #24
  br label %26

26:                                               ; preds = %21, %18
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 1
  %29 = icmp eq %"class.std::__1::basic_string"* %27, %2
  br i1 %29, label %30, label %11

30:                                               ; preds = %26
  %31 = ptrtoint %"class.std::__1::basic_string"* %28 to i64
  br label %32

32:                                               ; preds = %30, %4
  %33 = phi i64 [ %7, %4 ], [ %31, %30 ]
  store i64 %33, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %2) #24
  br label %19

14:                                               ; preds = %3
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %2, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %2
  store i8* %18, i8** %7, align 8
  br label %19

19:                                               ; preds = %16, %14, %12
  %20 = phi %"class.llvm::raw_ostream"* [ %13, %12 ], [ %0, %14 ], [ %0, %16 ]
  ret %"class.llvm::raw_ostream"* %20
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #8

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #17

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice14SmallBitVector9find_nextILj0EEENSt3__19enable_ifIXltT_L_ZNS0_12BitsElementsEEEiE4typeEj(%"class.Ice::SmallBitVector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = add i32 %1, 1
  %4 = icmp ult i32 %3, 64
  br i1 %4, label %5, label %15

5:                                                ; preds = %2
  %6 = zext i32 %3 to i64
  %7 = shl nsw i64 -1, %6
  %8 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %0, i64 0, i32 0, i64 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, %7
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = tail call i64 @llvm.cttz.i64(i64 %10, i1 true) #23, !range !9
  %14 = trunc i64 %13 to i32
  br label %30

15:                                               ; preds = %2
  %16 = icmp ult i32 %1, 127
  br i1 %16, label %17, label %30

17:                                               ; preds = %5, %15
  %18 = phi i32 [ %1, %15 ], [ 63, %5 ]
  %19 = add nsw i32 %18, -63
  %20 = zext i32 %19 to i64
  %21 = shl nsw i64 -1, %20
  %22 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %0, i64 0, i32 0, i64 1
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %21, %23
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %17
  %27 = tail call i64 @llvm.cttz.i64(i64 %24, i1 true) #23, !range !9
  %28 = trunc i64 %27 to i32
  %29 = or i32 %28, 64
  br label %30

30:                                               ; preds = %26, %17, %15, %12
  %31 = phi i32 [ %14, %12 ], [ %29, %26 ], [ -1, %15 ], [ -1, %17 ]
  ret i32 %31
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_(%"class.std::__1::basic_string"* noalias sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat {
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* %2, i64 0, i8* %1) #24
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false) #23
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #23
  ret void
}

; Function Attrs: optsize
declare i8* @_ZN3Ice16targetArchStringENS_10TargetArchE(i32) local_unnamed_addr #8

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstBundleLock"* @_ZN3Ice15LoweringContext6insertINS_14InstBundleLockEJRNS2_6OptionEEEEPT_DpOT0_(%"class.Ice::LoweringContext"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %4 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %4, i64 0, i32 0
  %6 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %5, align 8
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %8, align 8
  %10 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 104, i64 8) #24
  %11 = bitcast i8* %10 to %"class.Ice::InstBundleLock"*
  tail call void @_ZN3Ice14InstBundleLockC1EPNS_3CfgENS0_6OptionE(%"class.Ice::InstBundleLock"* %11, %"class.Ice::Cfg"* %6, i32 %7) #24
  %12 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %12, align 8
  %14 = icmp eq i8* %10, null
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = bitcast i8* %15 to %"class.llvm::ilist_node_impl"*
  %17 = select i1 %14, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %16
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0
  %19 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0
  %20 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0, i32 0
  %21 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %20, align 8
  %22 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %18, %"class.llvm::ilist_node_base"** %22, align 8
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %17, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %21, %"class.llvm::ilist_node_base"** %23, align 8
  %24 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %21, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %24, align 8
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %20, align 8
  %25 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %26 = bitcast %"class.Ice::Inst"** %25 to i8**
  store i8* %10, i8** %26, align 8
  ret %"class.Ice::InstBundleLock"* %11
}

; Function Attrs: optsize
declare void @_ZN3Ice14InstBundleLockC1EPNS_3CfgENS0_6OptionE(%"class.Ice::InstBundleLock"*, %"class.Ice::Cfg"*, i32) unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.505", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #24
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.505"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #23
  %32 = getelementptr inbounds %"struct.std::__1::pair.505", %"struct.std::__1::pair.505"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.505", %"struct.std::__1::pair.505"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"* %30, %"struct.std::__1::pair.505"* nonnull dereferenceable(16) %4) #22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #23
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #22
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"*, %"struct.std::__1::pair.505"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !23

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #24
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.505"**
  %15 = bitcast %"struct.std::__1::pair.505"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.505"*, %"struct.std::__1::pair.505"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.505", %"struct.std::__1::pair.505"* %16, i64 1
  store %"struct.std::__1::pair.505"* %17, %"struct.std::__1::pair.505"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #23
  %16 = tail call noalias i8* @malloc(i64 %14) #24
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #22
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #23
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #18

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !23

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #24
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstBundleUnlock"* @_ZN3Ice15LoweringContext6insertINS_16InstBundleUnlockEJEEEPT_DpOT0_(%"class.Ice::LoweringContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %3 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %3, i64 0, i32 0
  %5 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %6, align 8
  %8 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %7, i64 104, i64 8) #24
  %9 = bitcast i8* %8 to %"class.Ice::InstBundleUnlock"*
  tail call void @_ZN3Ice16InstBundleUnlockC1EPNS_3CfgE(%"class.Ice::InstBundleUnlock"* %9, %"class.Ice::Cfg"* %5) #24
  %10 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %11 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %10, align 8
  %12 = icmp eq i8* %8, null
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to %"class.llvm::ilist_node_impl"*
  %15 = select i1 %12, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %14
  %16 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 0, i32 0
  %17 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %15, i64 0, i32 0
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 0, i32 0, i32 0
  %19 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %18, align 8
  %20 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %15, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %16, %"class.llvm::ilist_node_base"** %20, align 8
  %21 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %15, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %19, %"class.llvm::ilist_node_base"** %21, align 8
  %22 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %19, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %17, %"class.llvm::ilist_node_base"** %22, align 8
  store %"class.llvm::ilist_node_base"* %17, %"class.llvm::ilist_node_base"** %18, align 8
  %23 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %24 = bitcast %"class.Ice::Inst"** %23 to i8**
  store i8* %8, i8** %24, align 8
  ret %"class.Ice::InstBundleUnlock"* %9
}

; Function Attrs: optsize
declare void @_ZN3Ice16InstBundleUnlockC1EPNS_3CfgE(%"class.Ice::InstBundleUnlock"*, %"class.Ice::Cfg"*) unnamed_addr #8

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #19

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.322"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.318"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %56, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #23, !range !9
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.322"* %23, null
  br i1 %24, label %56, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.322"* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %29, %52
  %32 = phi %"struct.std::__1::__hash_node_base.322"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.322"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %38, %40, %42
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %56

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.322"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %3
  br i1 %51, label %56, label %52

52:                                               ; preds = %44, %47
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.322"* %54, null
  br i1 %55, label %56, label %31

56:                                               ; preds = %47, %52, %44, %25, %2, %18
  %57 = phi %"struct.std::__1::__hash_node_base.322"* [ null, %18 ], [ null, %2 ], [ null, %25 ], [ %32, %47 ], [ null, %52 ], [ null, %44 ]
  ret %"struct.std::__1::__hash_node_base.322"* %57
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal fastcc void @"_ZZN3Ice12_GLOBAL__N_122getInstructionsInRangeEPNS_7CfgNodeEiiENK3$_3clERN4llvm6iplistINS_4InstEJEEE"(%class.anon.511* nocapture readonly, %"class.llvm::iplist"* dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.llvm::ilist_node_base"** %3 to %"class.llvm::ilist_node_impl"**
  %6 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %7 = icmp eq %"class.llvm::ilist_node_impl"* %6, %4
  br i1 %7, label %110, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.anon.511, %class.anon.511* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.anon.511, %class.anon.511* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.anon.511, %class.anon.511* %0, i64 0, i32 2
  %12 = getelementptr inbounds %class.anon.511, %class.anon.511* %0, i64 0, i32 3
  br label %13

13:                                               ; preds = %8, %105
  %14 = phi %"class.llvm::ilist_node_impl"* [ %6, %8 ], [ %108, %105 ]
  %15 = icmp eq %"class.llvm::ilist_node_impl"* %14, null
  %16 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %14, i64 -1, i32 0, i32 1
  %17 = bitcast %"class.llvm::ilist_node_base"** %16 to %"class.Ice::Inst"*
  %18 = select i1 %15, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %17
  %19 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %18, i64 0, i32 4
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %105

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %18, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = load i32*, i32** %9, align 8
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8*, i8** %10, align 8
  store i8 1, i8* %29, align 1
  br label %30

30:                                               ; preds = %28, %22
  %31 = load i8*, i8** %10, align 8
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %100, label %34

34:                                               ; preds = %30
  %35 = load %"class.std::__1::vector.464"*, %"class.std::__1::vector.464"** %11, align 8
  %36 = ptrtoint %"class.Ice::Inst"* %18 to i64
  %37 = getelementptr inbounds %"class.std::__1::vector.464", %"class.std::__1::vector.464"* %35, i64 0, i32 0, i32 1
  %38 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.464", %"class.std::__1::vector.464"* %35, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %39, align 8
  %41 = icmp ult %"class.Ice::Inst"** %38, %40
  %42 = ptrtoint %"class.Ice::Inst"** %40 to i64
  br i1 %41, label %43, label %48

43:                                               ; preds = %34
  %44 = bitcast %"class.Ice::Inst"** %38 to i64*
  store i64 %36, i64* %44, align 8
  %45 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %38, i64 1
  %46 = ptrtoint %"class.Ice::Inst"** %45 to i64
  %47 = bitcast %"class.Ice::Inst"*** %37 to i64*
  store i64 %46, i64* %47, align 8
  br label %100

48:                                               ; preds = %34
  %49 = ptrtoint %"class.Ice::Inst"** %38 to i64
  %50 = bitcast %"class.Ice::Inst"*** %37 to i64*
  %51 = bitcast %"class.std::__1::vector.464"* %35 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %49, %52
  %54 = ashr exact i64 %53, 3
  %55 = add nsw i64 %54, 1
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %59

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::vector.464"* %35 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #26
  unreachable

59:                                               ; preds = %48
  %60 = bitcast %"class.Ice::Inst"*** %39 to i64*
  %61 = sub i64 %42, %52
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = ashr exact i64 %61, 2
  %66 = icmp ult i64 %65, %55
  %67 = select i1 %66, i64 %55, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %64, %59
  %70 = phi i64 [ %67, %64 ], [ 2305843009213693951, %59 ]
  %71 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %72 = shl i64 %70, 3
  %73 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %71, i64 %72, i64 8) #24
  %74 = bitcast i8* %73 to %"class.Ice::Inst"**
  br label %75

75:                                               ; preds = %69, %64
  %76 = phi i64 [ %70, %69 ], [ 0, %64 ]
  %77 = phi %"class.Ice::Inst"** [ %74, %69 ], [ null, %64 ]
  %78 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %77, i64 %54
  %79 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %77, i64 %76
  %80 = ptrtoint %"class.Ice::Inst"** %79 to i64
  %81 = bitcast %"class.Ice::Inst"** %78 to i64*
  store i64 %36, i64* %81, align 8
  %82 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %78, i64 1
  %83 = ptrtoint %"class.Ice::Inst"** %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.464", %"class.std::__1::vector.464"* %35, i64 0, i32 0, i32 0
  %85 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %84, align 8
  %86 = load %"class.Ice::Inst"**, %"class.Ice::Inst"*** %37, align 8
  %87 = icmp eq %"class.Ice::Inst"** %86, %85
  br i1 %87, label %97, label %88

88:                                               ; preds = %75, %88
  %89 = phi %"class.Ice::Inst"** [ %91, %88 ], [ %78, %75 ]
  %90 = phi %"class.Ice::Inst"** [ %92, %88 ], [ %86, %75 ]
  %91 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %89, i64 -1
  %92 = getelementptr inbounds %"class.Ice::Inst"*, %"class.Ice::Inst"** %90, i64 -1
  %93 = bitcast %"class.Ice::Inst"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.Ice::Inst"** %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = icmp eq %"class.Ice::Inst"** %92, %85
  br i1 %96, label %97, label %88

97:                                               ; preds = %88, %75
  %98 = phi %"class.Ice::Inst"** [ %78, %75 ], [ %91, %88 ]
  %99 = ptrtoint %"class.Ice::Inst"** %98 to i64
  store i64 %99, i64* %51, align 8
  store i64 %83, i64* %50, align 8
  store i64 %80, i64* %60, align 8
  br label %100

100:                                              ; preds = %97, %43, %30
  %101 = load i32, i32* %23, align 4
  %102 = load i32*, i32** %12, align 8
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %101, %103
  br i1 %104, label %110, label %105

105:                                              ; preds = %13, %100
  %106 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %14, i64 0, i32 0, i32 1
  %107 = bitcast %"class.llvm::ilist_node_base"** %106 to %"class.llvm::ilist_node_impl"**
  %108 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %107, align 8
  %109 = icmp eq %"class.llvm::ilist_node_impl"* %108, %4
  br i1 %109, label %110, label %13

110:                                              ; preds = %100, %105, %2
  ret void
}

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() local_unnamed_addr #8

; Function Attrs: optsize
declare void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"*, i32, i32, %"class.Ice::CfgNode"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.Ice::LiveRange"* @_ZN3Ice9LiveRangeaSERKS0_(%"class.Ice::LiveRange"*, %"class.Ice::LiveRange"* dereferenceable(96)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.Ice::LiveRange"* %0, %1
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"** %6, align 8
  %8 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"** %8, align 8
  tail call void @_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.310"* %5, %"struct.std::__1::pair.312"* %7, %"struct.std::__1::pair.312"* %9) #24
  %10 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %15 = bitcast float* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %16, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEEEEvT_SP_(%"class.std::__1::__hash_table.318"* %10, %"struct.std::__1::__hash_node_base.322"* %17, %"struct.std::__1::__hash_node_base.322"* null) #24
  br label %18

18:                                               ; preds = %2, %4
  %19 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.Ice::LiveRange", %"class.Ice::LiveRange"* %1, i64 0, i32 2
  %21 = bitcast %"class.std::__1::__wrap_iter"* %20 to i64*
  %22 = bitcast %"class.std::__1::__wrap_iter"* %19 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  ret %"class.Ice::LiveRange"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.310"*, %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.312"* %2 to i64
  %5 = ptrtoint %"struct.std::__1::pair.312"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.312"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.310"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.312"*
  br i1 %15, label %63, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.312"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair.312"* %24, %"struct.std::__1::pair.312"* %2
  %26 = icmp eq %"struct.std::__1::pair.312"* %25, %1
  br i1 %26, label %39, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.std::__1::pair.312"* [ %37, %27 ], [ %16, %17 ]
  %29 = phi %"struct.std::__1::pair.312"* [ %36, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %28, i64 0, i32 0
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %29, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %28, i64 0, i32 1
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %29, i64 1
  %37 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %28, i64 1
  %38 = icmp eq %"struct.std::__1::pair.312"* %36, %25
  br i1 %38, label %39, label %27

39:                                               ; preds = %27, %17
  %40 = phi %"struct.std::__1::pair.312"* [ %16, %17 ], [ %37, %27 ]
  br i1 %23, label %41, label %62

41:                                               ; preds = %39
  %42 = load i64, i64* %19, align 8
  %43 = icmp eq %"struct.std::__1::pair.312"* %25, %2
  br i1 %43, label %60, label %44

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to i64*
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ %42, %44 ], [ %55, %46 ]
  %48 = phi i64* [ %45, %44 ], [ %57, %46 ]
  %49 = phi %"struct.std::__1::pair.312"* [ %24, %44 ], [ %52, %46 ]
  %50 = bitcast %"struct.std::__1::pair.312"* %49 to i64*
  %51 = load i64, i64* %50, align 4
  store i64 %51, i64* %48, align 4
  %52 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %49, i64 1
  %53 = inttoptr i64 %47 to %"struct.std::__1::pair.312"*
  %54 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %53, i64 1
  %55 = ptrtoint %"struct.std::__1::pair.312"* %54 to i64
  %56 = icmp eq %"struct.std::__1::pair.312"* %52, %2
  %57 = bitcast %"struct.std::__1::pair.312"* %54 to i64*
  br i1 %56, label %58, label %46

58:                                               ; preds = %46
  %59 = ptrtoint %"struct.std::__1::pair.312"* %54 to i64
  br label %60

60:                                               ; preds = %58, %41
  %61 = phi i64 [ %42, %41 ], [ %59, %58 ]
  store i64 %61, i64* %19, align 8
  br label %103

62:                                               ; preds = %39
  store %"struct.std::__1::pair.312"* %40, %"struct.std::__1::pair.312"** %18, align 8
  br label %103

63:                                               ; preds = %3
  %64 = icmp eq i64 %12, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = bitcast %"class.std::__1::vector.310"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #23
  br label %67

67:                                               ; preds = %63, %65
  %68 = phi i64 [ %10, %63 ], [ 0, %65 ]
  %69 = icmp ugt i64 %7, 2305843009213693951
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::vector.310"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #26
  unreachable

72:                                               ; preds = %67
  %73 = ashr exact i64 %68, 3
  %74 = icmp ult i64 %73, 1152921504606846975
  br i1 %74, label %75, label %79

75:                                               ; preds = %72
  %76 = ashr exact i64 %68, 2
  %77 = icmp ult i64 %76, %7
  %78 = select i1 %77, i64 %7, i64 %76
  br label %79

79:                                               ; preds = %72, %75
  %80 = phi i64 [ %78, %75 ], [ 2305843009213693951, %72 ]
  tail call void @_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.310"* %0, i64 %80) #22
  %81 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %0, i64 0, i32 0, i32 1
  %82 = bitcast %"struct.std::__1::pair.312"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq %"struct.std::__1::pair.312"* %1, %2
  br i1 %84, label %101, label %85

85:                                               ; preds = %79
  %86 = inttoptr i64 %83 to i64*
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i64 [ %83, %85 ], [ %96, %87 ]
  %89 = phi i64* [ %86, %85 ], [ %98, %87 ]
  %90 = phi %"struct.std::__1::pair.312"* [ %1, %85 ], [ %93, %87 ]
  %91 = bitcast %"struct.std::__1::pair.312"* %90 to i64*
  %92 = load i64, i64* %91, align 4
  store i64 %92, i64* %89, align 4
  %93 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %90, i64 1
  %94 = inttoptr i64 %88 to %"struct.std::__1::pair.312"*
  %95 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %94, i64 1
  %96 = ptrtoint %"struct.std::__1::pair.312"* %95 to i64
  %97 = icmp eq %"struct.std::__1::pair.312"* %93, %2
  %98 = bitcast %"struct.std::__1::pair.312"* %95 to i64*
  br i1 %97, label %99, label %87

99:                                               ; preds = %87
  %100 = ptrtoint %"struct.std::__1::pair.312"* %95 to i64
  br label %101

101:                                              ; preds = %99, %79
  %102 = phi i64 [ %83, %79 ], [ %100, %99 ]
  store i64 %102, i64* %82, align 8
  br label %103

103:                                              ; preds = %60, %62, %101
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIiiEEN3Ice12sz_allocatorIS2_NS3_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.310"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.310"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #26
  unreachable

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %8 = shl i64 %1, 3
  %9 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %7, i64 %8, i64 4) #24
  %10 = bitcast i8* %9 to %"struct.std::__1::pair.312"*
  %11 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair.312"** %11 to i8**
  store i8* %9, i8** %12, align 8
  %13 = bitcast %"class.std::__1::vector.310"* %0 to i8**
  store i8* %9, i8** %13, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.312", %"struct.std::__1::pair.312"* %10, i64 %1
  %15 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair.312"* %14, %"struct.std::__1::pair.312"** %15, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE14__assign_multiINS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEEEEvT_SP_(%"class.std::__1::__hash_table.318"*, %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::__hash_node_base.322"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %53, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i64 [ 0, %8 ], [ %14, %10 ]
  %12 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %9, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %12, i64 %11
  store %"struct.std::__1::__hash_node_base.322"* null, %"struct.std::__1::__hash_node_base.322"** %13, align 8
  %14 = add nuw i64 %11, 1
  %15 = icmp eq i64 %14, %6
  br i1 %15, label %16, label %10

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %18, align 8
  store %"struct.std::__1::__hash_node_base.322"* null, %"struct.std::__1::__hash_node_base.322"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.322"* %19, null
  br i1 %20, label %53, label %21

21:                                               ; preds = %16, %26
  %22 = phi %"struct.std::__1::__hash_node_base.322"* [ %40, %26 ], [ %19, %16 ]
  %23 = phi i64 [ %46, %26 ], [ %4, %16 ]
  %24 = inttoptr i64 %23 to %"struct.std::__1::__hash_node_base.322"*
  %25 = icmp eq %"struct.std::__1::__hash_node_base.322"* %24, %2
  br i1 %25, label %48, label %26

26:                                               ; preds = %21
  %27 = bitcast %"struct.std::__1::__hash_node_base.322"* %22 to %"struct.std::__1::__hash_node.510"*
  %28 = inttoptr i64 %23 to %"struct.std::__1::__hash_node.510"*
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %22, i64 2
  %30 = bitcast %"struct.std::__1::__hash_node_base.322"* %29 to %"struct.std::__1::__hash_value_type.509"*
  %31 = bitcast %"struct.std::__1::__hash_node_base.322"* %29 to i32*
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %22, i64 3
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node.510", %"struct.std::__1::__hash_node.510"* %28, i64 0, i32 2, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %31, align 4
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node.510", %"struct.std::__1::__hash_node.510"* %28, i64 0, i32 2, i32 0, i32 1
  %36 = bitcast %"class.Ice::CfgNode"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"struct.std::__1::__hash_node_base.322"* %32 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %22, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %39, align 8
  %41 = sext i32 %34 to i64
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %22, i64 1
  %43 = bitcast %"struct.std::__1::__hash_node_base.322"* %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = tail call %"struct.std::__1::__hash_node_base.322"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE27__node_insert_multi_prepareEmRS5_(%"class.std::__1::__hash_table.318"* %0, i64 %41, %"struct.std::__1::__hash_value_type.509"* dereferenceable(16) %30) #24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE27__node_insert_multi_performEPNS_11__hash_nodeIS5_PvEEPNS_16__hash_node_baseISL_EE(%"class.std::__1::__hash_table.318"* %0, %"struct.std::__1::__hash_node.510"* %27, %"struct.std::__1::__hash_node_base.322"* %44) #24
  %45 = inttoptr i64 %23 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.322"* %40, null
  br i1 %47, label %53, label %21

48:                                               ; preds = %21, %48
  %49 = phi %"struct.std::__1::__hash_node_base.322"* [ %51, %48 ], [ %22, %21 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.322"* %51, null
  br i1 %52, label %53, label %48

53:                                               ; preds = %26, %48, %16, %3
  %54 = phi i64 [ %4, %3 ], [ %4, %16 ], [ %23, %48 ], [ %46, %26 ]
  %55 = inttoptr i64 %54 to %"struct.std::__1::__hash_node_base.322"*
  %56 = icmp eq %"struct.std::__1::__hash_node_base.322"* %55, %2
  br i1 %56, label %66, label %57

57:                                               ; preds = %53, %57
  %58 = phi i64 [ %63, %57 ], [ %54, %53 ]
  %59 = inttoptr i64 %58 to %"struct.std::__1::__hash_node.510"*
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node.510", %"struct.std::__1::__hash_node.510"* %59, i64 0, i32 2, i32 0
  %61 = tail call %"struct.std::__1::__hash_node_base.322"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE15__emplace_multiIJRKNS_4pairIKiS4_EEEEENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEDpOT_(%"class.std::__1::__hash_table.318"* %0, %"struct.std::__1::pair.508"* dereferenceable(16) %60) #24
  %62 = inttoptr i64 %58 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = inttoptr i64 %63 to %"struct.std::__1::__hash_node_base.322"*
  %65 = icmp eq %"struct.std::__1::__hash_node_base.322"* %64, %2
  br i1 %65, label %66, label %57

66:                                               ; preds = %57, %53
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.322"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE27__node_insert_multi_prepareEmRS5_(%"class.std::__1::__hash_table.318"*, i64, %"struct.std::__1::__hash_value_type.509"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = uitofp i64 %8 to float
  %10 = uitofp i64 %5 to float
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %10
  %14 = fcmp olt float %13, %9
  %15 = icmp eq i64 %5, 0
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = shl i64 %5, 1
  %19 = icmp ult i64 %5, 3
  %20 = tail call i64 @llvm.ctpop.i64(i64 %5) #23, !range !9
  %21 = icmp ugt i64 %20, 1
  %22 = or i1 %19, %21
  %23 = zext i1 %22 to i64
  %24 = or i64 %18, %23
  %25 = fdiv float %9, %12
  %26 = tail call float @llvm.ceil.f32(float %25) #23
  %27 = fptoui float %26 to i64
  %28 = icmp ult i64 %24, %27
  %29 = select i1 %28, i64 %27, i64 %24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE6rehashEm(%"class.std::__1::__hash_table.318"* %0, i64 %29) #22
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %3, %17
  %32 = phi i64 [ %30, %17 ], [ %5, %3 ]
  %33 = tail call i64 @llvm.ctpop.i64(i64 %32) #23, !range !9
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = add i64 %32, -1
  %37 = and i64 %36, %1
  br label %42

38:                                               ; preds = %31
  %39 = icmp ugt i64 %32, %1
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %1, %32
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %1, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.322"* %47, null
  br i1 %48, label %88, label %49

49:                                               ; preds = %42
  %50 = add i64 %32, -1
  %51 = getelementptr inbounds %"struct.std::__1::__hash_value_type.509", %"struct.std::__1::__hash_value_type.509"* %2, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %49, %82
  %54 = phi %"struct.std::__1::__hash_node_base.322"* [ %57, %82 ], [ %47, %49 ]
  %55 = phi i8 [ %87, %82 ], [ 0, %49 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %54, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.322"* %57, null
  br i1 %58, label %88, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %57, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.322"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  br i1 %34, label %65, label %63

63:                                               ; preds = %59
  %64 = and i64 %62, %50
  br label %69

65:                                               ; preds = %59
  %66 = icmp ult i64 %62, %32
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %62, %32
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %62, %65 ]
  %71 = icmp eq i64 %70, %43
  br i1 %71, label %72, label %88

72:                                               ; preds = %69
  %73 = and i8 %55, 1
  %74 = icmp eq i8 %73, 0
  %75 = zext i8 %73 to i32
  %76 = icmp eq i64 %62, %1
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %57, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.322"* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %52
  br label %82

82:                                               ; preds = %77, %72
  %83 = phi i1 [ false, %72 ], [ %81, %77 ]
  %84 = zext i1 %83 to i32
  %85 = icmp eq i32 %75, %84
  %86 = or i1 %74, %85
  %87 = select i1 %85, i8 %55, i8 1
  br i1 %86, label %53, label %88

88:                                               ; preds = %82, %53, %69, %42
  %89 = phi %"struct.std::__1::__hash_node_base.322"* [ null, %42 ], [ %54, %69 ], [ %54, %53 ], [ %54, %82 ]
  ret %"struct.std::__1::__hash_node_base.322"* %89
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE27__node_insert_multi_performEPNS_11__hash_nodeIS5_PvEEPNS_16__hash_node_baseISL_EE(%"class.std::__1::__hash_table.318"*, %"struct.std::__1::__hash_node.510"*, %"struct.std::__1::__hash_node_base.322"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node.510", %"struct.std::__1::__hash_node.510"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #23, !range !9
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = add i64 %5, -1
  %12 = and i64 %11, %7
  br label %17

13:                                               ; preds = %3
  %14 = icmp ult i64 %7, %5
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %7, %5
  br label %17

17:                                               ; preds = %10, %13, %15
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %7, %13 ]
  %19 = icmp eq %"struct.std::__1::__hash_node_base.322"* %2, null
  br i1 %19, label %20, label %48

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %21, i64 0, i32 0
  %23 = bitcast %"struct.std::__1::__hash_node_base.322"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node.510", %"struct.std::__1::__hash_node.510"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node.510", %"struct.std::__1::__hash_node.510"* %1, i64 0, i32 0, i32 0
  %27 = bitcast %"struct.std::__1::__hash_node.510"* %1 to i64*
  store i64 %24, i64* %27, align 8
  store %"struct.std::__1::__hash_node_base.322"* %25, %"struct.std::__1::__hash_node_base.322"** %22, align 8
  %28 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %29, i64 %18
  store %"struct.std::__1::__hash_node_base.322"* %21, %"struct.std::__1::__hash_node_base.322"** %30, align 8
  %31 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %26, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.322"* %31, null
  br i1 %32, label %75, label %33

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.322"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %9, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %28, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.322"* %25, %"struct.std::__1::__hash_node_base.322"** %47, align 8
  br label %75

48:                                               ; preds = %17
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %2, i64 0, i32 0
  %50 = bitcast %"struct.std::__1::__hash_node_base.322"* %2 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node.510", %"struct.std::__1::__hash_node.510"* %1, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node.510", %"struct.std::__1::__hash_node.510"* %1, i64 0, i32 0, i32 0
  %54 = bitcast %"struct.std::__1::__hash_node.510"* %1 to i64*
  store i64 %51, i64* %54, align 8
  store %"struct.std::__1::__hash_node_base.322"* %52, %"struct.std::__1::__hash_node_base.322"** %49, align 8
  %55 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %53, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.322"* %55, null
  br i1 %56, label %75, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %55, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.322"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  br i1 %9, label %64, label %61

61:                                               ; preds = %57
  %62 = add i64 %5, -1
  %63 = and i64 %60, %62
  br label %68

64:                                               ; preds = %57
  %65 = icmp ult i64 %60, %5
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %60, %5
  br label %68

68:                                               ; preds = %61, %64, %66
  %69 = phi i64 [ %63, %61 ], [ %67, %66 ], [ %60, %64 ]
  %70 = icmp eq i64 %69, %18
  br i1 %70, label %75, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %73, i64 %69
  store %"struct.std::__1::__hash_node_base.322"* %52, %"struct.std::__1::__hash_node_base.322"** %74, align 8
  br label %75

75:                                               ; preds = %71, %68, %20, %48, %44
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE6rehashEm(%"class.std::__1::__hash_table.318"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #24
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table.318"* %0, i64 %10) #22
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #23, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #23
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #23, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #24
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table.318"* %0, i64 %42) #22
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table.318"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %101, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %6 = shl i64 %1, 3
  %7 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %5, i64 %6, i64 8) #24
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__hash_table.318"* %0 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = bitcast i8* %7 to %"struct.std::__1::__hash_node_base.322"**
  store %"struct.std::__1::__hash_node_base.322"* null, %"struct.std::__1::__hash_node_base.322"** %11, align 8
  %12 = icmp eq i64 %1, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %18, %4
  %14 = getelementptr inbounds %"class.std::__1::__hash_table.318", %"class.std::__1::__hash_table.318"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.322"* %16, null
  br i1 %17, label %103, label %24

18:                                               ; preds = %4, %18
  %19 = phi i64 [ %22, %18 ], [ 1, %4 ]
  %20 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %8, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %20, i64 %19
  store %"struct.std::__1::__hash_node_base.322"* null, %"struct.std::__1::__hash_node_base.322"** %21, align 8
  %22 = add nuw i64 %19, 1
  %23 = icmp eq i64 %22, %1
  br i1 %23, label %13, label %18

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %16, i64 1
  %26 = bitcast %"struct.std::__1::__hash_node_base.322"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = tail call i64 @llvm.ctpop.i64(i64 %1) #23, !range !9
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = add i64 %1, -1
  %32 = and i64 %27, %31
  br label %37

33:                                               ; preds = %24
  %34 = icmp ult i64 %27, %1
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = urem i64 %27, %1
  br label %37

37:                                               ; preds = %30, %33, %35
  %38 = phi i64 [ %32, %30 ], [ %36, %35 ], [ %27, %33 ]
  %39 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %8, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %39, i64 %38
  store %"struct.std::__1::__hash_node_base.322"* %14, %"struct.std::__1::__hash_node_base.322"** %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %16, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.322"* %42, null
  br i1 %43, label %103, label %44

44:                                               ; preds = %37
  %45 = add i64 %1, -1
  br label %46

46:                                               ; preds = %44, %95
  %47 = phi %"struct.std::__1::__hash_node_base.322"* [ %42, %44 ], [ %99, %95 ]
  %48 = phi i64 [ %38, %44 ], [ %97, %95 ]
  %49 = phi %"struct.std::__1::__hash_node_base.322"* [ %16, %44 ], [ %96, %95 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.322"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  br i1 %29, label %55, label %53

53:                                               ; preds = %46
  %54 = and i64 %52, %45
  br label %59

55:                                               ; preds = %46
  %56 = icmp ult i64 %52, %1
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %52, %1
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %52, %55 ]
  %61 = icmp eq i64 %60, %48
  br i1 %61, label %95, label %62

62:                                               ; preds = %59
  %63 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %8, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %63, i64 %60
  %65 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.322"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %47, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.322"* %68 to i32*
  br label %71

70:                                               ; preds = %62
  store %"struct.std::__1::__hash_node_base.322"* %49, %"struct.std::__1::__hash_node_base.322"** %64, align 8
  br label %95

71:                                               ; preds = %67, %76
  %72 = phi %"struct.std::__1::__hash_node_base.322"* [ %74, %76 ], [ %47, %67 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %72, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.322"* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %74, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.322"* %77 to i32*
  %79 = load i32, i32* %69, align 4
  %80 = load i32, i32* %78, align 4
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %71, label %82

82:                                               ; preds = %71, %76
  %83 = ptrtoint %"struct.std::__1::__hash_node_base.322"* %74 to i64
  %84 = bitcast %"struct.std::__1::__hash_node_base.322"* %72 to i64*
  %85 = bitcast %"struct.std::__1::__hash_node_base.322"* %49 to i64*
  store i64 %83, i64* %85, align 8
  %86 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %8, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %86, i64 %60
  %88 = bitcast %"struct.std::__1::__hash_node_base.322"** %87 to i64**
  %89 = load i64*, i64** %88, align 8
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %84, align 8
  %91 = load %"struct.std::__1::__hash_node_base.322"**, %"struct.std::__1::__hash_node_base.322"*** %8, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %91, i64 %60
  %93 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %93, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.322"* %47, %"struct.std::__1::__hash_node_base.322"** %94, align 8
  br label %95

95:                                               ; preds = %59, %82, %70
  %96 = phi %"struct.std::__1::__hash_node_base.322"* [ %47, %70 ], [ %49, %82 ], [ %47, %59 ]
  %97 = phi i64 [ %60, %70 ], [ %48, %82 ], [ %48, %59 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.322", %"struct.std::__1::__hash_node_base.322"* %96, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.322"*, %"struct.std::__1::__hash_node_base.322"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.322"* %99, null
  br i1 %100, label %103, label %46

101:                                              ; preds = %2
  %102 = bitcast %"class.std::__1::__hash_table.318"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %95, %37, %13, %101
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #17

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #17

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.322"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE15__emplace_multiIJRKNS_4pairIKiS4_EEEEENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEDpOT_(%"class.std::__1::__hash_table.318"*, %"struct.std::__1::pair.508"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24, !noalias !24
  %4 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %3, i64 32, i64 8) #24, !noalias !24
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast %"struct.std::__1::pair.508"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false) #23, !noalias !24
  %7 = bitcast i8* %5 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to i64*
  %12 = bitcast i8* %4 to %"struct.std::__1::__hash_node_base.322"**
  store %"struct.std::__1::__hash_node_base.322"* null, %"struct.std::__1::__hash_node_base.322"** %12, align 8, !noalias !24
  %13 = bitcast i8* %4 to %"struct.std::__1::__hash_node.510"*
  %14 = bitcast i8* %5 to %"struct.std::__1::__hash_value_type.509"*
  store i64 %9, i64* %11, align 8
  %15 = bitcast i8* %4 to %"struct.std::__1::__hash_node_base.322"*
  %16 = tail call %"struct.std::__1::__hash_node_base.322"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE27__node_insert_multi_prepareEmRS5_(%"class.std::__1::__hash_table.318"* %0, i64 %9, %"struct.std::__1::__hash_value_type.509"* dereferenceable(16) %14) #24
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE27__node_insert_multi_performEPNS_11__hash_nodeIS5_PvEEPNS_16__hash_node_baseISL_EE(%"class.std::__1::__hash_table.318"* %0, %"struct.std::__1::__hash_node.510"* %13, %"struct.std::__1::__hash_node_base.322"* %16) #24
  ret %"struct.std::__1::__hash_node_base.322"* %15
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8InstCallC2EPNS_3CfgEjPNS_8VariableEPNS_7OperandEbbbbNS_4Inst8InstKindE(%"class.Ice::InstCall"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i32) unnamed_addr #0 comdat align 2 {
  %11 = zext i1 %5 to i8
  %12 = zext i1 %6 to i8
  %13 = zext i1 %7 to i8
  %14 = zext i1 %8 to i8
  %15 = add i32 %2, 1
  %16 = bitcast %"class.Ice::InstCall"* %0 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice4InstC2EPNS_3CfgENS0_8InstKindEjPNS_8VariableE(%"class.Ice::Inst"* %16, %"class.Ice::Cfg"* %1, i32 %9, i32 %15, %"class.Ice::Variable"* %3) #24
  %17 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN3Ice8InstCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 1
  store i8 %11, i8* %18, align 4
  %19 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 2
  store i8 %12, i8* %19, align 1
  %20 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 3
  store i8 %13, i8* %20, align 2
  %21 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 6
  store i8 %14, i8* %21, align 2
  %22 = ptrtoint %"class.Ice::Operand"* %4 to i64
  %23 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 13
  %24 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 1
  %25 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %24, align 8
  %26 = getelementptr inbounds %"class.Ice::InstCall", %"class.Ice::InstCall"* %0, i64 0, i32 0, i32 0, i32 13, i32 0, i32 2, i32 0, i32 0
  %27 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %26, align 8
  %28 = icmp eq %"class.Ice::Operand"** %25, %27
  %29 = ptrtoint %"class.Ice::Operand"** %27 to i64
  br i1 %28, label %35, label %30

30:                                               ; preds = %10
  %31 = bitcast %"class.Ice::Operand"** %25 to i64*
  store i64 %22, i64* %31, align 8
  %32 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %25, i64 1
  %33 = ptrtoint %"class.Ice::Operand"** %32 to i64
  %34 = bitcast %"class.Ice::Operand"*** %24 to i64*
  store i64 %33, i64* %34, align 8
  br label %87

35:                                               ; preds = %10
  %36 = ptrtoint %"class.Ice::Operand"** %25 to i64
  %37 = bitcast %"class.Ice::Operand"*** %24 to i64*
  %38 = bitcast %"class.std::__1::vector.256"* %23 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %36, %39
  %41 = ashr exact i64 %40, 3
  %42 = add nsw i64 %41, 1
  %43 = icmp ugt i64 %42, 2305843009213693951
  br i1 %43, label %44, label %46

44:                                               ; preds = %35
  %45 = bitcast %"class.std::__1::vector.256"* %23 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #26
  unreachable

46:                                               ; preds = %35
  %47 = bitcast %"class.Ice::Operand"*** %26 to i64*
  %48 = sub i64 %29, %39
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %49, 1152921504606846975
  br i1 %50, label %51, label %56

51:                                               ; preds = %46
  %52 = ashr exact i64 %48, 2
  %53 = icmp ult i64 %52, %42
  %54 = select i1 %53, i64 %42, i64 %52
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %51, %46
  %57 = phi i64 [ %54, %51 ], [ 2305843009213693951, %46 ]
  %58 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %59 = shl i64 %57, 3
  %60 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %58, i64 %59, i64 8) #24
  %61 = bitcast i8* %60 to %"class.Ice::Operand"**
  br label %62

62:                                               ; preds = %56, %51
  %63 = phi i64 [ %57, %56 ], [ 0, %51 ]
  %64 = phi %"class.Ice::Operand"** [ %61, %56 ], [ null, %51 ]
  %65 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %64, i64 %41
  %66 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %64, i64 %63
  %67 = ptrtoint %"class.Ice::Operand"** %66 to i64
  %68 = bitcast %"class.Ice::Operand"** %65 to i64*
  store i64 %22, i64* %68, align 8
  %69 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %65, i64 1
  %70 = ptrtoint %"class.Ice::Operand"** %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.256", %"class.std::__1::vector.256"* %23, i64 0, i32 0, i32 0
  %72 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %71, align 8
  %73 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %24, align 8
  %74 = icmp eq %"class.Ice::Operand"** %73, %72
  br i1 %74, label %84, label %75

75:                                               ; preds = %62, %75
  %76 = phi %"class.Ice::Operand"** [ %78, %75 ], [ %65, %62 ]
  %77 = phi %"class.Ice::Operand"** [ %79, %75 ], [ %73, %62 ]
  %78 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %76, i64 -1
  %79 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %77, i64 -1
  %80 = bitcast %"class.Ice::Operand"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.Ice::Operand"** %78 to i64*
  store i64 %81, i64* %82, align 8
  %83 = icmp eq %"class.Ice::Operand"** %79, %72
  br i1 %83, label %84, label %75

84:                                               ; preds = %75, %62
  %85 = phi %"class.Ice::Operand"** [ %65, %62 ], [ %78, %75 ]
  %86 = ptrtoint %"class.Ice::Operand"** %85 to i64
  store i64 %86, i64* %38, align 8
  store i64 %70, i64* %37, align 8
  store i64 %67, i64* %47, align 8
  br label %87

87:                                               ; preds = %30, %84
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice4InstC2EPNS_3CfgENS0_8InstKindEjPNS_8VariableE(%"class.Ice::Inst"*, %"class.Ice::Cfg"*, i32, i32, %"class.Ice::Variable"*) unnamed_addr #8

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorEPKcb(i8*, i1 zeroext) local_unnamed_addr #6

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev(%"class.std::__1::__vector_base.93"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.93", %"class.std::__1::__vector_base.93"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2, align 8
  %4 = icmp eq %"class.std::__1::basic_string"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  tail call void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE5clearEv(%"class.std::__1::__vector_base.93"* %0) #24
  %6 = bitcast %"class.std::__1::__vector_base.93"* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %7) #25
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE5clearEv(%"class.std::__1::__vector_base.93"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.93", %"class.std::__1::__vector_base.93"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__vector_base.93", %"class.std::__1::__vector_base.93"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, %3
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %17
  %8 = phi %"class.std::__1::basic_string"* [ %9, %17 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 -1
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #25
  br label %17

17:                                               ; preds = %14, %7
  %18 = icmp eq %"class.std::__1::basic_string"* %9, %3
  br i1 %18, label %19, label %7

19:                                               ; preds = %17, %1
  store %"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"** %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice14SmallBitVectorENS_9allocatorIS2_EEE11__vallocateEm(%"class.std::__1::vector.355"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 768614336404564650
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.355"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #26
  unreachable

6:                                                ; preds = %2
  %7 = mul i64 %1, 24
  %8 = tail call i8* @_Znwm(i64 %7) #25
  %9 = bitcast i8* %8 to %"class.Ice::SmallBitVector"*
  %10 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.Ice::SmallBitVector"** %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = bitcast %"class.std::__1::vector.355"* %0 to i8**
  store i8* %8, i8** %12, align 8
  %13 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %9, i64 %1
  %14 = getelementptr inbounds %"class.std::__1::vector.355", %"class.std::__1::vector.355"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.Ice::SmallBitVector"* %13, %"class.Ice::SmallBitVector"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEED2Ev(%"class.std::__1::__hash_table.363"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %2, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table.363"* %0, %"struct.std::__1::__hash_node_base.367"* %3) #24
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %4, align 8
  store %"struct.std::__1::__hash_node_base.367"** null, %"struct.std::__1::__hash_node_base.367"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.367"** %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.std::__1::__hash_node_base.367"** %5 to i8*
  tail call void @_ZdlPv(i8* %8) #25
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table.363"*, %"struct.std::__1::__hash_node_base.367"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.std::__1::__hash_node_base.367"* %1, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2, %16
  %5 = phi %"struct.std::__1::__hash_node_base.367"* [ %7, %16 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %5, i64 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %5, i64 2
  %9 = bitcast %"struct.std::__1::__hash_node_base.367"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = bitcast %"struct.std::__1::__hash_node_base.367"* %8 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #25
  br label %16

16:                                               ; preds = %4, %13
  %17 = bitcast %"struct.std::__1::__hash_node_base.367"* %5 to i8*
  tail call void @_ZdlPv(i8* %17) #25
  %18 = icmp eq %"struct.std::__1::__hash_node_base.367"* %7, null
  br i1 %18, label %19, label %4

19:                                               ; preds = %16, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.367"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.363"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.529"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = alloca %"class.std::__1::unique_ptr.530", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i8* %13, i8* %16
  %19 = select i1 %11, i64 %15, i64 %17
  %20 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #23
  %21 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %18, i64 %19) #24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #23
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %115, label %25

25:                                               ; preds = %5
  %26 = call i64 @llvm.ctpop.i64(i64 %23) #23, !range !9
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %21, %23
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.367"* %40, null
  br i1 %41, label %115, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.367"* %44, null
  br i1 %45, label %115, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  %48 = load i8, i8* %9, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %14, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = load i8*, i8** %12, align 8
  %54 = select i1 %49, i8* %53, i8* %16
  %55 = icmp eq i64 %52, 0
  br label %56

56:                                               ; preds = %46, %99
  %57 = phi %"struct.std::__1::__hash_node_base.367"* [ %44, %46 ], [ %101, %99 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.367"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %21
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %27, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %47
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %23
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %23
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %36
  br i1 %71, label %72, label %115

72:                                               ; preds = %56, %69
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.367"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %57, i64 3
  %79 = bitcast %"struct.std::__1::__hash_node_base.367"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %76 to i64
  %82 = select i1 %77, i64 %80, i64 %81
  %83 = icmp eq i64 %82, %52
  br i1 %83, label %84, label %99

84:                                               ; preds = %72
  %85 = bitcast %"struct.std::__1::__hash_node_base.367"* %73 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base.367"* %73 to i8*
  %88 = select i1 %77, i8* %86, i8* %87
  br i1 %77, label %95, label %89

89:                                               ; preds = %84
  br i1 %55, label %216, label %90

90:                                               ; preds = %89
  %91 = ptrtoint i8* %86 to i64
  %92 = trunc i64 %91 to i8
  %93 = load i8, i8* %54, align 1
  %94 = icmp eq i8 %93, %92
  br i1 %94, label %103, label %99

95:                                               ; preds = %84
  br i1 %55, label %216, label %96

96:                                               ; preds = %95
  %97 = call i32 @bcmp(i8* %88, i8* %54, i64 %52) #23
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %216, label %99

99:                                               ; preds = %110, %90, %72, %96
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %57, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.367"* %101, null
  br i1 %102, label %115, label %56

103:                                              ; preds = %90, %110
  %104 = phi i64 [ %107, %110 ], [ %81, %90 ]
  %105 = phi i8* [ %108, %110 ], [ %87, %90 ]
  %106 = phi i8* [ %111, %110 ], [ %54, %90 ]
  %107 = add i64 %104, -1
  %108 = getelementptr inbounds i8, i8* %105, i64 1
  %109 = icmp eq i64 %107, 0
  br i1 %109, label %216, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds i8, i8* %106, i64 1
  %112 = load i8, i8* %108, align 1
  %113 = load i8, i8* %111, align 1
  %114 = icmp eq i8 %112, %113
  br i1 %114, label %103, label %99

115:                                              ; preds = %69, %99, %42, %35, %5
  %116 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %42 ], [ %36, %99 ], [ %36, %69 ]
  %117 = bitcast %"class.std::__1::unique_ptr.530"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #23
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.530", %"class.std::__1::unique_ptr.530"* %7, i64 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.530", %"class.std::__1::unique_ptr.530"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.530", %"class.std::__1::unique_ptr.530"* %7, i64 0, i32 0, i32 1, i32 0, i32 1
  %121 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 1
  %122 = bitcast %"class.std::__1::unique_ptr.530"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 24, i1 false)
  %123 = call i8* @_Znwm(i64 48) #25, !noalias !27
  %124 = ptrtoint i8* %123 to i64
  %125 = bitcast %"class.std::__1::unique_ptr.530"* %7 to i64*
  store i64 %124, i64* %125, align 8, !alias.scope !27
  %126 = bitcast %"class.std::__1::allocator.377"** %119 to %"class.std::__1::__compressed_pair.374"**
  store %"class.std::__1::__compressed_pair.374"* %121, %"class.std::__1::__compressed_pair.374"** %126, align 8, !alias.scope !27
  %127 = getelementptr inbounds i8, i8* %123, i64 16
  %128 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %129 = load i8*, i8** %128, align 8, !noalias !27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %129, i64 24, i1 false) #23, !noalias !27
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #23, !noalias !27
  %130 = getelementptr inbounds i8, i8* %123, i64 40
  %131 = bitcast i8* %130 to i32*
  store i32 -1, i32* %131, align 4, !noalias !27
  store i8 1, i8* %120, align 8, !alias.scope !27
  %132 = getelementptr inbounds i8, i8* %123, i64 8
  %133 = bitcast i8* %132 to i64*
  store i64 %21, i64* %133, align 8, !noalias !27
  %134 = bitcast i8* %123 to %"struct.std::__1::__hash_node_base.367"**
  store %"struct.std::__1::__hash_node_base.367"* null, %"struct.std::__1::__hash_node_base.367"** %134, align 8, !noalias !27
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 2, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 1
  %138 = uitofp i64 %137 to float
  %139 = uitofp i64 %23 to float
  %140 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 3, i32 0, i32 0
  %141 = load float, float* %140, align 4
  %142 = fmul float %141, %139
  %143 = fcmp olt float %142, %138
  %144 = or i1 %24, %143
  %145 = bitcast i8* %123 to i64*
  br i1 %144, label %146, label %169

146:                                              ; preds = %115
  %147 = shl i64 %23, 1
  %148 = icmp ult i64 %23, 3
  %149 = call i64 @llvm.ctpop.i64(i64 %23) #23, !range !9
  %150 = icmp ugt i64 %149, 1
  %151 = or i1 %148, %150
  %152 = zext i1 %151 to i64
  %153 = or i64 %147, %152
  %154 = fdiv float %138, %141
  %155 = call float @llvm.ceil.f32(float %154) #23
  %156 = fptoui float %155 to i64
  %157 = icmp ult i64 %153, %156
  %158 = select i1 %157, i64 %156, i64 %153
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.363"* %0, i64 %158) #22
  %159 = load i64, i64* %22, align 8
  %160 = call i64 @llvm.ctpop.i64(i64 %159) #23, !range !9
  %161 = icmp ugt i64 %160, 1
  br i1 %161, label %165, label %162

162:                                              ; preds = %146
  %163 = add i64 %159, -1
  %164 = and i64 %163, %21
  br label %169

165:                                              ; preds = %146
  %166 = icmp ult i64 %21, %159
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = urem i64 %21, %159
  br label %169

169:                                              ; preds = %167, %165, %162, %115
  %170 = phi i64 [ %23, %115 ], [ %159, %162 ], [ %159, %165 ], [ %159, %167 ]
  %171 = phi i64 [ %116, %115 ], [ %164, %162 ], [ %21, %165 ], [ %168, %167 ]
  %172 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %173 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %172, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %173, i64 %171
  %175 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %174, align 8
  %176 = icmp eq %"struct.std::__1::__hash_node_base.367"* %175, null
  br i1 %176, label %177, label %206

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.374"* %121, i64 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::__compressed_pair.374"* %121 to i64*
  %180 = load i64, i64* %179, align 8
  store i64 %180, i64* %145, align 8
  %181 = bitcast %"class.std::__1::__compressed_pair.374"* %121 to i8**
  store i8* %123, i8** %181, align 8
  %182 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %172, align 8
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %182, i64 %171
  store %"struct.std::__1::__hash_node_base.367"* %178, %"struct.std::__1::__hash_node_base.367"** %183, align 8
  %184 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %184, i64 0, i32 0, i32 0
  %186 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %185, align 8
  %187 = icmp eq %"struct.std::__1::__hash_node_base.367"* %186, null
  br i1 %187, label %211, label %188

188:                                              ; preds = %177
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %184, i64 0, i32 0
  %190 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %186, i64 1
  %191 = bitcast %"struct.std::__1::__hash_node_base.367"* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = call i64 @llvm.ctpop.i64(i64 %170) #23, !range !9
  %194 = icmp ugt i64 %193, 1
  br i1 %194, label %198, label %195

195:                                              ; preds = %188
  %196 = add i64 %170, -1
  %197 = and i64 %192, %196
  br label %202

198:                                              ; preds = %188
  %199 = icmp ult i64 %192, %170
  br i1 %199, label %202, label %200

200:                                              ; preds = %198
  %201 = urem i64 %192, %170
  br label %202

202:                                              ; preds = %195, %198, %200
  %203 = phi i64 [ %197, %195 ], [ %201, %200 ], [ %192, %198 ]
  %204 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %172, align 8
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %204, i64 %203
  store %"struct.std::__1::__hash_node_base.367"* %189, %"struct.std::__1::__hash_node_base.367"** %205, align 8
  br label %211

206:                                              ; preds = %169
  %207 = bitcast %"struct.std::__1::__hash_node_base.367"* %175 to i64*
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %145, align 8
  %209 = bitcast %"struct.std::__1::__hash_node_base.367"* %175 to i8**
  store i8* %123, i8** %209, align 8
  %210 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %118, align 8
  br label %211

211:                                              ; preds = %206, %202, %177
  %212 = phi %"struct.std::__1::__hash_node"* [ %210, %206 ], [ %184, %202 ], [ %184, %177 ]
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %212, i64 0, i32 0
  %214 = load i64, i64* %135, align 8
  %215 = add i64 %214, 1
  store i64 %215, i64* %135, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #23
  br label %216

216:                                              ; preds = %89, %95, %96, %103, %211
  %217 = phi i8 [ 1, %211 ], [ 0, %103 ], [ 0, %96 ], [ 0, %95 ], [ 0, %89 ]
  %218 = phi %"struct.std::__1::__hash_node_base.367"* [ %213, %211 ], [ %57, %103 ], [ %57, %96 ], [ %57, %95 ], [ %57, %89 ]
  %219 = insertvalue { %"struct.std::__1::__hash_node_base.367"*, i8 } undef, %"struct.std::__1::__hash_node_base.367"* %218, 0
  %220 = insertvalue { %"struct.std::__1::__hash_node_base.367"*, i8 } %219, i8 %217, 1
  ret { %"struct.std::__1::__hash_node_base.367"*, i8 } %220
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.363"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #24
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.363"* %0, i64 %10) #22
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #23, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #23
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #23, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #24
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.363"* %0, i64 %42) #22
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.363"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %159, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #26
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #25
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.363"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.367"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.367"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #25
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.369", %"class.std::__1::__bucket_list_deallocator.369"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  br label %24

19:                                               ; preds = %24
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.367"* %22, null
  br i1 %23, label %167, label %30

24:                                               ; preds = %24, %17
  %25 = phi i64 [ %28, %24 ], [ 0, %17 ]
  %26 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base.367"* null, %"struct.std::__1::__hash_node_base.367"** %27, align 8
  %28 = add nuw i64 %25, 1
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %19, label %24

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %22, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base.367"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %1) #23, !range !9
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = add i64 %1, -1
  %38 = and i64 %33, %37
  br label %43

39:                                               ; preds = %30
  %40 = icmp ult i64 %33, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %33, %1
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %33, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %11, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.367"* %20, %"struct.std::__1::__hash_node_base.367"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %22, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.367"* %48, null
  br i1 %49, label %167, label %50

50:                                               ; preds = %43
  %51 = add i64 %1, -1
  br label %52

52:                                               ; preds = %50, %153
  %53 = phi %"struct.std::__1::__hash_node_base.367"* [ %48, %50 ], [ %157, %153 ]
  %54 = phi i64 [ %44, %50 ], [ %155, %153 ]
  %55 = phi %"struct.std::__1::__hash_node_base.367"* [ %22, %50 ], [ %154, %153 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.367"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %35, label %61, label %59

59:                                               ; preds = %52
  %60 = and i64 %58, %51
  br label %65

61:                                               ; preds = %52
  %62 = icmp ult i64 %58, %1
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %58, %1
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %58, %61 ]
  %67 = icmp eq i64 %66, %54
  br i1 %67, label %153, label %68

68:                                               ; preds = %65
  %69 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %11, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %69, i64 %66
  %71 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.367"* %71, null
  br i1 %72, label %91, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.367"* %75, null
  br i1 %76, label %139, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base.367"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %53, i64 3
  %84 = bitcast %"struct.std::__1::__hash_node_base.367"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %81 to i64
  %87 = select i1 %82, i64 %85, i64 %86
  %88 = bitcast %"struct.std::__1::__hash_node_base.367"* %78 to i8**
  %89 = bitcast %"struct.std::__1::__hash_node_base.367"* %78 to i8*
  %90 = icmp eq i64 %87, 0
  br label %92

91:                                               ; preds = %68
  store %"struct.std::__1::__hash_node_base.367"* %55, %"struct.std::__1::__hash_node_base.367"** %70, align 8
  br label %153

92:                                               ; preds = %77, %135
  %93 = phi %"struct.std::__1::__hash_node_base.367"* [ %75, %77 ], [ %137, %135 ]
  %94 = phi %"struct.std::__1::__hash_node_base.367"* [ %53, %77 ], [ %93, %135 ]
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %93, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base.367"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %93, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base.367"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = icmp eq i64 %87, %104
  br i1 %105, label %106, label %139

106:                                              ; preds = %92
  %107 = load i8*, i8** %88, align 8
  %108 = select i1 %82, i8* %107, i8* %89
  %109 = bitcast %"struct.std::__1::__hash_node_base.367"* %95 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.367"* %95 to i8*
  %112 = select i1 %99, i8* %110, i8* %111
  br i1 %82, label %119, label %113

113:                                              ; preds = %106
  br i1 %90, label %135, label %114

114:                                              ; preds = %113
  %115 = ptrtoint i8* %107 to i64
  %116 = trunc i64 %115 to i8
  %117 = load i8, i8* %112, align 1
  %118 = icmp eq i8 %117, %116
  br i1 %118, label %120, label %139

119:                                              ; preds = %106
  br i1 %90, label %135, label %132

120:                                              ; preds = %114, %127
  %121 = phi i64 [ %124, %127 ], [ %86, %114 ]
  %122 = phi i8* [ %125, %127 ], [ %89, %114 ]
  %123 = phi i8* [ %128, %127 ], [ %112, %114 ]
  %124 = add i64 %121, -1
  %125 = getelementptr inbounds i8, i8* %122, i64 1
  %126 = icmp eq i64 %124, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = load i8, i8* %125, align 1
  %130 = load i8, i8* %128, align 1
  %131 = icmp eq i8 %129, %130
  br i1 %131, label %120, label %139

132:                                              ; preds = %119
  %133 = tail call i32 @bcmp(i8* %108, i8* %112, i64 %87) #23
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %120, %113, %119, %132
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %93, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.367"* %137, null
  br i1 %138, label %139, label %92

139:                                              ; preds = %132, %135, %92, %114, %127, %73
  %140 = phi %"struct.std::__1::__hash_node_base.367"* [ %53, %73 ], [ %94, %127 ], [ %94, %132 ], [ %93, %135 ], [ %94, %92 ], [ %94, %114 ]
  %141 = bitcast %"struct.std::__1::__hash_node_base.367"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.367"* %55 to i64*
  store i64 %142, i64* %143, align 8
  %144 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %11, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %144, i64 %66
  %146 = bitcast %"struct.std::__1::__hash_node_base.367"** %145 to i64**
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %141, align 8
  %149 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %11, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %149, i64 %66
  %151 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %150, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %151, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.367"* %53, %"struct.std::__1::__hash_node_base.367"** %152, align 8
  br label %153

153:                                              ; preds = %65, %139, %91
  %154 = phi %"struct.std::__1::__hash_node_base.367"* [ %53, %91 ], [ %55, %139 ], [ %53, %65 ]
  %155 = phi i64 [ %66, %91 ], [ %54, %139 ], [ %54, %65 ]
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.367", %"struct.std::__1::__hash_node_base.367"* %154, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.367"*, %"struct.std::__1::__hash_node_base.367"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.367"* %157, null
  br i1 %158, label %167, label %52

159:                                              ; preds = %2
  %160 = getelementptr inbounds %"class.std::__1::__hash_table.363", %"class.std::__1::__hash_table.363"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base.367"**, %"struct.std::__1::__hash_node_base.367"*** %160, align 8
  store %"struct.std::__1::__hash_node_base.367"** null, %"struct.std::__1::__hash_node_base.367"*** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.367"** %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.std::__1::__hash_node_base.367"** %161 to i8*
  tail call void @_ZdlPv(i8* %164) #25
  br label %165

165:                                              ; preds = %159, %163
  %166 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.369", %"class.std::__1::__bucket_list_deallocator.369"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %166, align 8
  br label %167

167:                                              ; preds = %153, %43, %19, %165
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.429"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.429"* %0, %"class.std::__1::__tree_node"* %7) #24
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6insertINS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEEEvT_SH_(%"class.std::__1::set"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0
  br label %9

8:                                                ; preds = %41, %3
  ret void

9:                                                ; preds = %6, %41
  %10 = phi %"class.std::__1::__tree_end_node"* [ %1, %6 ], [ %42, %41 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 4
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.Ice::Variable"**
  %13 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE30__emplace_hint_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEENS_21__tree_const_iteratorIS3_SI_lEERKT_DpOT0_(%"class.std::__1::__tree.429"* %7, %"class.std::__1::__tree_end_node"* %4, %"class.Ice::Variable"** dereferenceable(8) %12, %"class.Ice::Variable"** dereferenceable(8) %12) #24
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 1, i32 0
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_node_base"* %15, null
  br i1 %16, label %17, label %25

17:                                               ; preds = %9
  %18 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node_base"*
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 2
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_end_node"**
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 0, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, %18
  br i1 %24, label %41, label %32

25:                                               ; preds = %9, %25
  %26 = phi %"class.std::__1::__tree_node_base"* [ %28, %25 ], [ %15, %9 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %25

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 0
  br label %41

32:                                               ; preds = %17, %32
  %33 = phi %"class.std::__1::__tree_end_node"** [ %36, %32 ], [ %20, %17 ]
  %34 = bitcast %"class.std::__1::__tree_end_node"** %33 to %"class.std::__1::__tree_node_base"**
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 2
  %37 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, %35
  br i1 %40, label %41, label %32

41:                                               ; preds = %32, %17, %30
  %42 = phi %"class.std::__1::__tree_end_node"* [ %31, %30 ], [ %21, %17 ], [ %37, %32 ]
  %43 = icmp eq %"class.std::__1::__tree_end_node"* %42, %2
  br i1 %43, label %8, label %9
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE30__emplace_hint_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEENS_21__tree_const_iteratorIS3_SI_lEERKT_DpOT0_(%"class.std::__1::__tree.429"*, %"class.std::__1::__tree_end_node"*, %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #23
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SC_EElEERPNS_15__tree_end_nodeISE_EESF_RKT_(%"class.std::__1::__tree.429"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.Ice::Variable"** dereferenceable(8) %2) #22
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24, !noalias !30
  %15 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %14, i64 40, i64 8) #24, !noalias !30
  %16 = getelementptr inbounds i8, i8* %15, i64 32
  %17 = bitcast %"class.Ice::Variable"** %3 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !30
  %19 = bitcast i8* %16 to i64*
  store i64 %18, i64* %19, align 8, !noalias !30
  %20 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %21 = bitcast i8* %15 to %"class.std::__1::__tree_node"*
  %22 = bitcast i8* %15 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_(%"class.std::__1::__tree.429"* %0, %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_node_base"** dereferenceable(8) %9, %"class.std::__1::__tree_node_base"* %22) #24
  br label %23

23:                                               ; preds = %13, %4
  %24 = phi i8 [ 1, %13 ], [ 0, %4 ]
  %25 = phi %"class.std::__1::__tree_node"* [ %21, %13 ], [ %11, %4 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %25, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #23
  %27 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %26, 0
  %28 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %27, i8 %24, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %28
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SC_EElEERPNS_15__tree_end_nodeISE_EESF_RKT_(%"class.std::__1::__tree.429"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.Ice::Variable"**
  %12 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %4, align 8
  %13 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %11, align 8
  %14 = icmp ult %"class.Ice::Variable"* %12, %13
  br i1 %14, label %15, label %58

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  br i1 %18, label %47, label %21

21:                                               ; preds = %15
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %20, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %1, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 1
  %43 = bitcast %"class.std::__1::__tree_node_base"* %42 to %"class.Ice::Variable"**
  %44 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %43, align 8
  %45 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %4, align 8
  %46 = icmp ult %"class.Ice::Variable"* %44, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %15, %39
  %48 = phi i64 [ %41, %39 ], [ %6, %15 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %106

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %48, i64* %53, align 8
  %54 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  br label %106

56:                                               ; preds = %39
  %57 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_(%"class.std::__1::__tree.429"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.Ice::Variable"** dereferenceable(8) %4) #22
  br label %106

58:                                               ; preds = %9
  %59 = icmp ult %"class.Ice::Variable"* %13, %12
  br i1 %59, label %60, label %103

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %66 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %67 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_end_node"**
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, %65
  br i1 %71, label %88, label %79

72:                                               ; preds = %60, %72
  %73 = phi %"class.std::__1::__tree_node_base"* [ %75, %72 ], [ %62, %60 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %77, label %72

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %73, i64 0, i32 0
  br label %88

79:                                               ; preds = %64, %79
  %80 = phi %"class.std::__1::__tree_end_node"** [ %83, %79 ], [ %67, %64 ]
  %81 = bitcast %"class.std::__1::__tree_end_node"** %80 to %"class.std::__1::__tree_node_base"**
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %82, i64 0, i32 2
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, %82
  br i1 %87, label %88, label %79

88:                                               ; preds = %79, %64, %77
  %89 = phi %"class.std::__1::__tree_end_node"* [ %78, %77 ], [ %68, %64 ], [ %84, %79 ]
  %90 = icmp eq %"class.std::__1::__tree_end_node"* %89, %7
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 4
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"class.Ice::Variable"**
  %94 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %93, align 8
  %95 = icmp ult %"class.Ice::Variable"* %12, %94
  br i1 %95, label %96, label %101

96:                                               ; preds = %88, %91
  br i1 %63, label %97, label %99

97:                                               ; preds = %96
  %98 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %98, align 8
  br label %106

99:                                               ; preds = %96
  store %"class.std::__1::__tree_end_node"* %89, %"class.std::__1::__tree_end_node"** %2, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 0, i32 0
  br label %106

101:                                              ; preds = %91
  %102 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_(%"class.std::__1::__tree.429"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.Ice::Variable"** dereferenceable(8) %4) #22
  br label %106

103:                                              ; preds = %58
  %104 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %104, align 8
  %105 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %105, align 8
  br label %106

106:                                              ; preds = %97, %99, %101, %50, %52, %56, %103
  %107 = phi %"class.std::__1::__tree_node_base"** [ %3, %103 ], [ %51, %50 ], [ %55, %52 ], [ %57, %56 ], [ %61, %97 ], [ %100, %99 ], [ %102, %101 ]
  ret %"class.std::__1::__tree_node_base"** %107
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_(%"class.std::__1::__tree.429"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree.429"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #24
  %20 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_(%"class.std::__1::__tree.429"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  br label %11

11:                                               ; preds = %8, %33
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %15 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %14, align 8
  %16 = icmp ult %"class.Ice::Variable"* %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %39

23:                                               ; preds = %11
  %24 = icmp ult %"class.Ice::Variable"* %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_node_base"** [ %18, %21 ], [ %26, %29 ], [ %13, %31 ], [ %38, %37 ]
  ret %"class.std::__1::__tree_node_base"** %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.429"*, %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.429", %"class.std::__1::__tree.429"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1
  %15 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %14, align 8
  %16 = icmp ult %"class.Ice::Variable"* %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp ult %"class.Ice::Variable"* %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %4, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %54

45:                                               ; preds = %39
  %46 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24, !noalias !33
  %47 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %46, i64 40, i64 8) #24, !noalias !33
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  %49 = bitcast %"class.Ice::Variable"** %2 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !33
  %51 = bitcast i8* %48 to i64*
  store i64 %50, i64* %51, align 8, !noalias !33
  %52 = bitcast i8* %47 to %"class.std::__1::__tree_node"*
  %53 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_(%"class.std::__1::__tree.429"* %0, %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_node_base"** dereferenceable(8) %41, %"class.std::__1::__tree_node_base"* %53) #24
  br label %54

54:                                               ; preds = %45, %39
  %55 = phi i8 [ 1, %45 ], [ 0, %39 ]
  %56 = phi %"class.std::__1::__tree_node"* [ %52, %45 ], [ %43, %39 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %56, i64 0, i32 0, i32 0
  %58 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %57, 0
  %59 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %58, i8 %55, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %59
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN3Ice8VariableEZNS2_14TargetLowering21postRegallocSplittingERKNS2_14SmallBitVectorEE7UseInfoEENS_22__unordered_map_hasherIS4_SA_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_SA_SF_SD_Lb1EEENS2_12sz_allocatorISA_NS2_18CfgAllocatorTraitsEEEE8__rehashEm(%"class.std::__1::__hash_table.440"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %101, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %6 = shl i64 %1, 3
  %7 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %5, i64 %6, i64 8) #24
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.440", %"class.std::__1::__hash_table.440"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__hash_table.440"* %0 to i8**
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.440", %"class.std::__1::__hash_table.440"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = bitcast i8* %7 to %"struct.std::__1::__hash_node_base.444"**
  store %"struct.std::__1::__hash_node_base.444"* null, %"struct.std::__1::__hash_node_base.444"** %11, align 8
  %12 = icmp eq i64 %1, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %18, %4
  %14 = getelementptr inbounds %"class.std::__1::__hash_table.440", %"class.std::__1::__hash_table.440"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.444"* %16, null
  br i1 %17, label %103, label %24

18:                                               ; preds = %4, %18
  %19 = phi i64 [ %22, %18 ], [ 1, %4 ]
  %20 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %8, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %20, i64 %19
  store %"struct.std::__1::__hash_node_base.444"* null, %"struct.std::__1::__hash_node_base.444"** %21, align 8
  %22 = add nuw i64 %19, 1
  %23 = icmp eq i64 %22, %1
  br i1 %23, label %13, label %18

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %16, i64 1
  %26 = bitcast %"struct.std::__1::__hash_node_base.444"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = tail call i64 @llvm.ctpop.i64(i64 %1) #23, !range !9
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = add i64 %1, -1
  %32 = and i64 %27, %31
  br label %37

33:                                               ; preds = %24
  %34 = icmp ult i64 %27, %1
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = urem i64 %27, %1
  br label %37

37:                                               ; preds = %30, %33, %35
  %38 = phi i64 [ %32, %30 ], [ %36, %35 ], [ %27, %33 ]
  %39 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %8, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %39, i64 %38
  store %"struct.std::__1::__hash_node_base.444"* %14, %"struct.std::__1::__hash_node_base.444"** %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %16, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.444"* %42, null
  br i1 %43, label %103, label %44

44:                                               ; preds = %37
  %45 = add i64 %1, -1
  br label %46

46:                                               ; preds = %44, %95
  %47 = phi %"struct.std::__1::__hash_node_base.444"* [ %42, %44 ], [ %99, %95 ]
  %48 = phi i64 [ %38, %44 ], [ %97, %95 ]
  %49 = phi %"struct.std::__1::__hash_node_base.444"* [ %16, %44 ], [ %96, %95 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.444"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  br i1 %29, label %55, label %53

53:                                               ; preds = %46
  %54 = and i64 %52, %45
  br label %59

55:                                               ; preds = %46
  %56 = icmp ult i64 %52, %1
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %52, %1
  br label %59

59:                                               ; preds = %53, %55, %57
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %52, %55 ]
  %61 = icmp eq i64 %60, %48
  br i1 %61, label %95, label %62

62:                                               ; preds = %59
  %63 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %8, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %63, i64 %60
  %65 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.444"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %47, i64 2
  %69 = bitcast %"struct.std::__1::__hash_node_base.444"* %68 to %"class.Ice::Variable"**
  br label %71

70:                                               ; preds = %62
  store %"struct.std::__1::__hash_node_base.444"* %49, %"struct.std::__1::__hash_node_base.444"** %64, align 8
  br label %95

71:                                               ; preds = %67, %76
  %72 = phi %"struct.std::__1::__hash_node_base.444"* [ %74, %76 ], [ %47, %67 ]
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %72, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.444"* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %74, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.444"* %77 to %"class.Ice::Variable"**
  %79 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %69, align 8
  %80 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %78, align 8
  %81 = icmp eq %"class.Ice::Variable"* %79, %80
  br i1 %81, label %71, label %82

82:                                               ; preds = %71, %76
  %83 = ptrtoint %"struct.std::__1::__hash_node_base.444"* %74 to i64
  %84 = bitcast %"struct.std::__1::__hash_node_base.444"* %72 to i64*
  %85 = bitcast %"struct.std::__1::__hash_node_base.444"* %49 to i64*
  store i64 %83, i64* %85, align 8
  %86 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %8, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %86, i64 %60
  %88 = bitcast %"struct.std::__1::__hash_node_base.444"** %87 to i64**
  %89 = load i64*, i64** %88, align 8
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %84, align 8
  %91 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %8, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %91, i64 %60
  %93 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %93, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.444"* %47, %"struct.std::__1::__hash_node_base.444"** %94, align 8
  br label %95

95:                                               ; preds = %59, %82, %70
  %96 = phi %"struct.std::__1::__hash_node_base.444"* [ %47, %70 ], [ %49, %82 ], [ %47, %59 ]
  %97 = phi i64 [ %60, %70 ], [ %48, %82 ], [ %48, %59 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %96, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.444"* %99, null
  br i1 %100, label %103, label %46

101:                                              ; preds = %2
  %102 = bitcast %"class.std::__1::__hash_table.440"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %95, %37, %13, %101
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice11InstFakeUseC1EPNS_3CfgEPNS_8VariableEj(%"class.Ice::InstFakeUse"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, i32) unnamed_addr #8

; Function Attrs: optsize
declare void @_ZN3Ice11InstFakeDefC1EPNS_3CfgEPNS_8VariableES4_(%"class.Ice::InstFakeDef"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*) unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.207"*, %"class.Ice::Variable"**, %"class.Ice::Variable"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.Ice::Variable"** %2 to i64
  %5 = ptrtoint %"class.Ice::Variable"** %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.Ice::Variable"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.207"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.Ice::Variable"**
  br i1 %15, label %57, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.Ice::Variable"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 %22
  %25 = select i1 %23, %"class.Ice::Variable"** %24, %"class.Ice::Variable"** %2
  %26 = ptrtoint %"class.Ice::Variable"** %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.Ice::Variable"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #23
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %55

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"class.Ice::Variable"** %25, %2
  br i1 %36, label %53, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i64*
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ %35, %37 ], [ %48, %39 ]
  %41 = phi i64* [ %38, %37 ], [ %50, %39 ]
  %42 = phi %"class.Ice::Variable"** [ %24, %37 ], [ %45, %39 ]
  %43 = bitcast %"class.Ice::Variable"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %41, align 8
  %45 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %42, i64 1
  %46 = inttoptr i64 %40 to %"class.Ice::Variable"**
  %47 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %46, i64 1
  %48 = ptrtoint %"class.Ice::Variable"** %47 to i64
  %49 = icmp eq %"class.Ice::Variable"** %45, %2
  %50 = bitcast %"class.Ice::Variable"** %47 to i64*
  br i1 %49, label %51, label %39

51:                                               ; preds = %39
  %52 = ptrtoint %"class.Ice::Variable"** %47 to i64
  br label %53

53:                                               ; preds = %51, %34
  %54 = phi i64 [ %35, %34 ], [ %52, %51 ]
  store i64 %54, i64* %19, align 8
  br label %97

55:                                               ; preds = %33
  %56 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 %28
  store %"class.Ice::Variable"** %56, %"class.Ice::Variable"*** %18, align 8
  br label %97

57:                                               ; preds = %3
  %58 = icmp eq i64 %12, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.207"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #23
  br label %61

61:                                               ; preds = %57, %59
  %62 = phi i64 [ %10, %57 ], [ 0, %59 ]
  %63 = icmp ugt i64 %7, 2305843009213693951
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = bitcast %"class.std::__1::vector.207"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %65) #26
  unreachable

66:                                               ; preds = %61
  %67 = ashr exact i64 %62, 3
  %68 = icmp ult i64 %67, 1152921504606846975
  br i1 %68, label %69, label %73

69:                                               ; preds = %66
  %70 = ashr exact i64 %62, 2
  %71 = icmp ult i64 %70, %7
  %72 = select i1 %71, i64 %7, i64 %70
  br label %73

73:                                               ; preds = %66, %69
  %74 = phi i64 [ %72, %69 ], [ 2305843009213693951, %66 ]
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.207"* %0, i64 %74) #22
  %75 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %0, i64 0, i32 0, i32 1
  %76 = bitcast %"class.Ice::Variable"*** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq %"class.Ice::Variable"** %1, %2
  br i1 %78, label %95, label %79

79:                                               ; preds = %73
  %80 = inttoptr i64 %77 to i64*
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ %77, %79 ], [ %90, %81 ]
  %83 = phi i64* [ %80, %79 ], [ %92, %81 ]
  %84 = phi %"class.Ice::Variable"** [ %1, %79 ], [ %87, %81 ]
  %85 = bitcast %"class.Ice::Variable"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %83, align 8
  %87 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %84, i64 1
  %88 = inttoptr i64 %82 to %"class.Ice::Variable"**
  %89 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %88, i64 1
  %90 = ptrtoint %"class.Ice::Variable"** %89 to i64
  %91 = icmp eq %"class.Ice::Variable"** %87, %2
  %92 = bitcast %"class.Ice::Variable"** %89 to i64*
  br i1 %91, label %93, label %81

93:                                               ; preds = %81
  %94 = ptrtoint %"class.Ice::Variable"** %89 to i64
  br label %95

95:                                               ; preds = %93, %73
  %96 = phi i64 [ %77, %73 ], [ %94, %93 ]
  store i64 %96, i64* %76, align 8
  br label %97

97:                                               ; preds = %53, %55, %95
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.207"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.207"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #26
  unreachable

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %8 = shl i64 %1, 3
  %9 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %7, i64 %8, i64 8) #24
  %10 = bitcast i8* %9 to %"class.Ice::Variable"**
  %11 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.Ice::Variable"*** %11 to i8**
  store i8* %9, i8** %12, align 8
  %13 = bitcast %"class.std::__1::vector.207"* %0 to i8**
  store i8* %9, i8** %13, align 8
  %14 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %10, i64 %1
  %15 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.Ice::Variable"** %14, %"class.Ice::Variable"*** %15, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEvT0_SG_T_"(%"class.Ice::Variable"**, %"class.Ice::Variable"**, %class.anon.472* readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = getelementptr inbounds %class.anon.472, %class.anon.472* %2, i64 0, i32 0
  br label %5

5:                                                ; preds = %493, %3
  %6 = phi %"class.Ice::Variable"** [ %1, %3 ], [ %451, %493 ]
  %7 = phi %"class.Ice::Variable"** [ %0, %3 ], [ %16, %493 ]
  %8 = ptrtoint %"class.Ice::Variable"** %6 to i64
  %9 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, i64 -1
  %10 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, i64 -2
  %11 = bitcast %"class.Ice::Variable"** %9 to i64*
  %12 = ptrtoint %"class.Ice::Variable"** %6 to i64
  br label %13

13:                                               ; preds = %502, %5
  %14 = phi %"class.Ice::Variable"** [ %7, %5 ], [ %503, %502 ]
  br label %15

15:                                               ; preds = %323, %13
  %16 = phi %"class.Ice::Variable"** [ %14, %13 ], [ %265, %323 ]
  %17 = ptrtoint %"class.Ice::Variable"** %16 to i64
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 3
  switch i64 %19, label %67 [
    i64 0, label %506
    i64 1, label %506
    i64 2, label %20
    i64 3, label %52
    i64 4, label %56
    i64 5, label %61
  ]

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, i64 -1
  %22 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %21, align 8
  %23 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, align 8
  %24 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %25 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %22, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"class.Ice::TargetLowering"* %24 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %28 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %28, i64 15
  %30 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %29, align 8
  %31 = tail call i64 %30(%"class.Ice::TargetLowering"* %24, i32 %26) #24
  %32 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %23, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %27, align 8
  %35 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %34, i64 15
  %36 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %35, align 8
  %37 = tail call i64 %36(%"class.Ice::TargetLowering"* %24, i32 %33) #24
  %38 = icmp eq i64 %31, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %20
  %40 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %22, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %23, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp ult i32 %41, %43
  br i1 %44, label %47, label %506

45:                                               ; preds = %20
  %46 = icmp ugt i64 %31, %37
  br i1 %46, label %47, label %506

47:                                               ; preds = %39, %45
  %48 = bitcast %"class.Ice::Variable"** %16 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.Ice::Variable"** %21 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %48, align 8
  store i64 %49, i64* %50, align 8
  br label %506

52:                                               ; preds = %15
  %53 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 1
  %54 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, i64 -1
  %55 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_T_"(%"class.Ice::Variable"** %16, %"class.Ice::Variable"** %53, %"class.Ice::Variable"** %54, %class.anon.472* dereferenceable(8) %2) #22
  br label %506

56:                                               ; preds = %15
  %57 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 1
  %58 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 2
  %59 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, i64 -1
  %60 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_SG_T_"(%"class.Ice::Variable"** %16, %"class.Ice::Variable"** %57, %"class.Ice::Variable"** %58, %"class.Ice::Variable"** %59, %class.anon.472* dereferenceable(8) %2) #22
  br label %506

61:                                               ; preds = %15
  %62 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 1
  %63 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 2
  %64 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 3
  %65 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %6, i64 -1
  %66 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_SG_SG_T_"(%"class.Ice::Variable"** %16, %"class.Ice::Variable"** %62, %"class.Ice::Variable"** %63, %"class.Ice::Variable"** %64, %"class.Ice::Variable"** %65, %class.anon.472* dereferenceable(8) %2) #22
  br label %506

67:                                               ; preds = %15
  %68 = icmp slt i64 %18, 248
  br i1 %68, label %69, label %154

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 2
  %71 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 1
  %72 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_T_"(%"class.Ice::Variable"** %16, %"class.Ice::Variable"** %71, %"class.Ice::Variable"** %70, %class.anon.472* dereferenceable(8) %2) #24
  %73 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 3
  %74 = icmp eq %"class.Ice::Variable"** %73, %6
  br i1 %74, label %506, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.Ice::Variable"** %16 to i64*
  br label %77

77:                                               ; preds = %151, %75
  %78 = phi %"class.Ice::Variable"** [ %73, %75 ], [ %152, %151 ]
  %79 = phi %"class.Ice::Variable"** [ %70, %75 ], [ %78, %151 ]
  %80 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %78, align 8
  %81 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %79, align 8
  %82 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %83 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %80, i64 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = bitcast %"class.Ice::TargetLowering"* %82 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %86 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %86, i64 15
  %88 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %87, align 8
  %89 = tail call i64 %88(%"class.Ice::TargetLowering"* %82, i32 %84) #24
  %90 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %81, i64 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %85, align 8
  %93 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %92, i64 15
  %94 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %93, align 8
  %95 = tail call i64 %94(%"class.Ice::TargetLowering"* %82, i32 %91) #24
  %96 = icmp eq i64 %89, %95
  br i1 %96, label %97, label %103

97:                                               ; preds = %77
  %98 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %80, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %81, i64 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = icmp ult i32 %99, %101
  br i1 %102, label %105, label %151

103:                                              ; preds = %77
  %104 = icmp ugt i64 %89, %95
  br i1 %104, label %105, label %151

105:                                              ; preds = %103, %97
  %106 = bitcast %"class.Ice::Variable"** %78 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %107 to %"class.Ice::Variable"*
  %109 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %108, i64 0, i32 1
  %110 = bitcast %"class.Ice::Variable"** %79 to i64*
  %111 = load i64, i64* %110, align 8
  store i64 %111, i64* %106, align 8
  %112 = icmp eq %"class.Ice::Variable"** %79, %16
  br i1 %112, label %149, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %108, i64 0, i32 0, i32 1
  br label %115

115:                                              ; preds = %142, %113
  %116 = phi %"class.Ice::Variable"** [ %79, %113 ], [ %118, %142 ]
  %117 = bitcast %"class.Ice::Variable"** %116 to i64*
  %118 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %116, i64 -1
  %119 = bitcast %"class.Ice::Variable"** %118 to i64*
  %120 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %118, align 8
  %121 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %122 = load i32, i32* %114, align 8
  %123 = bitcast %"class.Ice::TargetLowering"* %121 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %124 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %123, align 8
  %125 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %124, i64 15
  %126 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %125, align 8
  %127 = tail call i64 %126(%"class.Ice::TargetLowering"* %121, i32 %122) #24
  %128 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %120, i64 0, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %123, align 8
  %131 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %130, i64 15
  %132 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %131, align 8
  %133 = tail call i64 %132(%"class.Ice::TargetLowering"* %121, i32 %129) #24
  %134 = icmp eq i64 %127, %133
  br i1 %134, label %135, label %140

135:                                              ; preds = %115
  %136 = load i32, i32* %109, align 8
  %137 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %120, i64 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = icmp ult i32 %136, %138
  br i1 %139, label %142, label %145

140:                                              ; preds = %115
  %141 = icmp ugt i64 %127, %133
  br i1 %141, label %142, label %147

142:                                              ; preds = %140, %135
  %143 = load i64, i64* %119, align 8
  store i64 %143, i64* %117, align 8
  %144 = icmp eq %"class.Ice::Variable"** %118, %16
  br i1 %144, label %149, label %115

145:                                              ; preds = %135
  %146 = bitcast %"class.Ice::Variable"** %116 to i64*
  br label %149

147:                                              ; preds = %140
  %148 = bitcast %"class.Ice::Variable"** %116 to i64*
  br label %149

149:                                              ; preds = %142, %145, %147, %105
  %150 = phi i64* [ %110, %105 ], [ %146, %145 ], [ %148, %147 ], [ %76, %142 ]
  store i64 %107, i64* %150, align 8
  br label %151

151:                                              ; preds = %149, %103, %97
  %152 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %78, i64 1
  %153 = icmp eq %"class.Ice::Variable"** %152, %6
  br i1 %153, label %506, label %77

154:                                              ; preds = %67
  %155 = icmp sgt i64 %18, 7992
  %156 = sdiv i64 %19, 2
  %157 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 %156
  br i1 %155, label %158, label %163

158:                                              ; preds = %154
  %159 = sdiv i64 %19, 4
  %160 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 %159
  %161 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %157, i64 %159
  %162 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_SG_SG_T_"(%"class.Ice::Variable"** %16, %"class.Ice::Variable"** %160, %"class.Ice::Variable"** %157, %"class.Ice::Variable"** %161, %"class.Ice::Variable"** %9, %class.anon.472* dereferenceable(8) %2) #22
  br label %165

163:                                              ; preds = %154
  %164 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_T_"(%"class.Ice::Variable"** %16, %"class.Ice::Variable"** %157, %"class.Ice::Variable"** %9, %class.anon.472* dereferenceable(8) %2) #22
  br label %165

165:                                              ; preds = %163, %158
  %166 = phi i32 [ %162, %158 ], [ %164, %163 ]
  %167 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, align 8
  %168 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %157, align 8
  %169 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %170 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %167, i64 0, i32 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = bitcast %"class.Ice::TargetLowering"* %169 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %173 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %172, align 8
  %174 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %173, i64 15
  %175 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %174, align 8
  %176 = tail call i64 %175(%"class.Ice::TargetLowering"* %169, i32 %171) #24
  %177 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %168, i64 0, i32 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %172, align 8
  %180 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %179, i64 15
  %181 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %180, align 8
  %182 = tail call i64 %181(%"class.Ice::TargetLowering"* %169, i32 %178) #24
  %183 = icmp eq i64 %176, %182
  br i1 %183, label %184, label %190

184:                                              ; preds = %165
  %185 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %167, i64 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %168, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  %189 = icmp ult i32 %186, %188
  br i1 %189, label %367, label %192

190:                                              ; preds = %165
  %191 = icmp ugt i64 %176, %182
  br i1 %191, label %367, label %192

192:                                              ; preds = %190, %184
  %193 = icmp eq %"class.Ice::Variable"** %16, %10
  br i1 %193, label %194, label %331

194:                                              ; preds = %358, %192
  %195 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 1
  %196 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, align 8
  %197 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, align 8
  %198 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %199 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %196, i64 0, i32 0, i32 1
  %200 = load i32, i32* %199, align 8
  %201 = bitcast %"class.Ice::TargetLowering"* %198 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %202 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %201, align 8
  %203 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %202, i64 15
  %204 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %203, align 8
  %205 = tail call i64 %204(%"class.Ice::TargetLowering"* %198, i32 %200) #24
  %206 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %197, i64 0, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %201, align 8
  %209 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %208, i64 15
  %210 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %209, align 8
  %211 = tail call i64 %210(%"class.Ice::TargetLowering"* %198, i32 %207) #24
  %212 = icmp eq i64 %205, %211
  br i1 %212, label %213, label %219

213:                                              ; preds = %194
  %214 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %196, i64 0, i32 1
  %215 = load i32, i32* %214, align 8
  %216 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %197, i64 0, i32 1
  %217 = load i32, i32* %216, align 8
  %218 = icmp ult i32 %215, %217
  br i1 %218, label %258, label %221

219:                                              ; preds = %194
  %220 = icmp ugt i64 %205, %211
  br i1 %220, label %258, label %221

221:                                              ; preds = %219, %213
  %222 = icmp eq %"class.Ice::Variable"** %195, %9
  br i1 %222, label %506, label %223

223:                                              ; preds = %221, %255
  %224 = phi %"class.Ice::Variable"** [ %256, %255 ], [ %195, %221 ]
  %225 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, align 8
  %226 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %224, align 8
  %227 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %228 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %225, i64 0, i32 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = bitcast %"class.Ice::TargetLowering"* %227 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %231 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %230, align 8
  %232 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %231, i64 15
  %233 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %232, align 8
  %234 = tail call i64 %233(%"class.Ice::TargetLowering"* %227, i32 %229) #24
  %235 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %226, i64 0, i32 0, i32 1
  %236 = load i32, i32* %235, align 8
  %237 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %230, align 8
  %238 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %237, i64 15
  %239 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %238, align 8
  %240 = tail call i64 %239(%"class.Ice::TargetLowering"* %227, i32 %236) #24
  %241 = icmp eq i64 %234, %240
  br i1 %241, label %242, label %248

242:                                              ; preds = %223
  %243 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %225, i64 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %226, i64 0, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = icmp ult i32 %244, %246
  br i1 %247, label %250, label %255

248:                                              ; preds = %223
  %249 = icmp ugt i64 %234, %240
  br i1 %249, label %250, label %255

250:                                              ; preds = %242, %248
  %251 = bitcast %"class.Ice::Variable"** %224 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = load i64, i64* %11, align 8
  store i64 %253, i64* %251, align 8
  store i64 %252, i64* %11, align 8
  %254 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %224, i64 1
  br label %258

255:                                              ; preds = %242, %248
  %256 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %224, i64 1
  %257 = icmp eq %"class.Ice::Variable"** %256, %9
  br i1 %257, label %506, label %223

258:                                              ; preds = %213, %250, %219
  %259 = phi %"class.Ice::Variable"** [ %195, %219 ], [ %254, %250 ], [ %195, %213 ]
  %260 = icmp eq %"class.Ice::Variable"** %259, %9
  br i1 %260, label %506, label %261

261:                                              ; preds = %258, %325
  %262 = phi %"class.Ice::Variable"** [ %330, %325 ], [ %259, %258 ]
  %263 = phi %"class.Ice::Variable"** [ %297, %325 ], [ %9, %258 ]
  br label %264

264:                                              ; preds = %292, %261
  %265 = phi %"class.Ice::Variable"** [ %262, %261 ], [ %293, %292 ]
  %266 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, align 8
  %267 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %265, align 8
  %268 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %269 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %266, i64 0, i32 0, i32 1
  %270 = load i32, i32* %269, align 8
  %271 = bitcast %"class.Ice::TargetLowering"* %268 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %272 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %271, align 8
  %273 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %272, i64 15
  %274 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %273, align 8
  %275 = tail call i64 %274(%"class.Ice::TargetLowering"* %268, i32 %270) #24
  %276 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %267, i64 0, i32 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %271, align 8
  %279 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %278, i64 15
  %280 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %279, align 8
  %281 = tail call i64 %280(%"class.Ice::TargetLowering"* %268, i32 %277) #24
  %282 = icmp eq i64 %275, %281
  br i1 %282, label %283, label %290

283:                                              ; preds = %264
  %284 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %266, i64 0, i32 1
  %285 = load i32, i32* %284, align 8
  %286 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %267, i64 0, i32 1
  %287 = load i32, i32* %286, align 8
  %288 = icmp ult i32 %285, %287
  br i1 %288, label %289, label %292

289:                                              ; preds = %290, %283
  br label %294

290:                                              ; preds = %264
  %291 = icmp ugt i64 %275, %281
  br i1 %291, label %289, label %292

292:                                              ; preds = %283, %290
  %293 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %265, i64 1
  br label %264

294:                                              ; preds = %322, %289
  %295 = phi %"class.Ice::Variable"** [ %263, %289 ], [ %297, %322 ]
  %296 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, align 8
  %297 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %295, i64 -1
  %298 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %297, align 8
  %299 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %300 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %296, i64 0, i32 0, i32 1
  %301 = load i32, i32* %300, align 8
  %302 = bitcast %"class.Ice::TargetLowering"* %299 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %303 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %302, align 8
  %304 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %303, i64 15
  %305 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %304, align 8
  %306 = tail call i64 %305(%"class.Ice::TargetLowering"* %299, i32 %301) #24
  %307 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %298, i64 0, i32 0, i32 1
  %308 = load i32, i32* %307, align 8
  %309 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %302, align 8
  %310 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %309, i64 15
  %311 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %310, align 8
  %312 = tail call i64 %311(%"class.Ice::TargetLowering"* %299, i32 %308) #24
  %313 = icmp eq i64 %306, %312
  br i1 %313, label %314, label %320

314:                                              ; preds = %294
  %315 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %296, i64 0, i32 1
  %316 = load i32, i32* %315, align 8
  %317 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %298, i64 0, i32 1
  %318 = load i32, i32* %317, align 8
  %319 = icmp ult i32 %316, %318
  br i1 %319, label %322, label %323

320:                                              ; preds = %294
  %321 = icmp ugt i64 %306, %312
  br i1 %321, label %322, label %323

322:                                              ; preds = %320, %314
  br label %294

323:                                              ; preds = %314, %320
  %324 = icmp ult %"class.Ice::Variable"** %265, %297
  br i1 %324, label %325, label %15

325:                                              ; preds = %323
  %326 = bitcast %"class.Ice::Variable"** %265 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = bitcast %"class.Ice::Variable"** %297 to i64*
  %329 = load i64, i64* %328, align 8
  store i64 %329, i64* %326, align 8
  store i64 %327, i64* %328, align 8
  %330 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %265, i64 1
  br label %261

331:                                              ; preds = %192, %358
  %332 = phi %"class.Ice::Variable"** [ %359, %358 ], [ %10, %192 ]
  %333 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %332, align 8
  %334 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %157, align 8
  %335 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %336 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %333, i64 0, i32 0, i32 1
  %337 = load i32, i32* %336, align 8
  %338 = bitcast %"class.Ice::TargetLowering"* %335 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %339 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %338, align 8
  %340 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %339, i64 15
  %341 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %340, align 8
  %342 = tail call i64 %341(%"class.Ice::TargetLowering"* %335, i32 %337) #24
  %343 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %334, i64 0, i32 0, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %338, align 8
  %346 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %345, i64 15
  %347 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %346, align 8
  %348 = tail call i64 %347(%"class.Ice::TargetLowering"* %335, i32 %344) #24
  %349 = icmp eq i64 %342, %348
  br i1 %349, label %350, label %356

350:                                              ; preds = %331
  %351 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %333, i64 0, i32 1
  %352 = load i32, i32* %351, align 8
  %353 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %334, i64 0, i32 1
  %354 = load i32, i32* %353, align 8
  %355 = icmp ult i32 %352, %354
  br i1 %355, label %361, label %358

356:                                              ; preds = %331
  %357 = icmp ugt i64 %342, %348
  br i1 %357, label %361, label %358

358:                                              ; preds = %356, %350
  %359 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %332, i64 -1
  %360 = icmp eq %"class.Ice::Variable"** %16, %359
  br i1 %360, label %194, label %331

361:                                              ; preds = %350, %356
  %362 = bitcast %"class.Ice::Variable"** %16 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.Ice::Variable"** %332 to i64*
  %365 = load i64, i64* %364, align 8
  store i64 %365, i64* %362, align 8
  store i64 %363, i64* %364, align 8
  %366 = add i32 %166, 1
  br label %367

367:                                              ; preds = %184, %190, %361
  %368 = phi i32 [ %366, %361 ], [ %166, %190 ], [ %166, %184 ]
  %369 = phi %"class.Ice::Variable"** [ %332, %361 ], [ %9, %190 ], [ %9, %184 ]
  %370 = ptrtoint %"class.Ice::Variable"** %16 to i64
  %371 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %16, i64 1
  %372 = icmp ult %"class.Ice::Variable"** %371, %369
  br i1 %372, label %373, label %448

373:                                              ; preds = %367, %439
  %374 = phi %"class.Ice::Variable"** [ %446, %439 ], [ %157, %367 ]
  %375 = phi i32 [ %444, %439 ], [ %368, %367 ]
  %376 = phi %"class.Ice::Variable"** [ %447, %439 ], [ %371, %367 ]
  %377 = phi %"class.Ice::Variable"** [ %410, %439 ], [ %369, %367 ]
  br label %378

378:                                              ; preds = %406, %373
  %379 = phi %"class.Ice::Variable"** [ %376, %373 ], [ %407, %406 ]
  %380 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %379, align 8
  %381 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %374, align 8
  %382 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %383 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %380, i64 0, i32 0, i32 1
  %384 = load i32, i32* %383, align 8
  %385 = bitcast %"class.Ice::TargetLowering"* %382 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %386 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %385, align 8
  %387 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %386, i64 15
  %388 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %387, align 8
  %389 = tail call i64 %388(%"class.Ice::TargetLowering"* %382, i32 %384) #24
  %390 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %381, i64 0, i32 0, i32 1
  %391 = load i32, i32* %390, align 8
  %392 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %385, align 8
  %393 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %392, i64 15
  %394 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %393, align 8
  %395 = tail call i64 %394(%"class.Ice::TargetLowering"* %382, i32 %391) #24
  %396 = icmp eq i64 %389, %395
  br i1 %396, label %397, label %404

397:                                              ; preds = %378
  %398 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %380, i64 0, i32 1
  %399 = load i32, i32* %398, align 8
  %400 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %381, i64 0, i32 1
  %401 = load i32, i32* %400, align 8
  %402 = icmp ult i32 %399, %401
  br i1 %402, label %406, label %403

403:                                              ; preds = %404, %397
  br label %408

404:                                              ; preds = %378
  %405 = icmp ugt i64 %389, %395
  br i1 %405, label %406, label %403

406:                                              ; preds = %397, %404
  %407 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %379, i64 1
  br label %378

408:                                              ; preds = %436, %403
  %409 = phi %"class.Ice::Variable"** [ %377, %403 ], [ %410, %436 ]
  %410 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %409, i64 -1
  %411 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %410, align 8
  %412 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %374, align 8
  %413 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %414 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %411, i64 0, i32 0, i32 1
  %415 = load i32, i32* %414, align 8
  %416 = bitcast %"class.Ice::TargetLowering"* %413 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %417 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %416, align 8
  %418 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %417, i64 15
  %419 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %418, align 8
  %420 = tail call i64 %419(%"class.Ice::TargetLowering"* %413, i32 %415) #24
  %421 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %412, i64 0, i32 0, i32 1
  %422 = load i32, i32* %421, align 8
  %423 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %416, align 8
  %424 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %423, i64 15
  %425 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %424, align 8
  %426 = tail call i64 %425(%"class.Ice::TargetLowering"* %413, i32 %422) #24
  %427 = icmp eq i64 %420, %426
  br i1 %427, label %428, label %434

428:                                              ; preds = %408
  %429 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %411, i64 0, i32 1
  %430 = load i32, i32* %429, align 8
  %431 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %412, i64 0, i32 1
  %432 = load i32, i32* %431, align 8
  %433 = icmp ult i32 %430, %432
  br i1 %433, label %437, label %436

434:                                              ; preds = %408
  %435 = icmp ugt i64 %420, %426
  br i1 %435, label %437, label %436

436:                                              ; preds = %434, %428
  br label %408

437:                                              ; preds = %428, %434
  %438 = icmp ugt %"class.Ice::Variable"** %379, %410
  br i1 %438, label %448, label %439

439:                                              ; preds = %437
  %440 = bitcast %"class.Ice::Variable"** %379 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast %"class.Ice::Variable"** %410 to i64*
  %443 = load i64, i64* %442, align 8
  store i64 %443, i64* %440, align 8
  store i64 %441, i64* %442, align 8
  %444 = add i32 %375, 1
  %445 = icmp eq %"class.Ice::Variable"** %374, %379
  %446 = select i1 %445, %"class.Ice::Variable"** %410, %"class.Ice::Variable"** %374
  %447 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %379, i64 1
  br label %373

448:                                              ; preds = %437, %367
  %449 = phi %"class.Ice::Variable"** [ %157, %367 ], [ %374, %437 ]
  %450 = phi i32 [ %368, %367 ], [ %375, %437 ]
  %451 = phi %"class.Ice::Variable"** [ %371, %367 ], [ %379, %437 ]
  %452 = icmp eq %"class.Ice::Variable"** %451, %449
  br i1 %452, label %485, label %453

453:                                              ; preds = %448
  %454 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %449, align 8
  %455 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %451, align 8
  %456 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %457 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %454, i64 0, i32 0, i32 1
  %458 = load i32, i32* %457, align 8
  %459 = bitcast %"class.Ice::TargetLowering"* %456 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %460 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %459, align 8
  %461 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %460, i64 15
  %462 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %461, align 8
  %463 = tail call i64 %462(%"class.Ice::TargetLowering"* %456, i32 %458) #24
  %464 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %455, i64 0, i32 0, i32 1
  %465 = load i32, i32* %464, align 8
  %466 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %459, align 8
  %467 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %466, i64 15
  %468 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %467, align 8
  %469 = tail call i64 %468(%"class.Ice::TargetLowering"* %456, i32 %465) #24
  %470 = icmp eq i64 %463, %469
  br i1 %470, label %471, label %477

471:                                              ; preds = %453
  %472 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %454, i64 0, i32 1
  %473 = load i32, i32* %472, align 8
  %474 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %455, i64 0, i32 1
  %475 = load i32, i32* %474, align 8
  %476 = icmp ult i32 %473, %475
  br i1 %476, label %479, label %485

477:                                              ; preds = %453
  %478 = icmp ugt i64 %463, %469
  br i1 %478, label %479, label %485

479:                                              ; preds = %471, %477
  %480 = bitcast %"class.Ice::Variable"** %451 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = bitcast %"class.Ice::Variable"** %449 to i64*
  %483 = load i64, i64* %482, align 8
  store i64 %483, i64* %480, align 8
  store i64 %481, i64* %482, align 8
  %484 = add i32 %450, 1
  br label %485

485:                                              ; preds = %471, %448, %479, %477
  %486 = phi i32 [ %484, %479 ], [ %450, %477 ], [ %450, %448 ], [ %450, %471 ]
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %495

488:                                              ; preds = %485
  %489 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEbT0_SG_T_"(%"class.Ice::Variable"** %16, %"class.Ice::Variable"** %451, %class.anon.472* dereferenceable(8) %2) #22
  %490 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %451, i64 1
  %491 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEbT0_SG_T_"(%"class.Ice::Variable"** %490, %"class.Ice::Variable"** %6, %class.anon.472* dereferenceable(8) %2) #22
  br i1 %491, label %492, label %494

492:                                              ; preds = %488
  br i1 %489, label %506, label %493

493:                                              ; preds = %492, %504
  br label %5

494:                                              ; preds = %488
  br i1 %489, label %502, label %495

495:                                              ; preds = %494, %485
  %496 = ptrtoint %"class.Ice::Variable"** %451 to i64
  %497 = sub i64 %496, %370
  %498 = sub i64 %12, %496
  %499 = icmp slt i64 %497, %498
  br i1 %499, label %500, label %504

500:                                              ; preds = %495
  tail call fastcc void @"_ZNSt3__16__sortIRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEvT0_SG_T_"(%"class.Ice::Variable"** %16, %"class.Ice::Variable"** %451, %class.anon.472* dereferenceable(8) %2) #22
  %501 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %451, i64 1
  br label %502

502:                                              ; preds = %500, %494
  %503 = phi %"class.Ice::Variable"** [ %490, %494 ], [ %501, %500 ]
  br label %13

504:                                              ; preds = %495
  %505 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %451, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEvT0_SG_T_"(%"class.Ice::Variable"** %505, %"class.Ice::Variable"** %6, %class.anon.472* dereferenceable(8) %2) #22
  br label %493

506:                                              ; preds = %492, %258, %15, %15, %221, %255, %151, %69, %39, %45, %47, %52, %56, %61
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_T_"(%"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %class.anon.472* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %5 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %6 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, align 8
  %7 = getelementptr inbounds %class.anon.472, %class.anon.472* %3, i64 0, i32 0
  %8 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %7, align 8
  %9 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %5, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.Ice::TargetLowering"* %8 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %12 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %12, i64 15
  %14 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %13, align 8
  %15 = tail call i64 %14(%"class.Ice::TargetLowering"* %8, i32 %10) #24
  %16 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %6, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %11, align 8
  %19 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %18, i64 15
  %20 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %19, align 8
  %21 = tail call i64 %20(%"class.Ice::TargetLowering"* %8, i32 %17) #24
  %22 = icmp eq i64 %15, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %5, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %6, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %25, %27
  br label %31

29:                                               ; preds = %4
  %30 = icmp ugt i64 %15, %21
  br label %31

31:                                               ; preds = %23, %29
  %32 = phi i1 [ %28, %23 ], [ %30, %29 ]
  %33 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  %34 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %35 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %7, align 8
  %36 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %33, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = bitcast %"class.Ice::TargetLowering"* %35 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %39 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %39, i64 15
  %41 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %40, align 8
  %42 = tail call i64 %41(%"class.Ice::TargetLowering"* %35, i32 %37) #24
  %43 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %34, i64 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %38, align 8
  %46 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %45, i64 15
  %47 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %46, align 8
  %48 = tail call i64 %47(%"class.Ice::TargetLowering"* %35, i32 %44) #24
  %49 = icmp eq i64 %42, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %33, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %34, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp ult i32 %52, %54
  br label %58

56:                                               ; preds = %31
  %57 = icmp ugt i64 %42, %48
  br label %58

58:                                               ; preds = %50, %56
  %59 = phi i1 [ %55, %50 ], [ %57, %56 ]
  br i1 %32, label %95, label %60

60:                                               ; preds = %58
  br i1 %59, label %61, label %133

61:                                               ; preds = %60
  %62 = bitcast %"class.Ice::Variable"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.Ice::Variable"** %2 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %62, align 8
  store i64 %63, i64* %64, align 8
  %66 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %67 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, align 8
  %68 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %7, align 8
  %69 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %66, i64 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"class.Ice::TargetLowering"* %68 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %72 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %72, i64 15
  %74 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %73, align 8
  %75 = tail call i64 %74(%"class.Ice::TargetLowering"* %68, i32 %70) #24
  %76 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %67, i64 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %71, align 8
  %79 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %78, i64 15
  %80 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %79, align 8
  %81 = tail call i64 %80(%"class.Ice::TargetLowering"* %68, i32 %77) #24
  %82 = icmp eq i64 %75, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %61
  %84 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %66, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %67, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp ult i32 %85, %87
  br i1 %88, label %91, label %133

89:                                               ; preds = %61
  %90 = icmp ugt i64 %75, %81
  br i1 %90, label %91, label %133

91:                                               ; preds = %83, %89
  %92 = bitcast %"class.Ice::Variable"** %0 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* %62, align 8
  store i64 %94, i64* %92, align 8
  store i64 %93, i64* %62, align 8
  br label %133

95:                                               ; preds = %58
  %96 = bitcast %"class.Ice::Variable"** %0 to i64*
  %97 = load i64, i64* %96, align 8
  br i1 %59, label %98, label %101

98:                                               ; preds = %95
  %99 = bitcast %"class.Ice::Variable"** %2 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %96, align 8
  store i64 %97, i64* %99, align 8
  br label %133

101:                                              ; preds = %95
  %102 = bitcast %"class.Ice::Variable"** %1 to i64*
  %103 = load i64, i64* %102, align 8
  store i64 %103, i64* %96, align 8
  store i64 %97, i64* %102, align 8
  %104 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  %105 = inttoptr i64 %97 to %"class.Ice::Variable"*
  %106 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %7, align 8
  %107 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %104, i64 0, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = bitcast %"class.Ice::TargetLowering"* %106 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %110 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %109, align 8
  %111 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %110, i64 15
  %112 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %111, align 8
  %113 = tail call i64 %112(%"class.Ice::TargetLowering"* %106, i32 %108) #24
  %114 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %105, i64 0, i32 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %109, align 8
  %117 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %116, i64 15
  %118 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %117, align 8
  %119 = tail call i64 %118(%"class.Ice::TargetLowering"* %106, i32 %115) #24
  %120 = icmp eq i64 %113, %119
  br i1 %120, label %121, label %127

121:                                              ; preds = %101
  %122 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %104, i64 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %105, i64 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp ult i32 %123, %125
  br i1 %126, label %129, label %133

127:                                              ; preds = %101
  %128 = icmp ugt i64 %113, %119
  br i1 %128, label %129, label %133

129:                                              ; preds = %121, %127
  %130 = load i64, i64* %102, align 8
  %131 = bitcast %"class.Ice::Variable"** %2 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %102, align 8
  store i64 %130, i64* %131, align 8
  br label %133

133:                                              ; preds = %121, %83, %127, %129, %89, %91, %60, %98
  %134 = phi i32 [ 1, %98 ], [ 0, %60 ], [ 2, %91 ], [ 1, %89 ], [ 2, %129 ], [ 1, %127 ], [ 1, %83 ], [ 1, %121 ]
  ret i32 %134
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_SG_T_"(%"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %class.anon.472* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %1, %"class.Ice::Variable"** %2, %class.anon.472* dereferenceable(8) %4) #22
  %7 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %8 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  %9 = getelementptr inbounds %class.anon.472, %class.anon.472* %4, i64 0, i32 0
  %10 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %9, align 8
  %11 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %7, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.Ice::TargetLowering"* %10 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %14 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %14, i64 15
  %16 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %15, align 8
  %17 = tail call i64 %16(%"class.Ice::TargetLowering"* %10, i32 %12) #24
  %18 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %8, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %13, align 8
  %21 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %20, i64 15
  %22 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %21, align 8
  %23 = tail call i64 %22(%"class.Ice::TargetLowering"* %10, i32 %19) #24
  %24 = icmp eq i64 %17, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %7, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %8, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %33, label %99

31:                                               ; preds = %5
  %32 = icmp ugt i64 %17, %23
  br i1 %32, label %33, label %99

33:                                               ; preds = %25, %31
  %34 = bitcast %"class.Ice::Variable"** %2 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.Ice::Variable"** %3 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %34, align 8
  store i64 %35, i64* %36, align 8
  %38 = add i32 %6, 1
  %39 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  %40 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %41 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %9, align 8
  %42 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %39, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = bitcast %"class.Ice::TargetLowering"* %41 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %45 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %45, i64 15
  %47 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %46, align 8
  %48 = tail call i64 %47(%"class.Ice::TargetLowering"* %41, i32 %43) #24
  %49 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %40, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %44, align 8
  %52 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %51, i64 15
  %53 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %52, align 8
  %54 = tail call i64 %53(%"class.Ice::TargetLowering"* %41, i32 %50) #24
  %55 = icmp eq i64 %48, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %39, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %40, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp ult i32 %58, %60
  br i1 %61, label %64, label %99

62:                                               ; preds = %33
  %63 = icmp ugt i64 %48, %54
  br i1 %63, label %64, label %99

64:                                               ; preds = %56, %62
  %65 = bitcast %"class.Ice::Variable"** %1 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = load i64, i64* %34, align 8
  store i64 %67, i64* %65, align 8
  store i64 %66, i64* %34, align 8
  %68 = add i32 %6, 2
  %69 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %70 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, align 8
  %71 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %9, align 8
  %72 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %69, i64 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = bitcast %"class.Ice::TargetLowering"* %71 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %75 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %75, i64 15
  %77 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %76, align 8
  %78 = tail call i64 %77(%"class.Ice::TargetLowering"* %71, i32 %73) #24
  %79 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %70, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %74, align 8
  %82 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %81, i64 15
  %83 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %82, align 8
  %84 = tail call i64 %83(%"class.Ice::TargetLowering"* %71, i32 %80) #24
  %85 = icmp eq i64 %78, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %64
  %87 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %69, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %70, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = icmp ult i32 %88, %90
  br i1 %91, label %94, label %99

92:                                               ; preds = %64
  %93 = icmp ugt i64 %78, %84
  br i1 %93, label %94, label %99

94:                                               ; preds = %86, %92
  %95 = bitcast %"class.Ice::Variable"** %0 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load i64, i64* %65, align 8
  store i64 %97, i64* %95, align 8
  store i64 %96, i64* %65, align 8
  %98 = add i32 %6, 3
  br label %99

99:                                               ; preds = %86, %56, %25, %62, %94, %92, %31
  %100 = phi i32 [ %98, %94 ], [ %68, %92 ], [ %38, %62 ], [ %6, %31 ], [ %6, %25 ], [ %38, %56 ], [ %68, %86 ]
  ret i32 %100
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_SG_SG_T_"(%"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %"class.Ice::Variable"** nocapture, %class.anon.472* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %7 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_SG_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %1, %"class.Ice::Variable"** %2, %"class.Ice::Variable"** %3, %class.anon.472* dereferenceable(8) %5) #22
  %8 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %4, align 8
  %9 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %10 = getelementptr inbounds %class.anon.472, %class.anon.472* %5, i64 0, i32 0
  %11 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %10, align 8
  %12 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %8, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.Ice::TargetLowering"* %11 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %15 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %15, i64 15
  %17 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %16, align 8
  %18 = tail call i64 %17(%"class.Ice::TargetLowering"* %11, i32 %13) #24
  %19 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %9, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %14, align 8
  %22 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %21, i64 15
  %23 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %22, align 8
  %24 = tail call i64 %23(%"class.Ice::TargetLowering"* %11, i32 %20) #24
  %25 = icmp eq i64 %18, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %8, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %9, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp ult i32 %28, %30
  br i1 %31, label %34, label %130

32:                                               ; preds = %6
  %33 = icmp ugt i64 %18, %24
  br i1 %33, label %34, label %130

34:                                               ; preds = %26, %32
  %35 = bitcast %"class.Ice::Variable"** %3 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.Ice::Variable"** %4 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %35, align 8
  store i64 %36, i64* %37, align 8
  %39 = add i32 %7, 1
  %40 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %3, align 8
  %41 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  %42 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %10, align 8
  %43 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %40, i64 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = bitcast %"class.Ice::TargetLowering"* %42 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %46 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %46, i64 15
  %48 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %47, align 8
  %49 = tail call i64 %48(%"class.Ice::TargetLowering"* %42, i32 %44) #24
  %50 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %41, i64 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %45, align 8
  %53 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %52, i64 15
  %54 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %53, align 8
  %55 = tail call i64 %54(%"class.Ice::TargetLowering"* %42, i32 %51) #24
  %56 = icmp eq i64 %49, %55
  br i1 %56, label %57, label %63

57:                                               ; preds = %34
  %58 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %40, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %41, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp ult i32 %59, %61
  br i1 %62, label %65, label %130

63:                                               ; preds = %34
  %64 = icmp ugt i64 %49, %55
  br i1 %64, label %65, label %130

65:                                               ; preds = %57, %63
  %66 = bitcast %"class.Ice::Variable"** %2 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = load i64, i64* %35, align 8
  store i64 %68, i64* %66, align 8
  store i64 %67, i64* %35, align 8
  %69 = add i32 %7, 2
  %70 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  %71 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %72 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %10, align 8
  %73 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %70, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = bitcast %"class.Ice::TargetLowering"* %72 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %76 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %75, align 8
  %77 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %76, i64 15
  %78 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %77, align 8
  %79 = tail call i64 %78(%"class.Ice::TargetLowering"* %72, i32 %74) #24
  %80 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %71, i64 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %75, align 8
  %83 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %82, i64 15
  %84 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %83, align 8
  %85 = tail call i64 %84(%"class.Ice::TargetLowering"* %72, i32 %81) #24
  %86 = icmp eq i64 %79, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %65
  %88 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %70, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %71, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp ult i32 %89, %91
  br i1 %92, label %95, label %130

93:                                               ; preds = %65
  %94 = icmp ugt i64 %79, %85
  br i1 %94, label %95, label %130

95:                                               ; preds = %87, %93
  %96 = bitcast %"class.Ice::Variable"** %1 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = load i64, i64* %66, align 8
  store i64 %98, i64* %96, align 8
  store i64 %97, i64* %66, align 8
  %99 = add i32 %7, 3
  %100 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %101 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, align 8
  %102 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %10, align 8
  %103 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %100, i64 0, i32 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = bitcast %"class.Ice::TargetLowering"* %102 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %106 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %105, align 8
  %107 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %106, i64 15
  %108 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %107, align 8
  %109 = tail call i64 %108(%"class.Ice::TargetLowering"* %102, i32 %104) #24
  %110 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %101, i64 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %105, align 8
  %113 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %112, i64 15
  %114 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %113, align 8
  %115 = tail call i64 %114(%"class.Ice::TargetLowering"* %102, i32 %111) #24
  %116 = icmp eq i64 %109, %115
  br i1 %116, label %117, label %123

117:                                              ; preds = %95
  %118 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %100, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %101, i64 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = icmp ult i32 %119, %121
  br i1 %122, label %125, label %130

123:                                              ; preds = %95
  %124 = icmp ugt i64 %109, %115
  br i1 %124, label %125, label %130

125:                                              ; preds = %117, %123
  %126 = bitcast %"class.Ice::Variable"** %0 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = load i64, i64* %96, align 8
  store i64 %128, i64* %126, align 8
  store i64 %127, i64* %96, align 8
  %129 = add i32 %7, 4
  br label %130

130:                                              ; preds = %117, %87, %57, %26, %63, %123, %125, %93, %32
  %131 = phi i32 [ %129, %125 ], [ %99, %123 ], [ %69, %93 ], [ %39, %63 ], [ %7, %32 ], [ %7, %26 ], [ %39, %57 ], [ %69, %87 ], [ %99, %117 ]
  ret i32 %131
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEbT0_SG_T_"(%"class.Ice::Variable"**, %"class.Ice::Variable"**, %class.anon.472* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = ptrtoint %"class.Ice::Variable"** %1 to i64
  %5 = ptrtoint %"class.Ice::Variable"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %56 [
    i64 0, label %145
    i64 1, label %145
    i64 2, label %8
    i64 3, label %41
    i64 4, label %45
    i64 5, label %50
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %10 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %9, align 8
  %11 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, align 8
  %12 = getelementptr inbounds %class.anon.472, %class.anon.472* %2, i64 0, i32 0
  %13 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %12, align 8
  %14 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %10, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"class.Ice::TargetLowering"* %13 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %17 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %17, i64 15
  %19 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %18, align 8
  %20 = tail call i64 %19(%"class.Ice::TargetLowering"* %13, i32 %15) #24
  %21 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %11, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %16, align 8
  %24 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %23, i64 15
  %25 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %24, align 8
  %26 = tail call i64 %25(%"class.Ice::TargetLowering"* %13, i32 %22) #24
  %27 = icmp eq i64 %20, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %10, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %11, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  br i1 %33, label %36, label %145

34:                                               ; preds = %8
  %35 = icmp ugt i64 %20, %26
  br i1 %35, label %36, label %145

36:                                               ; preds = %28, %34
  %37 = bitcast %"class.Ice::Variable"** %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.Ice::Variable"** %9 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  br label %145

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 1
  %43 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %44 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %42, %"class.Ice::Variable"** %43, %class.anon.472* dereferenceable(8) %2) #22
  br label %145

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 1
  %47 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 2
  %48 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %49 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_SG_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %46, %"class.Ice::Variable"** %47, %"class.Ice::Variable"** %48, %class.anon.472* dereferenceable(8) %2) #22
  br label %145

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 1
  %52 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 2
  %53 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 3
  %54 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, i64 -1
  %55 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_SG_SG_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %51, %"class.Ice::Variable"** %52, %"class.Ice::Variable"** %53, %"class.Ice::Variable"** %54, %class.anon.472* dereferenceable(8) %2) #22
  br label %145

56:                                               ; preds = %3
  %57 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 2
  %58 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 1
  %59 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK3Ice14TargetLowering19sortVarsByAlignmentERNS_6vectorIPNS1_8VariableENS1_12sz_allocatorIS5_NS1_18CfgAllocatorTraitsEEEEERKS9_E3$_1PS5_EEjT0_SG_SG_T_"(%"class.Ice::Variable"** %0, %"class.Ice::Variable"** %58, %"class.Ice::Variable"** %57, %class.anon.472* dereferenceable(8) %2) #22
  %60 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %0, i64 3
  %61 = icmp eq %"class.Ice::Variable"** %60, %1
  br i1 %61, label %145, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %class.anon.472, %class.anon.472* %2, i64 0, i32 0
  %64 = bitcast %"class.Ice::Variable"** %0 to i64*
  br label %65

65:                                               ; preds = %62, %138
  %66 = phi %"class.Ice::Variable"** [ %60, %62 ], [ %140, %138 ]
  %67 = phi i32 [ 0, %62 ], [ %139, %138 ]
  %68 = phi %"class.Ice::Variable"** [ %57, %62 ], [ %66, %138 ]
  %69 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %66, align 8
  %70 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %68, align 8
  %71 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %63, align 8
  %72 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %69, i64 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = bitcast %"class.Ice::TargetLowering"* %71 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %75 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %75, i64 15
  %77 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %76, align 8
  %78 = tail call i64 %77(%"class.Ice::TargetLowering"* %71, i32 %73) #24
  %79 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %70, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %74, align 8
  %82 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %81, i64 15
  %83 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %82, align 8
  %84 = tail call i64 %83(%"class.Ice::TargetLowering"* %71, i32 %80) #24
  %85 = icmp eq i64 %78, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %65
  %87 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %69, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %70, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = icmp ult i32 %88, %90
  br i1 %91, label %94, label %138

92:                                               ; preds = %65
  %93 = icmp ugt i64 %78, %84
  br i1 %93, label %94, label %138

94:                                               ; preds = %86, %92
  %95 = bitcast %"class.Ice::Variable"** %66 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %96 to %"class.Ice::Variable"*
  %98 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %97, i64 0, i32 1
  %99 = bitcast %"class.Ice::Variable"** %68 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %95, align 8
  %101 = icmp eq %"class.Ice::Variable"** %68, %0
  br i1 %101, label %134, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %97, i64 0, i32 0, i32 1
  br label %104

104:                                              ; preds = %102, %130
  %105 = phi %"class.Ice::Variable"** [ %68, %102 ], [ %107, %130 ]
  %106 = phi i64* [ %99, %102 ], [ %131, %130 ]
  %107 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %105, i64 -1
  %108 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %107, align 8
  %109 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %63, align 8
  %110 = load i32, i32* %103, align 8
  %111 = bitcast %"class.Ice::TargetLowering"* %109 to i64 (%"class.Ice::TargetLowering"*, i32)***
  %112 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %111, align 8
  %113 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %112, i64 15
  %114 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %113, align 8
  %115 = tail call i64 %114(%"class.Ice::TargetLowering"* %109, i32 %110) #24
  %116 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %108, i64 0, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = load i64 (%"class.Ice::TargetLowering"*, i32)**, i64 (%"class.Ice::TargetLowering"*, i32)*** %111, align 8
  %119 = getelementptr inbounds i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %118, i64 15
  %120 = load i64 (%"class.Ice::TargetLowering"*, i32)*, i64 (%"class.Ice::TargetLowering"*, i32)** %119, align 8
  %121 = tail call i64 %120(%"class.Ice::TargetLowering"* %109, i32 %117) #24
  %122 = icmp eq i64 %115, %121
  br i1 %122, label %123, label %128

123:                                              ; preds = %104
  %124 = load i32, i32* %98, align 8
  %125 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %108, i64 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = icmp ult i32 %124, %126
  br i1 %127, label %130, label %134

128:                                              ; preds = %104
  %129 = icmp ugt i64 %115, %121
  br i1 %129, label %130, label %134

130:                                              ; preds = %128, %123
  %131 = bitcast %"class.Ice::Variable"** %107 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %106, align 8
  %133 = icmp eq %"class.Ice::Variable"** %107, %0
  br i1 %133, label %134, label %104

134:                                              ; preds = %128, %123, %130, %94
  %135 = phi i64* [ %99, %94 ], [ %64, %130 ], [ %106, %123 ], [ %106, %128 ]
  store i64 %96, i64* %135, align 8
  %136 = add i32 %67, 1
  %137 = icmp eq i32 %136, 8
  br i1 %137, label %142, label %138

138:                                              ; preds = %134, %86, %92
  %139 = phi i32 [ %136, %134 ], [ %67, %92 ], [ %67, %86 ]
  %140 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %66, i64 1
  %141 = icmp eq %"class.Ice::Variable"** %140, %1
  br i1 %141, label %145, label %65

142:                                              ; preds = %134
  %143 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %66, i64 1
  %144 = icmp eq %"class.Ice::Variable"** %143, %1
  br label %145

145:                                              ; preds = %138, %142, %56, %28, %34, %36, %3, %3, %50, %45, %41
  %146 = phi i1 [ true, %50 ], [ true, %45 ], [ true, %41 ], [ true, %3 ], [ true, %3 ], [ true, %36 ], [ true, %34 ], [ true, %28 ], [ true, %56 ], [ %144, %142 ], [ true, %138 ]
  ret i1 %146
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImN3Ice12sz_allocatorImNS1_18CfgAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.481"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.481"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #26
  unreachable

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %8 = shl i64 %1, 3
  %9 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %7, i64 %8, i64 8) #24
  %10 = bitcast i8* %9 to i64*
  %11 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %0, i64 0, i32 0, i32 1
  %12 = bitcast i64** %11 to i8**
  store i8* %9, i8** %12, align 8
  %13 = bitcast %"class.std::__1::vector.481"* %0 to i8**
  store i8* %9, i8** %13, align 8
  %14 = getelementptr inbounds i64, i64* %10, i64 %1
  %15 = getelementptr inbounds %"class.std::__1::vector.481", %"class.std::__1::vector.481"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64* %14, i64** %15, align 8
  ret void
}

; Function Attrs: optsize
declare i32 @_ZN3Ice15typeElementTypeENS_4TypeE(i32) local_unnamed_addr #8

; Function Attrs: optsize
declare i64 @_ZN3Ice15typeNumElementsENS_4TypeE(i32) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice15VariableVecOn3214initVecElementEPNS_3CfgE(%"class.Ice::VariableVecOn32"*, %"class.Ice::Cfg"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::VariableVecOn32", %"class.Ice::VariableVecOn32"* %0, i64 0, i32 0, i32 3
  %4 = getelementptr inbounds %"class.Ice::VariableVecOn32", %"class.Ice::VariableVecOn32"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.Ice::VariableVecOn32", %"class.Ice::VariableVecOn32"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = getelementptr inbounds %"class.Ice::VariableVecOn32", %"class.Ice::VariableVecOn32"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.Ice::Variable"*** %5 to i64*
  %8 = bitcast %"class.std::__1::vector.207"* %4 to i64*
  %9 = bitcast %"class.Ice::Variable"*** %6 to i64*
  %10 = getelementptr inbounds %"class.std::__1::vector.207", %"class.std::__1::vector.207"* %4, i64 0, i32 0, i32 0
  br label %12

11:                                               ; preds = %78
  ret void

12:                                               ; preds = %78, %2
  %13 = phi i32 [ 0, %2 ], [ %79, %78 ]
  %14 = tail call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %1, i32 4) #24
  %15 = ptrtoint %"class.Ice::Variable"* %14 to i64
  %16 = load i8, i8* %3, align 8, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = bitcast %"class.Ice::Variable"* %14 to void (%"class.Ice::Variable"*, i1)***
  %19 = load void (%"class.Ice::Variable"*, i1)**, void (%"class.Ice::Variable"*, i1)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.Ice::Variable"*, i1)*, void (%"class.Ice::Variable"*, i1)** %19, i64 7
  %21 = load void (%"class.Ice::Variable"*, i1)*, void (%"class.Ice::Variable"*, i1)** %20, align 8
  tail call void %21(%"class.Ice::Variable"* %14, i1 zeroext %17) #24
  %22 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %5, align 8
  %23 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %6, align 8
  %24 = icmp eq %"class.Ice::Variable"** %22, %23
  %25 = ptrtoint %"class.Ice::Variable"** %23 to i64
  br i1 %24, label %30, label %26

26:                                               ; preds = %12
  %27 = bitcast %"class.Ice::Variable"** %22 to i64*
  store i64 %15, i64* %27, align 8
  %28 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %22, i64 1
  %29 = ptrtoint %"class.Ice::Variable"** %28 to i64
  store i64 %29, i64* %7, align 8
  br label %78

30:                                               ; preds = %12
  %31 = ptrtoint %"class.Ice::Variable"** %22 to i64
  %32 = load i64, i64* %8, align 8
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 2305843009213693951
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.207"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #26
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %25, %32
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %41, 1152921504606846975
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = ashr exact i64 %40, 2
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %43, %39
  %49 = phi i64 [ %46, %43 ], [ 2305843009213693951, %39 ]
  %50 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #24
  %51 = shl i64 %49, 3
  %52 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %50, i64 %51, i64 8) #24
  %53 = bitcast i8* %52 to %"class.Ice::Variable"**
  br label %54

54:                                               ; preds = %48, %43
  %55 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %56 = phi %"class.Ice::Variable"** [ %53, %48 ], [ null, %43 ]
  %57 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %56, i64 %34
  %58 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %56, i64 %55
  %59 = ptrtoint %"class.Ice::Variable"** %58 to i64
  %60 = bitcast %"class.Ice::Variable"** %57 to i64*
  store i64 %15, i64* %60, align 8
  %61 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %57, i64 1
  %62 = ptrtoint %"class.Ice::Variable"** %61 to i64
  %63 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %10, align 8
  %64 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %5, align 8
  %65 = icmp eq %"class.Ice::Variable"** %64, %63
  br i1 %65, label %75, label %66

66:                                               ; preds = %54, %66
  %67 = phi %"class.Ice::Variable"** [ %69, %66 ], [ %57, %54 ]
  %68 = phi %"class.Ice::Variable"** [ %70, %66 ], [ %64, %54 ]
  %69 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %67, i64 -1
  %70 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %68, i64 -1
  %71 = bitcast %"class.Ice::Variable"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.Ice::Variable"** %69 to i64*
  store i64 %72, i64* %73, align 8
  %74 = icmp eq %"class.Ice::Variable"** %70, %63
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %54
  %76 = phi %"class.Ice::Variable"** [ %57, %54 ], [ %69, %66 ]
  %77 = ptrtoint %"class.Ice::Variable"** %76 to i64
  store i64 %77, i64* %8, align 8
  store i64 %62, i64* %7, align 8
  store i64 %59, i64* %9, align 8
  br label %78

78:                                               ; preds = %26, %75
  %79 = add nuw nsw i32 %13, 1
  %80 = icmp eq i32 %79, 4
  br i1 %80, label %11, label %12
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstAssign"* @_ZN3Ice15LoweringContext6insertINS_10InstAssignEJRPNS_8VariableERPNS_13ConstantUndefEEEEPT_DpOT0_(%"class.Ice::LoweringContext"*, %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::ConstantUndef"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %5 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %5, i64 0, i32 0
  %7 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %6, align 8
  %8 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %9 = bitcast %"class.Ice::ConstantUndef"** %2 to %"class.Ice::Operand"**
  %10 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %9, align 8
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %11, align 8
  %13 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %12, i64 104, i64 8) #24
  %14 = bitcast i8* %13 to %"class.Ice::InstAssign"*
  tail call void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %14, %"class.Ice::Cfg"* %7, %"class.Ice::Variable"* %8, %"class.Ice::Operand"* %10) #24
  %15 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %16 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %15, align 8
  %17 = icmp eq i8* %13, null
  %18 = getelementptr inbounds i8, i8* %13, i64 8
  %19 = bitcast i8* %18 to %"class.llvm::ilist_node_impl"*
  %20 = select i1 %17, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %19
  %21 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %16, i64 0, i32 0
  %22 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %20, i64 0, i32 0
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %16, i64 0, i32 0, i32 0
  %24 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %20, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %21, %"class.llvm::ilist_node_base"** %25, align 8
  %26 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %20, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %24, %"class.llvm::ilist_node_base"** %26, align 8
  %27 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %24, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %22, %"class.llvm::ilist_node_base"** %27, align 8
  store %"class.llvm::ilist_node_base"* %22, %"class.llvm::ilist_node_base"** %23, align 8
  %28 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %29 = bitcast %"class.Ice::Inst"** %28 to i8**
  store i8* %13, i8** %29, align 8
  ret %"class.Ice::InstAssign"* %14
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Constant"* @_ZN3Ice13GlobalContext16getConstantInt32Ei(%"class.Ice::GlobalContext"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call %"class.Ice::Constant"* @_ZN3Ice13GlobalContext15getConstantZeroENS_4TypeE(%"class.Ice::GlobalContext"* %0, i32 4) #24
  br label %8

6:                                                ; preds = %2
  %7 = tail call %"class.Ice::Constant"* @_ZN3Ice13GlobalContext24getConstantInt32InternalEi(%"class.Ice::GlobalContext"* %0, i32 %1) #24
  br label %8

8:                                                ; preds = %6, %4
  %9 = phi %"class.Ice::Constant"* [ %5, %4 ], [ %7, %6 ]
  ret %"class.Ice::Constant"* %9
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstInsertElement"* @_ZN3Ice15LoweringContext6insertINS_17InstInsertElementEJRPNS_8VariableES5_S5_RPNS_8ConstantEEEEPT_DpOT0_(%"class.Ice::LoweringContext"*, %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::Constant"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %7 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %6, align 8
  %8 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 0
  %9 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %8, align 8
  %10 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %11 = bitcast %"class.Ice::Variable"** %2 to %"class.Ice::Operand"**
  %12 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %11, align 8
  %13 = bitcast %"class.Ice::Variable"** %3 to %"class.Ice::Operand"**
  %14 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %13, align 8
  %15 = bitcast %"class.Ice::Constant"** %4 to %"class.Ice::Operand"**
  %16 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %15, align 8
  %17 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %17, align 8
  %19 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %18, i64 104, i64 8) #24
  %20 = bitcast i8* %19 to %"class.Ice::InstInsertElement"*
  tail call void @_ZN3Ice17InstInsertElementC1EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_S6_(%"class.Ice::InstInsertElement"* %20, %"class.Ice::Cfg"* %9, %"class.Ice::Variable"* %10, %"class.Ice::Operand"* %12, %"class.Ice::Operand"* %14, %"class.Ice::Operand"* %16) #24
  %21 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %22 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %21, align 8
  %23 = icmp eq i8* %19, null
  %24 = getelementptr inbounds i8, i8* %19, i64 8
  %25 = bitcast i8* %24 to %"class.llvm::ilist_node_impl"*
  %26 = select i1 %23, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %25
  %27 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %22, i64 0, i32 0
  %28 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %26, i64 0, i32 0
  %29 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %22, i64 0, i32 0, i32 0
  %30 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %29, align 8
  %31 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %26, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %27, %"class.llvm::ilist_node_base"** %31, align 8
  %32 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %26, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %30, %"class.llvm::ilist_node_base"** %32, align 8
  %33 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %30, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %28, %"class.llvm::ilist_node_base"** %33, align 8
  store %"class.llvm::ilist_node_base"* %28, %"class.llvm::ilist_node_base"** %29, align 8
  %34 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %35 = bitcast %"class.Ice::Inst"** %34 to i8**
  store i8* %19, i8** %35, align 8
  ret %"class.Ice::InstInsertElement"* %20
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstAssign"* @_ZN3Ice15LoweringContext6insertINS_10InstAssignEJRPNS_8VariableES5_EEEPT_DpOT0_(%"class.Ice::LoweringContext"*, %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::Variable"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %5 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %5, i64 0, i32 0
  %7 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %6, align 8
  %8 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %9 = bitcast %"class.Ice::Variable"** %2 to %"class.Ice::Operand"**
  %10 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %9, align 8
  %11 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %11, align 8
  %13 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %12, i64 104, i64 8) #24
  %14 = bitcast i8* %13 to %"class.Ice::InstAssign"*
  tail call void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %14, %"class.Ice::Cfg"* %7, %"class.Ice::Variable"* %8, %"class.Ice::Operand"* %10) #24
  %15 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %16 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %15, align 8
  %17 = icmp eq i8* %13, null
  %18 = getelementptr inbounds i8, i8* %13, i64 8
  %19 = bitcast i8* %18 to %"class.llvm::ilist_node_impl"*
  %20 = select i1 %17, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %19
  %21 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %16, i64 0, i32 0
  %22 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %20, i64 0, i32 0
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %16, i64 0, i32 0, i32 0
  %24 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %20, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %21, %"class.llvm::ilist_node_base"** %25, align 8
  %26 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %20, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %24, %"class.llvm::ilist_node_base"** %26, align 8
  %27 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %24, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %22, %"class.llvm::ilist_node_base"** %27, align 8
  store %"class.llvm::ilist_node_base"* %22, %"class.llvm::ilist_node_base"** %23, align 8
  %28 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %29 = bitcast %"class.Ice::Inst"** %28 to i8**
  store i8* %13, i8** %29, align 8
  ret %"class.Ice::InstAssign"* %14
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::ConstantUndef"* @_ZN3Ice13GlobalContext8allocateINS_13ConstantUndefEEEPNSt3__19enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES5_E4typeEv(%"class.Ice::GlobalContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::__split_buffer.576", align 8
  %3 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %4) #24, !noalias !36
  %5 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %3, i64 56, i64 8) #24
  %6 = bitcast i8* %5 to %"class.Ice::ConstantUndef"*
  %7 = icmp eq %"class.Ice::GlobalContext"* %0, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* nonnull %4) #24
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 6
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %11) #24, !noalias !39
  %12 = ptrtoint i8* %5 to i64
  %13 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 7, i32 0, i32 1
  %14 = load %"class.std::__1::function"*, %"class.std::__1::function"** %13, align 8
  %15 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.std::__1::function"*, %"class.std::__1::function"** %15, align 8
  %17 = icmp ult %"class.std::__1::function"* %14, %16
  %18 = ptrtoint %"class.std::__1::function"* %16 to i64
  br i1 %17, label %19, label %26

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS6_13ConstantUndefEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESB_E4typeEvEUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %20, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS4_13ConstantUndefEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES9_E4typeEvEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %21, align 8
  %22 = bitcast %"class.std::__1::function"* %14 to i64*
  store i64 %12, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 1
  %24 = ptrtoint %"class.std::__1::function"* %23 to i64
  %25 = bitcast %"class.std::__1::function"** %13 to i64*
  store i64 %24, i64* %25, align 8
  br label %56

26:                                               ; preds = %9
  %27 = ptrtoint %"class.std::__1::function"* %14 to i64
  %28 = getelementptr inbounds %"class.Ice::GlobalContext", %"class.Ice::GlobalContext"* %0, i64 0, i32 7, i32 0, i32 2
  %29 = bitcast %"class.std::__1::__compressed_pair.21"* %28 to %"class.std::__1::allocator.24"*
  %30 = bitcast %"struct.std::__1::__split_buffer.576"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #23
  %31 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %2, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 40, i1 false) #23
  %32 = bitcast %"class.std::__1::vector.19"* %10 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %27, %33
  %35 = ashr exact i64 %34, 5
  %36 = add nsw i64 %35, 1
  %37 = icmp ugt i64 %36, 576460752303423487
  br i1 %37, label %38, label %40

38:                                               ; preds = %26
  %39 = bitcast %"class.std::__1::vector.19"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #26
  unreachable

40:                                               ; preds = %26
  %41 = sub i64 %18, %33
  %42 = ashr exact i64 %41, 5
  %43 = icmp ult i64 %42, 288230376151711743
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = ashr exact i64 %41, 4
  %46 = icmp ult i64 %45, %36
  %47 = select i1 %46, i64 %36, i64 %45
  br label %48

48:                                               ; preds = %44, %40
  %49 = phi i64 [ %47, %44 ], [ 576460752303423487, %40 ]
  call void @_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEEC2EmmS6_(%"struct.std::__1::__split_buffer.576"* nonnull %2, i64 %49, i64 %35, %"class.std::__1::allocator.24"* dereferenceable(1) %29) #24
  %50 = load %"class.std::__1::function"*, %"class.std::__1::function"** %31, align 8
  %51 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 0, i32 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %50, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS6_13ConstantUndefEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESB_E4typeEvEUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %51, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS4_13ConstantUndefEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueES9_E4typeEvEUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %52, align 8
  %53 = bitcast %"class.std::__1::function"* %50 to i64*
  store i64 %12, i64* %53, align 8
  %54 = load %"class.std::__1::function"*, %"class.std::__1::function"** %31, align 8
  %55 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %54, i64 1
  store %"class.std::__1::function"* %55, %"class.std::__1::function"** %31, align 8
  call void @_ZNSt3__16vectorINS_8functionIFvvEEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(%"class.std::__1::vector.19"* %10, %"struct.std::__1::__split_buffer.576"* nonnull dereferenceable(40) %2) #24
  call void @_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.576"* nonnull %2) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #23
  br label %56

56:                                               ; preds = %19, %48
  %57 = icmp eq %"class.std::__1::mutex"* %11, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %56
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* nonnull %11) #24
  br label %59

59:                                               ; preds = %56, %58
  ret %"class.Ice::ConstantUndef"* %6
}

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #19

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #27
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #20 comdat {
  tail call void @abort() #26
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN3Ice13GlobalContext8allocateINS6_13ConstantUndefEEEPNS_9enable_ifIXntsr3std25is_trivially_destructibleIT_EE5valueESB_E4typeEvEUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.Ice::ConstantUndef"**
  %3 = load %"class.Ice::ConstantUndef"*, %"class.Ice::ConstantUndef"** %2, align 8
  %4 = bitcast %"class.Ice::ConstantUndef"* %3 to void (%"class.Ice::ConstantUndef"*)***
  %5 = load void (%"class.Ice::ConstantUndef"*)**, void (%"class.Ice::ConstantUndef"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.Ice::ConstantUndef"*)*, void (%"class.Ice::ConstantUndef"*)** %5, i64 2
  %7 = load void (%"class.Ice::ConstantUndef"*)*, void (%"class.Ice::ConstantUndef"*)** %6, align 8
  tail call void %7(%"class.Ice::ConstantUndef"* %3) #24
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEEC2EmmS6_(%"struct.std::__1::__split_buffer.576"*, i64, i64, %"class.std::__1::allocator.24"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.std::__1::function"* null, %"class.std::__1::function"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.24"* %3, %"class.std::__1::allocator.24"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 576460752303423487
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #26
  unreachable

11:                                               ; preds = %8
  %12 = shl i64 %1, 5
  %13 = tail call i8* @_Znwm(i64 %12) #25
  %14 = bitcast i8* %13 to %"class.std::__1::function"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"class.std::__1::function"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %0, i64 0, i32 0
  store %"class.std::__1::function"* %16, %"class.std::__1::function"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %0, i64 0, i32 2
  store %"class.std::__1::function"* %18, %"class.std::__1::function"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %0, i64 0, i32 1
  store %"class.std::__1::function"* %18, %"class.std::__1::function"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %16, i64 %1
  store %"class.std::__1::function"* %21, %"class.std::__1::function"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_8functionIFvvEEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(%"class.std::__1::vector.19"*, %"struct.std::__1::__split_buffer.576"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::function"*, %"class.std::__1::function"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::function"*, %"class.std::__1::function"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %1, i64 0, i32 1
  %8 = icmp eq %"class.std::__1::function"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"class.std::__1::function"* %4 to i64
  %11 = bitcast %"class.std::__1::function"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  br label %44

14:                                               ; preds = %2
  %15 = load %"class.std::__1::function"*, %"class.std::__1::function"** %7, align 8
  br label %16

16:                                               ; preds = %35, %14
  %17 = phi %"class.std::__1::function"* [ %37, %35 ], [ %15, %14 ]
  %18 = phi %"class.std::__1::function"* [ %20, %35 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 -1
  %21 = bitcast %"class.std::__1::function"* %19 to i8*
  %22 = bitcast %"class.std::__1::function"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false) #23
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 -1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 -1, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::__function::__policy_invoker"* %24 to i64*
  %26 = bitcast %"struct.std::__1::__function::__policy_invoker"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 -1, i32 0, i32 2
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 -1, i32 0, i32 2
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  store %"struct.std::__1::__function::__policy"* %30, %"struct.std::__1::__function::__policy"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %16
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %29, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %25, align 8
  br label %35

35:                                               ; preds = %34, %16
  %36 = load %"class.std::__1::function"*, %"class.std::__1::function"** %7, align 8
  %37 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %36, i64 -1
  store %"class.std::__1::function"* %37, %"class.std::__1::function"** %7, align 8
  %38 = icmp eq %"class.std::__1::function"* %20, %4
  br i1 %38, label %39, label %16

39:                                               ; preds = %35
  %40 = ptrtoint %"class.std::__1::function"* %37 to i64
  %41 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::function"** %7 to i64*
  br label %44

44:                                               ; preds = %9, %39
  %45 = phi i64* [ %11, %9 ], [ %43, %39 ]
  %46 = phi i64* [ %13, %9 ], [ %41, %39 ]
  %47 = phi i64 [ %12, %9 ], [ %40, %39 ]
  %48 = phi i64 [ %10, %9 ], [ %42, %39 ]
  store i64 %47, i64* %46, align 8
  store i64 %48, i64* %45, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %1, i64 0, i32 2
  %50 = bitcast %"class.std::__1::function"** %5 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::function"** %49 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %50, align 8
  store i64 %51, i64* %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %1, i64 0, i32 3, i32 0, i32 0
  %56 = bitcast %"class.std::__1::function"** %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::function"** %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 %57, i64* %58, align 8
  %60 = load i64, i64* %45, align 8
  %61 = bitcast %"struct.std::__1::__split_buffer.576"* %1 to i64*
  store i64 %60, i64* %61, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_8functionIFvvEEERNS_9allocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.576"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::function"*, %"class.std::__1::function"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %0, i64 0, i32 2
  %5 = load %"class.std::__1::function"*, %"class.std::__1::function"** %4, align 8
  %6 = icmp eq %"class.std::__1::function"* %5, %3
  br i1 %6, label %22, label %7

7:                                                ; preds = %1, %19
  %8 = phi %"class.std::__1::function"* [ %20, %19 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 -1
  store %"class.std::__1::function"* %9, %"class.std::__1::function"** %4, align 8
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 -1, i32 0, i32 2
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 1
  %13 = load void (i8*)*, void (i8*)** %12, align 8
  %14 = icmp eq void (i8*)* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void %13(i8* %17) #24
  %18 = load %"class.std::__1::function"*, %"class.std::__1::function"** %4, align 8
  br label %19

19:                                               ; preds = %15, %7
  %20 = phi %"class.std::__1::function"* [ %9, %7 ], [ %18, %15 ]
  %21 = icmp eq %"class.std::__1::function"* %20, %3
  br i1 %21, label %22, label %7

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"struct.std::__1::__split_buffer.576", %"struct.std::__1::__split_buffer.576"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::function"*, %"class.std::__1::function"** %23, align 8
  %25 = icmp eq %"class.std::__1::function"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.std::__1::function"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #25
  br label %28

28:                                               ; preds = %22, %26
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*) unnamed_addr #8

; Function Attrs: optsize
declare %"class.Ice::Constant"* @_ZN3Ice13GlobalContext15getConstantZeroENS_4TypeE(%"class.Ice::GlobalContext"*, i32) local_unnamed_addr #8

; Function Attrs: optsize
declare %"class.Ice::Constant"* @_ZN3Ice13GlobalContext24getConstantInt32InternalEi(%"class.Ice::GlobalContext"*, i32) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define internal %"class.Ice::Inst"* @"_ZNSt3__110__function16__policy_invokerIFPN3Ice4InstEPNS2_8VariableES6_S6_EE11__call_implINS0_20__default_alloc_funcIZNS2_14TargetLowering19scalarizeArithmeticENS2_14InstArithmetic6OpKindES6_PNS2_7OperandESF_E3$_2S7_EEEES4_PKNS0_16__policy_storageES6_S6_S6_"(%"union.std::__1::__function::__policy_storage"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*, %"class.Ice::Variable"*) #0 align 2 {
  %5 = alloca %"class.Ice::Variable"*, align 8
  %6 = alloca %"class.Ice::Operand"*, align 8
  %7 = alloca %"class.Ice::Operand"*, align 8
  %8 = ptrtoint %"class.Ice::Variable"* %1 to i64
  %9 = ptrtoint %"class.Ice::Variable"* %2 to i64
  %10 = ptrtoint %"class.Ice::Variable"* %3 to i64
  %11 = bitcast %"class.Ice::Variable"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #23
  %12 = bitcast %"class.Ice::Operand"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23
  %13 = bitcast %"class.Ice::Operand"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #23
  %14 = bitcast %"class.Ice::Variable"** %5 to i64*
  store i64 %8, i64* %14, align 8
  %15 = bitcast %"class.Ice::Operand"** %6 to i64*
  store i64 %9, i64* %15, align 8
  %16 = bitcast %"class.Ice::Operand"** %7 to i64*
  store i64 %10, i64* %16, align 8
  %17 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.Ice::TargetLowering"**
  %18 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %17, align 8
  %19 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %18, i64 0, i32 12
  %20 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %21 = bitcast [8 x i8]* %20 to i32*
  %22 = call %"class.Ice::InstArithmetic"* @_ZN3Ice15LoweringContext6insertINS_14InstArithmeticEJRKNS2_6OpKindERPNS_8VariableERPNS_7OperandESB_EEEPT_DpOT0_(%"class.Ice::LoweringContext"* %19, i32* dereferenceable(4) %21, %"class.Ice::Variable"** nonnull dereferenceable(8) %5, %"class.Ice::Operand"** nonnull dereferenceable(8) %6, %"class.Ice::Operand"** nonnull dereferenceable(8) %7) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #23
  %23 = bitcast %"class.Ice::InstArithmetic"* %22 to %"class.Ice::Inst"*
  ret %"class.Ice::Inst"* %23
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstArithmetic"* @_ZN3Ice15LoweringContext6insertINS_14InstArithmeticEJRKNS2_6OpKindERPNS_8VariableERPNS_7OperandESB_EEEPT_DpOT0_(%"class.Ice::LoweringContext"*, i32* dereferenceable(4), %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::Operand"** dereferenceable(8), %"class.Ice::Operand"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %7 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %6, align 8
  %8 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 0
  %9 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %8, align 8
  %10 = load i32, i32* %1, align 4
  %11 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  %12 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %3, align 8
  %13 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %4, align 8
  %14 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %14, align 8
  %16 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %15, i64 104, i64 8) #24
  %17 = bitcast i8* %16 to %"class.Ice::InstArithmetic"*
  tail call void @_ZN3Ice14InstArithmeticC1EPNS_3CfgENS0_6OpKindEPNS_8VariableEPNS_7OperandES7_(%"class.Ice::InstArithmetic"* %17, %"class.Ice::Cfg"* %9, i32 %10, %"class.Ice::Variable"* %11, %"class.Ice::Operand"* %12, %"class.Ice::Operand"* %13) #24
  %18 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %19 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %18, align 8
  %20 = icmp eq i8* %16, null
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to %"class.llvm::ilist_node_impl"*
  %23 = select i1 %20, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %22
  %24 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %19, i64 0, i32 0
  %25 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %23, i64 0, i32 0
  %26 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %19, i64 0, i32 0, i32 0
  %27 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %26, align 8
  %28 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %23, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %24, %"class.llvm::ilist_node_base"** %28, align 8
  %29 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %23, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %27, %"class.llvm::ilist_node_base"** %29, align 8
  %30 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %27, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %25, %"class.llvm::ilist_node_base"** %30, align 8
  store %"class.llvm::ilist_node_base"* %25, %"class.llvm::ilist_node_base"** %26, align 8
  %31 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %32 = bitcast %"class.Ice::Inst"** %31 to i8**
  store i8* %16, i8** %32, align 8
  ret %"class.Ice::InstArithmetic"* %17
}

; Function Attrs: optsize
declare void @_ZN3Ice14InstArithmeticC1EPNS_3CfgENS0_6OpKindEPNS_8VariableEPNS_7OperandES7_(%"class.Ice::InstArithmetic"*, %"class.Ice::Cfg"*, i32, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define internal %"class.Ice::Variable"* @"_ZNSt3__110__function16__policy_invokerIFPN3Ice8VariableEvEE11__call_implINS0_20__default_alloc_funcIZZNS2_14TargetLowering20scalarizeInstructionIJNS2_7OperandESB_EZNS9_19scalarizeArithmeticENS2_14InstArithmetic6OpKindES4_PSB_SE_E3$_2EEvS4_T0_DpPT_ENKUlSE_E_clESE_EUlvE_S5_EEEES4_PKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = alloca %"class.Ice::Variable"*, align 8
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.585"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.585"*, %"class.std::__1::__function::__default_alloc_func.585"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.585", %"class.std::__1::__function::__default_alloc_func.585"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.585", %"class.std::__1::__function::__default_alloc_func.585"* %4, i64 0, i32 0, i32 3
  %8 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %7, align 8
  %9 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = tail call i32 @_ZN3Ice15typeElementTypeENS_4TypeE(i32 %10) #24
  %12 = bitcast %"class.Ice::Variable"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23
  %13 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %6, i64 0, i32 4
  %14 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %13, align 8
  %15 = tail call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %14, i32 %11) #24
  store %"class.Ice::Variable"* %15, %"class.Ice::Variable"** %2, align 8
  %16 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %6, i64 0, i32 12
  %17 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.585", %"class.std::__1::__function::__default_alloc_func.585"* %4, i64 0, i32 0, i32 1
  %18 = call %"class.Ice::InstExtractElement"* @_ZN3Ice15LoweringContext6insertINS_18InstExtractElementEJRPNS_8VariableERKPNS_7OperandERKPNS_8ConstantEEEEPT_DpOT0_(%"class.Ice::LoweringContext"* %16, %"class.Ice::Variable"** nonnull dereferenceable(8) %2, %"class.Ice::Operand"** dereferenceable(8) %7, %"class.Ice::Constant"** dereferenceable(8) %17) #24
  %19 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23
  ret %"class.Ice::Variable"* %19
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::InstExtractElement"* @_ZN3Ice15LoweringContext6insertINS_18InstExtractElementEJRPNS_8VariableERKPNS_7OperandERKPNS_8ConstantEEEEPT_DpOT0_(%"class.Ice::LoweringContext"*, %"class.Ice::Variable"** dereferenceable(8), %"class.Ice::Operand"** dereferenceable(8), %"class.Ice::Constant"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 0
  %6 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %5, align 8
  %7 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %6, i64 0, i32 0
  %8 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %7, align 8
  %9 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %1, align 8
  %10 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %2, align 8
  %11 = bitcast %"class.Ice::Constant"** %3 to %"class.Ice::Operand"**
  %12 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %11, align 8
  %13 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %13, align 8
  %15 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %14, i64 104, i64 8) #24
  %16 = bitcast i8* %15 to %"class.Ice::InstExtractElement"*
  tail call void @_ZN3Ice18InstExtractElementC1EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_(%"class.Ice::InstExtractElement"* %16, %"class.Ice::Cfg"* %8, %"class.Ice::Variable"* %9, %"class.Ice::Operand"* %10, %"class.Ice::Operand"* %12) #24
  %17 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 3, i32 0
  %18 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %17, align 8
  %19 = icmp eq i8* %15, null
  %20 = getelementptr inbounds i8, i8* %15, i64 8
  %21 = bitcast i8* %20 to %"class.llvm::ilist_node_impl"*
  %22 = select i1 %19, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %21
  %23 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %18, i64 0, i32 0
  %24 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %22, i64 0, i32 0
  %25 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %18, i64 0, i32 0, i32 0
  %26 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %25, align 8
  %27 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %22, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %23, %"class.llvm::ilist_node_base"** %27, align 8
  %28 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %22, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %26, %"class.llvm::ilist_node_base"** %28, align 8
  %29 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %26, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %24, %"class.llvm::ilist_node_base"** %29, align 8
  store %"class.llvm::ilist_node_base"* %24, %"class.llvm::ilist_node_base"** %25, align 8
  %30 = getelementptr inbounds %"class.Ice::LoweringContext", %"class.Ice::LoweringContext"* %0, i64 0, i32 1
  %31 = bitcast %"class.Ice::Inst"** %30 to i8**
  store i8* %15, i8** %31, align 8
  ret %"class.Ice::InstExtractElement"* %16
}

; Function Attrs: optsize
declare void @_ZN3Ice18InstExtractElementC1EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_(%"class.Ice::InstExtractElement"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #25, !noalias !42
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #23
  ret i8* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #25
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice17InstInsertElementC1EPNS_3CfgEPNS_8VariableEPNS_7OperandES6_S6_(%"class.Ice::InstInsertElement"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*, %"class.Ice::Operand"*) unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #17

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #21

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone }
attributes #15 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind readnone speculatable }
attributes #18 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { inlinehint noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { nofree nounwind readonly }
attributes #22 = { optsize }
attributes #23 = { nounwind }
attributes #24 = { nounwind optsize }
attributes #25 = { builtin nounwind optsize }
attributes #26 = { noreturn nounwind optsize }
attributes #27 = { noreturn optsize }
attributes #28 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNKSt3__18functionIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEEclES8_: argument 0"}
!5 = distinct !{!5, !"_ZNKSt3__18functionIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEEclES8_"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZNKSt3__110__function13__policy_funcIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEEclEOS9_: argument 0"}
!8 = distinct !{!8, !"_ZNKSt3__110__function13__policy_funcIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEEclEOS9_"}
!9 = !{i64 0, i64 65}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN3Ice8VariableEZNS2_14TargetLowering21postRegallocSplittingERKNS2_14SmallBitVectorEE7UseInfoEENS_22__unordered_map_hasherIS4_SA_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_SA_SF_SD_Lb1EEENS2_12sz_allocatorISA_NS2_18CfgAllocatorTraitsEEEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS4_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISZ_SK_EEEEEEmOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN3Ice8VariableEZNS2_14TargetLowering21postRegallocSplittingERKNS2_14SmallBitVectorEE7UseInfoEENS_22__unordered_map_hasherIS4_SA_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_SA_SF_SD_Lb1EEENS2_12sz_allocatorISA_NS2_18CfgAllocatorTraitsEEEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS4_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISZ_SK_EEEEEEmOT_DpOT0_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!16 = distinct !{!16, !17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!23 = !{!"branch_weights", i32 2000, i32 1}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE16__construct_nodeIJRKNS_4pairIKiS4_EEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISR_SF_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiPN3Ice7CfgNodeEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS2_12sz_allocatorIS5_NS2_18CfgAllocatorTraitsEEEE16__construct_nodeIJRKNS_4pairIKiS4_EEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISR_SF_EEEEEEDpOT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS5_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3Ice7RegNumTEEENS_22__unordered_map_hasherIS7_SA_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SA_SF_SD_Lb1EEENS5_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS5_ISW_EEEEEEmOT_DpOT0_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISG_S7_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISG_S7_EEEEEEDpOT_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISG_S7_EEEEEEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16__treeIPN3Ice8VariableENS_4lessIS3_EENS1_12sz_allocatorIS3_NS1_18CfgAllocatorTraitsEEEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISG_S7_EEEEEEDpOT_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3Ice13GlobalContext12getAllocatorEv: argument 0"}
!38 = distinct !{!38, !"_ZN3Ice13GlobalContext12getAllocatorEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN3Ice13GlobalContext14getDestructorsEv: argument 0"}
!41 = distinct !{!41, !"_ZN3Ice13GlobalContext14getDestructorsEv"}
!42 = !{!43, !45}
!43 = distinct !{!43, !44, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!45 = distinct !{!45, !46, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN3Ice14TargetLowering20scalarizeInstructionIJNS4_7OperandES7_EZNS5_19scalarizeArithmeticENS4_14InstArithmetic6OpKindEPNS4_8VariableEPS7_SC_E3$_2EEvSB_T0_DpPT_ENKUlSC_E_clESC_EUlvE_FSB_vEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
