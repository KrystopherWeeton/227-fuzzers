; ModuleID = '../../third_party/skia/src/c/sk_effects.cpp'
source_filename = "../../third_party/skia/src/c/sk_effects.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.anon = type { i32, i32 }
%struct.anon.2 = type { i32, i32 }
%struct.sk_shader_t = type opaque
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.sk_point_t = type { float, float }
%struct.sk_matrix_t = type { [9 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.sk_sp = type { %class.SkShader* }
%struct.SkPoint = type { float, float }
%struct.sk_maskfilter_t = type opaque
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1 = type { %class.SkMaskFilter* }

@_ZL12gTileModeMap = internal unnamed_addr constant [3 x %struct.anon] [%struct.anon zeroinitializer, %struct.anon { i32 1, i32 1 }, %struct.anon { i32 2, i32 2 }], align 16
@_ZL15gBlurStylePairs = internal unnamed_addr constant [4 x %struct.anon.2] [%struct.anon.2 zeroinitializer, %struct.anon.2 { i32 1, i32 1 }, %struct.anon.2 { i32 2, i32 2 }, %struct.anon.2 { i32 3, i32 3 }], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sk_shader_ref(%struct.sk_shader_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sk_shader_t* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_shader_t* %0 to %class.SkShader*
  %5 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_shader_unref(%struct.sk_shader_t*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.sk_shader_t* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_shader_t* %0 to %class.SkShader*
  %5 = getelementptr inbounds %class.SkShader, %class.SkShader* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 -1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %struct.sk_shader_t* %0 to %class.SkRefCntBase*
  %10 = bitcast %struct.sk_shader_t* %0 to void (%class.SkRefCntBase*)***
  %11 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %11, i64 2
  %13 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, align 8
  tail call void %13(%class.SkRefCntBase* nonnull %9) #4
  br label %14

14:                                               ; preds = %1, %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_shader_t* @sk_shader_new_linear_gradient(%struct.sk_point_t*, i32*, float*, i32, i32, %struct.sk_matrix_t* readonly) local_unnamed_addr #1 {
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca %class.sk_sp, align 8
  %9 = icmp ult i32 %4, 3
  br i1 %9, label %10, label %40

10:                                               ; preds = %6
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds [3 x %struct.anon], [3 x %struct.anon]* @_ZL12gTileModeMap, i64 0, i64 %11, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #4
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %16 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 16
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %18, align 16
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %19, align 16
  store i32 16, i32* %15, align 4
  %20 = icmp eq %struct.sk_matrix_t* %5, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %10
  %22 = bitcast %struct.sk_matrix_t* %5 to <4 x i32>*
  %23 = load <4 x i32>, <4 x i32>* %22, align 4
  %24 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %5, i64 0, i32 0, i64 4
  %25 = bitcast float* %24 to <4 x i32>*
  %26 = load <4 x i32>, <4 x i32>* %25, align 4
  %27 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %5, i64 0, i32 0, i64 8
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast %class.SkMatrix* %7 to <4 x i32>*
  store <4 x i32> %23, <4 x i32>* %30, align 16
  %31 = bitcast float* %17 to <4 x i32>*
  store <4 x i32> %26, <4 x i32>* %31, align 16
  %32 = bitcast float* %19 to i32*
  store i32 %29, i32* %32, align 16
  store i32 128, i32* %15, align 4
  br label %35

33:                                               ; preds = %10
  %34 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %7) #4
  br label %35

35:                                               ; preds = %21, %33
  %36 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  %37 = bitcast %struct.sk_point_t* %0 to %struct.SkPoint*
  call void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* nonnull sret %8, %struct.SkPoint* %37, i32* %1, float* %2, i32 %3, i32 %13, i32 0, %class.SkMatrix* nonnull %7) #4
  %38 = bitcast %class.sk_sp* %8 to %struct.sk_shader_t**
  %39 = load %struct.sk_shader_t*, %struct.sk_shader_t** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #4
  br label %40

40:                                               ; preds = %6, %35
  %41 = phi %struct.sk_shader_t* [ %39, %35 ], [ null, %6 ]
  ret %struct.sk_shader_t* %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret, %struct.SkPoint*, i32*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_shader_t* @sk_shader_new_radial_gradient(%struct.sk_point_t* nocapture readonly, float, i32*, float*, i32, i32, %struct.sk_matrix_t* readonly) local_unnamed_addr #1 {
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %struct.SkPoint*
  %11 = alloca %class.sk_sp, align 8
  %12 = icmp ult i32 %5, 3
  br i1 %12, label %13, label %45

13:                                               ; preds = %7
  %14 = zext i32 %5 to i64
  %15 = getelementptr inbounds [3 x %struct.anon], [3 x %struct.anon]* @_ZL12gTileModeMap, i64 0, i64 %14, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #4
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %19 = bitcast %class.SkMatrix* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %19, align 16
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %21, align 16
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %22, align 16
  store i32 16, i32* %18, align 4
  %23 = icmp eq %struct.sk_matrix_t* %6, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %13
  %25 = bitcast %struct.sk_matrix_t* %6 to <4 x i32>*
  %26 = load <4 x i32>, <4 x i32>* %25, align 4
  %27 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %6, i64 0, i32 0, i64 4
  %28 = bitcast float* %27 to <4 x i32>*
  %29 = load <4 x i32>, <4 x i32>* %28, align 4
  %30 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %6, i64 0, i32 0, i64 8
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = bitcast %class.SkMatrix* %8 to <4 x i32>*
  store <4 x i32> %26, <4 x i32>* %33, align 16
  %34 = bitcast float* %20 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %34, align 16
  %35 = bitcast float* %22 to i32*
  store i32 %32, i32* %35, align 16
  store i32 128, i32* %18, align 4
  br label %38

36:                                               ; preds = %13
  %37 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %8) #4
  br label %38

38:                                               ; preds = %24, %36
  %39 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #4
  %40 = bitcast %struct.sk_point_t* %0 to i64*
  %41 = load i64, i64* %40, align 4
  store i64 %41, i64* %9, align 8
  %42 = bitcast %class.sk_sp* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #4
  call void @_ZN16SkGradientShader10MakeRadialERK7SkPointfPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* nonnull sret %11, %struct.SkPoint* nonnull dereferenceable(8) %10, float %1, i32* %2, float* %3, i32 %4, i32 %16, i32 0, %class.SkMatrix* nonnull %8) #4
  %43 = bitcast %class.sk_sp* %11 to %struct.sk_shader_t**
  %44 = load %struct.sk_shader_t*, %struct.sk_shader_t** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #4
  br label %45

45:                                               ; preds = %7, %38
  %46 = phi %struct.sk_shader_t* [ %44, %38 ], [ null, %7 ]
  ret %struct.sk_shader_t* %46
}

declare void @_ZN16SkGradientShader10MakeRadialERK7SkPointfPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret, %struct.SkPoint* dereferenceable(8), float, i32*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_shader_t* @sk_shader_new_sweep_gradient(%struct.sk_point_t* nocapture readonly, i32*, float*, i32, %struct.sk_matrix_t* readonly) local_unnamed_addr #1 {
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %class.sk_sp, align 8
  %8 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #4
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %10 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %10, align 16
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 16
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %13, align 16
  store i32 16, i32* %9, align 4
  %14 = icmp eq %struct.sk_matrix_t* %4, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %5
  %16 = bitcast %struct.sk_matrix_t* %4 to <4 x i32>*
  %17 = load <4 x i32>, <4 x i32>* %16, align 4
  %18 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %4, i64 0, i32 0, i64 4
  %19 = bitcast float* %18 to <4 x i32>*
  %20 = load <4 x i32>, <4 x i32>* %19, align 4
  %21 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %4, i64 0, i32 0, i64 8
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %class.SkMatrix* %6 to <4 x i32>*
  store <4 x i32> %17, <4 x i32>* %24, align 16
  %25 = bitcast float* %11 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %25, align 16
  %26 = bitcast float* %13 to i32*
  store i32 %23, i32* %26, align 16
  store i32 128, i32* %9, align 4
  br label %29

27:                                               ; preds = %5
  %28 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %6) #4
  br label %29

29:                                               ; preds = %15, %27
  %30 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = getelementptr inbounds %struct.sk_point_t, %struct.sk_point_t* %0, i64 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %struct.sk_point_t, %struct.sk_point_t* %0, i64 0, i32 1
  %34 = load float, float* %33, align 4
  call void @_ZN16SkGradientShader9MakeSweepEffPKjPKfi10SkTileModeffjPK8SkMatrix(%class.sk_sp* nonnull sret %7, float %32, float %34, i32* %1, float* %2, i32 %3, i32 0, float 0.000000e+00, float 3.600000e+02, i32 0, %class.SkMatrix* nonnull %6) #4
  %35 = bitcast %class.sk_sp* %7 to %struct.sk_shader_t**
  %36 = load %struct.sk_shader_t*, %struct.sk_shader_t** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #4
  ret %struct.sk_shader_t* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_shader_t* @sk_shader_new_two_point_conical_gradient(%struct.sk_point_t* nocapture readonly, float, %struct.sk_point_t* nocapture readonly, float, i32*, float*, i32, i32, %struct.sk_matrix_t* readonly) local_unnamed_addr #1 {
  %10 = alloca %class.SkMatrix, align 16
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %struct.SkPoint*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %struct.SkPoint*
  %15 = alloca %class.sk_sp, align 8
  %16 = icmp ult i32 %7, 3
  br i1 %16, label %17, label %52

17:                                               ; preds = %9
  %18 = zext i32 %7 to i64
  %19 = getelementptr inbounds [3 x %struct.anon], [3 x %struct.anon]* @_ZL12gTileModeMap, i64 0, i64 %18, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #4
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %23 = bitcast %class.SkMatrix* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %23, align 16
  %24 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %25, align 16
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %26, align 16
  store i32 16, i32* %22, align 4
  %27 = icmp eq %struct.sk_matrix_t* %8, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %17
  %29 = bitcast %struct.sk_matrix_t* %8 to <4 x i32>*
  %30 = load <4 x i32>, <4 x i32>* %29, align 4
  %31 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %8, i64 0, i32 0, i64 4
  %32 = bitcast float* %31 to <4 x i32>*
  %33 = load <4 x i32>, <4 x i32>* %32, align 4
  %34 = getelementptr inbounds %struct.sk_matrix_t, %struct.sk_matrix_t* %8, i64 0, i32 0, i64 8
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %class.SkMatrix* %10 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %37, align 16
  %38 = bitcast float* %24 to <4 x i32>*
  store <4 x i32> %33, <4 x i32>* %38, align 16
  %39 = bitcast float* %26 to i32*
  store i32 %36, i32* %39, align 16
  store i32 128, i32* %22, align 4
  br label %42

40:                                               ; preds = %17
  %41 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %10) #4
  br label %42

42:                                               ; preds = %28, %40
  %43 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #4
  %44 = bitcast %struct.sk_point_t* %0 to i64*
  %45 = load i64, i64* %44, align 4
  store i64 %45, i64* %11, align 8
  %46 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4
  %47 = bitcast %struct.sk_point_t* %2 to i64*
  %48 = load i64, i64* %47, align 4
  store i64 %48, i64* %13, align 8
  %49 = bitcast %class.sk_sp* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #4
  call void @_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* nonnull sret %15, %struct.SkPoint* nonnull dereferenceable(8) %12, float %1, %struct.SkPoint* nonnull dereferenceable(8) %14, float %3, i32* %4, float* %5, i32 %6, i32 %20, i32 0, %class.SkMatrix* nonnull %10) #4
  %50 = bitcast %class.sk_sp* %15 to %struct.sk_shader_t**
  %51 = load %struct.sk_shader_t*, %struct.sk_shader_t** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #4
  br label %52

52:                                               ; preds = %9, %42
  %53 = phi %struct.sk_shader_t* [ %51, %42 ], [ null, %9 ]
  ret %struct.sk_shader_t* %53
}

declare void @_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp* sret, %struct.SkPoint* dereferenceable(8), float, %struct.SkPoint* dereferenceable(8), float, i32*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sk_maskfilter_ref(%struct.sk_maskfilter_t*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sk_maskfilter_t* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_maskfilter_t* %0 to %class.SkMaskFilter*
  %5 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sk_maskfilter_unref(%struct.sk_maskfilter_t*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.sk_maskfilter_t* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sk_maskfilter_t* %0 to %class.SkMaskFilter*
  %5 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 -1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %struct.sk_maskfilter_t* %0 to %class.SkRefCntBase*
  %10 = bitcast %struct.sk_maskfilter_t* %0 to void (%class.SkRefCntBase*)***
  %11 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %11, i64 2
  %13 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, align 8
  tail call void %13(%class.SkRefCntBase* nonnull %9) #4
  br label %14

14:                                               ; preds = %1, %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sk_maskfilter_t* @sk_maskfilter_new_blur(i32, float) local_unnamed_addr #1 {
  %3 = alloca %class.sk_sp.1, align 8
  %4 = icmp ult i32 %0, 4
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = zext i32 %0 to i64
  %7 = getelementptr inbounds [4 x %struct.anon.2], [4 x %struct.anon.2]* @_ZL15gBlurStylePairs, i64 0, i64 %6, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %class.sk_sp.1* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  call void @_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb(%class.sk_sp.1* nonnull sret %3, i32 %8, float %1, i1 zeroext true) #4
  %10 = bitcast %class.sk_sp.1* %3 to %struct.sk_maskfilter_t**
  %11 = load %struct.sk_maskfilter_t*, %struct.sk_maskfilter_t** %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %12

12:                                               ; preds = %2, %5
  %13 = phi %struct.sk_maskfilter_t* [ %11, %5 ], [ null, %2 ]
  ret %struct.sk_maskfilter_t* %13
}

declare void @_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb(%class.sk_sp.1* sret, i32, float, i1 zeroext) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #3

declare void @_ZN16SkGradientShader9MakeSweepEffPKjPKfi10SkTileModeffjPK8SkMatrix(%class.sk_sp* sret, float, float, i32*, float*, i32, i32, float, float, i32, %class.SkMatrix*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
