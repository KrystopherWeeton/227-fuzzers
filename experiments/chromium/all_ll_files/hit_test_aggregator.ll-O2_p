; ModuleID = '../../components/viz/service/hit_test/hit_test_aggregator.cc'
source_filename = "../../components/viz/service/hit_test/hit_test_aggregator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.viz::HitTestAggregator" = type { %"class.viz::HitTestManager"*, %"class.viz::HitTestAggregatorDelegate"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId", i32, i32, i32, i32, i32, %"class.std::__1::vector.141", i8, i32, %"class.base::internal::flat_tree.148", %"class.base::flat_map.156", i64, %"class.base::WeakPtrFactory.166" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"*, %"class.std::__1::__compressed_pair.143" }
%"struct.viz::AggregatedHitTestRegion" = type { %"class.viz::FrameSinkId", i32, i32, %"class.gfx::Rect", i32, %"class.gfx::Transform" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.viz::AggregatedHitTestRegion"* }
%"class.base::internal::flat_tree.148" = type { %"class.std::__1::vector.149" }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.viz::FrameSinkId"* }
%"class.base::flat_map.156" = type { %"class.base::internal::flat_tree.157" }
%"class.base::internal::flat_tree.157" = type { %"class.std::__1::vector.158" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"*, %"class.std::__1::__compressed_pair.161" }
%"struct.std::__1::pair.160" = type { %"class.viz::FrameSinkId", i64 }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::pair.160"* }
%"class.base::WeakPtrFactory.166" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.111", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.111" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.112" }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i8 }
%"class.viz::HitTestManager" = type { %"class.viz::SurfaceObserver", %"class.viz::SurfaceManager"*, %"class.std::__1::map", %"class.base::flat_map.131", i64 }
%"class.viz::SurfaceObserver" = type { i32 (...)** }
%"class.viz::SurfaceManager" = type { %"class.viz::SurfaceManagerDelegate"*, %"class.absl::optional", %"class.base::flat_map", %"class.base::flat_map.1", %"class.base::flat_map.11", %"class.base::ObserverList", %"class.base::ThreadChecker", %"class.base::internal::flat_tree.28", %"class.viz::SurfaceId", %"class.base::internal::flat_tree.28", %"class.base::TickClock"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.54", %"class.std::__1::unordered_map.78", %"class.absl::optional.104", i8, %"class.base::WeakPtrFactory.123" }
%"class.viz::SurfaceManagerDelegate" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.1" = type { %"class.base::internal::flat_tree.2" }
%"class.base::internal::flat_tree.2" = type { %"class.std::__1::vector.3" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.std::__1::pair.5"*, %"struct.std::__1::pair.5"*, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::pair.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::pair.5"* }
%"class.base::flat_map.11" = type { %"class.base::internal::flat_tree.12" }
%"class.base::internal::flat_tree.12" = type { %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.std::__1::pair.15"*, %"struct.std::__1::pair.15"*, %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::pair.15" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::pair.15"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.21", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.23" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::internal::flat_tree.28" = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.viz::SurfaceId"* }
%"class.base::TickClock" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.51", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37", %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i64 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { float }
%"class.std::__1::unordered_map.54" = type { %"class.std::__1::__hash_table.55" }
%"class.std::__1::__hash_table.55" = type <{ %"class.std::__1::unique_ptr.56", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.74", [4 x i8] }>
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.59"** }
%"struct.std::__1::__hash_node_base.59" = type { %"struct.std::__1::__hash_node_base.59"* }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::__bucket_list_deallocator.61" }
%"class.std::__1::__bucket_list_deallocator.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base.59" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map.78" = type { %"class.std::__1::__hash_table.79" }
%"class.std::__1::__hash_table.79" = type <{ %"class.std::__1::unique_ptr.80", %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.98", [4 x i8] }>
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82", %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::__hash_node_base.83"** }
%"struct.std::__1::__hash_node_base.83" = type { %"struct.std::__1::__hash_node_base.83"* }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__bucket_list_deallocator.85" }
%"class.std::__1::__bucket_list_deallocator.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.std::__1::__hash_node_base.83" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.absl::optional.104" = type { %"class.absl::optional_internal::optional_data.105" }
%"class.absl::optional_internal::optional_data.105" = type { %"class.absl::optional_internal::optional_data_base.106" }
%"class.absl::optional_internal::optional_data_base.106" = type { %"class.absl::optional_internal::optional_data_dtor_base.107" }
%"class.absl::optional_internal::optional_data_dtor_base.107" = type { i8, %union.anon.108 }
%union.anon.108 = type { %"class.base::RepeatingTimer" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.117 }
%class.scoped_refptr.117 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.118", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.118" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.123" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.base::flat_map.131" = type { %"class.base::internal::flat_tree.132" }
%"class.base::internal::flat_tree.132" = type { %"class.std::__1::vector.133" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.std::__1::pair.135"*, %"struct.std::__1::pair.135"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair.135" = type opaque
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair.135"* }
%"class.viz::HitTestAggregatorDelegate" = type { i32 (...)** }
%"class.viz::LatestLocalSurfaceIdLookupDelegate" = type { i32 (...)** }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"class.std::__1::unique_ptr.169"*, %"class.std::__1::unique_ptr.169"*, %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.viz::AggregatedRenderPass"* }
%"class.viz::AggregatedRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", i8, i8, [6 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.192", i8, i8, i8, i8, %"class.std::__1::vector.197", %"class.viz::QuadList", %"class.cc::ListContainer.209" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.172" }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.187" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.180", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.174, i32, %"class.absl::optional.175", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.174 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.175" = type { %"class.absl::optional_internal::optional_data.176" }
%"class.absl::optional_internal::optional_data.176" = type { %"class.absl::optional_internal::optional_data_base.177" }
%"class.absl::optional_internal::optional_data_base.177" = type { %"class.absl::optional_internal::optional_data_dtor_base.178" }
%"class.absl::optional_internal::optional_data_dtor_base.178" = type { i8, %union.anon.179 }
%union.anon.179 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.192" = type { %"class.absl::optional_internal::optional_data.193" }
%"class.absl::optional_internal::optional_data.193" = type { %"class.absl::optional_internal::optional_data_base.194" }
%"class.absl::optional_internal::optional_data_base.194" = type { %"class.absl::optional_internal::optional_data_dtor_base.195" }
%"class.absl::optional_internal::optional_data_dtor_base.195" = type { i8, %union.anon.196 }
%union.anon.196 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"class.std::__1::unique_ptr.199"*, %"class.std::__1::unique_ptr.199"*, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::unique_ptr.199" = type opaque
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.std::__1::unique_ptr.199"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.205" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.209" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.std::__1::unique_ptr.169"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.viz::HitTestRegionList" = type { i32, i32, %"class.gfx::Rect", %"class.gfx::Transform", %"class.std::__1::vector.248" }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"*, %"class.std::__1::__compressed_pair.250" }
%"struct.viz::HitTestRegion" = type { i32, i32, %"class.viz::FrameSinkId", %"class.gfx::Rect", %"class.gfx::Transform" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.viz::HitTestRegion"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.cc::ListContainer<viz::DrawQuad>::Iterator" = type { %"class.cc::ListContainerHelper::Iterator" }
%"class.cc::ListContainerHelper::Iterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"struct.cc::ListContainerHelper::PositionInCharAllocator" = type { %"class.cc::ListContainerHelper::CharAllocator"*, i64, i8* }
%"class.absl::optional.218" = type { %"class.absl::optional_internal::optional_data.219" }
%"class.absl::optional_internal::optional_data.219" = type { %"class.absl::optional_internal::optional_data_base.220" }
%"class.absl::optional_internal::optional_data_base.220" = type { %"class.absl::optional_internal::optional_data_dtor_base.221" }
%"class.absl::optional_internal::optional_data_dtor_base.221" = type { i8, [7 x i8], %union.anon.222 }
%union.anon.222 = type { %"class.viz::DebugBorderDrawQuad" }
%"class.viz::DebugBorderDrawQuad" = type { %"class.viz::DrawQuad.base", i32, i32, [4 x i8] }
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.223", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.228", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.absl::optional.223" = type { %"class.absl::optional_internal::optional_data.224" }
%"class.absl::optional_internal::optional_data.224" = type { %"class.absl::optional_internal::optional_data_base.225" }
%"class.absl::optional_internal::optional_data_base.225" = type { %"class.absl::optional_internal::optional_data_dtor_base.226" }
%"class.absl::optional_internal::optional_data_dtor_base.226" = type { i8, %union.anon.227 }
%union.anon.227 = type { %"class.gfx::Rect" }
%"class.absl::optional.228" = type { %"class.absl::optional_internal::optional_data.229" }
%"class.absl::optional_internal::optional_data.229" = type { %"class.absl::optional_internal::optional_data_base.230" }
%"class.absl::optional_internal::optional_data_base.230" = type { %"class.absl::optional_internal::optional_data_dtor_base.231" }
%"class.absl::optional_internal::optional_data_dtor_base.231" = type { i8, %union.anon.232 }
%union.anon.232 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.233"] }
%"class.util::IdType.233" = type { %"class.base::StrongAlias.234" }
%"class.base::StrongAlias.234" = type { i32 }
%"class.absl::optional.235" = type { %"class.absl::optional_internal::optional_data.236" }
%"class.absl::optional_internal::optional_data.236" = type { %"class.absl::optional_internal::optional_data_base.237" }
%"class.absl::optional_internal::optional_data_base.237" = type { %"class.absl::optional_internal::optional_data_dtor_base.238" }
%"class.absl::optional_internal::optional_data_dtor_base.238" = type { i8, [7 x i8], %union.anon.239 }
%union.anon.239 = type { %"class.viz::SolidColorDrawQuad" }
%"class.viz::SolidColorDrawQuad" = type <{ %"class.viz::DrawQuad.base", i32, i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { i32*, i64 }
%"class.std::__1::stack.240" = type { %"class.base::circular_deque.241" }
%"class.base::circular_deque.241" = type { %"class.base::internal::VectorBuffer.242", i64, i64 }
%"class.base::internal::VectorBuffer.242" = type { %"class.gfx::Transform"*, i64 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.285", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.287", i64, i64 }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.298" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.273 }
%union.anon.273 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer.282" = type { %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"*, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.162", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::allocator.164"* }
%"class.std::__1::allocator.164" = type { i8 }
%"struct.std::__1::__split_buffer.303" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.152", %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.std::__1::allocator.154"* }
%"class.std::__1::allocator.154" = type { i8 }

$_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_19DebugBorderDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE = comdat any

$_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_18SolidColorDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE = comdat any

$_ZN20trace_event_internal13AddTraceEventIRA27_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIRA21_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_ = comdat any

$_ZN4base14circular_dequeIN3gfx9TransformEED2Ev = comdat any

$_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm = comdat any

$_ZN4base14circular_dequeIjED2Ev = comdat any

$_ZN4base8internal12VectorBufferIjEixEm = comdat any

$_ZNSt3__16vectorIN3viz23AggregatedHitTestRegionENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZN4base14circular_dequeIN3gfx9TransformEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN3gfx9TransformEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_ = comdat any

$_ZNK4base8internal12VectorBufferIN3gfx9TransformEEixEm = comdat any

$_ZN4base14circular_dequeIjE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIjE10MoveBufferERNS_8internal12VectorBufferIjEEmmPS4_PmS7_ = comdat any

$_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4base8internal12VectorBufferIjEixEm = comdat any

$_ZN4base14circular_dequeIjE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeIN3gfx9TransformEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

@_ZZN3viz17HitTestAggregator23InsertHitTestDebugQuadsEPNSt3__16vectorINS1_10unique_ptrINS_20AggregatedRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEE6colors = internal unnamed_addr constant [3 x i32] [i32 -16711681, i32 -16711936, i32 -65281], align 4
@__const._ZN3viz17HitTestAggregator23InsertHitTestDebugQuadsEPNSt3__16vectorINS1_10unique_ptrINS_20AggregatedRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE.child_to_parent = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [15 x i8] c"Event.Pipeline\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"AggregateHitTestData(Root)\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"AggregateHitTestData\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@.str.4 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@_ZTVN3viz19DebugBorderDrawQuadE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN3viz18SolidColorDrawQuadE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.7 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.11 = private unnamed_addr constant [34 x i8] c"../../base/containers/flat_tree.h\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"position != body_.end()\00", align 1

@_ZN3viz17HitTestAggregatorC1EPKNS_14HitTestManagerEPNS_25HitTestAggregatorDelegateEPNS_34LatestLocalSurfaceIdLookupDelegateERKNS_11FrameSinkIdEjj = hidden unnamed_addr alias void (%"class.viz::HitTestAggregator"*, %"class.viz::HitTestManager"*, %"class.viz::HitTestAggregatorDelegate"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"*, i32, i32), void (%"class.viz::HitTestAggregator"*, %"class.viz::HitTestManager"*, %"class.viz::HitTestAggregatorDelegate"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"*, i32, i32)* @_ZN3viz17HitTestAggregatorC2EPKNS_14HitTestManagerEPNS_25HitTestAggregatorDelegateEPNS_34LatestLocalSurfaceIdLookupDelegateERKNS_11FrameSinkIdEjj
@_ZN3viz17HitTestAggregatorD1Ev = hidden unnamed_addr alias void (%"class.viz::HitTestAggregator"*), void (%"class.viz::HitTestAggregator"*)* @_ZN3viz17HitTestAggregatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestAggregatorC2EPKNS_14HitTestManagerEPNS_25HitTestAggregatorDelegateEPNS_34LatestLocalSurfaceIdLookupDelegateERKNS_11FrameSinkIdEjj(%"class.viz::HitTestAggregator"*, %"class.viz::HitTestManager"*, %"class.viz::HitTestAggregatorDelegate"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"* nocapture readonly dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 0
  store %"class.viz::HitTestManager"* %1, %"class.viz::HitTestManager"** %8, align 8
  %9 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 1
  store %"class.viz::HitTestAggregatorDelegate"* %2, %"class.viz::HitTestAggregatorDelegate"** %9, align 8
  %10 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 2
  store %"class.viz::LatestLocalSurfaceIdLookupDelegate"* %3, %"class.viz::LatestLocalSurfaceIdLookupDelegate"** %10, align 8
  %11 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 3, i32 1
  %15 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %4, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 4
  store i32 %5, i32* %17, align 8
  %18 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 5
  store i32 %5, i32* %18, align 4
  %19 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 6
  store i32 %6, i32* %19, align 8
  %20 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 7
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 8
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9
  %23 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 11
  %24 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 15, i32 0
  %25 = ptrtoint %"class.viz::HitTestAggregator"* %0 to i64
  %26 = bitcast %"class.std::__1::vector.141"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 25, i1 false)
  %27 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 60, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %24, i64 %25) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestAggregatorD2Ev(%"class.viz::HitTestAggregator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 15, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #12
  %3 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.160"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::pair.160"* %4 to i64
  %8 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.160"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair.160"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %13 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %12, align 8
  %14 = icmp eq %"class.viz::FrameSinkId"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.viz::FrameSinkId"* %13 to i64
  %17 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %18 = bitcast %"class.viz::FrameSinkId"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.viz::FrameSinkId"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 0
  %22 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %21, align 8
  %23 = icmp eq %"struct.viz::AggregatedHitTestRegion"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"struct.viz::AggregatedHitTestRegion"* %22 to i64
  %26 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 1
  %27 = bitcast %"struct.viz::AggregatedHitTestRegion"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"struct.viz::AggregatedHitTestRegion"* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestAggregator9AggregateERKNS_9SurfaceIdEPNSt3__16vectorINS4_10unique_ptrINS_20AggregatedRenderPassENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEE(%"class.viz::HitTestAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.std::__1::vector.167"* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 0
  %5 = load %"class.viz::HitTestManager"*, %"class.viz::HitTestManager"** %4, align 8
  %6 = getelementptr inbounds %"class.viz::HitTestManager", %"class.viz::HitTestManager"* %5, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 14
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %53, label %11

11:                                               ; preds = %3
  store i64 %7, i64* %8, align 8
  %12 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9
  %13 = bitcast %"class.std::__1::vector.141"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 1
  %16 = bitcast %"struct.viz::AggregatedHitTestRegion"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 7
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 8
  store i32 0, i32* %20, align 8
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %11
  %23 = zext i32 %18 to i64
  tail call void @_ZNSt3__16vectorIN3viz23AggregatedHitTestRegionENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.141"* %12, i64 %23) #12
  br label %24

24:                                               ; preds = %11, %22
  %25 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 10
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 11
  store i32 0, i32* %26, align 4
  tail call void @_ZN3viz17HitTestAggregator10AppendRootERKNS_9SurfaceIdE(%"class.viz::HitTestAggregator"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %1)
  %27 = load i32, i32* %20, align 8
  %28 = zext i32 %27 to i64
  %29 = load i64, i64* %16, align 8
  %30 = load i64, i64* %13, align 8
  %31 = sub i64 %29, %30
  %32 = sdiv exact i64 %31, 104
  %33 = icmp ult i64 %32, %28
  %34 = inttoptr i64 %30 to %"struct.viz::AggregatedHitTestRegion"*
  br i1 %33, label %35, label %37

35:                                               ; preds = %24
  %36 = sub nsw i64 %28, %32
  tail call void @_ZNSt3__16vectorIN3viz23AggregatedHitTestRegionENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.141"* %12, i64 %36) #12
  br label %41

37:                                               ; preds = %24
  %38 = icmp ugt i64 %32, %28
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %34, i64 %28
  store %"struct.viz::AggregatedHitTestRegion"* %40, %"struct.viz::AggregatedHitTestRegion"** %15, align 8
  br label %41

41:                                               ; preds = %35, %37, %39
  %42 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 1
  %43 = load %"class.viz::HitTestAggregatorDelegate"*, %"class.viz::HitTestAggregatorDelegate"** %42, align 8
  %44 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 3
  %45 = bitcast %"class.viz::HitTestAggregatorDelegate"* %43 to void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)***
  %46 = load void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)**, void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)*** %45, align 8
  %47 = load void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)*, void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)** %46, align 8
  tail call void %47(%"class.viz::HitTestAggregatorDelegate"* %43, %"class.viz::FrameSinkId"* dereferenceable(8) %44, %"class.std::__1::vector.141"* dereferenceable(24) %12) #12
  %48 = load i8, i8* %25, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp ne %"class.std::__1::vector.167"* %2, null
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %53

52:                                               ; preds = %41
  tail call void @_ZN3viz17HitTestAggregator23InsertHitTestDebugQuadsEPNSt3__16vectorINS1_10unique_ptrINS_20AggregatedRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.viz::HitTestAggregator"* %0, %"class.std::__1::vector.167"* nonnull %2)
  br label %53

53:                                               ; preds = %41, %52, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestAggregator10AppendRootERKNS_9SurfaceIdE(%"class.viz::HitTestAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.gfx::Rect", align 8
  %5 = alloca [68 x i8], align 4
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %8 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 0
  %9 = load %"class.viz::HitTestManager"*, %"class.viz::HitTestManager"** %8, align 8
  %10 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 2
  %11 = load %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"** %10, align 8
  %12 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0
  %13 = call %"struct.viz::HitTestRegionList"* @_ZNK3viz14HitTestManager26GetActiveHitTestRegionListEPNS_34LatestLocalSurfaceIdLookupDelegateERKNS_11FrameSinkIdEPm(%"class.viz::HitTestManager"* %9, %"class.viz::LatestLocalSurfaceIdLookupDelegate"* %11, %"class.viz::FrameSinkId"* dereferenceable(8) %12, i64* nonnull %6) #12
  %14 = icmp eq %"struct.viz::HitTestRegionList"* %13, null
  br i1 %14, label %180, label %15

15:                                               ; preds = %2
  %16 = load i64, i64* %6, align 8
  %17 = call { i8, i64 } @_ZN3viz17HitTestAggregator19GetTraceIdIfUpdatedERKNS_9SurfaceIdEm(%"class.viz::HitTestAggregator"* %0, %"class.viz::SurfaceId"* dereferenceable(32) %1, i64 %16)
  %18 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), align 16
  %19 = and i8 %18, 25
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %28, label %21, !prof !3

21:                                               ; preds = %15
  %22 = extractvalue { i8, i64 } %17, 1
  %23 = extractvalue { i8, i64 } %17, 0
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i64 -1, i64 %22
  %26 = select i1 %24, i32 4096, i32 128
  %27 = call i64 @_ZN20trace_event_internal13AddTraceEventIRA27_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %26, i64 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), [27 x i8]* nonnull dereferenceable(27) @.str.2)
  br label %28

28:                                               ; preds = %15, %21
  %29 = phi i8* [ null, %15 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), %21 ]
  %30 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %15 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %21 ]
  %31 = phi i64 [ -6148914691236517206, %15 ], [ %27, %21 ]
  %32 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 12
  %33 = getelementptr inbounds %"class.base::internal::flat_tree.148", %"class.base::internal::flat_tree.148"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %33, align 8
  %35 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %36 = bitcast %"class.viz::FrameSinkId"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = ptrtoint %"class.viz::FrameSinkId"* %34 to i64
  %39 = sub i64 %37, %38
  %40 = icmp eq i64 %39, 0
  %41 = inttoptr i64 %37 to %"class.viz::FrameSinkId"*
  br i1 %40, label %70, label %42

42:                                               ; preds = %28
  %43 = ashr exact i64 %39, 3
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = load i32, i32* %45, align 4
  br label %48

48:                                               ; preds = %66, %42
  %49 = phi %"class.viz::FrameSinkId"* [ %34, %42 ], [ %68, %66 ]
  %50 = phi i64 [ %43, %42 ], [ %67, %66 ]
  %51 = lshr i64 %50, 1
  %52 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %49, i64 %51
  %53 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %52, i64 0, i32 0
  %54 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %49, i64 %51, i32 1
  %55 = load i32, i32* %53, align 4
  %56 = icmp ult i32 %55, %46
  br i1 %56, label %62, label %57

57:                                               ; preds = %48
  %58 = icmp ult i32 %46, %55
  br i1 %58, label %66, label %59

59:                                               ; preds = %57
  %60 = load i32, i32* %54, align 4
  %61 = icmp ult i32 %60, %47
  br i1 %61, label %62, label %66

62:                                               ; preds = %59, %48
  %63 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %52, i64 1
  %64 = xor i64 %51, -1
  %65 = add i64 %50, %64
  br label %66

66:                                               ; preds = %62, %59, %57
  %67 = phi i64 [ %65, %62 ], [ %51, %59 ], [ %51, %57 ]
  %68 = phi %"class.viz::FrameSinkId"* [ %63, %62 ], [ %49, %59 ], [ %49, %57 ]
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %70, label %48

70:                                               ; preds = %66, %28
  %71 = phi %"class.viz::FrameSinkId"* [ %34, %28 ], [ %68, %66 ]
  %72 = icmp eq %"class.viz::FrameSinkId"* %71, %41
  br i1 %72, label %87, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %71, i64 0, i32 0
  %77 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %71, i64 0, i32 1
  %78 = load i32, i32* %74, align 4
  %79 = load i32, i32* %76, align 4
  %80 = icmp ult i32 %78, %79
  br i1 %80, label %87, label %81

81:                                               ; preds = %73
  %82 = icmp ult i32 %79, %78
  br i1 %82, label %90, label %83

83:                                               ; preds = %81
  %84 = load i32, i32* %75, align 4
  %85 = load i32, i32* %77, align 4
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %87, label %90

87:                                               ; preds = %83, %73, %70
  %88 = getelementptr inbounds %"class.base::internal::flat_tree.148", %"class.base::internal::flat_tree.148"* %32, i64 0, i32 0
  %89 = call %"class.viz::FrameSinkId"* @_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.149"* %88, %"class.viz::FrameSinkId"* %71, %"class.viz::FrameSinkId"* dereferenceable(8) %12) #12
  br label %90

90:                                               ; preds = %81, %83, %87
  %91 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %13, i64 0, i32 4, i32 0, i32 0
  %92 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %91, align 8
  %93 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %13, i64 0, i32 4, i32 0, i32 1
  %94 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %93, align 8
  %95 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 7
  %96 = icmp eq %"struct.viz::HitTestRegion"* %92, %94
  br i1 %96, label %108, label %97

97:                                               ; preds = %90, %104
  %98 = phi i64 [ %105, %104 ], [ 1, %90 ]
  %99 = phi %"struct.viz::HitTestRegion"* [ %106, %104 ], [ %92, %90 ]
  %100 = load i32, i32* %95, align 4
  %101 = add i32 %100, -1
  %102 = zext i32 %101 to i64
  %103 = icmp ult i64 %98, %102
  br i1 %103, label %104, label %108

104:                                              ; preds = %97
  %105 = call i64 @_ZN3viz17HitTestAggregator12AppendRegionEmRKNS_13HitTestRegionE(%"class.viz::HitTestAggregator"* %0, i64 %98, %"struct.viz::HitTestRegion"* dereferenceable(100) %99)
  %106 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %99, i64 1
  %107 = icmp eq %"struct.viz::HitTestRegion"* %106, %94
  br i1 %107, label %108, label %97

108:                                              ; preds = %97, %104, %90
  %109 = phi i64 [ 1, %90 ], [ %105, %104 ], [ %98, %97 ]
  %110 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %33, align 8
  %111 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %35, align 8
  %112 = icmp eq %"class.viz::FrameSinkId"* %111, %110
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = ptrtoint %"class.viz::FrameSinkId"* %111 to i64
  br label %119

115:                                              ; preds = %108
  %116 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 879, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #12
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #12
  %118 = load i64, i64* %36, align 8
  br label %119

119:                                              ; preds = %115, %113
  %120 = phi i64 [ %114, %113 ], [ %118, %115 ]
  %121 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %110, i64 1
  %122 = ptrtoint %"class.viz::FrameSinkId"* %121 to i64
  %123 = sub i64 %120, %122
  %124 = ashr exact i64 %123, 3
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %119
  %127 = bitcast %"class.viz::FrameSinkId"* %110 to i8*
  %128 = bitcast %"class.viz::FrameSinkId"* %121 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %123, i1 false) #12
  br label %129

129:                                              ; preds = %119, %126
  %130 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %110, i64 %124
  store %"class.viz::FrameSinkId"* %130, %"class.viz::FrameSinkId"** %35, align 8
  %131 = trunc i64 %109 to i32
  %132 = add i32 %131, -1
  %133 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %13, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %13, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %13, i64 0, i32 2
  %138 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %13, i64 0, i32 3
  %139 = getelementptr inbounds [68 x i8], [68 x i8]* %5, i64 0, i64 0
  %140 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140)
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %139)
  %141 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = bitcast %"class.gfx::Rect"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* align 4 %145, i64 16, i1 false) #12
  %146 = bitcast %"class.gfx::Transform"* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %139, i8* align 4 %146, i64 68, i1 false) #12
  %147 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 0
  %148 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %147, align 8
  %149 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %148, i64 0, i32 0, i32 0
  store i32 %142, i32* %149, align 4
  %150 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %148, i64 0, i32 0, i32 1
  store i32 %144, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %148, i64 0, i32 1
  store i32 %134, i32* %151, align 4
  %152 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %148, i64 0, i32 2
  store i32 %136, i32* %152, align 4
  %153 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %148, i64 0, i32 3
  %154 = bitcast %"class.gfx::Rect"* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* nonnull align 8 %140, i64 16, i1 false) #12
  %155 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %148, i64 0, i32 4
  store i32 %132, i32* %155, align 4
  %156 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %148, i64 0, i32 5
  %157 = bitcast %"class.gfx::Transform"* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %157, i8* nonnull align 4 %139, i64 68, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %139)
  %158 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 8
  %159 = load i32, i32* %158, align 8
  %160 = add i32 %159, 1
  store i32 %160, i32* %158, align 8
  %161 = and i32 %134, 128
  %162 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 10
  %163 = load i8, i8* %162, align 8, !range !2
  %164 = zext i8 %163 to i32
  %165 = or i32 %161, %164
  %166 = icmp ne i32 %165, 0
  %167 = zext i1 %166 to i8
  store i8 %167, i8* %162, align 8
  %168 = and i32 %134, 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %174, label %170

170:                                              ; preds = %129
  %171 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 11
  %172 = load i32, i32* %171, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %171, align 4
  br label %174

174:                                              ; preds = %129, %170
  %175 = icmp eq i8* %29, null
  br i1 %175, label %180, label %176

176:                                              ; preds = %174
  %177 = load i8, i8* %29, align 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %180, label %179

179:                                              ; preds = %176
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %29, i8* %30, i64 %31) #12
  br label %180

180:                                              ; preds = %179, %176, %174, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestAggregator15SendHitTestDataEv(%"class.viz::HitTestAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 1
  %7 = bitcast %"struct.viz::AggregatedHitTestRegion"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.141"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 104
  %13 = icmp ult i64 %12, %5
  %14 = inttoptr i64 %10 to %"struct.viz::AggregatedHitTestRegion"*
  br i1 %13, label %15, label %17

15:                                               ; preds = %1
  %16 = sub nsw i64 %5, %12
  tail call void @_ZNSt3__16vectorIN3viz23AggregatedHitTestRegionENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.141"* %2, i64 %16) #12
  br label %21

17:                                               ; preds = %1
  %18 = icmp ugt i64 %12, %5
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %14, i64 %5
  store %"struct.viz::AggregatedHitTestRegion"* %20, %"struct.viz::AggregatedHitTestRegion"** %6, align 8
  br label %21

21:                                               ; preds = %15, %17, %19
  %22 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 1
  %23 = load %"class.viz::HitTestAggregatorDelegate"*, %"class.viz::HitTestAggregatorDelegate"** %22, align 8
  %24 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 3
  %25 = bitcast %"class.viz::HitTestAggregatorDelegate"* %23 to void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)***
  %26 = load void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)**, void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)*** %25, align 8
  %27 = load void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)*, void (%"class.viz::HitTestAggregatorDelegate"*, %"class.viz::FrameSinkId"*, %"class.std::__1::vector.141"*)** %26, align 8
  tail call void %27(%"class.viz::HitTestAggregatorDelegate"* %23, %"class.viz::FrameSinkId"* dereferenceable(8) %24, %"class.std::__1::vector.141"* dereferenceable(24) %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestAggregator23InsertHitTestDebugQuadsEPNSt3__16vectorINS1_10unique_ptrINS_20AggregatedRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.viz::HitTestAggregator"*, %"class.std::__1::vector.167"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %4 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %5 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %6 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %7 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %8 = alloca %"class.cc::ListContainerHelper::Iterator", align 8
  %9 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %10 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %11 = alloca %"class.absl::optional.218", align 8
  %12 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %13 = alloca %"class.cc::ListContainer<viz::DrawQuad>::Iterator", align 8
  %14 = alloca %"class.absl::optional.235", align 8
  %15 = alloca %"class.std::__1::stack", align 8
  %16 = alloca %"class.std::__1::stack.240", align 8
  %17 = alloca %"class.gfx::Transform", align 4
  %18 = alloca %"class.gfx::Transform", align 4
  %19 = alloca %"class.gfx::Transform", align 4
  %20 = alloca %"class.gfx::RectF", align 4
  %21 = alloca { i64, i64 }, align 8
  %22 = bitcast { i64, i64 }* %21 to %"class.gfx::Rect"*
  %23 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 0
  %24 = load %"class.viz::HitTestManager"*, %"class.viz::HitTestManager"** %23, align 8
  %25 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 3
  %26 = tail call %"class.base::internal::flat_tree.148"* @_ZNK3viz14HitTestManager34GetHitTestAsyncQueriedDebugRegionsERKNS_11FrameSinkIdE(%"class.viz::HitTestManager"* %24, %"class.viz::FrameSinkId"* dereferenceable(8) %25) #12
  %27 = getelementptr inbounds %"class.std::__1::vector.167", %"class.std::__1::vector.167"* %1, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr.169"*, %"class.std::__1::unique_ptr.169"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.169"* %28, i64 -1, i32 0, i32 0, i32 0
  %30 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %29, align 8
  %31 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %30, i64 0, i32 0, i32 11, i32 0
  %32 = bitcast %"class.cc::ListContainerHelper::Iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #12, !noalias !4
  %33 = getelementptr inbounds %"class.cc::ListContainer", %"class.cc::ListContainer"* %31, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %8, %"class.cc::ListContainerHelper"* %33) #12, !noalias !4
  %34 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %10, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %8, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %34, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %35) #12
  %36 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %10, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %8, i64 0, i32 1
  %38 = load i64, i64* %37, align 8, !noalias !4
  store i64 %38, i64* %36, align 8, !alias.scope !4
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #12, !noalias !4
  %39 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 8
  %40 = load i32, i32* %39, align 8
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = bitcast %union.anon.222* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #12
  call void @_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_19DebugBorderDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE(%"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull sret %9, %"class.cc::ListContainer"* %31, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull %10, i64 %41, %"class.absl::optional.218"* nonnull %11)
  %45 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %9, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %45) #12
  %46 = load i8, i8* %42, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %50 = bitcast %"class.viz::DebugBorderDrawQuad"* %49 to %"class.viz::DrawQuad"*
  call void @_ZN3viz8DrawQuadD2Ev(%"class.viz::DrawQuad"* %50) #12
  store i8 0, i8* %42, align 8
  br label %51

51:                                               ; preds = %2, %48
  %52 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %10, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %52) #12
  %53 = bitcast %"class.cc::ListContainerHelper::Iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #12, !noalias !7
  call void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %7, %"class.cc::ListContainerHelper"* %33) #12, !noalias !7
  %54 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %7, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %54, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %55) #12
  %56 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %7, i64 0, i32 1
  %58 = load i64, i64* %57, align 8, !noalias !7
  store i64 %58, i64* %56, align 8, !alias.scope !7
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #12, !noalias !7
  %59 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 11
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.absl::optional.235", %"class.absl::optional.235"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"class.absl::optional.235", %"class.absl::optional.235"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %64 = bitcast %union.anon.239* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 88, i1 false) #12
  call void @_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_18SolidColorDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE(%"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull sret %12, %"class.cc::ListContainer"* %31, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* nonnull %13, i64 %61, %"class.absl::optional.235"* nonnull %14)
  %65 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %12, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %65) #12
  %66 = load i8, i8* %62, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %51
  %69 = getelementptr inbounds %"class.absl::optional.235", %"class.absl::optional.235"* %14, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %70 = bitcast %"class.viz::SolidColorDrawQuad"* %69 to %"class.viz::DrawQuad"*
  call void @_ZN3viz8DrawQuadD2Ev(%"class.viz::DrawQuad"* %70) #12
  store i8 0, i8* %62, align 8
  br label %71

71:                                               ; preds = %51, %68
  %72 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %13, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %72) #12
  %73 = load %"class.std::__1::unique_ptr.169"*, %"class.std::__1::unique_ptr.169"** %27, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.169"* %73, i64 -1, i32 0, i32 0, i32 0
  %75 = load %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"** %74, align 8
  %76 = getelementptr inbounds %"class.viz::AggregatedRenderPass", %"class.viz::AggregatedRenderPass"* %75, i64 0, i32 0
  %77 = call %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"* %76) #12
  %78 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %77, i64 0, i32 7
  store float 2.500000e-01, float* %78, align 8
  %79 = bitcast %"class.std::__1::stack"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #12
  %80 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 32, i1 false) #12
  %83 = bitcast %"class.std::__1::stack.240"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #12
  %84 = getelementptr inbounds %"class.std::__1::stack.240", %"class.std::__1::stack.240"* %16, i64 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.std::__1::stack.240", %"class.std::__1::stack.240"* %16, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 32, i1 false) #12
  %86 = getelementptr inbounds %"class.std::__1::stack.240", %"class.std::__1::stack.240"* %16, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3gfx9TransformEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.241"* nonnull %86, i64 1) #12
  %87 = getelementptr inbounds %"class.std::__1::stack.240", %"class.std::__1::stack.240"* %16, i64 0, i32 0, i32 0
  %88 = load i64, i64* %85, align 8
  %89 = call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* nonnull %87, i64 %88) #12
  %90 = bitcast %"class.gfx::Transform"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false)
  %91 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %89, i64 0, i32 0, i32 1
  store i8 0, i8* %91, align 4
  %92 = load i64, i64* %85, align 8
  %93 = load i64, i64* %84, align 8
  %94 = add i64 %93, -1
  %95 = icmp eq i64 %92, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %71
  store i64 0, i64* %85, align 8
  br label %100

97:                                               ; preds = %71
  %98 = add i64 %92, 1
  store i64 %98, i64* %85, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97, %96
  br label %101

101:                                              ; preds = %97, %100
  %102 = phi i64 [ %94, %100 ], [ %92, %97 ]
  %103 = call dereferenceable(68) %"class.gfx::Transform"* @_ZNK4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* nonnull %87, i64 %102) #12
  %104 = load i32, i32* %39, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %361, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 0
  %108 = bitcast %"class.gfx::Transform"* %17 to i8*
  %109 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0, i32 1
  %110 = bitcast %"class.gfx::Transform"* %18 to i8*
  %111 = icmp eq %"class.base::internal::flat_tree.148"* %26, null
  %112 = getelementptr inbounds %"class.base::internal::flat_tree.148", %"class.base::internal::flat_tree.148"* %26, i64 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.base::internal::flat_tree.148", %"class.base::internal::flat_tree.148"* %26, i64 0, i32 0, i32 0, i32 1
  %114 = bitcast %"class.viz::FrameSinkId"** %113 to i64*
  %115 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0
  %116 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0, i32 0
  %117 = bitcast %"class.gfx::Transform"* %19 to i8*
  %118 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %19, i64 0, i32 0
  %119 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0
  %120 = bitcast %"class.gfx::RectF"* %20 to i8*
  %121 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %20, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %20, i64 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %20, i64 0, i32 1, i32 0
  %124 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %20, i64 0, i32 1, i32 1
  %125 = bitcast { i64, i64 }* %21 to i8*
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  %127 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  %128 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5 to i8*
  %129 = bitcast %"class.cc::ListContainerHelper::Iterator"* %6 to i8*
  %130 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %6, i64 0, i32 0
  %132 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 1
  %133 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %6, i64 0, i32 1
  %134 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0, i32 0, i32 2
  %135 = bitcast i8** %134 to %"class.viz::DebugBorderDrawQuad"**
  %136 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %5, i64 0, i32 0
  %137 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %3 to i8*
  %138 = bitcast %"class.cc::ListContainerHelper::Iterator"* %4 to i8*
  %139 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %3, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 0
  %141 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %3, i64 0, i32 0, i32 1
  %142 = getelementptr inbounds %"class.cc::ListContainerHelper::Iterator", %"class.cc::ListContainerHelper::Iterator"* %4, i64 0, i32 1
  %143 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %3, i64 0, i32 0, i32 0, i32 2
  %144 = bitcast i8** %143 to %"class.viz::SolidColorDrawQuad"**
  %145 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %3, i64 0, i32 0
  %146 = bitcast %"class.gfx::RectF"* %20 to i8*
  %147 = bitcast { i64, i64 }* %21 to i8*
  br label %148

148:                                              ; preds = %106, %356
  %149 = phi i64 [ 0, %106 ], [ %357, %356 ]
  %150 = phi i32 [ 0, %106 ], [ %314, %356 ]
  %151 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %107, align 8
  %152 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %151, i64 %149
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %108) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %108, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN3viz17HitTestAggregator23InsertHitTestDebugQuadsEPNSt3__16vectorINS1_10unique_ptrINS_20AggregatedRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE.child_to_parent to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %108, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  store i8 0, i8* %109, align 4
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %110) #12
  %153 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %151, i64 %149, i32 5
  %154 = bitcast %"class.gfx::Transform"* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %110, i8* align 4 %154, i64 68, i1 false) #12
  %155 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %18, %"class.gfx::Transform"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %110) #12
  br i1 %155, label %156, label %355

156:                                              ; preds = %148
  %157 = load i64, i64* %81, align 8
  %158 = load i64, i64* %82, align 8
  %159 = icmp ult i64 %158, %157
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = sub i64 %158, %157
  br label %166

162:                                              ; preds = %156
  %163 = load i64, i64* %80, align 8
  %164 = sub i64 %158, %157
  %165 = add i64 %164, %163
  br label %166

166:                                              ; preds = %160, %162
  %167 = phi i64 [ %161, %160 ], [ %165, %162 ]
  %168 = urem i64 %167, 3
  %169 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZN3viz17HitTestAggregator23InsertHitTestDebugQuadsEPNSt3__16vectorINS1_10unique_ptrINS_20AggregatedRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEE6colors, i64 0, i64 %168
  %170 = load i32, i32* %169, align 4
  br i1 %111, label %234, label %171

171:                                              ; preds = %166
  %172 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %112, align 8
  %173 = load i64, i64* %114, align 8
  %174 = ptrtoint %"class.viz::FrameSinkId"* %172 to i64
  %175 = sub i64 %173, %174
  %176 = icmp eq i64 %175, 0
  %177 = inttoptr i64 %173 to %"class.viz::FrameSinkId"*
  br i1 %176, label %208, label %178

178:                                              ; preds = %171
  %179 = ashr exact i64 %175, 3
  %180 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %152, i64 0, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %151, i64 %149, i32 0, i32 1
  %182 = load i32, i32* %180, align 4
  %183 = load i32, i32* %181, align 4
  br label %184

184:                                              ; preds = %202, %178
  %185 = phi %"class.viz::FrameSinkId"* [ %172, %178 ], [ %204, %202 ]
  %186 = phi i64 [ %179, %178 ], [ %203, %202 ]
  %187 = lshr i64 %186, 1
  %188 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %185, i64 %187
  %189 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %188, i64 0, i32 0
  %190 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %185, i64 %187, i32 1
  %191 = load i32, i32* %189, align 4
  %192 = icmp ult i32 %191, %182
  br i1 %192, label %198, label %193

193:                                              ; preds = %184
  %194 = icmp ult i32 %182, %191
  br i1 %194, label %202, label %195

195:                                              ; preds = %193
  %196 = load i32, i32* %190, align 4
  %197 = icmp ult i32 %196, %183
  br i1 %197, label %198, label %202

198:                                              ; preds = %195, %184
  %199 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %188, i64 1
  %200 = xor i64 %187, -1
  %201 = add i64 %186, %200
  br label %202

202:                                              ; preds = %198, %195, %193
  %203 = phi i64 [ %201, %198 ], [ %187, %195 ], [ %187, %193 ]
  %204 = phi %"class.viz::FrameSinkId"* [ %199, %198 ], [ %185, %195 ], [ %185, %193 ]
  %205 = icmp eq i64 %203, 0
  br i1 %205, label %206, label %184

206:                                              ; preds = %202
  %207 = ptrtoint %"class.viz::FrameSinkId"* %204 to i64
  br label %208

208:                                              ; preds = %206, %171
  %209 = phi i64 [ %207, %206 ], [ %174, %171 ]
  %210 = phi %"class.viz::FrameSinkId"* [ %204, %206 ], [ %172, %171 ]
  %211 = icmp eq %"class.viz::FrameSinkId"* %210, %177
  br i1 %211, label %229, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %152, i64 0, i32 0, i32 0
  %214 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %151, i64 %149, i32 0, i32 1
  %215 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %210, i64 0, i32 0
  %216 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %210, i64 0, i32 1
  %217 = load i32, i32* %213, align 4
  %218 = load i32, i32* %215, align 4
  %219 = icmp ult i32 %217, %218
  br i1 %219, label %229, label %220

220:                                              ; preds = %212
  %221 = icmp ult i32 %218, %217
  br i1 %221, label %226, label %222

222:                                              ; preds = %220
  %223 = load i32, i32* %214, align 4
  %224 = load i32, i32* %216, align 4
  %225 = icmp ult i32 %223, %224
  br i1 %225, label %229, label %226

226:                                              ; preds = %222, %220
  %227 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %210, i64 1
  %228 = ptrtoint %"class.viz::FrameSinkId"* %227 to i64
  br label %229

229:                                              ; preds = %208, %212, %222, %226
  %230 = phi i64 [ %228, %226 ], [ %209, %208 ], [ %209, %222 ], [ %209, %212 ]
  %231 = ptrtoint %"class.viz::FrameSinkId"* %210 to i64
  %232 = icmp eq i64 %230, %231
  %233 = select i1 %232, i32 %170, i32 -65536
  br label %234

234:                                              ; preds = %229, %166
  %235 = phi i32 [ %170, %166 ], [ %233, %229 ]
  call void @_ZN4base14circular_dequeIjE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %115, i64 1) #12
  %236 = load i64, i64* %82, align 8
  %237 = call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* nonnull %116, i64 %236) #12
  %238 = trunc i64 %149 to i32
  store i32 %238, i32* %237, align 4
  %239 = load i64, i64* %82, align 8
  %240 = load i64, i64* %80, align 8
  %241 = add i64 %240, -1
  %242 = icmp eq i64 %239, %241
  br i1 %242, label %243, label %244

243:                                              ; preds = %234
  store i64 0, i64* %82, align 8
  br label %247

244:                                              ; preds = %234
  %245 = add i64 %239, 1
  store i64 %245, i64* %82, align 8
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244, %243
  br label %248

248:                                              ; preds = %244, %247
  %249 = phi i64 [ %241, %247 ], [ %239, %244 ]
  %250 = call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* nonnull %116, i64 %249) #12
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %117) #12
  %251 = load i64, i64* %85, align 8
  %252 = icmp eq i64 %251, 0
  %253 = load i64, i64* %84, align 8
  %254 = select i1 %252, i64 %253, i64 %251
  %255 = add i64 %254, -1
  %256 = call dereferenceable(68) %"class.gfx::Transform"* @_ZNK4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* nonnull %87, i64 %255) #12
  %257 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %256, i64 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %118, %class.SkMatrix44* dereferenceable(68) %257, %class.SkMatrix44* nonnull dereferenceable(68) %119) #12
  call void @_ZN4base14circular_dequeIN3gfx9TransformEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.241"* nonnull %86, i64 1) #12
  %258 = load i64, i64* %85, align 8
  %259 = call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* nonnull %87, i64 %258) #12
  %260 = bitcast %"class.gfx::Transform"* %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %260, i8* nonnull align 4 %117, i64 68, i1 false) #12
  %261 = load i64, i64* %85, align 8
  %262 = load i64, i64* %84, align 8
  %263 = add i64 %262, -1
  %264 = icmp eq i64 %261, %263
  br i1 %264, label %265, label %266

265:                                              ; preds = %248
  store i64 0, i64* %85, align 8
  br label %269

266:                                              ; preds = %248
  %267 = add i64 %261, 1
  store i64 %267, i64* %85, align 8
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266, %265
  br label %270

270:                                              ; preds = %266, %269
  %271 = phi i64 [ %263, %269 ], [ %261, %266 ]
  %272 = call dereferenceable(68) %"class.gfx::Transform"* @_ZNK4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* nonnull %87, i64 %271) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %117) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %146, i8 -1, i64 16, i1 false)
  %273 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %107, align 8
  %274 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %273, i64 %149, i32 3, i32 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = sitofp i32 %275 to float
  %277 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %273, i64 %149, i32 3, i32 0, i32 1
  %278 = load i32, i32* %277, align 4
  %279 = sitofp i32 %278 to float
  %280 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %273, i64 %149, i32 3, i32 1, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %273, i64 %149, i32 3, i32 1, i32 1
  %283 = load i32, i32* %282, align 4
  store float %276, float* %121, align 4
  store float %279, float* %122, align 4
  %284 = icmp sgt i32 %281, 0
  %285 = select i1 %284, i32 %281, i32 0
  %286 = sitofp i32 %285 to float
  store float %286, float* %123, align 4
  %287 = icmp sgt i32 %283, 0
  %288 = select i1 %287, i32 %283, i32 0
  %289 = sitofp i32 %288 to float
  store float %289, float* %124, align 4
  %290 = load i64, i64* %85, align 8
  %291 = icmp eq i64 %290, 0
  %292 = load i64, i64* %84, align 8
  %293 = select i1 %291, i64 %292, i64 %290
  %294 = add i64 %293, -1
  %295 = call dereferenceable(68) %"class.gfx::Transform"* @_ZNK4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* nonnull %87, i64 %294) #12
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %295, %"class.gfx::RectF"* nonnull %20) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 16, i1 false)
  %296 = call { i64, i64 } @_ZN3gfx14ToEnclosedRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %20) #12
  %297 = extractvalue { i64, i64 } %296, 0
  store i64 %297, i64* %127, align 8
  %298 = extractvalue { i64, i64 } %296, 1
  store i64 %298, i64* %126, align 8
  %299 = load i32, i32* %59, align 4
  %300 = add i32 %299, %238
  %301 = zext i32 %300 to i64
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %128) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #12
  call void @_ZN2cc19ListContainerHelper10IteratorAtEm(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %6, %"class.cc::ListContainerHelper"* %33, i64 %301) #12
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %130, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %131) #12
  %302 = load i64, i64* %133, align 8
  store i64 %302, i64* %132, align 8
  %303 = load %"class.viz::DebugBorderDrawQuad"*, %"class.viz::DebugBorderDrawQuad"** %135, align 8
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %136) #12
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %128) #12
  call void @_ZN3viz19DebugBorderDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_ji(%"class.viz::DebugBorderDrawQuad"* %303, %"class.viz::SharedQuadState"* %77, %"class.gfx::Rect"* nonnull dereferenceable(16) %22, %"class.gfx::Rect"* nonnull dereferenceable(16) %22, i32 %235, i32 5) #12
  %304 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %151, i64 %149, i32 1
  %305 = load i32, i32* %304, align 4
  %306 = and i32 %305, 8
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %313, label %308

308:                                              ; preds = %270
  %309 = add i32 %150, 1
  %310 = zext i32 %150 to i64
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %138) #12
  call void @_ZN2cc19ListContainerHelper10IteratorAtEm(%"class.cc::ListContainerHelper::Iterator"* nonnull sret %4, %"class.cc::ListContainerHelper"* %33, i64 %310) #12
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %139, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %140) #12
  %311 = load i64, i64* %142, align 8
  store i64 %311, i64* %141, align 8
  %312 = load %"class.viz::SolidColorDrawQuad"*, %"class.viz::SolidColorDrawQuad"** %144, align 8
  call void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %145) #12
  call void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %138) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #12
  call void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"* %312, %"class.viz::SharedQuadState"* %77, %"class.gfx::Rect"* nonnull dereferenceable(16) %22, %"class.gfx::Rect"* nonnull dereferenceable(16) %22, i32 %235, i1 zeroext false) #12
  br label %313

313:                                              ; preds = %270, %308
  %314 = phi i32 [ %309, %308 ], [ %150, %270 ]
  %315 = load i64, i64* %81, align 8
  %316 = load i64, i64* %82, align 8
  %317 = icmp eq i64 %315, %316
  br i1 %317, label %356, label %318

318:                                              ; preds = %313, %333
  %319 = phi i64 [ %353, %333 ], [ %316, %313 ]
  %320 = icmp eq i64 %319, 0
  %321 = load i64, i64* %80, align 8
  %322 = select i1 %320, i64 %321, i64 %319
  %323 = add i64 %322, -1
  %324 = call dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* nonnull %116, i64 %323) #12
  %325 = load i32, i32* %324, align 4
  %326 = zext i32 %325 to i64
  %327 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %107, align 8
  %328 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %327, i64 %326, i32 4
  %329 = load i32, i32* %328, align 4
  %330 = add i32 %329, %325
  %331 = zext i32 %330 to i64
  %332 = icmp ult i64 %149, %331
  br i1 %332, label %356, label %333

333:                                              ; preds = %318
  %334 = load i64, i64* %82, align 8
  %335 = icmp eq i64 %334, 0
  %336 = load i64, i64* %80, align 8
  %337 = select i1 %335, i64 %336, i64 %334
  %338 = add i64 %337, -1
  store i64 %338, i64* %82, align 8
  %339 = call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* nonnull %116, i64 %338) #12
  %340 = load i64, i64* %82, align 8
  %341 = add i64 %340, 1
  %342 = call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* nonnull %116, i64 %341) #12
  call void @_ZN4base14circular_dequeIjE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* nonnull %115) #12
  %343 = load i64, i64* %85, align 8
  %344 = icmp eq i64 %343, 0
  %345 = load i64, i64* %84, align 8
  %346 = select i1 %344, i64 %345, i64 %343
  %347 = add i64 %346, -1
  store i64 %347, i64* %85, align 8
  %348 = call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* nonnull %87, i64 %347) #12
  %349 = load i64, i64* %85, align 8
  %350 = add i64 %349, 1
  %351 = call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* nonnull %87, i64 %350) #12
  call void @_ZN4base14circular_dequeIN3gfx9TransformEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.241"* nonnull %86) #12
  %352 = load i64, i64* %81, align 8
  %353 = load i64, i64* %82, align 8
  %354 = icmp eq i64 %352, %353
  br i1 %354, label %356, label %318

355:                                              ; preds = %148
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %108) #12
  br label %361

356:                                              ; preds = %318, %333, %313
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %108) #12
  %357 = add nuw nsw i64 %149, 1
  %358 = load i32, i32* %39, align 8
  %359 = zext i32 %358 to i64
  %360 = icmp ult i64 %357, %359
  br i1 %360, label %148, label %361

361:                                              ; preds = %356, %101, %355
  call void @_ZN4base14circular_dequeIN3gfx9TransformEED2Ev(%"class.base::circular_deque.241"* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #12
  %362 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %15, i64 0, i32 0
  call void @_ZN4base14circular_dequeIjED2Ev(%"class.base::circular_deque"* nonnull %362) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::internal::flat_tree.148"* @_ZNK3viz14HitTestManager34GetHitTestAsyncQueriedDebugRegionsERKNS_11FrameSinkIdE(%"class.viz::HitTestManager"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_19DebugBorderDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE(%"class.cc::ListContainer<viz::DrawQuad>::Iterator"* noalias sret, %"class.cc::ListContainer"*, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"*, i64, %"class.absl::optional.218"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %7 = getelementptr inbounds %"class.cc::ListContainer", %"class.cc::ListContainer"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0
  tail call void @_ZN2cc19ListContainerHelper36InsertBeforeAndInvalidateAllPointersEPNS0_8IteratorEm(%"class.cc::ListContainerHelper"* %7, %"class.cc::ListContainerHelper::Iterator"* %8, i64 %3) #12
  %9 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0
  %12 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -86, i64 32, i1 false)
  tail call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* %10, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %11) #12
  %13 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %9, align 8
  %15 = icmp eq i64 %3, 0
  br i1 %15, label %42, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast i8** %18 to %"class.viz::DebugBorderDrawQuad"**
  %20 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %21 = bitcast %"class.viz::DebugBorderDrawQuad"* %20 to %"class.viz::DrawQuad"*
  %22 = getelementptr inbounds %"class.absl::optional.218", %"class.absl::optional.218"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %23 = bitcast i32* %22 to i64*
  %24 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %6 to i8*
  br label %25

25:                                               ; preds = %37, %16
  %26 = phi i64 [ 0, %16 ], [ %40, %37 ]
  %27 = load i8, i8* %17, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = load %"class.viz::DebugBorderDrawQuad"*, %"class.viz::DebugBorderDrawQuad"** %19, align 8
  br i1 %28, label %36, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.viz::DebugBorderDrawQuad"* %29 to %"class.viz::DrawQuad"*
  call void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"* %31, %"class.viz::DrawQuad"* dereferenceable(80) %21) #12
  %32 = getelementptr inbounds %"class.viz::DebugBorderDrawQuad", %"class.viz::DebugBorderDrawQuad"* %29, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz19DebugBorderDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.viz::DebugBorderDrawQuad", %"class.viz::DebugBorderDrawQuad"* %29, i64 0, i32 1
  %34 = bitcast i32* %33 to i64*
  %35 = load i64, i64* %23, align 4
  store i64 %35, i64* %34, align 4
  br label %37

36:                                               ; preds = %25
  call void @_ZN3viz19DebugBorderDrawQuadC1Ev(%"class.viz::DebugBorderDrawQuad"* %29) #12
  br label %37

37:                                               ; preds = %36, %30
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %6, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %11) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  %38 = load i64, i64* %13, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %13, align 8
  %40 = add nuw i64 %26, 1
  %41 = icmp eq i64 %40, %3
  br i1 %41, label %42, label %25

42:                                               ; preds = %37, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD2Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13ListContainerIN3viz8DrawQuadEE36InsertBeforeAndInvalidateAllPointersINS1_18SolidColorDrawQuadEEENS3_8IteratorES6_mN4absl8optionalIT_EE(%"class.cc::ListContainer<viz::DrawQuad>::Iterator"* noalias sret, %"class.cc::ListContainer"*, %"class.cc::ListContainer<viz::DrawQuad>::Iterator"*, i64, %"class.absl::optional.235"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %7 = getelementptr inbounds %"class.cc::ListContainer", %"class.cc::ListContainer"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0
  tail call void @_ZN2cc19ListContainerHelper36InsertBeforeAndInvalidateAllPointersEPNS0_8IteratorEm(%"class.cc::ListContainerHelper"* %7, %"class.cc::ListContainerHelper::Iterator"* %8, i64 %3) #12
  %9 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0
  %12 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -86, i64 32, i1 false)
  tail call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* %10, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %11) #12
  %13 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %9, align 8
  %15 = icmp eq i64 %3, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.absl::optional.235", %"class.absl::optional.235"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::Iterator", %"class.cc::ListContainer<viz::DrawQuad>::Iterator"* %2, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast i8** %18 to %"class.viz::SolidColorDrawQuad"**
  %20 = getelementptr inbounds %"class.absl::optional.235", %"class.absl::optional.235"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %21 = bitcast %"class.viz::SolidColorDrawQuad"* %20 to %"class.viz::DrawQuad"*
  %22 = getelementptr inbounds %"class.absl::optional.235", %"class.absl::optional.235"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %23 = bitcast i32* %22 to i8*
  %24 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %6 to i8*
  br label %25

25:                                               ; preds = %36, %16
  %26 = phi i64 [ 0, %16 ], [ %39, %36 ]
  %27 = load i8, i8* %17, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = load %"class.viz::SolidColorDrawQuad"*, %"class.viz::SolidColorDrawQuad"** %19, align 8
  br i1 %28, label %35, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.viz::SolidColorDrawQuad"* %29 to %"class.viz::DrawQuad"*
  call void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"* %31, %"class.viz::DrawQuad"* dereferenceable(80) %21) #12
  %32 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %29, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz18SolidColorDrawQuadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %29, i64 0, i32 1
  %34 = bitcast i32* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %23, i64 5, i1 false) #12
  br label %36

35:                                               ; preds = %25
  call void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"* %29) #12
  br label %36

36:                                               ; preds = %35, %30
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %6, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %11) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  %37 = load i64, i64* %13, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %13, align 8
  %39 = add nuw i64 %26, 1
  %40 = icmp eq i64 %39, %3
  br i1 %40, label %41, label %25

41:                                               ; preds = %36, %5
  ret void
}

declare %"class.viz::SharedQuadState"* @_ZN3viz18RenderPassInternal30CreateAndAppendSharedQuadStateEv(%"class.viz::RenderPassInternal"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #3

declare void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #3

declare { i64, i64 } @_ZN3gfx14ToEnclosedRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3viz19DebugBorderDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_ji(%"class.viz::DebugBorderDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32, i32) local_unnamed_addr #3

declare void @_ZN3viz18SolidColorDrawQuad6SetNewEPKNS_15SharedQuadStateERKN3gfx4RectES7_jb(%"class.viz::SolidColorDrawQuad"*, %"class.viz::SharedQuadState"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN3viz17HitTestAggregator19GetTraceIdIfUpdatedERKNS_9SurfaceIdEm(%"class.viz::HitTestAggregator"*, %"class.viz::SurfaceId"* dereferenceable(32), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), align 16
  %6 = and i8 %5, 9
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 13
  %10 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::flat_map.156", %"class.base::flat_map.156"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %11, align 8
  %13 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair.160"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint %"struct.std::__1::pair.160"* %12 to i64
  %17 = sub i64 %15, %16
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %15 to %"struct.std::__1::pair.160"*
  br i1 %18, label %48, label %20

20:                                               ; preds = %8
  %21 = ashr exact i64 %17, 4
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %24 = load i32, i32* %22, align 4
  %25 = load i32, i32* %23, align 4
  br label %26

26:                                               ; preds = %44, %20
  %27 = phi %"struct.std::__1::pair.160"* [ %12, %20 ], [ %46, %44 ]
  %28 = phi i64 [ %21, %20 ], [ %45, %44 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %30, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %27, i64 %29, i32 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, %24
  br i1 %34, label %40, label %35

35:                                               ; preds = %26
  %36 = icmp ult i32 %24, %33
  br i1 %36, label %44, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, %25
  br i1 %39, label %40, label %44

40:                                               ; preds = %37, %26
  %41 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %30, i64 1
  %42 = xor i64 %29, -1
  %43 = add i64 %28, %42
  br label %44

44:                                               ; preds = %40, %37, %35
  %45 = phi i64 [ %43, %40 ], [ %29, %37 ], [ %29, %35 ]
  %46 = phi %"struct.std::__1::pair.160"* [ %41, %40 ], [ %27, %37 ], [ %27, %35 ]
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %26

48:                                               ; preds = %44, %8
  %49 = phi %"struct.std::__1::pair.160"* [ %12, %8 ], [ %46, %44 ]
  %50 = icmp eq %"struct.std::__1::pair.160"* %49, %19
  br i1 %50, label %65, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %49, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %49, i64 0, i32 0, i32 1
  %56 = load i32, i32* %52, align 4
  %57 = load i32, i32* %54, align 4
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %51
  %60 = icmp ult i32 %57, %56
  br i1 %60, label %69, label %61

61:                                               ; preds = %59
  %62 = load i32, i32* %53, align 4
  %63 = load i32, i32* %55, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %61, %51, %48
  %66 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #12
  store i64 0, i64* %4, align 8
  %67 = getelementptr inbounds %"class.base::flat_map.156", %"class.base::flat_map.156"* %9, i64 0, i32 0, i32 0
  %68 = call %"struct.std::__1::pair.160"* @_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.158"* %67, %"struct.std::__1::pair.160"* %49, %"class.viz::FrameSinkId"* dereferenceable(8) %10, i64* nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #12
  br label %69

69:                                               ; preds = %59, %61, %65
  %70 = phi %"struct.std::__1::pair.160"* [ %68, %65 ], [ %49, %61 ], [ %49, %59 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %70, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, %2
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  store i64 %2, i64* %71, align 8
  %75 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 0
  %76 = load %"class.viz::HitTestManager"*, %"class.viz::HitTestManager"** %75, align 8
  %77 = call i64 @_ZNK3viz14HitTestManager10GetTraceIdERKNS_9SurfaceIdE(%"class.viz::HitTestManager"* %76, %"class.viz::SurfaceId"* dereferenceable(32) %1) #12
  %78 = xor i64 %77, -1
  br label %79

79:                                               ; preds = %3, %69, %74
  %80 = phi i8 [ 1, %74 ], [ 0, %3 ], [ 0, %69 ]
  %81 = phi i64 [ %78, %74 ], [ undef, %3 ], [ undef, %69 ]
  %82 = insertvalue { i8, i64 } undef, i8 %80, 0
  %83 = insertvalue { i8, i64 } %82, i64 %81, 1
  ret { i8, i64 } %83
}

declare i64 @_ZNK3viz14HitTestManager10GetTraceIdERKNS_9SurfaceIdE(%"class.viz::HitTestManager"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #3

declare %"struct.viz::HitTestRegionList"* @_ZNK3viz14HitTestManager26GetActiveHitTestRegionListEPNS_34LatestLocalSurfaceIdLookupDelegateERKNS_11FrameSinkIdEPm(%"class.viz::HitTestManager"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"* dereferenceable(8), i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRA27_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, [27 x i8]* dereferenceable(27)) local_unnamed_addr #4 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 6, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds [27 x i8], [27 x i8]* %8, i64 0, i64 0
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %20, i8** %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #12
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #12
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #12
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #12
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3viz17HitTestAggregator12AppendRegionEmRKNS_13HitTestRegionE(%"class.viz::HitTestAggregator"*, i64, %"struct.viz::HitTestRegion"* dereferenceable(100)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Rect", align 8
  %5 = alloca [68 x i8], align 4
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = alloca i64, align 8
  %8 = alloca %"class.viz::LocalSurfaceId", align 8
  %9 = alloca %"class.viz::SurfaceId", align 8
  %10 = add i64 %1, 1
  %11 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  %14 = zext i32 %13 to i64
  %15 = icmp ult i64 %10, %14
  br i1 %15, label %41, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 8
  %19 = icmp ugt i32 %12, %18
  br i1 %19, label %363, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, %12
  store i32 %23, i32* %11, align 4
  %24 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9
  %25 = zext i32 %23 to i64
  %26 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 1
  %27 = bitcast %"struct.viz::AggregatedHitTestRegion"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.141"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = sdiv exact i64 %31, 104
  %33 = icmp ult i64 %32, %25
  %34 = inttoptr i64 %30 to %"struct.viz::AggregatedHitTestRegion"*
  br i1 %33, label %35, label %37

35:                                               ; preds = %20
  %36 = sub nsw i64 %25, %32
  tail call void @_ZNSt3__16vectorIN3viz23AggregatedHitTestRegionENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.141"* %24, i64 %36) #12
  br label %41

37:                                               ; preds = %20
  %38 = icmp ugt i64 %32, %25
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %34, i64 %25
  store %"struct.viz::AggregatedHitTestRegion"* %40, %"struct.viz::AggregatedHitTestRegion"** %26, align 8
  br label %41

41:                                               ; preds = %39, %37, %35, %3
  %42 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 4
  %48 = bitcast %"class.gfx::Transform"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %48, i64 68, i1 false) #12
  %49 = and i32 %43, 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %319, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 12
  %53 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2
  %54 = getelementptr inbounds %"class.base::internal::flat_tree.148", %"class.base::internal::flat_tree.148"* %52, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %54, align 8
  %56 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %57 = bitcast %"class.viz::FrameSinkId"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = ptrtoint %"class.viz::FrameSinkId"* %55 to i64
  %60 = sub i64 %58, %59
  %61 = icmp eq i64 %60, 0
  %62 = inttoptr i64 %58 to %"class.viz::FrameSinkId"*
  br i1 %61, label %93, label %63

63:                                               ; preds = %51
  %64 = ashr exact i64 %60, 3
  %65 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %53, i64 0, i32 0
  %66 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 1
  %67 = load i32, i32* %65, align 4
  %68 = load i32, i32* %66, align 4
  br label %69

69:                                               ; preds = %87, %63
  %70 = phi %"class.viz::FrameSinkId"* [ %55, %63 ], [ %89, %87 ]
  %71 = phi i64 [ %64, %63 ], [ %88, %87 ]
  %72 = lshr i64 %71, 1
  %73 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %70, i64 %72
  %74 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %73, i64 0, i32 0
  %75 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %70, i64 %72, i32 1
  %76 = load i32, i32* %74, align 4
  %77 = icmp ult i32 %76, %67
  br i1 %77, label %83, label %78

78:                                               ; preds = %69
  %79 = icmp ult i32 %67, %76
  br i1 %79, label %87, label %80

80:                                               ; preds = %78
  %81 = load i32, i32* %75, align 4
  %82 = icmp ult i32 %81, %68
  br i1 %82, label %83, label %87

83:                                               ; preds = %80, %69
  %84 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %73, i64 1
  %85 = xor i64 %72, -1
  %86 = add i64 %71, %85
  br label %87

87:                                               ; preds = %83, %80, %78
  %88 = phi i64 [ %86, %83 ], [ %72, %80 ], [ %72, %78 ]
  %89 = phi %"class.viz::FrameSinkId"* [ %84, %83 ], [ %70, %80 ], [ %70, %78 ]
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %91, label %69

91:                                               ; preds = %87
  %92 = ptrtoint %"class.viz::FrameSinkId"* %89 to i64
  br label %93

93:                                               ; preds = %91, %51
  %94 = phi i64 [ %92, %91 ], [ %59, %51 ]
  %95 = phi %"class.viz::FrameSinkId"* [ %89, %91 ], [ %55, %51 ]
  %96 = icmp eq %"class.viz::FrameSinkId"* %95, %62
  br i1 %96, label %111, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %53, i64 0, i32 0
  %99 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 1
  %100 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %95, i64 0, i32 0
  %101 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %95, i64 0, i32 1
  %102 = load i32, i32* %98, align 4
  %103 = load i32, i32* %100, align 4
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %111, label %105

105:                                              ; preds = %97
  %106 = icmp ult i32 %103, %102
  br i1 %106, label %361, label %107

107:                                              ; preds = %105
  %108 = load i32, i32* %99, align 4
  %109 = load i32, i32* %101, align 4
  %110 = icmp ult i32 %108, %109
  br i1 %110, label %111, label %361

111:                                              ; preds = %93, %97, %107
  %112 = ptrtoint %"class.viz::FrameSinkId"* %95 to i64
  %113 = icmp eq i64 %94, %112
  br i1 %113, label %114, label %361

114:                                              ; preds = %111
  br i1 %61, label %143, label %115

115:                                              ; preds = %114
  %116 = ashr exact i64 %60, 3
  %117 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %53, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 1
  %119 = load i32, i32* %117, align 4
  %120 = load i32, i32* %118, align 4
  br label %121

121:                                              ; preds = %139, %115
  %122 = phi %"class.viz::FrameSinkId"* [ %55, %115 ], [ %141, %139 ]
  %123 = phi i64 [ %116, %115 ], [ %140, %139 ]
  %124 = lshr i64 %123, 1
  %125 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %122, i64 %124
  %126 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %125, i64 0, i32 0
  %127 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %122, i64 %124, i32 1
  %128 = load i32, i32* %126, align 4
  %129 = icmp ult i32 %128, %119
  br i1 %129, label %135, label %130

130:                                              ; preds = %121
  %131 = icmp ult i32 %119, %128
  br i1 %131, label %139, label %132

132:                                              ; preds = %130
  %133 = load i32, i32* %127, align 4
  %134 = icmp ult i32 %133, %120
  br i1 %134, label %135, label %139

135:                                              ; preds = %132, %121
  %136 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %125, i64 1
  %137 = xor i64 %124, -1
  %138 = add i64 %123, %137
  br label %139

139:                                              ; preds = %135, %132, %130
  %140 = phi i64 [ %138, %135 ], [ %124, %132 ], [ %124, %130 ]
  %141 = phi %"class.viz::FrameSinkId"* [ %136, %135 ], [ %122, %132 ], [ %122, %130 ]
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %143, label %121

143:                                              ; preds = %139, %114
  %144 = phi %"class.viz::FrameSinkId"* [ %55, %114 ], [ %141, %139 ]
  %145 = icmp eq %"class.viz::FrameSinkId"* %144, %62
  br i1 %145, label %160, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %53, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 1
  %149 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %144, i64 0, i32 0
  %150 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %144, i64 0, i32 1
  %151 = load i32, i32* %147, align 4
  %152 = load i32, i32* %149, align 4
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %160, label %154

154:                                              ; preds = %146
  %155 = icmp ult i32 %152, %151
  br i1 %155, label %163, label %156

156:                                              ; preds = %154
  %157 = load i32, i32* %148, align 4
  %158 = load i32, i32* %150, align 4
  %159 = icmp ult i32 %157, %158
  br i1 %159, label %160, label %163

160:                                              ; preds = %156, %146, %143
  %161 = getelementptr inbounds %"class.base::internal::flat_tree.148", %"class.base::internal::flat_tree.148"* %52, i64 0, i32 0
  %162 = tail call %"class.viz::FrameSinkId"* @_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.149"* %161, %"class.viz::FrameSinkId"* %144, %"class.viz::FrameSinkId"* dereferenceable(8) %53) #12
  br label %163

163:                                              ; preds = %154, %156, %160
  %164 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #12
  store i64 -6148914691236517206, i64* %7, align 8
  %165 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 0
  %166 = load %"class.viz::HitTestManager"*, %"class.viz::HitTestManager"** %165, align 8
  %167 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 2
  %168 = load %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"** %167, align 8
  %169 = call %"struct.viz::HitTestRegionList"* @_ZNK3viz14HitTestManager26GetActiveHitTestRegionListEPNS_34LatestLocalSurfaceIdLookupDelegateERKNS_11FrameSinkIdEPm(%"class.viz::HitTestManager"* %166, %"class.viz::LatestLocalSurfaceIdLookupDelegate"* %168, %"class.viz::FrameSinkId"* dereferenceable(8) %53, i64* nonnull %7) #12
  %170 = icmp eq %"struct.viz::HitTestRegionList"* %169, null
  br i1 %170, label %242, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %169, i64 0, i32 3, i32 0, i32 1
  %173 = load i8, i8* %172, align 4
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %169, i64 0, i32 3
  call void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"* nonnull %6, %"class.gfx::Transform"* dereferenceable(68) %176) #12
  br label %177

177:                                              ; preds = %175, %171
  %178 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %169, i64 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %169, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), align 16
  %183 = and i8 %182, 9
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %225, label %185

185:                                              ; preds = %177
  %186 = bitcast %"class.viz::LocalSurfaceId"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #12
  %187 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %8, i64 0, i32 0
  %188 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %8, i64 0, i32 1
  %189 = bitcast %"class.viz::LocalSurfaceId"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 24, i1 false)
  %190 = load %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"** %167, align 8
  %191 = bitcast %"class.viz::LatestLocalSurfaceIdLookupDelegate"* %190 to void (%"class.viz::LocalSurfaceId"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"*)***
  %192 = load void (%"class.viz::LocalSurfaceId"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"*)**, void (%"class.viz::LocalSurfaceId"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"*)*** %191, align 8
  %193 = load void (%"class.viz::LocalSurfaceId"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"*)*, void (%"class.viz::LocalSurfaceId"*, %"class.viz::LatestLocalSurfaceIdLookupDelegate"*, %"class.viz::FrameSinkId"*)** %192, align 8
  call void %193(%"class.viz::LocalSurfaceId"* nonnull sret %8, %"class.viz::LatestLocalSurfaceIdLookupDelegate"* %190, %"class.viz::FrameSinkId"* dereferenceable(8) %53) #12
  %194 = bitcast %"class.viz::SurfaceId"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %194) #12
  %195 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 0, i32 1
  %197 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 0
  %198 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 1
  %199 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %53, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %195, align 8
  %201 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 1
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %196, align 4
  %203 = load i32, i32* %187, align 8
  store i32 %203, i32* %197, align 8
  %204 = load i32, i32* %188, align 4
  store i32 %204, i32* %198, align 4
  %205 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %9, i64 0, i32 1, i32 2
  %206 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %8, i64 0, i32 2
  %207 = bitcast %"class.base::UnguessableToken"* %205 to i8*
  %208 = bitcast %"class.base::UnguessableToken"* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 16, i1 false) #12
  %209 = load i64, i64* %7, align 8
  %210 = call { i8, i64 } @_ZN3viz17HitTestAggregator19GetTraceIdIfUpdatedERKNS_9SurfaceIdEm(%"class.viz::HitTestAggregator"* %0, %"class.viz::SurfaceId"* nonnull dereferenceable(32) %9, i64 %209)
  %211 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), align 16
  %212 = and i8 %211, 25
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %224, label %214, !prof !3

214:                                              ; preds = %185
  %215 = extractvalue { i8, i64 } %210, 1
  %216 = extractvalue { i8, i64 } %210, 0
  %217 = icmp eq i8 %216, 0
  %218 = select i1 %217, i64 -1, i64 %215
  %219 = select i1 %217, i32 4096, i32 128
  %220 = call i64 @_ZN20trace_event_internal13AddTraceEventIRA21_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %219, i64 %218, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), [21 x i8]* nonnull dereferenceable(21) @.str.3)
  %221 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), align 16
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %224, label %223

223:                                              ; preds = %214
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 227, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i64 %220) #12
  br label %224

224:                                              ; preds = %185, %214, %223
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %194) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #12
  br label %225

225:                                              ; preds = %177, %224
  %226 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %169, i64 0, i32 4, i32 0, i32 0
  %227 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %226, align 8
  %228 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %169, i64 0, i32 4, i32 0, i32 1
  %229 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %228, align 8
  %230 = icmp eq %"struct.viz::HitTestRegion"* %227, %229
  br i1 %230, label %242, label %231

231:                                              ; preds = %225, %231
  %232 = phi i64 [ %234, %231 ], [ %10, %225 ]
  %233 = phi %"struct.viz::HitTestRegion"* [ %239, %231 ], [ %227, %225 ]
  %234 = call i64 @_ZN3viz17HitTestAggregator12AppendRegionEmRKNS_13HitTestRegionE(%"class.viz::HitTestAggregator"* %0, i64 %232, %"struct.viz::HitTestRegion"* dereferenceable(100) %233)
  %235 = load i32, i32* %11, align 4
  %236 = add i32 %235, -1
  %237 = zext i32 %236 to i64
  %238 = icmp uge i64 %234, %237
  %239 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %233, i64 1
  %240 = icmp eq %"struct.viz::HitTestRegion"* %239, %229
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %231

242:                                              ; preds = %231, %225, %163
  %243 = phi i32 [ 4, %163 ], [ %181, %225 ], [ %181, %231 ]
  %244 = phi i32 [ 72, %163 ], [ %179, %225 ], [ %179, %231 ]
  %245 = phi i64 [ %10, %163 ], [ %10, %225 ], [ %234, %231 ]
  %246 = or i32 %244, %43
  %247 = or i32 %243, %45
  %248 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %54, align 8
  %249 = load i64, i64* %57, align 8
  %250 = ptrtoint %"class.viz::FrameSinkId"* %248 to i64
  %251 = sub i64 %249, %250
  %252 = icmp eq i64 %251, 0
  %253 = inttoptr i64 %249 to %"class.viz::FrameSinkId"*
  br i1 %252, label %284, label %254

254:                                              ; preds = %242
  %255 = ashr exact i64 %251, 3
  %256 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %53, i64 0, i32 0
  %257 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 1
  %258 = load i32, i32* %256, align 4
  %259 = load i32, i32* %257, align 4
  br label %260

260:                                              ; preds = %278, %254
  %261 = phi %"class.viz::FrameSinkId"* [ %248, %254 ], [ %280, %278 ]
  %262 = phi i64 [ %255, %254 ], [ %279, %278 ]
  %263 = lshr i64 %262, 1
  %264 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %261, i64 %263
  %265 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %264, i64 0, i32 0
  %266 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %261, i64 %263, i32 1
  %267 = load i32, i32* %265, align 4
  %268 = icmp ult i32 %267, %258
  br i1 %268, label %274, label %269

269:                                              ; preds = %260
  %270 = icmp ult i32 %258, %267
  br i1 %270, label %278, label %271

271:                                              ; preds = %269
  %272 = load i32, i32* %266, align 4
  %273 = icmp ult i32 %272, %259
  br i1 %273, label %274, label %278

274:                                              ; preds = %271, %260
  %275 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %264, i64 1
  %276 = xor i64 %263, -1
  %277 = add i64 %262, %276
  br label %278

278:                                              ; preds = %274, %271, %269
  %279 = phi i64 [ %277, %274 ], [ %263, %271 ], [ %263, %269 ]
  %280 = phi %"class.viz::FrameSinkId"* [ %275, %274 ], [ %261, %271 ], [ %261, %269 ]
  %281 = icmp eq i64 %279, 0
  br i1 %281, label %282, label %260

282:                                              ; preds = %278
  %283 = ptrtoint %"class.viz::FrameSinkId"* %280 to i64
  br label %284

284:                                              ; preds = %282, %242
  %285 = phi i64 [ %283, %282 ], [ %250, %242 ]
  %286 = phi %"class.viz::FrameSinkId"* [ %280, %282 ], [ %248, %242 ]
  %287 = icmp eq %"class.viz::FrameSinkId"* %286, %253
  br i1 %287, label %305, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %53, i64 0, i32 0
  %290 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 1
  %291 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %286, i64 0, i32 0
  %292 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %286, i64 0, i32 1
  %293 = load i32, i32* %289, align 4
  %294 = load i32, i32* %291, align 4
  %295 = icmp ult i32 %293, %294
  br i1 %295, label %305, label %296

296:                                              ; preds = %288
  %297 = icmp ult i32 %294, %293
  br i1 %297, label %302, label %298

298:                                              ; preds = %296
  %299 = load i32, i32* %290, align 4
  %300 = load i32, i32* %292, align 4
  %301 = icmp ult i32 %299, %300
  br i1 %301, label %305, label %302

302:                                              ; preds = %298, %296
  %303 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %286, i64 1
  %304 = ptrtoint %"class.viz::FrameSinkId"* %303 to i64
  br label %305

305:                                              ; preds = %302, %298, %288, %284
  %306 = phi i64 [ %304, %302 ], [ %285, %284 ], [ %285, %298 ], [ %285, %288 ]
  %307 = inttoptr i64 %306 to %"class.viz::FrameSinkId"*
  %308 = icmp eq %"class.viz::FrameSinkId"* %286, %307
  br i1 %308, label %318, label %309

309:                                              ; preds = %305
  %310 = sub i64 %249, %306
  %311 = ashr exact i64 %310, 3
  %312 = icmp eq i64 %310, 0
  br i1 %312, label %316, label %313

313:                                              ; preds = %309
  %314 = bitcast %"class.viz::FrameSinkId"* %286 to i8*
  %315 = inttoptr i64 %306 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %314, i8* align 4 %315, i64 %310, i1 false) #12
  br label %316

316:                                              ; preds = %313, %309
  %317 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %286, i64 %311
  store %"class.viz::FrameSinkId"* %317, %"class.viz::FrameSinkId"** %56, align 8
  br label %318

318:                                              ; preds = %305, %316
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #12
  br label %319

319:                                              ; preds = %41, %318
  %320 = phi i32 [ %247, %318 ], [ %45, %41 ]
  %321 = phi i32 [ %246, %318 ], [ %43, %41 ]
  %322 = phi i64 [ %245, %318 ], [ %10, %41 ]
  %323 = xor i64 %1, 4294967295
  %324 = add i64 %322, %323
  %325 = trunc i64 %324 to i32
  %326 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 3
  %327 = getelementptr inbounds [68 x i8], [68 x i8]* %5, i64 0, i64 0
  %328 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %328)
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %327)
  %329 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %2, i64 0, i32 2, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = bitcast %"class.gfx::Rect"* %326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %328, i8* align 4 %333, i64 16, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %327, i8* nonnull align 4 %46, i64 68, i1 false) #12
  %334 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 0
  %335 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %334, align 8
  %336 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %335, i64 %1, i32 0, i32 0
  store i32 %330, i32* %336, align 4
  %337 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %335, i64 %1, i32 0, i32 1
  store i32 %332, i32* %337, align 4
  %338 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %335, i64 %1, i32 1
  store i32 %321, i32* %338, align 4
  %339 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %335, i64 %1, i32 2
  store i32 %320, i32* %339, align 4
  %340 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %335, i64 %1, i32 3
  %341 = bitcast %"class.gfx::Rect"* %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %341, i8* nonnull align 8 %328, i64 16, i1 false) #12
  %342 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %335, i64 %1, i32 4
  store i32 %325, i32* %342, align 4
  %343 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %335, i64 %1, i32 5
  %344 = bitcast %"class.gfx::Transform"* %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %344, i8* nonnull align 4 %327, i64 68, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %328)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %327)
  %345 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 8
  %346 = load i32, i32* %345, align 8
  %347 = add i32 %346, 1
  store i32 %347, i32* %345, align 8
  %348 = and i32 %321, 128
  %349 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 10
  %350 = load i8, i8* %349, align 8, !range !2
  %351 = zext i8 %350 to i32
  %352 = or i32 %348, %351
  %353 = icmp ne i32 %352, 0
  %354 = zext i1 %353 to i8
  store i8 %354, i8* %349, align 8
  %355 = and i32 %321, 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %361, label %357

357:                                              ; preds = %319
  %358 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 11
  %359 = load i32, i32* %358, align 4
  %360 = add i32 %359, 1
  store i32 %360, i32* %358, align 4
  br label %361

361:                                              ; preds = %107, %105, %357, %319, %111
  %362 = phi i64 [ %1, %111 ], [ %322, %319 ], [ %322, %357 ], [ %1, %105 ], [ %1, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %46) #12
  br label %363

363:                                              ; preds = %16, %361
  %364 = phi i64 [ %362, %361 ], [ %10, %16 ]
  ret i64 %364
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestAggregator11SetRegionAtEmRKNS_11FrameSinkIdEjjRKN3gfx4RectERKNS4_9TransformEi(%"class.viz::HitTestAggregator"* nocapture, i64, %"class.viz::FrameSinkId"* nocapture readonly dereferenceable(8), i32, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Transform"* nocapture readonly dereferenceable(68), i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.gfx::Rect", align 8
  %10 = alloca [68 x i8], align 4
  %11 = getelementptr inbounds [68 x i8], [68 x i8]* %10, i64 0, i64 0
  %12 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %11)
  %13 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 4 %17, i64 16, i1 false)
  %18 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %18, i64 68, i1 false)
  %19 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 9, i32 0, i32 0
  %20 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %19, align 8
  %21 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %20, i64 %1, i32 0, i32 0
  store i32 %14, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %20, i64 %1, i32 0, i32 1
  store i32 %16, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %20, i64 %1, i32 1
  store i32 %3, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %20, i64 %1, i32 2
  store i32 %4, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %20, i64 %1, i32 3
  %26 = bitcast %"class.gfx::Rect"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* nonnull align 8 %12, i64 16, i1 false)
  %27 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %20, i64 %1, i32 4
  store i32 %7, i32* %27, align 4
  %28 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %20, i64 %1, i32 5
  %29 = bitcast %"class.gfx::Transform"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* nonnull align 4 %11, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %11)
  %30 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 8
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 8
  %33 = and i32 %3, 128
  %34 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 10
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = zext i8 %35 to i32
  %37 = or i32 %33, %36
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %34, align 8
  %40 = and i32 %3, 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %8
  %43 = getelementptr inbounds %"class.viz::HitTestAggregator", %"class.viz::HitTestAggregator"* %0, i64 0, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 4
  br label %46

46:                                               ; preds = %8, %42
  ret void
}

declare void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRA21_KcEEN4base11trace_event16TraceEventHandleEcPKhPS1_S9_yjyS9_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, [21 x i8]* dereferenceable(21)) local_unnamed_addr #4 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 6, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds [21 x i8], [21 x i8]* %8, i64 0, i64 0
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %20, i8** %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #12
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #12
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #12
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #12
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %22
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN3viz8DrawQuadD2Ev(%"class.viz::DrawQuad"*) unnamed_addr #1

declare void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68), %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gfx9TransformEED2Ev(%"class.base::circular_deque.241"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %9, i64 %3) #12
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %9, i64 %13) #12
  %15 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %9, i64 0) #12
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %9, i64 %5) #12
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque.241"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %0, i64 0, i32 0
  %24 = load %"class.gfx::Transform"*, %"class.gfx::Transform"** %23, align 8
  %25 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %24, i64 %1
  ret %"class.gfx::Transform"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIjED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #12
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #12
  %15 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #12
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #12
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %1
  ret i32* %25
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3viz23AggregatedHitTestRegionENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.141"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.141", %"class.std::__1::vector.141"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.viz::AggregatedHitTestRegion"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.141", %"class.std::__1::vector.141"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.viz::AggregatedHitTestRegion"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 104
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.viz::AggregatedHitTestRegion"*
  %14 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %26, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.viz::AggregatedHitTestRegion"* %14 to i64
  br label %26

18:                                               ; preds = %12, %18
  %19 = phi %"struct.viz::AggregatedHitTestRegion"* [ %24, %18 ], [ %13, %12 ]
  %20 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %19, i64 0, i32 5
  %21 = bitcast %"class.gfx::Transform"* %20 to i8*
  %22 = bitcast %"struct.viz::AggregatedHitTestRegion"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 104, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %23 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %19, i64 0, i32 5, i32 0, i32 1
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %19, i64 1
  %25 = icmp eq %"struct.viz::AggregatedHitTestRegion"* %24, %14
  br i1 %25, label %16, label %18

26:                                               ; preds = %12, %16
  %27 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %106

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.141"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = sdiv exact i64 %31, 104
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 177372539170284150
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.141"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #14
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = sdiv exact i64 %38, 104
  %40 = icmp ult i64 %39, 88686269585142075
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %37, %41
  %47 = phi i64 [ %44, %41 ], [ 177372539170284150, %37 ]
  %48 = mul i64 %47, 104
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"struct.viz::AggregatedHitTestRegion"*
  br label %51

51:                                               ; preds = %41, %46
  %52 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %53 = phi %"struct.viz::AggregatedHitTestRegion"* [ %50, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %53, i64 %32
  %55 = ptrtoint %"struct.viz::AggregatedHitTestRegion"* %54 to i64
  %56 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %53, i64 %52
  %57 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %54, i64 %1
  br label %58

58:                                               ; preds = %51, %58
  %59 = phi %"struct.viz::AggregatedHitTestRegion"* [ %65, %58 ], [ %54, %51 ]
  %60 = phi i64 [ %66, %58 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %59, i64 0, i32 5
  %62 = bitcast %"class.gfx::Transform"* %61 to i8*
  %63 = inttoptr i64 %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %63, i8 0, i64 104, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #12
  %64 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %59, i64 0, i32 5, i32 0, i32 1
  store i8 0, i8* %64, align 4
  %65 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %59, i64 1
  %66 = ptrtoint %"struct.viz::AggregatedHitTestRegion"* %65 to i64
  %67 = icmp eq %"struct.viz::AggregatedHitTestRegion"* %57, %65
  br i1 %67, label %68, label %58

68:                                               ; preds = %58
  %69 = ptrtoint %"struct.viz::AggregatedHitTestRegion"* %56 to i64
  %70 = ptrtoint %"struct.viz::AggregatedHitTestRegion"* %57 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.141", %"class.std::__1::vector.141"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %71, align 8
  %73 = load %"struct.viz::AggregatedHitTestRegion"*, %"struct.viz::AggregatedHitTestRegion"** %6, align 8
  %74 = icmp eq %"struct.viz::AggregatedHitTestRegion"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %68
  %76 = ptrtoint %"struct.viz::AggregatedHitTestRegion"* %72 to i64
  br label %100

77:                                               ; preds = %68, %77
  %78 = phi %"struct.viz::AggregatedHitTestRegion"* [ %95, %77 ], [ %54, %68 ]
  %79 = phi %"struct.viz::AggregatedHitTestRegion"* [ %80, %77 ], [ %73, %68 ]
  %80 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %78, i64 -1, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %80, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %81, align 4
  %84 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %78, i64 -1, i32 0, i32 1
  %85 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %79, i64 -1, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %78, i64 -1, i32 1
  %88 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %79, i64 -1, i32 1
  %89 = bitcast i32* %87 to i8*
  %90 = bitcast i32* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %90, i64 28, i1 false) #12
  %91 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %78, i64 -1, i32 5
  %92 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %79, i64 -1, i32 5
  %93 = bitcast %"class.gfx::Transform"* %91 to i8*
  %94 = bitcast %"class.gfx::Transform"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 68, i1 false) #12
  %95 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %78, i64 -1
  %96 = icmp eq %"struct.viz::AggregatedHitTestRegion"* %80, %72
  br i1 %96, label %97, label %77

97:                                               ; preds = %77
  %98 = ptrtoint %"struct.viz::AggregatedHitTestRegion"* %95 to i64
  %99 = load i64, i64* %29, align 8
  br label %100

100:                                              ; preds = %75, %97
  %101 = phi i64 [ %55, %75 ], [ %98, %97 ]
  %102 = phi i64 [ %76, %75 ], [ %99, %97 ]
  store i64 %101, i64* %29, align 8
  store i64 %70, i64* %7, align 8
  store i64 %69, i64* %4, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = inttoptr i64 %102 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %104, %100, %26
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN2cc19ListContainerHelper5beginEv(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper8IteratorD1Ev(%"class.cc::ListContainerHelper::Iterator"*) unnamed_addr #1

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN2cc19ListContainerHelper36InsertBeforeAndInvalidateAllPointersEPNS0_8IteratorEm(%"class.cc::ListContainerHelper"*, %"class.cc::ListContainerHelper::Iterator"*, i64) local_unnamed_addr #3

declare void @_ZN3viz19DebugBorderDrawQuadC1Ev(%"class.viz::DebugBorderDrawQuad"*) unnamed_addr #3

declare void @_ZN3viz8DrawQuadC2ERKS0_(%"class.viz::DrawQuad"*, %"class.viz::DrawQuad"* dereferenceable(80)) unnamed_addr #3

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* sret, %"struct.cc::ListContainerHelper::PositionInCharAllocator"*) local_unnamed_addr #3

declare void @_ZN3viz18SolidColorDrawQuadC1Ev(%"class.viz::SolidColorDrawQuad"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gfx9TransformEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque.241"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer.242"*
  %5 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 68) #12
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #12
  br i1 %37, label %38, label %39, !prof !10

38:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #12
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3gfx9TransformEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer.242"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer.242"* nonnull %4, i64* %5, i64* %7) #12
  %45 = bitcast %"class.base::circular_deque.241"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #12
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque.241"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gfx9TransformEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer.242"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer.242"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %48

13:                                               ; preds = %6
  %14 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %0, i64 %1)
  %15 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %3, i64 0, i32 0
  %17 = load %"class.gfx::Transform"*, %"class.gfx::Transform"** %16, align 8
  %18 = ptrtoint %"class.gfx::Transform"* %14 to i64
  %19 = icmp ult %"class.gfx::Transform"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.gfx::Transform"* %17 to i64
  %22 = ptrtoint %"class.gfx::Transform"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #12
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #12
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !10

29:                                               ; preds = %20
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #12
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.gfx::Transform"* %14, %15
  br i1 %37, label %46, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"class.gfx::Transform"* [ %44, %38 ], [ %17, %36 ]
  %40 = phi %"class.gfx::Transform"* [ %43, %38 ], [ %14, %36 ]
  %41 = bitcast %"class.gfx::Transform"* %39 to i8*
  %42 = bitcast %"class.gfx::Transform"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %42, i64 68, i1 false) #12
  %43 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %40, i64 1
  %44 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %39, i64 1
  %45 = icmp eq %"class.gfx::Transform"* %43, %15
  br i1 %45, label %46, label %38

46:                                               ; preds = %38, %36
  %47 = sub i64 %2, %1
  br label %118

48:                                               ; preds = %6
  %49 = icmp ult i64 %2, %1
  br i1 %49, label %50, label %118

50:                                               ; preds = %48
  %51 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %0, i64 %1)
  %52 = tail call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %0, i64 %11)
  %53 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %3, i64 0, i32 0
  %54 = load %"class.gfx::Transform"*, %"class.gfx::Transform"** %53, align 8
  %55 = ptrtoint %"class.gfx::Transform"* %51 to i64
  %56 = icmp ult %"class.gfx::Transform"* %54, %52
  br i1 %56, label %57, label %73

57:                                               ; preds = %50
  %58 = ptrtoint %"class.gfx::Transform"* %54 to i64
  %59 = ptrtoint %"class.gfx::Transform"* %52 to i64
  %60 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %59, i64 %55) #12
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  %63 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %58, i64 %62) #12
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = or i1 %61, %64
  br i1 %65, label %66, label %67, !prof !10

66:                                               ; preds = %57
  tail call void @llvm.trap() #12
  unreachable

67:                                               ; preds = %57
  %68 = extractvalue { i64, i1 } %63, 0
  %69 = icmp ugt i64 %68, %55
  br i1 %69, label %70, label %73

70:                                               ; preds = %67
  %71 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #12
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #12
  br label %73

73:                                               ; preds = %70, %67, %50
  %74 = icmp eq %"class.gfx::Transform"* %51, %52
  br i1 %74, label %83, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"class.gfx::Transform"* [ %81, %75 ], [ %54, %73 ]
  %77 = phi %"class.gfx::Transform"* [ %80, %75 ], [ %51, %73 ]
  %78 = bitcast %"class.gfx::Transform"* %76 to i8*
  %79 = bitcast %"class.gfx::Transform"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 68, i1 false) #12
  %80 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %77, i64 1
  %81 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %76, i64 1
  %82 = icmp eq %"class.gfx::Transform"* %80, %52
  br i1 %82, label %83, label %75

83:                                               ; preds = %75, %73
  %84 = sub i64 %11, %1
  %85 = call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %0, i64 0)
  %86 = call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %0, i64 %2)
  %87 = call dereferenceable(68) %"class.gfx::Transform"* @_ZN4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"* %3, i64 %84)
  %88 = ptrtoint %"class.gfx::Transform"* %85 to i64
  %89 = icmp ult %"class.gfx::Transform"* %87, %86
  br i1 %89, label %90, label %106

90:                                               ; preds = %83
  %91 = ptrtoint %"class.gfx::Transform"* %87 to i64
  %92 = ptrtoint %"class.gfx::Transform"* %86 to i64
  %93 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %92, i64 %88) #12
  %94 = extractvalue { i64, i1 } %93, 1
  %95 = extractvalue { i64, i1 } %93, 0
  %96 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %91, i64 %95) #12
  %97 = extractvalue { i64, i1 } %96, 1
  %98 = or i1 %94, %97
  br i1 %98, label %99, label %100, !prof !10

99:                                               ; preds = %90
  call void @llvm.trap() #12
  unreachable

100:                                              ; preds = %90
  %101 = extractvalue { i64, i1 } %96, 0
  %102 = icmp ugt i64 %101, %88
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #12
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #12
  br label %106

106:                                              ; preds = %103, %100, %83
  %107 = icmp eq %"class.gfx::Transform"* %85, %86
  br i1 %107, label %116, label %108

108:                                              ; preds = %106, %108
  %109 = phi %"class.gfx::Transform"* [ %114, %108 ], [ %87, %106 ]
  %110 = phi %"class.gfx::Transform"* [ %113, %108 ], [ %85, %106 ]
  %111 = bitcast %"class.gfx::Transform"* %109 to i8*
  %112 = bitcast %"class.gfx::Transform"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 4 %112, i64 68, i1 false) #12
  %113 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %110, i64 1
  %114 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %109, i64 1
  %115 = icmp eq %"class.gfx::Transform"* %113, %86
  br i1 %115, label %116, label %108

116:                                              ; preds = %108, %106
  %117 = add i64 %84, %2
  br label %118

118:                                              ; preds = %48, %116, %46
  %119 = phi i64 [ %117, %116 ], [ %47, %46 ], [ 0, %48 ]
  store i64 %119, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(68) %"class.gfx::Transform"* @_ZNK4base8internal12VectorBufferIN3gfx9TransformEEixEm(%"class.base::internal::VectorBuffer.242"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %0, i64 0, i32 0
  %24 = load %"class.gfx::Transform"*, %"class.gfx::Transform"** %23, align 8
  %25 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %24, i64 %1
  ret %"class.gfx::Transform"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIjE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 4) #12
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #12
  br i1 %37, label %38, label %39, !prof !10

38:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #12
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIjE10MoveBufferERNS_8internal12VectorBufferIjEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #12
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #12
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIjE10MoveBufferERNS_8internal12VectorBufferIjEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_(i32* %11, i32* %12, i32* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load i32*, i32** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_(i32* %19, i32* %20, i32* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(4) i32* @_ZN4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_(i32* %24, i32* %25, i32* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIjE9MoveRangeIjLi0EEEvPjS4_S4_(i32*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint i32* %0 to i64
  %6 = icmp ult i32* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint i32* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #12
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !10

16:                                               ; preds = %7
  tail call void @llvm.trap() #12
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i64 14) #12
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i64 14) #12
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #12
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #12
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint i32* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #12
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !10

45:                                               ; preds = %41
  call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast i32* %0 to i8*
  %50 = bitcast i32* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %49, i64 %48, i1 false)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #1

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZNK4base8internal12VectorBufferIjEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %1
  ret i32* %25
}

declare void @_ZN2cc19ListContainerHelper10IteratorAtEm(%"class.cc::ListContainerHelper::Iterator"* sret, %"class.cc::ListContainerHelper"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIjE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 4) #12
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #12
  br i1 %31, label %32, label %33, !prof !10

32:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #12
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIjE10MoveBufferERNS_8internal12VectorBufferIjEEmmPS4_PmS7_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #12
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #12
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN3gfx9TransformEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque.241"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer.242"*
  %4 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 68) #12
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #12
  br i1 %31, label %32, label %33, !prof !10

32:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer.242", %"class.base::internal::VectorBuffer.242"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #12
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque.241", %"class.base::circular_deque.241"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN3gfx9TransformEE10MoveBufferERNS_8internal12VectorBufferIS2_EEmmPS6_PmS9_(%"class.base::internal::VectorBuffer.242"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer.242"* nonnull %3, i64* %11, i64* %13) #12
  %39 = bitcast %"class.base::circular_deque.241"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #12
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque.241"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.160"* @_ZNSt3__16vectorINS_4pairIN3viz11FrameSinkIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector.158"*, %"struct.std::__1::pair.160"*, %"class.viz::FrameSinkId"* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.160"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.282", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.160"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.160"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.160"* %11 to i64
  br i1 %12, label %15, label %190

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.160"* %9, %1
  br i1 %16, label %17, label %29

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 0, i32 1
  %25 = load i64, i64* %3, align 8
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 1
  %27 = ptrtoint %"struct.std::__1::pair.160"* %26 to i64
  %28 = bitcast %"struct.std::__1::pair.160"** %8 to i64*
  store i64 %27, i64* %28, align 8
  br label %390

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = load i64, i64* %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 1
  %36 = ptrtoint %"struct.std::__1::pair.160"* %35 to i64
  %37 = sub i64 %13, %36
  %38 = ashr exact i64 %37, 4
  %39 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 %38
  %40 = bitcast %"struct.std::__1::pair.160"** %8 to i64*
  %41 = icmp ult %"struct.std::__1::pair.160"* %39, %9
  br i1 %41, label %42, label %78

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %38
  %44 = getelementptr %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %9, i64 %43, i32 0, i32 0
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %5, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 4
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 3
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %70, label %53

53:                                               ; preds = %42, %53
  %54 = phi %"struct.std::__1::pair.160"* [ %67, %53 ], [ %9, %42 ]
  %55 = phi %"struct.std::__1::pair.160"* [ %66, %53 ], [ %39, %42 ]
  %56 = phi i64 [ %68, %53 ], [ %51, %42 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %57, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %60, align 4
  %63 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %63, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 1
  %67 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 1
  %68 = add i64 %56, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %53, !llvm.loop !11

70:                                               ; preds = %53, %42
  %71 = phi %"struct.std::__1::pair.160"* [ %9, %42 ], [ %67, %53 ]
  %72 = phi %"struct.std::__1::pair.160"* [ %39, %42 ], [ %66, %53 ]
  %73 = phi %"struct.std::__1::pair.160"* [ undef, %42 ], [ %67, %53 ]
  %74 = icmp ult i8* %47, inttoptr (i64 48 to i8*)
  br i1 %74, label %75, label %141

75:                                               ; preds = %141, %70
  %76 = phi %"struct.std::__1::pair.160"* [ %73, %70 ], [ %181, %141 ]
  %77 = ptrtoint %"struct.std::__1::pair.160"* %76 to i64
  br label %78

78:                                               ; preds = %75, %29
  %79 = phi i64 [ %77, %75 ], [ %13, %29 ]
  store i64 %79, i64* %40, align 8
  %80 = icmp eq i64 %37, 0
  br i1 %80, label %183, label %81

81:                                               ; preds = %78
  %82 = add i64 %37, -16
  %83 = lshr i64 %82, 4
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 3
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %101, label %87

87:                                               ; preds = %81, %87
  %88 = phi %"struct.std::__1::pair.160"* [ %92, %87 ], [ %9, %81 ]
  %89 = phi %"struct.std::__1::pair.160"* [ %91, %87 ], [ %39, %81 ]
  %90 = phi i64 [ %99, %87 ], [ %85, %81 ]
  %91 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %89, i64 -1
  %92 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %88, i64 -1
  %93 = bitcast %"struct.std::__1::pair.160"* %91 to i64*
  %94 = bitcast %"struct.std::__1::pair.160"* %92 to i64*
  %95 = load i64, i64* %93, align 4
  store i64 %95, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %89, i64 -1, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %88, i64 -1, i32 1
  store i64 %97, i64* %98, align 8
  %99 = add i64 %90, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %87, !llvm.loop !13

101:                                              ; preds = %87, %81
  %102 = phi %"struct.std::__1::pair.160"* [ %9, %81 ], [ %92, %87 ]
  %103 = phi %"struct.std::__1::pair.160"* [ %39, %81 ], [ %91, %87 ]
  %104 = icmp ult i64 %82, 48
  br i1 %104, label %183, label %105

105:                                              ; preds = %101, %105
  %106 = phi %"struct.std::__1::pair.160"* [ %133, %105 ], [ %102, %101 ]
  %107 = phi %"struct.std::__1::pair.160"* [ %132, %105 ], [ %103, %101 ]
  %108 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %107, i64 -1
  %109 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %106, i64 -1
  %110 = bitcast %"struct.std::__1::pair.160"* %108 to i64*
  %111 = bitcast %"struct.std::__1::pair.160"* %109 to i64*
  %112 = load i64, i64* %110, align 4
  store i64 %112, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %107, i64 -1, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %106, i64 -1, i32 1
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %107, i64 -2
  %117 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %106, i64 -2
  %118 = bitcast %"struct.std::__1::pair.160"* %116 to i64*
  %119 = bitcast %"struct.std::__1::pair.160"* %117 to i64*
  %120 = load i64, i64* %118, align 4
  store i64 %120, i64* %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %107, i64 -2, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %106, i64 -2, i32 1
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %107, i64 -3
  %125 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %106, i64 -3
  %126 = bitcast %"struct.std::__1::pair.160"* %124 to i64*
  %127 = bitcast %"struct.std::__1::pair.160"* %125 to i64*
  %128 = load i64, i64* %126, align 4
  store i64 %128, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %107, i64 -3, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %106, i64 -3, i32 1
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %107, i64 -4
  %133 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %106, i64 -4
  %134 = bitcast %"struct.std::__1::pair.160"* %132 to i64*
  %135 = bitcast %"struct.std::__1::pair.160"* %133 to i64*
  %136 = load i64, i64* %134, align 4
  store i64 %136, i64* %135, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %107, i64 -4, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %106, i64 -4, i32 1
  store i64 %138, i64* %139, align 8
  %140 = icmp eq %"struct.std::__1::pair.160"* %132, %1
  br i1 %140, label %183, label %105

141:                                              ; preds = %70, %141
  %142 = phi %"struct.std::__1::pair.160"* [ %181, %141 ], [ %71, %70 ]
  %143 = phi %"struct.std::__1::pair.160"* [ %180, %141 ], [ %72, %70 ]
  %144 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %144, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 0, i32 0, i32 1
  %148 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 0, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  store i32 %149, i32* %147, align 4
  %150 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 0, i32 1
  %151 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 0, i32 1
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 1, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 1, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %153, align 4
  %156 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 1, i32 0, i32 1
  %157 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 1, i32 0, i32 1
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %156, align 4
  %159 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 1, i32 1
  %160 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 1, i32 1
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %159, align 8
  %162 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 2, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 2, i32 0, i32 0
  %164 = load i32, i32* %163, align 4
  store i32 %164, i32* %162, align 4
  %165 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 2, i32 0, i32 1
  %166 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 2, i32 0, i32 1
  %167 = load i32, i32* %166, align 4
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 2, i32 1
  %169 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 2, i32 1
  %170 = load i64, i64* %169, align 8
  store i64 %170, i64* %168, align 8
  %171 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 3, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 3, i32 0, i32 0
  %173 = load i32, i32* %172, align 4
  store i32 %173, i32* %171, align 4
  %174 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 3, i32 0, i32 1
  %175 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 3, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  store i32 %176, i32* %174, align 4
  %177 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 3, i32 1
  %178 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 3, i32 1
  %179 = load i64, i64* %178, align 8
  store i64 %179, i64* %177, align 8
  %180 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %143, i64 4
  %181 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %142, i64 4
  %182 = icmp ult %"struct.std::__1::pair.160"* %180, %9
  br i1 %182, label %141, label %75

183:                                              ; preds = %101, %105, %78
  %184 = bitcast %"struct.std::__1::pair.160"* %1 to i64*
  %185 = zext i32 %33 to i64
  %186 = shl nuw i64 %185, 32
  %187 = zext i32 %31 to i64
  %188 = or i64 %186, %187
  store i64 %188, i64* %184, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 0, i32 1
  store i64 %34, i64* %189, align 8
  br label %390

190:                                              ; preds = %4
  %191 = getelementptr inbounds %"class.std::__1::vector.158", %"class.std::__1::vector.158"* %0, i64 0, i32 0, i32 2
  %192 = bitcast %"struct.std::__1::__split_buffer.282"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %192) #12
  %193 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %6, i64 0, i32 0
  %194 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %6, i64 0, i32 1
  %195 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %6, i64 0, i32 2
  %196 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %6, i64 0, i32 3, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %6, i64 0, i32 3, i32 1, i32 0
  %198 = bitcast %"struct.std::__1::pair.160"** %8 to i64*
  %199 = bitcast %"class.std::__1::vector.158"* %0 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.282"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 40, i1 false)
  %201 = load i64, i64* %199, align 8
  %202 = sub i64 %13, %201
  %203 = ashr exact i64 %202, 4
  %204 = add nsw i64 %203, 1
  %205 = icmp ugt i64 %204, 1152921504606846975
  br i1 %205, label %206, label %208

206:                                              ; preds = %190
  %207 = bitcast %"class.std::__1::vector.158"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %207) #14
  unreachable

208:                                              ; preds = %190
  %209 = bitcast %"struct.std::__1::pair.160"** %10 to i64*
  %210 = sub i64 %14, %201
  %211 = ashr exact i64 %210, 4
  %212 = icmp ult i64 %211, 576460752303423487
  br i1 %212, label %217, label %213

213:                                              ; preds = %208
  %214 = sub i64 %5, %201
  %215 = ashr exact i64 %214, 4
  store %"struct.std::__1::pair.160"* null, %"struct.std::__1::pair.160"** %196, align 8
  %216 = bitcast %"class.std::__1::allocator.164"** %197 to %"class.std::__1::__compressed_pair.161"**
  store %"class.std::__1::__compressed_pair.161"* %191, %"class.std::__1::__compressed_pair.161"** %216, align 8
  br label %228

217:                                              ; preds = %208
  %218 = ashr exact i64 %210, 3
  %219 = icmp ult i64 %218, %204
  %220 = select i1 %219, i64 %204, i64 %218
  %221 = sub i64 %5, %201
  %222 = ashr exact i64 %221, 4
  store %"struct.std::__1::pair.160"* null, %"struct.std::__1::pair.160"** %196, align 8
  %223 = bitcast %"class.std::__1::allocator.164"** %197 to %"class.std::__1::__compressed_pair.161"**
  store %"class.std::__1::__compressed_pair.161"* %191, %"class.std::__1::__compressed_pair.161"** %223, align 8
  %224 = icmp eq i64 %220, 0
  br i1 %224, label %234, label %225

225:                                              ; preds = %217
  %226 = icmp ugt i64 %220, 1152921504606846975
  br i1 %226, label %227, label %228

227:                                              ; preds = %225
  tail call void @abort() #14
  unreachable

228:                                              ; preds = %213, %225
  %229 = phi i64 [ 1152921504606846975, %213 ], [ %220, %225 ]
  %230 = phi i64 [ %215, %213 ], [ %222, %225 ]
  %231 = shl i64 %229, 4
  %232 = tail call i8* @_Znwm(i64 %231) #13
  %233 = bitcast i8* %232 to %"struct.std::__1::pair.160"*
  br label %234

234:                                              ; preds = %217, %228
  %235 = phi i64 [ %230, %228 ], [ %222, %217 ]
  %236 = phi i64 [ %229, %228 ], [ 0, %217 ]
  %237 = phi %"struct.std::__1::pair.160"* [ %233, %228 ], [ null, %217 ]
  store %"struct.std::__1::pair.160"* %237, %"struct.std::__1::pair.160"** %193, align 8
  %238 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %237, i64 %235
  store %"struct.std::__1::pair.160"* %238, %"struct.std::__1::pair.160"** %195, align 8
  store %"struct.std::__1::pair.160"* %238, %"struct.std::__1::pair.160"** %194, align 8
  %239 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %237, i64 %236
  store %"struct.std::__1::pair.160"* %239, %"struct.std::__1::pair.160"** %196, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.282"* nonnull %6, %"class.viz::FrameSinkId"* dereferenceable(8) %2, i64* dereferenceable(8) %3)
  %240 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %194, align 8
  %241 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %7, align 8
  %242 = icmp eq %"struct.std::__1::pair.160"* %241, %1
  br i1 %242, label %295, label %243

243:                                              ; preds = %234
  %244 = ptrtoint %"struct.std::__1::pair.160"* %241 to i64
  %245 = getelementptr %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 -1, i32 0, i32 0
  %246 = ptrtoint i32* %245 to i64
  %247 = sub i64 %246, %244
  %248 = and i64 %247, 16
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %263

250:                                              ; preds = %243
  %251 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 -1
  %252 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %240, i64 -1, i32 0, i32 0
  %253 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %251, i64 0, i32 0, i32 0
  %254 = load i32, i32* %253, align 4
  store i32 %254, i32* %252, align 4
  %255 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %240, i64 -1, i32 0, i32 1
  %256 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 -1, i32 0, i32 1
  %257 = load i32, i32* %256, align 4
  store i32 %257, i32* %255, align 4
  %258 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %240, i64 -1, i32 1
  %259 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 -1, i32 1
  %260 = load i64, i64* %259, align 8
  store i64 %260, i64* %258, align 8
  %261 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %194, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %261, i64 -1
  store %"struct.std::__1::pair.160"* %262, %"struct.std::__1::pair.160"** %194, align 8
  br label %263

263:                                              ; preds = %250, %243
  %264 = phi %"struct.std::__1::pair.160"* [ undef, %243 ], [ %262, %250 ]
  %265 = phi %"struct.std::__1::pair.160"* [ %240, %243 ], [ %262, %250 ]
  %266 = phi %"struct.std::__1::pair.160"* [ %1, %243 ], [ %251, %250 ]
  %267 = icmp ult i64 %247, 16
  br i1 %267, label %295, label %268

268:                                              ; preds = %263, %268
  %269 = phi %"struct.std::__1::pair.160"* [ %293, %268 ], [ %265, %263 ]
  %270 = phi %"struct.std::__1::pair.160"* [ %282, %268 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %269, i64 -1, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %270, i64 -1, i32 0, i32 0
  %273 = load i32, i32* %272, align 4
  store i32 %273, i32* %271, align 4
  %274 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %269, i64 -1, i32 0, i32 1
  %275 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %270, i64 -1, i32 0, i32 1
  %276 = load i32, i32* %275, align 4
  store i32 %276, i32* %274, align 4
  %277 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %269, i64 -1, i32 1
  %278 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %270, i64 -1, i32 1
  %279 = load i64, i64* %278, align 8
  store i64 %279, i64* %277, align 8
  %280 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %194, align 8
  %281 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %280, i64 -1
  store %"struct.std::__1::pair.160"* %281, %"struct.std::__1::pair.160"** %194, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %270, i64 -2
  %283 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %280, i64 -2, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %282, i64 0, i32 0, i32 0
  %285 = load i32, i32* %284, align 4
  store i32 %285, i32* %283, align 4
  %286 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %280, i64 -2, i32 0, i32 1
  %287 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %270, i64 -2, i32 0, i32 1
  %288 = load i32, i32* %287, align 4
  store i32 %288, i32* %286, align 4
  %289 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %280, i64 -2, i32 1
  %290 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %270, i64 -2, i32 1
  %291 = load i64, i64* %290, align 8
  store i64 %291, i64* %289, align 8
  %292 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %194, align 8
  %293 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %292, i64 -1
  store %"struct.std::__1::pair.160"* %293, %"struct.std::__1::pair.160"** %194, align 8
  %294 = icmp eq %"struct.std::__1::pair.160"* %282, %241
  br i1 %294, label %295, label %268

295:                                              ; preds = %263, %268, %234
  %296 = phi %"struct.std::__1::pair.160"* [ %240, %234 ], [ %264, %263 ], [ %293, %268 ]
  %297 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %8, align 8
  %298 = icmp eq %"struct.std::__1::pair.160"* %297, %1
  br i1 %298, label %299, label %305

299:                                              ; preds = %295
  %300 = ptrtoint %"struct.std::__1::pair.160"* %297 to i64
  %301 = ptrtoint %"struct.std::__1::pair.160"* %296 to i64
  %302 = bitcast %"struct.std::__1::pair.160"** %194 to i64*
  %303 = bitcast %"struct.std::__1::pair.160"** %195 to i64*
  %304 = load i64, i64* %303, align 8
  br label %364

305:                                              ; preds = %295
  %306 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %195, align 8
  %307 = getelementptr %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %297, i64 -1, i32 0, i32 0
  %308 = ptrtoint i32* %307 to i64
  %309 = sub i64 %308, %5
  %310 = and i64 %309, 16
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %325

312:                                              ; preds = %305
  %313 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %306, i64 0, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 0, i32 0, i32 0
  %315 = load i32, i32* %314, align 4
  store i32 %315, i32* %313, align 4
  %316 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %306, i64 0, i32 0, i32 1
  %317 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 0, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  store i32 %318, i32* %316, align 4
  %319 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %306, i64 0, i32 1
  %320 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 0, i32 1
  %321 = load i64, i64* %320, align 8
  store i64 %321, i64* %319, align 8
  %322 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %1, i64 1
  %323 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %195, align 8
  %324 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %323, i64 1
  store %"struct.std::__1::pair.160"* %324, %"struct.std::__1::pair.160"** %195, align 8
  br label %325

325:                                              ; preds = %312, %305
  %326 = phi %"struct.std::__1::pair.160"* [ undef, %305 ], [ %324, %312 ]
  %327 = phi %"struct.std::__1::pair.160"* [ %306, %305 ], [ %324, %312 ]
  %328 = phi %"struct.std::__1::pair.160"* [ %1, %305 ], [ %322, %312 ]
  %329 = icmp ult i64 %309, 16
  br i1 %329, label %357, label %330

330:                                              ; preds = %325, %330
  %331 = phi %"struct.std::__1::pair.160"* [ %355, %330 ], [ %327, %325 ]
  %332 = phi %"struct.std::__1::pair.160"* [ %353, %330 ], [ %328, %325 ]
  %333 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %331, i64 0, i32 0, i32 0
  %334 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %332, i64 0, i32 0, i32 0
  %335 = load i32, i32* %334, align 4
  store i32 %335, i32* %333, align 4
  %336 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %331, i64 0, i32 0, i32 1
  %337 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %332, i64 0, i32 0, i32 1
  %338 = load i32, i32* %337, align 4
  store i32 %338, i32* %336, align 4
  %339 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %331, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %332, i64 0, i32 1
  %341 = load i64, i64* %340, align 8
  store i64 %341, i64* %339, align 8
  %342 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %195, align 8
  %343 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %342, i64 1
  store %"struct.std::__1::pair.160"* %343, %"struct.std::__1::pair.160"** %195, align 8
  %344 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %343, i64 0, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %332, i64 1, i32 0, i32 0
  %346 = load i32, i32* %345, align 4
  store i32 %346, i32* %344, align 4
  %347 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %342, i64 1, i32 0, i32 1
  %348 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %332, i64 1, i32 0, i32 1
  %349 = load i32, i32* %348, align 4
  store i32 %349, i32* %347, align 4
  %350 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %342, i64 1, i32 1
  %351 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %332, i64 1, i32 1
  %352 = load i64, i64* %351, align 8
  store i64 %352, i64* %350, align 8
  %353 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %332, i64 2
  %354 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %195, align 8
  %355 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %354, i64 1
  store %"struct.std::__1::pair.160"* %355, %"struct.std::__1::pair.160"** %195, align 8
  %356 = icmp eq %"struct.std::__1::pair.160"* %353, %297
  br i1 %356, label %357, label %330

357:                                              ; preds = %330, %325
  %358 = phi %"struct.std::__1::pair.160"* [ %326, %325 ], [ %355, %330 ]
  %359 = ptrtoint %"struct.std::__1::pair.160"* %358 to i64
  %360 = bitcast %"struct.std::__1::pair.160"** %194 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = load i64, i64* %198, align 8
  %363 = bitcast %"struct.std::__1::pair.160"** %195 to i64*
  br label %364

364:                                              ; preds = %299, %357
  %365 = phi i64* [ %303, %299 ], [ %363, %357 ]
  %366 = phi i64 [ %304, %299 ], [ %359, %357 ]
  %367 = phi i64 [ %300, %299 ], [ %362, %357 ]
  %368 = phi i64* [ %302, %299 ], [ %360, %357 ]
  %369 = phi i64 [ %301, %299 ], [ %361, %357 ]
  %370 = load i64, i64* %199, align 8
  store i64 %369, i64* %199, align 8
  store i64 %370, i64* %368, align 8
  store i64 %366, i64* %198, align 8
  store i64 %367, i64* %365, align 8
  %371 = load i64, i64* %209, align 8
  %372 = bitcast %"struct.std::__1::pair.160"** %196 to i64*
  %373 = load i64, i64* %372, align 8
  store i64 %373, i64* %209, align 8
  store i64 %371, i64* %372, align 8
  %374 = bitcast %"struct.std::__1::__split_buffer.282"* %6 to i64*
  store i64 %370, i64* %374, align 8
  %375 = inttoptr i64 %370 to %"struct.std::__1::pair.160"*
  %376 = inttoptr i64 %367 to %"struct.std::__1::pair.160"*
  %377 = icmp eq %"struct.std::__1::pair.160"* %376, %375
  br i1 %377, label %385, label %378

378:                                              ; preds = %364
  %379 = getelementptr %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %376, i64 -1, i32 0, i32 0
  %380 = ptrtoint i32* %379 to i64
  %381 = sub i64 %380, %370
  %382 = lshr i64 %381, 4
  %383 = xor i64 %382, -1
  %384 = getelementptr %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %376, i64 %383
  store %"struct.std::__1::pair.160"* %384, %"struct.std::__1::pair.160"** %195, align 8
  br label %385

385:                                              ; preds = %378, %364
  %386 = icmp eq i64 %370, 0
  br i1 %386, label %389, label %387

387:                                              ; preds = %385
  %388 = inttoptr i64 %370 to i8*
  call void @_ZdlPv(i8* %388) #13
  br label %389

389:                                              ; preds = %385, %387
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %192) #12
  br label %390

390:                                              ; preds = %17, %183, %389
  %391 = phi %"struct.std::__1::pair.160"* [ %1, %17 ], [ %1, %183 ], [ %240, %389 ]
  ret %"struct.std::__1::pair.160"* %391
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz11FrameSinkIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.282"*, %"class.viz::FrameSinkId"* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.160"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.160"* %7 to i64
  br i1 %8, label %10, label %202

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.160"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.282", %"struct.std::__1::__split_buffer.282"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.160"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.160"* %15 to i64
  br i1 %16, label %18, label %96

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.160"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.160"* %12, %5
  br i1 %25, label %92, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %5, i64 -1, i32 0, i32 0
  %28 = ptrtoint i32* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.160"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.160"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = bitcast %"struct.std::__1::pair.160"* %36 to i64*
  %39 = bitcast %"struct.std::__1::pair.160"* %35 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %36, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %35, i64 0, i32 1
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !14

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.160"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.160"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.160"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %89, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.160"* [ %87, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.160"* [ %86, %53 ], [ %51, %48 ]
  %56 = bitcast %"struct.std::__1::pair.160"* %55 to i64*
  %57 = bitcast %"struct.std::__1::pair.160"* %54 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 1
  %63 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 1
  %64 = bitcast %"struct.std::__1::pair.160"* %62 to i64*
  %65 = bitcast %"struct.std::__1::pair.160"* %63 to i64*
  %66 = load i64, i64* %64, align 4
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 1, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 1, i32 1
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 2
  %71 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 2
  %72 = bitcast %"struct.std::__1::pair.160"* %70 to i64*
  %73 = bitcast %"struct.std::__1::pair.160"* %71 to i64*
  %74 = load i64, i64* %72, align 4
  store i64 %74, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 2, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 2, i32 1
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 3
  %79 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 3
  %80 = bitcast %"struct.std::__1::pair.160"* %78 to i64*
  %81 = bitcast %"struct.std::__1::pair.160"* %79 to i64*
  %82 = load i64, i64* %80, align 4
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 3, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 3, i32 1
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %55, i64 4
  %87 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %54, i64 4
  %88 = icmp eq %"struct.std::__1::pair.160"* %86, %5
  br i1 %88, label %89, label %53

89:                                               ; preds = %53, %48
  %90 = phi %"struct.std::__1::pair.160"* [ %49, %48 ], [ %87, %53 ]
  %91 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %11, align 8
  br label %92

92:                                               ; preds = %89, %18
  %93 = phi %"struct.std::__1::pair.160"* [ %5, %18 ], [ %91, %89 ]
  %94 = phi %"struct.std::__1::pair.160"* [ %24, %18 ], [ %90, %89 ]
  store %"struct.std::__1::pair.160"* %94, %"struct.std::__1::pair.160"** %4, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %93, i64 %23
  store %"struct.std::__1::pair.160"* %95, %"struct.std::__1::pair.160"** %11, align 8
  br label %202

96:                                               ; preds = %10
  %97 = bitcast %"struct.std::__1::pair.160"** %6 to i64*
  %98 = bitcast %"struct.std::__1::__split_buffer.282"* %0 to i64*
  %99 = sub i64 %9, %17
  %100 = ashr exact i64 %99, 3
  %101 = icmp eq i64 %99, 0
  %102 = select i1 %101, i64 1, i64 %100
  %103 = icmp ugt i64 %102, 1152921504606846975
  br i1 %103, label %104, label %105

104:                                              ; preds = %96
  tail call void @abort() #14
  unreachable

105:                                              ; preds = %96
  %106 = lshr i64 %102, 2
  %107 = shl i64 %102, 4
  %108 = tail call i8* @_Znwm(i64 %107) #13
  %109 = bitcast i8* %108 to %"struct.std::__1::pair.160"*
  %110 = ptrtoint i8* %108 to i64
  %111 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %109, i64 %106
  %112 = ptrtoint %"struct.std::__1::pair.160"* %111 to i64
  %113 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %109, i64 %102
  %114 = ptrtoint %"struct.std::__1::pair.160"* %113 to i64
  %115 = ptrtoint %"struct.std::__1::pair.160"* %5 to i64
  %116 = sub i64 %115, %13
  %117 = ashr exact i64 %116, 4
  %118 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %111, i64 %117
  %119 = icmp eq i64 %116, 0
  br i1 %119, label %192, label %120

120:                                              ; preds = %105
  %121 = add i64 %116, -16
  %122 = lshr i64 %121, 4
  %123 = add nuw nsw i64 %122, 1
  %124 = and i64 %123, 3
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %143, label %126

126:                                              ; preds = %120, %126
  %127 = phi %"struct.std::__1::pair.160"* [ %139, %126 ], [ %111, %120 ]
  %128 = phi %"struct.std::__1::pair.160"* [ %140, %126 ], [ %12, %120 ]
  %129 = phi i64 [ %141, %126 ], [ %124, %120 ]
  %130 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %127, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %128, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %130, align 4
  %133 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %127, i64 0, i32 0, i32 1
  %134 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %128, i64 0, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %127, i64 0, i32 1
  %137 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %128, i64 0, i32 1
  %138 = load i64, i64* %137, align 8
  store i64 %138, i64* %136, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %127, i64 1
  %140 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %128, i64 1
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %126, !llvm.loop !15

143:                                              ; preds = %126, %120
  %144 = phi %"struct.std::__1::pair.160"* [ %111, %120 ], [ %139, %126 ]
  %145 = phi %"struct.std::__1::pair.160"* [ %12, %120 ], [ %140, %126 ]
  %146 = icmp ult i64 %121, 48
  br i1 %146, label %189, label %147

147:                                              ; preds = %143, %147
  %148 = phi %"struct.std::__1::pair.160"* [ %186, %147 ], [ %144, %143 ]
  %149 = phi %"struct.std::__1::pair.160"* [ %187, %147 ], [ %145, %143 ]
  %150 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 0, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 0, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %150, align 4
  %153 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 0, i32 0, i32 1
  %154 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 0, i32 0, i32 1
  %155 = load i32, i32* %154, align 4
  store i32 %155, i32* %153, align 4
  %156 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 1, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 1, i32 0, i32 0
  %161 = load i32, i32* %160, align 4
  store i32 %161, i32* %159, align 4
  %162 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 1, i32 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 1, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  store i32 %164, i32* %162, align 4
  %165 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 1, i32 1
  %166 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 1, i32 1
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 2, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 2, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  store i32 %170, i32* %168, align 4
  %171 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 2, i32 0, i32 1
  %172 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 2, i32 0, i32 1
  %173 = load i32, i32* %172, align 4
  store i32 %173, i32* %171, align 4
  %174 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 2, i32 1
  %175 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 2, i32 1
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  %177 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 3, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 3, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  store i32 %179, i32* %177, align 4
  %180 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 3, i32 0, i32 1
  %181 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 3, i32 0, i32 1
  %182 = load i32, i32* %181, align 4
  store i32 %182, i32* %180, align 4
  %183 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 3, i32 1
  %184 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 3, i32 1
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %183, align 8
  %186 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %148, i64 4
  %187 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %149, i64 4
  %188 = icmp eq %"struct.std::__1::pair.160"* %118, %186
  br i1 %188, label %189, label %147

189:                                              ; preds = %147, %143
  %190 = ptrtoint %"struct.std::__1::pair.160"* %118 to i64
  %191 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %14, align 8
  br label %192

192:                                              ; preds = %105, %189
  %193 = phi %"struct.std::__1::pair.160"* [ %191, %189 ], [ %15, %105 ]
  %194 = phi i64 [ %190, %189 ], [ %112, %105 ]
  store i64 %110, i64* %98, align 8
  %195 = bitcast %"struct.std::__1::pair.160"** %11 to i64*
  store i64 %112, i64* %195, align 8
  %196 = bitcast %"struct.std::__1::pair.160"** %4 to i64*
  store i64 %194, i64* %196, align 8
  store i64 %114, i64* %97, align 8
  %197 = icmp eq %"struct.std::__1::pair.160"* %193, null
  %198 = inttoptr i64 %194 to %"struct.std::__1::pair.160"*
  br i1 %197, label %202, label %199

199:                                              ; preds = %192
  %200 = bitcast %"struct.std::__1::pair.160"* %193 to i8*
  tail call void @_ZdlPv(i8* %200) #13
  %201 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %4, align 8
  br label %202

202:                                              ; preds = %199, %192, %92, %3
  %203 = phi %"struct.std::__1::pair.160"* [ %201, %199 ], [ %198, %192 ], [ %94, %92 ], [ %5, %3 ]
  %204 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %203, i64 0, i32 0, i32 0
  %205 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %203, i64 0, i32 0, i32 1
  %208 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %203, i64 0, i32 1
  %211 = load i64, i64* %2, align 8
  store i64 %211, i64* %210, align 8
  %212 = load %"struct.std::__1::pair.160"*, %"struct.std::__1::pair.160"** %4, align 8
  %213 = getelementptr inbounds %"struct.std::__1::pair.160", %"struct.std::__1::pair.160"* %212, i64 1
  store %"struct.std::__1::pair.160"* %213, %"struct.std::__1::pair.160"** %4, align 8
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.viz::FrameSinkId"* @_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.149"*, %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.viz::FrameSinkId"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.303", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %9, align 8
  %11 = icmp ult %"class.viz::FrameSinkId"* %8, %10
  %12 = ptrtoint %"class.viz::FrameSinkId"* %8 to i64
  %13 = ptrtoint %"class.viz::FrameSinkId"* %10 to i64
  br i1 %11, label %14, label %115

14:                                               ; preds = %3
  %15 = icmp eq %"class.viz::FrameSinkId"* %8, %1
  br i1 %15, label %16, label %26

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 1
  %24 = ptrtoint %"class.viz::FrameSinkId"* %23 to i64
  %25 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  store i64 %24, i64* %25, align 8
  br label %343

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 1
  %32 = ptrtoint %"class.viz::FrameSinkId"* %31 to i64
  %33 = sub i64 %12, %32
  %34 = ashr exact i64 %33, 3
  %35 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 %34
  %36 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  %37 = icmp ult %"class.viz::FrameSinkId"* %35, %8
  br i1 %37, label %38, label %71

38:                                               ; preds = %26
  %39 = sub nsw i64 0, %34
  %40 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %8, i64 %39, i32 0
  %41 = bitcast i32* %40 to i8*
  %42 = xor i64 %4, -1
  %43 = getelementptr i8, i8* %41, i64 %42
  %44 = ptrtoint i8* %43 to i64
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %38, %49
  %50 = phi %"class.viz::FrameSinkId"* [ %60, %49 ], [ %8, %38 ]
  %51 = phi %"class.viz::FrameSinkId"* [ %59, %49 ], [ %35, %38 ]
  %52 = phi i64 [ %61, %49 ], [ %47, %38 ]
  %53 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 0, i32 0
  %54 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %53, align 4
  %56 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 0, i32 1
  %57 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %56, align 4
  %59 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 1
  %60 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 1
  %61 = add i64 %52, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %49, !llvm.loop !16

63:                                               ; preds = %49, %38
  %64 = phi %"class.viz::FrameSinkId"* [ %8, %38 ], [ %60, %49 ]
  %65 = phi %"class.viz::FrameSinkId"* [ %35, %38 ], [ %59, %49 ]
  %66 = phi %"class.viz::FrameSinkId"* [ undef, %38 ], [ %60, %49 ]
  %67 = icmp ult i8* %43, inttoptr (i64 24 to i8*)
  br i1 %67, label %68, label %79

68:                                               ; preds = %79, %63
  %69 = phi %"class.viz::FrameSinkId"* [ %66, %63 ], [ %107, %79 ]
  %70 = ptrtoint %"class.viz::FrameSinkId"* %69 to i64
  br label %71

71:                                               ; preds = %68, %26
  %72 = phi i64 [ %70, %68 ], [ %12, %26 ]
  store i64 %72, i64* %36, align 8
  %73 = icmp eq i64 %33, 0
  br i1 %73, label %109, label %74

74:                                               ; preds = %71
  %75 = sub nsw i64 0, %34
  %76 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %8, i64 %75
  %77 = bitcast %"class.viz::FrameSinkId"* %76 to i8*
  %78 = bitcast %"class.viz::FrameSinkId"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %33, i1 false) #12
  br label %109

79:                                               ; preds = %63, %79
  %80 = phi %"class.viz::FrameSinkId"* [ %107, %79 ], [ %64, %63 ]
  %81 = phi %"class.viz::FrameSinkId"* [ %106, %79 ], [ %65, %63 ]
  %82 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 0, i32 0
  %83 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 0, i32 1
  %86 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 1, i32 0
  %89 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 1, i32 0
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %88, align 4
  %91 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 1, i32 1
  %92 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 1, i32 1
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 2, i32 0
  %95 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 2, i32 0
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 2, i32 1
  %98 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 2, i32 1
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 3, i32 0
  %101 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 3, i32 0
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 3, i32 1
  %104 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 3, i32 1
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 4
  %107 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 4
  %108 = icmp ult %"class.viz::FrameSinkId"* %106, %8
  br i1 %108, label %79, label %68

109:                                              ; preds = %71, %74
  %110 = bitcast %"class.viz::FrameSinkId"* %1 to i64*
  %111 = zext i32 %30 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i32 %28 to i64
  %114 = or i64 %112, %113
  store i64 %114, i64* %110, align 4
  br label %343

115:                                              ; preds = %3
  %116 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 2
  %117 = bitcast %"struct.std::__1::__split_buffer.303"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #12
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %5, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %5, i64 0, i32 1
  %120 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %5, i64 0, i32 2
  %121 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %5, i64 0, i32 3, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %5, i64 0, i32 3, i32 1, i32 0
  %123 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  %124 = bitcast %"class.std::__1::vector.149"* %0 to i64*
  %125 = bitcast %"struct.std::__1::__split_buffer.303"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 40, i1 false)
  %126 = load i64, i64* %124, align 8
  %127 = sub i64 %12, %126
  %128 = ashr exact i64 %127, 3
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 2305843009213693951
  br i1 %130, label %131, label %133

131:                                              ; preds = %115
  %132 = bitcast %"class.std::__1::vector.149"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #14
  unreachable

133:                                              ; preds = %115
  %134 = bitcast %"class.viz::FrameSinkId"** %9 to i64*
  %135 = sub i64 %13, %126
  %136 = ashr exact i64 %135, 3
  %137 = icmp ult i64 %136, 1152921504606846975
  br i1 %137, label %142, label %138

138:                                              ; preds = %133
  %139 = sub i64 %4, %126
  %140 = ashr exact i64 %139, 3
  store %"class.viz::FrameSinkId"* null, %"class.viz::FrameSinkId"** %121, align 8
  %141 = bitcast %"class.std::__1::allocator.154"** %122 to %"class.std::__1::__compressed_pair.151"**
  store %"class.std::__1::__compressed_pair.151"* %116, %"class.std::__1::__compressed_pair.151"** %141, align 8
  br label %153

142:                                              ; preds = %133
  %143 = ashr exact i64 %135, 2
  %144 = icmp ult i64 %143, %129
  %145 = select i1 %144, i64 %129, i64 %143
  %146 = sub i64 %4, %126
  %147 = ashr exact i64 %146, 3
  store %"class.viz::FrameSinkId"* null, %"class.viz::FrameSinkId"** %121, align 8
  %148 = bitcast %"class.std::__1::allocator.154"** %122 to %"class.std::__1::__compressed_pair.151"**
  store %"class.std::__1::__compressed_pair.151"* %116, %"class.std::__1::__compressed_pair.151"** %148, align 8
  %149 = icmp eq i64 %145, 0
  br i1 %149, label %159, label %150

150:                                              ; preds = %142
  %151 = icmp ugt i64 %145, 2305843009213693951
  br i1 %151, label %152, label %153

152:                                              ; preds = %150
  tail call void @abort() #14
  unreachable

153:                                              ; preds = %138, %150
  %154 = phi i64 [ 2305843009213693951, %138 ], [ %145, %150 ]
  %155 = phi i64 [ %140, %138 ], [ %147, %150 ]
  %156 = shl i64 %154, 3
  %157 = tail call i8* @_Znwm(i64 %156) #13
  %158 = bitcast i8* %157 to %"class.viz::FrameSinkId"*
  br label %159

159:                                              ; preds = %142, %153
  %160 = phi i64 [ %155, %153 ], [ %147, %142 ]
  %161 = phi i64 [ %154, %153 ], [ 0, %142 ]
  %162 = phi %"class.viz::FrameSinkId"* [ %158, %153 ], [ null, %142 ]
  store %"class.viz::FrameSinkId"* %162, %"class.viz::FrameSinkId"** %118, align 8
  %163 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %162, i64 %160
  store %"class.viz::FrameSinkId"* %163, %"class.viz::FrameSinkId"** %120, align 8
  store %"class.viz::FrameSinkId"* %163, %"class.viz::FrameSinkId"** %119, align 8
  %164 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %162, i64 %161
  store %"class.viz::FrameSinkId"* %164, %"class.viz::FrameSinkId"** %121, align 8
  call void @_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.303"* nonnull %5, %"class.viz::FrameSinkId"* dereferenceable(8) %2)
  %165 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %166 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %6, align 8
  %167 = icmp eq %"class.viz::FrameSinkId"* %166, %1
  br i1 %167, label %234, label %168

168:                                              ; preds = %159
  %169 = ptrtoint %"class.viz::FrameSinkId"* %166 to i64
  %170 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 -1, i32 0
  %171 = ptrtoint i32* %170 to i64
  %172 = sub i64 %171, %169
  %173 = lshr i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = and i64 %174, 3
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %192, label %177

177:                                              ; preds = %168, %177
  %178 = phi %"class.viz::FrameSinkId"* [ %189, %177 ], [ %165, %168 ]
  %179 = phi %"class.viz::FrameSinkId"* [ %181, %177 ], [ %1, %168 ]
  %180 = phi i64 [ %190, %177 ], [ %175, %168 ]
  %181 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %179, i64 -1
  %182 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %178, i64 -1, i32 0
  %183 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %181, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  store i32 %184, i32* %182, align 4
  %185 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %178, i64 -1, i32 1
  %186 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %179, i64 -1, i32 1
  %187 = load i32, i32* %186, align 4
  store i32 %187, i32* %185, align 4
  %188 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %189 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %188, i64 -1
  store %"class.viz::FrameSinkId"* %189, %"class.viz::FrameSinkId"** %119, align 8
  %190 = add i64 %180, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %177, !llvm.loop !17

192:                                              ; preds = %177, %168
  %193 = phi %"class.viz::FrameSinkId"* [ undef, %168 ], [ %189, %177 ]
  %194 = phi %"class.viz::FrameSinkId"* [ %165, %168 ], [ %189, %177 ]
  %195 = phi %"class.viz::FrameSinkId"* [ %1, %168 ], [ %181, %177 ]
  %196 = icmp ult i64 %172, 24
  br i1 %196, label %234, label %197

197:                                              ; preds = %192, %197
  %198 = phi %"class.viz::FrameSinkId"* [ %232, %197 ], [ %194, %192 ]
  %199 = phi %"class.viz::FrameSinkId"* [ %224, %197 ], [ %195, %192 ]
  %200 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %198, i64 -1, i32 0
  %201 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -1, i32 0
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %198, i64 -1, i32 1
  %204 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -1, i32 1
  %205 = load i32, i32* %204, align 4
  store i32 %205, i32* %203, align 4
  %206 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %207 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -1
  store %"class.viz::FrameSinkId"* %207, %"class.viz::FrameSinkId"** %119, align 8
  %208 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -2, i32 0
  %209 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -2, i32 0
  %210 = load i32, i32* %209, align 4
  store i32 %210, i32* %208, align 4
  %211 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -2, i32 1
  %212 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -2, i32 1
  %213 = load i32, i32* %212, align 4
  store i32 %213, i32* %211, align 4
  %214 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %215 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -1
  store %"class.viz::FrameSinkId"* %215, %"class.viz::FrameSinkId"** %119, align 8
  %216 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -2, i32 0
  %217 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -3, i32 0
  %218 = load i32, i32* %217, align 4
  store i32 %218, i32* %216, align 4
  %219 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -2, i32 1
  %220 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -3, i32 1
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* %219, align 4
  %222 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %223 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -1
  store %"class.viz::FrameSinkId"* %223, %"class.viz::FrameSinkId"** %119, align 8
  %224 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -4
  %225 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -2, i32 0
  %226 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %224, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  store i32 %227, i32* %225, align 4
  %228 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -2, i32 1
  %229 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -4, i32 1
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %228, align 4
  %231 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %232 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %231, i64 -1
  store %"class.viz::FrameSinkId"* %232, %"class.viz::FrameSinkId"** %119, align 8
  %233 = icmp eq %"class.viz::FrameSinkId"* %224, %166
  br i1 %233, label %234, label %197

234:                                              ; preds = %192, %197, %159
  %235 = phi %"class.viz::FrameSinkId"* [ %165, %159 ], [ %193, %192 ], [ %232, %197 ]
  %236 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %7, align 8
  %237 = icmp eq %"class.viz::FrameSinkId"* %236, %1
  br i1 %237, label %238, label %244

238:                                              ; preds = %234
  %239 = ptrtoint %"class.viz::FrameSinkId"* %236 to i64
  %240 = ptrtoint %"class.viz::FrameSinkId"* %235 to i64
  %241 = bitcast %"class.viz::FrameSinkId"** %119 to i64*
  %242 = bitcast %"class.viz::FrameSinkId"** %120 to i64*
  %243 = load i64, i64* %242, align 8
  br label %317

244:                                              ; preds = %234
  %245 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %246 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %236, i64 -1, i32 0
  %247 = ptrtoint i32* %246 to i64
  %248 = sub i64 %247, %4
  %249 = lshr i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %268, label %253

253:                                              ; preds = %244, %253
  %254 = phi %"class.viz::FrameSinkId"* [ %265, %253 ], [ %245, %244 ]
  %255 = phi %"class.viz::FrameSinkId"* [ %263, %253 ], [ %1, %244 ]
  %256 = phi i64 [ %266, %253 ], [ %251, %244 ]
  %257 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %254, i64 0, i32 0
  %258 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  store i32 %259, i32* %257, align 4
  %260 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %254, i64 0, i32 1
  %261 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 0, i32 1
  %262 = load i32, i32* %261, align 4
  store i32 %262, i32* %260, align 4
  %263 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 1
  %264 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %265 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %264, i64 1
  store %"class.viz::FrameSinkId"* %265, %"class.viz::FrameSinkId"** %120, align 8
  %266 = add i64 %256, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %253, !llvm.loop !18

268:                                              ; preds = %253, %244
  %269 = phi %"class.viz::FrameSinkId"* [ undef, %244 ], [ %265, %253 ]
  %270 = phi %"class.viz::FrameSinkId"* [ %245, %244 ], [ %265, %253 ]
  %271 = phi %"class.viz::FrameSinkId"* [ %1, %244 ], [ %263, %253 ]
  %272 = icmp ult i64 %248, 24
  br i1 %272, label %310, label %273

273:                                              ; preds = %268, %273
  %274 = phi %"class.viz::FrameSinkId"* [ %308, %273 ], [ %270, %268 ]
  %275 = phi %"class.viz::FrameSinkId"* [ %306, %273 ], [ %271, %268 ]
  %276 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %274, i64 0, i32 0
  %277 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  store i32 %278, i32* %276, align 4
  %279 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %274, i64 0, i32 1
  %280 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 0, i32 1
  %281 = load i32, i32* %280, align 4
  store i32 %281, i32* %279, align 4
  %282 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %283 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %282, i64 1
  store %"class.viz::FrameSinkId"* %283, %"class.viz::FrameSinkId"** %120, align 8
  %284 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %283, i64 0, i32 0
  %285 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 1, i32 0
  %286 = load i32, i32* %285, align 4
  store i32 %286, i32* %284, align 4
  %287 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %282, i64 1, i32 1
  %288 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 1, i32 1
  %289 = load i32, i32* %288, align 4
  store i32 %289, i32* %287, align 4
  %290 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %291 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %290, i64 1
  store %"class.viz::FrameSinkId"* %291, %"class.viz::FrameSinkId"** %120, align 8
  %292 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %291, i64 0, i32 0
  %293 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 2, i32 0
  %294 = load i32, i32* %293, align 4
  store i32 %294, i32* %292, align 4
  %295 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %290, i64 1, i32 1
  %296 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 2, i32 1
  %297 = load i32, i32* %296, align 4
  store i32 %297, i32* %295, align 4
  %298 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %299 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %298, i64 1
  store %"class.viz::FrameSinkId"* %299, %"class.viz::FrameSinkId"** %120, align 8
  %300 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %299, i64 0, i32 0
  %301 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 3, i32 0
  %302 = load i32, i32* %301, align 4
  store i32 %302, i32* %300, align 4
  %303 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %298, i64 1, i32 1
  %304 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 3, i32 1
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* %303, align 4
  %306 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 4
  %307 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %308 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %307, i64 1
  store %"class.viz::FrameSinkId"* %308, %"class.viz::FrameSinkId"** %120, align 8
  %309 = icmp eq %"class.viz::FrameSinkId"* %306, %236
  br i1 %309, label %310, label %273

310:                                              ; preds = %273, %268
  %311 = phi %"class.viz::FrameSinkId"* [ %269, %268 ], [ %308, %273 ]
  %312 = ptrtoint %"class.viz::FrameSinkId"* %311 to i64
  %313 = bitcast %"class.viz::FrameSinkId"** %119 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = load i64, i64* %123, align 8
  %316 = bitcast %"class.viz::FrameSinkId"** %120 to i64*
  br label %317

317:                                              ; preds = %238, %310
  %318 = phi i64* [ %242, %238 ], [ %316, %310 ]
  %319 = phi i64 [ %243, %238 ], [ %312, %310 ]
  %320 = phi i64 [ %239, %238 ], [ %315, %310 ]
  %321 = phi i64* [ %241, %238 ], [ %313, %310 ]
  %322 = phi i64 [ %240, %238 ], [ %314, %310 ]
  %323 = load i64, i64* %124, align 8
  store i64 %322, i64* %124, align 8
  store i64 %323, i64* %321, align 8
  store i64 %319, i64* %123, align 8
  store i64 %320, i64* %318, align 8
  %324 = load i64, i64* %134, align 8
  %325 = bitcast %"class.viz::FrameSinkId"** %121 to i64*
  %326 = load i64, i64* %325, align 8
  store i64 %326, i64* %134, align 8
  store i64 %324, i64* %325, align 8
  %327 = bitcast %"struct.std::__1::__split_buffer.303"* %5 to i64*
  store i64 %323, i64* %327, align 8
  %328 = inttoptr i64 %323 to %"class.viz::FrameSinkId"*
  %329 = inttoptr i64 %320 to %"class.viz::FrameSinkId"*
  %330 = icmp eq %"class.viz::FrameSinkId"* %329, %328
  br i1 %330, label %338, label %331

331:                                              ; preds = %317
  %332 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %329, i64 -1, i32 0
  %333 = ptrtoint i32* %332 to i64
  %334 = sub i64 %333, %323
  %335 = lshr i64 %334, 3
  %336 = xor i64 %335, -1
  %337 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %329, i64 %336
  store %"class.viz::FrameSinkId"* %337, %"class.viz::FrameSinkId"** %120, align 8
  br label %338

338:                                              ; preds = %331, %317
  %339 = icmp eq i64 %323, 0
  br i1 %339, label %342, label %340

340:                                              ; preds = %338
  %341 = inttoptr i64 %323 to i8*
  call void @_ZdlPv(i8* %341) #13
  br label %342

342:                                              ; preds = %338, %340
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #12
  br label %343

343:                                              ; preds = %16, %109, %342
  %344 = phi %"class.viz::FrameSinkId"* [ %1, %16 ], [ %1, %109 ], [ %165, %342 ]
  ret %"class.viz::FrameSinkId"* %344
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.303"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %0, i64 0, i32 2
  %4 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %5, align 8
  %7 = icmp eq %"class.viz::FrameSinkId"* %4, %6
  %8 = ptrtoint %"class.viz::FrameSinkId"* %6 to i64
  br i1 %7, label %9, label %127

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %0, i64 0, i32 1
  %11 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.303", %"struct.std::__1::__split_buffer.303"* %0, i64 0, i32 0
  %13 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %12, align 8
  %14 = icmp ugt %"class.viz::FrameSinkId"* %11, %13
  %15 = ptrtoint %"class.viz::FrameSinkId"* %13 to i64
  br i1 %14, label %16, label %35

16:                                               ; preds = %9
  %17 = ptrtoint %"class.viz::FrameSinkId"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %11, i64 %21
  %23 = ptrtoint %"class.viz::FrameSinkId"* %4 to i64
  %24 = sub i64 %23, %17
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %16
  %28 = bitcast %"class.viz::FrameSinkId"* %22 to i8*
  %29 = bitcast %"class.viz::FrameSinkId"* %11 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 %24, i1 false) #12
  %30 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %10, align 8
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi %"class.viz::FrameSinkId"* [ %11, %16 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %22, i64 %25
  store %"class.viz::FrameSinkId"* %33, %"class.viz::FrameSinkId"** %3, align 8
  %34 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %32, i64 %21
  store %"class.viz::FrameSinkId"* %34, %"class.viz::FrameSinkId"** %10, align 8
  br label %127

35:                                               ; preds = %9
  %36 = bitcast %"class.viz::FrameSinkId"** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.303"* %0 to i64*
  %38 = sub i64 %8, %15
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #14
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to %"class.viz::FrameSinkId"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %48, i64 %45
  %51 = ptrtoint %"class.viz::FrameSinkId"* %50 to i64
  %52 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %48, i64 %41
  %53 = ptrtoint %"class.viz::FrameSinkId"* %52 to i64
  %54 = ptrtoint %"class.viz::FrameSinkId"* %11 to i64
  %55 = ptrtoint %"class.viz::FrameSinkId"* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %117, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %60, %66
  %67 = phi %"class.viz::FrameSinkId"* [ %76, %66 ], [ %50, %60 ]
  %68 = phi %"class.viz::FrameSinkId"* [ %77, %66 ], [ %11, %60 ]
  %69 = phi i64 [ %78, %66 ], [ %64, %60 ]
  %70 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 0, i32 0
  %71 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 0, i32 1
  %74 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 1
  %77 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 1
  %78 = add i64 %69, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %66, !llvm.loop !19

80:                                               ; preds = %66, %60
  %81 = phi %"class.viz::FrameSinkId"* [ %50, %60 ], [ %76, %66 ]
  %82 = phi %"class.viz::FrameSinkId"* [ %11, %60 ], [ %77, %66 ]
  %83 = icmp ult i64 %61, 24
  br i1 %83, label %114, label %84

84:                                               ; preds = %80, %84
  %85 = phi %"class.viz::FrameSinkId"* [ %111, %84 ], [ %81, %80 ]
  %86 = phi %"class.viz::FrameSinkId"* [ %112, %84 ], [ %82, %80 ]
  %87 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 0, i32 0
  %88 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %90, align 4
  %93 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 1, i32 0
  %94 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 1, i32 0
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 1, i32 1
  %97 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 1, i32 1
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 2, i32 0
  %100 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 2, i32 0
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 2, i32 1
  %103 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 2, i32 1
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %102, align 4
  %105 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 3, i32 0
  %106 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 3, i32 0
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 3, i32 1
  %109 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 3, i32 1
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 4
  %112 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 4
  %113 = icmp eq %"class.viz::FrameSinkId"* %58, %111
  br i1 %113, label %114, label %84

114:                                              ; preds = %84, %80
  %115 = ptrtoint %"class.viz::FrameSinkId"* %58 to i64
  %116 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %12, align 8
  br label %117

117:                                              ; preds = %44, %114
  %118 = phi %"class.viz::FrameSinkId"* [ %116, %114 ], [ %13, %44 ]
  %119 = phi i64 [ %115, %114 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %120 = bitcast %"class.viz::FrameSinkId"** %10 to i64*
  store i64 %51, i64* %120, align 8
  %121 = bitcast %"class.viz::FrameSinkId"** %3 to i64*
  store i64 %119, i64* %121, align 8
  store i64 %53, i64* %36, align 8
  %122 = icmp eq %"class.viz::FrameSinkId"* %118, null
  %123 = inttoptr i64 %119 to %"class.viz::FrameSinkId"*
  br i1 %122, label %127, label %124

124:                                              ; preds = %117
  %125 = bitcast %"class.viz::FrameSinkId"* %118 to i8*
  tail call void @_ZdlPv(i8* %125) #13
  %126 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  br label %127

127:                                              ; preds = %124, %117, %31, %2
  %128 = phi %"class.viz::FrameSinkId"* [ %126, %124 ], [ %123, %117 ], [ %33, %31 ], [ %4, %2 ]
  %129 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %128, i64 0, i32 1
  %133 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  store i32 %134, i32* %132, align 4
  %135 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  %136 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %135, i64 1
  store %"class.viz::FrameSinkId"* %136, %"class.viz::FrameSinkId"** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZN2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !12}
!16 = distinct !{!16, !12}
!17 = distinct !{!17, !12}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !12}
