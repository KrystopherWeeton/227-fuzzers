; ModuleID = '../../base/task/sequence_manager/tasks.cc'
source_filename = "../../base/task/sequence_manager/tasks.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.1, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"struct.base::sequence_manager::internal::PostedTask" = type { %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeDelta", i8, i8, %class.scoped_refptr.1, %"class.base::TimeTicks" }
%"class.base::TimeDelta" = type { i64 }
%"struct.base::PendingTask" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>

@_ZN4base16sequence_manager4TaskC1ENS0_8internal10PostedTaskENS_9TimeTicksENS0_12EnqueueOrderES5_NS2_16WakeUpResolutionE = hidden unnamed_addr alias void (%"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::internal::PostedTask"*, i64, i64, i64, i32), void (%"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::internal::PostedTask"*, i64, i64, i64, i32)* @_ZN4base16sequence_manager4TaskC2ENS0_8internal10PostedTaskENS_9TimeTicksENS0_12EnqueueOrderES5_NS2_16WakeUpResolutionE
@_ZN4base16sequence_manager4TaskC1EOS1_ = hidden unnamed_addr alias void (%"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*), void (%"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*)* @_ZN4base16sequence_manager4TaskC2EOS1_
@_ZN4base16sequence_manager4TaskD1Ev = hidden unnamed_addr alias void (%"struct.base::sequence_manager::Task"*), void (%"struct.base::sequence_manager::Task"*)* @_ZN4base16sequence_manager4TaskD2Ev
@_ZN4base16sequence_manager8internal10PostedTaskC1E13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEENS_8LocationENS_9TimeDeltaENS_8NestableEh = hidden unnamed_addr alias void (%"struct.base::sequence_manager::internal::PostedTask"*, %"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*, %"class.base::Location"*, i64, i8, i8), void (%"struct.base::sequence_manager::internal::PostedTask"*, %"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"*, %"class.base::Location"*, i64, i8, i8)* @_ZN4base16sequence_manager8internal10PostedTaskC2E13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEENS_8LocationENS_9TimeDeltaENS_8NestableEh
@_ZN4base16sequence_manager8internal10PostedTaskC1EOS2_ = hidden unnamed_addr alias void (%"struct.base::sequence_manager::internal::PostedTask"*, %"struct.base::sequence_manager::internal::PostedTask"*), void (%"struct.base::sequence_manager::internal::PostedTask"*, %"struct.base::sequence_manager::internal::PostedTask"*)* @_ZN4base16sequence_manager8internal10PostedTaskC2EOS2_
@_ZN4base16sequence_manager8internal10PostedTaskD1Ev = hidden unnamed_addr alias void (%"struct.base::sequence_manager::internal::PostedTask"*), void (%"struct.base::sequence_manager::internal::PostedTask"*)* @_ZN4base16sequence_manager8internal10PostedTaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager4TaskC2ENS0_8internal10PostedTaskENS_9TimeTicksENS0_12EnqueueOrderES5_NS2_16WakeUpResolutionE(%"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::internal::PostedTask"*, i64, i64, i64, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = bitcast %"struct.base::sequence_manager::Task"* %0 to %"struct.base::PendingTask"*
  %9 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"struct.base::sequence_manager::internal::PostedTask"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 6, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  call void @_ZN4base11PendingTaskC2ERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeTicksES7_(%"struct.base::PendingTask"* %8, %"class.base::Location"* dereferenceable(32) %9, %"class.base::OnceCallback"* nonnull %7, i64 %15, i64 %2) #4
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #4
  %17 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 3
  %19 = load i8, i8* %18, align 8
  store i8 %19, i8* %17, align 1
  %20 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 2
  store i8 0, i8* %20, align 2
  %21 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 4
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %21, align 1
  %24 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 4
  %25 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 5
  %26 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %25, i64 0, i32 0
  %27 = bitcast %class.scoped_refptr.1* %25 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %class.scoped_refptr.1* %24 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %26, align 8
  %30 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 5, i32 0
  store i64 %4, i64* %30, align 8
  %31 = trunc i64 %3 to i32
  %32 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 0, i32 8
  store i32 %31, i32* %32, align 8
  %33 = icmp eq i32 %5, 1
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %20, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base11PendingTaskC2ERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeTicksES7_(%"struct.base::PendingTask"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager4TaskC2EOS1_(%"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"* dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.base::sequence_manager::Task"* %0 to %"struct.base::PendingTask"*
  %4 = bitcast %"struct.base::sequence_manager::Task"* %1 to %"struct.base::PendingTask"*
  tail call void @_ZN4base11PendingTaskC2EOS0_(%"struct.base::PendingTask"* %3, %"struct.base::PendingTask"* dereferenceable(112) %4) #4
  %5 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 3, i1 false)
  %7 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %1, i64 0, i32 4
  %9 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %8, i64 0, i32 0
  %10 = bitcast %class.scoped_refptr.1* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.scoped_refptr.1* %7 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %9, align 8
  %13 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %1, i64 0, i32 5, i32 0
  %14 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 5, i32 0
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  ret void
}

declare void @_ZN4base11PendingTaskC2EOS0_(%"struct.base::PendingTask"*, %"struct.base::PendingTask"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager4TaskD2Ev(%"struct.base::sequence_manager::Task"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %2, align 8
  %4 = icmp eq %"class.base::SequencedTaskRunner"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe.2"* %11 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %12) #4
  br label %13

13:                                               ; preds = %1, %5, %10
  %14 = bitcast %"struct.base::sequence_manager::Task"* %0 to %"struct.base::PendingTask"*
  tail call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* %14) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(128) %"struct.base::sequence_manager::Task"* @_ZN4base16sequence_manager4TaskaSEOS1_(%"struct.base::sequence_manager::Task"* returned, %"struct.base::sequence_manager::Task"* dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.base::sequence_manager::Task"* %0 to %"struct.base::PendingTask"*
  %4 = bitcast %"struct.base::sequence_manager::Task"* %1 to %"struct.base::PendingTask"*
  %5 = tail call dereferenceable(112) %"struct.base::PendingTask"* @_ZN4base11PendingTaskaSEOS0_(%"struct.base::PendingTask"* %3, %"struct.base::PendingTask"* dereferenceable(112) %4) #4
  %6 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 3, i1 false)
  %8 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %1, i64 0, i32 4
  %10 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %9, i64 0, i32 0
  %11 = bitcast %class.scoped_refptr.1* %9 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %10, align 8
  %13 = bitcast %class.scoped_refptr.1* %8 to i64*
  %14 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %8, i64 0, i32 0
  %15 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.base::SequencedTaskRunner"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %15, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe.2"* %23 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %24) #4
  br label %25

25:                                               ; preds = %2, %17, %22
  %26 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %1, i64 0, i32 5, i32 0
  %27 = getelementptr inbounds %"struct.base::sequence_manager::Task", %"struct.base::sequence_manager::Task"* %0, i64 0, i32 5, i32 0
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  ret %"struct.base::sequence_manager::Task"* %0
}

declare dereferenceable(112) %"struct.base::PendingTask"* @_ZN4base11PendingTaskaSEOS0_(%"struct.base::PendingTask"*, %"struct.base::PendingTask"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal10PostedTaskC2E13scoped_refptrINS_19SequencedTaskRunnerEENS_12OnceCallbackIFvvEEENS_8LocationENS_9TimeDeltaENS_8NestableEh(%"struct.base::sequence_manager::internal::PostedTask"*, %"class.base::SequencedTaskRunner"*, %"class.base::OnceCallback"* nocapture, %"class.base::Location"*, i64, i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %8 = ptrtoint %"class.base::SequencedTaskRunner"* %1 to i64
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.base::sequence_manager::internal::PostedTask"* %0 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %13, %"class.base::Location"* dereferenceable(32) %3) #4
  %14 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 2, i32 0
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 3
  store i8 %5, i8* %15, align 8
  %16 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 4
  store i8 %6, i8* %16, align 1
  %17 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 5
  %18 = bitcast %class.scoped_refptr.1* %17 to i64*
  store i64 %8, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %19, align 8
  ret void
}

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal10PostedTaskC2EOS2_(%"struct.base::sequence_manager::internal::PostedTask"*, %"struct.base::sequence_manager::internal::PostedTask"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.base::sequence_manager::internal::PostedTask"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.base::sequence_manager::internal::PostedTask"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  %7 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %7, %"class.base::Location"* dereferenceable(32) %8) #4
  %9 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 2, i32 0
  %11 = load i64, i64* %9, align 8
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 8
  store i8 %14, i8* %12, align 8
  %15 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 1
  store i8 %17, i8* %15, align 1
  %18 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 5
  %20 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %19, i64 0, i32 0
  %21 = bitcast %class.scoped_refptr.1* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %class.scoped_refptr.1* %18 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %20, align 8
  %24 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %1, i64 0, i32 6, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 6, i32 0, i32 0
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal10PostedTaskD2Ev(%"struct.base::sequence_manager::internal::PostedTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %2, align 8
  %4 = icmp eq %"class.base::SequencedTaskRunner"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe.2"* %11 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %12) #4
  br label %13

13:                                               ; preds = %1, %5, %10
  %14 = getelementptr inbounds %"struct.base::sequence_manager::internal::PostedTask", %"struct.base::sequence_manager::internal::PostedTask"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %14) #4
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
