; ModuleID = '../../third_party/blink/renderer/core/svg/svg_transform_distance.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_transform_distance.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.107", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist.38"* }
%"class.blink::Worklist.38" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.101", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i64 }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { float }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.110", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.38"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.147" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGTransformDistance" = type { i32, float, float, float, %"class.blink::AffineTransform" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::SVGTransform" = type { %"class.blink::SVGListablePropertyBase", i32, float, %"class.blink::FloatPoint", %"class.blink::AffineTransform" }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::FloatPoint" = type { float, float }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink20SVGTransformDistanceC1Ev = hidden unnamed_addr alias void (%"class.blink::SVGTransformDistance"*), void (%"class.blink::SVGTransformDistance"*)* @_ZN5blink20SVGTransformDistanceC2Ev
@_ZN5blink20SVGTransformDistanceC1ENS_16SVGTransformTypeEfffRKNS_15AffineTransformE = hidden unnamed_addr alias void (%"class.blink::SVGTransformDistance"*, i32, float, float, float, %"class.blink::AffineTransform"*), void (%"class.blink::SVGTransformDistance"*, i32, float, float, float, %"class.blink::AffineTransform"*)* @_ZN5blink20SVGTransformDistanceC2ENS_16SVGTransformTypeEfffRKNS_15AffineTransformE
@_ZN5blink20SVGTransformDistanceC1EPKNS_12SVGTransformES3_ = hidden unnamed_addr alias void (%"class.blink::SVGTransformDistance"*, %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"*), void (%"class.blink::SVGTransformDistance"*, %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"*)* @_ZN5blink20SVGTransformDistanceC2EPKNS_12SVGTransformES3_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGTransformDistanceC2Ev(%"class.blink::SVGTransformDistance"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::SVGTransformDistance"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %2) #7
  ret void
}

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGTransformDistanceC2ENS_16SVGTransformTypeEfffRKNS_15AffineTransformE(%"class.blink::SVGTransformDistance"* nocapture, i32, float, float, float, %"class.blink::AffineTransform"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  store float %2, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 2
  store float %3, float* %9, align 8
  %10 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 3
  store float %4, float* %10, align 4
  %11 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4
  %12 = bitcast %"class.blink::AffineTransform"* %11 to i8*
  %13 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 48, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGTransformDistanceC2EPKNS_12SVGTransformES3_(%"class.blink::SVGTransformDistance"*, %"class.blink::SVGTransform"*, %"class.blink::SVGTransform"*) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %7) #7
  %8 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 0
  store i32 %9, i32* %10, align 8
  switch i32 %9, label %61 [
    i32 5, label %55
    i32 6, label %55
    i32 4, label %11
    i32 2, label %29
    i32 3, label %41
  ]

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %2, i64 0, i32 3
  %13 = bitcast %"class.blink::FloatPoint"* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 8
  %15 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 3
  %16 = bitcast %"class.blink::FloatPoint"* %15 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 8
  %18 = extractelement <2 x float> %14, i32 0
  %19 = extractelement <2 x float> %17, i32 0
  %20 = fsub float %18, %19
  %21 = extractelement <2 x float> %14, i32 1
  %22 = extractelement <2 x float> %17, i32 1
  %23 = fsub float %21, %22
  %24 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %2, i64 0, i32 2
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 2
  %27 = load float, float* %26, align 4
  %28 = fsub float %25, %27
  store float %28, float* %4, align 4
  store float %20, float* %5, align 8
  store float %23, float* %6, align 4
  br label %61

29:                                               ; preds = %3
  %30 = tail call <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"* %2) #7
  %31 = tail call <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"* %1) #7
  %32 = extractelement <2 x float> %30, i32 0
  %33 = extractelement <2 x float> %31, i32 0
  %34 = fsub float %32, %33
  %35 = extractelement <2 x float> %30, i32 1
  %36 = extractelement <2 x float> %31, i32 1
  %37 = fsub float %35, %36
  %38 = fpext float %34 to double
  %39 = fpext float %37 to double
  %40 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* %7, double %38, double %39) #7
  br label %61

41:                                               ; preds = %3
  %42 = tail call <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"* %2) #7
  %43 = extractelement <2 x float> %42, i32 0
  %44 = tail call <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"* %1) #7
  %45 = extractelement <2 x float> %44, i32 0
  %46 = fsub float %43, %45
  %47 = tail call <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"* %2) #7
  %48 = extractelement <2 x float> %47, i32 1
  %49 = tail call <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"* %1) #7
  %50 = extractelement <2 x float> %49, i32 1
  %51 = fsub float %48, %50
  %52 = fpext float %46 to double
  %53 = fpext float %51 to double
  %54 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform15ScaleNonUniformEdd(%"class.blink::AffineTransform"* %7, double %52, double %53) #7
  br label %61

55:                                               ; preds = %3, %3
  %56 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %2, i64 0, i32 2
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 2
  %59 = load float, float* %58, align 4
  %60 = fsub float %57, %59
  store float %60, float* %4, align 4
  br label %61

61:                                               ; preds = %3, %55, %41, %29, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"*) local_unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #1

declare <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"*) local_unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform15ScaleNonUniformEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20SVGTransformDistance14ScaledDistanceEf(%"class.blink::SVGTransformDistance"* noalias sret, %"class.blink::SVGTransformDistance"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = alloca %"class.blink::AffineTransform", align 8
  %6 = alloca %"class.blink::AffineTransform", align 8
  %7 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %92 [
    i32 1, label %9
    i32 0, label %9
    i32 4, label %12
    i32 3, label %29
    i32 2, label %51
    i32 5, label %75
    i32 6, label %75
  ]

9:                                                ; preds = %3, %3
  %10 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4
  %11 = bitcast %"class.blink::SVGTransformDistance"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #7
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %10) #7
  br label %95

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fmul float %14, %2
  %16 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 2
  %17 = load float, float* %16, align 8
  %18 = fmul float %17, %2
  %19 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fmul float %20, %2
  %22 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #7
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %4) #7
  %23 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 0
  store i32 4, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  store float %15, float* %24, align 4
  %25 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 2
  store float %18, float* %25, align 8
  %26 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 3
  store float %21, float* %26, align 4
  %27 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4
  %28 = bitcast %"class.blink::AffineTransform"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %22, i64 48, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #7
  br label %95

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = fmul float %31, %2
  %33 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 2
  %34 = load float, float* %33, align 8
  %35 = fmul float %34, %2
  %36 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 3
  %37 = load float, float* %36, align 4
  %38 = fmul float %37, %2
  %39 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #7
  %40 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 4
  %41 = bitcast %"class.blink::AffineTransform"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %41, i64 48, i1 false)
  %42 = fpext float %2 to double
  %43 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %5, double %42) #7
  %44 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 0
  store i32 3, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  store float %32, float* %45, align 4
  %46 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 2
  store float %35, float* %46, align 8
  %47 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 3
  store float %38, float* %47, align 4
  %48 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4
  %49 = bitcast %"class.blink::AffineTransform"* %48 to i8*
  %50 = bitcast %"class.blink::AffineTransform"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 48, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #7
  br label %95

51:                                               ; preds = %3
  %52 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 4, i32 0, i64 0
  %53 = bitcast double* %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  %55 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 4, i32 0, i64 2
  %56 = bitcast double* %55 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 8
  %58 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 4, i32 0, i64 4
  %59 = fpext float %2 to double
  %60 = bitcast double* %58 to <2 x double>*
  %61 = load <2 x double>, <2 x double>* %60, align 8
  %62 = insertelement <2 x double> undef, double %59, i32 0
  %63 = shufflevector <2 x double> %62, <2 x double> undef, <2 x i32> zeroinitializer
  %64 = fmul <2 x double> %61, %63
  %65 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 0
  store i32 2, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %66, align 4
  %67 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %67, align 8
  %68 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %68, align 4
  %69 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 0
  %70 = bitcast double* %69 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 2
  %72 = bitcast double* %71 to <2 x i64>*
  store <2 x i64> %57, <2 x i64>* %72, align 8
  %73 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 4
  %74 = bitcast double* %73 to <2 x double>*
  store <2 x double> %64, <2 x double>* %74, align 8
  br label %95

75:                                               ; preds = %3, %3
  %76 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 1
  %77 = load float, float* %76, align 4
  %78 = fmul float %77, %2
  %79 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 2
  %80 = load float, float* %79, align 8
  %81 = fmul float %80, %2
  %82 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %1, i64 0, i32 3
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, %2
  %85 = bitcast %"class.blink::AffineTransform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #7
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %6) #7
  %86 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 0
  store i32 %8, i32* %86, align 8
  %87 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  store float %78, float* %87, align 4
  %88 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 2
  store float %81, float* %88, align 8
  %89 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 3
  store float %84, float* %89, align 4
  %90 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4
  %91 = bitcast %"class.blink::AffineTransform"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %85, i64 48, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #7
  br label %95

92:                                               ; preds = %3
  %93 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4
  %94 = bitcast %"class.blink::SVGTransformDistance"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #7
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %93) #7
  br label %95

95:                                               ; preds = %92, %75, %51, %29, %12, %9
  ret void
}

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGTransform"* @_ZN5blink20SVGTransformDistance16AddSVGTransformsEPKNS_12SVGTransformES3_j(%"class.blink::SVGTransform"*, %"class.blink::SVGTransform"*, i32) local_unnamed_addr #3 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #7
  %5 = bitcast i8* %4 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1Ev(%"class.blink::SVGTransform"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %76 [
    i32 6, label %68
    i32 5, label %60
    i32 4, label %12
    i32 2, label %34
    i32 3, label %48
  ]

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = uitofp i32 %2 to float
  %18 = fmul float %16, %17
  %19 = fadd float %14, %18
  %20 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 3
  %21 = bitcast %"class.blink::FloatPoint"* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 8
  %23 = extractelement <2 x float> %22, i32 0
  %24 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 3
  %25 = bitcast %"class.blink::FloatPoint"* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 8
  %27 = extractelement <2 x float> %26, i32 0
  %28 = fmul float %27, %17
  %29 = fadd float %23, %28
  %30 = extractelement <2 x float> %22, i32 1
  %31 = extractelement <2 x float> %26, i32 1
  %32 = fmul float %31, %17
  %33 = fadd float %30, %32
  tail call void @_ZN5blink12SVGTransform9SetRotateEfff(%"class.blink::SVGTransform"* %5, float %19, float %29, float %33) #7
  br label %76

34:                                               ; preds = %3
  %35 = tail call <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"* %0) #7
  %36 = extractelement <2 x float> %35, i32 0
  %37 = tail call <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"* %1) #7
  %38 = extractelement <2 x float> %37, i32 0
  %39 = uitofp i32 %2 to float
  %40 = fmul float %38, %39
  %41 = fadd float %36, %40
  %42 = tail call <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"* %0) #7
  %43 = extractelement <2 x float> %42, i32 1
  %44 = tail call <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"* %1) #7
  %45 = extractelement <2 x float> %44, i32 1
  %46 = fmul float %45, %39
  %47 = fadd float %43, %46
  tail call void @_ZN5blink12SVGTransform12SetTranslateEff(%"class.blink::SVGTransform"* %5, float %41, float %47) #7
  br label %76

48:                                               ; preds = %3
  %49 = tail call <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"* %1) #7
  %50 = uitofp i32 %2 to float
  %51 = extractelement <2 x float> %49, i32 0
  %52 = fmul float %51, %50
  %53 = extractelement <2 x float> %49, i32 1
  %54 = fmul float %53, %50
  %55 = tail call <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"* %0) #7
  %56 = extractelement <2 x float> %55, i32 0
  %57 = fadd float %52, %56
  %58 = extractelement <2 x float> %55, i32 1
  %59 = fadd float %54, %58
  tail call void @_ZN5blink12SVGTransform8SetScaleEff(%"class.blink::SVGTransform"* %5, float %57, float %59) #7
  br label %76

60:                                               ; preds = %3
  %61 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 2
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 2
  %64 = load float, float* %63, align 4
  %65 = uitofp i32 %2 to float
  %66 = fmul float %64, %65
  %67 = fadd float %62, %66
  tail call void @_ZN5blink12SVGTransform8SetSkewXEf(%"class.blink::SVGTransform"* %5, float %67) #7
  br label %76

68:                                               ; preds = %3
  %69 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %0, i64 0, i32 2
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 2
  %72 = load float, float* %71, align 4
  %73 = uitofp i32 %2 to float
  %74 = fmul float %72, %73
  %75 = fadd float %70, %74
  tail call void @_ZN5blink12SVGTransform8SetSkewYEf(%"class.blink::SVGTransform"* %5, float %75) #7
  br label %76

76:                                               ; preds = %3, %68, %60, %48, %34, %12
  ret %"class.blink::SVGTransform"* %5
}

declare void @_ZN5blink12SVGTransform9SetRotateEfff(%"class.blink::SVGTransform"*, float, float, float) local_unnamed_addr #1

declare void @_ZN5blink12SVGTransform12SetTranslateEff(%"class.blink::SVGTransform"*, float, float) local_unnamed_addr #1

declare void @_ZN5blink12SVGTransform8SetScaleEff(%"class.blink::SVGTransform"*, float, float) local_unnamed_addr #1

declare void @_ZN5blink12SVGTransform8SetSkewXEf(%"class.blink::SVGTransform"*, float) local_unnamed_addr #1

declare void @_ZN5blink12SVGTransform8SetSkewYEf(%"class.blink::SVGTransform"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGTransform"* @_ZNK5blink20SVGTransformDistance17AddToSVGTransformEPKNS_12SVGTransformE(%"class.blink::SVGTransformDistance"* nocapture readonly, %"class.blink::SVGTransform"*) local_unnamed_addr #3 align 2 {
  %3 = tail call %"class.blink::SVGTransform"* @_ZNK5blink12SVGTransform5CloneEv(%"class.blink::SVGTransform"* %1) #7
  %4 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %68 [
    i32 1, label %6
    i32 0, label %6
    i32 2, label %13
    i32 3, label %26
    i32 4, label %39
    i32 5, label %56
    i32 6, label %62
  ]

6:                                                ; preds = %2, %2
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 80) #7
  %8 = bitcast i8* %7 to %"class.blink::SVGTransform"*
  tail call void @_ZN5blink12SVGTransformC1Ev(%"class.blink::SVGTransform"* %8) #7
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  br label %68

13:                                               ; preds = %2
  %14 = tail call <2 x float> @_ZNK5blink12SVGTransform9TranslateEv(%"class.blink::SVGTransform"* %1) #7
  %15 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 4
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 5
  %18 = load double, double* %17, align 8
  %19 = tail call <2 x float> @_ZN5blink9FloatSize15NarrowPrecisionEdd(double %16, double %18) #7
  %20 = extractelement <2 x float> %19, i32 0
  %21 = extractelement <2 x float> %19, i32 1
  %22 = extractelement <2 x float> %14, i32 0
  %23 = fadd float %22, %20
  %24 = extractelement <2 x float> %14, i32 1
  %25 = fadd float %24, %21
  tail call void @_ZN5blink12SVGTransform12SetTranslateEff(%"class.blink::SVGTransform"* %3, float %23, float %25) #7
  br label %68

26:                                               ; preds = %2
  %27 = tail call <2 x float> @_ZNK5blink12SVGTransform5ScaleEv(%"class.blink::SVGTransform"* %1) #7
  %28 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 0
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 3
  %31 = load double, double* %30, align 8
  %32 = tail call <2 x float> @_ZN5blink9FloatSize15NarrowPrecisionEdd(double %29, double %31) #7
  %33 = extractelement <2 x float> %27, i32 0
  %34 = extractelement <2 x float> %32, i32 0
  %35 = fadd float %33, %34
  %36 = extractelement <2 x float> %27, i32 1
  %37 = extractelement <2 x float> %32, i32 1
  %38 = fadd float %36, %37
  tail call void @_ZN5blink12SVGTransform8SetScaleEff(%"class.blink::SVGTransform"* %3, float %35, float %38) #7
  br label %68

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 3
  %41 = bitcast %"class.blink::FloatPoint"* %40 to <2 x float>*
  %42 = load <2 x float>, <2 x float>* %41, align 8
  %43 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 2
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  %46 = load float, float* %45, align 4
  %47 = fadd float %44, %46
  %48 = extractelement <2 x float> %42, i32 0
  %49 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 2
  %50 = load float, float* %49, align 8
  %51 = fadd float %48, %50
  %52 = extractelement <2 x float> %42, i32 1
  %53 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 3
  %54 = load float, float* %53, align 4
  %55 = fadd float %52, %54
  tail call void @_ZN5blink12SVGTransform9SetRotateEfff(%"class.blink::SVGTransform"* %3, float %47, float %51, float %55) #7
  br label %68

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 2
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  %60 = load float, float* %59, align 4
  %61 = fadd float %58, %60
  tail call void @_ZN5blink12SVGTransform8SetSkewXEf(%"class.blink::SVGTransform"* %3, float %61) #7
  br label %68

62:                                               ; preds = %2
  %63 = getelementptr inbounds %"class.blink::SVGTransform", %"class.blink::SVGTransform"* %1, i64 0, i32 2
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  %66 = load float, float* %65, align 4
  %67 = fadd float %64, %66
  tail call void @_ZN5blink12SVGTransform8SetSkewYEf(%"class.blink::SVGTransform"* %3, float %67) #7
  br label %68

68:                                               ; preds = %2, %62, %56, %39, %26, %13, %6
  %69 = phi %"class.blink::SVGTransform"* [ %3, %62 ], [ %3, %56 ], [ %3, %39 ], [ %3, %26 ], [ %3, %13 ], [ %8, %6 ], [ %3, %2 ]
  ret %"class.blink::SVGTransform"* %69
}

declare %"class.blink::SVGTransform"* @_ZNK5blink12SVGTransform5CloneEv(%"class.blink::SVGTransform"*) local_unnamed_addr #1

declare <2 x float> @_ZN5blink9FloatSize15NarrowPrecisionEdd(double, double) local_unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden float @_ZNK5blink20SVGTransformDistance8DistanceEv(%"class.blink::SVGTransformDistance"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %40 [
    i32 6, label %37
    i32 5, label %37
    i32 4, label %4
    i32 3, label %17
    i32 2, label %27
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = fmul float %6, %6
  %8 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 2
  %9 = load float, float* %8, align 8
  %10 = fmul float %9, %9
  %11 = fadd float %7, %10
  %12 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 3
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, %13
  %15 = fadd float %11, %14
  %16 = tail call float @sqrtf(float %15) #7
  br label %40

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 0
  %19 = load double, double* %18, align 8
  %20 = fmul double %19, %19
  %21 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 3
  %22 = load double, double* %21, align 8
  %23 = fmul double %22, %22
  %24 = fadd double %20, %23
  %25 = tail call double @sqrt(double %24) #7
  %26 = fptrunc double %25 to float
  br label %40

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 4
  %29 = load double, double* %28, align 8
  %30 = fmul double %29, %29
  %31 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 4, i32 0, i64 5
  %32 = load double, double* %31, align 8
  %33 = fmul double %32, %32
  %34 = fadd double %30, %33
  %35 = tail call double @sqrt(double %34) #7
  %36 = fptrunc double %35 to float
  br label %40

37:                                               ; preds = %1, %1
  %38 = getelementptr inbounds %"class.blink::SVGTransformDistance", %"class.blink::SVGTransformDistance"* %0, i64 0, i32 1
  %39 = load float, float* %38, align 4
  br label %40

40:                                               ; preds = %1, %37, %27, %17, %4
  %41 = phi float [ %39, %37 ], [ %36, %27 ], [ %26, %17 ], [ %16, %4 ], [ 0.000000e+00, %1 ]
  ret float %41
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #5

declare void @_ZN5blink12SVGTransformC1Ev(%"class.blink::SVGTransform"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.196"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.196"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.196"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
