; ModuleID = '../../third_party/skia/src/gpu/effects/generated/GrMagnifierEffect.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/generated/GrMagnifierEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrMagnifierEffect = type { %class.GrFragmentProcessor.base, %struct.SkIRect, %struct.SkRect, float, float, float, float, [4 x i8] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.3 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.3 = type { %"class.std::__1::unique_ptr.4"*, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.1 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrGLSLFragmentProcessor* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.16*, i32, i32 }
%class.SkTArray.16 = type { i32*, i64 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrGLSLMagnifierEffect = type { %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.26, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.28, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.37], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::vector", i32, %class.SkSTArray.118 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.39, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.39 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.40, i32, [4 x i8] }>
%class.SkSTArray.40 = type { %class.SkAlignedSTStorage.41, %class.SkTArray.16 }
%class.SkAlignedSTStorage.41 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.42, i32, [4 x i8] }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.91, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.45, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.45 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.46, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.85" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.46 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.50 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.47, [4 x i8] }>
%union.anon.47 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.48, i8* }
%class.sk_sp.48 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.49, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.49 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.50 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.51, void (i8*)*, i8* }
%class.SkNVRefCnt.51 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.46, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.82, %class.sk_sp.84, %class.sk_sp.84 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.58, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.58 = type { %class.SkTHashTable.59 }
%class.SkTHashTable.59 = type { i32, i32, %class.SkAutoTArray.60 }
%class.SkAutoTArray.60 = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.67, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.67 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.68" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.73, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.73 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.74 }
%class.SkTHashTable.74 = type { i32, i32, %class.SkAutoTArray.75 }
%class.SkAutoTArray.75 = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.82 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.83, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.83 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.84 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.90 }
%union.anon.90 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%class.sk_sp.91 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.92, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.92 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.93"*, [24 x i8] }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.GrFragmentProcessor* }
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.99, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.99 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.103 }
%class.SkTArray.103 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::unique_ptr"* }
%class.SkSTArray.118 = type { %class.SkAlignedSTStorage.119, %class.SkTArray.120 }
%class.SkAlignedSTStorage.119 = type { [160 x i8] }
%class.SkTArray.120 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.26 = type { %class.SkAlignedSTStorage.27, %class.SkTArray }
%class.SkAlignedSTStorage.27 = type { [120 x i8] }
%class.SkSTArray.28 = type { %class.SkAlignedSTStorage.29, %class.SkTArray.30 }
%class.SkAlignedSTStorage.29 = type { [16 x i8] }
%class.SkTArray.30 = type { %"class.std::__1::unique_ptr.31"*, i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.37 = type { %class.SkAlignedSTStorage.38, %class.SkTArray }
%class.SkAlignedSTStorage.38 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.26, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.28, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.37], i32, i8, [3 x i8], i32, [12 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN17GrMagnifierEffectD0Ev = comdat any

$_ZNK17GrMagnifierEffect4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN21GrGLSLMagnifierEffectD0Ev = comdat any

$_ZN21GrGLSLMagnifierEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN21GrGLSLMagnifierEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV21GrGLSLMagnifierEffect = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@_ZTV17GrMagnifierEffect = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrMagnifierEffect*)* @_ZN17GrMagnifierEffectD0Ev to i8*), i8* bitcast (i8* (%class.GrMagnifierEffect*)* @_ZNK17GrMagnifierEffect4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrMagnifierEffect*)* @_ZNK17GrMagnifierEffect5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrMagnifierEffect*)* @_ZNK17GrMagnifierEffect17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrMagnifierEffect*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK17GrMagnifierEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrMagnifierEffect*, %class.GrFragmentProcessor*)* @_ZNK17GrMagnifierEffect9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [16 x i8] c"MagnifierEffect\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.2 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTV21GrGLSLMagnifierEffect = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLMagnifierEffect*)* @_ZN21GrGLSLMagnifierEffectD0Ev to i8*), i8* bitcast (void (%class.GrGLSLMagnifierEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN21GrGLSLMagnifierEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLMagnifierEffect*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN21GrGLSLMagnifierEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [14 x i8] c"boundsUniform\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"xInvZoom\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"yInvZoom\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"xInvInset\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"yInvInset\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.9 = private unnamed_addr constant [464 x i8] c"float2 zoom_coord = float2(%s) + %s * float2(%s, %s);\0Afloat2 delta = (%s - %s.xy) * %s.zw;\0Adelta = min(delta, float2(1.0) - delta);\0Adelta *= float2(%s, %s);\0Afloat weight = 0.0;\0Aif (delta.x < 2.0 && delta.y < 2.0) {\0A    delta = float2(2.0) - delta;\0A    float dist = length(delta);\0A    dist = max(2.0 - dist, 0.0);\0A    weight = min(dist * dist, 1.0);\0A} else {\0A    float2 delta_squared = delta * delta;\0A    weight = min(min(delta_squared.x, delta_squared.y), 1.0);\0A}\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"mix(%s, zoom_coord, weight)\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"\0Areturn %s;\0A\00", align 1

@_ZN17GrMagnifierEffectC1ERKS_ = hidden unnamed_addr alias void (%class.GrMagnifierEffect*, %class.GrMagnifierEffect*), void (%class.GrMagnifierEffect*, %class.GrMagnifierEffect*)* @_ZN17GrMagnifierEffectC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK17GrMagnifierEffect17onMakeProgramImplEv(%class.GrMagnifierEffect* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 64) #14
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV21GrGLSLMagnifierEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 -1, i64 24, i1 false) #11
  %13 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK17GrMagnifierEffect21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrMagnifierEffect* nocapture, %class.GrShaderCaps* nocapture dereferenceable(144), %class.GrProcessorKeyBuilder* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17GrMagnifierEffect9onIsEqualERK19GrFragmentProcessor(%class.GrMagnifierEffect* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #3 align 2 {
  %3 = bitcast %class.GrFragmentProcessor* %1 to %class.GrMagnifierEffect*
  %4 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 1
  %5 = bitcast %struct.SkIRect* %4 to i8*
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5, i64 0
  %7 = tail call i32 @bcmp(i8* %5, i8* %6, i64 16) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %63

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 2
  %11 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 2, i32 0
  %12 = bitcast i32* %10 to float*
  %13 = load float, float* %11, align 4
  %14 = load float, float* %12, align 4
  %15 = fcmp une float %13, %14
  br i1 %15, label %63, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds float, float* %11, i64 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds i32, i32* %10, i64 1
  %20 = bitcast i32* %19 to float*
  %21 = load float, float* %20, align 4
  %22 = fcmp une float %18, %21
  br i1 %22, label %63, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds float, float* %11, i64 2
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds i32, i32* %10, i64 2
  %27 = bitcast i32* %26 to float*
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %25, %28
  br i1 %29, label %63, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds float, float* %11, i64 3
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds i32, i32* %10, i64 3
  %34 = bitcast i32* %33 to float*
  %35 = load float, float* %34, align 4
  %36 = fcmp une float %32, %35
  br i1 %36, label %63, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 3
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %3, i64 0, i32 3
  %41 = load float, float* %40, align 4
  %42 = fcmp une float %39, %41
  br i1 %42, label %63, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 4
  %45 = load float, float* %44, align 8
  %46 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 1, i32 1, i32 1
  %47 = bitcast i64* %46 to float*
  %48 = load float, float* %47, align 8
  %49 = fcmp une float %45, %48
  br i1 %49, label %63, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 5
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %3, i64 0, i32 5
  %54 = load float, float* %53, align 4
  %55 = fcmp une float %52, %54
  br i1 %55, label %63, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 6
  %58 = load float, float* %57, align 8
  %59 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 2
  %60 = bitcast %class.GrFragmentProcessor** %59 to float*
  %61 = load float, float* %60, align 8
  %62 = fcmp oeq float %58, %61
  br label %63

63:                                               ; preds = %2, %30, %23, %16, %9, %56, %50, %43, %37
  %64 = phi i1 [ false, %2 ], [ false, %37 ], [ false, %43 ], [ false, %50 ], [ %62, %56 ], [ false, %9 ], [ false, %16 ], [ false, %23 ], [ false, %30 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrMagnifierEffectC2ERKS_(%class.GrMagnifierEffect*, %class.GrMagnifierEffect* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrMagnifierEffect* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrMagnifierEffect* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 0, i32 1
  store i32 60, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.3* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrMagnifierEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %1, i64 0, i32 1
  %21 = bitcast %struct.SkIRect* %19 to i8*
  %22 = bitcast %struct.SkIRect* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 16, i1 false)
  %23 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 2
  %24 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %1, i64 0, i32 2
  %25 = bitcast %struct.SkRect* %23 to i8*
  %26 = bitcast %struct.SkRect* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 16, i1 false)
  %27 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 3
  %28 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %1, i64 0, i32 3
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast float* %27 to i32*
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 4
  %33 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %1, i64 0, i32 4
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = bitcast float* %32 to i32*
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 5
  %38 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %1, i64 0, i32 5
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = bitcast float* %37 to i32*
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 6
  %43 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %1, i64 0, i32 6
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = bitcast float* %42 to i32*
  store i32 %45, i32* %46, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #11
  %47 = load i32, i32* %16, align 8
  %48 = or i32 %47, 16
  store i32 %48, i32* %16, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK17GrMagnifierEffect5cloneEv(%class.GrMagnifierEffect*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 112) #11
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrMagnifierEffect* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 60, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV17GrMagnifierEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 1
  %27 = bitcast %struct.SkIRect* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %27, i64 16, i1 false) #11
  %28 = getelementptr inbounds i8, i8* %2, i64 76
  %29 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 2
  %30 = bitcast %struct.SkRect* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %30, i64 16, i1 false) #11
  %31 = getelementptr inbounds i8, i8* %2, i64 92
  %32 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 3
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = bitcast i8* %31 to i32*
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %2, i64 96
  %37 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 4
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = bitcast i8* %36 to i32*
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %2, i64 100
  %42 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 5
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = bitcast i8* %41 to i32*
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %2, i64 104
  %47 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 6
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = bitcast i8* %46 to i32*
  store i32 %49, i32* %50, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #11
  %51 = load i32, i32* %21, align 8
  %52 = or i32 %51, 16
  store i32 %52, i32* %21, align 8
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.4"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #11
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #11
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrMagnifierEffectD0Ev(%class.GrMagnifierEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.3, %class.SkTArray.3* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #11
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.3* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #11
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrMagnifierEffect* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK17GrMagnifierEffect4nameEv(%class.GrMagnifierEffect*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrGLSLMagnifierEffectD0Ev(%class.GrGLSLMagnifierEffect*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #11
  %3 = bitcast %class.GrGLSLMagnifierEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrGLSLMagnifierEffect8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLMagnifierEffect*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %8 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %7, align 8
  %9 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %10 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %9, align 8
  %11 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %12 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %13 = bitcast %class.GrGLSLUniformHandler* %12 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %14 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %13, align 8
  %15 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %14, i64 13
  %16 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %15, align 8
  %17 = tail call i32 %16(%class.GrGLSLUniformHandler* %12, %class.GrFragmentProcessor* %10, i32 16, i32 24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %18 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 1, i32 0
  store i32 %17, i32* %18, align 8
  %19 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %20 = bitcast %class.GrGLSLUniformHandler* %19 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %21 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %20, align 8
  %22 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %21, i64 13
  %23 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %22, align 8
  %24 = tail call i32 %23(%class.GrGLSLUniformHandler* %19, %class.GrFragmentProcessor* %10, i32 16, i32 21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %25 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 3, i32 0
  store i32 %24, i32* %25, align 8
  %26 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %27 = bitcast %class.GrGLSLUniformHandler* %26 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %28 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %27, align 8
  %29 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %28, i64 13
  %30 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %29, align 8
  %31 = tail call i32 %30(%class.GrGLSLUniformHandler* %26, %class.GrFragmentProcessor* %10, i32 16, i32 21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %32 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 4, i32 0
  store i32 %31, i32* %32, align 4
  %33 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %34 = bitcast %class.GrGLSLUniformHandler* %33 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %35 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %34, align 8
  %36 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %35, i64 13
  %37 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %36, align 8
  %38 = tail call i32 %37(%class.GrGLSLUniformHandler* %33, %class.GrFragmentProcessor* %10, i32 16, i32 21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %39 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 5, i32 0
  store i32 %38, i32* %39, align 8
  %40 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %41 = bitcast %class.GrGLSLUniformHandler* %40 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %42 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %41, align 8
  %43 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %42, i64 13
  %44 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %43, align 8
  %45 = tail call i32 %44(%class.GrGLSLUniformHandler* %40, %class.GrFragmentProcessor* %10, i32 16, i32 21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %46 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 6, i32 0
  store i32 %45, i32* %46, align 4
  %47 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %48 = bitcast %class.GrGLSLUniformHandler* %47 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %49 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %48, align 8
  %50 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %49, i64 13
  %51 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %50, align 8
  %52 = tail call i32 %51(%class.GrGLSLUniformHandler* %47, %class.GrFragmentProcessor* %10, i32 16, i32 29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #11
  %53 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 2, i32 0
  store i32 %52, i32* %53, align 4
  %54 = bitcast %class.GrGLSLFPFragmentBuilder* %8 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr i8, i8* %55, i64 -24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %class.GrGLSLFPFragmentBuilder* %8 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  %61 = bitcast i8* %60 to %class.GrGLSLShaderBuilder*
  %62 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %63 = bitcast %class.GrGLSLUniformHandler* %62 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %64 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %63, align 8
  %65 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %64, i64 3
  %66 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %65, align 8
  %67 = tail call i8* %66(%class.GrGLSLUniformHandler* %62, i32 %52) #11
  %68 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 5
  %69 = load i8*, i8** %68, align 8
  %70 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %71 = load i32, i32* %25, align 8
  %72 = bitcast %class.GrGLSLUniformHandler* %70 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %73 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %72, align 8
  %74 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %73, i64 3
  %75 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %74, align 8
  %76 = tail call i8* %75(%class.GrGLSLUniformHandler* %70, i32 %71) #11
  %77 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %78 = load i32, i32* %32, align 4
  %79 = bitcast %class.GrGLSLUniformHandler* %77 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %80 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %79, align 8
  %81 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %80, i64 3
  %82 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %81, align 8
  %83 = tail call i8* %82(%class.GrGLSLUniformHandler* %77, i32 %78) #11
  %84 = load i8*, i8** %68, align 8
  %85 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %86 = load i32, i32* %18, align 8
  %87 = bitcast %class.GrGLSLUniformHandler* %85 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %88 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %87, align 8
  %89 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %88, i64 3
  %90 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %89, align 8
  %91 = tail call i8* %90(%class.GrGLSLUniformHandler* %85, i32 %86) #11
  %92 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %93 = load i32, i32* %18, align 8
  %94 = bitcast %class.GrGLSLUniformHandler* %92 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %95 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %94, align 8
  %96 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %95, i64 3
  %97 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %96, align 8
  %98 = tail call i8* %97(%class.GrGLSLUniformHandler* %92, i32 %93) #11
  %99 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %100 = load i32, i32* %39, align 8
  %101 = bitcast %class.GrGLSLUniformHandler* %99 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %102 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %101, align 8
  %103 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %102, i64 3
  %104 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %103, align 8
  %105 = tail call i8* %104(%class.GrGLSLUniformHandler* %99, i32 %100) #11
  %106 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %11, align 8
  %107 = load i32, i32* %46, align 4
  %108 = bitcast %class.GrGLSLUniformHandler* %106 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %109 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %108, align 8
  %110 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %109, i64 3
  %111 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %110, align 8
  %112 = tail call i8* %111(%class.GrGLSLUniformHandler* %106, i32 %107) #11
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %61, i8* getelementptr inbounds ([464 x i8], [464 x i8]* @.str.9, i64 0, i64 0), i8* %67, i8* %69, i8* %76, i8* %83, i8* %84, i8* %91, i8* %98, i8* %105, i8* %112)
  %113 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #11
  %114 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %114, align 8
  %115 = load i8*, i8** %68, align 8
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* nonnull sret %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i8* %115) #11
  %116 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  %117 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %117, align 8
  %118 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 0
  %119 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %114, align 8
  %120 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %119, i64 0, i32 2
  %121 = call i64 @strlen(i8* %120) #11
  %122 = icmp ugt i64 %121, -17
  br i1 %122, label %123, label %125

123:                                              ; preds = %2
  %124 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %124) #15
  unreachable

125:                                              ; preds = %2
  %126 = icmp ult i64 %121, 23
  br i1 %126, label %136, label %127

127:                                              ; preds = %125
  %128 = add nuw i64 %121, 16
  %129 = and i64 %128, -16
  %130 = call i8* @_Znwm(i64 %129) #14
  %131 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %130, i8** %131, align 8
  %132 = or i64 %129, -9223372036854775808
  %133 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %121, i64* %134, align 8
  %135 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %142

136:                                              ; preds = %125
  %137 = trunc i64 %121 to i8
  %138 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  store i8 %137, i8* %139, align 1
  %140 = bitcast %"class.SkSL::String"* %6 to i8*
  %141 = icmp eq i64 %121, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %136, %127
  %143 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %138, %136 ], [ %135, %127 ]
  %144 = phi i8* [ %140, %136 ], [ %130, %127 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %144, i8* align 1 %120, i64 %121, i1 false) #11
  br label %145

145:                                              ; preds = %136, %142
  %146 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %138, %136 ], [ %143, %142 ]
  %147 = phi i8* [ %140, %136 ], [ %144, %142 ]
  %148 = getelementptr inbounds i8, i8* %147, i64 %121
  store i8 0, i8* %148, align 1
  %149 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149)
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1, !noalias !2
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %145
  %154 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %149, i8* nonnull align 8 %154, i64 24, i1 false) #11, !noalias !2
  br label %161

155:                                              ; preds = %145
  %156 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %157 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8, !noalias !2
  %159 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = load i64, i64* %159, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %156, i8* %158, i64 %160) #11
  br label %161

161:                                              ; preds = %155, %153
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %5, %class.GrGLSLFragmentProcessor* %118, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #11
  %162 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1, !noalias !2
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8, !noalias !2
  call void @_ZdlPv(i8* %168) #14
  br label %169

169:                                              ; preds = %161, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149)
  %170 = load i8, i8* %150, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %169, %172
  %176 = load i8*, i8** %54, align 8
  %177 = getelementptr i8, i8* %176, i64 -24
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds i8, i8* %59, i64 %179
  %181 = bitcast i8* %180 to %class.GrGLSLShaderBuilder*
  %182 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %117, align 8
  %183 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %182, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %181, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* %183)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrGLSLMagnifierEffect9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLMagnifierEffect*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %class.GrFragmentProcessor* %2 to %class.GrMagnifierEffect*
  %5 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %4, i64 0, i32 3
  %8 = load float, float* %7, align 4
  %9 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float)***
  %10 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %9, align 8
  %11 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %10, i64 4
  %12 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %11, align 8
  tail call void %12(%class.GrGLSLProgramDataManager* %1, i32 %6, float %8) #11
  %13 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 4, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 1, i32 1, i32 1
  %16 = bitcast i64* %15 to float*
  %17 = load float, float* %16, align 8
  %18 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %9, align 8
  %19 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %18, i64 4
  %20 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %19, align 8
  tail call void %20(%class.GrGLSLProgramDataManager* %1, i32 %14, float %17) #11
  %21 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 5, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %4, i64 0, i32 5
  %24 = load float, float* %23, align 4
  %25 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %9, align 8
  %26 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %25, i64 4
  %27 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %26, align 8
  tail call void %27(%class.GrGLSLProgramDataManager* %1, i32 %22, float %24) #11
  %28 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 6, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 2
  %31 = bitcast %class.GrFragmentProcessor** %30 to float*
  %32 = load float, float* %31, align 8
  %33 = load void (%class.GrGLSLProgramDataManager*, i32, float)**, void (%class.GrGLSLProgramDataManager*, i32, float)*** %9, align 8
  %34 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %33, i64 4
  %35 = load void (%class.GrGLSLProgramDataManager*, i32, float)*, void (%class.GrGLSLProgramDataManager*, i32, float)** %34, align 8
  tail call void %35(%class.GrGLSLProgramDataManager* %1, i32 %29, float %32) #11
  %36 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 5
  %37 = bitcast [4 x i8]* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %40 = bitcast %class.GrFragmentProcessor* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.GrMagnifierEffect, %class.GrMagnifierEffect* %4, i64 0, i32 1, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 2
  %47 = bitcast i32* %46 to float*
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 1
  %50 = bitcast %class.SkSTArray* %49 to float*
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 2, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %55 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %54, align 8
  %56 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %55, i64 8
  %57 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %56, align 8
  tail call void %57(%class.GrGLSLProgramDataManager* %1, i32 %53, float %48, float %51) #11
  %58 = getelementptr inbounds %class.GrGLSLMagnifierEffect, %class.GrGLSLMagnifierEffect* %0, i64 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = sitofp i32 %38 to float
  %61 = sitofp i32 %41 to float
  %62 = sub i32 %43, %38
  %63 = sitofp i32 %62 to float
  %64 = fdiv float 1.000000e+00, %63
  %65 = sub i32 %45, %41
  %66 = sitofp i32 %65 to float
  %67 = fdiv float 1.000000e+00, %66
  %68 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)***
  %69 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*** %68, align 8
  %70 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %69, i64 16
  %71 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %70, align 8
  tail call void %71(%class.GrGLSLProgramDataManager* %1, i32 %59, float %60, float %61, float %64, float %67) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #11
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.1* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #11
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #11
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #11
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #11
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

declare void @_Z14SkStringPrintfPKcz(%class.SkString* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #11

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #11

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!4 = distinct !{!4, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
