; ModuleID = 'gen/extensions/common/api/web_accessible_resources.cc'
source_filename = "gen/extensions/common/api/web_accessible_resources.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.extensions::api::web_accessible_resources::WebAccessibleResource" = type { %"class.std::__1::vector", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::vector"* }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i8* }
%"struct.extensions::api::web_accessible_resources::ManifestKeys" = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.47 }
%union.anon.47 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.48 }
%struct.anon.48 = type { %"struct.std::__1::__padding.49", i8 }
%"struct.std::__1::__padding.49" = type { [1 x i8] }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::Value"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.72" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE = comdat any

$_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api24web_accessible_resources21WebAccessibleResourceEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEEPNSA_12basic_stringIDsNSA_11char_traitsIDsEENSD_IDsEEEE = comdat any

$_ZNSt3__16vectorIN10extensions3api24web_accessible_resources21WebAccessibleResourceENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@_ZN10extensions3api24web_accessible_resources21WebAccessibleResource10kResourcesE = hidden constant [10 x i8] c"resources\00", align 1
@_ZN10extensions3api24web_accessible_resources21WebAccessibleResource8kMatchesE = hidden constant [8 x i8] c"matches\00", align 1
@_ZN10extensions3api24web_accessible_resources21WebAccessibleResource13kExtensionIdsE = hidden constant [14 x i8] c"extension_ids\00", align 1
@_ZN10extensions3api24web_accessible_resources21WebAccessibleResource14kUseDynamicUrlE = hidden constant [16 x i8] c"use_dynamic_url\00", align 16
@.str = private unnamed_addr constant [26 x i16] [i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 100, i16 105, i16 99, i16 116, i16 105, i16 111, i16 110, i16 97, i16 114, i16 121, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.2 = private unnamed_addr constant [24 x i16] [i16 39, i16 114, i16 101, i16 115, i16 111, i16 117, i16 114, i16 99, i16 101, i16 115, i16 39, i16 32, i16 105, i16 115, i16 32, i16 114, i16 101, i16 113, i16 117, i16 105, i16 114, i16 101, i16 100, i16 0], align 2
@.str.3 = private unnamed_addr constant [33 x i16] [i16 39, i16 114, i16 101, i16 115, i16 111, i16 117, i16 114, i16 99, i16 101, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.4 = private unnamed_addr constant [27 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 114, i16 101, i16 115, i16 111, i16 117, i16 114, i16 99, i16 101, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.6 = private unnamed_addr constant [31 x i16] [i16 39, i16 109, i16 97, i16 116, i16 99, i16 104, i16 101, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.7 = private unnamed_addr constant [25 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 109, i16 97, i16 116, i16 99, i16 104, i16 101, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.9 = private unnamed_addr constant [37 x i16] [i16 39, i16 101, i16 120, i16 116, i16 101, i16 110, i16 115, i16 105, i16 111, i16 110, i16 95, i16 105, i16 100, i16 115, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 108, i16 105, i16 115, i16 116, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@.str.10 = private unnamed_addr constant [31 x i16] [i16 69, i16 114, i16 114, i16 111, i16 114, i16 32, i16 97, i16 116, i16 32, i16 107, i16 101, i16 121, i16 32, i16 39, i16 101, i16 120, i16 116, i16 101, i16 110, i16 115, i16 105, i16 111, i16 110, i16 95, i16 105, i16 100, i16 115, i16 39, i16 58, i16 32, i16 0], align 2
@.str.12 = private unnamed_addr constant [50 x i16] [i16 39, i16 117, i16 115, i16 101, i16 95, i16 100, i16 121, i16 110, i16 97, i16 109, i16 105, i16 99, i16 95, i16 117, i16 114, i16 108, i16 39, i16 58, i16 32, i16 101, i16 120, i16 112, i16 101, i16 99, i16 116, i16 101, i16 100, i16 32, i16 117, i16 115, i16 101, i16 95, i16 100, i16 121, i16 110, i16 97, i16 109, i16 105, i16 99, i16 95, i16 117, i16 114, i16 108, i16 44, i16 32, i16 103, i16 111, i16 116, i16 32, i16 0], align 2
@_ZN10extensions3api24web_accessible_resources12ManifestKeys23kWebAccessibleResourcesE = hidden constant [25 x i8] c"web_accessible_resources\00", align 16
@.str.13 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.16 = private unnamed_addr constant [38 x i8] c"Parsing array failed at index %zu: %s\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"rhs <= end_ - current_\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"-rhs <= current_ - start_\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1

@_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*), void (%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*)* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceC2Ev
@_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*), void (%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*)* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev
@_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceC1EOS2_ = hidden unnamed_addr alias void (%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*), void (%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*)* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceC2EOS2_
@_ZN10extensions3api24web_accessible_resources12ManifestKeysC1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::web_accessible_resources::ManifestKeys"*), void (%"struct.extensions::api::web_accessible_resources::ManifestKeys"*)* @_ZN10extensions3api24web_accessible_resources12ManifestKeysC2Ev
@_ZN10extensions3api24web_accessible_resources12ManifestKeysD1Ev = hidden unnamed_addr alias void (%"struct.extensions::api::web_accessible_resources::ManifestKeys"*), void (%"struct.extensions::api::web_accessible_resources::ManifestKeys"*)* @_ZN10extensions3api24web_accessible_resources12ManifestKeysD2Ev
@_ZN10extensions3api24web_accessible_resources12ManifestKeysC1EOS2_ = hidden unnamed_addr alias void (%"struct.extensions::api::web_accessible_resources::ManifestKeys"*, %"struct.extensions::api::web_accessible_resources::ManifestKeys"*), void (%"struct.extensions::api::web_accessible_resources::ManifestKeys"*, %"struct.extensions::api::web_accessible_resources::ManifestKeys"*)* @_ZN10extensions3api24web_accessible_resources12ManifestKeysC2EOS2_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceC2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  store i8* null, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(i8* nonnull %3) #12
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %7, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %7, align 8
  %9 = icmp eq %"class.std::__1::vector"* %8, null
  br i1 %9, label %38, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %17, %12
  br i1 %18, label %34, label %19

19:                                               ; preds = %14, %29
  %20 = phi %"class.std::__1::basic_string"* [ %21, %29 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 -1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %26, %19
  %30 = icmp eq %"class.std::__1::basic_string"* %21, %12
  br i1 %30, label %31, label %19

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %8 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %14
  %35 = phi i8* [ %33, %31 ], [ %15, %14 ]
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %16, align 8
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %10
  %37 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %6, %36
  %39 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %39, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %39, align 8
  %41 = icmp eq %"class.std::__1::vector"* %40, null
  br i1 %41, label %70, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %45 = icmp eq %"class.std::__1::basic_string"* %44, null
  br i1 %45, label %68, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 1
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %50 = icmp eq %"class.std::__1::basic_string"* %49, %44
  br i1 %50, label %66, label %51

51:                                               ; preds = %46, %61
  %52 = phi %"class.std::__1::basic_string"* [ %53, %61 ], [ %49, %46 ]
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 -1
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %58, %51
  %62 = icmp eq %"class.std::__1::basic_string"* %53, %44
  br i1 %62, label %63, label %51

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::vector"* %40 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %46
  %67 = phi i8* [ %65, %63 ], [ %47, %46 ]
  store %"class.std::__1::basic_string"* %44, %"class.std::__1::basic_string"** %48, align 8
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %66, %42
  %69 = bitcast %"class.std::__1::vector"* %40 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %38, %68
  %71 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %71, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %72, null
  br i1 %73, label %96, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %76 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 1
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %76, align 8
  %78 = icmp eq %"class.std::__1::basic_string"* %77, %72
  br i1 %78, label %94, label %79

79:                                               ; preds = %74, %89
  %80 = phi %"class.std::__1::basic_string"* [ %81, %89 ], [ %77, %74 ]
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 -1
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  tail call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %86, %79
  %90 = icmp eq %"class.std::__1::basic_string"* %81, %72
  br i1 %90, label %91, label %79

91:                                               ; preds = %89
  %92 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %74
  %95 = phi i8* [ %93, %91 ], [ %75, %74 ]
  store %"class.std::__1::basic_string"* %72, %"class.std::__1::basic_string"** %76, align 8
  tail call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %70, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceC2EOS2_(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nocapture, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::basic_string"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  %18 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %20, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 2
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %26, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 3
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr.9"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  store i8* null, i8** %32, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.9"* %30 to i64*
  store i64 %34, i64* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceaSEOS2_(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* returned, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #12
  %28 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #13
  br label %29

29:                                               ; preds = %2, %26
  %30 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13
  %44 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %46, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %49, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %48, i64* %51, align 8
  %52 = icmp eq %"class.std::__1::vector"* %50, null
  br i1 %52, label %81, label %53

53:                                               ; preds = %29
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %50, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %54, align 8
  %56 = icmp eq %"class.std::__1::basic_string"* %55, null
  br i1 %56, label %79, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %50, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %55
  br i1 %61, label %77, label %62

62:                                               ; preds = %57, %72
  %63 = phi %"class.std::__1::basic_string"* [ %64, %72 ], [ %60, %57 ]
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 -1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %69, %62
  %73 = icmp eq %"class.std::__1::basic_string"* %64, %55
  br i1 %73, label %74, label %62

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector"* %50 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %57
  %78 = phi i8* [ %76, %74 ], [ %58, %57 ]
  store %"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"** %59, align 8
  tail call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %77, %53
  %80 = bitcast %"class.std::__1::vector"* %50 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %29, %79
  %82 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 2
  %83 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 2
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %84, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"class.std::__1::vector"* %88, null
  br i1 %90, label %119, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 0
  %93 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %92, align 8
  %94 = icmp eq %"class.std::__1::basic_string"* %93, null
  br i1 %94, label %117, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %88, i64 0, i32 0, i32 1
  %98 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %97, align 8
  %99 = icmp eq %"class.std::__1::basic_string"* %98, %93
  br i1 %99, label %115, label %100

100:                                              ; preds = %95, %110
  %101 = phi %"class.std::__1::basic_string"* [ %102, %110 ], [ %98, %95 ]
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 -1
  %103 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #12
  br label %110

110:                                              ; preds = %107, %100
  %111 = icmp eq %"class.std::__1::basic_string"* %102, %93
  br i1 %111, label %112, label %100

112:                                              ; preds = %110
  %113 = bitcast %"class.std::__1::vector"* %88 to i8**
  %114 = load i8*, i8** %113, align 8
  br label %115

115:                                              ; preds = %112, %95
  %116 = phi i8* [ %114, %112 ], [ %96, %95 ]
  store %"class.std::__1::basic_string"* %93, %"class.std::__1::basic_string"** %97, align 8
  tail call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %115, %91
  %118 = bitcast %"class.std::__1::vector"* %88 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %81, %117
  %120 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 3
  %121 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 3
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr.9"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store i8* null, i8** %122, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %120, i64 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.9"* %120 to i64*
  store i64 %124, i64* %127, align 8
  %128 = icmp eq i8* %126, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %119
  tail call void @_ZdlPv(i8* nonnull %126) #12
  br label %130

130:                                              ; preds = %119, %129
  ret %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource8PopulateERKN4base5ValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32), %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca [15 x i8], align 8
  %10 = alloca %"class.std::__1::basic_string.44", align 8
  %11 = alloca %"class.base::Value"*, align 8
  %12 = alloca %"class.base::ListValue"*, align 8
  %13 = alloca [15 x i8], align 8
  %14 = alloca %"class.std::__1::basic_string.44", align 8
  %15 = alloca %"class.std::__1::basic_string.44", align 8
  %16 = alloca %"class.std::__1::basic_string.44", align 8
  %17 = alloca %"class.base::Value"*, align 8
  %18 = alloca %"class.base::ListValue"*, align 8
  %19 = alloca [15 x i8], align 8
  %20 = alloca %"class.std::__1::basic_string.44", align 8
  %21 = alloca %"class.std::__1::basic_string.44", align 8
  %22 = alloca %"class.std::__1::basic_string.44", align 8
  %23 = alloca %"class.base::Value"*, align 8
  %24 = alloca %"class.base::ListValue"*, align 8
  %25 = alloca [15 x i8], align 8
  %26 = alloca %"class.std::__1::basic_string.44", align 8
  %27 = alloca %"class.std::__1::basic_string.44", align 8
  %28 = alloca %"class.std::__1::basic_string.44", align 8
  %29 = alloca %"class.base::Value"*, align 8
  %30 = alloca i8, align 1
  %31 = alloca [15 x i8], align 8
  %32 = alloca %"class.std::__1::basic_string.44", align 8
  %33 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i8
  %36 = icmp eq i8 %35, 6
  br i1 %36, label %78, label %37

37:                                               ; preds = %3
  %38 = getelementptr inbounds [15 x i8], [15 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %38)
  %39 = bitcast %"class.std::__1::basic_string.44"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13
  %40 = tail call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %35) #13
  %41 = icmp eq i8* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = tail call i64 @strlen(i8* nonnull %40) #13
  br label %47

44:                                               ; preds = %37
  %45 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #13
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  br label %47

47:                                               ; preds = %42, %44
  %48 = phi i64 [ 0, %44 ], [ %43, %42 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %10, i8* %40, i64 %48) #13
  %49 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %10, i64 0, i16* getelementptr inbounds ([26 x i16], [26 x i16]* @.str, i64 0, i64 0), i64 25) #13, !noalias !2
  %50 = bitcast %"class.std::__1::basic_string.44"* %49 to i8*
  %51 = bitcast %"class.std::__1::basic_string.44"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast i64* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %54, i64 15, i1 false)
  %55 = getelementptr inbounds i8, i8* %50, i64 23
  %56 = load i8, i8* %55, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #13, !noalias !2
  %57 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %47
  %62 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %61, %47
  %65 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %52, i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast i64* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %38, i64 15, i1 false)
  %68 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 23
  store i8 %56, i8* %69, align 1
  %70 = bitcast %"class.std::__1::basic_string.44"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %64
  %75 = bitcast %"class.std::__1::basic_string.44"* %10 to i8**
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %64, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %38)
  br label %401

78:                                               ; preds = %3
  %79 = bitcast %"class.base::Value"* %0 to %"class.base::DictionaryValue"*
  %80 = bitcast %"class.base::Value"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #13
  store %"class.base::Value"* null, %"class.base::Value"** %11, align 8
  %81 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %79, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource10kResourcesE, i64 0, i64 0), i64 9, %"class.base::Value"** nonnull %11) #13
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.44"* %2, i16* getelementptr inbounds ([24 x i16], [24 x i16]* @.str.2, i64 0, i64 0)) #13
  br label %399

84:                                               ; preds = %78
  %85 = bitcast %"class.base::ListValue"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %12, align 8
  %86 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %87 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %86, %"class.base::ListValue"** nonnull %12) #13
  br i1 %87, label %133, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds [15 x i8], [15 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %89)
  %90 = bitcast %"class.std::__1::basic_string.44"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  %91 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %92 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = trunc i64 %93 to i8
  %95 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %94) #13
  %96 = icmp eq i8* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %88
  %98 = call i64 @strlen(i8* nonnull %95) #13
  br label %102

99:                                               ; preds = %88
  %100 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #13
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #13
  br label %102

102:                                              ; preds = %97, %99
  %103 = phi i64 [ 0, %99 ], [ %98, %97 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %14, i8* %95, i64 %103) #13
  %104 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %14, i64 0, i16* getelementptr inbounds ([33 x i16], [33 x i16]* @.str.3, i64 0, i64 0), i64 32) #13, !noalias !5
  %105 = bitcast %"class.std::__1::basic_string.44"* %104 to i8*
  %106 = bitcast %"class.std::__1::basic_string.44"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = bitcast i64* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %89, i8* align 8 %109, i64 15, i1 false)
  %110 = getelementptr inbounds i8, i8* %105, i64 23
  %111 = load i8, i8* %110, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #13, !noalias !5
  %112 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %112, i64 0, i32 1, i32 1
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %102
  %117 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %118 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %116, %102
  %120 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %107, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = bitcast i64* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* nonnull align 8 %89, i64 15, i1 false)
  %123 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 23
  store i8 %111, i8* %124, align 1
  %125 = bitcast %"class.std::__1::basic_string.44"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %125, i64 0, i32 1, i32 1
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %119
  %130 = bitcast %"class.std::__1::basic_string.44"* %14 to i8**
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #12
  br label %132

132:                                              ; preds = %129, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %89)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  br label %399

133:                                              ; preds = %84
  %134 = bitcast %"class.std::__1::basic_string.44"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 24, i1 false) #13
  %135 = load %"class.base::ListValue"*, %"class.base::ListValue"** %12, align 8
  %136 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 0
  %137 = call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %135, %"class.std::__1::vector"* %136, %"class.std::__1::basic_string.44"* nonnull %15)
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = bitcast %"class.std::__1::basic_string.44"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %151

140:                                              ; preds = %133
  %141 = bitcast %"class.std::__1::basic_string.44"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %16, i16* getelementptr inbounds ([27 x i16], [27 x i16]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %15)
  %142 = bitcast %"class.std::__1::basic_string.44"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %142, i64 0, i32 1, i32 1
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %140
  %147 = bitcast %"class.std::__1::basic_string.44"* %15 to i8**
  %148 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %146, %140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* nonnull align 8 %141, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #13
  %150 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %15)
  br label %151

151:                                              ; preds = %138, %149
  %152 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %139, %138 ], [ %142, %149 ]
  %153 = phi i32 [ 0, %138 ], [ 1, %149 ]
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %152, i64 0, i32 1, i32 1
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %151
  %158 = bitcast %"class.std::__1::basic_string.44"* %15 to i8**
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #12
  br label %160

160:                                              ; preds = %157, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  %161 = icmp eq i32 %153, 0
  br i1 %161, label %162, label %399

162:                                              ; preds = %160
  %163 = bitcast %"class.base::Value"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #13
  store %"class.base::Value"* null, %"class.base::Value"** %17, align 8
  %164 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %79, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource8kMatchesE, i64 0, i64 0), i64 7, %"class.base::Value"** nonnull %17) #13
  br i1 %164, label %165, label %243

165:                                              ; preds = %162
  %166 = bitcast %"class.base::ListValue"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %18, align 8
  %167 = load %"class.base::Value"*, %"class.base::Value"** %17, align 8
  %168 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %167, %"class.base::ListValue"** nonnull %18) #13
  br i1 %168, label %214, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds [15 x i8], [15 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %170)
  %171 = bitcast %"class.std::__1::basic_string.44"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #13
  %172 = load %"class.base::Value"*, %"class.base::Value"** %17, align 8
  %173 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = trunc i64 %174 to i8
  %176 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %175) #13
  %177 = icmp eq i8* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %169
  %179 = call i64 @strlen(i8* nonnull %176) #13
  br label %183

180:                                              ; preds = %169
  %181 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #13
  %182 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #13
  br label %183

183:                                              ; preds = %178, %180
  %184 = phi i64 [ 0, %180 ], [ %179, %178 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %20, i8* %176, i64 %184) #13
  %185 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %20, i64 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @.str.6, i64 0, i64 0), i64 30) #13, !noalias !8
  %186 = bitcast %"class.std::__1::basic_string.44"* %185 to i8*
  %187 = bitcast %"class.std::__1::basic_string.44"* %185 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %185, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = bitcast i64* %189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %170, i8* align 8 %190, i64 15, i1 false)
  %191 = getelementptr inbounds i8, i8* %186, i64 23
  %192 = load i8, i8* %191, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 24, i1 false) #13, !noalias !8
  %193 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %183
  %198 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %199 = load i8*, i8** %198, align 8
  call void @_ZdlPv(i8* %199) #12
  br label %200

200:                                              ; preds = %197, %183
  %201 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %188, i64* %201, align 8
  %202 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = bitcast i64* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* nonnull align 8 %170, i64 15, i1 false)
  %204 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %205 = getelementptr inbounds i8, i8* %204, i64 23
  store i8 %192, i8* %205, align 1
  %206 = bitcast %"class.std::__1::basic_string.44"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %200
  %211 = bitcast %"class.std::__1::basic_string.44"* %20 to i8**
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #12
  br label %213

213:                                              ; preds = %210, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %170)
  br label %394

214:                                              ; preds = %165
  %215 = bitcast %"class.std::__1::basic_string.44"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 0, i64 24, i1 false) #13
  %216 = load %"class.base::ListValue"*, %"class.base::ListValue"** %18, align 8
  %217 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 1
  %218 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %216, %"class.std::__1::unique_ptr"* %217, %"class.std::__1::basic_string.44"* nonnull %21)
  br i1 %218, label %219, label %221

219:                                              ; preds = %214
  %220 = bitcast %"class.std::__1::basic_string.44"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %232

221:                                              ; preds = %214
  %222 = bitcast %"class.std::__1::basic_string.44"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %22, i16* getelementptr inbounds ([25 x i16], [25 x i16]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %21)
  %223 = bitcast %"class.std::__1::basic_string.44"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %223, i64 0, i32 1, i32 1
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %230

227:                                              ; preds = %221
  %228 = bitcast %"class.std::__1::basic_string.44"* %21 to i8**
  %229 = load i8*, i8** %228, align 8
  call void @_ZdlPv(i8* %229) #12
  br label %230

230:                                              ; preds = %227, %221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %215, i8* nonnull align 8 %222, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #13
  %231 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %21)
  br label %232

232:                                              ; preds = %219, %230
  %233 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %220, %219 ], [ %223, %230 ]
  %234 = phi i32 [ 0, %219 ], [ 1, %230 ]
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %233, i64 0, i32 1, i32 1
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %232
  %239 = bitcast %"class.std::__1::basic_string.44"* %21 to i8**
  %240 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %240) #12
  br label %241

241:                                              ; preds = %238, %232
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #13
  %242 = icmp eq i32 %234, 0
  br i1 %242, label %243, label %397

243:                                              ; preds = %241, %162
  %244 = bitcast %"class.base::Value"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #13
  store %"class.base::Value"* null, %"class.base::Value"** %23, align 8
  %245 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %79, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource13kExtensionIdsE, i64 0, i64 0), i64 13, %"class.base::Value"** nonnull %23) #13
  br i1 %245, label %246, label %324

246:                                              ; preds = %243
  %247 = bitcast %"class.base::ListValue"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #13
  store %"class.base::ListValue"* null, %"class.base::ListValue"** %24, align 8
  %248 = load %"class.base::Value"*, %"class.base::Value"** %23, align 8
  %249 = call zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"* %248, %"class.base::ListValue"** nonnull %24) #13
  br i1 %249, label %295, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds [15 x i8], [15 x i8]* %25, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %251)
  %252 = bitcast %"class.std::__1::basic_string.44"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #13
  %253 = load %"class.base::Value"*, %"class.base::Value"** %23, align 8
  %254 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = trunc i64 %255 to i8
  %257 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %256) #13
  %258 = icmp eq i8* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %250
  %260 = call i64 @strlen(i8* nonnull %257) #13
  br label %264

261:                                              ; preds = %250
  %262 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #13
  %263 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %262) #13
  br label %264

264:                                              ; preds = %259, %261
  %265 = phi i64 [ 0, %261 ], [ %260, %259 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %26, i8* %257, i64 %265) #13
  %266 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %26, i64 0, i16* getelementptr inbounds ([37 x i16], [37 x i16]* @.str.9, i64 0, i64 0), i64 36) #13, !noalias !11
  %267 = bitcast %"class.std::__1::basic_string.44"* %266 to i8*
  %268 = bitcast %"class.std::__1::basic_string.44"* %266 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %271 = bitcast i64* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %251, i8* align 8 %271, i64 15, i1 false)
  %272 = getelementptr inbounds i8, i8* %267, i64 23
  %273 = load i8, i8* %272, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 24, i1 false) #13, !noalias !11
  %274 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %275 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %274, i64 0, i32 1, i32 1
  %276 = load i8, i8* %275, align 1
  %277 = icmp slt i8 %276, 0
  br i1 %277, label %278, label %281

278:                                              ; preds = %264
  %279 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %280 = load i8*, i8** %279, align 8
  call void @_ZdlPv(i8* %280) #12
  br label %281

281:                                              ; preds = %278, %264
  %282 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %269, i64* %282, align 8
  %283 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %284 = bitcast i64* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* nonnull align 8 %251, i64 15, i1 false)
  %285 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %286 = getelementptr inbounds i8, i8* %285, i64 23
  store i8 %273, i8* %286, align 1
  %287 = bitcast %"class.std::__1::basic_string.44"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %288 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %287, i64 0, i32 1, i32 1
  %289 = load i8, i8* %288, align 1
  %290 = icmp slt i8 %289, 0
  br i1 %290, label %291, label %294

291:                                              ; preds = %281
  %292 = bitcast %"class.std::__1::basic_string.44"* %26 to i8**
  %293 = load i8*, i8** %292, align 8
  call void @_ZdlPv(i8* %293) #12
  br label %294

294:                                              ; preds = %291, %281
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %251)
  br label %391

295:                                              ; preds = %246
  %296 = bitcast %"class.std::__1::basic_string.44"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %296) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %296, i8 0, i64 24, i1 false) #13
  %297 = load %"class.base::ListValue"*, %"class.base::ListValue"** %24, align 8
  %298 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 2
  %299 = call zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %297, %"class.std::__1::unique_ptr"* %298, %"class.std::__1::basic_string.44"* nonnull %27)
  br i1 %299, label %300, label %302

300:                                              ; preds = %295
  %301 = bitcast %"class.std::__1::basic_string.44"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %313

302:                                              ; preds = %295
  %303 = bitcast %"class.std::__1::basic_string.44"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #13
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* nonnull sret %28, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @.str.10, i64 0, i64 0), %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %27)
  %304 = bitcast %"class.std::__1::basic_string.44"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %305 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %304, i64 0, i32 1, i32 1
  %306 = load i8, i8* %305, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %302
  %309 = bitcast %"class.std::__1::basic_string.44"* %27 to i8**
  %310 = load i8*, i8** %309, align 8
  call void @_ZdlPv(i8* %310) #12
  br label %311

311:                                              ; preds = %308, %302
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %296, i8* nonnull align 8 %303, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #13
  %312 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::basic_string.44"* nonnull dereferenceable(24) %27)
  br label %313

313:                                              ; preds = %300, %311
  %314 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %301, %300 ], [ %304, %311 ]
  %315 = phi i32 [ 0, %300 ], [ 1, %311 ]
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %314, i64 0, i32 1, i32 1
  %317 = load i8, i8* %316, align 1
  %318 = icmp slt i8 %317, 0
  br i1 %318, label %319, label %322

319:                                              ; preds = %313
  %320 = bitcast %"class.std::__1::basic_string.44"* %27 to i8**
  %321 = load i8*, i8** %320, align 8
  call void @_ZdlPv(i8* %321) #12
  br label %322

322:                                              ; preds = %319, %313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %296) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #13
  %323 = icmp eq i32 %315, 0
  br i1 %323, label %324, label %394

324:                                              ; preds = %322, %243
  %325 = bitcast %"class.base::Value"** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %325) #13
  store %"class.base::Value"* null, %"class.base::Value"** %29, align 8
  %326 = call zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"* %79, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource14kUseDynamicUrlE, i64 0, i64 0), i64 15, %"class.base::Value"** nonnull %29) #13
  br i1 %326, label %327, label %391

327:                                              ; preds = %324
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #13
  store i8 -86, i8* %30, align 1
  %328 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %329 = call zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"* %328, i8* nonnull %30) #13
  br i1 %329, label %379, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds [15 x i8], [15 x i8]* %31, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %331)
  %332 = bitcast %"class.std::__1::basic_string.44"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #13
  %333 = load %"class.base::Value"*, %"class.base::Value"** %29, align 8
  %334 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %335 = load i64, i64* %334, align 8
  %336 = trunc i64 %335 to i8
  %337 = call i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext %336) #13
  %338 = icmp eq i8* %337, null
  br i1 %338, label %341, label %339

339:                                              ; preds = %330
  %340 = call i64 @strlen(i8* nonnull %337) #13
  br label %344

341:                                              ; preds = %330
  %342 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %342) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0)) #13
  %343 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %342) #13
  br label %344

344:                                              ; preds = %339, %341
  %345 = phi i64 [ 0, %341 ], [ %340, %339 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %32, i8* %337, i64 %345) #13
  %346 = call dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"* nonnull %32, i64 0, i16* getelementptr inbounds ([50 x i16], [50 x i16]* @.str.12, i64 0, i64 0), i64 49) #13, !noalias !14
  %347 = bitcast %"class.std::__1::basic_string.44"* %346 to i8*
  %348 = bitcast %"class.std::__1::basic_string.44"* %346 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %351 = bitcast i64* %350 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %331, i8* align 8 %351, i64 15, i1 false)
  %352 = getelementptr inbounds i8, i8* %347, i64 23
  %353 = load i8, i8* %352, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %347, i8 0, i64 24, i1 false) #13, !noalias !14
  %354 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %355 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %354, i64 0, i32 1, i32 1
  %356 = load i8, i8* %355, align 1
  %357 = icmp slt i8 %356, 0
  br i1 %357, label %358, label %361

358:                                              ; preds = %344
  %359 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %360 = load i8*, i8** %359, align 8
  call void @_ZdlPv(i8* %360) #12
  br label %361

361:                                              ; preds = %358, %344
  %362 = bitcast %"class.std::__1::basic_string.44"* %2 to i64*
  store i64 %349, i64* %362, align 8
  %363 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %364 = bitcast i64* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %364, i8* nonnull align 8 %331, i64 15, i1 false)
  %365 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  %366 = getelementptr inbounds i8, i8* %365, i64 23
  store i8 %353, i8* %366, align 1
  %367 = bitcast %"class.std::__1::basic_string.44"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %368 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %367, i64 0, i32 1, i32 1
  %369 = load i8, i8* %368, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %361
  %372 = bitcast %"class.std::__1::basic_string.44"* %32 to i8**
  %373 = load i8*, i8** %372, align 8
  call void @_ZdlPv(i8* %373) #12
  br label %374

374:                                              ; preds = %361, %371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %331)
  %375 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %376 = load i8*, i8** %375, align 8
  store i8* null, i8** %375, align 8
  %377 = icmp eq i8* %376, null
  br i1 %377, label %389, label %378

378:                                              ; preds = %374
  call void @_ZdlPv(i8* nonnull %376) #12
  br label %389

379:                                              ; preds = %327
  %380 = call i8* @_Znwm(i64 1) #12
  %381 = load i8, i8* %30, align 1, !range !17
  store i8 %381, i8* %380, align 1
  %382 = ptrtoint i8* %380 to i64
  %383 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 3
  %384 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %383, i64 0, i32 0, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = bitcast %"class.std::__1::unique_ptr.9"* %383 to i64*
  store i64 %382, i64* %386, align 8
  %387 = icmp eq i8* %385, null
  br i1 %387, label %389, label %388

388:                                              ; preds = %379
  call void @_ZdlPv(i8* nonnull %385) #12
  br label %389

389:                                              ; preds = %379, %388, %378, %374
  %390 = phi i1 [ false, %374 ], [ false, %378 ], [ true, %388 ], [ true, %379 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #13
  br label %391

391:                                              ; preds = %324, %389, %294
  %392 = phi i8* [ %247, %294 ], [ %325, %389 ], [ %325, %324 ]
  %393 = phi i1 [ false, %294 ], [ %390, %389 ], [ true, %324 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %392) #13
  br label %394

394:                                              ; preds = %322, %391, %213
  %395 = phi i8* [ %166, %213 ], [ %244, %391 ], [ %244, %322 ]
  %396 = phi i1 [ false, %213 ], [ %393, %391 ], [ false, %322 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %395) #13
  br label %397

397:                                              ; preds = %394, %241
  %398 = phi i1 [ false, %241 ], [ %396, %394 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #13
  br label %399

399:                                              ; preds = %132, %160, %397, %82
  %400 = phi i1 [ false, %82 ], [ %398, %397 ], [ false, %160 ], [ false, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #13
  br label %401

401:                                              ; preds = %399, %77
  %402 = phi i1 [ %400, %399 ], [ false, %77 ]
  ret i1 %402
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* sret, i8*, i64) local_unnamed_addr #2

declare i8* @_ZN4base5Value11GetTypeNameENS0_4TypeE(i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4base15DictionaryValue23GetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPPKNS_5ValueE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"**) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value9GetAsListEPPKNS_9ListValueE(%"class.base::Value"*, %"class.base::ListValue"**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::vector"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.44", align 8
  %8 = alloca %"class.std::__1::basic_string.44", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = icmp eq %"class.std::__1::basic_string"* %14, %12
  br i1 %15, label %28, label %16

16:                                               ; preds = %3, %26
  %17 = phi %"class.std::__1::basic_string"* [ %18, %26 ], [ %14, %3 ]
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 -1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %23, %16
  %27 = icmp eq %"class.std::__1::basic_string"* %18, %12
  br i1 %27, label %28, label %16

28:                                               ; preds = %26, %3
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %13, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #13
  %31 = bitcast %"class.std::__1::basic_string.44"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #13
  %34 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0
  %35 = tail call %"class.std::__1::vector.36"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %34) #13
  %36 = icmp eq %"class.std::__1::vector.36"* %35, null
  %37 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %35, i64 0, i32 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = bitcast %"class.std::__1::vector.36"* %35 to i64*
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  %41 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  %42 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %35, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  br label %45

45:                                               ; preds = %131, %28
  %46 = phi i64 [ 0, %28 ], [ %132, %131 ]
  br i1 %36, label %52, label %47

47:                                               ; preds = %45
  %48 = load i64, i64* %38, align 8
  %49 = load i64, i64* %39, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 5
  br label %52

52:                                               ; preds = %45, %47
  %53 = phi i64 [ %51, %47 ], [ 0, %45 ]
  %54 = icmp ult i64 %46, %53
  br i1 %54, label %55, label %134

55:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #13
  br i1 %36, label %62, label %56

56:                                               ; preds = %55
  %57 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %58 = load i64, i64* %38, align 8
  %59 = ptrtoint %"class.base::Value"* %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 5
  br label %62

62:                                               ; preds = %55, %56
  %63 = phi %"class.base::Value"* [ %57, %56 ], [ null, %55 ]
  %64 = phi i64 [ %61, %56 ], [ 0, %55 ]
  %65 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %63, i64 %64
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %63, %"class.base::Value"* %63, %"class.base::Value"* %65) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %41, i64 24, i1 false) #13
  %66 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %4, i64 %46) #13
  %67 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  %68 = call zeroext i1 @_ZN20json_schema_compiler4util12PopulateItemERKN4base5ValueEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS6_IDsNS7_IDsEENS9_IDsEEEE(%"class.base::Value"* dereferenceable(32) %67, %"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string.44"* nonnull %7) #13
  br i1 %68, label %122, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.std::__1::basic_string.44"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #13
  %71 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  %72 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13
  %73 = bitcast %"class.std::__1::basic_string.44"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i16*, i16** %32, align 8
  %78 = bitcast %"class.std::__1::basic_string.44"* %7 to i16*
  %79 = select i1 %76, i16* %77, i16* %78
  %80 = load i64, i64* %33, align 8
  %81 = zext i8 %75 to i64
  %82 = select i1 %76, i64 %80, i64 %81
  call void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i16* %79, i64 %82) #13
  %83 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = select i1 %86, i8* %88, i8* %72
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0), i64 %46, i8* %89) #13
  %90 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = select i1 %93, i8* %95, i8* %71
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %92 to i64
  %100 = select i1 %93, i64 %98, i64 %99
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %8, i8* %96, i64 %100) #13
  %101 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %69
  %106 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %105, %69
  %109 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %70, i64 24, i1 false) #13
  %110 = bitcast %"class.std::__1::basic_string.44"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  store i8 0, i8* %111, align 1
  %112 = bitcast %"class.std::__1::basic_string.44"* %8 to i16*
  store i16 0, i16* %112, align 8
  %113 = load i8, i8* %91, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %108
  %116 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %108, %115
  %118 = load i8, i8* %84, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %133

120:                                              ; preds = %117
  %121 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %121) #12
  br label %133

122:                                              ; preds = %62
  %123 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %124 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %125 = icmp ult %"class.std::__1::basic_string"* %123, %124
  br i1 %125, label %126, label %130

126:                                              ; preds = %122
  %127 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %29, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #13
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 1
  %129 = ptrtoint %"class.std::__1::basic_string"* %128 to i64
  store i64 %129, i64* %44, align 8
  br label %131

130:                                              ; preds = %122
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #13
  br label %131

131:                                              ; preds = %126, %130
  %132 = add nuw i64 %46, 1
  br label %45

133:                                              ; preds = %120, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #13
  br label %136

134:                                              ; preds = %52
  %135 = bitcast %"class.std::__1::basic_string.44"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %136

136:                                              ; preds = %134, %133
  %137 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %135, %134 ], [ %73, %133 ]
  %138 = phi i1 [ true, %134 ], [ false, %133 ]
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %137, i64 0, i32 1, i32 1
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %136
  %143 = bitcast %"class.std::__1::basic_string.44"* %7 to i8**
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #12
  br label %145

145:                                              ; preds = %136, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  %146 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %145
  %151 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %145, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.44"* noalias sret, i16*, %"class.std::__1::basic_string.44"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.44"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  %8 = load i16, i16* %1, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %3, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %3 ]
  %12 = phi i16* [ %14, %10 ], [ %1, %3 ]
  %13 = add i64 %11, 1
  %14 = getelementptr inbounds i16, i16* %12, i64 1
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %10, %3
  %18 = phi i64 [ 0, %3 ], [ %13, %10 ]
  %19 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = add i64 %26, %18
  %28 = icmp ugt i64 %27, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %17
  %30 = bitcast %"class.std::__1::basic_string.44"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #14
  unreachable

31:                                               ; preds = %17
  %32 = icmp ult i64 %27, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %31
  %34 = trunc i64 %18 to i8
  %35 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  store i8 %34, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %49

38:                                               ; preds = %31
  %39 = add nuw nsw i64 %27, 8
  %40 = and i64 %39, -8
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  %45 = tail call i8* @_Znwm(i64 %44) #12
  %46 = bitcast i8* %45 to i16*
  %47 = bitcast %"class.std::__1::basic_string.44"* %0 to i8**
  store i8* %45, i8** %47, align 8
  %48 = or i64 %40, -9223372036854775808
  store i64 %48, i64* %6, align 8
  store i64 %18, i64* %5, align 8
  br label %49

49:                                               ; preds = %43, %33
  %50 = phi i16* [ %37, %33 ], [ %46, %43 ]
  %51 = icmp eq i64 %18, 0
  br i1 %51, label %208, label %52

52:                                               ; preds = %49
  store i16 %8, i16* %50, align 2
  %53 = add i64 %18, -1
  %54 = getelementptr inbounds i16, i16* %1, i64 1
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %206, label %56

56:                                               ; preds = %52
  %57 = icmp ult i64 %53, 16
  br i1 %57, label %153, label %58

58:                                               ; preds = %56
  %59 = getelementptr i16, i16* %50, i64 1
  %60 = getelementptr i16, i16* %50, i64 %18
  %61 = getelementptr i16, i16* %1, i64 %18
  %62 = icmp ult i16* %59, %61
  %63 = icmp ult i16* %54, %60
  %64 = and i1 %62, %63
  br i1 %64, label %153, label %65

65:                                               ; preds = %58
  %66 = and i64 %53, -16
  %67 = getelementptr i16, i16* %54, i64 %66
  %68 = sub i64 %53, %66
  %69 = getelementptr i16, i16* %50, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %130, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  %77 = getelementptr i16, i16* %50, i64 1
  %78 = getelementptr i16, i16* %50, i64 1
  %79 = getelementptr i16, i16* %50, i64 1
  %80 = getelementptr i16, i16* %50, i64 1
  br label %81

81:                                               ; preds = %81, %75
  %82 = phi i64 [ 0, %75 ], [ %127, %81 ]
  %83 = phi i64 [ %76, %75 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %54, i64 %82
  %85 = getelementptr inbounds i16, i16* %77, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !18
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !18
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !21, !noalias !18
  %92 = getelementptr inbounds i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !21, !noalias !18
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %54, i64 %94
  %96 = getelementptr inbounds i16, i16* %78, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !18
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !18
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !21, !noalias !18
  %103 = getelementptr inbounds i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !21, !noalias !18
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %54, i64 %105
  %107 = getelementptr inbounds i16, i16* %79, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !18
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !18
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !21, !noalias !18
  %114 = getelementptr inbounds i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !21, !noalias !18
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %54, i64 %116
  %118 = getelementptr inbounds i16, i16* %80, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !18
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !18
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !21, !noalias !18
  %125 = getelementptr inbounds i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !21, !noalias !18
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !23

130:                                              ; preds = %81, %65
  %131 = phi i64 [ 0, %65 ], [ %127, %81 ]
  %132 = icmp eq i64 %73, 0
  br i1 %132, label %151, label %133

133:                                              ; preds = %130
  %134 = getelementptr i16, i16* %50, i64 1
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ %131, %133 ], [ %148, %135 ]
  %137 = phi i64 [ %73, %133 ], [ %149, %135 ]
  %138 = getelementptr i16, i16* %54, i64 %136
  %139 = getelementptr inbounds i16, i16* %134, i64 %136
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !18
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !18
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !21, !noalias !18
  %146 = getelementptr inbounds i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !21, !noalias !18
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !25

151:                                              ; preds = %135, %130
  %152 = icmp eq i64 %53, %66
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %58, %56
  %154 = phi i16* [ %54, %58 ], [ %54, %56 ], [ %67, %151 ]
  %155 = phi i64 [ %53, %58 ], [ %53, %56 ], [ %68, %151 ]
  %156 = phi i16* [ %50, %58 ], [ %50, %56 ], [ %69, %151 ]
  %157 = add i64 %155, -1
  %158 = and i64 %155, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i16* [ %168, %160 ], [ %154, %153 ]
  %162 = phi i64 [ %167, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %165, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = load i16, i16* %161, align 2
  store i16 %166, i16* %165, align 2
  %167 = add i64 %162, -1
  %168 = getelementptr inbounds i16, i16* %161, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !27

171:                                              ; preds = %160, %153
  %172 = phi i16* [ %154, %153 ], [ %168, %160 ]
  %173 = phi i64 [ %155, %153 ], [ %167, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %165, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i16* [ %204, %176 ], [ %172, %171 ]
  %178 = phi i64 [ %203, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %201, %176 ], [ %174, %171 ]
  %180 = getelementptr inbounds i16, i16* %179, i64 1
  %181 = load i16, i16* %177, align 2
  store i16 %181, i16* %180, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 1
  %183 = getelementptr inbounds i16, i16* %179, i64 2
  %184 = load i16, i16* %182, align 2
  store i16 %184, i16* %183, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 2
  %186 = getelementptr inbounds i16, i16* %179, i64 3
  %187 = load i16, i16* %185, align 2
  store i16 %187, i16* %186, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 3
  %189 = getelementptr inbounds i16, i16* %179, i64 4
  %190 = load i16, i16* %188, align 2
  store i16 %190, i16* %189, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 4
  %192 = getelementptr inbounds i16, i16* %179, i64 5
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 5
  %195 = getelementptr inbounds i16, i16* %179, i64 6
  %196 = load i16, i16* %194, align 2
  store i16 %196, i16* %195, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 6
  %198 = getelementptr inbounds i16, i16* %179, i64 7
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %177, i64 7
  %201 = getelementptr inbounds i16, i16* %179, i64 8
  %202 = load i16, i16* %200, align 2
  store i16 %202, i16* %201, align 2
  %203 = add i64 %178, -8
  %204 = getelementptr inbounds i16, i16* %177, i64 8
  %205 = icmp eq i64 %203, 0
  br i1 %205, label %206, label %176, !llvm.loop !28

206:                                              ; preds = %171, %176, %151, %52
  %207 = load i8, i8* %20, align 1
  br label %208

208:                                              ; preds = %206, %49
  %209 = phi i8 [ %207, %206 ], [ %21, %49 ]
  %210 = getelementptr inbounds i16, i16* %50, i64 %18
  store i16 0, i16* %210, align 2
  %211 = icmp slt i8 %209, 0
  %212 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i16*, i16** %212, align 8
  %214 = bitcast %"class.std::__1::basic_string.44"* %2 to i16*
  %215 = select i1 %211, i16* %213, i16* %214
  %216 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %216, i64 0, i32 1, i32 1
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %225

220:                                              ; preds = %208
  %221 = load i64, i64* %6, align 8
  %222 = and i64 %221, 9223372036854775807
  %223 = add nsw i64 %222, -1
  %224 = load i64, i64* %5, align 8
  br label %227

225:                                              ; preds = %208
  %226 = zext i8 %218 to i64
  br label %227

227:                                              ; preds = %225, %220
  %228 = phi i64 [ %223, %220 ], [ 10, %225 ]
  %229 = phi i64 [ %224, %220 ], [ %226, %225 ]
  %230 = sub i64 %228, %229
  %231 = icmp ult i64 %230, %26
  br i1 %231, label %391, label %232

232:                                              ; preds = %227
  %233 = icmp eq i64 %26, 0
  br i1 %233, label %394, label %234

234:                                              ; preds = %232
  %235 = load i16*, i16** %4, align 8
  %236 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  %237 = select i1 %219, i16* %235, i16* %236
  %238 = getelementptr inbounds i16, i16* %237, i64 %229
  %239 = icmp ult i64 %26, 16
  br i1 %239, label %329, label %240

240:                                              ; preds = %234
  %241 = add i64 %26, %229
  %242 = getelementptr i16, i16* %237, i64 %241
  %243 = getelementptr i16, i16* %215, i64 %26
  %244 = icmp ult i16* %238, %243
  %245 = icmp ult i16* %215, %242
  %246 = and i1 %244, %245
  br i1 %246, label %329, label %247

247:                                              ; preds = %240
  %248 = and i64 %26, -16
  %249 = sub i64 %26, %248
  %250 = getelementptr i16, i16* %215, i64 %248
  %251 = getelementptr i16, i16* %238, i64 %248
  %252 = add i64 %248, -16
  %253 = lshr exact i64 %252, 4
  %254 = add nuw nsw i64 %253, 1
  %255 = and i64 %254, 3
  %256 = icmp ult i64 %252, 48
  br i1 %256, label %308, label %257

257:                                              ; preds = %247
  %258 = sub nsw i64 %254, %255
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi i64 [ 0, %257 ], [ %305, %259 ]
  %261 = phi i64 [ %258, %257 ], [ %306, %259 ]
  %262 = getelementptr i16, i16* %215, i64 %260
  %263 = getelementptr i16, i16* %238, i64 %260
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !29
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !29
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !32, !noalias !29
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !32, !noalias !29
  %272 = or i64 %260, 16
  %273 = getelementptr i16, i16* %215, i64 %272
  %274 = getelementptr i16, i16* %238, i64 %272
  %275 = bitcast i16* %273 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !29
  %277 = getelementptr i16, i16* %273, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  %279 = load <8 x i16>, <8 x i16>* %278, align 2, !alias.scope !29
  %280 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %280, align 2, !alias.scope !32, !noalias !29
  %281 = getelementptr i16, i16* %274, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %279, <8 x i16>* %282, align 2, !alias.scope !32, !noalias !29
  %283 = or i64 %260, 32
  %284 = getelementptr i16, i16* %215, i64 %283
  %285 = getelementptr i16, i16* %238, i64 %283
  %286 = bitcast i16* %284 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !29
  %288 = getelementptr i16, i16* %284, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  %290 = load <8 x i16>, <8 x i16>* %289, align 2, !alias.scope !29
  %291 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %291, align 2, !alias.scope !32, !noalias !29
  %292 = getelementptr i16, i16* %285, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %290, <8 x i16>* %293, align 2, !alias.scope !32, !noalias !29
  %294 = or i64 %260, 48
  %295 = getelementptr i16, i16* %215, i64 %294
  %296 = getelementptr i16, i16* %238, i64 %294
  %297 = bitcast i16* %295 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !29
  %299 = getelementptr i16, i16* %295, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  %301 = load <8 x i16>, <8 x i16>* %300, align 2, !alias.scope !29
  %302 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %302, align 2, !alias.scope !32, !noalias !29
  %303 = getelementptr i16, i16* %296, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %301, <8 x i16>* %304, align 2, !alias.scope !32, !noalias !29
  %305 = add i64 %260, 64
  %306 = add i64 %261, -4
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %259, !llvm.loop !34

308:                                              ; preds = %259, %247
  %309 = phi i64 [ 0, %247 ], [ %305, %259 ]
  %310 = icmp eq i64 %255, 0
  br i1 %310, label %327, label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %324, %311 ], [ %309, %308 ]
  %313 = phi i64 [ %325, %311 ], [ %255, %308 ]
  %314 = getelementptr i16, i16* %215, i64 %312
  %315 = getelementptr i16, i16* %238, i64 %312
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !29
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !29
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !32, !noalias !29
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !32, !noalias !29
  %324 = add i64 %312, 16
  %325 = add i64 %313, -1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %311, !llvm.loop !35

327:                                              ; preds = %311, %308
  %328 = icmp eq i64 %26, %248
  br i1 %328, label %382, label %329

329:                                              ; preds = %327, %240, %234
  %330 = phi i64 [ %26, %240 ], [ %26, %234 ], [ %249, %327 ]
  %331 = phi i16* [ %215, %240 ], [ %215, %234 ], [ %250, %327 ]
  %332 = phi i16* [ %238, %240 ], [ %238, %234 ], [ %251, %327 ]
  %333 = add i64 %330, -1
  %334 = and i64 %330, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %347, label %336

336:                                              ; preds = %329, %336
  %337 = phi i64 [ %342, %336 ], [ %330, %329 ]
  %338 = phi i16* [ %344, %336 ], [ %331, %329 ]
  %339 = phi i16* [ %343, %336 ], [ %332, %329 ]
  %340 = phi i64 [ %345, %336 ], [ %334, %329 ]
  %341 = load i16, i16* %338, align 2
  store i16 %341, i16* %339, align 2
  %342 = add i64 %337, -1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = getelementptr inbounds i16, i16* %338, i64 1
  %345 = add i64 %340, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %336, !llvm.loop !36

347:                                              ; preds = %336, %329
  %348 = phi i64 [ %330, %329 ], [ %342, %336 ]
  %349 = phi i16* [ %331, %329 ], [ %344, %336 ]
  %350 = phi i16* [ %332, %329 ], [ %343, %336 ]
  %351 = icmp ult i64 %333, 7
  br i1 %351, label %382, label %352

352:                                              ; preds = %347, %352
  %353 = phi i64 [ %378, %352 ], [ %348, %347 ]
  %354 = phi i16* [ %380, %352 ], [ %349, %347 ]
  %355 = phi i16* [ %379, %352 ], [ %350, %347 ]
  %356 = load i16, i16* %354, align 2
  store i16 %356, i16* %355, align 2
  %357 = getelementptr inbounds i16, i16* %355, i64 1
  %358 = getelementptr inbounds i16, i16* %354, i64 1
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %355, i64 2
  %361 = getelementptr inbounds i16, i16* %354, i64 2
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %355, i64 3
  %364 = getelementptr inbounds i16, i16* %354, i64 3
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %355, i64 4
  %367 = getelementptr inbounds i16, i16* %354, i64 4
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %355, i64 5
  %370 = getelementptr inbounds i16, i16* %354, i64 5
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %355, i64 6
  %373 = getelementptr inbounds i16, i16* %354, i64 6
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %355, i64 7
  %376 = getelementptr inbounds i16, i16* %354, i64 7
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = add i64 %353, -8
  %379 = getelementptr inbounds i16, i16* %355, i64 8
  %380 = getelementptr inbounds i16, i16* %354, i64 8
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %382, label %352, !llvm.loop !37

382:                                              ; preds = %347, %352, %327
  %383 = add i64 %229, %26
  %384 = load i8, i8* %217, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %382
  store i64 %383, i64* %5, align 8
  br label %389

387:                                              ; preds = %382
  %388 = trunc i64 %383 to i8
  store i8 %388, i8* %217, align 1
  br label %389

389:                                              ; preds = %387, %386
  %390 = getelementptr inbounds i16, i16* %237, i64 %383
  store i16 0, i16* %390, align 2
  br label %394

391:                                              ; preds = %227
  %392 = add i64 %229, %26
  %393 = sub i64 %392, %228
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %228, i64 %393, i64 %229, i64 %229, i64 0, i64 %26, i16* %215) #13
  br label %394

394:                                              ; preds = %232, %389, %391
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.44"*, %"class.std::__1::basic_string.44"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.44"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.44"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.44"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.44"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.44"*
  %35 = icmp ugt %"class.std::__1::basic_string.44"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !38
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !38
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !41, !noalias !38
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !41, !noalias !38
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !38
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !38
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !41, !noalias !38
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !41, !noalias !38
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !38
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !38
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !41, !noalias !38
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !41, !noalias !38
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !38
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !38
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !41, !noalias !38
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !41, !noalias !38
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !43

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !38
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !38
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !41, !noalias !38
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !41, !noalias !38
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !44

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !45

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !46

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.44"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !47
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !47
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !50, !noalias !47
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !50, !noalias !47
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !47
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !47
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !50, !noalias !47
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !50, !noalias !47
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !47
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !47
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !50, !noalias !47
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !50, !noalias !47
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !47
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !47
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !50, !noalias !47
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !50, !noalias !47
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !52

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !47
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !47
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !50, !noalias !47
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !50, !noalias !47
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !53

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !54

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !55

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.44"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.44"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !56
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !56
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !59, !noalias !56
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !59, !noalias !56
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !56
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !56
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !59, !noalias !56
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !59, !noalias !56
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !56
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !56
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !59, !noalias !56
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !59, !noalias !56
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !56
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !56
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !59, !noalias !56
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !59, !noalias !56
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !61

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !56
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !56
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !59, !noalias !56
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !59, !noalias !56
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !62

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !63

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !64

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #13
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.44"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util29PopulateOptionalArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_10unique_ptrINS2_6vectorIT_NS6_ISF_EEEENS2_14default_deleteISH_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::unique_ptr"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #0 comdat {
  %4 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #13
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %1 to i8**
  store i8* %4, i8** %7, align 8
  %8 = icmp eq %"class.std::__1::vector"* %6, null
  %9 = bitcast i8* %4 to %"class.std::__1::vector"*
  br i1 %8, label %39, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %17, %12
  br i1 %18, label %34, label %19

19:                                               ; preds = %14, %29
  %20 = phi %"class.std::__1::basic_string"* [ %21, %29 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 -1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %26, %19
  %30 = icmp eq %"class.std::__1::basic_string"* %21, %12
  br i1 %30, label %31, label %19

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %6 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %14
  %35 = phi i8* [ %33, %31 ], [ %15, %14 ]
  store %"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"** %16, align 8
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %10
  %37 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  br label %39

39:                                               ; preds = %3, %36
  %40 = phi %"class.std::__1::vector"* [ %9, %3 ], [ %38, %36 ]
  %41 = tail call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %0, %"class.std::__1::vector"* %40, %"class.std::__1::basic_string.44"* %2)
  br i1 %41, label %73, label %42

42:                                               ; preds = %39
  %43 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %5, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %5, align 8
  %44 = icmp eq %"class.std::__1::vector"* %43, null
  br i1 %44, label %73, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %43, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, null
  br i1 %48, label %71, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %43, i64 0, i32 0, i32 1
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %51, align 8
  %53 = icmp eq %"class.std::__1::basic_string"* %52, %47
  br i1 %53, label %69, label %54

54:                                               ; preds = %49, %64
  %55 = phi %"class.std::__1::basic_string"* [ %56, %64 ], [ %52, %49 ]
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 -1
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %61, %54
  %65 = icmp eq %"class.std::__1::basic_string"* %56, %47
  br i1 %65, label %66, label %54

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector"* %43 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %49
  %70 = phi i8* [ %68, %66 ], [ %50, %49 ]
  store %"class.std::__1::basic_string"* %47, %"class.std::__1::basic_string"** %51, align 8
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %69, %45
  %72 = bitcast %"class.std::__1::vector"* %43 to i8*
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %71, %42, %39
  %74 = phi i1 [ true, %39 ], [ false, %42 ], [ false, %71 ]
  ret i1 %74
}

declare zeroext i1 @_ZNK4base5Value12GetAsBooleanEPb(%"class.base::Value"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource9FromValueERKN4base5ValueEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string.44"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #12
  %4 = bitcast i8* %3 to %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 48, i1 false) #13
  %5 = ptrtoint i8* %3 to i64
  %6 = tail call zeroext i1 @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource8PopulateERKN4base5ValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32) %0, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull %4, %"class.std::__1::basic_string.44"* %1)
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull %4) #13
  tail call void @_ZdlPv(i8* nonnull %3) #12
  br label %8

8:                                                ; preds = %2, %7
  %9 = phi i64 [ 0, %7 ], [ %5, %2 ]
  %10 = inttoptr i64 %9 to %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*
  ret %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::DictionaryValue"* @_ZNK10extensions3api24web_accessible_resources21WebAccessibleResource7ToValueEv(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #13
  %4 = tail call i8* @_Znwm(i64 32) #12
  %5 = bitcast i8* %4 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %5) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %5) #13
  %6 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %7, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %1, %11
  %12 = phi %"class.std::__1::basic_string"* [ %13, %11 ], [ %7, %1 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %12, %"class.base::ListValue"* nonnull %5) #13
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 1
  %14 = icmp eq %"class.std::__1::basic_string"* %13, %9
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %1
  %16 = bitcast i8* %4 to %"class.base::Value"*
  %17 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource10kResourcesE, i64 0, i64 0), i64 9, %"class.base::Value"* nonnull %16) #13
  %18 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %18, align 8
  %20 = icmp eq %"class.std::__1::vector"* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %15
  %22 = tail call i8* @_Znwm(i64 32) #12
  %23 = bitcast i8* %22 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %23) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %23) #13
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %28 = icmp eq %"class.std::__1::basic_string"* %25, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %21, %29
  %30 = phi %"class.std::__1::basic_string"* [ %31, %29 ], [ %25, %21 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %30, %"class.base::ListValue"* nonnull %23) #13
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %32 = icmp eq %"class.std::__1::basic_string"* %31, %27
  br i1 %32, label %33, label %29

33:                                               ; preds = %29, %21
  %34 = bitcast i8* %22 to %"class.base::Value"*
  %35 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource8kMatchesE, i64 0, i64 0), i64 7, %"class.base::Value"* nonnull %34) #13
  br label %36

36:                                               ; preds = %15, %33
  %37 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %37, align 8
  %39 = icmp eq %"class.std::__1::vector"* %38, null
  br i1 %39, label %55, label %40

40:                                               ; preds = %36
  %41 = tail call i8* @_Znwm(i64 32) #12
  %42 = bitcast i8* %41 to %"class.base::ListValue"*
  tail call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %42) #13
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* nonnull %42) #13
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %38, i64 0, i32 0, i32 0
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %38, i64 0, i32 0, i32 1
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %45, align 8
  %47 = icmp eq %"class.std::__1::basic_string"* %44, %46
  br i1 %47, label %52, label %48

48:                                               ; preds = %40, %48
  %49 = phi %"class.std::__1::basic_string"* [ %50, %48 ], [ %44, %40 ]
  tail call void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24) %49, %"class.base::ListValue"* nonnull %42) #13
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 1
  %51 = icmp eq %"class.std::__1::basic_string"* %50, %46
  br i1 %51, label %52, label %48

52:                                               ; preds = %48, %40
  %53 = bitcast i8* %41 to %"class.base::Value"*
  %54 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource13kExtensionIdsE, i64 0, i64 0), i64 13, %"class.base::Value"* nonnull %53) #13
  br label %55

55:                                               ; preds = %36, %52
  %56 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %55
  %60 = tail call i8* @_Znwm(i64 32) #12
  %61 = bitcast i8* %60 to %"class.base::Value"*
  %62 = load i8, i8* %57, align 1, !range !17
  %63 = icmp ne i8 %62, 0
  tail call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %61, i1 zeroext %63) #13
  %64 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource14kUseDynamicUrlE, i64 0, i64 0), i64 15, %"class.base::Value"* nonnull %61) #13
  br label %65

65:                                               ; preds = %59, %55
  ret %"class.base::DictionaryValue"* %3
}

declare %"class.base::Value"* @_ZN4base15DictionaryValue23SetWithoutPathExpansionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource19ParseFromDictionaryERKN4base15DictionaryValueENS3_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPS2_PNS8_12basic_stringIDsNS9_IDsEENS8_9allocatorIDsEEEEPNS8_6vectorISB_NSF_ISB_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #0 align 2 {
  %7 = tail call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* %1, i64 %2, i8 zeroext 6, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  %8 = icmp eq %"class.base::Value"* %7, null
  br i1 %8, label %393, label %9

9:                                                ; preds = %6
  %10 = tail call dereferenceable(32) %"class.base::DictionaryValue"* @_ZN4base5Value17AsDictionaryValueERKS0_(%"class.base::Value"* nonnull dereferenceable(32) %7) #13
  %11 = tail call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource10kResourcesE, i64 0, i64 0), i64 9, i8 zeroext 7, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  %12 = icmp eq %"class.base::Value"* %11, null
  br i1 %12, label %88, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %3, i64 0, i32 0
  %15 = tail call dereferenceable(32) %"class.base::ListValue"* @_ZN4base5Value11AsListValueERKS0_(%"class.base::Value"* nonnull dereferenceable(32) %11) #13
  %16 = tail call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %15, %"class.std::__1::vector"* %14, %"class.std::__1::basic_string.44"* %4) #13
  br i1 %16, label %159, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %19 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %20, align 8
  %22 = icmp eq %"class.base::BasicStringPiece"* %19, %21
  %23 = ptrtoint %"class.base::BasicStringPiece"* %21 to i64
  br i1 %22, label %30, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource10kResourcesE, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 1
  store i64 9, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 1
  %28 = ptrtoint %"class.base::BasicStringPiece"* %27 to i64
  %29 = bitcast %"class.base::BasicStringPiece"** %18 to i64*
  store i64 %28, i64* %29, align 8
  br label %88

30:                                               ; preds = %17
  %31 = ptrtoint %"class.base::BasicStringPiece"* %19 to i64
  %32 = bitcast %"class.base::BasicStringPiece"** %18 to i64*
  %33 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 4
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 1152921504606846975
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #14
  unreachable

41:                                               ; preds = %30
  %42 = bitcast %"class.base::BasicStringPiece"** %20 to i64*
  %43 = sub i64 %23, %34
  %44 = ashr exact i64 %43, 4
  %45 = icmp ult i64 %44, 576460752303423487
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 3
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 1152921504606846975
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #14
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 1152921504606846975, %41 ]
  %56 = shl i64 %55, 4
  %57 = tail call i8* @_Znwm(i64 %56) #12
  %58 = bitcast i8* %57 to %"class.base::BasicStringPiece"*
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi %"class.base::BasicStringPiece"* [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %61, i64 %36
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %61, i64 %60
  %64 = ptrtoint %"class.base::BasicStringPiece"* %63 to i64
  %65 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %62, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource10kResourcesE, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %61, i64 %36, i32 1
  store i64 9, i64* %66, align 8
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %62, i64 1
  %68 = ptrtoint %"class.base::BasicStringPiece"* %67 to i64
  %69 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %70 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %69, align 8
  %71 = load i64, i64* %32, align 8
  %72 = ptrtoint %"class.base::BasicStringPiece"* %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 4
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %62, i64 %75
  %77 = ptrtoint %"class.base::BasicStringPiece"* %76 to i64
  %78 = icmp sgt i64 %73, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %59
  %80 = bitcast %"class.base::BasicStringPiece"* %76 to i8*
  %81 = bitcast %"class.base::BasicStringPiece"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %73, i1 false) #13
  %82 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %69, align 8
  br label %83

83:                                               ; preds = %79, %59
  %84 = phi %"class.base::BasicStringPiece"* [ %70, %59 ], [ %82, %79 ]
  store i64 %77, i64* %33, align 8
  store i64 %68, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %85 = icmp eq %"class.base::BasicStringPiece"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.base::BasicStringPiece"* %84 to i8*
  tail call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %9, %24, %83, %86
  %89 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %90 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %91, align 8
  %93 = icmp eq %"class.base::BasicStringPiece"* %90, %92
  %94 = ptrtoint %"class.base::BasicStringPiece"* %92 to i64
  br i1 %93, label %101, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 0, i32 0
  store i8* %1, i8** %96, align 8
  %97 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 0, i32 1
  store i64 %2, i64* %97, align 8
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %90, i64 1
  %99 = ptrtoint %"class.base::BasicStringPiece"* %98 to i64
  %100 = bitcast %"class.base::BasicStringPiece"** %89 to i64*
  store i64 %99, i64* %100, align 8
  br label %393

101:                                              ; preds = %88
  %102 = ptrtoint %"class.base::BasicStringPiece"* %90 to i64
  %103 = bitcast %"class.base::BasicStringPiece"** %89 to i64*
  %104 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %102, %105
  %107 = ashr exact i64 %106, 4
  %108 = add nsw i64 %107, 1
  %109 = icmp ugt i64 %108, 1152921504606846975
  br i1 %109, label %110, label %112

110:                                              ; preds = %101
  %111 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %111) #14
  unreachable

112:                                              ; preds = %101
  %113 = bitcast %"class.base::BasicStringPiece"** %91 to i64*
  %114 = sub i64 %94, %105
  %115 = ashr exact i64 %114, 4
  %116 = icmp ult i64 %115, 576460752303423487
  br i1 %116, label %117, label %125

117:                                              ; preds = %112
  %118 = ashr exact i64 %114, 3
  %119 = icmp ult i64 %118, %108
  %120 = select i1 %119, i64 %108, i64 %118
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %117
  %123 = icmp ugt i64 %120, 1152921504606846975
  br i1 %123, label %124, label %125

124:                                              ; preds = %122
  tail call void @abort() #14
  unreachable

125:                                              ; preds = %122, %112
  %126 = phi i64 [ %120, %122 ], [ 1152921504606846975, %112 ]
  %127 = shl i64 %126, 4
  %128 = tail call i8* @_Znwm(i64 %127) #12
  %129 = bitcast i8* %128 to %"class.base::BasicStringPiece"*
  br label %130

130:                                              ; preds = %125, %117
  %131 = phi i64 [ %126, %125 ], [ 0, %117 ]
  %132 = phi %"class.base::BasicStringPiece"* [ %129, %125 ], [ null, %117 ]
  %133 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %132, i64 %107
  %134 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %132, i64 %131
  %135 = ptrtoint %"class.base::BasicStringPiece"* %134 to i64
  %136 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 0, i32 0
  store i8* %1, i8** %136, align 8
  %137 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %132, i64 %107, i32 1
  store i64 %2, i64* %137, align 8
  %138 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 1
  %139 = ptrtoint %"class.base::BasicStringPiece"* %138 to i64
  %140 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %141 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %140, align 8
  %142 = load i64, i64* %103, align 8
  %143 = ptrtoint %"class.base::BasicStringPiece"* %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 4
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %133, i64 %146
  %148 = ptrtoint %"class.base::BasicStringPiece"* %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %130
  %151 = bitcast %"class.base::BasicStringPiece"* %147 to i8*
  %152 = bitcast %"class.base::BasicStringPiece"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #13
  %153 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %140, align 8
  br label %154

154:                                              ; preds = %150, %130
  %155 = phi %"class.base::BasicStringPiece"* [ %141, %130 ], [ %153, %150 ]
  store i64 %148, i64* %104, align 8
  store i64 %139, i64* %103, align 8
  store i64 %135, i64* %113, align 8
  %156 = icmp eq %"class.base::BasicStringPiece"* %155, null
  br i1 %156, label %393, label %157

157:                                              ; preds = %154
  %158 = bitcast %"class.base::BasicStringPiece"* %155 to i8*
  tail call void @_ZdlPv(i8* %158) #12
  br label %393

159:                                              ; preds = %13
  %160 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %3, i64 0, i32 1
  %161 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource8kMatchesE, i64 0, i64 0), i64 7, %"class.std::__1::unique_ptr"* %160, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5)
  br i1 %161, label %233, label %162

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %164 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %163, align 8
  %165 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %166 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %165, align 8
  %167 = icmp eq %"class.base::BasicStringPiece"* %164, %166
  %168 = ptrtoint %"class.base::BasicStringPiece"* %166 to i64
  br i1 %167, label %175, label %169

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %164, i64 0, i32 0
  store i8* %1, i8** %170, align 8
  %171 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %164, i64 0, i32 1
  store i64 %2, i64* %171, align 8
  %172 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %164, i64 1
  %173 = ptrtoint %"class.base::BasicStringPiece"* %172 to i64
  %174 = bitcast %"class.base::BasicStringPiece"** %163 to i64*
  store i64 %173, i64* %174, align 8
  br label %393

175:                                              ; preds = %162
  %176 = ptrtoint %"class.base::BasicStringPiece"* %164 to i64
  %177 = bitcast %"class.base::BasicStringPiece"** %163 to i64*
  %178 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = sub i64 %176, %179
  %181 = ashr exact i64 %180, 4
  %182 = add nsw i64 %181, 1
  %183 = icmp ugt i64 %182, 1152921504606846975
  br i1 %183, label %184, label %186

184:                                              ; preds = %175
  %185 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %185) #14
  unreachable

186:                                              ; preds = %175
  %187 = bitcast %"class.base::BasicStringPiece"** %165 to i64*
  %188 = sub i64 %168, %179
  %189 = ashr exact i64 %188, 4
  %190 = icmp ult i64 %189, 576460752303423487
  br i1 %190, label %191, label %199

191:                                              ; preds = %186
  %192 = ashr exact i64 %188, 3
  %193 = icmp ult i64 %192, %182
  %194 = select i1 %193, i64 %182, i64 %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %191
  %197 = icmp ugt i64 %194, 1152921504606846975
  br i1 %197, label %198, label %199

198:                                              ; preds = %196
  tail call void @abort() #14
  unreachable

199:                                              ; preds = %196, %186
  %200 = phi i64 [ %194, %196 ], [ 1152921504606846975, %186 ]
  %201 = shl i64 %200, 4
  %202 = tail call i8* @_Znwm(i64 %201) #12
  %203 = bitcast i8* %202 to %"class.base::BasicStringPiece"*
  br label %204

204:                                              ; preds = %199, %191
  %205 = phi i64 [ %200, %199 ], [ 0, %191 ]
  %206 = phi %"class.base::BasicStringPiece"* [ %203, %199 ], [ null, %191 ]
  %207 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %206, i64 %181
  %208 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %206, i64 %205
  %209 = ptrtoint %"class.base::BasicStringPiece"* %208 to i64
  %210 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %207, i64 0, i32 0
  store i8* %1, i8** %210, align 8
  %211 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %206, i64 %181, i32 1
  store i64 %2, i64* %211, align 8
  %212 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %207, i64 1
  %213 = ptrtoint %"class.base::BasicStringPiece"* %212 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %215 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %214, align 8
  %216 = load i64, i64* %177, align 8
  %217 = ptrtoint %"class.base::BasicStringPiece"* %215 to i64
  %218 = sub i64 %216, %217
  %219 = ashr exact i64 %218, 4
  %220 = sub nsw i64 0, %219
  %221 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %207, i64 %220
  %222 = ptrtoint %"class.base::BasicStringPiece"* %221 to i64
  %223 = icmp sgt i64 %218, 0
  br i1 %223, label %224, label %228

224:                                              ; preds = %204
  %225 = bitcast %"class.base::BasicStringPiece"* %221 to i8*
  %226 = bitcast %"class.base::BasicStringPiece"* %215 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %226, i64 %218, i1 false) #13
  %227 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %214, align 8
  br label %228

228:                                              ; preds = %224, %204
  %229 = phi %"class.base::BasicStringPiece"* [ %215, %204 ], [ %227, %224 ]
  store i64 %222, i64* %178, align 8
  store i64 %213, i64* %177, align 8
  store i64 %209, i64* %187, align 8
  %230 = icmp eq %"class.base::BasicStringPiece"* %229, null
  br i1 %230, label %393, label %231

231:                                              ; preds = %228
  %232 = bitcast %"class.base::BasicStringPiece"* %229 to i8*
  tail call void @_ZdlPv(i8* %232) #12
  br label %393

233:                                              ; preds = %159
  %234 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %3, i64 0, i32 2
  %235 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource13kExtensionIdsE, i64 0, i64 0), i64 13, %"class.std::__1::unique_ptr"* %234, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5)
  br i1 %235, label %307, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %238 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %237, align 8
  %239 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %240 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %239, align 8
  %241 = icmp eq %"class.base::BasicStringPiece"* %238, %240
  %242 = ptrtoint %"class.base::BasicStringPiece"* %240 to i64
  br i1 %241, label %249, label %243

243:                                              ; preds = %236
  %244 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 0, i32 0
  store i8* %1, i8** %244, align 8
  %245 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 0, i32 1
  store i64 %2, i64* %245, align 8
  %246 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %238, i64 1
  %247 = ptrtoint %"class.base::BasicStringPiece"* %246 to i64
  %248 = bitcast %"class.base::BasicStringPiece"** %237 to i64*
  store i64 %247, i64* %248, align 8
  br label %393

249:                                              ; preds = %236
  %250 = ptrtoint %"class.base::BasicStringPiece"* %238 to i64
  %251 = bitcast %"class.base::BasicStringPiece"** %237 to i64*
  %252 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 %250, %253
  %255 = ashr exact i64 %254, 4
  %256 = add nsw i64 %255, 1
  %257 = icmp ugt i64 %256, 1152921504606846975
  br i1 %257, label %258, label %260

258:                                              ; preds = %249
  %259 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %259) #14
  unreachable

260:                                              ; preds = %249
  %261 = bitcast %"class.base::BasicStringPiece"** %239 to i64*
  %262 = sub i64 %242, %253
  %263 = ashr exact i64 %262, 4
  %264 = icmp ult i64 %263, 576460752303423487
  br i1 %264, label %265, label %273

265:                                              ; preds = %260
  %266 = ashr exact i64 %262, 3
  %267 = icmp ult i64 %266, %256
  %268 = select i1 %267, i64 %256, i64 %266
  %269 = icmp eq i64 %268, 0
  br i1 %269, label %278, label %270

270:                                              ; preds = %265
  %271 = icmp ugt i64 %268, 1152921504606846975
  br i1 %271, label %272, label %273

272:                                              ; preds = %270
  tail call void @abort() #14
  unreachable

273:                                              ; preds = %270, %260
  %274 = phi i64 [ %268, %270 ], [ 1152921504606846975, %260 ]
  %275 = shl i64 %274, 4
  %276 = tail call i8* @_Znwm(i64 %275) #12
  %277 = bitcast i8* %276 to %"class.base::BasicStringPiece"*
  br label %278

278:                                              ; preds = %273, %265
  %279 = phi i64 [ %274, %273 ], [ 0, %265 ]
  %280 = phi %"class.base::BasicStringPiece"* [ %277, %273 ], [ null, %265 ]
  %281 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %280, i64 %255
  %282 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %280, i64 %279
  %283 = ptrtoint %"class.base::BasicStringPiece"* %282 to i64
  %284 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %281, i64 0, i32 0
  store i8* %1, i8** %284, align 8
  %285 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %280, i64 %255, i32 1
  store i64 %2, i64* %285, align 8
  %286 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %281, i64 1
  %287 = ptrtoint %"class.base::BasicStringPiece"* %286 to i64
  %288 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %289 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %288, align 8
  %290 = load i64, i64* %251, align 8
  %291 = ptrtoint %"class.base::BasicStringPiece"* %289 to i64
  %292 = sub i64 %290, %291
  %293 = ashr exact i64 %292, 4
  %294 = sub nsw i64 0, %293
  %295 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %281, i64 %294
  %296 = ptrtoint %"class.base::BasicStringPiece"* %295 to i64
  %297 = icmp sgt i64 %292, 0
  br i1 %297, label %298, label %302

298:                                              ; preds = %278
  %299 = bitcast %"class.base::BasicStringPiece"* %295 to i8*
  %300 = bitcast %"class.base::BasicStringPiece"* %289 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %299, i8* align 8 %300, i64 %292, i1 false) #13
  %301 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %288, align 8
  br label %302

302:                                              ; preds = %298, %278
  %303 = phi %"class.base::BasicStringPiece"* [ %289, %278 ], [ %301, %298 ]
  store i64 %296, i64* %252, align 8
  store i64 %287, i64* %251, align 8
  store i64 %283, i64* %261, align 8
  %304 = icmp eq %"class.base::BasicStringPiece"* %303, null
  br i1 %304, label %393, label %305

305:                                              ; preds = %302
  %306 = bitcast %"class.base::BasicStringPiece"* %303 to i8*
  tail call void @_ZdlPv(i8* %306) #12
  br label %393

307:                                              ; preds = %233
  %308 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %3, i64 0, i32 3
  %309 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %10, i64 0, i32 0
  %310 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %309, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource14kUseDynamicUrlE, i64 0, i64 0), i64 15) #13
  %311 = icmp eq %"class.base::Value"* %310, null
  br i1 %311, label %393, label %312

312:                                              ; preds = %307
  %313 = tail call i8* @_Znwm(i64 1) #12
  store i8 0, i8* %313, align 1
  %314 = tail call zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPbPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSD_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource14kUseDynamicUrlE, i64 0, i64 0), i64 15, i8* nonnull %313, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  br i1 %314, label %315, label %322

315:                                              ; preds = %312
  %316 = ptrtoint i8* %313 to i64
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %308, i64 0, i32 0, i32 0, i32 0
  %318 = load i8*, i8** %317, align 8
  %319 = bitcast %"class.std::__1::unique_ptr.9"* %308 to i64*
  store i64 %316, i64* %319, align 8
  %320 = icmp eq i8* %318, null
  br i1 %320, label %393, label %321

321:                                              ; preds = %315
  tail call void @_ZdlPv(i8* nonnull %318) #12
  br label %393

322:                                              ; preds = %312
  tail call void @_ZdlPv(i8* nonnull %313) #12
  %323 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %324 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %323, align 8
  %325 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %326 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %325, align 8
  %327 = icmp eq %"class.base::BasicStringPiece"* %324, %326
  %328 = ptrtoint %"class.base::BasicStringPiece"* %326 to i64
  br i1 %327, label %335, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %324, i64 0, i32 0
  store i8* %1, i8** %330, align 8
  %331 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %324, i64 0, i32 1
  store i64 %2, i64* %331, align 8
  %332 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %324, i64 1
  %333 = ptrtoint %"class.base::BasicStringPiece"* %332 to i64
  %334 = bitcast %"class.base::BasicStringPiece"** %323 to i64*
  store i64 %333, i64* %334, align 8
  br label %393

335:                                              ; preds = %322
  %336 = ptrtoint %"class.base::BasicStringPiece"* %324 to i64
  %337 = bitcast %"class.base::BasicStringPiece"** %323 to i64*
  %338 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = sub i64 %336, %339
  %341 = ashr exact i64 %340, 4
  %342 = add nsw i64 %341, 1
  %343 = icmp ugt i64 %342, 1152921504606846975
  br i1 %343, label %344, label %346

344:                                              ; preds = %335
  %345 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %345) #14
  unreachable

346:                                              ; preds = %335
  %347 = bitcast %"class.base::BasicStringPiece"** %325 to i64*
  %348 = sub i64 %328, %339
  %349 = ashr exact i64 %348, 4
  %350 = icmp ult i64 %349, 576460752303423487
  br i1 %350, label %351, label %359

351:                                              ; preds = %346
  %352 = ashr exact i64 %348, 3
  %353 = icmp ult i64 %352, %342
  %354 = select i1 %353, i64 %342, i64 %352
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %364, label %356

356:                                              ; preds = %351
  %357 = icmp ugt i64 %354, 1152921504606846975
  br i1 %357, label %358, label %359

358:                                              ; preds = %356
  tail call void @abort() #14
  unreachable

359:                                              ; preds = %356, %346
  %360 = phi i64 [ %354, %356 ], [ 1152921504606846975, %346 ]
  %361 = shl i64 %360, 4
  %362 = tail call i8* @_Znwm(i64 %361) #12
  %363 = bitcast i8* %362 to %"class.base::BasicStringPiece"*
  br label %364

364:                                              ; preds = %359, %351
  %365 = phi i64 [ %360, %359 ], [ 0, %351 ]
  %366 = phi %"class.base::BasicStringPiece"* [ %363, %359 ], [ null, %351 ]
  %367 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %366, i64 %341
  %368 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %366, i64 %365
  %369 = ptrtoint %"class.base::BasicStringPiece"* %368 to i64
  %370 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %367, i64 0, i32 0
  store i8* %1, i8** %370, align 8
  %371 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %366, i64 %341, i32 1
  store i64 %2, i64* %371, align 8
  %372 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %367, i64 1
  %373 = ptrtoint %"class.base::BasicStringPiece"* %372 to i64
  %374 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %375 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %374, align 8
  %376 = load i64, i64* %337, align 8
  %377 = ptrtoint %"class.base::BasicStringPiece"* %375 to i64
  %378 = sub i64 %376, %377
  %379 = ashr exact i64 %378, 4
  %380 = sub nsw i64 0, %379
  %381 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %367, i64 %380
  %382 = ptrtoint %"class.base::BasicStringPiece"* %381 to i64
  %383 = icmp sgt i64 %378, 0
  br i1 %383, label %384, label %388

384:                                              ; preds = %364
  %385 = bitcast %"class.base::BasicStringPiece"* %381 to i8*
  %386 = bitcast %"class.base::BasicStringPiece"* %375 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %385, i8* align 8 %386, i64 %378, i1 false) #13
  %387 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %374, align 8
  br label %388

388:                                              ; preds = %384, %364
  %389 = phi %"class.base::BasicStringPiece"* [ %375, %364 ], [ %387, %384 ]
  store i64 %382, i64* %338, align 8
  store i64 %373, i64* %337, align 8
  store i64 %369, i64* %347, align 8
  %390 = icmp eq %"class.base::BasicStringPiece"* %389, null
  br i1 %390, label %393, label %391

391:                                              ; preds = %388
  %392 = bitcast %"class.base::BasicStringPiece"* %389 to i8*
  tail call void @_ZdlPv(i8* %392) #12
  br label %393

393:                                              ; preds = %321, %315, %307, %391, %388, %329, %305, %302, %243, %231, %228, %169, %157, %154, %95, %6
  %394 = phi i1 [ false, %6 ], [ false, %95 ], [ false, %154 ], [ false, %157 ], [ false, %169 ], [ false, %228 ], [ false, %231 ], [ false, %243 ], [ false, %302 ], [ false, %305 ], [ false, %329 ], [ false, %388 ], [ false, %391 ], [ true, %307 ], [ true, %315 ], [ true, %321 ]
  ret i1 %394
}

declare %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, i8 zeroext, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(32) %"class.base::DictionaryValue"* @_ZN4base5Value17AsDictionaryValueERKS0_(%"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEEbRKN4base15DictionaryValueENSC_16BasicStringPieceIcS6_EEPNS2_10unique_ptrIT_NS2_14default_deleteISJ_EEEEPNS4_IDsNS5_IDsEENS7_IDsEEEEPNS3_ISH_NS7_ISH_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, %"class.std::__1::unique_ptr"*, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %0, i64 0, i32 0
  %8 = tail call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %7, i8* %1, i64 %2) #13
  %9 = icmp eq %"class.base::Value"* %8, null
  br i1 %9, label %151, label %10

10:                                               ; preds = %6
  %11 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #13
  %12 = ptrtoint i8* %11 to i64
  %13 = tail call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* %1, i64 %2, i8 zeroext 7, %"class.std::__1::basic_string.44"* %4, %"class.std::__1::vector.70"* %5) #13
  %14 = icmp eq %"class.base::Value"* %13, null
  br i1 %14, label %123, label %15

15:                                               ; preds = %10
  %16 = bitcast i8* %11 to %"class.std::__1::vector"*
  %17 = tail call dereferenceable(32) %"class.base::ListValue"* @_ZN4base5Value11AsListValueERKS0_(%"class.base::Value"* nonnull dereferenceable(32) %13) #13
  %18 = tail call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEbRKN4base9ListValueEPNS2_6vectorIT_NS6_ISE_EEEEPNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %17, %"class.std::__1::vector"* nonnull %16, %"class.std::__1::basic_string.44"* %4) #13
  br i1 %18, label %90, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 1
  %21 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %22, align 8
  %24 = icmp eq %"class.base::BasicStringPiece"* %21, %23
  %25 = ptrtoint %"class.base::BasicStringPiece"* %23 to i64
  br i1 %24, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 0, i32 0
  store i8* %1, i8** %27, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 0, i32 1
  store i64 %2, i64* %28, align 8
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %21, i64 1
  %30 = ptrtoint %"class.base::BasicStringPiece"* %29 to i64
  %31 = bitcast %"class.base::BasicStringPiece"** %20 to i64*
  store i64 %30, i64* %31, align 8
  br label %123

32:                                               ; preds = %19
  %33 = ptrtoint %"class.base::BasicStringPiece"* %21 to i64
  %34 = bitcast %"class.base::BasicStringPiece"** %20 to i64*
  %35 = bitcast %"class.std::__1::vector.70"* %5 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %33, %36
  %38 = ashr exact i64 %37, 4
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 1152921504606846975
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::vector.70"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #14
  unreachable

43:                                               ; preds = %32
  %44 = bitcast %"class.base::BasicStringPiece"** %22 to i64*
  %45 = sub i64 %25, %36
  %46 = ashr exact i64 %45, 4
  %47 = icmp ult i64 %46, 576460752303423487
  br i1 %47, label %48, label %56

48:                                               ; preds = %43
  %49 = ashr exact i64 %45, 3
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 1152921504606846975
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %53, %43
  %57 = phi i64 [ %51, %53 ], [ 1152921504606846975, %43 ]
  %58 = shl i64 %57, 4
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"class.base::BasicStringPiece"*
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi %"class.base::BasicStringPiece"* [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %38
  %65 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %62
  %66 = ptrtoint %"class.base::BasicStringPiece"* %65 to i64
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 0, i32 0
  store i8* %1, i8** %67, align 8
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %63, i64 %38, i32 1
  store i64 %2, i64* %68, align 8
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 1
  %70 = ptrtoint %"class.base::BasicStringPiece"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %5, i64 0, i32 0, i32 0
  %72 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %71, align 8
  %73 = load i64, i64* %34, align 8
  %74 = ptrtoint %"class.base::BasicStringPiece"* %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %64, i64 %77
  %79 = ptrtoint %"class.base::BasicStringPiece"* %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %61
  %82 = bitcast %"class.base::BasicStringPiece"* %78 to i8*
  %83 = bitcast %"class.base::BasicStringPiece"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 %75, i1 false) #13
  %84 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %71, align 8
  br label %85

85:                                               ; preds = %81, %61
  %86 = phi %"class.base::BasicStringPiece"* [ %72, %61 ], [ %84, %81 ]
  store i64 %79, i64* %35, align 8
  store i64 %70, i64* %34, align 8
  store i64 %66, i64* %44, align 8
  %87 = icmp eq %"class.base::BasicStringPiece"* %86, null
  br i1 %87, label %123, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.base::BasicStringPiece"* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #12
  br label %123

90:                                               ; preds = %15
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %91, align 8
  %93 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %12, i64* %93, align 8
  %94 = icmp eq %"class.std::__1::vector"* %92, null
  br i1 %94, label %151, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %96, align 8
  %98 = icmp eq %"class.std::__1::basic_string"* %97, null
  br i1 %98, label %121, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 0, i32 0, i32 1
  %102 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %101, align 8
  %103 = icmp eq %"class.std::__1::basic_string"* %102, %97
  br i1 %103, label %119, label %104

104:                                              ; preds = %99, %114
  %105 = phi %"class.std::__1::basic_string"* [ %106, %114 ], [ %102, %99 ]
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 -1
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %111, %104
  %115 = icmp eq %"class.std::__1::basic_string"* %106, %97
  br i1 %115, label %116, label %104

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::vector"* %92 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %99
  %120 = phi i8* [ %118, %116 ], [ %100, %99 ]
  store %"class.std::__1::basic_string"* %97, %"class.std::__1::basic_string"** %101, align 8
  tail call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %119, %95
  %122 = bitcast %"class.std::__1::vector"* %92 to i8*
  tail call void @_ZdlPv(i8* %122) #12
  br label %151

123:                                              ; preds = %88, %85, %26, %10
  %124 = bitcast i8* %11 to %"class.std::__1::basic_string"**
  %125 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %124, align 8
  %126 = icmp eq %"class.std::__1::basic_string"* %125, null
  br i1 %126, label %150, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  %129 = getelementptr inbounds i8, i8* %11, i64 8
  %130 = bitcast i8* %129 to %"class.std::__1::basic_string"**
  %131 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %130, align 8
  %132 = icmp eq %"class.std::__1::basic_string"* %131, %125
  br i1 %132, label %148, label %133

133:                                              ; preds = %127, %143
  %134 = phi %"class.std::__1::basic_string"* [ %135, %143 ], [ %131, %127 ]
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 -1
  %136 = bitcast %"class.std::__1::basic_string"* %135 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  tail call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %140, %133
  %144 = icmp eq %"class.std::__1::basic_string"* %135, %125
  br i1 %144, label %145, label %133

145:                                              ; preds = %143
  %146 = bitcast i8* %11 to i8**
  %147 = load i8*, i8** %146, align 8
  br label %148

148:                                              ; preds = %145, %127
  %149 = phi i8* [ %147, %145 ], [ %128, %127 ]
  store %"class.std::__1::basic_string"* %125, %"class.std::__1::basic_string"** %130, align 8
  tail call void @_ZdlPv(i8* %149) #12
  br label %150

150:                                              ; preds = %148, %123
  tail call void @_ZdlPv(i8* nonnull %11) #12
  br label %151

151:                                              ; preds = %121, %90, %150, %6
  %152 = phi i1 [ true, %6 ], [ false, %150 ], [ true, %90 ], [ true, %121 ]
  ret i1 %152
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api24web_accessible_resources12ManifestKeysC2Ev(%"struct.extensions::api::web_accessible_resources::ManifestKeys"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api24web_accessible_resources12ManifestKeysD2Ev(%"struct.extensions::api::web_accessible_resources::ManifestKeys"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %2, align 8
  %4 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %3 to i8*
  %7 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %7, align 8
  %9 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %8, %3
  br i1 %9, label %17, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %11, i64 -1
  tail call void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %12) #13
  %13 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %12, %3
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0 to i8**
  %16 = load i8*, i8** %15, align 8
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi i8* [ %16, %14 ], [ %6, %5 ]
  store %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %3, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %7, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions3api24web_accessible_resources12ManifestKeysC2EOS2_(%"struct.extensions::api::web_accessible_resources::ManifestKeys"* nocapture, %"struct.extensions::api::web_accessible_resources::ManifestKeys"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"struct.extensions::api::web_accessible_resources::ManifestKeys"* @_ZN10extensions3api24web_accessible_resources12ManifestKeysaSEOS2_(%"struct.extensions::api::web_accessible_resources::ManifestKeys"* returned, %"struct.extensions::api::web_accessible_resources::ManifestKeys"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %3, align 8
  %5 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %4 to i8*
  %8 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %8, align 8
  %10 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %12, i64 -1
  tail call void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %13) #13
  %14 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %4, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #12
  %20 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #13
  br label %21

21:                                               ; preds = %2, %18
  %22 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #13
  ret %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions3api24web_accessible_resources12ManifestKeys19ParseFromDictionaryERKN4base15DictionaryValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::DictionaryValue"* dereferenceable(32), %"struct.extensions::api::web_accessible_resources::ManifestKeys"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.70", align 8
  %5 = bitcast %"class.std::__1::vector.70"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #13
  %9 = call %"class.base::Value"* @_ZN20json_schema_compiler19manifest_parse_util13FindKeyOfTypeERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS1_5Value4TypeEPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSE_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions3api24web_accessible_resources12ManifestKeys23kWebAccessibleResourcesE, i64 0, i64 0), i64 24, i8 zeroext 7, %"class.std::__1::basic_string.44"* %2, %"class.std::__1::vector.70"* nonnull %4) #13
  %10 = icmp eq %"class.base::Value"* %9, null
  br i1 %10, label %74, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::ManifestKeys", %"struct.extensions::api::web_accessible_resources::ManifestKeys"* %1, i64 0, i32 0
  %13 = call dereferenceable(32) %"class.base::ListValue"* @_ZN4base5Value11AsListValueERKS0_(%"class.base::Value"* nonnull dereferenceable(32) %9) #13
  %14 = call zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api24web_accessible_resources21WebAccessibleResourceEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEEPNSA_12basic_stringIDsNSA_11char_traitsIDsEENSD_IDsEEEE(%"class.base::ListValue"* dereferenceable(32) %13, %"class.std::__1::vector.77"* %12, %"class.std::__1::basic_string.44"* %2) #13
  br i1 %14, label %75, label %15

15:                                               ; preds = %11
  %16 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  %17 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  %18 = icmp eq %"class.base::BasicStringPiece"* %16, %17
  %19 = ptrtoint %"class.base::BasicStringPiece"* %17 to i64
  br i1 %18, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions3api24web_accessible_resources12ManifestKeys23kWebAccessibleResourcesE, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 1
  store i64 24, i64* %22, align 8
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 1
  %24 = ptrtoint %"class.base::BasicStringPiece"* %23 to i64
  %25 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %24, i64* %25, align 8
  br label %74

26:                                               ; preds = %15
  %27 = ptrtoint %"class.base::BasicStringPiece"* %16 to i64
  %28 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  %29 = bitcast %"class.std::__1::vector.70"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 4
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 1152921504606846975
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector.70"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %36) #14
  unreachable

37:                                               ; preds = %26
  %38 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %39 = sub i64 %19, %30
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  call void @abort() #14
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %37 ]
  %52 = shl i64 %51, 4
  %53 = call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"class.base::BasicStringPiece"*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i8* [ %53, %50 ], [ null, %42 ]
  %58 = phi %"class.base::BasicStringPiece"* [ %54, %50 ], [ null, %42 ]
  %59 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %58, i64 %32
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %58, i64 %56
  %61 = ptrtoint %"class.base::BasicStringPiece"* %60 to i64
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %59, i64 0, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZN10extensions3api24web_accessible_resources12ManifestKeys23kWebAccessibleResourcesE, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %58, i64 %32, i32 1
  store i64 24, i64* %63, align 8
  %64 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %59, i64 1
  %65 = ptrtoint %"class.base::BasicStringPiece"* %64 to i64
  %66 = ptrtoint %"class.base::BasicStringPiece"* %58 to i64
  %67 = icmp sgt i64 %31, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = inttoptr i64 %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %69, i64 %31, i1 false) #13
  br label %70

70:                                               ; preds = %68, %55
  store i64 %66, i64* %29, align 8
  store i64 %65, i64* %28, align 8
  store i64 %61, i64* %38, align 8
  %71 = icmp eq i64 %30, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = inttoptr i64 %30 to i8*
  call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %3, %20, %70, %72
  call void @_ZN20json_schema_compiler19manifest_parse_util18PopulateFinalErrorEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN4base16BasicStringPieceIcNS3_IcEEEENS5_ISD_EEEE(%"class.std::__1::basic_string.44"* %2, %"class.std::__1::vector.70"* nonnull %4) #13
  br label %75

75:                                               ; preds = %11, %74
  %76 = phi i1 [ false, %74 ], [ true, %11 ]
  %77 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %78 = icmp eq %"class.base::BasicStringPiece"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = ptrtoint %"class.base::BasicStringPiece"* %77 to i64
  %81 = bitcast %"class.base::BasicStringPiece"** %7 to i64*
  store i64 %80, i64* %81, align 8
  %82 = bitcast %"class.base::BasicStringPiece"* %77 to i8*
  call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret i1 %76
}

declare void @_ZN20json_schema_compiler19manifest_parse_util18PopulateFinalErrorEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN4base16BasicStringPieceIcNS3_IcEEEENS5_ISD_EEEE(%"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string.44"*, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string.44"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #14
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !65
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !65
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !68, !noalias !65
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !68, !noalias !65
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !65
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !65
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !68, !noalias !65
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !68, !noalias !65
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !65
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !65
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !68, !noalias !65
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !68, !noalias !65
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !65
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !65
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !68, !noalias !65
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !68, !noalias !65
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !70

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !65
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !65
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !68, !noalias !65
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !68, !noalias !65
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !71

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !72

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !73

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !74
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !74
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !77, !noalias !74
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !77, !noalias !74
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !74
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !74
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !77, !noalias !74
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !77, !noalias !74
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !79

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !74
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !74
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !77, !noalias !74
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !77, !noalias !74
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !80

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !81

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !82
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !82
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !85, !noalias !82
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !85, !noalias !82
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !82
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !82
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !85, !noalias !82
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !85, !noalias !82
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !82
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !82
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !85, !noalias !82
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !85, !noalias !82
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !82
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !82
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !85, !noalias !82
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !85, !noalias !82
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !87

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !82
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !82
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !85, !noalias !82
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !85, !noalias !82
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !88

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !89

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !90

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !91
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !91
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !94, !noalias !91
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !94, !noalias !91
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !91
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !91
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !94, !noalias !91
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !94, !noalias !91
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !96

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !91
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !91
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !94, !noalias !91
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !94, !noalias !91
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !97

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !98

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string.44"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.44"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !99
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !99
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !102, !noalias !99
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !102, !noalias !99
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !99
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !99
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !102, !noalias !99
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !102, !noalias !99
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !99
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !99
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !102, !noalias !99
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !102, !noalias !99
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !99
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !99
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !102, !noalias !99
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !102, !noalias !99
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !104

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !99
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !99
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !102, !noalias !99
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !102, !noalias !99
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !105

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !106

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !107

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !108

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !109

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !110

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !112
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !112
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !115, !noalias !112
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !115, !noalias !112
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !112
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !112
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !115, !noalias !112
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !115, !noalias !112
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !112
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !112
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !115, !noalias !112
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !115, !noalias !112
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !112
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !112
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !115, !noalias !112
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !115, !noalias !112
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !117

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !112
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !112
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !115, !noalias !112
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !115, !noalias !112
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !118

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !119

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !120

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.44"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.44"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.44"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = tail call i1 @llvm.is.constant.i16(i16 %3)
  %5 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %667

6:                                                ; preds = %2
  br i1 %5, label %24, label %7

7:                                                ; preds = %6, %7
  %8 = phi i64 [ %10, %7 ], [ 0, %6 ]
  %9 = phi i16* [ %11, %7 ], [ %1, %6 ]
  %10 = add i64 %8, 1
  %11 = getelementptr inbounds i16, i16* %9, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 11
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i64 [ %19, %16 ], [ 0, %14 ]
  %18 = phi i16* [ %20, %16 ], [ %1, %14 ]
  %19 = add i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  br i1 %15, label %24, label %330

24:                                               ; preds = %6, %23
  %25 = phi i64 [ %19, %23 ], [ 0, %6 ]
  %26 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i16* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %328, label %40

40:                                               ; preds = %37
  %41 = icmp ult i16* %38, %1
  br i1 %41, label %42, label %185

42:                                               ; preds = %40
  %43 = icmp ult i64 %25, 16
  br i1 %43, label %132, label %44

44:                                               ; preds = %42
  %45 = getelementptr i16, i16* %38, i64 %25
  %46 = getelementptr i16, i16* %1, i64 %25
  %47 = icmp ult i16* %38, %46
  %48 = icmp ugt i16* %45, %1
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %44
  %51 = and i64 %25, -16
  %52 = sub i64 %25, %51
  %53 = getelementptr i16, i16* %1, i64 %51
  %54 = getelementptr i16, i16* %38, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %1, i64 %63
  %66 = getelementptr i16, i16* %38, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !121
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !121
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !124, !noalias !121
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !124, !noalias !121
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %1, i64 %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !121
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !121
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !124, !noalias !121
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !124, !noalias !121
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %1, i64 %86
  %88 = getelementptr i16, i16* %38, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !121
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !121
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !124, !noalias !121
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !124, !noalias !121
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %1, i64 %97
  %99 = getelementptr i16, i16* %38, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !121
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !121
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !124, !noalias !121
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !124, !noalias !121
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !126

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %1, i64 %115
  %118 = getelementptr i16, i16* %38, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !121
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !121
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !124, !noalias !121
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !124, !noalias !121
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !127

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %25, %51
  br i1 %131, label %328, label %132

132:                                              ; preds = %130, %44, %42
  %133 = phi i64 [ %25, %44 ], [ %25, %42 ], [ %52, %130 ]
  %134 = phi i16* [ %1, %44 ], [ %1, %42 ], [ %53, %130 ]
  %135 = phi i16* [ %38, %44 ], [ %38, %42 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !128

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %328, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %328, label %155, !llvm.loop !129

185:                                              ; preds = %40
  %186 = icmp ugt i16* %38, %1
  br i1 %186, label %187, label %328

187:                                              ; preds = %185
  %188 = getelementptr inbounds i16, i16* %1, i64 %25
  %189 = getelementptr inbounds i16, i16* %38, i64 %25
  %190 = icmp ult i64 %25, 16
  br i1 %190, label %275, label %191

191:                                              ; preds = %187
  %192 = icmp ult i16* %38, %188
  %193 = icmp ugt i16* %189, %1
  %194 = and i1 %192, %193
  br i1 %194, label %275, label %195

195:                                              ; preds = %191
  %196 = and i64 %25, -16
  %197 = sub i64 %25, %196
  %198 = sub i64 0, %196
  %199 = getelementptr i16, i16* %188, i64 %198
  %200 = sub i64 0, %196
  %201 = getelementptr i16, i16* %189, i64 %200
  %202 = add i64 %196, -16
  %203 = lshr exact i64 %202, 4
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %202, 0
  br i1 %206, label %253, label %207

207:                                              ; preds = %195
  %208 = sub nuw nsw i64 %204, %205
  %209 = getelementptr i16, i16* %188, i64 -1
  %210 = getelementptr i16, i16* %189, i64 -1
  %211 = getelementptr i16, i16* %188, i64 -1
  %212 = getelementptr i16, i16* %189, i64 -1
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 0, %207 ], [ %248, %213 ]
  %215 = phi i64 [ %208, %207 ], [ %249, %213 ]
  %216 = sub i64 0, %214
  %217 = sub i64 0, %214
  %218 = getelementptr inbounds i16, i16* %210, i64 %217
  %219 = getelementptr inbounds i16, i16* %209, i64 %216
  %220 = getelementptr inbounds i16, i16* %219, i64 -7
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !130
  %223 = getelementptr inbounds i16, i16* %219, i64 -8
  %224 = getelementptr inbounds i16, i16* %223, i64 -7
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !130
  %227 = getelementptr inbounds i16, i16* %218, i64 -7
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %228, align 2, !alias.scope !133, !noalias !130
  %229 = getelementptr inbounds i16, i16* %218, i64 -8
  %230 = getelementptr inbounds i16, i16* %229, i64 -7
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %231, align 2, !alias.scope !133, !noalias !130
  %232 = sub nuw nsw i64 -16, %214
  %233 = sub nuw nsw i64 -16, %214
  %234 = getelementptr inbounds i16, i16* %212, i64 %233
  %235 = getelementptr inbounds i16, i16* %211, i64 %232
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !130
  %239 = getelementptr inbounds i16, i16* %235, i64 -8
  %240 = getelementptr inbounds i16, i16* %239, i64 -7
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !130
  %243 = getelementptr inbounds i16, i16* %234, i64 -7
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %244, align 2, !alias.scope !133, !noalias !130
  %245 = getelementptr inbounds i16, i16* %234, i64 -8
  %246 = getelementptr inbounds i16, i16* %245, i64 -7
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %247, align 2, !alias.scope !133, !noalias !130
  %248 = add i64 %214, 32
  %249 = add i64 %215, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %213, !llvm.loop !135

251:                                              ; preds = %213
  %252 = sub nuw nsw i64 -32, %214
  br label %253

253:                                              ; preds = %251, %195
  %254 = phi i64 [ 0, %195 ], [ %252, %251 ]
  %255 = icmp eq i64 %205, 0
  br i1 %255, label %273, label %256

256:                                              ; preds = %253
  %257 = getelementptr i16, i16* %188, i64 -1
  %258 = getelementptr i16, i16* %189, i64 -1
  %259 = getelementptr inbounds i16, i16* %258, i64 %254
  %260 = getelementptr inbounds i16, i16* %257, i64 %254
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !130
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !130
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !133, !noalias !130
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !133, !noalias !130
  br label %273

273:                                              ; preds = %253, %256
  %274 = icmp eq i64 %25, %196
  br i1 %274, label %328, label %275

275:                                              ; preds = %273, %191, %187
  %276 = phi i64 [ %25, %191 ], [ %25, %187 ], [ %197, %273 ]
  %277 = phi i16* [ %188, %191 ], [ %188, %187 ], [ %199, %273 ]
  %278 = phi i16* [ %189, %191 ], [ %189, %187 ], [ %201, %273 ]
  %279 = add i64 %276, -1
  %280 = and i64 %276, 7
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %290, %282 ], [ %276, %275 ]
  %284 = phi i16* [ %288, %282 ], [ %277, %275 ]
  %285 = phi i16* [ %287, %282 ], [ %278, %275 ]
  %286 = phi i64 [ %291, %282 ], [ %280, %275 ]
  %287 = getelementptr inbounds i16, i16* %285, i64 -1
  %288 = getelementptr inbounds i16, i16* %284, i64 -1
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %283, -1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !136

293:                                              ; preds = %282, %275
  %294 = phi i64 [ %276, %275 ], [ %290, %282 ]
  %295 = phi i16* [ %277, %275 ], [ %288, %282 ]
  %296 = phi i16* [ %278, %275 ], [ %287, %282 ]
  %297 = icmp ult i64 %279, 7
  br i1 %297, label %328, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %326, %298 ], [ %294, %293 ]
  %300 = phi i16* [ %324, %298 ], [ %295, %293 ]
  %301 = phi i16* [ %323, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds i16, i16* %301, i64 -1
  %303 = getelementptr inbounds i16, i16* %300, i64 -1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %301, i64 -2
  %306 = getelementptr inbounds i16, i16* %300, i64 -2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %301, i64 -3
  %309 = getelementptr inbounds i16, i16* %300, i64 -3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %301, i64 -4
  %312 = getelementptr inbounds i16, i16* %300, i64 -4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %301, i64 -5
  %315 = getelementptr inbounds i16, i16* %300, i64 -5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %301, i64 -6
  %318 = getelementptr inbounds i16, i16* %300, i64 -6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %301, i64 -7
  %321 = getelementptr inbounds i16, i16* %300, i64 -7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %301, i64 -8
  %324 = getelementptr inbounds i16, i16* %300, i64 -8
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %299, -8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %298, !llvm.loop !137

328:                                              ; preds = %293, %298, %150, %155, %273, %130, %37, %185
  %329 = getelementptr inbounds i16, i16* %38, i64 %25
  store i16 0, i16* %329, align 2
  br label %1014

330:                                              ; preds = %23
  %331 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 9223372036854775807
  %339 = add nsw i64 %338, -1
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %339, %335 ], [ 10, %330 ]
  %342 = icmp ugt i64 %19, %341
  br i1 %342, label %658, label %343

343:                                              ; preds = %340
  br i1 %334, label %344, label %347

344:                                              ; preds = %343
  %345 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  br label %349

347:                                              ; preds = %343
  %348 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %349

349:                                              ; preds = %347, %344
  %350 = phi i16* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i64 %19, 0
  br i1 %351, label %650, label %352

352:                                              ; preds = %349
  %353 = icmp ult i16* %350, %1
  br i1 %353, label %354, label %507

354:                                              ; preds = %352
  store i16 %3, i16* %350, align 2
  %355 = getelementptr inbounds i16, i16* %1, i64 1
  %356 = icmp eq i64 %17, 0
  br i1 %356, label %650, label %357

357:                                              ; preds = %354
  %358 = icmp ult i64 %17, 16
  br i1 %358, label %454, label %359

359:                                              ; preds = %357
  %360 = getelementptr i16, i16* %350, i64 1
  %361 = getelementptr i16, i16* %350, i64 %19
  %362 = getelementptr i16, i16* %1, i64 %19
  %363 = icmp ult i16* %360, %362
  %364 = icmp ult i16* %355, %361
  %365 = and i1 %363, %364
  br i1 %365, label %454, label %366

366:                                              ; preds = %359
  %367 = and i64 %17, -16
  %368 = getelementptr i16, i16* %355, i64 %367
  %369 = sub i64 %17, %367
  %370 = getelementptr i16, i16* %350, i64 %367
  %371 = add i64 %367, -16
  %372 = lshr exact i64 %371, 4
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 3
  %375 = icmp ult i64 %371, 48
  br i1 %375, label %431, label %376

376:                                              ; preds = %366
  %377 = sub nsw i64 %373, %374
  %378 = getelementptr i16, i16* %350, i64 1
  %379 = getelementptr i16, i16* %350, i64 1
  %380 = getelementptr i16, i16* %350, i64 1
  %381 = getelementptr i16, i16* %350, i64 1
  br label %382

382:                                              ; preds = %382, %376
  %383 = phi i64 [ 0, %376 ], [ %428, %382 ]
  %384 = phi i64 [ %377, %376 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %355, i64 %383
  %386 = getelementptr inbounds i16, i16* %378, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !138
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !138
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !141, !noalias !138
  %393 = getelementptr inbounds i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !141, !noalias !138
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %355, i64 %395
  %397 = getelementptr inbounds i16, i16* %379, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !138
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !138
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !141, !noalias !138
  %404 = getelementptr inbounds i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !141, !noalias !138
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %355, i64 %406
  %408 = getelementptr inbounds i16, i16* %380, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !138
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !138
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !141, !noalias !138
  %415 = getelementptr inbounds i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !141, !noalias !138
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %355, i64 %417
  %419 = getelementptr inbounds i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !138
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !138
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !141, !noalias !138
  %426 = getelementptr inbounds i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !141, !noalias !138
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !143

431:                                              ; preds = %382, %366
  %432 = phi i64 [ 0, %366 ], [ %428, %382 ]
  %433 = icmp eq i64 %374, 0
  br i1 %433, label %452, label %434

434:                                              ; preds = %431
  %435 = getelementptr i16, i16* %350, i64 1
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ %432, %434 ], [ %449, %436 ]
  %438 = phi i64 [ %374, %434 ], [ %450, %436 ]
  %439 = getelementptr i16, i16* %355, i64 %437
  %440 = getelementptr inbounds i16, i16* %435, i64 %437
  %441 = bitcast i16* %439 to <8 x i16>*
  %442 = load <8 x i16>, <8 x i16>* %441, align 2, !alias.scope !138
  %443 = getelementptr i16, i16* %439, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !138
  %446 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %442, <8 x i16>* %446, align 2, !alias.scope !141, !noalias !138
  %447 = getelementptr inbounds i16, i16* %440, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %448, align 2, !alias.scope !141, !noalias !138
  %449 = add i64 %437, 16
  %450 = add i64 %438, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %436, !llvm.loop !144

452:                                              ; preds = %436, %431
  %453 = icmp eq i64 %17, %367
  br i1 %453, label %650, label %454

454:                                              ; preds = %452, %359, %357
  %455 = phi i16* [ %355, %359 ], [ %355, %357 ], [ %368, %452 ]
  %456 = phi i64 [ %17, %359 ], [ %17, %357 ], [ %369, %452 ]
  %457 = phi i16* [ %350, %359 ], [ %350, %357 ], [ %370, %452 ]
  %458 = add i64 %456, -1
  %459 = and i64 %456, 7
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %454, %461
  %462 = phi i16* [ %469, %461 ], [ %455, %454 ]
  %463 = phi i64 [ %468, %461 ], [ %456, %454 ]
  %464 = phi i16* [ %466, %461 ], [ %457, %454 ]
  %465 = phi i64 [ %470, %461 ], [ %459, %454 ]
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = load i16, i16* %462, align 2
  store i16 %467, i16* %466, align 2
  %468 = add i64 %463, -1
  %469 = getelementptr inbounds i16, i16* %462, i64 1
  %470 = add i64 %465, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %461, !llvm.loop !145

472:                                              ; preds = %461, %454
  %473 = phi i16* [ %455, %454 ], [ %469, %461 ]
  %474 = phi i64 [ %456, %454 ], [ %468, %461 ]
  %475 = phi i16* [ %457, %454 ], [ %466, %461 ]
  %476 = icmp ult i64 %458, 7
  br i1 %476, label %650, label %477

477:                                              ; preds = %472, %477
  %478 = phi i16* [ %505, %477 ], [ %473, %472 ]
  %479 = phi i64 [ %504, %477 ], [ %474, %472 ]
  %480 = phi i16* [ %502, %477 ], [ %475, %472 ]
  %481 = getelementptr inbounds i16, i16* %480, i64 1
  %482 = load i16, i16* %478, align 2
  store i16 %482, i16* %481, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 1
  %484 = getelementptr inbounds i16, i16* %480, i64 2
  %485 = load i16, i16* %483, align 2
  store i16 %485, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 2
  %487 = getelementptr inbounds i16, i16* %480, i64 3
  %488 = load i16, i16* %486, align 2
  store i16 %488, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 3
  %490 = getelementptr inbounds i16, i16* %480, i64 4
  %491 = load i16, i16* %489, align 2
  store i16 %491, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 4
  %493 = getelementptr inbounds i16, i16* %480, i64 5
  %494 = load i16, i16* %492, align 2
  store i16 %494, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 5
  %496 = getelementptr inbounds i16, i16* %480, i64 6
  %497 = load i16, i16* %495, align 2
  store i16 %497, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 6
  %499 = getelementptr inbounds i16, i16* %480, i64 7
  %500 = load i16, i16* %498, align 2
  store i16 %500, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %478, i64 7
  %502 = getelementptr inbounds i16, i16* %480, i64 8
  %503 = load i16, i16* %501, align 2
  store i16 %503, i16* %502, align 2
  %504 = add i64 %479, -8
  %505 = getelementptr inbounds i16, i16* %478, i64 8
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %650, label %477, !llvm.loop !146

507:                                              ; preds = %352
  %508 = icmp ugt i16* %350, %1
  br i1 %508, label %509, label %650

509:                                              ; preds = %507
  %510 = getelementptr inbounds i16, i16* %1, i64 %19
  %511 = getelementptr inbounds i16, i16* %350, i64 %19
  %512 = icmp ult i64 %19, 16
  br i1 %512, label %597, label %513

513:                                              ; preds = %509
  %514 = icmp ult i16* %350, %510
  %515 = icmp ugt i16* %511, %1
  %516 = and i1 %514, %515
  br i1 %516, label %597, label %517

517:                                              ; preds = %513
  %518 = and i64 %19, -16
  %519 = sub i64 %19, %518
  %520 = sub i64 0, %518
  %521 = getelementptr i16, i16* %510, i64 %520
  %522 = sub i64 0, %518
  %523 = getelementptr i16, i16* %511, i64 %522
  %524 = add i64 %518, -16
  %525 = lshr exact i64 %524, 4
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %575, label %529

529:                                              ; preds = %517
  %530 = sub nuw nsw i64 %526, %527
  %531 = getelementptr i16, i16* %1, i64 %17
  %532 = getelementptr i16, i16* %350, i64 %17
  %533 = getelementptr i16, i16* %1, i64 %17
  %534 = getelementptr i16, i16* %350, i64 %17
  br label %535

535:                                              ; preds = %535, %529
  %536 = phi i64 [ 0, %529 ], [ %570, %535 ]
  %537 = phi i64 [ %530, %529 ], [ %571, %535 ]
  %538 = sub i64 0, %536
  %539 = sub i64 0, %536
  %540 = getelementptr inbounds i16, i16* %532, i64 %539
  %541 = getelementptr inbounds i16, i16* %531, i64 %538
  %542 = getelementptr inbounds i16, i16* %541, i64 -7
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !147
  %545 = getelementptr inbounds i16, i16* %541, i64 -8
  %546 = getelementptr inbounds i16, i16* %545, i64 -7
  %547 = bitcast i16* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !147
  %549 = getelementptr inbounds i16, i16* %540, i64 -7
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %550, align 2, !alias.scope !150, !noalias !147
  %551 = getelementptr inbounds i16, i16* %540, i64 -8
  %552 = getelementptr inbounds i16, i16* %551, i64 -7
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %548, <8 x i16>* %553, align 2, !alias.scope !150, !noalias !147
  %554 = sub nuw nsw i64 -16, %536
  %555 = sub nuw nsw i64 -16, %536
  %556 = getelementptr inbounds i16, i16* %534, i64 %555
  %557 = getelementptr inbounds i16, i16* %533, i64 %554
  %558 = getelementptr inbounds i16, i16* %557, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !147
  %561 = getelementptr inbounds i16, i16* %557, i64 -8
  %562 = getelementptr inbounds i16, i16* %561, i64 -7
  %563 = bitcast i16* %562 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !147
  %565 = getelementptr inbounds i16, i16* %556, i64 -7
  %566 = bitcast i16* %565 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %566, align 2, !alias.scope !150, !noalias !147
  %567 = getelementptr inbounds i16, i16* %556, i64 -8
  %568 = getelementptr inbounds i16, i16* %567, i64 -7
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !alias.scope !150, !noalias !147
  %570 = add i64 %536, 32
  %571 = add i64 %537, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %535, !llvm.loop !152

573:                                              ; preds = %535
  %574 = sub nuw nsw i64 -32, %536
  br label %575

575:                                              ; preds = %573, %517
  %576 = phi i64 [ 0, %517 ], [ %574, %573 ]
  %577 = icmp eq i64 %527, 0
  br i1 %577, label %595, label %578

578:                                              ; preds = %575
  %579 = getelementptr i16, i16* %1, i64 %17
  %580 = getelementptr i16, i16* %350, i64 %17
  %581 = getelementptr inbounds i16, i16* %580, i64 %576
  %582 = getelementptr inbounds i16, i16* %579, i64 %576
  %583 = getelementptr inbounds i16, i16* %582, i64 -7
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !147
  %586 = getelementptr inbounds i16, i16* %582, i64 -8
  %587 = getelementptr inbounds i16, i16* %586, i64 -7
  %588 = bitcast i16* %587 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !147
  %590 = getelementptr inbounds i16, i16* %581, i64 -7
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %591, align 2, !alias.scope !150, !noalias !147
  %592 = getelementptr inbounds i16, i16* %581, i64 -8
  %593 = getelementptr inbounds i16, i16* %592, i64 -7
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %594, align 2, !alias.scope !150, !noalias !147
  br label %595

595:                                              ; preds = %575, %578
  %596 = icmp eq i64 %19, %518
  br i1 %596, label %650, label %597

597:                                              ; preds = %595, %513, %509
  %598 = phi i64 [ %19, %513 ], [ %19, %509 ], [ %519, %595 ]
  %599 = phi i16* [ %510, %513 ], [ %510, %509 ], [ %521, %595 ]
  %600 = phi i16* [ %511, %513 ], [ %511, %509 ], [ %523, %595 ]
  %601 = add i64 %598, -1
  %602 = and i64 %598, 7
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %597, %604
  %605 = phi i64 [ %612, %604 ], [ %598, %597 ]
  %606 = phi i16* [ %610, %604 ], [ %599, %597 ]
  %607 = phi i16* [ %609, %604 ], [ %600, %597 ]
  %608 = phi i64 [ %613, %604 ], [ %602, %597 ]
  %609 = getelementptr inbounds i16, i16* %607, i64 -1
  %610 = getelementptr inbounds i16, i16* %606, i64 -1
  %611 = load i16, i16* %610, align 2
  store i16 %611, i16* %609, align 2
  %612 = add i64 %605, -1
  %613 = add i64 %608, -1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %604, !llvm.loop !153

615:                                              ; preds = %604, %597
  %616 = phi i64 [ %598, %597 ], [ %612, %604 ]
  %617 = phi i16* [ %599, %597 ], [ %610, %604 ]
  %618 = phi i16* [ %600, %597 ], [ %609, %604 ]
  %619 = icmp ult i64 %601, 7
  br i1 %619, label %650, label %620

620:                                              ; preds = %615, %620
  %621 = phi i64 [ %648, %620 ], [ %616, %615 ]
  %622 = phi i16* [ %646, %620 ], [ %617, %615 ]
  %623 = phi i16* [ %645, %620 ], [ %618, %615 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 -1
  %625 = getelementptr inbounds i16, i16* %622, i64 -1
  %626 = load i16, i16* %625, align 2
  store i16 %626, i16* %624, align 2
  %627 = getelementptr inbounds i16, i16* %623, i64 -2
  %628 = getelementptr inbounds i16, i16* %622, i64 -2
  %629 = load i16, i16* %628, align 2
  store i16 %629, i16* %627, align 2
  %630 = getelementptr inbounds i16, i16* %623, i64 -3
  %631 = getelementptr inbounds i16, i16* %622, i64 -3
  %632 = load i16, i16* %631, align 2
  store i16 %632, i16* %630, align 2
  %633 = getelementptr inbounds i16, i16* %623, i64 -4
  %634 = getelementptr inbounds i16, i16* %622, i64 -4
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %623, i64 -5
  %637 = getelementptr inbounds i16, i16* %622, i64 -5
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %623, i64 -6
  %640 = getelementptr inbounds i16, i16* %622, i64 -6
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %623, i64 -7
  %643 = getelementptr inbounds i16, i16* %622, i64 -7
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %623, i64 -8
  %646 = getelementptr inbounds i16, i16* %622, i64 -8
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = add i64 %621, -8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %620, !llvm.loop !154

650:                                              ; preds = %615, %620, %472, %477, %595, %354, %452, %507, %349
  %651 = getelementptr inbounds i16, i16* %350, i64 %19
  store i16 0, i16* %651, align 2
  %652 = load i8, i8* %332, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %655, align 8
  br label %1014

656:                                              ; preds = %650
  %657 = trunc i64 %19 to i8
  store i8 %657, i8* %332, align 1
  br label %1014

658:                                              ; preds = %340
  br i1 %334, label %659, label %662

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  br label %664

662:                                              ; preds = %658
  %663 = zext i8 %333 to i64
  br label %664

664:                                              ; preds = %662, %659
  %665 = phi i64 [ %661, %659 ], [ %663, %662 ]
  %666 = sub i64 %19, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %341, i64 %666, i64 %665, i64 0, i64 %665, i64 %19, i16* %1) #13
  br label %1014

667:                                              ; preds = %2
  br i1 %5, label %675, label %668

668:                                              ; preds = %667, %668
  %669 = phi i64 [ %671, %668 ], [ 0, %667 ]
  %670 = phi i16* [ %672, %668 ], [ %1, %667 ]
  %671 = add i64 %669, 1
  %672 = getelementptr inbounds i16, i16* %670, i64 1
  %673 = load i16, i16* %672, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %675, label %668

675:                                              ; preds = %668, %667
  %676 = phi i64 [ 0, %667 ], [ %671, %668 ]
  %677 = bitcast %"class.std::__1::basic_string.44"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %686

681:                                              ; preds = %675
  %682 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = and i64 %683, 9223372036854775807
  %685 = add nsw i64 %684, -1
  br label %686

686:                                              ; preds = %681, %675
  %687 = phi i64 [ %685, %681 ], [ 10, %675 ]
  %688 = icmp ugt i64 %676, %687
  br i1 %688, label %1005, label %689

689:                                              ; preds = %686
  br i1 %680, label %690, label %693

690:                                              ; preds = %689
  %691 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i16*, i16** %691, align 8
  br label %695

693:                                              ; preds = %689
  %694 = bitcast %"class.std::__1::basic_string.44"* %0 to i16*
  br label %695

695:                                              ; preds = %693, %690
  %696 = phi i16* [ %692, %690 ], [ %694, %693 ]
  %697 = icmp eq i64 %676, 0
  br i1 %697, label %997, label %698

698:                                              ; preds = %695
  %699 = icmp ult i16* %696, %1
  br i1 %699, label %700, label %854

700:                                              ; preds = %698
  store i16 %3, i16* %696, align 2
  %701 = add i64 %676, -1
  %702 = getelementptr inbounds i16, i16* %1, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %997, label %704

704:                                              ; preds = %700
  %705 = icmp ult i64 %701, 16
  br i1 %705, label %801, label %706

706:                                              ; preds = %704
  %707 = getelementptr i16, i16* %696, i64 1
  %708 = getelementptr i16, i16* %696, i64 %676
  %709 = getelementptr i16, i16* %1, i64 %676
  %710 = icmp ult i16* %707, %709
  %711 = icmp ult i16* %702, %708
  %712 = and i1 %710, %711
  br i1 %712, label %801, label %713

713:                                              ; preds = %706
  %714 = and i64 %701, -16
  %715 = getelementptr i16, i16* %702, i64 %714
  %716 = sub i64 %701, %714
  %717 = getelementptr i16, i16* %696, i64 %714
  %718 = add i64 %714, -16
  %719 = lshr exact i64 %718, 4
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 48
  br i1 %722, label %778, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  %725 = getelementptr i16, i16* %696, i64 1
  %726 = getelementptr i16, i16* %696, i64 1
  %727 = getelementptr i16, i16* %696, i64 1
  %728 = getelementptr i16, i16* %696, i64 1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %775, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %702, i64 %730
  %733 = getelementptr inbounds i16, i16* %725, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !155
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !155
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !158, !noalias !155
  %740 = getelementptr inbounds i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !158, !noalias !155
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %702, i64 %742
  %744 = getelementptr inbounds i16, i16* %726, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !155
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !155
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !158, !noalias !155
  %751 = getelementptr inbounds i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !158, !noalias !155
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %702, i64 %753
  %755 = getelementptr inbounds i16, i16* %727, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !155
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !155
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !158, !noalias !155
  %762 = getelementptr inbounds i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !158, !noalias !155
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %702, i64 %764
  %766 = getelementptr inbounds i16, i16* %728, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !155
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !155
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !158, !noalias !155
  %773 = getelementptr inbounds i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !158, !noalias !155
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !160

778:                                              ; preds = %729, %713
  %779 = phi i64 [ 0, %713 ], [ %775, %729 ]
  %780 = icmp eq i64 %721, 0
  br i1 %780, label %799, label %781

781:                                              ; preds = %778
  %782 = getelementptr i16, i16* %696, i64 1
  br label %783

783:                                              ; preds = %783, %781
  %784 = phi i64 [ %779, %781 ], [ %796, %783 ]
  %785 = phi i64 [ %721, %781 ], [ %797, %783 ]
  %786 = getelementptr i16, i16* %702, i64 %784
  %787 = getelementptr inbounds i16, i16* %782, i64 %784
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !155
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !155
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !158, !noalias !155
  %794 = getelementptr inbounds i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !158, !noalias !155
  %796 = add i64 %784, 16
  %797 = add i64 %785, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %783, !llvm.loop !161

799:                                              ; preds = %783, %778
  %800 = icmp eq i64 %701, %714
  br i1 %800, label %997, label %801

801:                                              ; preds = %799, %706, %704
  %802 = phi i16* [ %702, %706 ], [ %702, %704 ], [ %715, %799 ]
  %803 = phi i64 [ %701, %706 ], [ %701, %704 ], [ %716, %799 ]
  %804 = phi i16* [ %696, %706 ], [ %696, %704 ], [ %717, %799 ]
  %805 = add i64 %803, -1
  %806 = and i64 %803, 7
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %801, %808
  %809 = phi i16* [ %816, %808 ], [ %802, %801 ]
  %810 = phi i64 [ %815, %808 ], [ %803, %801 ]
  %811 = phi i16* [ %813, %808 ], [ %804, %801 ]
  %812 = phi i64 [ %817, %808 ], [ %806, %801 ]
  %813 = getelementptr inbounds i16, i16* %811, i64 1
  %814 = load i16, i16* %809, align 2
  store i16 %814, i16* %813, align 2
  %815 = add i64 %810, -1
  %816 = getelementptr inbounds i16, i16* %809, i64 1
  %817 = add i64 %812, -1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %808, !llvm.loop !162

819:                                              ; preds = %808, %801
  %820 = phi i16* [ %802, %801 ], [ %816, %808 ]
  %821 = phi i64 [ %803, %801 ], [ %815, %808 ]
  %822 = phi i16* [ %804, %801 ], [ %813, %808 ]
  %823 = icmp ult i64 %805, 7
  br i1 %823, label %997, label %824

824:                                              ; preds = %819, %824
  %825 = phi i16* [ %852, %824 ], [ %820, %819 ]
  %826 = phi i64 [ %851, %824 ], [ %821, %819 ]
  %827 = phi i16* [ %849, %824 ], [ %822, %819 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 1
  %829 = load i16, i16* %825, align 2
  store i16 %829, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 1
  %831 = getelementptr inbounds i16, i16* %827, i64 2
  %832 = load i16, i16* %830, align 2
  store i16 %832, i16* %831, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 2
  %834 = getelementptr inbounds i16, i16* %827, i64 3
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %834, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 3
  %837 = getelementptr inbounds i16, i16* %827, i64 4
  %838 = load i16, i16* %836, align 2
  store i16 %838, i16* %837, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 4
  %840 = getelementptr inbounds i16, i16* %827, i64 5
  %841 = load i16, i16* %839, align 2
  store i16 %841, i16* %840, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 5
  %843 = getelementptr inbounds i16, i16* %827, i64 6
  %844 = load i16, i16* %842, align 2
  store i16 %844, i16* %843, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 6
  %846 = getelementptr inbounds i16, i16* %827, i64 7
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %825, i64 7
  %849 = getelementptr inbounds i16, i16* %827, i64 8
  %850 = load i16, i16* %848, align 2
  store i16 %850, i16* %849, align 2
  %851 = add i64 %826, -8
  %852 = getelementptr inbounds i16, i16* %825, i64 8
  %853 = icmp eq i64 %851, 0
  br i1 %853, label %997, label %824, !llvm.loop !163

854:                                              ; preds = %698
  %855 = icmp ugt i16* %696, %1
  br i1 %855, label %856, label %997

856:                                              ; preds = %854
  %857 = getelementptr inbounds i16, i16* %1, i64 %676
  %858 = getelementptr inbounds i16, i16* %696, i64 %676
  %859 = icmp ult i64 %676, 16
  br i1 %859, label %944, label %860

860:                                              ; preds = %856
  %861 = icmp ult i16* %696, %857
  %862 = icmp ugt i16* %858, %1
  %863 = and i1 %861, %862
  br i1 %863, label %944, label %864

864:                                              ; preds = %860
  %865 = and i64 %676, -16
  %866 = sub i64 %676, %865
  %867 = sub i64 0, %865
  %868 = getelementptr i16, i16* %857, i64 %867
  %869 = sub i64 0, %865
  %870 = getelementptr i16, i16* %858, i64 %869
  %871 = add i64 %865, -16
  %872 = lshr exact i64 %871, 4
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %922, label %876

876:                                              ; preds = %864
  %877 = sub nuw nsw i64 %873, %874
  %878 = getelementptr i16, i16* %857, i64 -1
  %879 = getelementptr i16, i16* %858, i64 -1
  %880 = getelementptr i16, i16* %857, i64 -1
  %881 = getelementptr i16, i16* %858, i64 -1
  br label %882

882:                                              ; preds = %882, %876
  %883 = phi i64 [ 0, %876 ], [ %917, %882 ]
  %884 = phi i64 [ %877, %876 ], [ %918, %882 ]
  %885 = sub i64 0, %883
  %886 = sub i64 0, %883
  %887 = getelementptr inbounds i16, i16* %879, i64 %886
  %888 = getelementptr inbounds i16, i16* %878, i64 %885
  %889 = getelementptr inbounds i16, i16* %888, i64 -7
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !164
  %892 = getelementptr inbounds i16, i16* %888, i64 -8
  %893 = getelementptr inbounds i16, i16* %892, i64 -7
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !164
  %896 = getelementptr inbounds i16, i16* %887, i64 -7
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %897, align 2, !alias.scope !167, !noalias !164
  %898 = getelementptr inbounds i16, i16* %887, i64 -8
  %899 = getelementptr inbounds i16, i16* %898, i64 -7
  %900 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %900, align 2, !alias.scope !167, !noalias !164
  %901 = sub nuw nsw i64 -16, %883
  %902 = sub nuw nsw i64 -16, %883
  %903 = getelementptr inbounds i16, i16* %881, i64 %902
  %904 = getelementptr inbounds i16, i16* %880, i64 %901
  %905 = getelementptr inbounds i16, i16* %904, i64 -7
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !164
  %908 = getelementptr inbounds i16, i16* %904, i64 -8
  %909 = getelementptr inbounds i16, i16* %908, i64 -7
  %910 = bitcast i16* %909 to <8 x i16>*
  %911 = load <8 x i16>, <8 x i16>* %910, align 2, !alias.scope !164
  %912 = getelementptr inbounds i16, i16* %903, i64 -7
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %913, align 2, !alias.scope !167, !noalias !164
  %914 = getelementptr inbounds i16, i16* %903, i64 -8
  %915 = getelementptr inbounds i16, i16* %914, i64 -7
  %916 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %911, <8 x i16>* %916, align 2, !alias.scope !167, !noalias !164
  %917 = add i64 %883, 32
  %918 = add i64 %884, -2
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %882, !llvm.loop !169

920:                                              ; preds = %882
  %921 = sub nuw nsw i64 -32, %883
  br label %922

922:                                              ; preds = %920, %864
  %923 = phi i64 [ 0, %864 ], [ %921, %920 ]
  %924 = icmp eq i64 %874, 0
  br i1 %924, label %942, label %925

925:                                              ; preds = %922
  %926 = getelementptr i16, i16* %857, i64 -1
  %927 = getelementptr i16, i16* %858, i64 -1
  %928 = getelementptr inbounds i16, i16* %927, i64 %923
  %929 = getelementptr inbounds i16, i16* %926, i64 %923
  %930 = getelementptr inbounds i16, i16* %929, i64 -7
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !164
  %933 = getelementptr inbounds i16, i16* %929, i64 -8
  %934 = getelementptr inbounds i16, i16* %933, i64 -7
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !164
  %937 = getelementptr inbounds i16, i16* %928, i64 -7
  %938 = bitcast i16* %937 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %938, align 2, !alias.scope !167, !noalias !164
  %939 = getelementptr inbounds i16, i16* %928, i64 -8
  %940 = getelementptr inbounds i16, i16* %939, i64 -7
  %941 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %941, align 2, !alias.scope !167, !noalias !164
  br label %942

942:                                              ; preds = %922, %925
  %943 = icmp eq i64 %676, %865
  br i1 %943, label %997, label %944

944:                                              ; preds = %942, %860, %856
  %945 = phi i64 [ %676, %860 ], [ %676, %856 ], [ %866, %942 ]
  %946 = phi i16* [ %857, %860 ], [ %857, %856 ], [ %868, %942 ]
  %947 = phi i16* [ %858, %860 ], [ %858, %856 ], [ %870, %942 ]
  %948 = add i64 %945, -1
  %949 = and i64 %945, 7
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %962, label %951

951:                                              ; preds = %944, %951
  %952 = phi i64 [ %959, %951 ], [ %945, %944 ]
  %953 = phi i16* [ %957, %951 ], [ %946, %944 ]
  %954 = phi i16* [ %956, %951 ], [ %947, %944 ]
  %955 = phi i64 [ %960, %951 ], [ %949, %944 ]
  %956 = getelementptr inbounds i16, i16* %954, i64 -1
  %957 = getelementptr inbounds i16, i16* %953, i64 -1
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %952, -1
  %960 = add i64 %955, -1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %951, !llvm.loop !170

962:                                              ; preds = %951, %944
  %963 = phi i64 [ %945, %944 ], [ %959, %951 ]
  %964 = phi i16* [ %946, %944 ], [ %957, %951 ]
  %965 = phi i16* [ %947, %944 ], [ %956, %951 ]
  %966 = icmp ult i64 %948, 7
  br i1 %966, label %997, label %967

967:                                              ; preds = %962, %967
  %968 = phi i64 [ %995, %967 ], [ %963, %962 ]
  %969 = phi i16* [ %993, %967 ], [ %964, %962 ]
  %970 = phi i16* [ %992, %967 ], [ %965, %962 ]
  %971 = getelementptr inbounds i16, i16* %970, i64 -1
  %972 = getelementptr inbounds i16, i16* %969, i64 -1
  %973 = load i16, i16* %972, align 2
  store i16 %973, i16* %971, align 2
  %974 = getelementptr inbounds i16, i16* %970, i64 -2
  %975 = getelementptr inbounds i16, i16* %969, i64 -2
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %970, i64 -3
  %978 = getelementptr inbounds i16, i16* %969, i64 -3
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %970, i64 -4
  %981 = getelementptr inbounds i16, i16* %969, i64 -4
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %970, i64 -5
  %984 = getelementptr inbounds i16, i16* %969, i64 -5
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %970, i64 -6
  %987 = getelementptr inbounds i16, i16* %969, i64 -6
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %970, i64 -7
  %990 = getelementptr inbounds i16, i16* %969, i64 -7
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %970, i64 -8
  %993 = getelementptr inbounds i16, i16* %969, i64 -8
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %968, -8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %967, !llvm.loop !171

997:                                              ; preds = %962, %967, %819, %824, %942, %700, %799, %854, %695
  %998 = getelementptr inbounds i16, i16* %696, i64 %676
  store i16 0, i16* %998, align 2
  %999 = load i8, i8* %678, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1003

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %676, i64* %1002, align 8
  br label %1014

1003:                                             ; preds = %997
  %1004 = trunc i64 %676 to i8
  store i8 %1004, i8* %678, align 1
  br label %1014

1005:                                             ; preds = %686
  br i1 %680, label %1006, label %1009

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  br label %1011

1009:                                             ; preds = %1005
  %1010 = zext i8 %679 to i64
  br label %1011

1011:                                             ; preds = %1009, %1006
  %1012 = phi i64 [ %1008, %1006 ], [ %1010, %1009 ]
  %1013 = sub i64 %676, %687
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.44"* %0, i64 %687, i64 %1013, i64 %1012, i64 0, i64 %1012, i64 %676, i16* %1) #13
  br label %1014

1014:                                             ; preds = %1011, %1003, %1001, %664, %656, %654, %328
  ret %"class.std::__1::basic_string.44"* %0
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i16(i16) #9

declare %"class.std::__1::vector.36"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZN20json_schema_compiler4util12PopulateItemERKN4base5ValueEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPNS6_IDsNS7_IDsEENS9_IDsEEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #2

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp sgt i64 %1, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %14 = bitcast %"class.base::Value"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = bitcast %"class.base::Value"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 5
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp slt i64 %20, %1
  br i1 %22, label %24, label %23

23:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %12, align 8
  br label %56

24:                                               ; preds = %10
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %20) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %25, i8* %26) #13
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %12, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %56, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %5) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %56

33:                                               ; preds = %2
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = sub nsw i64 0, %1
  %37 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 5
  %44 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp slt i64 %43, %36
  br i1 %45, label %47, label %46

46:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %35, align 8
  br label %56

47:                                               ; preds = %33
  %48 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %36) #13
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %43) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0), i8* %48, i8* %49) #13
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %35, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %7) #13
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #13
  br label %56

56:                                               ; preds = %53, %47, %46, %30, %24, %23
  %57 = phi i8* [ %11, %23 ], [ %11, %24 ], [ %11, %30 ], [ %34, %46 ], [ %34, %47 ], [ %34, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %59 = load %"class.base::Value"*, %"class.base::Value"** %58, align 8
  %60 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 %1
  store %"class.base::Value"* %60, %"class.base::Value"** %58, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #2

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #2

declare void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"*) local_unnamed_addr #2

declare void @_ZN20json_schema_compiler4util13AddItemToListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4base9ListValueE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.base::ListValue"*) local_unnamed_addr #2

declare void @_ZN4base5ValueC1Eb(%"class.base::Value"*, i1 zeroext) unnamed_addr #2

declare dereferenceable(32) %"class.base::ListValue"* @_ZN4base5Value11AsListValueERKS0_(%"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN20json_schema_compiler19manifest_parse_util19ParseFromDictionaryERKN4base15DictionaryValueENS1_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPbPNS6_12basic_stringIDsNS7_IDsEENS6_9allocatorIDsEEEEPNS6_6vectorIS9_NSD_IS9_EEEE(%"class.base::DictionaryValue"* dereferenceable(32), i8*, i64, i8*, %"class.std::__1::basic_string.44"*, %"class.std::__1::vector.70"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN20json_schema_compiler4util21PopulateArrayFromListIN10extensions3api24web_accessible_resources21WebAccessibleResourceEEEbRKN4base9ListValueEPNSt3__16vectorIT_NSA_9allocatorISC_EEEEPNSA_12basic_stringIDsNSA_11char_traitsIDsEENSD_IDsEEEE(%"class.base::ListValue"* dereferenceable(32), %"class.std::__1::vector.77"*, %"class.std::__1::basic_string.44"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", align 8
  %8 = alloca %"class.std::__1::basic_string.44", align 8
  %9 = alloca %"class.std::__1::basic_string.44", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %1, i64 0, i32 0, i32 0
  %13 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %1, i64 0, i32 0, i32 1
  %15 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %14, align 8
  %16 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %15, %13
  br i1 %16, label %21, label %17

17:                                               ; preds = %3, %17
  %18 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %19, %17 ], [ %15, %3 ]
  %19 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %18, i64 -1
  tail call void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %19) #13
  %20 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %19, %13
  br i1 %20, label %21, label %17

21:                                               ; preds = %17, %3
  store %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %13, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %14, align 8
  %22 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %7, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 48, i1 false) #13
  %25 = bitcast %"class.std::__1::basic_string.44"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string.44", %"class.std::__1::basic_string.44"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #13
  %28 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %0, i64 0, i32 0
  %29 = tail call %"class.std::__1::vector.36"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %28) #13
  %30 = icmp eq %"class.std::__1::vector.36"* %29, null
  %31 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %29, i64 0, i32 0, i32 1
  %32 = bitcast %"class.base::Value"** %31 to i64*
  %33 = bitcast %"class.std::__1::vector.36"* %29 to i64*
  %34 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  %35 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  %36 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %29, i64 0, i32 0, i32 0
  %37 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %4 to i8*
  %38 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %7 to i64*
  %40 = bitcast %"class.std::__1::basic_string"** %23 to i64*
  %41 = bitcast %"class.std::__1::basic_string"** %24 to i64*
  %42 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %7, i64 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  %45 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %7, i64 0, i32 2
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  %48 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %7, i64 0, i32 3
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr.9"* %48 to i64*
  %51 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %14 to i64*
  br label %52

52:                                               ; preds = %156, %21
  %53 = phi i64 [ 0, %21 ], [ %157, %156 ]
  br i1 %30, label %59, label %54

54:                                               ; preds = %52
  %55 = load i64, i64* %32, align 8
  %56 = load i64, i64* %33, align 8
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  br label %59

59:                                               ; preds = %52, %54
  %60 = phi i64 [ %58, %54 ], [ 0, %52 ]
  %61 = icmp ult i64 %53, %60
  br i1 %61, label %62, label %159

62:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #13
  br i1 %30, label %69, label %63

63:                                               ; preds = %62
  %64 = load %"class.base::Value"*, %"class.base::Value"** %36, align 8
  %65 = load i64, i64* %32, align 8
  %66 = ptrtoint %"class.base::Value"* %64 to i64
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 5
  br label %69

69:                                               ; preds = %62, %63
  %70 = phi %"class.base::Value"* [ %64, %63 ], [ null, %62 ]
  %71 = phi i64 [ %68, %63 ], [ 0, %62 ]
  %72 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %70, i64 %71
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::Value"* %70, %"class.base::Value"* %70, %"class.base::Value"* %72) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %35, i64 24, i1 false) #13
  %73 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %5, i64 %53) #13
  %74 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #13
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 48, i1 false) #13
  %75 = call zeroext i1 @_ZN10extensions3api24web_accessible_resources21WebAccessibleResource8PopulateERKN4base5ValueEPS2_PNSt3__112basic_stringIDsNS8_11char_traitsIDsEENS8_9allocatorIDsEEEE(%"class.base::Value"* dereferenceable(32) %74, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull %4, %"class.std::__1::basic_string.44"* nonnull %8) #13
  br i1 %75, label %129, label %76

76:                                               ; preds = %69
  call void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #13
  %77 = bitcast %"class.std::__1::basic_string.44"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13
  %78 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #13
  %79 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #13
  %80 = bitcast %"class.std::__1::basic_string.44"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %80, i64 0, i32 1, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = load i16*, i16** %26, align 8
  %85 = bitcast %"class.std::__1::basic_string.44"* %8 to i16*
  %86 = select i1 %83, i16* %84, i16* %85
  %87 = load i64, i64* %27, align 8
  %88 = zext i8 %82 to i64
  %89 = select i1 %83, i64 %87, i64 %88
  call void @_ZN4base12UTF16ToASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %11, i16* %86, i64 %89) #13
  %90 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = select i1 %93, i8* %95, i8* %79
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0), i64 %53, i8* %96) #13
  %97 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = select i1 %100, i8* %102, i8* %78
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %99 to i64
  %107 = select i1 %100, i64 %105, i64 %106
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.44"* nonnull sret %9, i8* %103, i64 %107) #13
  %108 = bitcast %"class.std::__1::basic_string.44"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %76
  %113 = bitcast %"class.std::__1::basic_string.44"* %2 to i8**
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %112, %76
  %116 = bitcast %"class.std::__1::basic_string.44"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 8 %77, i64 24, i1 false) #13
  %117 = bitcast %"class.std::__1::basic_string.44"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %117, i64 0, i32 1, i32 1
  store i8 0, i8* %118, align 1
  %119 = bitcast %"class.std::__1::basic_string.44"* %9 to i16*
  store i16 0, i16* %119, align 8
  %120 = load i8, i8* %98, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %115
  %123 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %123) #12
  br label %124

124:                                              ; preds = %115, %122
  %125 = load i8, i8* %91, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %158

127:                                              ; preds = %124
  %128 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %128) #12
  br label %158

129:                                              ; preds = %69
  %130 = call dereferenceable(48) %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceaSEOS2_(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull %7, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull dereferenceable(48) %4) #13
  call void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #13
  %131 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %14, align 8
  %132 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %38, align 8
  %133 = icmp ult %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131, %132
  br i1 %133, label %134, label %155

134:                                              ; preds = %129
  %135 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #13
  %136 = load i64, i64* %39, align 8
  %137 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131 to i64*
  store i64 %136, i64* %137, align 8
  %138 = load i64, i64* %40, align 8
  %139 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131, i64 0, i32 0, i32 0, i32 1
  %140 = bitcast %"class.std::__1::basic_string"** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = load i64, i64* %41, align 8
  %142 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %143 = bitcast %"class.std::__1::basic_string"** %142 to i64*
  store i64 %141, i64* %143, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #13
  %144 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131, i64 0, i32 1
  %145 = load i64, i64* %44, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %43, align 8
  %146 = bitcast %"class.std::__1::unique_ptr"* %144 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131, i64 0, i32 2
  %148 = load i64, i64* %47, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %46, align 8
  %149 = bitcast %"class.std::__1::unique_ptr"* %147 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131, i64 0, i32 3
  %151 = load i64, i64* %50, align 8
  store i8* null, i8** %49, align 8
  %152 = bitcast %"class.std::__1::unique_ptr.9"* %150 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %131, i64 1
  %154 = ptrtoint %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %153 to i64
  store i64 %154, i64* %51, align 8
  br label %156

155:                                              ; preds = %129
  call void @_ZNSt3__16vectorIN10extensions3api24web_accessible_resources21WebAccessibleResourceENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.77"* %1, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull dereferenceable(48) %7) #13
  br label %156

156:                                              ; preds = %134, %155
  %157 = add nuw i64 %53, 1
  br label %52

158:                                              ; preds = %127, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13
  br label %161

159:                                              ; preds = %59
  %160 = bitcast %"class.std::__1::basic_string.44"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %161

161:                                              ; preds = %159, %158
  %162 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %160, %159 ], [ %80, %158 ]
  %163 = phi i1 [ true, %159 ], [ false, %158 ]
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %162, i64 0, i32 1, i32 1
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %161
  %168 = bitcast %"class.std::__1::basic_string.44"* %8 to i8**
  %169 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %161, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  call void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #13
  ret i1 %163
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions3api24web_accessible_resources21WebAccessibleResourceENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.77"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* dereferenceable(48)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.77"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.77"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %33, i64 %32
  %36 = ptrtoint %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %35 to i64
  %37 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  %38 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %33, i64 %9, i32 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.std::__1::basic_string"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %33, i64 %9, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.std::__1::basic_string"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #13
  %52 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %33, i64 %9, i32 1
  %53 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::unique_ptr"* %53 to i64*
  %56 = load i64, i64* %55, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %54, align 8
  %57 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %33, i64 %9, i32 2
  %59 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 2
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %60, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %33, i64 %9, i32 3
  %65 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %1, i64 0, i32 3
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.9"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store i8* null, i8** %66, align 8
  %69 = bitcast %"class.std::__1::unique_ptr.9"* %64 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %34, i64 1
  %71 = ptrtoint %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %70 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 0
  %73 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %72, align 8
  %74 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %3, align 8
  %75 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %74, %73
  br i1 %75, label %76, label %78

76:                                               ; preds = %31
  %77 = ptrtoint %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %73 to i64
  br label %120

78:                                               ; preds = %31, %78
  %79 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %81, %78 ], [ %34, %31 ]
  %80 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %82, %78 ], [ %74, %31 ]
  %81 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %79, i64 -1
  %82 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %80, i64 -1
  %83 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #13
  %84 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %81 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %80, i64 -1, i32 0, i32 0, i32 1
  %88 = bitcast %"class.std::__1::basic_string"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %79, i64 -1, i32 0, i32 0, i32 1
  %91 = bitcast %"class.std::__1::basic_string"** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %80, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast %"class.std::__1::basic_string"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %79, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast %"class.std::__1::basic_string"** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #13
  %98 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %79, i64 -1, i32 1
  %99 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %80, i64 -1, i32 1
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  %102 = load i64, i64* %101, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %100, align 8
  %103 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %79, i64 -1, i32 2
  %105 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %80, i64 -1, i32 2
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %79, i64 -1, i32 3
  %111 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %80, i64 -1, i32 3
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr.9"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  store i8* null, i8** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.9"* %110 to i64*
  store i64 %114, i64* %115, align 8
  %116 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %82, %73
  br i1 %116, label %117, label %78

117:                                              ; preds = %78
  %118 = load i64, i64* %6, align 8
  %119 = load %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*, %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"** %3, align 8
  br label %120

120:                                              ; preds = %76, %117
  %121 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %73, %76 ], [ %119, %117 ]
  %122 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %34, %76 ], [ %81, %117 ]
  %123 = phi i64 [ %77, %76 ], [ %118, %117 ]
  %124 = ptrtoint %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %122 to i64
  store i64 %124, i64* %6, align 8
  store i64 %71, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %125 = inttoptr i64 %123 to %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"*
  %126 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %121, %125
  br i1 %126, label %131, label %127

127:                                              ; preds = %120, %127
  %128 = phi %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* [ %129, %127 ], [ %121, %120 ]
  %129 = getelementptr inbounds %"struct.extensions::api::web_accessible_resources::WebAccessibleResource", %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %128, i64 -1
  tail call void @_ZN10extensions3api24web_accessible_resources21WebAccessibleResourceD2Ev(%"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %129) #13
  %130 = icmp eq %"struct.extensions::api::web_accessible_resources::WebAccessibleResource"* %129, %125
  br i1 %130, label %131, label %127

131:                                              ; preds = %127, %120
  %132 = icmp eq i64 %123, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = inttoptr i64 %123 to i8*
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %131, %133
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!17 = !{i8 0, i8 2}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.disable"}
!27 = distinct !{!27, !26}
!28 = distinct !{!28, !24}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !24}
!35 = distinct !{!35, !26}
!36 = distinct !{!36, !26}
!37 = distinct !{!37, !24}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !24}
!44 = distinct !{!44, !26}
!45 = distinct !{!45, !26}
!46 = distinct !{!46, !24}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !24}
!53 = distinct !{!53, !26}
!54 = distinct !{!54, !26}
!55 = distinct !{!55, !24}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !24}
!62 = distinct !{!62, !26}
!63 = distinct !{!63, !26}
!64 = distinct !{!64, !24}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !24}
!71 = distinct !{!71, !26}
!72 = distinct !{!72, !26}
!73 = distinct !{!73, !24}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !24}
!80 = distinct !{!80, !26}
!81 = distinct !{!81, !24}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !24}
!88 = distinct !{!88, !26}
!89 = distinct !{!89, !26}
!90 = distinct !{!90, !24}
!91 = !{!92}
!92 = distinct !{!92, !93}
!93 = distinct !{!93, !"LVerDomain"}
!94 = !{!95}
!95 = distinct !{!95, !93}
!96 = distinct !{!96, !24}
!97 = distinct !{!97, !26}
!98 = distinct !{!98, !24}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !24}
!105 = distinct !{!105, !26}
!106 = distinct !{!106, !26}
!107 = distinct !{!107, !24}
!108 = distinct !{!108, !24}
!109 = distinct !{!109, !26}
!110 = distinct !{!110, !111, !24}
!111 = !{!"llvm.loop.unroll.runtime.disable"}
!112 = !{!113}
!113 = distinct !{!113, !114}
!114 = distinct !{!114, !"LVerDomain"}
!115 = !{!116}
!116 = distinct !{!116, !114}
!117 = distinct !{!117, !24}
!118 = distinct !{!118, !26}
!119 = distinct !{!119, !26}
!120 = distinct !{!120, !24}
!121 = !{!122}
!122 = distinct !{!122, !123}
!123 = distinct !{!123, !"LVerDomain"}
!124 = !{!125}
!125 = distinct !{!125, !123}
!126 = distinct !{!126, !24}
!127 = distinct !{!127, !26}
!128 = distinct !{!128, !26}
!129 = distinct !{!129, !24}
!130 = !{!131}
!131 = distinct !{!131, !132}
!132 = distinct !{!132, !"LVerDomain"}
!133 = !{!134}
!134 = distinct !{!134, !132}
!135 = distinct !{!135, !24}
!136 = distinct !{!136, !26}
!137 = distinct !{!137, !24}
!138 = !{!139}
!139 = distinct !{!139, !140}
!140 = distinct !{!140, !"LVerDomain"}
!141 = !{!142}
!142 = distinct !{!142, !140}
!143 = distinct !{!143, !24}
!144 = distinct !{!144, !26}
!145 = distinct !{!145, !26}
!146 = distinct !{!146, !24}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !24}
!153 = distinct !{!153, !26}
!154 = distinct !{!154, !24}
!155 = !{!156}
!156 = distinct !{!156, !157}
!157 = distinct !{!157, !"LVerDomain"}
!158 = !{!159}
!159 = distinct !{!159, !157}
!160 = distinct !{!160, !24}
!161 = distinct !{!161, !26}
!162 = distinct !{!162, !26}
!163 = distinct !{!163, !24}
!164 = !{!165}
!165 = distinct !{!165, !166}
!166 = distinct !{!166, !"LVerDomain"}
!167 = !{!168}
!168 = distinct !{!168, !166}
!169 = distinct !{!169, !24}
!170 = distinct !{!170, !26}
!171 = distinct !{!171, !24}
