; ModuleID = '../../cc/paint/paint_image_builder.cc'
source_filename = "../../cc/paint/paint_image_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.7, %"class.gfx::Rect", i32, %class.sk_sp.9, %class.sk_sp.13, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr }
%class.sk_sp.7 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.9 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.10" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.13 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@_ZN2cc17PaintImageBuilderC1Ev = hidden unnamed_addr alias void (%"class.cc::PaintImageBuilder"*), void (%"class.cc::PaintImageBuilder"*)* @_ZN2cc17PaintImageBuilderC2Ev
@_ZN2cc17PaintImageBuilderC1ENS_10PaintImageEb = hidden unnamed_addr alias void (%"class.cc::PaintImageBuilder"*, %"class.cc::PaintImage"*, i1), void (%"class.cc::PaintImageBuilder"*, %"class.cc::PaintImage"*, i1)* @_ZN2cc17PaintImageBuilderC2ENS_10PaintImageEb
@_ZN2cc17PaintImageBuilderC1EOS0_ = hidden unnamed_addr alias void (%"class.cc::PaintImageBuilder"*, %"class.cc::PaintImageBuilder"*), void (%"class.cc::PaintImageBuilder"*, %"class.cc::PaintImageBuilder"*)* @_ZN2cc17PaintImageBuilderC2EOS0_
@_ZN2cc17PaintImageBuilderD1Ev = hidden unnamed_addr alias void (%"class.cc::PaintImageBuilder"*), void (%"class.cc::PaintImageBuilder"*)* @_ZN2cc17PaintImageBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintImageBuilder8WithCopyENS_10PaintImageE(%"class.cc::PaintImageBuilder"* noalias sret, %"class.cc::PaintImage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintImage", align 8
  call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* nonnull %3, %"class.cc::PaintImage"* dereferenceable(104) %1) #4
  %4 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0
  call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* %4, %"class.cc::PaintImage"* nonnull dereferenceable(104) %3) #4
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %3) #4
  ret void
}

declare void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintImageBuilder14WithPropertiesENS_10PaintImageE(%"class.cc::PaintImageBuilder"* noalias sret, %"class.cc::PaintImage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintImage", align 8
  call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* nonnull %3, %"class.cc::PaintImage"* dereferenceable(104) %1) #4
  call void @_ZN2cc17PaintImageBuilderC2ENS_10PaintImageEb(%"class.cc::PaintImageBuilder"* %0, %"class.cc::PaintImage"* nonnull %3, i1 zeroext true)
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintImageBuilderC2Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %2) #4
  ret void
}

declare void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintImageBuilderC2ENS_10PaintImageEb(%"class.cc::PaintImageBuilder"*, %"class.cc::PaintImage"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* %4, %"class.cc::PaintImage"* dereferenceable(104) %1) #4
  br i1 %2, label %5, label %77

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.SkImage*, %class.SkImage** %6, align 8
  store %class.SkImage* null, %class.SkImage** %6, align 8
  %8 = icmp eq %class.SkImage* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.SkImage, %class.SkImage* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 -1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = bitcast %class.SkImage* %7 to %class.SkRefCntBase*
  %15 = bitcast %class.SkImage* %7 to void (%class.SkRefCntBase*)***
  %16 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %16, i64 2
  %18 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, align 8
  tail call void %18(%class.SkRefCntBase* nonnull %14) #4
  br label %19

19:                                               ; preds = %5, %9, %13
  %20 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %20, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %20, align 8
  %22 = icmp eq %"class.cc::PaintOpBuffer"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %"class.cc::PaintOpBuffer"* %21 to %class.SkRefCntBase*
  %29 = bitcast %"class.cc::PaintOpBuffer"* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #4
  br label %33

33:                                               ; preds = %19, %23, %27
  %34 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0, i32 2
  %35 = bitcast %"class.gfx::Rect"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  %36 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0, i32 4, i32 0
  %37 = load %"class.cc::PaintImageGenerator"*, %"class.cc::PaintImageGenerator"** %36, align 8
  store %"class.cc::PaintImageGenerator"* null, %"class.cc::PaintImageGenerator"** %36, align 8
  %38 = icmp eq %"class.cc::PaintImageGenerator"* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.cc::PaintImageGenerator", %"class.cc::PaintImageGenerator"* %37, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %"class.cc::PaintImageGenerator"* %37 to %class.SkRefCntBase*
  %45 = bitcast %"class.cc::PaintImageGenerator"* %37 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  tail call void %48(%class.SkRefCntBase* nonnull %44) #4
  br label %49

49:                                               ; preds = %33, %39, %43
  %50 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0, i32 14, i32 0
  %51 = load %class.SkImage*, %class.SkImage** %50, align 8
  store %class.SkImage* null, %class.SkImage** %50, align 8
  %52 = icmp eq %class.SkImage* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkImage, %class.SkImage* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkImage* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkImage* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  tail call void %62(%class.SkRefCntBase* nonnull %58) #4
  br label %63

63:                                               ; preds = %49, %53, %57
  %64 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0, i32 5, i32 0
  %65 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %64, align 8
  store %"class.cc::TextureBacking"* null, %"class.cc::TextureBacking"** %64, align 8
  %66 = icmp eq %"class.cc::TextureBacking"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.cc::TextureBacking", %"class.cc::TextureBacking"* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %"class.cc::TextureBacking"* %65 to %class.SkRefCntBase*
  %73 = bitcast %"class.cc::TextureBacking"* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  tail call void %76(%class.SkRefCntBase* nonnull %72) #4
  br label %77

77:                                               ; preds = %71, %67, %63, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintImageBuilderC2EOS0_(%"class.cc::PaintImageBuilder"*, %"class.cc::PaintImageBuilder"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %1, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* %3, %"class.cc::PaintImage"* dereferenceable(104) %4) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintImageBuilderD2Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %0, i64 0, i32 0
  tail call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* noalias sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %1, i64 0, i32 0, i32 14, i32 0
  %5 = load %class.SkImage*, %class.SkImage** %4, align 8
  %6 = icmp eq %class.SkImage* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN2cc10PaintImage13CreateSkImageEv(%"class.cc::PaintImage"* %3) #4
  br label %8

8:                                                ; preds = %2, %7
  tail call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* %0, %"class.cc::PaintImage"* dereferenceable(104) %3) #4
  ret void
}

declare void @_ZN2cc10PaintImage13CreateSkImageEv(%"class.cc::PaintImage"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
