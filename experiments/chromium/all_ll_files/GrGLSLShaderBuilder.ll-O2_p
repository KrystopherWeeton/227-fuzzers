; ModuleID = '../../third_party/skia/src/gpu/glsl/GrGLSLShaderBuilder.cpp'
source_filename = "../../third_party/skia/src/gpu/glsl/GrGLSLShaderBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32, [12 x i8] }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [16 x i8] }
%class.SkTArray.4 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.8 = type { %class.SkAlignedSTStorage.9, %class.SkTArray }
%class.SkAlignedSTStorage.9 = type { [8 x i8] }
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::vector", i32, %class.SkSTArray.106 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32 }>
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.10, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.10 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.11, i32, [4 x i8] }>
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [132 x i8] }
%class.SkTArray.13 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.14, i32, [4 x i8] }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.63, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.17, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.17 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.18, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.57" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.22 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.19, [4 x i8] }>
%union.anon.19 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.20, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.22 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.23, void (i8*)*, i8* }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.18, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.54, %class.sk_sp.56, %class.sk_sp.56 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.30, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.30 = type { %class.SkTHashTable.31 }
%class.SkTHashTable.31 = type { i32, i32, %class.SkAutoTArray.32 }
%class.SkAutoTArray.32 = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.39, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.39 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.45, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.45 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.46 }
%class.SkTHashTable.46 = type { i32, i32, %class.SkAutoTArray.47 }
%class.SkAutoTArray.47 = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.54 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.55, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.55 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.56 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.62 }
%union.anon.62 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.63 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.64, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.64 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.65"*, [24 x i8] }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.68, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.68 = type { %class.SkAlignedSTStorage.69, %class.SkTArray.70 }
%class.SkAlignedSTStorage.69 = type { [8 x i8] }
%class.SkTArray.70 = type { %"class.std::__1::unique_ptr.71"*, i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrSwizzle = type { i16 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.80, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.80 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.84 }
%class.SkTArray.84 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.97 }
%class.SkTArray.97 = type { %"class.std::__1::unique_ptr.94"*, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::unique_ptr.94"* }
%class.SkSTArray.106 = type { %class.SkAlignedSTStorage.107, %class.SkTArray.108 }
%class.SkAlignedSTStorage.107 = type { [160 x i8] }
%class.SkTArray.108 = type { %class.GrShaderVar*, i64 }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrGLSLColorSpaceXformHelper = type { %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %"struct.SkColorSpaceXformSteps::Flags", i32, i32 }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.anon = type { %class.GrGLSLUniformHandler*, %class.GrGLSLShaderBuilder* }

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN19GrGLSLShaderBuilderD2Ev = comdat any

$_ZN19GrGLSLShaderBuilderD0Ev = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv = comdat any

$_ZTV19GrGLSLShaderBuilder = comdat any

@_ZTV19GrGLSLShaderBuilder = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD2Ev to i8*), i8* bitcast (void (%class.GrGLSLShaderBuilder*)* @_ZN19GrGLSLShaderBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN20GrGLSLProgramBuilder13kVarsPerBlockE = external local_unnamed_addr constant i32, align 4
@.str = private unnamed_addr constant [14 x i8] c"void main() {\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s;\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"%s %s(\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c" {\0A%s}\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"%s {\0A%s}\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"sample(%s, %s)\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"half4(1)\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c" * %s)\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"%s(\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c", %s)\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"subpassLoad(%s)\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"src_tf\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"dst_tf\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"color.rgb = (%s * color.rgb);\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"return color;\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"gamut_xform\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"color = unpremul(color);\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"color.r = %s(half(color.r));\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c"color.g = %s(half(color.g));\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"color.b = %s(half(color.b));\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"color = %s(half4(color));\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"color.rgb *= color.a;\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"return half4(color);\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"color_xform\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"%s(%s)\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"#extension %s: require\0A\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"layout(%s\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c") %s;\0A\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c".%s\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"half G = %s[0];\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"half A = %s[1];\00", align 1
@.str.43 = private unnamed_addr constant [16 x i8] c"half B = %s[2];\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"half C = %s[3];\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"half D = %s[4];\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"half E = %s[5];\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"half F = %s[6];\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"half s = sign(x);\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"x = abs(x);\00", align 1
@.str.50 = private unnamed_addr constant [51 x i8] c"x = (x < D) ? (C * x) + F : pow(A * x + B, G) + E;\00", align 1
@.str.51 = private unnamed_addr constant [61 x i8] c"x = pow(max(A + B * pow(x, C), 0) / (D + E * pow(x, C)), F);\00", align 1
@.str.52 = private unnamed_addr constant [61 x i8] c"x = (x*A <= 1) ? pow(x*A, B) : exp((x-E)*C) + D; x *= (F+1);\00", align 1
@.str.53 = private unnamed_addr constant [63 x i8] c"x /= (F+1); x = (x <= 1) ? A * pow(x, B) : C * log(x - D) + E;\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"return s * x;\00", align 1
@"switch.table._ZZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelperENK3$_0clES3_16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE6TFKind" = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.53, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilderC2EP20GrGLSLProgramBuilder(%class.GrGLSLShaderBuilder*, %class.GrGLSLProgramBuilder*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19GrGLSLShaderBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 16
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  store %class.GrGLSLProgramBuilder* %1, %class.GrGLSLProgramBuilder** %4, align 8
  %5 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 2
  %6 = bitcast %"class.SkSL::String"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #5
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 128
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 128849018880, i64* %10, align 8
  %12 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %12) #5
  %13 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 5
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %13) #5
  %14 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 6
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %14) #5
  %15 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %16 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 0
  %17 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %18 = bitcast i8* %17 to i64*
  %19 = bitcast i8* %15 to i8**
  store i8* %16, i8** %19, align 8
  store i64 17179869184, i64* %18, align 8
  %20 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9
  %21 = load i32, i32* @_ZN20GrGLSLProgramBuilder13kVarsPerBlockE, align 4
  %22 = sext i32 %21 to i64
  %23 = mul nsw i64 %22, 40
  %24 = add nsw i64 %23, 32
  %25 = bitcast %class.GrTBlockList* %20 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %25, i32 0, i64 %24, i64 40) #5
  %26 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10
  %27 = bitcast %class.GrTBlockList* %26 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %27, i32 0, i64 %24, i64 40) #5
  %28 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 11
  store i32 0, i32* %28, align 16
  %29 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 8
  %30 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 0
  %31 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 16
  %32 = bitcast i8* %31 to i64*
  %33 = bitcast i8* %29 to i8**
  store i8* %30, i8** %33, align 8
  store i64 8589934592, i64* %32, align 8
  %34 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 8
  %35 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 0
  %36 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = bitcast i8* %34 to i8**
  store i8* %35, i8** %38, align 8
  store i64 8589934592, i64* %37, align 8
  %39 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  store i32 9, i32* %39, align 8
  %40 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 15
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 17
  store i32 0, i32* %41, align 16
  %42 = bitcast i8* %7 to %class.SkTArray*
  %43 = bitcast i8* %7 to %class.SkString**
  br label %48

44:                                               ; preds = %48
  %45 = load %class.SkString*, %class.SkString** %43, align 8
  %46 = getelementptr inbounds %class.SkString, %class.SkString* %45, i64 8
  %47 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %46, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #5
  ret void

48:                                               ; preds = %48, %2
  %49 = phi i32 [ 0, %2 ], [ %59, %48 ]
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %42, i32 1, i32 1) #5
  %50 = load %class.SkString*, %class.SkString** %43, align 8
  %51 = load i64, i64* %10, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = getelementptr inbounds %class.SkString, %class.SkString* %50, i64 %53
  %55 = add i64 %51, 2
  %56 = and i64 %55, 4294967294
  %57 = and i64 %51, -4294967295
  %58 = or i64 %56, %57
  store i64 %58, i64* %10, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %54) #5
  %59 = add nuw nsw i32 %49, 1
  %60 = icmp eq i32 %59, 10
  br i1 %60, label %44, label %48
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder10declAppendERK11GrShaderVar(%class.GrGLSLShaderBuilder*, %class.GrShaderVar* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %5 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %5, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #5
  %6 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  %7 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %6, align 8
  %8 = bitcast %class.GrGLSLProgramBuilder* %7 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %9 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %8, align 16
  %10 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %9, i64 2
  %11 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %10, align 8
  %12 = call %class.GrCaps* %11(%class.GrGLSLProgramBuilder* %7) #5
  %13 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %12, i64 0, i32 2, i32 0
  %14 = load %class.GrShaderCaps*, %class.GrShaderCaps** %13, align 8
  call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %1, %class.GrShaderCaps* %14, %class.SkString* nonnull %3) #5
  %15 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %5, align 8
  %16 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %15, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %16)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  ret void
}

declare void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar*, %class.GrShaderCaps*, %class.SkString*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #5
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #5
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder13declareGlobalERK11GrShaderVar(%class.GrGLSLShaderBuilder* nocapture readonly, %class.GrShaderVar* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  %4 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %3, align 8
  %5 = bitcast %class.GrGLSLProgramBuilder* %4 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %6 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %5, align 16
  %7 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %6, i64 2
  %8 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %7, align 8
  %9 = tail call %class.GrCaps* %8(%class.GrGLSLProgramBuilder* %4) #5
  %10 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %9, i64 0, i32 2, i32 0
  %11 = load %class.GrShaderCaps*, %class.GrShaderCaps** %10, align 8
  %12 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %13 = bitcast i8* %12 to %class.SkString**
  %14 = load %class.SkString*, %class.SkString** %13, align 8
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %14, i64 1
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %1, %class.GrShaderCaps* %11, %class.SkString* %15) #5
  %16 = load %class.SkString*, %class.SkString** %13, align 8
  %17 = getelementptr inbounds %class.SkString, %class.SkString* %16, i64 1
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %17, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc(%class.SkString* noalias sret, %class.GrGLSLShaderBuilder* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %1, i64 0, i32 1
  %5 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %4, align 8
  tail call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* sret %0, %class.GrGLSLProgramBuilder* %5, i8 signext 0, i8* %2, i1 zeroext true) #5
  ret void
}

declare void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* sret, %class.GrGLSLProgramBuilder*, i8 signext, i8*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder18appendFunctionDeclE8GrSLTypePKc6SkSpanIK11GrShaderVarE(%class.GrGLSLShaderBuilder* nocapture readonly, i32, i8*, %class.GrShaderVar*, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %7 = bitcast i8* %6 to %class.SkString**
  %8 = load %class.SkString*, %class.SkString** %7, align 8
  %9 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 7
  %10 = tail call i8* @_Z16GrGLSLTypeString8GrSLType(i32 %1) #5
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* %10, i8* %2) #5
  %11 = icmp eq i64 %4, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  br label %17

14:                                               ; preds = %23, %5
  %15 = load %class.SkString*, %class.SkString** %7, align 8
  %16 = getelementptr inbounds %class.SkString, %class.SkString* %15, i64 7
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %16, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #5
  ret void

17:                                               ; preds = %23, %12
  %18 = phi i64 [ 0, %12 ], [ %35, %23 ]
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = load %class.SkString*, %class.SkString** %7, align 8
  %22 = getelementptr inbounds %class.SkString, %class.SkString* %21, i64 7
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %22, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %23

23:                                               ; preds = %17, %20
  %24 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %3, i64 %18
  %25 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %13, align 8
  %26 = bitcast %class.GrGLSLProgramBuilder* %25 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %27 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %26, align 16
  %28 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %27, i64 2
  %29 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %28, align 8
  %30 = tail call %class.GrCaps* %29(%class.GrGLSLProgramBuilder* %25) #5
  %31 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %30, i64 0, i32 2, i32 0
  %32 = load %class.GrShaderCaps*, %class.GrShaderCaps** %31, align 8
  %33 = load %class.SkString*, %class.SkString** %7, align 8
  %34 = getelementptr inbounds %class.SkString, %class.SkString* %33, i64 7
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %24, %class.GrShaderCaps* %32, %class.SkString* %34) #5
  %35 = add nuw i64 %18, 1
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %14, label %17
}

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #1

declare i8* @_Z16GrGLSLTypeString8GrSLType(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder12emitFunctionE8GrSLTypePKc6SkSpanIK11GrShaderVarES2_(%class.GrGLSLShaderBuilder* nocapture readonly, i32, i8*, %class.GrShaderVar*, i64, i8*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN19GrGLSLShaderBuilder18appendFunctionDeclE8GrSLTypePKc6SkSpanIK11GrShaderVarE(%class.GrGLSLShaderBuilder* %0, i32 %1, i8* %2, %class.GrShaderVar* %3, i64 %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = bitcast i8* %7 to %class.SkString**
  %9 = load %class.SkString*, %class.SkString** %8, align 8
  %10 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 7
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder12emitFunctionEPKcS1_(%class.GrGLSLShaderBuilder* nocapture readonly, i8*, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %5 = bitcast i8* %4 to %class.SkString**
  %6 = load %class.SkString*, %class.SkString** %5, align 8
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 7
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %1, i8* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder21emitFunctionPrototypeE8GrSLTypePKc6SkSpanIK11GrShaderVarE(%class.GrGLSLShaderBuilder* nocapture readonly, i32, i8*, %class.GrShaderVar*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN19GrGLSLShaderBuilder18appendFunctionDeclE8GrSLTypePKc6SkSpanIK11GrShaderVarE(%class.GrGLSLShaderBuilder* %0, i32 %1, i8* %2, %class.GrShaderVar* %3, i64 %4)
  %6 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %7 = bitcast i8* %6 to %class.SkString**
  %8 = load %class.SkString*, %class.SkString** %7, align 8
  %9 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 7
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %9, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder10codeAppendENSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEE(%class.GrGLSLShaderBuilder*, %"class.SkSL::Statement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = ptrtoint %"class.SkSL::Statement"* %1 to i64
  %5 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0
  %7 = bitcast %"class.SkSL::Statement"* %1 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %8 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %8, i64 2
  %10 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %9, align 8
  call void %10(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::IRNode"* %6) #5
  %11 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = select i1 %14, i8* %16, i8* %5
  %18 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %19 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %20 = load i32, i32* %19, align 8
  %21 = bitcast i8* %18 to %class.SkString**
  %22 = load %class.SkString*, %class.SkString** %21, align 8
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds %class.SkString, %class.SkString* %22, i64 %23
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %24, i64 -1, i8* %17) #5
  %25 = load i8, i8* %12, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %2
  %28 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %2, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5
  %30 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 29
  br i1 %32, label %33, label %49

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %35 = bitcast i8* %34 to %class.SkTArray.4*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.4* %35, i32 1, i32 1) #5
  %36 = bitcast i8* %34 to %"class.std::__1::unique_ptr"**
  %37 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %38 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 %42
  %44 = add i64 %40, 2
  %45 = and i64 %44, 4294967294
  %46 = and i64 %40, -4294967295
  %47 = or i64 %45, %46
  store i64 %47, i64* %39, align 8
  %48 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  store i64 %4, i64* %48, align 8
  br label %56

49:                                               ; preds = %29
  %50 = icmp eq %"class.SkSL::Statement"* %1, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = bitcast %"class.SkSL::Statement"* %1 to void (%"class.SkSL::Statement"*)***
  %53 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %53, i64 1
  %55 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %54, align 8
  call void %55(%"class.SkSL::Statement"* nonnull %1) #5
  br label %56

56:                                               ; preds = %33, %49, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19GrGLSLShaderBuilder19appendTextureLookupEP8SkString16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEEPKc(%class.GrGLSLShaderBuilder* nocapture readonly, %class.SkString*, i32, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.GrSwizzle, align 2
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.GrSwizzle, align 2
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  %9 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %8, align 8
  %10 = bitcast %class.GrGLSLProgramBuilder* %9 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %11 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %10, align 16
  %12 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %11, i64 5
  %13 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %12, align 8
  %14 = tail call %class.GrGLSLUniformHandler* %13(%class.GrGLSLProgramBuilder* %9) #5
  %15 = bitcast %class.GrGLSLUniformHandler* %14 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %16 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %15, align 8
  %17 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %16, i64 7
  %18 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %17, align 8
  %19 = tail call i8* %18(%class.GrGLSLUniformHandler* %14, i32 %2) #5
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* %19, i8* %3) #5
  %20 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %8, align 8
  %21 = bitcast %class.GrGLSLProgramBuilder* %20 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %22 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %21, align 16, !noalias !2
  %23 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %22, i64 5
  %24 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %23, align 8, !noalias !2
  %25 = tail call %class.GrGLSLUniformHandler* %24(%class.GrGLSLProgramBuilder* %20) #5, !noalias !2
  %26 = bitcast %class.GrGLSLUniformHandler* %25 to void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)***
  %27 = load void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)**, void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)*** %26, align 8, !noalias !2
  %28 = getelementptr inbounds void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)*, void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)** %27, i64 8
  %29 = load void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)*, void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)** %28, align 8, !noalias !2
  call void %29(%class.GrSwizzle* nonnull sret %7, %class.GrGLSLUniformHandler* %25, i32 %2) #5
  %30 = bitcast %class.GrSwizzle* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #5
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #5
  %31 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %7, i64 0, i32 0
  %32 = load i16, i16* %31, align 2
  %33 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %5, i64 0, i32 0
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %32, %34
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #5
  br i1 %35, label %41, label %36

36:                                               ; preds = %4
  %37 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #5
  call void @_ZNK9GrSwizzle8asStringEv(%class.SkString* nonnull sret %6, %class.GrSwizzle* nonnull %7) #5
  %38 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  %39 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %38, align 8
  %40 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %39, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), i8* %40) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #5
  br label %41

41:                                               ; preds = %4, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder19appendTextureLookupE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEEPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder*, i32, i8*, %class.GrGLSLColorSpaceXformHelper* readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %8, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %6) #5
  call void @_ZNK19GrGLSLShaderBuilder19appendTextureLookupEP8SkString16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEEPKc(%class.GrGLSLShaderBuilder* %0, %class.SkString* nonnull %6, i32 %1, i8* %2)
  %9 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %9, i64 0, i32 2
  %11 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  %12 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %12, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %5) #5
  call void @_ZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder* %0, %class.SkString* nonnull %5, i8* %10, %class.GrGLSLColorSpaceXformHelper* %3) #5
  %13 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %12, align 8
  %14 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %13, i64 0, i32 2
  %15 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %16 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %17 = load i32, i32* %16, align 8
  %18 = bitcast i8* %15 to %class.SkString**
  %19 = load %class.SkString*, %class.SkString** %18, align 8
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds %class.SkString, %class.SkString* %19, i64 %20
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %21, i64 -1, i8* %14) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder21appendColorGamutXformEPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder*, i8*, %class.GrGLSLColorSpaceXformHelper* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %6, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #5
  call void @_ZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder* %0, %class.SkString* nonnull %4, i8* %1, %class.GrGLSLColorSpaceXformHelper* %2)
  %7 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %7, i64 0, i32 2
  %9 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %10 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i8* %9 to %class.SkString**
  %13 = load %class.SkString*, %class.SkString** %12, align 8
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %13, i64 %14
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %15, i64 -1, i8* %8) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder27appendTextureLookupAndBlendEPKc11SkBlendMode16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEES1_P27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder*, i8*, i32, i32, i8*, %class.GrGLSLColorSpaceXformHelper* readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = icmp eq i8* %1, null
  %11 = select i1 %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8* %1
  %12 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %13, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %9) #5
  %14 = icmp eq i32 %2, 13
  br i1 %14, label %15, label %28

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %17 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %18 = load i32, i32* %17, align 8
  %19 = bitcast i8* %16 to %class.SkString**
  %20 = load %class.SkString*, %class.SkString** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds %class.SkString, %class.SkString* %20, i64 %21
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %22, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #5
  call void @_ZNK19GrGLSLShaderBuilder19appendTextureLookupEP8SkString16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEEPKc(%class.GrGLSLShaderBuilder* %0, %class.SkString* nonnull %9, i32 %3, i8* %4)
  %23 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %13, align 8
  %24 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %23, i64 0, i32 2
  %25 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #5
  %26 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %26, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %8) #5
  call void @_ZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder* %0, %class.SkString* nonnull %8, i8* %24, %class.GrGLSLColorSpaceXformHelper* %5) #5
  %27 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %26, align 8
  br label %38

28:                                               ; preds = %6
  %29 = call i8* @_ZN11GrGLSLBlend13BlendFuncNameE11SkBlendMode(i32 %2) #5
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8* %29)
  call void @_ZNK19GrGLSLShaderBuilder19appendTextureLookupEP8SkString16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEEPKc(%class.GrGLSLShaderBuilder* %0, %class.SkString* nonnull %9, i32 %3, i8* %4)
  %30 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %13, align 8
  %31 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %30, i64 0, i32 2
  %32 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #5
  %33 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %33, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %7) #5
  call void @_ZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder* %0, %class.SkString* nonnull %7, i8* %31, %class.GrGLSLColorSpaceXformHelper* %5) #5
  %34 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %33, align 8
  %35 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %36 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %37 = bitcast i8* %35 to %class.SkString**
  br label %38

38:                                               ; preds = %28, %15
  %39 = phi %class.SkString** [ %37, %28 ], [ %19, %15 ]
  %40 = phi i32* [ %36, %28 ], [ %17, %15 ]
  %41 = phi %"struct.SkString::Rec"* [ %34, %28 ], [ %27, %15 ]
  %42 = phi %class.SkString* [ %7, %28 ], [ %8, %15 ]
  %43 = phi i8* [ %32, %28 ], [ %25, %15 ]
  %44 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), %28 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), %15 ]
  %45 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %41, i64 0, i32 2
  %46 = load i32, i32* %40, align 8
  %47 = load %class.SkString*, %class.SkString** %39, align 8
  %48 = sext i32 %46 to i64
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %47, i64 %48
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %49, i64 -1, i8* %45) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %42) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #5
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %0, i8* %44, i8* %11)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  ret void
}

declare i8* @_ZN11GrGLSLBlend13BlendFuncNameE11SkBlendMode(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder15appendInputLoadE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrGLSLShaderBuilder* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GrSwizzle, align 2
  %4 = alloca %class.SkString, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.GrSwizzle, align 2
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  %8 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %7, align 8
  %9 = bitcast %class.GrGLSLProgramBuilder* %8 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %10 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %9, align 16
  %11 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %10, i64 5
  %12 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %11, align 8
  %13 = tail call %class.GrGLSLUniformHandler* %12(%class.GrGLSLProgramBuilder* %8) #5
  %14 = bitcast %class.GrGLSLUniformHandler* %13 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %15 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %14, align 8
  %16 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %15, i64 9
  %17 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %16, align 8
  %18 = tail call i8* %17(%class.GrGLSLUniformHandler* %13, i32 %1) #5
  %19 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #5
  %20 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %20, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %5) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* %18) #5
  %21 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %7, align 8
  %22 = bitcast %class.GrGLSLProgramBuilder* %21 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %23 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %22, align 16, !noalias !5
  %24 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %23, i64 5
  %25 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %24, align 8, !noalias !5
  %26 = call %class.GrGLSLUniformHandler* %25(%class.GrGLSLProgramBuilder* %21) #5, !noalias !5
  %27 = bitcast %class.GrGLSLUniformHandler* %26 to void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)***
  %28 = load void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)**, void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)*** %27, align 8, !noalias !5
  %29 = getelementptr inbounds void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)*, void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)** %28, i64 10
  %30 = load void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)*, void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)** %29, align 8, !noalias !5
  call void %30(%class.GrSwizzle* nonnull sret %6, %class.GrGLSLUniformHandler* %26, i32 %1) #5
  %31 = bitcast %class.GrSwizzle* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %31) #5
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #5
  %32 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %6, i64 0, i32 0
  %33 = load i16, i16* %32, align 2
  %34 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %3, i64 0, i32 0
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %33, %35
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %31) #5
  br i1 %36, label %42, label %37

37:                                               ; preds = %2
  %38 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #5
  call void @_ZNK9GrSwizzle8asStringEv(%class.SkString* nonnull sret %4, %class.GrSwizzle* nonnull %6) #5
  %39 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  %40 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %39, align 8
  %41 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %40, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), i8* %41) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #5
  br label %42

42:                                               ; preds = %2, %37
  %43 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %20, align 8
  %44 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %43, i64 0, i32 2
  %45 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %46 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %47 = load i32, i32* %46, align 8
  %48 = bitcast i8* %45 to %class.SkString**
  %49 = load %class.SkString*, %class.SkString** %48, align 8
  %50 = sext i32 %47 to i64
  %51 = getelementptr inbounds %class.SkString, %class.SkString* %49, i64 %50
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %51, i64 -1, i8* %44) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder*, %class.SkString*, i8*, %class.GrGLSLColorSpaceXformHelper* readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.anon, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = alloca %class.SkString, align 8
  %11 = alloca %class.SkString, align 8
  %12 = alloca %class.SkString, align 8
  %13 = alloca [1 x %class.GrShaderVar], align 16
  %14 = alloca %class.SkString, align 8
  %15 = alloca %class.SkString, align 8
  %16 = alloca [1 x %class.GrShaderVar], align 16
  %17 = alloca %class.SkString, align 8
  %18 = alloca %class.SkString, align 8
  %19 = icmp eq %class.GrGLSLColorSpaceXformHelper* %3, null
  br i1 %19, label %39, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 3, i32 0
  %22 = load i8, i8* %21, align 1, !range !8
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 3, i32 1
  %25 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 3, i32 2
  %26 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 3, i32 3
  %27 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 3, i32 4
  %28 = bitcast i8* %24 to <4 x i8>*
  %29 = load <4 x i8>, <4 x i8>* %28, align 1
  %30 = icmp eq <4 x i8> %29, zeroinitializer
  %31 = select <4 x i1> %30, <4 x i32> zeroinitializer, <4 x i32> <i32 2, i32 4, i32 8, i32 16>
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %33 = or <4 x i32> %31, %32
  %34 = shufflevector <4 x i32> %33, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %35 = or <4 x i32> %33, %34
  %36 = extractelement <4 x i32> %35, i32 0
  %37 = or i32 %36, %23
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %4, %20
  %40 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %1, i8* %2) #5
  br label %189

41:                                               ; preds = %20
  %42 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  %43 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %42, align 8
  %44 = bitcast %class.GrGLSLProgramBuilder* %43 to %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)***
  %45 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)**, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*** %44, align 16
  %46 = getelementptr inbounds %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %45, i64 4
  %47 = load %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)*, %class.GrGLSLUniformHandler* (%class.GrGLSLProgramBuilder*)** %46, align 8
  %48 = tail call %class.GrGLSLUniformHandler* %47(%class.GrGLSLProgramBuilder* %43) #5
  %49 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #5
  %50 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  %51 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  store %class.GrGLSLUniformHandler* %48, %class.GrGLSLUniformHandler** %50, align 8
  store %class.GrGLSLShaderBuilder* %0, %class.GrGLSLShaderBuilder** %51, align 8
  %52 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #5
  %53 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %53, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %8) #5
  %54 = load i8, i8* %24, align 1, !range !8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %41
  %57 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #5
  %58 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 4
  %61 = load i32, i32* %60, align 4
  call fastcc void @"_ZZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelperENK3$_0clES3_16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE6TFKind"(%class.SkString* nonnull sret %9, %class.anon* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i32 %59, i32 %61)
  %62 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* nonnull %8, %class.SkString* nonnull dereferenceable(8) %9) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #5
  br label %63

63:                                               ; preds = %41, %56
  %64 = bitcast %class.SkString* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #5
  %65 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %65, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %10) #5
  %66 = load i8, i8* %26, align 1, !range !8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %75, label %68

68:                                               ; preds = %63
  %69 = bitcast %class.SkString* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #5
  %70 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 2, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 5
  %73 = load i32, i32* %72, align 4
  call fastcc void @"_ZZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelperENK3$_0clES3_16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE6TFKind"(%class.SkString* nonnull sret %11, %class.anon* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i32 %71, i32 %73)
  %74 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* nonnull %10, %class.SkString* nonnull dereferenceable(8) %11) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #5
  br label %75

75:                                               ; preds = %63, %68
  %76 = bitcast %class.SkString* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #5
  %77 = getelementptr inbounds %class.SkString, %class.SkString* %12, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %77, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %12) #5
  %78 = load i8, i8* %25, align 2, !range !8
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %113, label %80

80:                                               ; preds = %75
  %81 = bitcast [1 x %class.GrShaderVar]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %81) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %81, i8 -86, i64 40, i1 false)
  %82 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0
  %83 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #5
  %84 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 0
  store i32 31, i32* %84, align 16
  %85 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 1
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 2
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %87, %class.SkString* nonnull dereferenceable(8) %6) #5
  %88 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %88) #5
  %89 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %89) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  %90 = getelementptr inbounds %class.GrGLSLColorSpaceXformHelper, %class.GrGLSLColorSpaceXformHelper* %3, i64 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = bitcast %class.GrGLSLUniformHandler* %48 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %93 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %92, align 8
  %94 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %93, i64 3
  %95 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %94, align 8
  %96 = call i8* %95(%class.GrGLSLUniformHandler* %48, i32 %91) #5
  %97 = bitcast %class.SkString* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #5
  %98 = getelementptr inbounds %class.SkString, %class.SkString* %14, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %98, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %14) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i8* %96) #5
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %14, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)) #5
  %99 = bitcast %class.SkString* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #5
  %100 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %42, align 8, !noalias !9
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %15, %class.GrGLSLProgramBuilder* %100, i8 signext 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), i1 zeroext true) #5
  %101 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* nonnull %12, %class.SkString* nonnull dereferenceable(8) %15) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #5
  %102 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %77, align 8
  %103 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %102, i64 0, i32 2
  %104 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %98, align 8
  %105 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %104, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder18appendFunctionDeclE8GrSLTypePKc6SkSpanIK11GrShaderVarE(%class.GrGLSLShaderBuilder* %0, i32 31, i8* %103, %class.GrShaderVar* nonnull %82, i64 1) #5
  %106 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %107 = bitcast i8* %106 to %class.SkString**
  %108 = load %class.SkString*, %class.SkString** %107, align 8
  %109 = getelementptr inbounds %class.SkString, %class.SkString* %108, i64 7
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %109, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* %105) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #5
  %110 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %110) #5
  %111 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %111) #5
  %112 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %13, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %112) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %81) #5
  br label %113

113:                                              ; preds = %75, %80
  %114 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %42, align 8
  %115 = bitcast %class.GrGLSLProgramBuilder* %114 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %116 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %115, align 16
  %117 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %116, i64 2
  %118 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %117, align 8
  %119 = call %class.GrCaps* %118(%class.GrGLSLProgramBuilder* %114) #5
  %120 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %119, i64 0, i32 2, i32 0
  %121 = load %class.GrShaderCaps*, %class.GrShaderCaps** %120, align 8
  %122 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %121, i64 0, i32 2
  %123 = bitcast i56* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = and i64 %124, 17592186044416
  %126 = icmp eq i64 %125, 0
  %127 = bitcast [1 x %class.GrShaderVar]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %127) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %127, i8 -86, i64 40, i1 false)
  %128 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0
  %129 = select i1 %126, i32 31, i32 24
  %130 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #5
  %131 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 0
  store i32 %129, i32* %131, align 16
  %132 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 1
  store i32 0, i32* %132, align 4
  %133 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 2
  store i32 0, i32* %133, align 8
  %134 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %134, %class.SkString* nonnull dereferenceable(8) %5) #5
  %135 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %135) #5
  %136 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %136) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130)
  %137 = bitcast %class.SkString* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #5
  %138 = getelementptr inbounds %class.SkString, %class.SkString* %17, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %138, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %17) #5
  %139 = load i8, i8* %21, align 4, !range !8
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %113
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %17, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0)) #5
  br label %142

142:                                              ; preds = %113, %141
  %143 = load i8, i8* %24, align 1, !range !8
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %152, label %145

145:                                              ; preds = %142
  %146 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %53, align 8
  %147 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %146, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0), i8* %147) #5
  %148 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %53, align 8
  %149 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %148, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i8* %149) #5
  %150 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %53, align 8
  %151 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %150, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i64 0, i64 0), i8* %151) #5
  br label %152

152:                                              ; preds = %142, %145
  %153 = load i8, i8* %25, align 2, !range !8
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %152
  %156 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %77, align 8
  %157 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %156, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %17, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0), i8* %157) #5
  br label %158

158:                                              ; preds = %152, %155
  %159 = load i8, i8* %26, align 1, !range !8
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %168, label %161

161:                                              ; preds = %158
  %162 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %65, align 8
  %163 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %162, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0), i8* %163) #5
  %164 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %65, align 8
  %165 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %164, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i8* %165) #5
  %166 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %65, align 8
  %167 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %166, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i64 0, i64 0), i8* %167) #5
  br label %168

168:                                              ; preds = %158, %161
  %169 = load i8, i8* %27, align 4, !range !8
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %17, i64 -1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i64 0, i64 0)) #5
  br label %172

172:                                              ; preds = %168, %171
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %17, i64 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i64 0, i64 0)) #5
  %173 = bitcast %class.SkString* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #5
  %174 = getelementptr inbounds %class.SkString, %class.SkString* %18, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %174, align 8
  %175 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %42, align 8, !noalias !12
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %18, %class.GrGLSLProgramBuilder* %175, i8 signext 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), i1 zeroext true) #5
  %176 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %174, align 8
  %177 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %176, i64 0, i32 2
  %178 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %138, align 8
  %179 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %178, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder18appendFunctionDeclE8GrSLTypePKc6SkSpanIK11GrShaderVarE(%class.GrGLSLShaderBuilder* %0, i32 31, i8* %177, %class.GrShaderVar* nonnull %128, i64 1) #5
  %180 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %181 = bitcast i8* %180 to %class.SkString**
  %182 = load %class.SkString*, %class.SkString** %181, align 8
  %183 = getelementptr inbounds %class.SkString, %class.SkString* %182, i64 7
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %183, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* %179) #5
  %184 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %174, align 8
  %185 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %184, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i8* %185, i8* %2) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #5
  %186 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %186) #5
  %187 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %187) #5
  %188 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %16, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %188) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %127) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #5
  br label %189

189:                                              ; preds = %172, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelperENK3$_0clES3_16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE6TFKind"(%class.SkString* noalias sret, %class.anon* nocapture readonly, i8*, i32, i32) unnamed_addr #4 align 2 {
  %6 = alloca %class.SkString, align 8
  %7 = alloca [1 x %class.GrShaderVar], align 16
  %8 = alloca %class.SkString, align 8
  %9 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 1
  %10 = load %class.GrGLSLShaderBuilder*, %class.GrGLSLShaderBuilder** %9, align 8
  %11 = bitcast [1 x %class.GrShaderVar]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0
  %13 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)) #5
  %14 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 0
  store i32 28, i32* %14, align 16
  %15 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %17, %class.SkString* nonnull dereferenceable(8) %6) #5
  %18 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 4
  call void @_ZN8SkStringC1Ev(%class.SkString* %18) #5
  %19 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 5
  call void @_ZN8SkStringC1Ev(%class.SkString* %19) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %20 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 0
  %21 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %20, align 8
  %22 = bitcast %class.GrGLSLUniformHandler* %21 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %23 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %22, align 8
  %24 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %23, i64 3
  %25 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %24, align 8
  %26 = call i8* %25(%class.GrGLSLUniformHandler* %21, i32 %3) #5
  %27 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #5
  %28 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %28, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %8) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0), i8* %26) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0), i8* %26) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.43, i64 0, i64 0), i8* %26) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i8* %26) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0), i8* %26) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0), i8* %26) #5
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0), i8* %26) #5
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %8, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0)) #5
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %8, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i64 0, i64 0)) #5
  %29 = add i32 %4, -1
  %30 = icmp ult i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %5
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds [4 x i8*], [4 x i8*]* @"switch.table._ZZN19GrGLSLShaderBuilder21appendColorGamutXformEP8SkStringPKcP27GrGLSLColorSpaceXformHelperENK3$_0clES3_16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE6TFKind", i64 0, i64 %32
  %34 = load i8*, i8** %33, align 8
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %8, i64 -1, i8* %34) #5
  br label %35

35:                                               ; preds = %5, %31
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %8, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0)) #5
  %36 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %36, align 8
  %37 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %10, i64 0, i32 1
  %38 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %37, align 8, !noalias !15
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* sret %0, %class.GrGLSLProgramBuilder* %38, i8 signext 0, i8* %2, i1 zeroext true) #5
  %39 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %36, align 8
  %40 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %39, i64 0, i32 2
  %41 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %28, align 8
  %42 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %41, i64 0, i32 2
  call void @_ZN19GrGLSLShaderBuilder18appendFunctionDeclE8GrSLTypePKc6SkSpanIK11GrShaderVarE(%class.GrGLSLShaderBuilder* %10, i32 28, i8* %40, %class.GrShaderVar* nonnull %12, i64 1) #5
  %43 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %10, i64 0, i32 3, i32 0, i32 0, i64 120
  %44 = bitcast i8* %43 to %class.SkString**
  %45 = load %class.SkString*, %class.SkString** %44, align 8
  %46 = getelementptr inbounds %class.SkString, %class.SkString* %45, i64 7
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* %42) #5
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #5
  %47 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 5
  call void @_ZN8SkStringD1Ev(%class.SkString* %47) #5
  %48 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 4
  call void @_ZN8SkStringD1Ev(%class.SkString* %48) #5
  %49 = getelementptr inbounds [1 x %class.GrShaderVar], [1 x %class.GrShaderVar]* %7, i64 0, i64 0, i32 3
  call void @_ZN8SkStringD1Ev(%class.SkString* %49) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #5
  ret void
}

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19GrGLSLShaderBuilder10addFeatureEjPKc(%class.GrGLSLShaderBuilder* nocapture, i32, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 16
  %6 = and i32 %5, %1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %10 = bitcast i8* %9 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0), i8* %2) #5
  %12 = load i32, i32* %4, align 16
  %13 = or i32 %12, %1
  store i32 %13, i32* %4, align 16
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi i1 [ true, %8 ], [ false, %3 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19GrGLSLShaderBuilder11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLShaderBuilder* nocapture readonly, %class.GrTBlockList* dereferenceable(96), %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %1, i64 0, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to %"class.GrBlockAllocator::Block"**
  %6 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %5, align 8, !noalias !18
  %7 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %1, i64 0, i32 0, i32 0, i64 40
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8, !noalias !18
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %3, %14
  %12 = phi %"class.GrBlockAllocator::Block"* [ %20, %14 ], [ %6, %3 ]
  %13 = icmp eq %"class.GrBlockAllocator::Block"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.GrBlockAllocator::Block"* %12 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !18
  %17 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %12, i64 0, i32 4
  %18 = load i32, i32* %17, align 8, !noalias !18
  %19 = icmp eq i32 %18, 0
  %20 = inttoptr i64 %16 to %"class.GrBlockAllocator::Block"*
  br i1 %19, label %11, label %25

21:                                               ; preds = %3
  %22 = bitcast i8* %4 to %"class.GrBlockAllocator::Block"*
  %23 = ptrtoint %"class.GrBlockAllocator::Block"* %6 to i64
  %24 = icmp eq i8* %4, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %14, %21
  %26 = phi i32 [ %9, %21 ], [ %18, %14 ]
  %27 = phi %"class.GrBlockAllocator::Block"* [ %22, %21 ], [ %12, %14 ]
  %28 = phi i64 [ %23, %21 ], [ %16, %14 ]
  %29 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  br label %31

30:                                               ; preds = %11, %50, %70, %60, %21
  ret void

31:                                               ; preds = %25, %70
  %32 = phi i32 [ %26, %25 ], [ %74, %70 ]
  %33 = phi i32 [ 32, %25 ], [ %73, %70 ]
  %34 = phi %"class.GrBlockAllocator::Block"* [ %27, %25 ], [ %72, %70 ]
  %35 = phi i64 [ %28, %25 ], [ %71, %70 ]
  %36 = bitcast %"class.GrBlockAllocator::Block"* %34 to i8*
  %37 = sext i32 %33 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to %class.GrShaderVar*
  %40 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %29, align 8
  %41 = bitcast %class.GrGLSLProgramBuilder* %40 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %42 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %41, align 16
  %43 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %42, i64 2
  %44 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %43, align 8
  %45 = tail call %class.GrCaps* %44(%class.GrGLSLProgramBuilder* %40) #5
  %46 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %45, i64 0, i32 2, i32 0
  %47 = load %class.GrShaderCaps*, %class.GrShaderCaps** %46, align 8
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %39, %class.GrShaderCaps* %47, %class.SkString* %2) #5
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #5
  %48 = add i32 %33, 40
  %49 = icmp sgt i32 %48, %32
  br i1 %49, label %50, label %70

50:                                               ; preds = %31
  %51 = inttoptr i64 %35 to %"class.GrBlockAllocator::Block"*
  %52 = icmp eq i64 %35, 0
  br i1 %52, label %30, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %51, i64 0, i32 0
  %55 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %54, align 8
  %56 = ptrtoint %"class.GrBlockAllocator::Block"* %55 to i64
  %57 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %51, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %53, %63
  %61 = phi %"class.GrBlockAllocator::Block"* [ %69, %63 ], [ %55, %53 ]
  %62 = icmp eq %"class.GrBlockAllocator::Block"* %61, null
  br i1 %62, label %30, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.GrBlockAllocator::Block"* %61 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %61, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  %69 = inttoptr i64 %65 to %"class.GrBlockAllocator::Block"*
  br i1 %68, label %60, label %70

70:                                               ; preds = %63, %53, %31
  %71 = phi i64 [ %35, %31 ], [ %56, %53 ], [ %65, %63 ]
  %72 = phi %"class.GrBlockAllocator::Block"* [ %34, %31 ], [ %51, %53 ], [ %61, %63 ]
  %73 = phi i32 [ %48, %31 ], [ 32, %53 ], [ 32, %63 ]
  %74 = phi i32 [ %32, %31 ], [ %58, %53 ], [ %67, %63 ]
  %75 = icmp eq %"class.GrBlockAllocator::Block"* %72, null
  br i1 %75, label %30, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder18addLayoutQualifierEPKcNS_18InterfaceQualifierE(%class.GrGLSLShaderBuilder*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = zext i32 %2 to i64
  %5 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 %4, i32 0, i32 0, i64 8
  %6 = bitcast i8* %5 to %class.SkTArray*
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %6, i32 1, i32 1) #5
  %7 = bitcast i8* %5 to %class.SkString**
  %8 = load %class.SkString*, %class.SkString** %7, align 8
  %9 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 %4, i32 0, i32 0, i64 16
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 1
  %13 = and i64 %12, 2147483647
  %14 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 %13
  %15 = add i64 %11, 2
  %16 = and i64 %15, 4294967294
  %17 = and i64 %11, -4294967295
  %18 = or i64 %16, %17
  store i64 %18, i64* %10, align 8
  tail call void @_ZN8SkStringC1Ev(%class.SkString* %14) #5
  %19 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %14, i8* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder32compileAndAppendLayoutQualifiersEv(%class.GrGLSLShaderBuilder* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %3 = bitcast i8* %2 to %class.SkString**
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 8
  %11 = load %class.SkString*, %class.SkString** %3, align 8
  %12 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 3
  %13 = bitcast i8* %10 to %class.SkString**
  %14 = load %class.SkString*, %class.SkString** %13, align 8
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %14, i64 0, i32 0, i32 0
  %16 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %15, align 8
  %17 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %16, i64 0, i32 2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i8* %17) #5
  %18 = load i64, i64* %5, align 8
  %19 = and i64 %18, 4294967292
  %20 = icmp eq i64 %19, 0
  %21 = load %class.SkString*, %class.SkString** %3, align 8
  %22 = getelementptr inbounds %class.SkString, %class.SkString* %21, i64 3
  br i1 %20, label %23, label %25

23:                                               ; preds = %25, %9
  %24 = phi %class.SkString* [ %22, %9 ], [ %38, %25 ]
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0)) #5
  br label %39

25:                                               ; preds = %9, %25
  %26 = phi i64 [ %32, %25 ], [ 1, %9 ]
  %27 = phi %class.SkString* [ %38, %25 ], [ %22, %9 ]
  %28 = load %class.SkString*, %class.SkString** %13, align 8
  %29 = getelementptr inbounds %class.SkString, %class.SkString* %28, i64 %26, i32 0, i32 0
  %30 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %29, align 8
  %31 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %30, i64 0, i32 2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8* %31) #5
  %32 = add nuw nsw i64 %26, 1
  %33 = load i64, i64* %5, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = icmp ult i64 %32, %35
  %37 = load %class.SkString*, %class.SkString** %3, align 8
  %38 = getelementptr inbounds %class.SkString, %class.SkString* %37, i64 3
  br i1 %36, label %25, label %23

39:                                               ; preds = %1, %23
  %40 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 16
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, 4294967294
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %75, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 8
  %47 = load %class.SkString*, %class.SkString** %3, align 8
  %48 = getelementptr inbounds %class.SkString, %class.SkString* %47, i64 3
  %49 = bitcast i8* %46 to %class.SkString**
  %50 = load %class.SkString*, %class.SkString** %49, align 8
  %51 = getelementptr inbounds %class.SkString, %class.SkString* %50, i64 0, i32 0, i32 0
  %52 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %51, align 8
  %53 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %52, i64 0, i32 2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i8* %53) #5
  %54 = load i64, i64* %41, align 8
  %55 = and i64 %54, 4294967292
  %56 = icmp eq i64 %55, 0
  %57 = load %class.SkString*, %class.SkString** %3, align 8
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %57, i64 3
  br i1 %56, label %73, label %59

59:                                               ; preds = %45, %59
  %60 = phi i64 [ %66, %59 ], [ 1, %45 ]
  %61 = phi %class.SkString* [ %72, %59 ], [ %58, %45 ]
  %62 = load %class.SkString*, %class.SkString** %49, align 8
  %63 = getelementptr inbounds %class.SkString, %class.SkString* %62, i64 %60, i32 0, i32 0
  %64 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %63, align 8
  %65 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %64, i64 0, i32 2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8* %65) #5
  %66 = add nuw nsw i64 %60, 1
  %67 = load i64, i64* %41, align 8
  %68 = lshr i64 %67, 1
  %69 = and i64 %68, 2147483647
  %70 = icmp ult i64 %66, %69
  %71 = load %class.SkString*, %class.SkString** %3, align 8
  %72 = getelementptr inbounds %class.SkString, %class.SkString* %71, i64 3
  br i1 %70, label %59, label %73

73:                                               ; preds = %59, %45
  %74 = phi %class.SkString* [ %58, %45 ], [ %72, %59 ]
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0)) #5
  br label %75

75:                                               ; preds = %73, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLShaderBuilder8finalizeEj(%class.GrGLSLShaderBuilder*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN19GrGLSLShaderBuilder32compileAndAppendLayoutQualifiersEv(%class.GrGLSLShaderBuilder* %0)
  %3 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 1
  %4 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %3, align 8
  %5 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %6 = bitcast i8* %5 to %class.SkString**
  %7 = load %class.SkString*, %class.SkString** %6, align 8
  %8 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 4
  tail call void @_ZNK20GrGLSLProgramBuilder18appendUniformDeclsE13GrShaderFlagsP8SkString(%class.GrGLSLProgramBuilder* %4, i32 %1, %class.SkString* %8) #5
  %9 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9
  %10 = load %class.SkString*, %class.SkString** %6, align 8
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 5
  tail call void @_ZNK19GrGLSLShaderBuilder11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLShaderBuilder* %0, %class.GrTBlockList* dereferenceable(96) %9, %class.SkString* %11)
  %12 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10
  %13 = load %class.SkString*, %class.SkString** %6, align 8
  %14 = getelementptr inbounds %class.SkString, %class.SkString* %13, i64 6
  tail call void @_ZNK19GrGLSLShaderBuilder11appendDeclsERK12GrTBlockListI11GrShaderVarLi1EEP8SkString(%class.GrGLSLShaderBuilder* %0, %class.GrTBlockList* dereferenceable(96) %12, %class.SkString* %14)
  %15 = bitcast %class.GrGLSLShaderBuilder* %0 to void (%class.GrGLSLShaderBuilder*)***
  %16 = load void (%class.GrGLSLShaderBuilder*)**, void (%class.GrGLSLShaderBuilder*)*** %15, align 16
  %17 = getelementptr inbounds void (%class.GrGLSLShaderBuilder*)*, void (%class.GrGLSLShaderBuilder*)** %16, i64 2
  %18 = load void (%class.GrGLSLShaderBuilder*)*, void (%class.GrGLSLShaderBuilder*)** %17, align 8
  tail call void %18(%class.GrGLSLShaderBuilder* %0) #5
  %19 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %20 = load i32, i32* %19, align 8
  %21 = load %class.SkString*, %class.SkString** %6, align 8
  %22 = sext i32 %20 to i64
  %23 = getelementptr inbounds %class.SkString, %class.SkString* %21, i64 %22
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %23, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0)) #5
  %24 = load i32, i32* %19, align 8
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 2, i32 0
  br label %30

28:                                               ; preds = %30, %2
  %29 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 15
  store i8 1, i8* %29, align 4
  ret void

30:                                               ; preds = %30, %26
  %31 = phi i64 [ %40, %30 ], [ 0, %26 ]
  %32 = load %class.SkString*, %class.SkString** %6, align 8
  %33 = getelementptr inbounds %class.SkString, %class.SkString* %32, i64 %31, i32 0, i32 0
  %34 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %33, align 8
  %35 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %34, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %34, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %27, i8* %35, i64 %38) #5
  %40 = add nuw nsw i64 %31, 1
  %41 = load i32, i32* %19, align 8
  %42 = sext i32 %41 to i64
  %43 = icmp slt i64 %31, %42
  br i1 %43, label %30, label %28
}

declare void @_ZNK20GrGLSLProgramBuilder18appendUniformDeclsE13GrShaderFlagsP8SkString(%class.GrGLSLProgramBuilder*, i32, %class.SkString*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilderD2Ev(%class.GrGLSLShaderBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV19GrGLSLShaderBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %class.SkString**
  br label %15

11:                                               ; preds = %15, %1
  %12 = phi i64 [ %6, %1 ], [ %20, %15 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %24

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %19, %15 ]
  %17 = load %class.SkString*, %class.SkString** %10, align 8
  %18 = getelementptr inbounds %class.SkString, %class.SkString* %17, i64 %16
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #5
  %19 = add nuw nsw i64 %16, 1
  %20 = load i64, i64* %5, align 8
  %21 = lshr i64 %20, 1
  %22 = and i64 %21, 2147483647
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %15, label %11

24:                                               ; preds = %11
  %25 = bitcast i8* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #5
  br label %27

27:                                               ; preds = %11, %24
  %28 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 8
  %29 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 13, i64 0, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 4294967294
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %109, label %98

34:                                               ; preds = %116
  %35 = bitcast i8* %125 to %"class.std::__1::unique_ptr"**
  br label %40

36:                                               ; preds = %51, %116
  %37 = phi i64 [ %128, %116 ], [ %53, %51 ]
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %60, label %57

40:                                               ; preds = %51, %34
  %41 = phi i64 [ 0, %34 ], [ %52, %51 ]
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 %41, i32 0, i32 0, i32 0
  %44 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %43, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %43, align 8
  %45 = icmp eq %"class.SkSL::Statement"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.SkSL::Statement"* %44 to void (%"class.SkSL::Statement"*)***
  %48 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, i64 1
  %50 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %49, align 8
  tail call void %50(%"class.SkSL::Statement"* nonnull %44) #5
  br label %51

51:                                               ; preds = %46, %40
  %52 = add nuw nsw i64 %41, 1
  %53 = load i64, i64* %127, align 8
  %54 = lshr i64 %53, 1
  %55 = and i64 %54, 2147483647
  %56 = icmp ult i64 %52, %55
  br i1 %56, label %40, label %36

57:                                               ; preds = %36
  %58 = bitcast i8* %125 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %59) #5
  br label %60

60:                                               ; preds = %36, %57
  %61 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 6
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %61) #5
  %62 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %62) #5
  %63 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %63) #5
  %64 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %65 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 128
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 4294967294
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %60
  %71 = bitcast i8* %64 to %class.SkString**
  br label %76

72:                                               ; preds = %76, %60
  %73 = phi i64 [ %67, %60 ], [ %81, %76 ]
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %88, label %85

76:                                               ; preds = %76, %70
  %77 = phi i64 [ 0, %70 ], [ %80, %76 ]
  %78 = load %class.SkString*, %class.SkString** %71, align 8
  %79 = getelementptr inbounds %class.SkString, %class.SkString* %78, i64 %77
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %79) #5
  %80 = add nuw nsw i64 %77, 1
  %81 = load i64, i64* %66, align 8
  %82 = lshr i64 %81, 1
  %83 = and i64 %82, 2147483647
  %84 = icmp ult i64 %80, %83
  br i1 %84, label %76, label %72

85:                                               ; preds = %72
  %86 = bitcast i8* %64 to i8**
  %87 = load i8*, i8** %86, align 8
  tail call void @_Z7sk_freePv(i8* %87) #5
  br label %88

88:                                               ; preds = %72, %85
  %89 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 2, i32 0
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #8
  br label %97

97:                                               ; preds = %88, %94
  ret void

98:                                               ; preds = %27
  %99 = bitcast i8* %28 to %class.SkString**
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi i64 [ 0, %98 ], [ %104, %100 ]
  %102 = load %class.SkString*, %class.SkString** %99, align 8
  %103 = getelementptr inbounds %class.SkString, %class.SkString* %102, i64 %101
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %103) #5
  %104 = add nuw nsw i64 %101, 1
  %105 = load i64, i64* %30, align 8
  %106 = lshr i64 %105, 1
  %107 = and i64 %106, 2147483647
  %108 = icmp ult i64 %104, %107
  br i1 %108, label %100, label %109

109:                                              ; preds = %100, %27
  %110 = phi i64 [ %31, %27 ], [ %105, %100 ]
  %111 = and i64 %110, 1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast i8* %28 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_Z7sk_freePv(i8* %115) #5
  br label %116

116:                                              ; preds = %113, %109
  %117 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %117) #5
  %118 = bitcast %class.GrTBlockList* %117 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %118) #5
  %119 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 10, i32 0, i32 0, i64 16
  %120 = bitcast i8* %119 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %120) #5
  %121 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9
  tail call void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList* %121) #5
  %122 = bitcast %class.GrTBlockList* %121 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %122) #5
  %123 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 9, i32 0, i32 0, i64 16
  %124 = bitcast i8* %123 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %124) #5
  %125 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %126 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %127 = bitcast i8* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 4294967294
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %36, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilderD0Ev(%class.GrGLSLShaderBuilder*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK9GrSwizzle8asStringEv(%class.SkString* sret, %class.GrSwizzle*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #5
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #5
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #5
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #5
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #1

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkString*
  %55 = load %class.SkString*, %class.SkString** %49, align 8
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %55, i64 %51
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %54, %class.SkString* dereferenceable(8) %56) #5
  %57 = load %class.SkString*, %class.SkString** %49, align 8
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %57, i64 %51
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #5
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #5
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator*, i32, i64, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.4*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.4, %class.SkTArray.4* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.4, %class.SkTArray.4* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #5
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.4* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #5
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListI11GrShaderVarLi1EE5resetEv(%class.GrTBlockList*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrTBlockList* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !21
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !21
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !21
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !21
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !21
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !21
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !21
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %59, %79, %1
  %41 = bitcast %class.GrTBlockList* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #5
  ret void

42:                                               ; preds = %75, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %76, %75 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %77, %75 ]
  %45 = phi i32 [ %22, %19 ], [ %78, %75 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %57, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 32
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #5
  %53 = getelementptr inbounds i8, i8* %50, i64 24
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #5
  %55 = getelementptr inbounds i8, i8* %50, i64 16
  %56 = bitcast i8* %55 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %56) #5
  %57 = add i32 %48, -40
  %58 = icmp slt i32 %57, 32
  br i1 %58, label %59, label %47

59:                                               ; preds = %47
  %60 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %60, label %40, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %63 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %62, align 8
  %64 = icmp eq %"class.GrBlockAllocator::Block"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %63, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 0
  %69 = select i1 %68, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %63
  br label %70

70:                                               ; preds = %65, %61
  %71 = phi %"class.GrBlockAllocator::Block"* [ null, %61 ], [ %69, %65 ]
  %72 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %91, %70
  %76 = phi %"class.GrBlockAllocator::Block"* [ %44, %70 ], [ %80, %91 ]
  %77 = phi %"class.GrBlockAllocator::Block"* [ %71, %70 ], [ %92, %91 ]
  %78 = phi i32 [ %73, %70 ], [ %94, %91 ]
  br label %42

79:                                               ; preds = %70, %91
  %80 = phi %"class.GrBlockAllocator::Block"* [ %92, %91 ], [ %71, %70 ]
  %81 = icmp eq %"class.GrBlockAllocator::Block"* %80, null
  br i1 %81, label %40, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 1
  %84 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %83, align 8
  %85 = icmp eq %"class.GrBlockAllocator::Block"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %84, i64 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %84
  br label %91

91:                                               ; preds = %86, %82
  %92 = phi %"class.GrBlockAllocator::Block"* [ null, %82 ], [ %90, %86 ]
  %93 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %80, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %79, label %75
}

declare void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK20GrGLSLProgramBuilder14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE: argument 0"}
!4 = distinct !{!4, !"_ZNK20GrGLSLProgramBuilder14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK20GrGLSLProgramBuilder19inputSamplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE: argument 0"}
!7 = distinct !{!7, !"_ZNK20GrGLSLProgramBuilder19inputSamplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc: argument 0"}
!11 = distinct !{!11, !"_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc: argument 0"}
!14 = distinct !{!14, !"_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc: argument 0"}
!17 = distinct !{!17, !"_ZN19GrGLSLShaderBuilder22getMangledFunctionNameEPKc"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK18BlockIndexIteratorIRK11GrShaderVarLb1ELb1EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemES8_iEEE5beginEv: argument 0"}
!20 = distinct !{!20, !"_ZNK18BlockIndexIteratorIRK11GrShaderVarLb1ELb1EXadL_ZN12GrTBlockListIS0_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_4LastES8_EEXadL_ZNS4_9IncrementES8_iEEXadL_ZNS4_7GetItemES8_iEEE5beginEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv: argument 0"}
!23 = distinct !{!23, !"_ZNK18BlockIndexIteratorIR11GrShaderVarLb0ELb0EXadL_ZN12GrTBlockListIS0_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS3_5FirstES7_EEXadL_ZNS3_9DecrementES7_iEEXadL_ZNS3_7GetItemEPS5_iEEE5beginEv"}
