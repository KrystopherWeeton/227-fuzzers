; ModuleID = '../../third_party/blink/renderer/modules/webaudio/audio_node.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/audio_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.241", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.179", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.182", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"struct.std::__1::pair.209"*, i32, i32 }
%"struct.std::__1::pair.209" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.417" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.241" = type { %"struct.std::__1::__atomic_base.242" }
%"struct.std::__1::__atomic_base.242" = type { %"struct.std::__1::__cxx_atomic_impl.243" }
%"struct.std::__1::__cxx_atomic_impl.243" = type { %"struct.std::__1::__cxx_atomic_base_impl.244" }
%"struct.std::__1::__cxx_atomic_base_impl.244" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.54" }
%"class.blink::PersistentBase.54" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.59" }
%"class.WTF::HashTable.59" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.61", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.364", %"class.WTF::Vector.375", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.362" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.24", %class.scoped_refptr.262, %class.scoped_refptr.276, %"class.blink::HeapVector.327", %"class.blink::HeapVector.344" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.10"* }
%"class.blink::HeapVector.10" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.11"* }
%"class.WTF::Vector.11" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.13", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.19", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.437", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.439", %"class.blink::Member.443", %"class.blink::Member.445", %"class.blink::Member.447", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::HeapObserverSet.457", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::Member.483", %"class.blink::Member.485", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.516", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.524", %"class.std::__1::unique_ptr.530", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.424" }
%"class.blink::HeapHashMap.424" = type { %"class.WTF::HashMap.427" }
%"class.WTF::HashMap.427" = type { %"class.WTF::HashTable.428" }
%"class.WTF::HashTable.428" = type <{ %"struct.WTF::KeyValuePair.430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.430" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.431" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.17", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.457" = type { i32, [4 x i8], %"class.blink::HeapHashSet.458" }
%"class.blink::HeapHashSet.458" = type { %"class.WTF::HashSet.461" }
%"class.WTF::HashSet.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"class.blink::WeakMember.464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.464" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.487" }
%"class.WTF::Deque.487" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.490" }
%"class.WTF::VectorBuffer.490" = type { %"class.WTF::VectorBufferBase.491" }
%"class.WTF::VectorBufferBase.491" = type { %"class.std::__1::unique_ptr.492"*, i32, i32 }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.498", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.498" = type { %"class.std::__1::__bitset.499" }
%"class.std::__1::__bitset.499" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.500", i64, %"class.absl::optional.505", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.500" = type { %"class.absl::optional_internal::optional_data.501" }
%"class.absl::optional_internal::optional_data.501" = type { %"class.absl::optional_internal::optional_data_base.502" }
%"class.absl::optional_internal::optional_data_base.502" = type { %"class.absl::optional_internal::optional_data_dtor_base.503" }
%"class.absl::optional_internal::optional_data_dtor_base.503" = type { i8, %union.anon.504 }
%union.anon.504 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.505" = type { %"class.absl::optional_internal::optional_data.506" }
%"class.absl::optional_internal::optional_data.506" = type { %"class.absl::optional_internal::optional_data_base.507" }
%"class.absl::optional_internal::optional_data_base.507" = type { %"class.absl::optional_internal::optional_data_dtor_base.508" }
%"class.absl::optional_internal::optional_data_dtor_base.508" = type { i8, %union.anon.509 }
%union.anon.509 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.510" }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.516" = type { %"class.WTF::HashSet.519" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.blink::WeakMember.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.522" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.523 }
%class.scoped_refptr.523 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.266", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.266" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.267" }
%"struct.std::__1::atomic.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i8 }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.35", %"class.blink::Member.36", %"class.blink::HeapVector.38", i8, %class.scoped_refptr.258, i8, %"class.blink::Member.260", i8, %class.scoped_refptr.262, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.316", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.322", %class.scoped_refptr.324, %"class.blink::Member.325", %"class.blink::WorkerThread"* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.26" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.28" }
%"class.blink::HeapHashSet.28" = type { %"class.WTF::HashSet.31" }
%"class.WTF::HashSet.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"class.blink::WeakMember.34"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.34" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.35" = type { i8 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.48", i32, %"class.blink::Member.49", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.250", %"class.blink::SelfKeepAlive.254" }
%"class.blink::ThreadState::PrefinalizerRegistration.48" = type { i8 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.53, %"class.blink::Member.245", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.53 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.247" }
%"class.blink::Persistent.247" = type { %"class.blink::PersistentBase.248" }
%"class.blink::PersistentBase.248" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.49", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.250", %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.250" = type { %"class.v8::TracedReference.251" }
%"class.v8::TracedReference.251" = type { %"class.v8::BasicTracedReference.252" }
%"class.v8::BasicTracedReference.252" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.254" = type { %"class.blink::Persistent.255" }
%"class.blink::Persistent.255" = type { %"class.blink::PersistentBase.256" }
%"class.blink::PersistentBase.256" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%class.scoped_refptr.258 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.259" }>
%"class.base::RefCountedThreadSafe.259" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.316" = type { %"class.WTF::HashSet.319" }
%"class.WTF::HashSet.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"class.blink::Member.44"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type opaque
%class.scoped_refptr.324 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.99", i8, [7 x i8] }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.262, %"class.WTF::Vector.364", %"class.WTF::Vector.375", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%class.scoped_refptr.276 = type { %"class.blink::AudioHandler"* }
%"class.blink::HeapVector.327" = type { %"class.WTF::Vector.330" }
%"class.WTF::Vector.330" = type { %"class.WTF::VectorBuffer.331" }
%"class.WTF::VectorBuffer.331" = type { %"class.WTF::VectorBufferBase.332" }
%"class.WTF::VectorBufferBase.332" = type { %"class.blink::Member.333"*, i32, i32 }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::HeapHashSet.335"* }
%"class.blink::HeapHashSet.335" = type { %"class.WTF::HashSet.338" }
%"class.WTF::HashSet.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"class.blink::Member.341"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::AudioNode"* }
%"class.blink::HeapVector.344" = type { %"class.WTF::Vector.347" }
%"class.WTF::Vector.347" = type { %"class.WTF::VectorBuffer.348" }
%"class.WTF::VectorBuffer.348" = type { %"class.WTF::VectorBufferBase.349" }
%"class.WTF::VectorBufferBase.349" = type { %"class.blink::Member.350"*, i32, i32 }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::HeapHashSet.352"* }
%"class.blink::HeapHashSet.352" = type { %"class.WTF::HashSet.355" }
%"class.WTF::HashSet.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"class.blink::Member.358"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::AudioParam"* }
%"class.blink::AudioParam" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %class.scoped_refptr.360, %"class.blink::Member.24", %class.scoped_refptr.262 }
%class.scoped_refptr.360 = type { %"class.blink::AudioParamHandler"* }
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.386", i32, %"class.WTF::String", %"struct.std::__1::atomic.393", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.324, %class.scoped_refptr.294 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.388", i8 }>
%"class.WTF::HashSet.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeOutput" = type { %"class.blink::AudioHandler"*, i32, i32, %class.scoped_refptr.294, %class.scoped_refptr.294, i8, [7 x i8], %"class.WTF::HashSet.308", i8, i8, i32, i32, [4 x i8], %"class.WTF::HashSet.312" }
%"class.WTF::HashSet.308" = type { %"class.WTF::HashTable.309" }
%"class.WTF::HashTable.309" = type <{ %"class.blink::AudioNodeInput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeInput" = type { %"class.blink::AudioSummingJunction.base", %"class.blink::AudioHandler"*, %"class.WTF::HashSet.290", %class.scoped_refptr.294 }
%"class.WTF::HashSet.312" = type { %"class.WTF::HashTable.313" }
%"class.WTF::HashTable.313" = type <{ %"class.blink::AudioParamHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.388" = type { %"class.WTF::VectorBuffer.389" }
%"class.WTF::VectorBuffer.389" = type { %"class.WTF::VectorBufferBase.390" }
%"class.WTF::VectorBufferBase.390" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.WTF::ThreadSafeRefCounted.386" = type { %"class.base::RefCountedThreadSafe.387" }
%"class.base::RefCountedThreadSafe.387" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.393" = type { %"struct.std::__1::__atomic_base.394" }
%"struct.std::__1::__atomic_base.394" = type { %"struct.std::__1::__cxx_atomic_impl.395" }
%"struct.std::__1::__cxx_atomic_impl.395" = type { %"struct.std::__1::__cxx_atomic_base_impl.396" }
%"struct.std::__1::__cxx_atomic_base_impl.396" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.397", %"class.WTF::HashSet.408", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"class.std::__1::unique_ptr.400"*, i32, i32 }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.412", double, float, [4 x i8], %"class.std::__1::unique_ptr.400", i8, [7 x i8] }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { float*, i32, i32 }
%"class.WTF::HashSet.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.294 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.295", i32, %"class.WTF::Vector.297", i32, float }
%"class.WTF::ThreadSafeRefCounted.295" = type { %"class.base::RefCountedThreadSafe.296" }
%"class.base::RefCountedThreadSafe.296" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299", [64 x i8] }
%"class.WTF::VectorBufferBase.299" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.300", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.blink::PersistentNodePtr.362" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.262 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.263", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.272", %"class.WTF::Vector.277", i8, [3 x i8], i32, %"class.WTF::HashSet.282", %"class.WTF::HashSet.282", %"class.WTF::HashSet.286", %"class.WTF::HashSet.290", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", %"class.WTF::Vector.277", i8, [7 x i8], %"class.WTF::HashSet.272", %"class.WTF::Vector.277", %class.scoped_refptr.258, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.263" = type { %"class.base::RefCountedThreadSafe.264" }
%"class.base::RefCountedThreadSafe.264" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashSet.282" = type { %"class.WTF::HashTable.283" }
%"class.WTF::HashTable.283" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.262, %"class.WTF::HashSet.290", %"class.WTF::Vector.388", i8, [7 x i8] }>
%"class.WTF::HashSet.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %class.scoped_refptr.276*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %class.scoped_refptr.276*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"class.std::__1::unique_ptr.367"*, i32, i32 }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::AudioNodeInput"* }
%"class.WTF::Vector.375" = type { %"class.WTF::VectorBuffer.376" }
%"class.WTF::VectorBuffer.376" = type { %"class.WTF::VectorBufferBase.377" }
%"class.WTF::VectorBufferBase.377" = type { %"class.std::__1::unique_ptr.378"*, i32, i32 }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::AudioNodeOutput"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.538 }
%union.anon.538 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.250" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::DeferredTaskHandler::GraphAutoLocker" = type { %"class.blink::DeferredTaskHandler"* }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.697, i32, i8, i8, [2 x i8] }>
%union.anon.697 = type { %"class.WTF::Vector.698" }
%"class.WTF::Vector.698" = type { %"class.WTF::VectorBuffer.699" }
%"class.WTF::VectorBuffer.699" = type { %"class.WTF::VectorBufferBase.700", [16 x i8] }
%"class.WTF::VectorBufferBase.700" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.716", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.716" = type { %"class.std::__1::__vector_base.717" }
%"class.std::__1::__vector_base.717" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.718", i64, i64 }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.729" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.blink::AudioNodeOptions" = type { %"class.blink::IDLDictionaryBase", i8, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::StringAppend.544" = type { %"class.WTF::StringAppend.545", %"class.WTF::String" }
%"class.WTF::StringAppend.545" = type { %"class.WTF::StringAppend.546", i8* }
%"class.WTF::StringAppend.546" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.544", i8* }
%"class.WTF::StringTypeAdapter.784" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.548", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.583", i32, i8, [3 x i8], %"class.blink::HeapVector.585", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.593", %"class.blink::Member.595", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.604", %"class.blink::Member.610", %"class.blink::Member.612", i8, [7 x i8] }>
%"class.blink::Supplementable.548" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.549" }
%"class.blink::HeapHashMap.549" = type { %"class.WTF::HashMap.552" }
%"class.WTF::HashMap.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"struct.WTF::KeyValuePair.555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.555" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.556" }
%"class.blink::Supplementable.556" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.557" }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type { i8*, %"class.blink::Member.680" }
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::Supplement.682"* }
%"class.blink::Supplement.682" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.683" }
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.564, %"class.std::__1::unique_ptr.565", %"class.std::__1::unique_ptr.565", %"class.std::__1::unique_ptr.571", %"class.std::__1::unique_ptr.571", %"class.blink::Member.577", i32, [4 x i8], %"class.WTF::HashSet.579", i32, i32 }
%class.scoped_refptr.564 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.585" = type { %"class.WTF::Vector.588" }
%"class.WTF::Vector.588" = type { %"class.WTF::VectorBuffer.589" }
%"class.WTF::VectorBuffer.589" = type { %"class.WTF::VectorBufferBase.590" }
%"class.WTF::VectorBufferBase.590" = type { %"class.blink::Member.591"*, i32, i32 }
%"class.blink::Member.591" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.597", i32, i32 }
%"class.blink::HeapHashMap.597" = type { %"class.WTF::HashMap.600" }
%"class.WTF::HashMap.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type opaque
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.616", %"class.blink::Member.618", %"class.blink::Member.616", %"class.blink::Member.616", %"class.blink::Member.620" }
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.624", %"class.blink::Member.626", %"class.blink::Member.618", %"class.blink::Member.628", %"class.blink::Member.628", %"class.blink::Member.652", %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.661", %"class.blink::HeapVector.663" }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.632" }
%"class.blink::HeapHashMap.632" = type { %"class.WTF::HashMap.635" }
%"class.WTF::HashMap.635" = type { %"class.WTF::HashTable.636" }
%"class.WTF::HashTable.636" = type <{ %"struct.WTF::KeyValuePair.638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.638" = type { %"class.WTF::AtomicString", %"class.blink::Member.639" }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.643", i32, %"class.blink::HeapVector.645" }
%"class.blink::Member.643" = type { %"class.blink::MemberBase.644" }
%"class.blink::MemberBase.644" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.645" = type { %"class.WTF::Vector.648" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.blink::Member.643"*, i32, i32 }
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.658" }
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::HeapHashMap.660"* }
%"class.blink::HeapHashMap.660" = type opaque
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.663" = type { %"class.WTF::Vector.666" }
%"class.WTF::Vector.666" = type { %"class.WTF::VectorBuffer.667" }
%"class.WTF::VectorBuffer.667" = type { %"class.WTF::VectorBufferBase.668" }
%"class.WTF::VectorBufferBase.668" = type { %"class.blink::Member.669"*, i32, i32 }
%"class.blink::Member.669" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::Node"* }
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.673" }
%"class.absl::optional.673" = type { %"class.absl::optional_internal::optional_data.674" }
%"class.absl::optional_internal::optional_data.674" = type { %"class.absl::optional_internal::optional_data_base.675" }
%"class.absl::optional_internal::optional_data_base.675" = type { %"class.absl::optional_internal::optional_data_dtor_base.676" }
%"class.absl::optional_internal::optional_data_dtor_base.676" = type { i8, %union.anon.677 }
%union.anon.677 = type { i64 }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.678", i8, [7 x i8] }>
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::EventListener"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705", [16 x i8] }
%"class.WTF::VectorBufferBase.705" = type { i16*, i32, i32 }
%"class.WTF::StringTypeAdapter.786" = type { %"class.WTF::StringTypeAdapter.787" }
%"class.WTF::StringTypeAdapter.787" = type { %"class.WTF::StringView" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.775" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.763" = type { i8 }

$_ZNSt3__110unique_ptrIN5blink15AudioNodeOutputENS_14default_deleteIS2_EEED2Ev = comdat any

$_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIPvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSF_yjySF_OT_SF_OT0_ = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_9AudioNodeEEC2EPS2_ = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj = comdat any

$_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink9AudioNode18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZN5blink9AudioNode18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9AudioNodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_9AudioNodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14AudioNodeInputENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink15AudioNodeOutputENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink10TraceTraitINS_16BaseAudioContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9AudioNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIDnEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS1_INS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEEENS5_12VectorTraitsISB_EEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIDnEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS1_INS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEEENS5_12VectorTraitsISB_EEE14AllocateObjectISE_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE7GetNameEPKv = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink12AudioHandlerE = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandlerD2Ev to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler7DisposeEv to i8*), i8* bitcast (%"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler7ContextEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler10InitializeEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler12UninitializeEv to i8*), i8* bitcast (i32 (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler22NumberOfOutputChannelsEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler18ProcessIfNecessaryEj to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.blink::AudioNodeInput"*)* @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::AudioHandler"*)* @_ZNK5blink12AudioHandler17PropagatesSilenceEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler15SetChannelCountEjRNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv to i8*), i8* bitcast (void (%"class.blink::AudioHandler"*, i32)* @_ZN5blink12AudioHandler10PullInputsEj to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"%s({sample_rate=%0.f})\00", align 1
@__func__._ZN5blink12AudioHandlerC2ENS0_8NodeTypeERNS_9AudioNodeEf = private unnamed_addr constant [13 x i8] c"AudioHandler\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"AudioDestinationNode\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"OscillatorNode\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"AudioBufferSourceNode\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"MediaElementAudioSourceNode\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"MediaStreamAudioDestinationNode\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"MediaStreamAudioSourceNode\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"ScriptProcessorNode\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"BiquadFilterNode\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"PannerNode\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"StereoPannerNode\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"ConvolverNode\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"DelayNode\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"GainNode\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"ChannelSplitterNode\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"ChannelMergerNode\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"AnalyserNode\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"DynamicsCompressorNode\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"WaveShaperNode\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"IIRFilterNode\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"ConstantSourceNode\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"AudioWorkletNode\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"UnknownNode\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"channel count\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"clamped-max\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"explicit\00", align 1
@.str.27 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"speakers\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"discrete\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.30 = private unnamed_addr constant [33 x i8] c"AudioHandler::ProcessIfNecessary\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"node type\00", align 1
@.str.33 = private unnamed_addr constant [40 x i8] c"%s => (processing is alive [frames=%u])\00", align 1
@__func__._ZN5blink12AudioHandler18ProcessIfNecessaryEj = private unnamed_addr constant [19 x i8] c"ProcessIfNecessary\00", align 1
@.str.34 = private unnamed_addr constant [33 x i8] c"[WA]AH::%s [type=%s, this=0x%lX]\00", align 1
@_ZTVN5blink9AudioNodeE = hidden unnamed_addr constant { [29 x i8*], [5 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::AudioNode"*)* @_ZN5blink9AudioNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::AudioNode"*)* @_ZN5blink9AudioNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)* @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::AudioNode"*)* @_ZNK5blink9AudioNode19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink9AudioNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.35 = private unnamed_addr constant [26 x i8] c"invalid destination node.\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"output index (\00", align 1
@.str.37 = private unnamed_addr constant [30 x i8] c") exceeds number of outputs (\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"input index (\00", align 1
@.str.40 = private unnamed_addr constant [29 x i8] c") exceeds number of inputs (\00", align 1
@.str.41 = private unnamed_addr constant [72 x i8] c"cannot connect to a destination belonging to a different audio context.\00", align 1
@.str.42 = private unnamed_addr constant [85 x i8] c"cannot connect a ScriptProcessorNode with 0 output channels to any destination node.\00", align 1
@.str.43 = private unnamed_addr constant [95 x i8] c"%s({output=[index:%u, type:%s, handler:0x%lX]} --> {input=[index:%u, type:%s, handler:0x%lX]})\00", align 1
@__func__._ZN5blink9AudioNode7connectEPS0_jjRNS_14ExceptionStateE = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"invalid AudioParam.\00", align 1
@.str.45 = private unnamed_addr constant [72 x i8] c"cannot connect to an AudioParam belonging to a different audio context.\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"output index\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"the given destination is not connected.\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"output (\00", align 1
@.str.49 = private unnamed_addr constant [45 x i8] c") is not connected to the given destination.\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"input index\00", align 1
@.str.51 = private unnamed_addr constant [34 x i8] c") is not connected to the input (\00", align 1
@.str.52 = private unnamed_addr constant [22 x i8] c") of the destination.\00", align 1
@.str.53 = private unnamed_addr constant [39 x i8] c"the given AudioParam is not connected.\00", align 1
@.str.54 = private unnamed_addr constant [51 x i8] c"specified destination AudioParam and node output (\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c") are not connected.\00", align 1
@_ZN5blink18event_target_names10kAudioNodeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.56 = private unnamed_addr constant [11 x i8] c"[WA]AN::%s\00", align 1
@_ZN5blink16InstanceCounters9counters_E = external global [0 x %"struct.std::__1::atomic"], align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.57 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.58 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink20InspectorHelperMixinE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink9AudioNode18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.59 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.60 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@.str.61 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.62 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.63 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.64 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [141 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::AudioNodeInput, std::__1::default_delete<blink::AudioNodeInput> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [143 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::AudioNodeOutput, std::__1::default_delete<blink::AudioNodeOutput> >]\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"The \00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c" provided (\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c") is outside the range \00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.71 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.72 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.73 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.74 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_6MemberINS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [186 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashSet<blink::Member<blink::AudioNode>, WTF::MemberHash<blink::AudioNode>, WTF::HashTraits<blink::Member<blink::AudioNode> > >]\00", align 1
@.str.75 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.76 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.77 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.78 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.79 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.81 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_9AudioNodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [341 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::AudioNode>, blink::Member<blink::AudioNode>, WTF::IdentityExtractor, WTF::MemberHash<blink::AudioNode>, WTF::HashTraits<blink::Member<blink::AudioNode> >, WTF::HashTraits<blink::Member<blink::AudioNode> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_6MemberINS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [189 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashSet<blink::Member<blink::AudioParam>, WTF::MemberHash<blink::AudioParam>, WTF::HashTraits<blink::Member<blink::AudioParam> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_10AudioParamEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [346 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::AudioParam>, blink::Member<blink::AudioParam>, WTF::IdentityExtractor, WTF::MemberHash<blink::AudioParam>, WTF::HashTraits<blink::Member<blink::AudioParam> >, WTF::HashTraits<blink::Member<blink::AudioParam> >, blink::HeapAllocator> >]\00", align 1
@.str.82 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.83 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HeapHashSetINS3_INS1_9AudioNodeEEENS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEENS_12VectorTraitsISC_EEEEEEPKcv = private unnamed_addr constant [405 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HeapHashSet<blink::Member<blink::AudioNode>, WTF::MemberHash<blink::AudioNode>, WTF::HashTraits<blink::Member<blink::AudioNode> > > >, WTF::VectorTraits<blink::Member<blink::HeapHashSet<blink::Member<blink::AudioNode>, WTF::MemberHash<blink::AudioNode>, WTF::HashTraits<blink::Member<blink::AudioNode> > > > > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HeapHashSetINS3_INS1_10AudioParamEEENS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEENS_12VectorTraitsISC_EEEEEEPKcv = private unnamed_addr constant [411 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HeapHashSet<blink::Member<blink::AudioParam>, WTF::MemberHash<blink::AudioParam>, WTF::HashTraits<blink::Member<blink::AudioParam> > > >, WTF::VectorTraits<blink::Member<blink::HeapHashSet<blink::Member<blink::AudioParam>, WTF::MemberHash<blink::AudioParam>, WTF::HashTraits<blink::Member<blink::AudioParam> > > > > >]\00", align 1

@_ZN5blink12AudioHandlerD1Ev = hidden unnamed_addr alias void (%"class.blink::AudioHandler"*), void (%"class.blink::AudioHandler"*)* @_ZN5blink12AudioHandlerD2Ev
@_ZN5blink9AudioNodeD1Ev = hidden unnamed_addr alias void (%"class.blink::AudioNode"*), void (%"class.blink::AudioNode"*)* @_ZN5blink9AudioNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandlerC2ENS0_8NodeTypeERNS_9AudioNodeEf(%"class.blink::AudioHandler"*, i32, %"class.blink::AudioNode"* dereferenceable(168), float) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink12AudioHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 3
  %10 = bitcast double* %9 to <2 x double>*
  store <2 x double> <double -1.000000e+00, double 0.000000e+00>, <2 x double>* %10, align 8
  %11 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 5
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 7
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 8
  %14 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %13, i64 0, i32 0, i32 0
  store %"class.blink::AudioNode"* %2, %"class.blink::AudioNode"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %16, align 8
  %17 = ptrtoint %"class.blink::AudioNode"* %2 to i64
  switch i64 %17, label %18 [
    i64 0, label %44
    i64 -1, label %44
  ]

18:                                               ; preds = %4
  %19 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %20 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %19, i64 0, i32 1
  %21 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #11
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %18
  %24 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %20, i8* %24) #11
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i8* [ %24, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to %"class.blink::ThreadState"**
  %28 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  %33 = icmp eq %"class.blink::PersistentNode"* %32, null
  br i1 %33, label %34, label %37, !prof !2

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %35) #11
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi %"class.blink::PersistentNode"* [ %36, %34 ], [ %32, %25 ]
  %39 = bitcast %"class.blink::PersistentNode"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::PersistentRegion"* %30 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %"class.blink::PersistentNode"* %38 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %14, %"class.blink::PersistentBase"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9AudioNodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %43, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** %16, align 8
  br label %44

44:                                               ; preds = %4, %4, %37
  %45 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 9
  %46 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %2, i64 0, i32 3, i32 0, i32 0
  %47 = bitcast %"class.blink::BaseAudioContext"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::UntracedMember"* %45 to i64*
  store i64 %48, i64* %49, align 8
  %50 = inttoptr i64 %48 to %"class.blink::BaseAudioContext"*
  %51 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %50, i64 0, i32 12, i32 0
  %52 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 10, i32 0
  store %"class.blink::DeferredTaskHandler"* %52, %"class.blink::DeferredTaskHandler"** %53, align 8
  %54 = icmp eq %"class.blink::DeferredTaskHandler"* %52, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.61, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.62, i64 0, i64 0)) #11
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  br label %62

62:                                               ; preds = %44, %55, %59
  %63 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11
  %64 = bitcast %"class.WTF::Vector.364"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 38, i1 false)
  store i32 %1, i32* %12, align 4
  %65 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 17
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 2, i32 0>, <4 x i32>* %66, align 8
  %67 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 21
  store i32 0, i32* %67, align 8
  %68 = atomicrmw add i32* getelementptr inbounds ([0 x %"struct.std::__1::atomic"], [0 x %"struct.std::__1::atomic"]* @_ZN5blink16InstanceCounters9counters_E, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %69 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #11
  %70 = fpext float %3 to double
  %71 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__._ZN5blink12AudioHandlerC2ENS0_8NodeTypeERNS_9AudioNodeEf, i64 0, i64 0), double %70) #11
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %72, align 8
  call void @_ZN5blink12AudioHandler14SendLogMessageERKN3WTF6StringE(%"class.blink::AudioHandler"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %62, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #11
  %89 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %46, align 8
  call void @_ZNK5blink16BaseAudioContext19WarnIfContextClosedEPKNS_12AudioHandlerE(%"class.blink::BaseAudioContext"* %89, %"class.blink::AudioHandler"* %0) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::BaseAudioContext"* @_ZNK5blink9AudioNode7contextEv(%"class.blink::AudioNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %2, align 8
  ret %"class.blink::BaseAudioContext"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12AudioHandler11SetNodeTypeENS0_8NodeTypeE(%"class.blink::AudioHandler"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 7
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12AudioHandler27SetInternalChannelCountModeENS0_16ChannelCountModeE(%"class.blink::AudioHandler"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 17
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 20
  store i32 %1, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12AudioHandler32SetInternalChannelInterpretationENS_8AudioBus21ChannelInterpretationE(%"class.blink::AudioHandler"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 18
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 21
  store i32 %1, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler14SendLogMessageERKN3WTF6StringE(%"class.blink::AudioHandler"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %1, i32 0) #11
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = select i1 %14, i8* %16, i8* %10
  %18 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = call %"class.WTF::StringImpl"* @_ZNK5blink12AudioHandler12NodeTypeNameEv(%"class.blink::AudioHandler"* %0)
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* nonnull %7, i32 0) #11
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* %18
  %29 = ptrtoint %"class.blink::AudioHandler"* %0 to i64
  %30 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34, i64 0, i64 0), i8* %17, i8* %28, i64 %29) #11
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0) #11
  call void @_ZN5blink16WebRtcLogMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %32 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #17
  br label %39

39:                                               ; preds = %2, %36
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #11
  br label %55

55:                                               ; preds = %39, %51, %54
  %56 = load i8, i8* %23, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %55, %58
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #11
  br label %76

76:                                               ; preds = %60, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %77 = load i8, i8* %12, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %80) #17
  br label %81

81:                                               ; preds = %76, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNK5blink16BaseAudioContext19WarnIfContextClosedEPKNS_12AudioHandlerE(%"class.blink::BaseAudioContext"*, %"class.blink::AudioHandler"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandlerD2Ev(%"class.blink::AudioHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink12AudioHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = atomicrmw sub i32* getelementptr inbounds ([0 x %"struct.std::__1::atomic"], [0 x %"struct.std::__1::atomic"]* @_ZN5blink16InstanceCounters9counters_E, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12
  %5 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.378"* %6, null
  br i1 %7, label %25, label %8, !prof !3

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::unique_ptr.378"* %6 to i8*
  %10 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13, !prof !2

13:                                               ; preds = %8
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %6, i64 %14
  br label %16

16:                                               ; preds = %16, %13
  %17 = phi %"class.std::__1::unique_ptr.378"* [ %18, %16 ], [ %6, %13 ]
  tail call void @_ZNSt3__110unique_ptrIN5blink15AudioNodeOutputENS_14default_deleteIS2_EEED2Ev(%"class.std::__1::unique_ptr.378"* %17) #11
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %17, i64 1
  %19 = icmp eq %"class.std::__1::unique_ptr.378"* %18, %15
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  store i32 0, i32* %10, align 4
  %21 = bitcast %"class.WTF::Vector.375"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %8
  %24 = phi i8* [ %22, %20 ], [ %9, %8 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #11
  store %"class.std::__1::unique_ptr.378"* null, %"class.std::__1::unique_ptr.378"** %5, align 8
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11
  %27 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.367"* %28, null
  br i1 %29, label %56, label %30, !prof !3

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::unique_ptr.367"* %28 to i8*
  %32 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %54, label %35, !prof !2

35:                                               ; preds = %30
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %28, i64 %36
  br label %38

38:                                               ; preds = %48, %35
  %39 = phi %"class.std::__1::unique_ptr.367"* [ %49, %48 ], [ %28, %35 ]
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %40, align 8
  store %"class.blink::AudioNodeInput"* null, %"class.blink::AudioNodeInput"** %40, align 8
  %42 = icmp eq %"class.blink::AudioNodeInput"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::AudioNodeInput"* %41 to void (%"class.blink::AudioNodeInput"*)***
  %45 = load void (%"class.blink::AudioNodeInput"*)**, void (%"class.blink::AudioNodeInput"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioNodeInput"*)** %45, i64 1
  %47 = load void (%"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioNodeInput"*)** %46, align 8
  tail call void %47(%"class.blink::AudioNodeInput"* nonnull %41) #11
  br label %48

48:                                               ; preds = %43, %38
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %39, i64 1
  %50 = icmp eq %"class.std::__1::unique_ptr.367"* %49, %37
  br i1 %50, label %51, label %38

51:                                               ; preds = %48
  store i32 0, i32* %32, align 4
  %52 = bitcast %"class.WTF::Vector.364"* %26 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %30
  %55 = phi i8* [ %53, %51 ], [ %31, %30 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #11
  store %"class.std::__1::unique_ptr.367"* null, %"class.std::__1::unique_ptr.367"** %27, align 8
  br label %56

56:                                               ; preds = %25, %54
  %57 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 10, i32 0
  %58 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %57, align 8
  %59 = icmp eq %"class.blink::DeferredTaskHandler"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  tail call void @_ZN5blink19DeferredTaskHandlerD1Ev(%"class.blink::DeferredTaskHandler"* nonnull %58) #11
  %65 = bitcast %"class.blink::DeferredTaskHandler"* %58 to i8*
  tail call void @free(i8* %65) #11
  br label %66

66:                                               ; preds = %56, %60, %64
  %67 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  %68 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %67, align 8
  %69 = icmp eq %"class.blink::PersistentNode"* %68, null
  br i1 %69, label %89, label %70

70:                                               ; preds = %66
  %71 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %72 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %71, i64 0, i32 1
  %73 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %72) #11
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %77, !prof !2

75:                                               ; preds = %70
  %76 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %72, i8* %76) #11
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i8* [ %76, %75 ], [ %73, %70 ]
  %79 = bitcast i8* %78 to %"class.blink::ThreadState"**
  %80 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %80, i64 0, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %81, align 8
  %83 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %67, align 8
  %84 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %82, i64 0, i32 0, i32 0
  %85 = bitcast %"class.blink::PersistentRegion"* %82 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.blink::PersistentNode"* %83 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %83, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %88, align 8
  store %"class.blink::PersistentNode"* %83, %"class.blink::PersistentNode"** %84, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %67, align 8
  br label %89

89:                                               ; preds = %66, %77
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandlerD0Ev(%"class.blink::AudioHandler"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12AudioHandler10InitializeEv(%"class.blink::AudioHandler"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 5
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12AudioHandler12UninitializeEv(%"class.blink::AudioHandler"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 5
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler7DisposeEv(%"class.blink::AudioHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 10, i32 0
  %3 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %2, align 8
  tail call void @_ZN5blink19DeferredTaskHandler29RemoveChangedChannelCountModeEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"* %3, %"class.blink::AudioHandler"* %0) #11
  %4 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %2, align 8
  tail call void @_ZN5blink19DeferredTaskHandler34RemoveChangedChannelInterpretationEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"* %4, %"class.blink::AudioHandler"* %0) #11
  %5 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %2, align 8
  tail call void @_ZN5blink19DeferredTaskHandler23RemoveAutomaticPullNodeEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"* %5, %"class.blink::AudioHandler"* %0) #11
  %6 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %14, %1
  ret void

14:                                               ; preds = %1, %14
  %15 = phi %"class.std::__1::unique_ptr.378"* [ %18, %14 ], [ %7, %1 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %16, align 8
  tail call void @_ZN5blink15AudioNodeOutput7DisposeEv(%"class.blink::AudioNodeOutput"* %17) #11
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %15, i64 1
  %19 = icmp eq %"class.std::__1::unique_ptr.378"* %18, %11
  br i1 %19, label %13, label %14
}

declare void @_ZN5blink19DeferredTaskHandler29RemoveChangedChannelCountModeEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #4

declare void @_ZN5blink19DeferredTaskHandler34RemoveChangedChannelInterpretationEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #4

declare void @_ZN5blink19DeferredTaskHandler23RemoveAutomaticPullNodeEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #4

declare void @_ZN5blink15AudioNodeOutput7DisposeEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioNode"* @_ZNK5blink12AudioHandler7GetNodeEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %2, align 8
  ret %"class.blink::AudioNode"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::BaseAudioContext"* @_ZNK5blink12AudioHandler7ContextEv(%"class.blink::AudioHandler"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %2, align 8
  ret %"class.blink::BaseAudioContext"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AudioHandler12NodeTypeNameEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %26 [
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
    i32 4, label %8
    i32 5, label %9
    i32 6, label %10
    i32 7, label %11
    i32 8, label %12
    i32 9, label %13
    i32 10, label %14
    i32 11, label %15
    i32 12, label %16
    i32 13, label %17
    i32 14, label %18
    i32 15, label %19
    i32 16, label %20
    i32 17, label %21
    i32 18, label %22
    i32 19, label %23
    i32 20, label %24
    i32 21, label %25
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20) #11
  br label %27

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64 14) #11
  br label %27

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i64 21) #11
  br label %27

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i64 27) #11
  br label %27

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i64 31) #11
  br label %27

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i64 26) #11
  br label %27

11:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i64 19) #11
  br label %27

12:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i64 16) #11
  br label %27

13:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i64 10) #11
  br label %27

14:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i64 16) #11
  br label %27

15:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i64 13) #11
  br label %27

16:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i64 9) #11
  br label %27

17:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 8) #11
  br label %27

18:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i64 19) #11
  br label %27

19:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i64 17) #11
  br label %27

20:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i64 12) #11
  br label %27

21:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i64 22) #11
  br label %27

22:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i64 14) #11
  br label %27

23:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0), i64 13) #11
  br label %27

24:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i64 18) #11
  br label %27

25:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i64 16) #11
  br label %27

26:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i64 11) #11
  br label %27

27:                                               ; preds = %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  ret %"class.WTF::StringImpl"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler8AddInputEv(%"class.blink::AudioHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.367", align 8
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11
  %4 = bitcast %"class.std::__1::unique_ptr.367"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = tail call noalias i8* @malloc(i64 104) #11
  %6 = bitcast i8* %5 to %"class.blink::AudioNodeInput"*
  tail call void @_ZN5blink14AudioNodeInputC1ERNS_12AudioHandlerE(%"class.blink::AudioNodeInput"* %6, %"class.blink::AudioHandler"* dereferenceable(136) %0) #11
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr.367"* %2 to i8**
  store i8* %5, i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %23, label %14, !prof !2

14:                                               ; preds = %1
  %15 = ptrtoint i8* %5 to i64
  %16 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %16, align 8
  %18 = zext i32 %10 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %17, i64 %18
  store %"class.blink::AudioNodeInput"* null, %"class.blink::AudioNodeInput"** %7, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.367"* %19 to i64*
  store i64 %15, i64* %20, align 8
  %21 = load i32, i32* %9, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %9, align 4
  br label %24

23:                                               ; preds = %1
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.364"* %3, %"class.std::__1::unique_ptr.367"* nonnull dereferenceable(8) %2) #11
  br label %24

24:                                               ; preds = %14, %23
  %25 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %7, align 8
  store %"class.blink::AudioNodeInput"* null, %"class.blink::AudioNodeInput"** %7, align 8
  %26 = icmp eq %"class.blink::AudioNodeInput"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::AudioNodeInput"* %25 to void (%"class.blink::AudioNodeInput"*)***
  %29 = load void (%"class.blink::AudioNodeInput"*)**, void (%"class.blink::AudioNodeInput"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioNodeInput"*)** %29, i64 1
  %31 = load void (%"class.blink::AudioNodeInput"*)*, void (%"class.blink::AudioNodeInput"*)** %30, align 8
  call void %31(%"class.blink::AudioNodeInput"* nonnull %25) #11
  br label %32

32:                                               ; preds = %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler9AddOutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.378", align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12
  %5 = bitcast %"class.std::__1::unique_ptr.378"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = tail call noalias i8* @malloc(i64 104) #11
  %7 = bitcast i8* %6 to %"class.blink::AudioNodeOutput"*
  tail call void @_ZN5blink15AudioNodeOutputC1EPNS_12AudioHandlerEj(%"class.blink::AudioNodeOutput"* %7, %"class.blink::AudioHandler"* %0, i32 %1) #11
  %8 = bitcast %"class.std::__1::unique_ptr.378"* %3 to i8**
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %24, label %14, !prof !2

14:                                               ; preds = %2
  %15 = ptrtoint i8* %6 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %4, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %17, align 8
  %19 = zext i32 %10 to i64
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %18, i64 %19
  store %"class.blink::AudioNodeOutput"* null, %"class.blink::AudioNodeOutput"** %16, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.378"* %20 to i64*
  store i64 %15, i64* %21, align 8
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %9, align 4
  br label %25

24:                                               ; preds = %2
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.375"* %4, %"class.std::__1::unique_ptr.378"* nonnull dereferenceable(8) %3) #11
  br label %25

25:                                               ; preds = %14, %24
  call void @_ZNSt3__110unique_ptrIN5blink15AudioNodeOutputENS_14default_deleteIS2_EEED2Ev(%"class.std::__1::unique_ptr.378"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %27 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %26, align 8
  call void @_ZN5blink9AudioNode12DidAddOutputEj(%"class.blink::AudioNode"* %27, i32 undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink15AudioNodeOutputENS_14default_deleteIS2_EEED2Ev(%"class.std::__1::unique_ptr.378"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %2, align 8
  store %"class.blink::AudioNodeOutput"* null, %"class.blink::AudioNodeOutput"** %2, align 8
  %4 = icmp eq %"class.blink::AudioNodeOutput"* %3, null
  br i1 %4, label %101, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %3, i64 0, i32 13, i32 0, i32 0
  %7 = load %"class.blink::AudioParamHandler"**, %"class.blink::AudioParamHandler"*** %6, align 8
  %8 = icmp eq %"class.blink::AudioParamHandler"** %7, null
  br i1 %8, label %11, label %9, !prof !3

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AudioParamHandler"** %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #11
  store %"class.blink::AudioParamHandler"** null, %"class.blink::AudioParamHandler"*** %6, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %3, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.blink::AudioNodeInput"**, %"class.blink::AudioNodeInput"*** %12, align 8
  %14 = icmp eq %"class.blink::AudioNodeInput"** %13, null
  br i1 %14, label %17, label %15, !prof !3

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::AudioNodeInput"** %13 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #11
  store %"class.blink::AudioNodeInput"** null, %"class.blink::AudioNodeInput"*** %12, align 8
  br label %17

17:                                               ; preds = %15, %11
  %18 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %3, i64 0, i32 4, i32 0
  %19 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %18, align 8
  %20 = icmp eq %"class.blink::AudioBus"* %19, null
  br i1 %20, label %58, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %19, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %58

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %22, i64 2
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %22, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = bitcast %"class.base::RefCountedThreadSafe.296"* %27 to %"class.blink::AudioChannel"**
  br i1 %30, label %49, label %32, !prof !2

32:                                               ; preds = %26
  %33 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %31, align 8
  %34 = zext i32 %29 to i64
  %35 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %33, i64 %34
  br label %36

36:                                               ; preds = %45, %32
  %37 = phi %"class.blink::AudioChannel"* [ %46, %45 ], [ %33, %32 ]
  %38 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %37, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %38, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %38, align 8
  %40 = icmp eq %"class.blink::AudioArray"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::AudioArray"* %39 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %43) #11
  %44 = bitcast %"class.blink::AudioArray"* %39 to i8*
  tail call void @free(i8* %44) #11
  br label %45

45:                                               ; preds = %41, %36
  %46 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %37, i64 1
  %47 = icmp eq %"class.blink::AudioChannel"* %46, %35
  br i1 %47, label %48, label %36

48:                                               ; preds = %45
  store i32 0, i32* %28, align 4
  br label %49

49:                                               ; preds = %48, %26
  %50 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %31, align 8
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %22, i64 6
  %52 = bitcast %"class.base::RefCountedThreadSafe.296"* %51 to %"class.blink::AudioChannel"*
  %53 = icmp eq %"class.blink::AudioChannel"* %50, %52
  br i1 %53, label %56, label %54, !prof !3

54:                                               ; preds = %49
  %55 = bitcast %"class.base::RefCountedThreadSafe.296"* %27 to %"class.WTF::VectorBuffer.298"*
  tail call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.298"* %55, %"class.blink::AudioChannel"* %50) #11
  br label %56

56:                                               ; preds = %54, %49
  %57 = bitcast %"class.blink::AudioBus"* %19 to i8*
  tail call void @free(i8* %57) #11
  br label %58

58:                                               ; preds = %17, %21, %56
  %59 = getelementptr inbounds %"class.blink::AudioNodeOutput", %"class.blink::AudioNodeOutput"* %3, i64 0, i32 3, i32 0
  %60 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %59, align 8
  %61 = icmp eq %"class.blink::AudioBus"* %60, null
  br i1 %61, label %99, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %60, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %99

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %63, i64 2
  %69 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %63, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  %72 = bitcast %"class.base::RefCountedThreadSafe.296"* %68 to %"class.blink::AudioChannel"**
  br i1 %71, label %90, label %73, !prof !2

73:                                               ; preds = %67
  %74 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %72, align 8
  %75 = zext i32 %70 to i64
  %76 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %74, i64 %75
  br label %77

77:                                               ; preds = %86, %73
  %78 = phi %"class.blink::AudioChannel"* [ %87, %86 ], [ %74, %73 ]
  %79 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %78, i64 0, i32 2, i32 0, i32 0, i32 0
  %80 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %79, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %79, align 8
  %81 = icmp eq %"class.blink::AudioArray"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = bitcast %"class.blink::AudioArray"* %80 to i8**
  %84 = load i8*, i8** %83, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %84) #11
  %85 = bitcast %"class.blink::AudioArray"* %80 to i8*
  tail call void @free(i8* %85) #11
  br label %86

86:                                               ; preds = %82, %77
  %87 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %78, i64 1
  %88 = icmp eq %"class.blink::AudioChannel"* %87, %76
  br i1 %88, label %89, label %77

89:                                               ; preds = %86
  store i32 0, i32* %69, align 4
  br label %90

90:                                               ; preds = %89, %67
  %91 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %72, align 8
  %92 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %63, i64 6
  %93 = bitcast %"class.base::RefCountedThreadSafe.296"* %92 to %"class.blink::AudioChannel"*
  %94 = icmp eq %"class.blink::AudioChannel"* %91, %93
  br i1 %94, label %97, label %95, !prof !3

95:                                               ; preds = %90
  %96 = bitcast %"class.base::RefCountedThreadSafe.296"* %68 to %"class.WTF::VectorBuffer.298"*
  tail call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.298"* %96, %"class.blink::AudioChannel"* %91) #11
  br label %97

97:                                               ; preds = %95, %90
  %98 = bitcast %"class.blink::AudioBus"* %60 to i8*
  tail call void @free(i8* %98) #11
  br label %99

99:                                               ; preds = %58, %62, %97
  %100 = bitcast %"class.blink::AudioNodeOutput"* %3 to i8*
  tail call void @free(i8* %100) #11
  br label %101

101:                                              ; preds = %1, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode12DidAddOutputEj(%"class.blink::AudioNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6, i32 0
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  store i8* null, i8** %3, align 8
  %7 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %25, label %12, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member.333"*, %"class.blink::Member.333"** %13, align 8
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.blink::Member.333", %"class.blink::Member.333"* %14, i64 %15
  %17 = bitcast %"class.blink::Member.333"* %16 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %12
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %22

22:                                               ; preds = %20, %12
  %23 = load i32, i32* %7, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %7, align 4
  br label %26

25:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIDnEEvOT_(%"class.WTF::Vector.330"* %5, i8** nonnull dereferenceable(8) %3) #11
  br label %26

26:                                               ; preds = %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %27 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7, i32 0
  %28 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  store i8* null, i8** %4, align 8
  %29 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %47, label %34, !prof !2

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.350"*, %"class.blink::Member.350"** %35, align 8
  %37 = zext i32 %30 to i64
  %38 = getelementptr inbounds %"class.blink::Member.350", %"class.blink::Member.350"* %36, i64 %37
  %39 = bitcast %"class.blink::Member.350"* %38 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %44

44:                                               ; preds = %42, %34
  %45 = load i32, i32* %29, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %29, align 4
  br label %48

47:                                               ; preds = %26
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIDnEEvOT_(%"class.WTF::Vector.347"* %27, i8** nonnull dereferenceable(8) %4) #11
  br label %48

48:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::AudioNodeInput"* @_ZN5blink12AudioHandler5InputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11
  %4 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.367"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.364"* %3, i32 %1) #11
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %5, align 8
  ret %"class.blink::AudioNodeInput"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZN5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12
  %4 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %3, i32 %1) #11
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %5, align 8
  ret %"class.blink::AudioNodeOutput"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::AudioNodeOutput"* @_ZNK5blink12AudioHandler6OutputEj(%"class.blink::AudioHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12
  %4 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %3, i32 %1) #11
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %5, align 8
  ret %"class.blink::AudioNodeOutput"* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink12AudioHandler12ChannelCountEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 19
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler15SetChannelCountEjRNS_14ExceptionStateE(%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %7, align 8
  %8 = bitcast %"class.blink::AudioHandler"* %0 to %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)***
  %9 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %9, i64 3
  %11 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %10, align 8
  %12 = tail call %"class.blink::BaseAudioContext"* %11(%"class.blink::AudioHandler"* %0) #11
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %4, %"class.blink::BaseAudioContext"* %12) #11
  %13 = add i32 %1, -1
  %14 = icmp ugt i32 %13, 31
  br i1 %14, label %37, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 19
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, %1
  br i1 %18, label %60, label %19

19:                                               ; preds = %15
  store i32 %1, i32* %16, align 8
  %20 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 17
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %60, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %25, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %60, label %31

31:                                               ; preds = %23, %31
  %32 = phi %"class.std::__1::unique_ptr.367"* [ %35, %31 ], [ %25, %23 ]
  %33 = bitcast %"class.std::__1::unique_ptr.367"* %32 to %"class.blink::AudioSummingJunction"**
  %34 = load %"class.blink::AudioSummingJunction"*, %"class.blink::AudioSummingJunction"** %33, align 8
  call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %34) #11
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %32, i64 1
  %36 = icmp eq %"class.std::__1::unique_ptr.367"* %35, %29
  br i1 %36, label %60, label %31

37:                                               ; preds = %3
  %38 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0), i32 %1, i32 1, i32 0, i32 32, i32 0)
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  %41 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %42 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %41, align 8
  %43 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %42, align 8
  call void %43(%"class.blink::ExceptionState"* %2, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #11
  br label %59

59:                                               ; preds = %37, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %60

60:                                               ; preds = %31, %23, %19, %15, %59
  %61 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %7, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %61) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"*, %"class.blink::BaseAudioContext"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler23UpdateChannelsForInputsEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %1
  ret void

10:                                               ; preds = %1, %10
  %11 = phi %"class.std::__1::unique_ptr.367"* [ %14, %10 ], [ %3, %1 ]
  %12 = bitcast %"class.std::__1::unique_ptr.367"* %11 to %"class.blink::AudioSummingJunction"**
  %13 = load %"class.blink::AudioSummingJunction"*, %"class.blink::AudioSummingJunction"** %12, align 8
  tail call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %13) #11
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %11, i64 1
  %15 = icmp eq %"class.std::__1::unique_ptr.367"* %14, %7
  br i1 %15, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::StringBuilder", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = bitcast %"class.WTF::StringBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 1
  %22 = bitcast %union.anon.697* %21 to i8*
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 3
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 4
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %30, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  %31 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = icmp eq i8* %0, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %6
  %34 = call i64 @strlen(i8* nonnull %0) #19
  %35 = icmp ult i64 %34, 4294967296
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %33
  call void @llvm.trap() #11
  unreachable

37:                                               ; preds = %33
  %38 = trunc i64 %34 to i32
  br label %39

39:                                               ; preds = %6, %37
  %40 = phi i32 [ %38, %37 ], [ 0, %6 ]
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %0, i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %40, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  %45 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 11, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  %50 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %54 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %55 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 32, i1 false) #11
  store i8* %52, i8** %53, align 8
  %56 = urem i32 %1, 10
  %57 = udiv i32 %1, 10
  %58 = trunc i32 %56 to i8
  %59 = or i8 %58, 48
  store i8 %59, i8* %52, align 1
  %60 = icmp ugt i32 %1, 9
  br i1 %60, label %61, label %94

61:                                               ; preds = %39
  %62 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %62, i8** %53, align 8
  %63 = urem i32 %57, 10
  %64 = trunc i32 %63 to i8
  %65 = or i8 %64, 48
  store i8 %65, i8* %62, align 2
  %66 = icmp ugt i32 %1, 99
  br i1 %66, label %67, label %92

67:                                               ; preds = %61
  %68 = udiv i32 %1, 100
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %69, i8** %53, align 8
  %70 = urem i32 %68, 10
  %71 = trunc i32 %70 to i8
  %72 = or i8 %71, 48
  store i8 %72, i8* %69, align 1
  %73 = icmp ugt i32 %1, 999
  br i1 %73, label %74, label %90

74:                                               ; preds = %67
  %75 = udiv i32 %1, 1000
  %76 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 8
  store i8* %76, i8** %53, align 8
  %77 = urem i32 %75, 10
  %78 = trunc i32 %77 to i8
  %79 = or i8 %78, 48
  store i8 %79, i8* %76, align 8
  %80 = icmp ugt i32 %1, 9999
  br i1 %80, label %81, label %88

81:                                               ; preds = %74
  %82 = udiv i32 %1, 10000
  %83 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 7
  store i8* %83, i8** %53, align 8
  %84 = urem i32 %82, 10
  %85 = trunc i32 %84 to i8
  %86 = or i8 %85, 48
  store i8 %86, i8* %83, align 1
  %87 = icmp ugt i32 %1, 99999
  br i1 %87, label %96, label %105

88:                                               ; preds = %74
  %89 = ptrtoint i8* %76 to i64
  br label %108

90:                                               ; preds = %67
  %91 = ptrtoint i8* %69 to i64
  br label %108

92:                                               ; preds = %61
  %93 = ptrtoint i8* %62 to i64
  br label %108

94:                                               ; preds = %39
  %95 = ptrtoint i8* %52 to i64
  br label %108

96:                                               ; preds = %81, %96
  %97 = phi i32 [ %99, %96 ], [ %82, %81 ]
  %98 = load i8*, i8** %53, align 8
  %99 = udiv i32 %97, 10
  %100 = getelementptr inbounds i8, i8* %98, i64 -1
  store i8* %100, i8** %53, align 8
  %101 = urem i32 %99, 10
  %102 = trunc i32 %101 to i8
  %103 = or i8 %102, 48
  store i8 %103, i8* %100, align 1
  %104 = icmp ugt i32 %97, 99
  br i1 %104, label %96, label %105

105:                                              ; preds = %96, %81
  %106 = bitcast i8** %53 to i64*
  %107 = load i64, i64* %106, align 8
  br label %108

108:                                              ; preds = %105, %88, %90, %92, %94
  %109 = phi i64 [ %95, %94 ], [ %93, %92 ], [ %91, %90 ], [ %107, %105 ], [ %89, %88 ]
  %110 = ptrtoint i8* %55 to i64
  %111 = sub i64 %110, %109
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %54, align 8
  %113 = inttoptr i64 %109 to i8*
  %114 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %113, i32 %112) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #11
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %116, label %121

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %117, align 8
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %119 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %120, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %141

121:                                              ; preds = %108
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 1
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %127 = bitcast i8** %126 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %124, i32* %128, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %121
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %121
  %138 = phi i32 [ %136, %135 ], [ %134, %121 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #11
  br label %141

141:                                              ; preds = %116, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  %142 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #11
  %143 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %144 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i64 0, i64 0), i8** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 23, i32* %146, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #11
  %147 = icmp eq i32 %3, 1
  %148 = select i1 %147, i8 40, i8 91
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext %148) #11
  %149 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #11
  %150 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #11
  %151 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %152 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %153 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %154 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 32, i1 false) #11
  store i8* %151, i8** %152, align 8
  %155 = urem i32 %2, 10
  %156 = udiv i32 %2, 10
  %157 = trunc i32 %155 to i8
  %158 = or i8 %157, 48
  store i8 %158, i8* %151, align 1
  %159 = icmp ugt i32 %2, 9
  br i1 %159, label %160, label %193

160:                                              ; preds = %141
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %161, i8** %152, align 8
  %162 = urem i32 %156, 10
  %163 = trunc i32 %162 to i8
  %164 = or i8 %163, 48
  store i8 %164, i8* %161, align 2
  %165 = icmp ugt i32 %2, 99
  br i1 %165, label %166, label %191

166:                                              ; preds = %160
  %167 = udiv i32 %2, 100
  %168 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %168, i8** %152, align 8
  %169 = urem i32 %167, 10
  %170 = trunc i32 %169 to i8
  %171 = or i8 %170, 48
  store i8 %171, i8* %168, align 1
  %172 = icmp ugt i32 %2, 999
  br i1 %172, label %173, label %189

173:                                              ; preds = %166
  %174 = udiv i32 %2, 1000
  %175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 8
  store i8* %175, i8** %152, align 8
  %176 = urem i32 %174, 10
  %177 = trunc i32 %176 to i8
  %178 = or i8 %177, 48
  store i8 %178, i8* %175, align 8
  %179 = icmp ugt i32 %2, 9999
  br i1 %179, label %180, label %187

180:                                              ; preds = %173
  %181 = udiv i32 %2, 10000
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 7
  store i8* %182, i8** %152, align 8
  %183 = urem i32 %181, 10
  %184 = trunc i32 %183 to i8
  %185 = or i8 %184, 48
  store i8 %185, i8* %182, align 1
  %186 = icmp ugt i32 %2, 99999
  br i1 %186, label %195, label %204

187:                                              ; preds = %173
  %188 = ptrtoint i8* %175 to i64
  br label %207

189:                                              ; preds = %166
  %190 = ptrtoint i8* %168 to i64
  br label %207

191:                                              ; preds = %160
  %192 = ptrtoint i8* %161 to i64
  br label %207

193:                                              ; preds = %141
  %194 = ptrtoint i8* %151 to i64
  br label %207

195:                                              ; preds = %180, %195
  %196 = phi i32 [ %198, %195 ], [ %181, %180 ]
  %197 = load i8*, i8** %152, align 8
  %198 = udiv i32 %196, 10
  %199 = getelementptr inbounds i8, i8* %197, i64 -1
  store i8* %199, i8** %152, align 8
  %200 = urem i32 %198, 10
  %201 = trunc i32 %200 to i8
  %202 = or i8 %201, 48
  store i8 %202, i8* %199, align 1
  %203 = icmp ugt i32 %196, 99
  br i1 %203, label %195, label %204

204:                                              ; preds = %195, %180
  %205 = bitcast i8** %152 to i64*
  %206 = load i64, i64* %205, align 8
  br label %207

207:                                              ; preds = %204, %187, %189, %191, %193
  %208 = phi i64 [ %194, %193 ], [ %192, %191 ], [ %190, %189 ], [ %206, %204 ], [ %188, %187 ]
  %209 = ptrtoint i8* %154 to i64
  %210 = sub i64 %209, %208
  %211 = trunc i64 %210 to i32
  store i32 %211, i32* %153, align 8
  %212 = inttoptr i64 %208 to i8*
  %213 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %212, i32 %211) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #11
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %215, label %220

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %216, align 8
  %217 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %218 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 0, i32* %219, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  br label %240

220:                                              ; preds = %207
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %221, align 8
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 1
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %226 = bitcast i8** %225 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %224, %"class.WTF::StringImpl"** %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %223, i32* %227, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %220
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %220
  %237 = phi i32 [ %235, %234 ], [ %233, %220 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #11
  br label %240

240:                                              ; preds = %215, %236, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #11
  %241 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #11
  %242 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %243 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0), i8** %244, align 8
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 2, i32* %245, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #11
  %246 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #11
  %247 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %247) #11
  %248 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %249 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %250 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %251 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 -86, i64 32, i1 false) #11
  store i8* %248, i8** %249, align 8
  %252 = urem i32 %4, 10
  %253 = udiv i32 %4, 10
  %254 = trunc i32 %252 to i8
  %255 = or i8 %254, 48
  store i8 %255, i8* %248, align 1
  %256 = icmp ugt i32 %4, 9
  br i1 %256, label %257, label %290

257:                                              ; preds = %240
  %258 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %258, i8** %249, align 8
  %259 = urem i32 %253, 10
  %260 = trunc i32 %259 to i8
  %261 = or i8 %260, 48
  store i8 %261, i8* %258, align 2
  %262 = icmp ugt i32 %4, 99
  br i1 %262, label %263, label %288

263:                                              ; preds = %257
  %264 = udiv i32 %4, 100
  %265 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %265, i8** %249, align 8
  %266 = urem i32 %264, 10
  %267 = trunc i32 %266 to i8
  %268 = or i8 %267, 48
  store i8 %268, i8* %265, align 1
  %269 = icmp ugt i32 %4, 999
  br i1 %269, label %270, label %286

270:                                              ; preds = %263
  %271 = udiv i32 %4, 1000
  %272 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 8
  store i8* %272, i8** %249, align 8
  %273 = urem i32 %271, 10
  %274 = trunc i32 %273 to i8
  %275 = or i8 %274, 48
  store i8 %275, i8* %272, align 8
  %276 = icmp ugt i32 %4, 9999
  br i1 %276, label %277, label %284

277:                                              ; preds = %270
  %278 = udiv i32 %4, 10000
  %279 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 7
  store i8* %279, i8** %249, align 8
  %280 = urem i32 %278, 10
  %281 = trunc i32 %280 to i8
  %282 = or i8 %281, 48
  store i8 %282, i8* %279, align 1
  %283 = icmp ugt i32 %4, 99999
  br i1 %283, label %292, label %301

284:                                              ; preds = %270
  %285 = ptrtoint i8* %272 to i64
  br label %304

286:                                              ; preds = %263
  %287 = ptrtoint i8* %265 to i64
  br label %304

288:                                              ; preds = %257
  %289 = ptrtoint i8* %258 to i64
  br label %304

290:                                              ; preds = %240
  %291 = ptrtoint i8* %248 to i64
  br label %304

292:                                              ; preds = %277, %292
  %293 = phi i32 [ %295, %292 ], [ %278, %277 ]
  %294 = load i8*, i8** %249, align 8
  %295 = udiv i32 %293, 10
  %296 = getelementptr inbounds i8, i8* %294, i64 -1
  store i8* %296, i8** %249, align 8
  %297 = urem i32 %295, 10
  %298 = trunc i32 %297 to i8
  %299 = or i8 %298, 48
  store i8 %299, i8* %296, align 1
  %300 = icmp ugt i32 %293, 99
  br i1 %300, label %292, label %301

301:                                              ; preds = %292, %277
  %302 = bitcast i8** %249 to i64*
  %303 = load i64, i64* %302, align 8
  br label %304

304:                                              ; preds = %301, %284, %286, %288, %290
  %305 = phi i64 [ %291, %290 ], [ %289, %288 ], [ %287, %286 ], [ %303, %301 ], [ %285, %284 ]
  %306 = ptrtoint i8* %251 to i64
  %307 = sub i64 %306, %305
  %308 = trunc i64 %307 to i32
  store i32 %308, i32* %250, align 8
  %309 = inttoptr i64 %305 to i8*
  %310 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %309, i32 %308) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %247) #11
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %312, label %317

312:                                              ; preds = %304
  %313 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %313, align 8
  %314 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %315 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 0, i32* %316, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  br label %337

317:                                              ; preds = %304
  %318 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %310, %"class.WTF::StringImpl"** %318, align 8
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 1
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %323 = bitcast i8** %322 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %321, %"class.WTF::StringImpl"** %323, align 8
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %320, i32* %324, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  br i1 %328, label %331, label %333

331:                                              ; preds = %317
  %332 = add i32 %330, -1
  store i32 %332, i32* %329, align 4
  br label %333

333:                                              ; preds = %331, %317
  %334 = phi i32 [ %332, %331 ], [ %330, %317 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #11
  br label %337

337:                                              ; preds = %312, %333, %336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #11
  %338 = icmp eq i32 %5, 1
  %339 = select i1 %338, i8 41, i8 93
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext %339) #11
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext 46) #11
  %340 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %10) #11
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %10) #11
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %356, label %343

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %352

350:                                              ; preds = %343
  %351 = add i32 %349, -1
  store i32 %351, i32* %348, align 4
  br label %352

352:                                              ; preds = %350, %343
  %353 = phi i32 [ %351, %350 ], [ %349, %343 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #11
  br label %356

356:                                              ; preds = %337, %352, %355
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #11
  ret %"class.WTF::StringImpl"* %340
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12AudioHandler19GetChannelCountModeEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 20
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %8 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i64 3) #11
  br label %9

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i64 11) #11
  br label %9

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), i64 8) #11
  br label %9

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0), i64 0) #11
  br label %9

9:                                                ; preds = %8, %7, %6, %5
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler19SetChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %11 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %10, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %12, align 8
  %13 = bitcast %"class.blink::AudioHandler"* %0 to %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)***
  %14 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %14, i64 3
  %16 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %15, align 8
  %17 = tail call %"class.blink::BaseAudioContext"* %16(%"class.blink::AudioHandler"* %0) #11
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %10, %"class.blink::BaseAudioContext"* %17) #11
  %18 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 17
  %19 = load i32, i32* %18, align 8
  %20 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %25, align 8
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %26, i64* %27, align 8
  br label %36

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 1
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %36

36:                                               ; preds = %28, %24
  %37 = phi i64 [ %35, %28 ], [ %26, %24 ]
  %38 = phi i32 [ %31, %28 ], [ 0, %24 ]
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %38, i32* %39, align 8
  %40 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  %41 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %37, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 3, i32* %43, align 8
  %44 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 20
  store i32 0, i32* %46, align 4
  br label %103

47:                                               ; preds = %36
  %48 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %52, align 8
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %54 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %53, i64* %54, align 8
  br label %63

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %61 = bitcast i8** %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %61, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %63

63:                                               ; preds = %55, %51
  %64 = phi i64 [ %62, %55 ], [ %53, %51 ]
  %65 = phi i32 [ %58, %55 ], [ 0, %51 ]
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %65, i32* %66, align 8
  %67 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #11
  %68 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %64, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 11, i32* %70, align 8
  %71 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11
  br i1 %71, label %72, label %74

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 20
  store i32 1, i32* %73, align 4
  br label %103

74:                                               ; preds = %63
  %75 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %82

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %79, align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %80, i64* %81, align 8
  br label %90

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 1
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %88 = bitcast i8** %87 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %88, align 8
  %89 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %90

90:                                               ; preds = %82, %78
  %91 = phi i64 [ %89, %82 ], [ %80, %78 ]
  %92 = phi i32 [ %85, %82 ], [ 0, %78 ]
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %92, i32* %93, align 8
  %94 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #11
  %95 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %91, i64* %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), i8** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 8, i32* %97, align 8
  %98 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  %99 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 20
  br i1 %98, label %102, label %100

100:                                              ; preds = %90
  %101 = load i32, i32* %99, align 4
  br label %103

102:                                              ; preds = %90
  store i32 2, i32* %99, align 4
  br label %103

103:                                              ; preds = %100, %72, %102, %45
  %104 = phi i32 [ %101, %100 ], [ 1, %72 ], [ 2, %102 ], [ 0, %45 ]
  %105 = icmp eq i32 %104, %19
  br i1 %105, label %113, label %106

106:                                              ; preds = %103
  %107 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %13, align 8
  %108 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %107, i64 3
  %109 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %108, align 8
  %110 = call %"class.blink::BaseAudioContext"* %109(%"class.blink::AudioHandler"* %0) #11
  %111 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %110, i64 0, i32 12, i32 0
  %112 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %111, align 8
  call void @_ZN5blink19DeferredTaskHandler26AddChangedChannelCountModeEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"* %112, %"class.blink::AudioHandler"* %0) #11
  br label %113

113:                                              ; preds = %103, %106
  %114 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %12, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %114) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler26AddChangedChannelCountModeEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12AudioHandler21ChannelInterpretationEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 21
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %7 [
    i32 0, label %5
    i32 1, label %6
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 8) #11
  br label %8

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #11
  br label %8

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0), i64 0) #11
  br label %8

8:                                                ; preds = %7, %6, %5
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  ret %"class.WTF::StringImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler24SetChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioHandler"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %9 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %8, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %10, align 8
  %11 = bitcast %"class.blink::AudioHandler"* %0 to %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)***
  %12 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %12, i64 3
  %14 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %13, align 8
  %15 = tail call %"class.blink::BaseAudioContext"* %14(%"class.blink::AudioHandler"* %0) #11
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %8, %"class.blink::BaseAudioContext"* %15) #11
  %16 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 18
  %17 = load i32, i32* %16, align 4
  %18 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %24, i64* %25, align 8
  br label %34

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %34

34:                                               ; preds = %26, %22
  %35 = phi i64 [ %33, %26 ], [ %24, %22 ]
  %36 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %36, i32* %37, align 8
  %38 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %35, i64* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 8, i32* %41, align 8
  %42 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 21
  store i32 0, i32* %44, align 8
  br label %74

45:                                               ; preds = %34
  %46 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %50, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %51, i64* %52, align 8
  br label %61

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %59, align 8
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %61

61:                                               ; preds = %53, %49
  %62 = phi i64 [ %60, %53 ], [ %51, %49 ]
  %63 = phi i32 [ %56, %53 ], [ 0, %49 ]
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %63, i32* %64, align 8
  %65 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  %66 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %62, i64* %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 8, i32* %68, align 8
  %69 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  %70 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 21
  br i1 %69, label %73, label %71

71:                                               ; preds = %61
  %72 = load i32, i32* %70, align 8
  br label %74

73:                                               ; preds = %61
  store i32 1, i32* %70, align 8
  br label %74

74:                                               ; preds = %71, %73, %43
  %75 = phi i32 [ %72, %71 ], [ 1, %73 ], [ 0, %43 ]
  %76 = icmp eq i32 %75, %17
  br i1 %76, label %84, label %77

77:                                               ; preds = %74
  %78 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %11, align 8
  %79 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %78, i64 3
  %80 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %79, align 8
  %81 = call %"class.blink::BaseAudioContext"* %80(%"class.blink::AudioHandler"* %0) #11
  %82 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %81, i64 0, i32 12, i32 0
  %83 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %82, align 8
  call void @_ZN5blink19DeferredTaskHandler31AddChangedChannelInterpretationEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"* %83, %"class.blink::AudioHandler"* %0) #11
  br label %84

84:                                               ; preds = %74, %77
  %85 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %10, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %85) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler31AddChangedChannelInterpretationEPNS_12AudioHandlerE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #4

declare void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler18ProcessIfNecessaryEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %177, label %10

10:                                               ; preds = %2
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %46, label %14, !prof !3

14:                                               ; preds = %10
  %15 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = bitcast i8** %3 to %"class.blink::AudioHandler"**
  store %"class.blink::AudioHandler"* %0, %"class.blink::AudioHandler"** %16, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12AudioHandler12NodeTypeNameEv(%"class.blink::AudioHandler"* %0)
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5) #11
  %21 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSF_yjySF_OT_SF_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i8** nonnull dereferenceable(8) %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %14, %26
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #11
  br label %45

45:                                               ; preds = %29, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %46

46:                                               ; preds = %10, %45
  %47 = phi i64 [ -6148914691236517206, %10 ], [ %21, %45 ]
  %48 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %10 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), %45 ]
  %49 = phi i8* [ null, %10 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 233, i32 0), %45 ]
  %50 = bitcast %"class.blink::AudioHandler"* %0 to %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)***
  %51 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %51, i64 3
  %53 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %52, align 8
  %54 = call %"class.blink::BaseAudioContext"* %53(%"class.blink::AudioHandler"* %0) #11
  %55 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %54, i64 0, i32 21, i32 0
  %56 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i64, i64* %57 acquire, align 8
  %59 = uitofp i64 %58 to double
  %60 = bitcast %"class.blink::AudioDestinationHandler"* %56 to double (%"class.blink::AudioDestinationHandler"*)***
  %61 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %60, align 8
  %62 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %61, i64 25
  %63 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %62, align 8
  %64 = call double %63(%"class.blink::AudioDestinationHandler"* %56) #11
  %65 = fdiv double %59, %64
  %66 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 3
  %67 = load double, double* %66, align 8
  %68 = fcmp une double %67, %65
  br i1 %68, label %69, label %171

69:                                               ; preds = %46
  store double %65, double* %66, align 8
  %70 = bitcast %"class.blink::AudioHandler"* %0 to void (%"class.blink::AudioHandler"*, i32)***
  %71 = load void (%"class.blink::AudioHandler"*, i32)**, void (%"class.blink::AudioHandler"*, i32)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::AudioHandler"*, i32)*, void (%"class.blink::AudioHandler"*, i32)** %71, i64 19
  %73 = load void (%"class.blink::AudioHandler"*, i32)*, void (%"class.blink::AudioHandler"*, i32)** %72, align 8
  call void %73(%"class.blink::AudioHandler"* %0, i32 %1) #11
  %74 = call zeroext i1 @_ZN5blink12AudioHandler15InputsAreSilentEv(%"class.blink::AudioHandler"* %0)
  br i1 %74, label %75, label %100

75:                                               ; preds = %69
  %76 = bitcast %"class.blink::AudioHandler"* %0 to i1 (%"class.blink::AudioHandler"*)***
  %77 = load i1 (%"class.blink::AudioHandler"*)**, i1 (%"class.blink::AudioHandler"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::AudioHandler"*)*, i1 (%"class.blink::AudioHandler"*)** %77, i64 14
  %79 = load i1 (%"class.blink::AudioHandler"*)*, i1 (%"class.blink::AudioHandler"*)** %78, align 8
  %80 = call zeroext i1 %79(%"class.blink::AudioHandler"* %0) #11
  br i1 %80, label %81, label %100

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %83 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %83, i64 %86
  %88 = icmp eq i32 %85, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %81, %89
  %90 = phi %"class.std::__1::unique_ptr.378"* [ %94, %89 ], [ %83, %81 ]
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %91, align 8
  %93 = call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %92) #11
  call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %93) #11
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %90, i64 1
  %95 = icmp eq %"class.std::__1::unique_ptr.378"* %94, %87
  br i1 %95, label %96, label %89

96:                                               ; preds = %89, %81
  %97 = load void (%"class.blink::AudioHandler"*, i32)**, void (%"class.blink::AudioHandler"*, i32)*** %70, align 8
  %98 = getelementptr inbounds void (%"class.blink::AudioHandler"*, i32)*, void (%"class.blink::AudioHandler"*, i32)** %97, i64 5
  %99 = load void (%"class.blink::AudioHandler"*, i32)*, void (%"class.blink::AudioHandler"*, i32)** %98, align 8
  call void %99(%"class.blink::AudioHandler"* %0, i32 %1) #11
  br label %119

100:                                              ; preds = %75, %69
  %101 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %102 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %102, i64 %105
  %107 = icmp eq i32 %104, 0
  br i1 %107, label %115, label %108

108:                                              ; preds = %100, %108
  %109 = phi %"class.std::__1::unique_ptr.378"* [ %113, %108 ], [ %102, %100 ]
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %110, align 8
  %112 = call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %111) #11
  call void @_ZN5blink8AudioBus15ClearSilentFlagEv(%"class.blink::AudioBus"* %112) #11
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %109, i64 1
  %114 = icmp eq %"class.std::__1::unique_ptr.378"* %113, %106
  br i1 %114, label %115, label %108

115:                                              ; preds = %108, %100
  %116 = load void (%"class.blink::AudioHandler"*, i32)**, void (%"class.blink::AudioHandler"*, i32)*** %70, align 8
  %117 = getelementptr inbounds void (%"class.blink::AudioHandler"*, i32)*, void (%"class.blink::AudioHandler"*, i32)** %116, i64 4
  %118 = load void (%"class.blink::AudioHandler"*, i32)*, void (%"class.blink::AudioHandler"*, i32)** %117, align 8
  call void %118(%"class.blink::AudioHandler"* %0, i32 %1) #11
  br label %119

119:                                              ; preds = %115, %96
  br i1 %74, label %147, label %120

120:                                              ; preds = %119
  %121 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %50, align 8
  %122 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %121, i64 3
  %123 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %122, align 8
  %124 = call %"class.blink::BaseAudioContext"* %123(%"class.blink::AudioHandler"* %0) #11
  %125 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %124, i64 0, i32 21, i32 0
  %126 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i64, i64* %127 acquire, align 8
  %129 = zext i32 %1 to i64
  %130 = add i64 %128, %129
  %131 = uitofp i64 %130 to double
  %132 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %50, align 8
  %133 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %132, i64 3
  %134 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %133, align 8
  %135 = call %"class.blink::BaseAudioContext"* %134(%"class.blink::AudioHandler"* %0) #11
  %136 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %135, i64 0, i32 21, i32 0
  %137 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %136, align 8
  %138 = bitcast %"class.blink::AudioDestinationHandler"* %137 to double (%"class.blink::AudioDestinationHandler"*)***
  %139 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %138, align 8
  %140 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %139, i64 25
  %141 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %140, align 8
  %142 = call double %141(%"class.blink::AudioDestinationHandler"* %137) #11
  %143 = fptrunc double %142 to float
  %144 = fpext float %143 to double
  %145 = fdiv double %131, %144
  %146 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 4
  store double %145, double* %146, align 8
  br label %147

147:                                              ; preds = %120, %119
  %148 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 15
  %149 = load i8, i8* %148, align 1, !range !4
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %171

151:                                              ; preds = %147
  %152 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #11
  %153 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN5blink12AudioHandler18ProcessIfNecessaryEj, i64 0, i64 0), i32 %1) #11
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %154, align 8
  call void @_ZN5blink12AudioHandler14SendLogMessageERKN3WTF6StringE(%"class.blink::AudioHandler"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %151
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #11
  br label %170

170:                                              ; preds = %151, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #11
  store i8 1, i8* %148, align 1
  br label %171

171:                                              ; preds = %170, %147, %46
  %172 = icmp eq i8* %49, null
  br i1 %172, label %177, label %173

173:                                              ; preds = %171
  %174 = load i8, i8* %49, align 1
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %177, label %176

176:                                              ; preds = %173
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %49, i8* %48, i64 %47) #11
  br label %177

177:                                              ; preds = %2, %176, %173, %171
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIPvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSF_yjySF_OT_SF_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8** dereferenceable(8), i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247241982, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = bitcast i8** %8 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %26 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = bitcast %"union.base::trace_event::TraceValue"* %25 to i8**
  store i8* %33, i8** %34, align 8
  %35 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #11
  %36 = load i8, i8* %18, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %11, %67
  %39 = phi i64 [ %68, %67 ], [ 0, %11 ]
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %54

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %46 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %46 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %46) #11
  %53 = load i8, i8* %40, align 1
  br label %54

54:                                               ; preds = %48, %38
  %55 = phi i8 [ %41, %38 ], [ %53, %48 ]
  %56 = icmp eq i8 %55, 9
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %59 = bitcast %"union.base::trace_event::TraceValue"* %58 to %"class.protozero::HeapBuffered"**
  %60 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %59, align 8
  %61 = icmp eq %"class.protozero::HeapBuffered"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %63) #11
  %64 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %64) #11
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %65) #11
  %66 = bitcast %"class.protozero::HeapBuffered"* %60 to i8*
  call void @_ZdlPv(i8* %66) #17
  br label %67

67:                                               ; preds = %62, %57, %54, %43
  %68 = add nuw nsw i64 %39, 1
  %69 = load i8, i8* %18, align 8
  %70 = zext i8 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %38, label %72

72:                                               ; preds = %67, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i64 %35
}

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AudioHandler15InputsAreSilentEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %57, label %11

9:                                                ; preds = %55
  %10 = icmp eq %"class.std::__1::unique_ptr.367"* %56, %7
  br i1 %10, label %57, label %11

11:                                               ; preds = %1, %9
  %12 = phi %"class.std::__1::unique_ptr.367"* [ %56, %9 ], [ %3, %1 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %13, align 8
  %15 = tail call %"class.blink::AudioBus"* @_ZN5blink14AudioNodeInput3BusEv(%"class.blink::AudioNodeInput"* %14) #11
  %16 = tail call zeroext i1 @_ZNK5blink8AudioBus8IsSilentEv(%"class.blink::AudioBus"* %15) #11
  %17 = icmp eq %"class.blink::AudioBus"* %15, null
  br i1 %17, label %55, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %15, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %55

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %19, i64 2
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %19, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  %28 = bitcast %"class.base::RefCountedThreadSafe.296"* %24 to %"class.blink::AudioChannel"**
  br i1 %27, label %46, label %29, !prof !2

29:                                               ; preds = %23
  %30 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %28, align 8
  %31 = zext i32 %26 to i64
  %32 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %30, i64 %31
  br label %33

33:                                               ; preds = %42, %29
  %34 = phi %"class.blink::AudioChannel"* [ %43, %42 ], [ %30, %29 ]
  %35 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %34, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %35, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %35, align 8
  %37 = icmp eq %"class.blink::AudioArray"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::AudioArray"* %36 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %40) #11
  %41 = bitcast %"class.blink::AudioArray"* %36 to i8*
  tail call void @free(i8* %41) #11
  br label %42

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %34, i64 1
  %44 = icmp eq %"class.blink::AudioChannel"* %43, %32
  br i1 %44, label %45, label %33

45:                                               ; preds = %42
  store i32 0, i32* %25, align 4
  br label %46

46:                                               ; preds = %45, %23
  %47 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %28, align 8
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %19, i64 6
  %49 = bitcast %"class.base::RefCountedThreadSafe.296"* %48 to %"class.blink::AudioChannel"*
  %50 = icmp eq %"class.blink::AudioChannel"* %47, %49
  br i1 %50, label %53, label %51, !prof !3

51:                                               ; preds = %46
  %52 = bitcast %"class.base::RefCountedThreadSafe.296"* %24 to %"class.WTF::VectorBuffer.298"*
  tail call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.298"* %52, %"class.blink::AudioChannel"* %47) #11
  br label %53

53:                                               ; preds = %51, %46
  %54 = bitcast %"class.blink::AudioBus"* %15 to i8*
  tail call void @free(i8* %54) #11
  br label %55

55:                                               ; preds = %11, %18, %53
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %12, i64 1
  br i1 %16, label %9, label %57

57:                                               ; preds = %55, %9, %1
  %58 = phi i1 [ true, %1 ], [ true, %9 ], [ false, %55 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler14SilenceOutputsEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %1
  ret void

10:                                               ; preds = %1, %10
  %11 = phi %"class.std::__1::unique_ptr.378"* [ %15, %10 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %12, align 8
  %14 = tail call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %13) #11
  tail call void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"* %14) #11
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %11, i64 1
  %16 = icmp eq %"class.std::__1::unique_ptr.378"* %15, %7
  br i1 %16, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler16UnsilenceOutputsEv(%"class.blink::AudioHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %1
  ret void

10:                                               ; preds = %1, %10
  %11 = phi %"class.std::__1::unique_ptr.378"* [ %15, %10 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %12, align 8
  %14 = tail call %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"* %13) #11
  tail call void @_ZN5blink8AudioBus15ClearSilentFlagEv(%"class.blink::AudioBus"* %14) #11
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %11, i64 1
  %16 = icmp eq %"class.std::__1::unique_ptr.378"* %15, %7
  br i1 %16, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler29CheckNumberOfChannelsForInputEPNS_14AudioNodeInputE(%"class.blink::AudioHandler"* nocapture readonly, %"class.blink::AudioNodeInput"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AudioNodeInput17UpdateInternalBusEv(%"class.blink::AudioNodeInput"* %1) #11
  ret void
}

declare void @_ZN5blink14AudioNodeInput17UpdateInternalBusEv(%"class.blink::AudioNodeInput"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AudioHandler17PropagatesSilenceEv(%"class.blink::AudioHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 4
  %3 = load double, double* %2, align 8
  %4 = bitcast %"class.blink::AudioHandler"* %0 to double (%"class.blink::AudioHandler"*)***
  %5 = load double (%"class.blink::AudioHandler"*)**, double (%"class.blink::AudioHandler"*)*** %4, align 8
  %6 = getelementptr inbounds double (%"class.blink::AudioHandler"*)*, double (%"class.blink::AudioHandler"*)** %5, i64 13
  %7 = load double (%"class.blink::AudioHandler"*)*, double (%"class.blink::AudioHandler"*)** %6, align 8
  %8 = tail call double %7(%"class.blink::AudioHandler"* %0) #11
  %9 = fadd double %3, %8
  %10 = load double (%"class.blink::AudioHandler"*)**, double (%"class.blink::AudioHandler"*)*** %4, align 8
  %11 = getelementptr inbounds double (%"class.blink::AudioHandler"*)*, double (%"class.blink::AudioHandler"*)** %10, i64 12
  %12 = load double (%"class.blink::AudioHandler"*)*, double (%"class.blink::AudioHandler"*)** %11, align 8
  %13 = tail call double %12(%"class.blink::AudioHandler"* %0) #11
  %14 = fadd double %9, %13
  %15 = bitcast %"class.blink::AudioHandler"* %0 to %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)***
  %16 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %16, i64 3
  %18 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %17, align 8
  %19 = tail call %"class.blink::BaseAudioContext"* %18(%"class.blink::AudioHandler"* %0) #11
  %20 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %19, i64 0, i32 21, i32 0
  %21 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i64, i64* %22 acquire, align 8
  %24 = uitofp i64 %23 to double
  %25 = bitcast %"class.blink::AudioDestinationHandler"* %21 to double (%"class.blink::AudioDestinationHandler"*)***
  %26 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %25, align 8
  %27 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %26, i64 25
  %28 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %27, align 8
  %29 = tail call double %28(%"class.blink::AudioDestinationHandler"* %21) #11
  %30 = fdiv double %24, %29
  %31 = fcmp olt double %14, %30
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler10PullInputsEj(%"class.blink::AudioHandler"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %54, %2
  ret void

11:                                               ; preds = %2, %54
  %12 = phi %"class.std::__1::unique_ptr.367"* [ %55, %54 ], [ %4, %2 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %13, align 8
  %15 = tail call %"class.blink::AudioBus"* @_ZN5blink14AudioNodeInput4PullEPNS_8AudioBusEj(%"class.blink::AudioNodeInput"* %14, %"class.blink::AudioBus"* null, i32 %1) #11
  %16 = icmp eq %"class.blink::AudioBus"* %15, null
  br i1 %16, label %54, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %54

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %18, i64 2
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %18, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = bitcast %"class.base::RefCountedThreadSafe.296"* %23 to %"class.blink::AudioChannel"**
  br i1 %26, label %45, label %28, !prof !2

28:                                               ; preds = %22
  %29 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %27, align 8
  %30 = zext i32 %25 to i64
  %31 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %29, i64 %30
  br label %32

32:                                               ; preds = %41, %28
  %33 = phi %"class.blink::AudioChannel"* [ %42, %41 ], [ %29, %28 ]
  %34 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %33, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %34, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %34, align 8
  %36 = icmp eq %"class.blink::AudioArray"* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::AudioArray"* %35 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %39) #11
  %40 = bitcast %"class.blink::AudioArray"* %35 to i8*
  tail call void @free(i8* %40) #11
  br label %41

41:                                               ; preds = %37, %32
  %42 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %33, i64 1
  %43 = icmp eq %"class.blink::AudioChannel"* %42, %31
  br i1 %43, label %44, label %32

44:                                               ; preds = %41
  store i32 0, i32* %24, align 4
  br label %45

45:                                               ; preds = %44, %22
  %46 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %27, align 8
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe.296", %"class.base::RefCountedThreadSafe.296"* %18, i64 6
  %48 = bitcast %"class.base::RefCountedThreadSafe.296"* %47 to %"class.blink::AudioChannel"*
  %49 = icmp eq %"class.blink::AudioChannel"* %46, %48
  br i1 %49, label %52, label %50, !prof !3

50:                                               ; preds = %45
  %51 = bitcast %"class.base::RefCountedThreadSafe.296"* %23 to %"class.WTF::VectorBuffer.298"*
  tail call void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.298"* %51, %"class.blink::AudioChannel"* %46) #11
  br label %52

52:                                               ; preds = %50, %45
  %53 = bitcast %"class.blink::AudioBus"* %15 to i8*
  tail call void @free(i8* %53) #11
  br label %54

54:                                               ; preds = %11, %17, %52
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %12, i64 1
  %56 = icmp eq %"class.std::__1::unique_ptr.367"* %55, %8
  br i1 %56, label %10, label %11
}

declare %"class.blink::AudioBus"* @_ZN5blink14AudioNodeInput4PullEPNS_8AudioBusEj(%"class.blink::AudioNodeInput"*, %"class.blink::AudioBus"*, i32) local_unnamed_addr #4

declare %"class.blink::AudioBus"* @_ZN5blink14AudioNodeInput3BusEv(%"class.blink::AudioNodeInput"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink8AudioBus8IsSilentEv(%"class.blink::AudioBus"*) local_unnamed_addr #4

declare %"class.blink::AudioBus"* @_ZNK5blink15AudioNodeOutput3BusEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #4

declare void @_ZN5blink8AudioBus4ZeroEv(%"class.blink::AudioBus"*) local_unnamed_addr #4

declare void @_ZN5blink8AudioBus15ClearSilentFlagEv(%"class.blink::AudioBus"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler24EnableOutputsIfNecessaryEv(%"class.blink::AudioHandler"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AudioHandler"* %0 to %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)***
  %3 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %3, i64 3
  %5 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %4, align 8
  %6 = tail call %"class.blink::BaseAudioContext"* %5(%"class.blink::AudioHandler"* %0) #11
  %7 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %6, i64 0, i32 12, i32 0
  %8 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %7, align 8
  tail call void @_ZN5blink19DeferredTaskHandler27RemoveTailProcessingHandlerEPNS_12AudioHandlerEb(%"class.blink::DeferredTaskHandler"* %8, %"class.blink::AudioHandler"* %0, i1 zeroext false) #11
  %9 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 14
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %30, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 13
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %30

16:                                               ; preds = %12
  store i8 0, i8* %9, align 4
  %17 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %16, %24
  %25 = phi %"class.std::__1::unique_ptr.378"* [ %28, %24 ], [ %18, %16 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %26, align 8
  tail call void @_ZN5blink15AudioNodeOutput6EnableEv(%"class.blink::AudioNodeOutput"* %27) #11
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %25, i64 1
  %29 = icmp eq %"class.std::__1::unique_ptr.378"* %28, %22
  br i1 %29, label %30, label %24

30:                                               ; preds = %24, %16, %1, %12
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler27RemoveTailProcessingHandlerEPNS_12AudioHandlerEb(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN5blink15AudioNodeOutput6EnableEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler25DisableOutputsIfNecessaryEv(%"class.blink::AudioHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 10, i32 0
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 13
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, 2
  br i1 %6, label %7, label %46

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 14
  %9 = load i8, i8* %8, align 4, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %46

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::AudioHandler"* %0 to i1 (%"class.blink::AudioHandler"*)***
  %13 = load i1 (%"class.blink::AudioHandler"*)**, i1 (%"class.blink::AudioHandler"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::AudioHandler"*)*, i1 (%"class.blink::AudioHandler"*)** %13, i64 11
  %15 = load i1 (%"class.blink::AudioHandler"*)*, i1 (%"class.blink::AudioHandler"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::AudioHandler"* %0) #11
  br i1 %16, label %17, label %32

17:                                               ; preds = %11
  %18 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %3, align 8
  %19 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %18, i64 0, i32 16
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %46, label %22

22:                                               ; preds = %17
  %23 = icmp eq %"class.blink::AudioHandler"* %0, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.61, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.62, i64 0, i64 0)) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %22, %24, %28
  call void @_ZN5blink19DeferredTaskHandler24AddTailProcessingHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::DeferredTaskHandler"* %18, %"class.blink::AudioHandler"* %0) #11
  br label %46

32:                                               ; preds = %11
  store i8 1, i8* %8, align 4
  %33 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %32, %40
  %41 = phi %"class.std::__1::unique_ptr.378"* [ %44, %40 ], [ %34, %32 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %42, align 8
  tail call void @_ZN5blink15AudioNodeOutput7DisableEv(%"class.blink::AudioNodeOutput"* %43) #11
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %41, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr.378"* %44, %38
  br i1 %45, label %46, label %40

46:                                               ; preds = %40, %17, %32, %7, %31, %1
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler24AddTailProcessingHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler14DisableOutputsEv(%"class.blink::AudioHandler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 14
  store i8 1, i8* %2, align 4
  %3 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %11, %1
  ret void

11:                                               ; preds = %1, %11
  %12 = phi %"class.std::__1::unique_ptr.378"* [ %15, %11 ], [ %4, %1 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %13, align 8
  tail call void @_ZN5blink15AudioNodeOutput7DisableEv(%"class.blink::AudioNodeOutput"* %14) #11
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %12, i64 1
  %16 = icmp eq %"class.std::__1::unique_ptr.378"* %15, %8
  br i1 %16, label %10, label %11
}

declare void @_ZN5blink15AudioNodeOutput7DisableEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler14MakeConnectionEv(%"class.blink::AudioHandler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = bitcast %"class.blink::AudioHandler"* %0 to %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)***
  %6 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)**, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %6, i64 3
  %8 = load %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)*, %"class.blink::BaseAudioContext"* (%"class.blink::AudioHandler"*)** %7, align 8
  %9 = tail call %"class.blink::BaseAudioContext"* %8(%"class.blink::AudioHandler"* %0) #11
  %10 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %9, i64 0, i32 12, i32 0
  %11 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %10, align 8
  tail call void @_ZN5blink19DeferredTaskHandler27RemoveTailProcessingHandlerEPNS_12AudioHandlerEb(%"class.blink::DeferredTaskHandler"* %11, %"class.blink::AudioHandler"* %0, i1 zeroext false) #11
  %12 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 14
  %13 = load i8, i8* %12, align 4, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %32, label %15

15:                                               ; preds = %1
  %16 = load i32, i32* %2, align 8
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %15
  store i8 0, i8* %12, align 4
  %19 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %18, %26
  %27 = phi %"class.std::__1::unique_ptr.378"* [ %30, %26 ], [ %20, %18 ]
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %28, align 8
  tail call void @_ZN5blink15AudioNodeOutput6EnableEv(%"class.blink::AudioNodeOutput"* %29) #11
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %27, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr.378"* %30, %24
  br i1 %31, label %32, label %26

32:                                               ; preds = %26, %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler23BreakConnectionWithLockEv(%"class.blink::AudioHandler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZN5blink12AudioHandler25DisableOutputsIfNecessaryEv(%"class.blink::AudioHandler"* %0)
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler22UpdateChannelCountModeEv(%"class.blink::AudioHandler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 20
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 17
  store i32 %3, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %1, %12
  %13 = phi %"class.std::__1::unique_ptr.367"* [ %16, %12 ], [ %6, %1 ]
  %14 = bitcast %"class.std::__1::unique_ptr.367"* %13 to %"class.blink::AudioSummingJunction"**
  %15 = load %"class.blink::AudioSummingJunction"*, %"class.blink::AudioSummingJunction"** %14, align 8
  tail call void @_ZN5blink20AudioSummingJunction14ChangedOutputsEv(%"class.blink::AudioSummingJunction"* %15) #11
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %13, i64 1
  %17 = icmp eq %"class.std::__1::unique_ptr.367"* %16, %10
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12AudioHandler27UpdateChannelInterpretationEv(%"class.blink::AudioHandler"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 21
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %0, i64 0, i32 18
  store i32 %3, i32* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink12AudioHandler22NumberOfOutputChannelsEv(%"class.blink::AudioHandler"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i32 1
}

declare void @_ZN5blink16WebRtcLogMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNodeC2ERNS_16BaseAudioContextE(%"class.blink::AudioNode"*, %"class.blink::BaseAudioContext"* dereferenceable(304)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %4) #11
  %5 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.blink::EventTargetData"* %6 to i8*
  %8 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.58, i64 0, i64 0), i32 261) #11
  %9 = bitcast i8* %8 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %9) #11
  %10 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %1, i64 0, i32 3, i32 1, i32 0, i32 0
  %12 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %1, i64 0, i32 3, i32 2
  tail call void @_ZN5blink20InspectorHelperMixinC2ERNS_16AudioGraphTracerERKN3WTF6StringE(%"class.blink::InspectorHelperMixin"* %10, %"class.blink::AudioGraphTracer"* dereferenceable(48) %12, %"class.WTF::String"* dereferenceable(8) %13) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*], [5 x i8*] }, { [29 x i8*], [5 x i8*] }* @_ZTVN5blink9AudioNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %14 = getelementptr inbounds %"class.blink::InspectorHelperMixin", %"class.blink::InspectorHelperMixin"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*], [5 x i8*] }, { [29 x i8*], [5 x i8*] }* @_ZTVN5blink9AudioNodeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 2
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_9AudioNodeEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %15, %"class.blink::AudioNode"* %0)
  %16 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::BaseAudioContext"* %1, %"class.blink::BaseAudioContext"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %1, i64 0, i32 12, i32 0
  %18 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 4, i32 0
  store %"class.blink::DeferredTaskHandler"* %18, %"class.blink::DeferredTaskHandler"** %19, align 8
  %20 = icmp eq %"class.blink::DeferredTaskHandler"* %18, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.61, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.62, i64 0, i64 0)) #11
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %28

28:                                               ; preds = %2, %21, %25
  %29 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %30 = bitcast %"class.blink::AudioHandler"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 40, i1 false)
  ret void
}

declare void @_ZN5blink20InspectorHelperMixinC2ERNS_16AudioGraphTracerERKN3WTF6StringE(%"class.blink::InspectorHelperMixin"*, %"class.blink::AudioGraphTracer"* dereferenceable(48), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_9AudioNodeEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::AudioNode"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::AudioNode"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #11
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !2

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #11
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #11
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.209"*, %"struct.std::__1::pair.209"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.209"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink9AudioNode18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNodeD2Ev(%"class.blink::AudioNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*], [5 x i8*] }, { [29 x i8*], [5 x i8*] }* @_ZTVN5blink9AudioNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*], [5 x i8*] }, { [29 x i8*], [5 x i8*] }* @_ZTVN5blink9AudioNodeE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 4, i32 0
  %5 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %4, align 8
  tail call void @_ZN5blink19DeferredTaskHandler4lockEv(%"class.blink::DeferredTaskHandler"* %5) #11
  %6 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5
  %7 = bitcast %class.scoped_refptr.276* %6 to i64*
  %8 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %6, i64 0, i32 0
  %9 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %8, align 8
  store i64 0, i64* %7, align 8
  %10 = icmp eq %"class.blink::AudioHandler"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %9, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %23

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %12, i64 -2
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %17 to %"class.blink::AudioHandler"*
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %17 to void (%"class.blink::AudioHandler"*)***
  %20 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %20, i64 1
  %22 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %21, align 8
  tail call void %22(%"class.blink::AudioHandler"* nonnull %18) #11
  br label %23

23:                                               ; preds = %1, %11, %16
  tail call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %5) #11
  %24 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %8, align 8
  %25 = icmp eq %"class.blink::AudioHandler"* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %24, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to %"class.blink::AudioHandler"*
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %32 to void (%"class.blink::AudioHandler"*)***
  %35 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %35, i64 1
  %37 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %36, align 8
  tail call void %37(%"class.blink::AudioHandler"* nonnull %33) #11
  br label %38

38:                                               ; preds = %23, %26, %31
  %39 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %4, align 8
  %40 = icmp eq %"class.blink::DeferredTaskHandler"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  tail call void @_ZN5blink19DeferredTaskHandlerD1Ev(%"class.blink::DeferredTaskHandler"* nonnull %39) #11
  %46 = bitcast %"class.blink::DeferredTaskHandler"* %39 to i8*
  tail call void @free(i8* %46) #11
  br label %47

47:                                               ; preds = %38, %41, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink20InspectorHelperMixinE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %48 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 3, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #11
  br label %64

64:                                               ; preds = %63, %60, %47
  %65 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #11
  br label %81

81:                                               ; preds = %64, %77, %80
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %82 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 0, i32 1
  %83 = bitcast %"class.blink::EventTargetData"* %82 to i8*
  %84 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %83, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.58, i64 0, i64 0), i32 261) #11
  %85 = bitcast i8* %84 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %85) #11
  %86 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %86) #11
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNodeD0Ev(%"class.blink::AudioNode"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode7DisposeEv(%"class.blink::AudioNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %3 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %2, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %5, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %2, %"class.blink::BaseAudioContext"* %6) #11
  %7 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %8 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %7, align 8
  %9 = bitcast %"class.blink::AudioHandler"* %8 to void (%"class.blink::AudioHandler"*)***
  %10 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %10, i64 2
  %12 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %11, align 8
  call void %12(%"class.blink::AudioHandler"* %8) #11
  %13 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %5, align 8
  %14 = bitcast %"class.blink::BaseAudioContext"* %13 to i1 (%"class.blink::BaseAudioContext"*)***
  %15 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %15, i64 29
  %17 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %16, align 8
  %18 = call zeroext i1 %17(%"class.blink::BaseAudioContext"* %13) #11
  %19 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %5, align 8
  br i1 %18, label %24, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %19, i64 0, i32 13
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %1, %20
  %25 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %19, i64 0, i32 12, i32 0
  %26 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %28 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %27, align 8
  store %"class.blink::AudioHandler"* null, %"class.blink::AudioHandler"** %27, align 8
  call void @_ZN5blink19DeferredTaskHandler25AddRenderingOrphanHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::DeferredTaskHandler"* %26, %"class.blink::AudioHandler"* %28) #11
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::InspectorHelperMixin"* %30 to void (%"class.blink::InspectorHelperMixin"*)***
  %32 = load void (%"class.blink::InspectorHelperMixin"*)**, void (%"class.blink::InspectorHelperMixin"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::InspectorHelperMixin"*)*, void (%"class.blink::InspectorHelperMixin"*)** %32, i64 2
  %34 = load void (%"class.blink::InspectorHelperMixin"*)*, void (%"class.blink::InspectorHelperMixin"*)** %33, align 8
  call void %34(%"class.blink::InspectorHelperMixin"* %30) #11
  %35 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %4, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(136) %"class.blink::AudioHandler"* @_ZNK5blink9AudioNode7HandlerEv(%"class.blink::AudioNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %2, align 8
  ret %"class.blink::AudioHandler"* %3
}

declare void @_ZN5blink19DeferredTaskHandler25AddRenderingOrphanHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::DeferredTaskHandler"*, %"class.blink::AudioHandler"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode10SetHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::AudioNode"*, %"class.blink::AudioHandler"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::AudioHandler"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5
  %5 = bitcast %class.scoped_refptr.276* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr.276, %class.scoped_refptr.276* %4, i64 0, i32 0
  %7 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.blink::AudioHandler"* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %7, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %10, i64 -2
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %15 to %"class.blink::AudioHandler"*
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %15 to void (%"class.blink::AudioHandler"*)***
  %18 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %18, i64 1
  %20 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %19, align 8
  tail call void %20(%"class.blink::AudioHandler"* nonnull %16) #11
  br label %21

21:                                               ; preds = %2, %9, %14
  %22 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %22, i64 0, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %32, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1
  %28 = bitcast %"class.blink::InspectorHelperMixin"* %27 to void (%"class.blink::InspectorHelperMixin"*)***
  %29 = load void (%"class.blink::InspectorHelperMixin"*)**, void (%"class.blink::InspectorHelperMixin"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::InspectorHelperMixin"*)*, void (%"class.blink::InspectorHelperMixin"*)** %29, i64 1
  %31 = load void (%"class.blink::InspectorHelperMixin"*)*, void (%"class.blink::InspectorHelperMixin"*)** %30, align 8
  tail call void %31(%"class.blink::InspectorHelperMixin"* %27) #11
  br label %32

32:                                               ; preds = %26, %21
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9AudioNode15ContainsHandlerEv(%"class.blink::AudioNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %2, align 8
  %4 = icmp ne %"class.blink::AudioHandler"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.24"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16BaseAudioContextEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6
  %15 = bitcast %"class.blink::HeapVector.327"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"class.blink::HeapVector.327"* %14 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #11
  br i1 %17, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7
  %31 = bitcast %"class.blink::HeapVector.344"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  %34 = bitcast %"class.blink::HeapVector.344"* %30 to i8**
  %35 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %35, i64 11
  %37 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8** %34) #11
  br i1 %33, label %44, label %38

38:                                               ; preds = %29
  %39 = inttoptr i64 %32 to i8*
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %44

44:                                               ; preds = %29, %38
  %45 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1
  tail call void @_ZNK5blink20InspectorHelperMixin5TraceEPNS_7VisitorE(%"class.blink::InspectorHelperMixin"* %45, %"class.blink::Visitor"* %1) #11
  %46 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 0, i32 1
  %47 = bitcast %"class.blink::EventTargetData"* %46 to i8*
  %48 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %47, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.58, i64 0, i64 0), i32 261) #11
  %49 = bitcast i8* %48 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %49, %"class.blink::Visitor"* %1) #11
  %50 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %50, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink20InspectorHelperMixin5TraceEPNS_7VisitorE(%"class.blink::InspectorHelperMixin"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.58, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #11
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 -1, i32 1, i32 3
  %4 = bitcast %"class.WTF::String"* %3 to %"class.blink::AudioNode"*
  tail call void @_ZNK5blink9AudioNode5TraceEPNS_7VisitorE(%"class.blink::AudioNode"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode20HandleChannelOptionsEPKNS_16AudioNodeOptionsERNS_14ExceptionStateE(%"class.blink::AudioNode"* nocapture readonly, %"class.blink::AudioNodeOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AudioNodeOptions", %"class.blink::AudioNodeOptions"* %1, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::AudioNodeOptions", %"class.blink::AudioNodeOptions"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %11 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %10, align 8
  %12 = bitcast %"class.blink::AudioHandler"* %11 to void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)***
  %13 = load void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)**, void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)** %13, i64 15
  %15 = load void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)** %14, align 8
  tail call void %15(%"class.blink::AudioHandler"* %11, i32 %9, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  br label %16

16:                                               ; preds = %3, %7
  %17 = getelementptr inbounds %"class.blink::AudioNodeOptions", %"class.blink::AudioNodeOptions"* %1, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AudioNodeOptions", %"class.blink::AudioNodeOptions"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %23 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %22, align 8
  %24 = bitcast %"class.blink::AudioHandler"* %23 to void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %25 = load void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %25, i64 16
  %27 = load void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %26, align 8
  tail call void %27(%"class.blink::AudioHandler"* %23, %"class.WTF::String"* dereferenceable(8) %21, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  br label %28

28:                                               ; preds = %16, %20
  %29 = getelementptr inbounds %"class.blink::AudioNodeOptions", %"class.blink::AudioNodeOptions"* %1, i64 0, i32 4, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::AudioNodeOptions", %"class.blink::AudioNodeOptions"* %1, i64 0, i32 4
  %34 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %35 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %34, align 8
  %36 = bitcast %"class.blink::AudioHandler"* %35 to void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %37 = load void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %37, i64 17
  %39 = load void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %38, align 8
  tail call void %39(%"class.blink::AudioHandler"* %35, %"class.WTF::String"* dereferenceable(8) %33, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  br label %40

40:                                               ; preds = %28, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode15setChannelCountEjRNS_14ExceptionStateE(%"class.blink::AudioNode"* nocapture readonly, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %5 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %4, align 8
  %6 = bitcast %"class.blink::AudioHandler"* %5 to void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)***
  %7 = load void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)**, void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)** %7, i64 15
  %9 = load void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, i32, %"class.blink::ExceptionState"*)** %8, align 8
  tail call void %9(%"class.blink::AudioHandler"* %5, i32 %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode19setChannelCountModeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioNode"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %5 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %4, align 8
  %6 = bitcast %"class.blink::AudioHandler"* %5 to void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %7 = load void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %7, i64 16
  %9 = load void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %8, align 8
  tail call void %9(%"class.blink::AudioHandler"* %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode24setChannelInterpretationERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AudioNode"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %5 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %4, align 8
  %6 = bitcast %"class.blink::AudioHandler"* %5 to void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %7 = load void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %7, i64 17
  %9 = load void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::AudioHandler"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %8, align 8
  tail call void %9(%"class.blink::AudioHandler"* %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AudioNode"* @_ZN5blink9AudioNode7connectEPS0_jjRNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioNode"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringAppend.544", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::StringAppend.544", align 8
  %10 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %11 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %12 = alloca %"class.blink::AudioNode"*, align 8
  %13 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::StringAppend", align 8
  %16 = alloca %"class.WTF::StringAppend.544", align 8
  %17 = alloca %"class.WTF::StringAppend.545", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = alloca %"class.WTF::StringAppend.544", align 8
  %21 = alloca %"class.WTF::StringAppend.545", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.WTF::String", align 8
  store %"class.blink::AudioNode"* %1, %"class.blink::AudioNode"** %12, align 8
  %27 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %13, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %29, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %13, %"class.blink::BaseAudioContext"* %30) #11
  %31 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %29, align 8
  call void @_ZNK5blink16BaseAudioContext32WarnForConnectionIfContextClosedEv(%"class.blink::BaseAudioContext"* %31) #11
  %32 = icmp eq %"class.blink::AudioNode"* %1, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %5
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0)) #11
  br label %958

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %36 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %36, i64 0, i32 12, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, %2
  br i1 %39, label %416, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = bitcast %"class.WTF::StringAppend"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %42) #11
  %43 = bitcast %"class.WTF::StringAppend.544"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #11
  %44 = bitcast %"class.WTF::StringAppend.545"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 11
  %47 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 2
  %48 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 3
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 32, i1 false) #11
  store i8* %46, i8** %47, align 8
  %50 = urem i32 %2, 10
  %51 = udiv i32 %2, 10
  %52 = trunc i32 %50 to i8
  %53 = or i8 %52, 48
  store i8 %53, i8* %46, align 1
  %54 = icmp ugt i32 %2, 9
  br i1 %54, label %55, label %70

55:                                               ; preds = %40
  %56 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 10
  store i8* %56, i8** %47, align 8
  %57 = urem i32 %51, 10
  %58 = trunc i32 %57 to i8
  %59 = or i8 %58, 48
  store i8 %59, i8* %56, align 2
  %60 = icmp ugt i32 %2, 99
  br i1 %60, label %61, label %68

61:                                               ; preds = %55
  %62 = udiv i32 %2, 100
  %63 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 9
  store i8* %63, i8** %47, align 8
  %64 = urem i32 %62, 10
  %65 = trunc i32 %64 to i8
  %66 = or i8 %65, 48
  store i8 %66, i8* %63, align 1
  %67 = icmp ugt i32 %2, 999
  br i1 %67, label %72, label %81

68:                                               ; preds = %55
  %69 = ptrtoint i8* %56 to i64
  br label %84

70:                                               ; preds = %40
  %71 = ptrtoint i8* %46 to i64
  br label %84

72:                                               ; preds = %61, %72
  %73 = phi i32 [ %75, %72 ], [ %62, %61 ]
  %74 = load i8*, i8** %47, align 8
  %75 = udiv i32 %73, 10
  %76 = getelementptr inbounds i8, i8* %74, i64 -1
  store i8* %76, i8** %47, align 8
  %77 = urem i32 %75, 10
  %78 = trunc i32 %77 to i8
  %79 = or i8 %78, 48
  store i8 %79, i8* %76, align 1
  %80 = icmp ugt i32 %73, 99
  br i1 %80, label %72, label %81

81:                                               ; preds = %72, %61
  %82 = bitcast i8** %47 to i64*
  %83 = load i64, i64* %82, align 8
  br label %84

84:                                               ; preds = %81, %68, %70
  %85 = phi i64 [ %71, %70 ], [ %83, %81 ], [ %69, %68 ]
  %86 = ptrtoint i8* %49 to i64
  %87 = sub i64 %86, %85
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %48, align 8
  %89 = inttoptr i64 %85 to i8*
  %90 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %89, i32 %88) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #11
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %167, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %109

99:                                               ; preds = %92
  %100 = zext i32 %98 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #11
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %99
  call void @llvm.trap() #11
  unreachable

107:                                              ; preds = %99
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %97, align 4
  br label %109

109:                                              ; preds = %107, %92
  %110 = phi i32 [ %108, %107 ], [ %98, %92 ]
  %111 = load atomic i32, i32* %93 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %109
  %115 = zext i32 %110 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #11
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !2

121:                                              ; preds = %114
  call void @llvm.trap() #11
  unreachable

122:                                              ; preds = %114
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %97, align 4
  br label %124

124:                                              ; preds = %122, %109
  %125 = phi i32 [ %123, %122 ], [ %110, %109 ]
  %126 = load atomic i32, i32* %93 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %124
  %130 = add i32 %125, -1
  store i32 %130, i32* %97, align 4
  br label %131

131:                                              ; preds = %129, %124
  %132 = phi i32 [ %130, %129 ], [ %125, %124 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #11
  br label %135

135:                                              ; preds = %131, %134
  %136 = load atomic i32, i32* %93 monotonic, align 4, !noalias !5
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = load i32, i32* %97, align 4
  br i1 %138, label %140, label %150

140:                                              ; preds = %135
  %141 = zext i32 %139 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #11
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %140
  call void @llvm.trap() #11, !noalias !5
  unreachable

148:                                              ; preds = %140
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %97, align 4, !noalias !5
  br label %150

150:                                              ; preds = %135, %148
  %151 = phi i32 [ %149, %148 ], [ %139, %135 ]
  %152 = bitcast %"class.WTF::StringAppend.545"* %17 to i64*
  store i64 ptrtoint ([15 x i8]* @.str.36 to i64), i64* %152, align 8, !alias.scope !5
  %153 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %153, align 8, !alias.scope !5
  %154 = load atomic i32, i32* %93 monotonic, align 4, !noalias !5
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %171

157:                                              ; preds = %150
  %158 = zext i32 %151 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #11
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !2

164:                                              ; preds = %157
  call void @llvm.trap() #11, !noalias !5
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %97, align 4, !noalias !5
  br label %171

167:                                              ; preds = %84
  %168 = bitcast %"class.WTF::StringAppend.545"* %17 to i64*
  store i64 ptrtoint ([15 x i8]* @.str.36 to i64), i64* %168, align 8, !alias.scope !5
  %169 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %169, align 8, !alias.scope !5
  %170 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i8** %170, align 8, !alias.scope !5
  br label %183

171:                                              ; preds = %165, %150
  %172 = phi i32 [ %166, %165 ], [ %151, %150 ]
  %173 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i8** %173, align 8, !alias.scope !5
  %174 = load atomic i32, i32* %93 monotonic, align 4, !noalias !5
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %171
  %178 = add i32 %172, -1
  store i32 %178, i32* %97, align 4, !noalias !5
  br label %179

179:                                              ; preds = %177, %171
  %180 = phi i32 [ %178, %177 ], [ %172, %171 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #11, !noalias !5
  br label %183

183:                                              ; preds = %167, %179, %182
  %184 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %35, align 8
  %185 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %184, i64 0, i32 12, i32 0, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #11
  %188 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 11
  %189 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 2
  %190 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 3
  %191 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 -86, i64 32, i1 false) #11
  store i8* %188, i8** %189, align 8
  %192 = urem i32 %186, 10
  %193 = udiv i32 %186, 10
  %194 = trunc i32 %192 to i8
  %195 = or i8 %194, 48
  store i8 %195, i8* %188, align 1
  %196 = icmp ugt i32 %186, 9
  br i1 %196, label %197, label %212

197:                                              ; preds = %183
  %198 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 10
  store i8* %198, i8** %189, align 8
  %199 = urem i32 %193, 10
  %200 = trunc i32 %199 to i8
  %201 = or i8 %200, 48
  store i8 %201, i8* %198, align 2
  %202 = icmp ugt i32 %186, 99
  br i1 %202, label %203, label %210

203:                                              ; preds = %197
  %204 = udiv i32 %186, 100
  %205 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %10, i64 0, i32 0, i64 9
  store i8* %205, i8** %189, align 8
  %206 = urem i32 %204, 10
  %207 = trunc i32 %206 to i8
  %208 = or i8 %207, 48
  store i8 %208, i8* %205, align 1
  %209 = icmp ugt i32 %186, 999
  br i1 %209, label %214, label %223

210:                                              ; preds = %197
  %211 = ptrtoint i8* %198 to i64
  br label %226

212:                                              ; preds = %183
  %213 = ptrtoint i8* %188 to i64
  br label %226

214:                                              ; preds = %203, %214
  %215 = phi i32 [ %217, %214 ], [ %204, %203 ]
  %216 = load i8*, i8** %189, align 8
  %217 = udiv i32 %215, 10
  %218 = getelementptr inbounds i8, i8* %216, i64 -1
  store i8* %218, i8** %189, align 8
  %219 = urem i32 %217, 10
  %220 = trunc i32 %219 to i8
  %221 = or i8 %220, 48
  store i8 %221, i8* %218, align 1
  %222 = icmp ugt i32 %215, 99
  br i1 %222, label %214, label %223

223:                                              ; preds = %214, %203
  %224 = bitcast i8** %189 to i64*
  %225 = load i64, i64* %224, align 8
  br label %226

226:                                              ; preds = %223, %210, %212
  %227 = phi i64 [ %213, %212 ], [ %225, %223 ], [ %211, %210 ]
  %228 = ptrtoint i8* %191 to i64
  %229 = sub i64 %228, %227
  %230 = trunc i64 %229 to i32
  store i32 %230, i32* %190, align 8
  %231 = inttoptr i64 %227 to i8*
  %232 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %231, i32 %230) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %187) #11
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.544"* nonnull sret %16, %"class.WTF::StringAppend.545"* nonnull dereferenceable(24) %17, %"class.WTF::StringImpl"* %232)
  %233 = bitcast %"class.WTF::StringAppend.544"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %233)
  %234 = bitcast %"class.WTF::StringAppend.544"* %16 to i64*
  %235 = load i64, i64* %234, align 8, !noalias !8
  %236 = bitcast %"class.WTF::StringAppend.544"* %9 to i64*
  store i64 %235, i64* %236, align 8, !noalias !8
  %237 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8, !noalias !8
  %239 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %238, %"class.WTF::StringImpl"** %239, align 8, !noalias !8
  %240 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %240, label %258, label %241

241:                                              ; preds = %226
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %258

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = zext i32 %248 to i33
  %250 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %249, i33 1) #11
  %251 = extractvalue { i33, i1 } %250, 1
  %252 = extractvalue { i33, i1 } %250, 0
  %253 = icmp slt i33 %252, 0
  %254 = or i1 %251, %253
  br i1 %254, label %255, label %256, !prof !2

255:                                              ; preds = %246
  call void @llvm.trap() #11
  unreachable

256:                                              ; preds = %246
  %257 = trunc i33 %252 to i32
  store i32 %257, i32* %247, align 4
  br label %258

258:                                              ; preds = %256, %241, %226
  %259 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %9, i64 0, i32 0, i32 1
  %260 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %16, i64 0, i32 0, i32 1
  %261 = bitcast i8** %260 to i64*
  %262 = load i64, i64* %261, align 8, !noalias !8
  %263 = bitcast i8** %259 to i64*
  store i64 %262, i64* %263, align 8, !noalias !8
  %264 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %16, i64 0, i32 1, i32 0, i32 0
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8, !noalias !8
  %266 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %9, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %265, %"class.WTF::StringImpl"** %266, align 8, !noalias !8
  %267 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %267, label %285, label %268

268:                                              ; preds = %258
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %285

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = zext i32 %275 to i33
  %277 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %276, i33 1) #11
  %278 = extractvalue { i33, i1 } %277, 1
  %279 = extractvalue { i33, i1 } %277, 0
  %280 = icmp slt i33 %279, 0
  %281 = or i1 %278, %280
  br i1 %281, label %282, label %283, !prof !2

282:                                              ; preds = %273
  call void @llvm.trap() #11
  unreachable

283:                                              ; preds = %273
  %284 = trunc i33 %279 to i32
  store i32 %284, i32* %274, align 4
  br label %285

285:                                              ; preds = %258, %268, %283
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %15, %"class.WTF::StringAppend.544"* nonnull byval(%"class.WTF::StringAppend.544") align 8 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %233)
  %286 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %15)
  %287 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %286, %"class.WTF::StringImpl"** %287, align 8
  %288 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %289 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %288, align 8
  %290 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %289, align 8
  call void %290(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %14) #11
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %287, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %285
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #11
  br label %306

306:                                              ; preds = %285, %302, %305
  %307 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  br i1 %314, label %317, label %319

317:                                              ; preds = %310
  %318 = add i32 %316, -1
  store i32 %318, i32* %315, align 4
  br label %319

319:                                              ; preds = %317, %310
  %320 = phi i32 [ %318, %317 ], [ %316, %310 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %308) #11
  br label %323

323:                                              ; preds = %322, %319, %306
  %324 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %340, label %327

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #11
  br label %340

340:                                              ; preds = %323, %336, %339
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %356, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %352

350:                                              ; preds = %343
  %351 = add i32 %349, -1
  store i32 %351, i32* %348, align 4
  br label %352

352:                                              ; preds = %350, %343
  %353 = phi i32 [ %351, %350 ], [ %349, %343 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #11
  br label %356

356:                                              ; preds = %355, %352, %340
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %358 = icmp eq %"class.WTF::StringImpl"* %357, null
  br i1 %358, label %372, label %359

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  br i1 %363, label %366, label %368

366:                                              ; preds = %359
  %367 = add i32 %365, -1
  store i32 %367, i32* %364, align 4
  br label %368

368:                                              ; preds = %366, %359
  %369 = phi i32 [ %367, %366 ], [ %365, %359 ]
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %357) #11
  br label %372

372:                                              ; preds = %356, %368, %371
  %373 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %389, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %382 = load i32, i32* %381, align 4
  br i1 %380, label %383, label %385

383:                                              ; preds = %376
  %384 = add i32 %382, -1
  store i32 %384, i32* %381, align 4
  br label %385

385:                                              ; preds = %383, %376
  %386 = phi i32 [ %384, %383 ], [ %382, %376 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %374) #11
  br label %389

389:                                              ; preds = %372, %385, %388
  br i1 %91, label %415, label %390

390:                                              ; preds = %389
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %404

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #11
  %403 = load i32, i32* %395, align 4
  br label %404

404:                                              ; preds = %399, %402
  %405 = phi i32 [ %400, %399 ], [ %403, %402 ]
  %406 = load atomic i32, i32* %391 monotonic, align 4
  %407 = and i32 %406, 2
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %411

409:                                              ; preds = %404
  %410 = add i32 %405, -1
  store i32 %410, i32* %395, align 4
  br label %411

411:                                              ; preds = %409, %404
  %412 = phi i32 [ %410, %409 ], [ %405, %404 ]
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %415

414:                                              ; preds = %411
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #11
  br label %415

415:                                              ; preds = %389, %411, %414
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  br label %958

416:                                              ; preds = %34
  %417 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %1, i64 0, i32 5, i32 0
  %418 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %417, align 8
  %419 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %418, i64 0, i32 11, i32 0, i32 0, i32 2
  %420 = load i32, i32* %419, align 4
  %421 = icmp ugt i32 %420, %3
  br i1 %421, label %800, label %422

422:                                              ; preds = %416
  %423 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423) #11
  %424 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %424) #11
  %425 = bitcast %"class.WTF::StringAppend.544"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %425) #11
  %426 = bitcast %"class.WTF::StringAppend.545"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %426) #11
  %427 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %427) #11
  %428 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %429 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %430 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %431 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %427, i8 -86, i64 32, i1 false) #11
  store i8* %428, i8** %429, align 8
  %432 = urem i32 %3, 10
  %433 = udiv i32 %3, 10
  %434 = trunc i32 %432 to i8
  %435 = or i8 %434, 48
  store i8 %435, i8* %428, align 1
  %436 = icmp ugt i32 %3, 9
  br i1 %436, label %437, label %452

437:                                              ; preds = %422
  %438 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %438, i8** %429, align 8
  %439 = urem i32 %433, 10
  %440 = trunc i32 %439 to i8
  %441 = or i8 %440, 48
  store i8 %441, i8* %438, align 2
  %442 = icmp ugt i32 %3, 99
  br i1 %442, label %443, label %450

443:                                              ; preds = %437
  %444 = udiv i32 %3, 100
  %445 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %445, i8** %429, align 8
  %446 = urem i32 %444, 10
  %447 = trunc i32 %446 to i8
  %448 = or i8 %447, 48
  store i8 %448, i8* %445, align 1
  %449 = icmp ugt i32 %3, 999
  br i1 %449, label %454, label %463

450:                                              ; preds = %437
  %451 = ptrtoint i8* %438 to i64
  br label %466

452:                                              ; preds = %422
  %453 = ptrtoint i8* %428 to i64
  br label %466

454:                                              ; preds = %443, %454
  %455 = phi i32 [ %457, %454 ], [ %444, %443 ]
  %456 = load i8*, i8** %429, align 8
  %457 = udiv i32 %455, 10
  %458 = getelementptr inbounds i8, i8* %456, i64 -1
  store i8* %458, i8** %429, align 8
  %459 = urem i32 %457, 10
  %460 = trunc i32 %459 to i8
  %461 = or i8 %460, 48
  store i8 %461, i8* %458, align 1
  %462 = icmp ugt i32 %455, 99
  br i1 %462, label %454, label %463

463:                                              ; preds = %454, %443
  %464 = bitcast i8** %429 to i64*
  %465 = load i64, i64* %464, align 8
  br label %466

466:                                              ; preds = %463, %450, %452
  %467 = phi i64 [ %453, %452 ], [ %465, %463 ], [ %451, %450 ]
  %468 = ptrtoint i8* %431 to i64
  %469 = sub i64 %468, %467
  %470 = trunc i64 %469 to i32
  store i32 %470, i32* %430, align 8
  %471 = inttoptr i64 %467 to i8*
  %472 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %471, i32 %470) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %427) #11
  %473 = icmp eq %"class.WTF::StringImpl"* %472, null
  br i1 %473, label %549, label %474

474:                                              ; preds = %466
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = load atomic i32, i32* %475 monotonic, align 4
  %477 = and i32 %476, 2
  %478 = icmp eq i32 %477, 0
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 0
  %480 = load i32, i32* %479, align 4
  br i1 %478, label %481, label %491

481:                                              ; preds = %474
  %482 = zext i32 %480 to i33
  %483 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %482, i33 1) #11
  %484 = extractvalue { i33, i1 } %483, 1
  %485 = extractvalue { i33, i1 } %483, 0
  %486 = icmp slt i33 %485, 0
  %487 = or i1 %484, %486
  br i1 %487, label %488, label %489, !prof !2

488:                                              ; preds = %481
  call void @llvm.trap() #11
  unreachable

489:                                              ; preds = %481
  %490 = trunc i33 %485 to i32
  store i32 %490, i32* %479, align 4
  br label %491

491:                                              ; preds = %489, %474
  %492 = phi i32 [ %490, %489 ], [ %480, %474 ]
  %493 = load atomic i32, i32* %475 monotonic, align 4
  %494 = and i32 %493, 2
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %506

496:                                              ; preds = %491
  %497 = zext i32 %492 to i33
  %498 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %497, i33 1) #11
  %499 = extractvalue { i33, i1 } %498, 1
  %500 = extractvalue { i33, i1 } %498, 0
  %501 = icmp slt i33 %500, 0
  %502 = or i1 %499, %501
  br i1 %502, label %503, label %504, !prof !2

503:                                              ; preds = %496
  call void @llvm.trap() #11
  unreachable

504:                                              ; preds = %496
  %505 = trunc i33 %500 to i32
  store i32 %505, i32* %479, align 4
  br label %506

506:                                              ; preds = %504, %491
  %507 = phi i32 [ %505, %504 ], [ %492, %491 ]
  %508 = load atomic i32, i32* %475 monotonic, align 4
  %509 = and i32 %508, 2
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %513

511:                                              ; preds = %506
  %512 = add i32 %507, -1
  store i32 %512, i32* %479, align 4
  br label %513

513:                                              ; preds = %511, %506
  %514 = phi i32 [ %512, %511 ], [ %507, %506 ]
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %513
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %472) #11
  br label %517

517:                                              ; preds = %513, %516
  %518 = load atomic i32, i32* %475 monotonic, align 4, !noalias !11
  %519 = and i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = load i32, i32* %479, align 4
  br i1 %520, label %522, label %532

522:                                              ; preds = %517
  %523 = zext i32 %521 to i33
  %524 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %523, i33 1) #11
  %525 = extractvalue { i33, i1 } %524, 1
  %526 = extractvalue { i33, i1 } %524, 0
  %527 = icmp slt i33 %526, 0
  %528 = or i1 %525, %527
  br i1 %528, label %529, label %530, !prof !2

529:                                              ; preds = %522
  call void @llvm.trap() #11, !noalias !11
  unreachable

530:                                              ; preds = %522
  %531 = trunc i33 %526 to i32
  store i32 %531, i32* %479, align 4, !noalias !11
  br label %532

532:                                              ; preds = %517, %530
  %533 = phi i32 [ %531, %530 ], [ %521, %517 ]
  %534 = bitcast %"class.WTF::StringAppend.545"* %21 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.39 to i64), i64* %534, align 8, !alias.scope !11
  %535 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %472, %"class.WTF::StringImpl"** %535, align 8, !alias.scope !11
  %536 = load atomic i32, i32* %475 monotonic, align 4, !noalias !11
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %553

539:                                              ; preds = %532
  %540 = zext i32 %533 to i33
  %541 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %540, i33 1) #11
  %542 = extractvalue { i33, i1 } %541, 1
  %543 = extractvalue { i33, i1 } %541, 0
  %544 = icmp slt i33 %543, 0
  %545 = or i1 %542, %544
  br i1 %545, label %546, label %547, !prof !2

546:                                              ; preds = %539
  call void @llvm.trap() #11, !noalias !11
  unreachable

547:                                              ; preds = %539
  %548 = trunc i33 %543 to i32
  store i32 %548, i32* %479, align 4, !noalias !11
  br label %553

549:                                              ; preds = %466
  %550 = bitcast %"class.WTF::StringAppend.545"* %21 to i64*
  store i64 ptrtoint ([14 x i8]* @.str.39 to i64), i64* %550, align 8, !alias.scope !11
  %551 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %551, align 8, !alias.scope !11
  %552 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i64 0, i64 0), i8** %552, align 8, !alias.scope !11
  br label %565

553:                                              ; preds = %547, %532
  %554 = phi i32 [ %548, %547 ], [ %533, %532 ]
  %555 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i64 0, i64 0), i8** %555, align 8, !alias.scope !11
  %556 = load atomic i32, i32* %475 monotonic, align 4, !noalias !11
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %561

559:                                              ; preds = %553
  %560 = add i32 %554, -1
  store i32 %560, i32* %479, align 4, !noalias !11
  br label %561

561:                                              ; preds = %559, %553
  %562 = phi i32 [ %560, %559 ], [ %554, %553 ]
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %565

564:                                              ; preds = %561
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %472) #11, !noalias !11
  br label %565

565:                                              ; preds = %549, %561, %564
  %566 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %12, align 8
  %567 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %566, i64 0, i32 5, i32 0
  %568 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %567, align 8
  %569 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %568, i64 0, i32 11, i32 0, i32 0, i32 2
  %570 = load i32, i32* %569, align 4
  %571 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %571) #11
  %572 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %573 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %574 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %575 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %571, i8 -86, i64 32, i1 false) #11
  store i8* %572, i8** %573, align 8
  %576 = urem i32 %570, 10
  %577 = udiv i32 %570, 10
  %578 = trunc i32 %576 to i8
  %579 = or i8 %578, 48
  store i8 %579, i8* %572, align 1
  %580 = icmp ugt i32 %570, 9
  br i1 %580, label %581, label %596

581:                                              ; preds = %565
  %582 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %582, i8** %573, align 8
  %583 = urem i32 %577, 10
  %584 = trunc i32 %583 to i8
  %585 = or i8 %584, 48
  store i8 %585, i8* %582, align 2
  %586 = icmp ugt i32 %570, 99
  br i1 %586, label %587, label %594

587:                                              ; preds = %581
  %588 = udiv i32 %570, 100
  %589 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %589, i8** %573, align 8
  %590 = urem i32 %588, 10
  %591 = trunc i32 %590 to i8
  %592 = or i8 %591, 48
  store i8 %592, i8* %589, align 1
  %593 = icmp ugt i32 %570, 999
  br i1 %593, label %598, label %607

594:                                              ; preds = %581
  %595 = ptrtoint i8* %582 to i64
  br label %610

596:                                              ; preds = %565
  %597 = ptrtoint i8* %572 to i64
  br label %610

598:                                              ; preds = %587, %598
  %599 = phi i32 [ %601, %598 ], [ %588, %587 ]
  %600 = load i8*, i8** %573, align 8
  %601 = udiv i32 %599, 10
  %602 = getelementptr inbounds i8, i8* %600, i64 -1
  store i8* %602, i8** %573, align 8
  %603 = urem i32 %601, 10
  %604 = trunc i32 %603 to i8
  %605 = or i8 %604, 48
  store i8 %605, i8* %602, align 1
  %606 = icmp ugt i32 %599, 99
  br i1 %606, label %598, label %607

607:                                              ; preds = %598, %587
  %608 = bitcast i8** %573 to i64*
  %609 = load i64, i64* %608, align 8
  br label %610

610:                                              ; preds = %607, %594, %596
  %611 = phi i64 [ %597, %596 ], [ %609, %607 ], [ %595, %594 ]
  %612 = ptrtoint i8* %575 to i64
  %613 = sub i64 %612, %611
  %614 = trunc i64 %613 to i32
  store i32 %614, i32* %574, align 8
  %615 = inttoptr i64 %611 to i8*
  %616 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %615, i32 %614) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %571) #11
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.544"* nonnull sret %20, %"class.WTF::StringAppend.545"* nonnull dereferenceable(24) %21, %"class.WTF::StringImpl"* %616)
  %617 = bitcast %"class.WTF::StringAppend.544"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %617)
  %618 = bitcast %"class.WTF::StringAppend.544"* %20 to i64*
  %619 = load i64, i64* %618, align 8, !noalias !14
  %620 = bitcast %"class.WTF::StringAppend.544"* %6 to i64*
  store i64 %619, i64* %620, align 8, !noalias !14
  %621 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %622 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %621, align 8, !noalias !14
  %623 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %622, %"class.WTF::StringImpl"** %623, align 8, !noalias !14
  %624 = icmp eq %"class.WTF::StringImpl"* %622, null
  br i1 %624, label %642, label %625

625:                                              ; preds = %610
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = load atomic i32, i32* %626 monotonic, align 4
  %628 = and i32 %627, 2
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %642

630:                                              ; preds = %625
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 0
  %632 = load i32, i32* %631, align 4
  %633 = zext i32 %632 to i33
  %634 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %633, i33 1) #11
  %635 = extractvalue { i33, i1 } %634, 1
  %636 = extractvalue { i33, i1 } %634, 0
  %637 = icmp slt i33 %636, 0
  %638 = or i1 %635, %637
  br i1 %638, label %639, label %640, !prof !2

639:                                              ; preds = %630
  call void @llvm.trap() #11
  unreachable

640:                                              ; preds = %630
  %641 = trunc i33 %636 to i32
  store i32 %641, i32* %631, align 4
  br label %642

642:                                              ; preds = %640, %625, %610
  %643 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %6, i64 0, i32 0, i32 1
  %644 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %20, i64 0, i32 0, i32 1
  %645 = bitcast i8** %644 to i64*
  %646 = load i64, i64* %645, align 8, !noalias !14
  %647 = bitcast i8** %643 to i64*
  store i64 %646, i64* %647, align 8, !noalias !14
  %648 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %20, i64 0, i32 1, i32 0, i32 0
  %649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %648, align 8, !noalias !14
  %650 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %649, %"class.WTF::StringImpl"** %650, align 8, !noalias !14
  %651 = icmp eq %"class.WTF::StringImpl"* %649, null
  br i1 %651, label %669, label %652

652:                                              ; preds = %642
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %654 = load atomic i32, i32* %653 monotonic, align 4
  %655 = and i32 %654, 2
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %657, label %669

657:                                              ; preds = %652
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 0
  %659 = load i32, i32* %658, align 4
  %660 = zext i32 %659 to i33
  %661 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %660, i33 1) #11
  %662 = extractvalue { i33, i1 } %661, 1
  %663 = extractvalue { i33, i1 } %661, 0
  %664 = icmp slt i33 %663, 0
  %665 = or i1 %662, %664
  br i1 %665, label %666, label %667, !prof !2

666:                                              ; preds = %657
  call void @llvm.trap() #11
  unreachable

667:                                              ; preds = %657
  %668 = trunc i33 %663 to i32
  store i32 %668, i32* %658, align 4
  br label %669

669:                                              ; preds = %642, %652, %667
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %19, %"class.WTF::StringAppend.544"* nonnull byval(%"class.WTF::StringAppend.544") align 8 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %617)
  %670 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %19)
  %671 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %670, %"class.WTF::StringImpl"** %671, align 8
  %672 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %673 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %672, align 8
  %674 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %673, align 8
  call void %674(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %18) #11
  %675 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %671, align 8
  %676 = icmp eq %"class.WTF::StringImpl"* %675, null
  br i1 %676, label %690, label %677

677:                                              ; preds = %669
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = and i32 %679, 2
  %681 = icmp eq i32 %680, 0
  %682 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %675, i64 0, i32 0
  %683 = load i32, i32* %682, align 4
  br i1 %681, label %684, label %686

684:                                              ; preds = %677
  %685 = add i32 %683, -1
  store i32 %685, i32* %682, align 4
  br label %686

686:                                              ; preds = %684, %677
  %687 = phi i32 [ %685, %684 ], [ %683, %677 ]
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %675) #11
  br label %690

690:                                              ; preds = %669, %686, %689
  %691 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %692 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %691, align 8
  %693 = icmp eq %"class.WTF::StringImpl"* %692, null
  br i1 %693, label %707, label %694

694:                                              ; preds = %690
  %695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %692, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %696 = load atomic i32, i32* %695 monotonic, align 4
  %697 = and i32 %696, 2
  %698 = icmp eq i32 %697, 0
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %692, i64 0, i32 0
  %700 = load i32, i32* %699, align 4
  br i1 %698, label %701, label %703

701:                                              ; preds = %694
  %702 = add i32 %700, -1
  store i32 %702, i32* %699, align 4
  br label %703

703:                                              ; preds = %701, %694
  %704 = phi i32 [ %702, %701 ], [ %700, %694 ]
  %705 = icmp eq i32 %704, 0
  br i1 %705, label %706, label %707

706:                                              ; preds = %703
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %692) #11
  br label %707

707:                                              ; preds = %706, %703, %690
  %708 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %709 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %708, align 8
  %710 = icmp eq %"class.WTF::StringImpl"* %709, null
  br i1 %710, label %724, label %711

711:                                              ; preds = %707
  %712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %713 = load atomic i32, i32* %712 monotonic, align 4
  %714 = and i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 0
  %717 = load i32, i32* %716, align 4
  br i1 %715, label %718, label %720

718:                                              ; preds = %711
  %719 = add i32 %717, -1
  store i32 %719, i32* %716, align 4
  br label %720

720:                                              ; preds = %718, %711
  %721 = phi i32 [ %719, %718 ], [ %717, %711 ]
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %723, label %724

723:                                              ; preds = %720
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %709) #11
  br label %724

724:                                              ; preds = %707, %720, %723
  %725 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %648, align 8
  %726 = icmp eq %"class.WTF::StringImpl"* %725, null
  br i1 %726, label %740, label %727

727:                                              ; preds = %724
  %728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %725, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %729 = load atomic i32, i32* %728 monotonic, align 4
  %730 = and i32 %729, 2
  %731 = icmp eq i32 %730, 0
  %732 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %725, i64 0, i32 0
  %733 = load i32, i32* %732, align 4
  br i1 %731, label %734, label %736

734:                                              ; preds = %727
  %735 = add i32 %733, -1
  store i32 %735, i32* %732, align 4
  br label %736

736:                                              ; preds = %734, %727
  %737 = phi i32 [ %735, %734 ], [ %733, %727 ]
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %739, label %740

739:                                              ; preds = %736
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %725) #11
  br label %740

740:                                              ; preds = %739, %736, %724
  %741 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %621, align 8
  %742 = icmp eq %"class.WTF::StringImpl"* %741, null
  br i1 %742, label %756, label %743

743:                                              ; preds = %740
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %745 = load atomic i32, i32* %744 monotonic, align 4
  %746 = and i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %741, i64 0, i32 0
  %749 = load i32, i32* %748, align 4
  br i1 %747, label %750, label %752

750:                                              ; preds = %743
  %751 = add i32 %749, -1
  store i32 %751, i32* %748, align 4
  br label %752

752:                                              ; preds = %750, %743
  %753 = phi i32 [ %751, %750 ], [ %749, %743 ]
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %756

755:                                              ; preds = %752
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %741) #11
  br label %756

756:                                              ; preds = %740, %752, %755
  %757 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %758 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %757, align 8
  %759 = icmp eq %"class.WTF::StringImpl"* %758, null
  br i1 %759, label %773, label %760

760:                                              ; preds = %756
  %761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %758, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %762 = load atomic i32, i32* %761 monotonic, align 4
  %763 = and i32 %762, 2
  %764 = icmp eq i32 %763, 0
  %765 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %758, i64 0, i32 0
  %766 = load i32, i32* %765, align 4
  br i1 %764, label %767, label %769

767:                                              ; preds = %760
  %768 = add i32 %766, -1
  store i32 %768, i32* %765, align 4
  br label %769

769:                                              ; preds = %767, %760
  %770 = phi i32 [ %768, %767 ], [ %766, %760 ]
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %772, label %773

772:                                              ; preds = %769
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %758) #11
  br label %773

773:                                              ; preds = %756, %769, %772
  br i1 %473, label %799, label %774

774:                                              ; preds = %773
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %776 = load atomic i32, i32* %775 monotonic, align 4
  %777 = and i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  br i1 %778, label %781, label %783

781:                                              ; preds = %774
  %782 = add i32 %780, -1
  store i32 %782, i32* %779, align 4
  br label %783

783:                                              ; preds = %781, %774
  %784 = phi i32 [ %782, %781 ], [ %780, %774 ]
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %786, label %788

786:                                              ; preds = %783
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %472) #11
  %787 = load i32, i32* %779, align 4
  br label %788

788:                                              ; preds = %783, %786
  %789 = phi i32 [ %784, %783 ], [ %787, %786 ]
  %790 = load atomic i32, i32* %775 monotonic, align 4
  %791 = and i32 %790, 2
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %793, label %795

793:                                              ; preds = %788
  %794 = add i32 %789, -1
  store i32 %794, i32* %779, align 4
  br label %795

795:                                              ; preds = %793, %788
  %796 = phi i32 [ %794, %793 ], [ %789, %788 ]
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %798, label %799

798:                                              ; preds = %795
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %472) #11
  br label %799

799:                                              ; preds = %773, %795, %798
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %426) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %425) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %424) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #11
  br label %958

800:                                              ; preds = %416
  %801 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %29, align 8
  %802 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %1, i64 0, i32 3, i32 0, i32 0
  %803 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %802, align 8
  %804 = icmp eq %"class.blink::BaseAudioContext"* %801, %803
  br i1 %804, label %806, label %805

805:                                              ; preds = %800
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 15, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.41, i64 0, i64 0)) #11
  br label %958

806:                                              ; preds = %800
  %807 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %36, i64 0, i32 7
  %808 = load i32, i32* %807, align 4
  %809 = icmp eq i32 %808, 7
  br i1 %809, label %810, label %821

810:                                              ; preds = %806
  %811 = bitcast %"class.blink::AudioHandler"* %36 to i32 (%"class.blink::AudioHandler"*)***
  %812 = load i32 (%"class.blink::AudioHandler"*)**, i32 (%"class.blink::AudioHandler"*)*** %811, align 8
  %813 = getelementptr inbounds i32 (%"class.blink::AudioHandler"*)*, i32 (%"class.blink::AudioHandler"*)** %812, i64 8
  %814 = load i32 (%"class.blink::AudioHandler"*)*, i32 (%"class.blink::AudioHandler"*)** %813, align 8
  %815 = call i32 %814(%"class.blink::AudioHandler"* %36) #11
  %816 = icmp eq i32 %815, 0
  br i1 %816, label %820, label %817

817:                                              ; preds = %810
  %818 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %35, align 8
  %819 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %12, align 8
  br label %821

820:                                              ; preds = %810
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 15, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.42, i64 0, i64 0)) #11
  br label %958

821:                                              ; preds = %817, %806
  %822 = phi %"class.blink::AudioNode"* [ %819, %817 ], [ %1, %806 ]
  %823 = phi %"class.blink::AudioHandler"* [ %818, %817 ], [ %36, %806 ]
  %824 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %824) #11
  %825 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %825) #11
  %826 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %826) #11
  %827 = call %"class.WTF::StringImpl"* @_ZNK5blink12AudioHandler12NodeTypeNameEv(%"class.blink::AudioHandler"* %823)
  %828 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %827, %"class.WTF::StringImpl"** %828, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %23, %"class.WTF::String"* nonnull %24, i32 0) #11
  %829 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %830 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %829, i64 0, i32 1, i32 0
  %831 = load i8, i8* %830, align 1
  %832 = icmp slt i8 %831, 0
  %833 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %834 = load i8*, i8** %833, align 8
  %835 = select i1 %832, i8* %834, i8* %825
  %836 = bitcast %"class.blink::AudioHandler"** %35 to i64*
  %837 = load i64, i64* %836, align 8
  %838 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %838) #11
  %839 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %839) #11
  %840 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %822, i64 0, i32 5, i32 0
  %841 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %840, align 8
  %842 = call %"class.WTF::StringImpl"* @_ZNK5blink12AudioHandler12NodeTypeNameEv(%"class.blink::AudioHandler"* %841)
  %843 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %842, %"class.WTF::StringImpl"** %843, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %25, %"class.WTF::String"* nonnull %26, i32 0) #11
  %844 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %845 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %844, i64 0, i32 1, i32 0
  %846 = load i8, i8* %845, align 1
  %847 = icmp slt i8 %846, 0
  %848 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %849 = load i8*, i8** %848, align 8
  %850 = select i1 %847, i8* %849, i8* %838
  %851 = bitcast %"class.blink::AudioHandler"** %840 to i64*
  %852 = load i64, i64* %851, align 8
  %853 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__._ZN5blink9AudioNode7connectEPS0_jjRNS_14ExceptionStateE, i64 0, i64 0), i32 %2, i8* %835, i64 %837, i32 %3, i8* %850, i64 %852) #11
  %854 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %853, %"class.WTF::StringImpl"** %854, align 8
  call void @_ZN5blink9AudioNode14SendLogMessageERKN3WTF6StringE(%"class.blink::AudioNode"* undef, %"class.WTF::String"* nonnull dereferenceable(8) %22)
  %855 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %854, align 8
  %856 = icmp eq %"class.WTF::StringImpl"* %855, null
  br i1 %856, label %870, label %857

857:                                              ; preds = %821
  %858 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %855, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %859 = load atomic i32, i32* %858 monotonic, align 4
  %860 = and i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %855, i64 0, i32 0
  %863 = load i32, i32* %862, align 4
  br i1 %861, label %864, label %866

864:                                              ; preds = %857
  %865 = add i32 %863, -1
  store i32 %865, i32* %862, align 4
  br label %866

866:                                              ; preds = %864, %857
  %867 = phi i32 [ %865, %864 ], [ %863, %857 ]
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %869, label %870

869:                                              ; preds = %866
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %855) #11
  br label %870

870:                                              ; preds = %821, %866, %869
  %871 = load i8, i8* %845, align 1
  %872 = icmp slt i8 %871, 0
  br i1 %872, label %873, label %875

873:                                              ; preds = %870
  %874 = load i8*, i8** %848, align 8
  call void @_ZdlPv(i8* %874) #17
  br label %875

875:                                              ; preds = %870, %873
  %876 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %843, align 8
  %877 = icmp eq %"class.WTF::StringImpl"* %876, null
  br i1 %877, label %891, label %878

878:                                              ; preds = %875
  %879 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %876, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %880 = load atomic i32, i32* %879 monotonic, align 4
  %881 = and i32 %880, 2
  %882 = icmp eq i32 %881, 0
  %883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %876, i64 0, i32 0
  %884 = load i32, i32* %883, align 4
  br i1 %882, label %885, label %887

885:                                              ; preds = %878
  %886 = add i32 %884, -1
  store i32 %886, i32* %883, align 4
  br label %887

887:                                              ; preds = %885, %878
  %888 = phi i32 [ %886, %885 ], [ %884, %878 ]
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %890, label %891

890:                                              ; preds = %887
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %876) #11
  br label %891

891:                                              ; preds = %875, %887, %890
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %839) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %838) #11
  %892 = load i8, i8* %830, align 1
  %893 = icmp slt i8 %892, 0
  br i1 %893, label %894, label %896

894:                                              ; preds = %891
  %895 = load i8*, i8** %833, align 8
  call void @_ZdlPv(i8* %895) #17
  br label %896

896:                                              ; preds = %891, %894
  %897 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %828, align 8
  %898 = icmp eq %"class.WTF::StringImpl"* %897, null
  br i1 %898, label %912, label %899

899:                                              ; preds = %896
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %901 = load atomic i32, i32* %900 monotonic, align 4
  %902 = and i32 %901, 2
  %903 = icmp eq i32 %902, 0
  %904 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 0
  %905 = load i32, i32* %904, align 4
  br i1 %903, label %906, label %908

906:                                              ; preds = %899
  %907 = add i32 %905, -1
  store i32 %907, i32* %904, align 4
  br label %908

908:                                              ; preds = %906, %899
  %909 = phi i32 [ %907, %906 ], [ %905, %899 ]
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %911, label %912

911:                                              ; preds = %908
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %897) #11
  br label %912

912:                                              ; preds = %896, %908, %911
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %826) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %825) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %824) #11
  %913 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %35, align 8
  %914 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %913, i64 0, i32 12
  %915 = call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %914, i32 %2) #11
  %916 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %915, i64 0, i32 0, i32 0, i32 0
  %917 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %916, align 8
  %918 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %12, align 8
  %919 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %918, i64 0, i32 5, i32 0
  %920 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %919, align 8
  %921 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %920, i64 0, i32 11
  %922 = call dereferenceable(8) %"class.std::__1::unique_ptr.367"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.364"* %921, i32 %3) #11
  %923 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %922, i64 0, i32 0, i32 0, i32 0
  %924 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %923, align 8
  call void @_ZN5blink15AudioNodeWiring7ConnectERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %917, %"class.blink::AudioNodeInput"* dereferenceable(104) %924) #11
  %925 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6, i32 0
  %926 = call dereferenceable(8) %"class.blink::Member.333"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.330"* %925, i32 %2) #11
  %927 = getelementptr inbounds %"class.blink::Member.333", %"class.blink::Member.333"* %926, i64 0, i32 0, i32 0
  %928 = load %"class.blink::HeapHashSet.335"*, %"class.blink::HeapHashSet.335"** %927, align 8
  %929 = icmp eq %"class.blink::HeapHashSet.335"* %928, null
  br i1 %929, label %930, label %943

930:                                              ; preds = %912
  %931 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64 24) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %931, i8 0, i64 20, i1 false) #11
  %932 = getelementptr inbounds i8, i8* %931, i64 -4
  %933 = bitcast i8* %932 to i16*
  %934 = load atomic i16, i16* %933 monotonic, align 2
  %935 = or i16 %934, 1
  store atomic i16 %935, i16* %933 release, align 2
  %936 = call dereferenceable(8) %"class.blink::Member.333"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.330"* %925, i32 %2) #11
  %937 = ptrtoint i8* %931 to i64
  %938 = bitcast %"class.blink::Member.333"* %936 to i64*
  store atomic i64 %937, i64* %938 monotonic, align 8
  %939 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %940 = icmp eq i32 %939, 0
  br i1 %940, label %943, label %941

941:                                              ; preds = %930
  %942 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %931) #11
  br label %943

943:                                              ; preds = %912, %941, %930
  %944 = call dereferenceable(8) %"class.blink::Member.333"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.330"* %925, i32 %2) #11
  %945 = getelementptr inbounds %"class.blink::Member.333", %"class.blink::Member.333"* %944, i64 0, i32 0, i32 0
  %946 = load %"class.blink::HeapHashSet.335"*, %"class.blink::HeapHashSet.335"** %945, align 8
  %947 = getelementptr inbounds %"class.blink::HeapHashSet.335", %"class.blink::HeapHashSet.335"* %946, i64 0, i32 0, i32 0
  %948 = call { %"class.blink::Member.341"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.339"* %947, %"class.blink::AudioNode"** nonnull dereferenceable(8) %12, %"class.blink::AudioNode"** nonnull dereferenceable(8) %12) #11
  %949 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %35, align 8
  %950 = bitcast %"class.blink::AudioHandler"* %949 to void (%"class.blink::AudioHandler"*)***
  %951 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %950, align 8
  %952 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %951, i64 18
  %953 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %952, align 8
  call void %953(%"class.blink::AudioHandler"* %949) #11
  %954 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %955 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %954, align 8
  %956 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %12, align 8
  call void @_ZN5blink16AudioGraphTracer15DidConnectNodesEPNS_9AudioNodeES2_jj(%"class.blink::AudioGraphTracer"* %955, %"class.blink::AudioNode"* %0, %"class.blink::AudioNode"* %956, i32 %2, i32 %3) #11
  %957 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %12, align 8
  br label %958

958:                                              ; preds = %943, %820, %805, %799, %415, %33
  %959 = phi %"class.blink::AudioNode"* [ null, %415 ], [ null, %799 ], [ null, %805 ], [ null, %820 ], [ %957, %943 ], [ null, %33 ]
  %960 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %28, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %960) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  ret %"class.blink::AudioNode"* %959
}

declare void @_ZNK5blink16BaseAudioContext32WarnForConnectionIfContextClosedEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #4

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9AudioNode15numberOfOutputsEv(%"class.blink::AudioNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %3, i64 0, i32 12, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.544"* noalias sret, %"class.WTF::StringAppend.545"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.545", align 8
  %5 = bitcast %"class.WTF::StringAppend.545"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.545"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.544"* %0, %"class.WTF::StringAppend.545"* nonnull byval(%"class.WTF::StringAppend.545") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.544"* %0, %"class.WTF::StringAppend.545"* nonnull byval(%"class.WTF::StringAppend.545") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #11
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.784"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #11
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %3, i8* %15) #11
  %16 = bitcast %"class.WTF::StringTypeAdapter.784"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #11
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %2, i8* %18) #11
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #11
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #11
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #11
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #11
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #11
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #11
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #11
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #11
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9AudioNode14numberOfInputsEv(%"class.blink::AudioNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %3, i64 0, i32 11, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode14SendLogMessageERKN3WTF6StringE(%"class.blink::AudioNode"* nocapture readnone, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %1, i32 0) #11
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %8
  %16 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8* %15) #11
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0) #11
  call void @_ZN5blink16WebRtcLogMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #17
  br label %25

25:                                               ; preds = %2, %22
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #11
  br label %41

41:                                               ; preds = %25, %37, %40
  %42 = load i8, i8* %10, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %45) #17
  br label %46

46:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

declare void @_ZN5blink15AudioNodeWiring7ConnectERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #4

declare void @_ZN5blink16AudioGraphTracer15DidConnectNodesEPNS_9AudioNodeES2_jj(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*, %"class.blink::AudioNode"*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode7connectEPNS_10AudioParamEjRNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioParam"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend.544", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.blink::AudioParam"*, align 8
  %9 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca %"class.WTF::StringAppend.544", align 8
  %13 = alloca %"class.WTF::StringAppend.545", align 8
  store %"class.blink::AudioParam"* %1, %"class.blink::AudioParam"** %8, align 8
  %14 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %9, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %16, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %9, %"class.blink::BaseAudioContext"* %17) #11
  %18 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %16, align 8
  call void @_ZNK5blink16BaseAudioContext32WarnForConnectionIfContextClosedEv(%"class.blink::BaseAudioContext"* %18) #11
  %19 = icmp eq %"class.blink::AudioParam"* %1, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %4
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i64 0, i64 0)) #11
  br label %448

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %23 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %23, i64 0, i32 12, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %25, %2
  br i1 %26, label %403, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #11
  %30 = bitcast %"class.WTF::StringAppend.544"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %31 = bitcast %"class.WTF::StringAppend.545"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %34 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false) #11
  store i8* %33, i8** %34, align 8
  %37 = urem i32 %2, 10
  %38 = udiv i32 %2, 10
  %39 = trunc i32 %37 to i8
  %40 = or i8 %39, 48
  store i8 %40, i8* %33, align 1
  %41 = icmp ugt i32 %2, 9
  br i1 %41, label %42, label %57

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %43, i8** %34, align 8
  %44 = urem i32 %38, 10
  %45 = trunc i32 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 2
  %47 = icmp ugt i32 %2, 99
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = udiv i32 %2, 100
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %50, i8** %34, align 8
  %51 = urem i32 %49, 10
  %52 = trunc i32 %51 to i8
  %53 = or i8 %52, 48
  store i8 %53, i8* %50, align 1
  %54 = icmp ugt i32 %2, 999
  br i1 %54, label %59, label %68

55:                                               ; preds = %42
  %56 = ptrtoint i8* %43 to i64
  br label %71

57:                                               ; preds = %27
  %58 = ptrtoint i8* %33 to i64
  br label %71

59:                                               ; preds = %48, %59
  %60 = phi i32 [ %62, %59 ], [ %49, %48 ]
  %61 = load i8*, i8** %34, align 8
  %62 = udiv i32 %60, 10
  %63 = getelementptr inbounds i8, i8* %61, i64 -1
  store i8* %63, i8** %34, align 8
  %64 = urem i32 %62, 10
  %65 = trunc i32 %64 to i8
  %66 = or i8 %65, 48
  store i8 %66, i8* %63, align 1
  %67 = icmp ugt i32 %60, 99
  br i1 %67, label %59, label %68

68:                                               ; preds = %59, %48
  %69 = bitcast i8** %34 to i64*
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %68, %55, %57
  %72 = phi i64 [ %58, %57 ], [ %70, %68 ], [ %56, %55 ]
  %73 = ptrtoint i8* %36 to i64
  %74 = sub i64 %73, %72
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %35, align 8
  %76 = inttoptr i64 %72 to i8*
  %77 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %76, i32 %75) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #11
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %154, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %96

86:                                               ; preds = %79
  %87 = zext i32 %85 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #11
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %86
  call void @llvm.trap() #11
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %84, align 4
  br label %96

96:                                               ; preds = %94, %79
  %97 = phi i32 [ %95, %94 ], [ %85, %79 ]
  %98 = load atomic i32, i32* %80 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %111

101:                                              ; preds = %96
  %102 = zext i32 %97 to i33
  %103 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #11
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %101
  call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %101
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %84, align 4
  br label %111

111:                                              ; preds = %109, %96
  %112 = phi i32 [ %110, %109 ], [ %97, %96 ]
  %113 = load atomic i32, i32* %80 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = add i32 %112, -1
  store i32 %117, i32* %84, align 4
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i32 [ %117, %116 ], [ %112, %111 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  br label %122

122:                                              ; preds = %118, %121
  %123 = load atomic i32, i32* %80 monotonic, align 4, !noalias !17
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = load i32, i32* %84, align 4
  br i1 %125, label %127, label %137

127:                                              ; preds = %122
  %128 = zext i32 %126 to i33
  %129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %128, i33 1) #11
  %130 = extractvalue { i33, i1 } %129, 1
  %131 = extractvalue { i33, i1 } %129, 0
  %132 = icmp slt i33 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %135, !prof !2

134:                                              ; preds = %127
  call void @llvm.trap() #11, !noalias !17
  unreachable

135:                                              ; preds = %127
  %136 = trunc i33 %131 to i32
  store i32 %136, i32* %84, align 4, !noalias !17
  br label %137

137:                                              ; preds = %122, %135
  %138 = phi i32 [ %136, %135 ], [ %126, %122 ]
  %139 = bitcast %"class.WTF::StringAppend.545"* %13 to i64*
  store i64 ptrtoint ([15 x i8]* @.str.36 to i64), i64* %139, align 8, !alias.scope !17
  %140 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %140, align 8, !alias.scope !17
  %141 = load atomic i32, i32* %80 monotonic, align 4, !noalias !17
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %158

144:                                              ; preds = %137
  %145 = zext i32 %138 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #11
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !2

151:                                              ; preds = %144
  call void @llvm.trap() #11, !noalias !17
  unreachable

152:                                              ; preds = %144
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %84, align 4, !noalias !17
  br label %158

154:                                              ; preds = %71
  %155 = bitcast %"class.WTF::StringAppend.545"* %13 to i64*
  store i64 ptrtoint ([15 x i8]* @.str.36 to i64), i64* %155, align 8, !alias.scope !17
  %156 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %156, align 8, !alias.scope !17
  %157 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i8** %157, align 8, !alias.scope !17
  br label %170

158:                                              ; preds = %152, %137
  %159 = phi i32 [ %153, %152 ], [ %138, %137 ]
  %160 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i8** %160, align 8, !alias.scope !17
  %161 = load atomic i32, i32* %80 monotonic, align 4, !noalias !17
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %158
  %165 = add i32 %159, -1
  store i32 %165, i32* %84, align 4, !noalias !17
  br label %166

166:                                              ; preds = %164, %158
  %167 = phi i32 [ %165, %164 ], [ %159, %158 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11, !noalias !17
  br label %170

170:                                              ; preds = %154, %166, %169
  %171 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %22, align 8
  %172 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %171, i64 0, i32 12, i32 0, i32 0, i32 2
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %174) #11
  %175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %176 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %177 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %178 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 32, i1 false) #11
  store i8* %175, i8** %176, align 8
  %179 = urem i32 %173, 10
  %180 = udiv i32 %173, 10
  %181 = trunc i32 %179 to i8
  %182 = or i8 %181, 48
  store i8 %182, i8* %175, align 1
  %183 = icmp ugt i32 %173, 9
  br i1 %183, label %184, label %199

184:                                              ; preds = %170
  %185 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %185, i8** %176, align 8
  %186 = urem i32 %180, 10
  %187 = trunc i32 %186 to i8
  %188 = or i8 %187, 48
  store i8 %188, i8* %185, align 2
  %189 = icmp ugt i32 %173, 99
  br i1 %189, label %190, label %197

190:                                              ; preds = %184
  %191 = udiv i32 %173, 100
  %192 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %192, i8** %176, align 8
  %193 = urem i32 %191, 10
  %194 = trunc i32 %193 to i8
  %195 = or i8 %194, 48
  store i8 %195, i8* %192, align 1
  %196 = icmp ugt i32 %173, 999
  br i1 %196, label %201, label %210

197:                                              ; preds = %184
  %198 = ptrtoint i8* %185 to i64
  br label %213

199:                                              ; preds = %170
  %200 = ptrtoint i8* %175 to i64
  br label %213

201:                                              ; preds = %190, %201
  %202 = phi i32 [ %204, %201 ], [ %191, %190 ]
  %203 = load i8*, i8** %176, align 8
  %204 = udiv i32 %202, 10
  %205 = getelementptr inbounds i8, i8* %203, i64 -1
  store i8* %205, i8** %176, align 8
  %206 = urem i32 %204, 10
  %207 = trunc i32 %206 to i8
  %208 = or i8 %207, 48
  store i8 %208, i8* %205, align 1
  %209 = icmp ugt i32 %202, 99
  br i1 %209, label %201, label %210

210:                                              ; preds = %201, %190
  %211 = bitcast i8** %176 to i64*
  %212 = load i64, i64* %211, align 8
  br label %213

213:                                              ; preds = %210, %197, %199
  %214 = phi i64 [ %200, %199 ], [ %212, %210 ], [ %198, %197 ]
  %215 = ptrtoint i8* %178 to i64
  %216 = sub i64 %215, %214
  %217 = trunc i64 %216 to i32
  store i32 %217, i32* %177, align 8
  %218 = inttoptr i64 %214 to i8*
  %219 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %218, i32 %217) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %174) #11
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.544"* nonnull sret %12, %"class.WTF::StringAppend.545"* nonnull dereferenceable(24) %13, %"class.WTF::StringImpl"* %219)
  %220 = bitcast %"class.WTF::StringAppend.544"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %220)
  %221 = bitcast %"class.WTF::StringAppend.544"* %12 to i64*
  %222 = load i64, i64* %221, align 8, !noalias !20
  %223 = bitcast %"class.WTF::StringAppend.544"* %5 to i64*
  store i64 %222, i64* %223, align 8, !noalias !20
  %224 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8, !noalias !20
  %226 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %226, align 8, !noalias !20
  %227 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %227, label %245, label %228

228:                                              ; preds = %213
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %245

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i33
  %237 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %236, i33 1) #11
  %238 = extractvalue { i33, i1 } %237, 1
  %239 = extractvalue { i33, i1 } %237, 0
  %240 = icmp slt i33 %239, 0
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %243, !prof !2

242:                                              ; preds = %233
  call void @llvm.trap() #11
  unreachable

243:                                              ; preds = %233
  %244 = trunc i33 %239 to i32
  store i32 %244, i32* %234, align 4
  br label %245

245:                                              ; preds = %243, %228, %213
  %246 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %5, i64 0, i32 0, i32 1
  %247 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %12, i64 0, i32 0, i32 1
  %248 = bitcast i8** %247 to i64*
  %249 = load i64, i64* %248, align 8, !noalias !20
  %250 = bitcast i8** %246 to i64*
  store i64 %249, i64* %250, align 8, !noalias !20
  %251 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %12, i64 0, i32 1, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8, !noalias !20
  %253 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %252, %"class.WTF::StringImpl"** %253, align 8, !noalias !20
  %254 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %254, label %272, label %255

255:                                              ; preds = %245
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i33
  %264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %263, i33 1) #11
  %265 = extractvalue { i33, i1 } %264, 1
  %266 = extractvalue { i33, i1 } %264, 0
  %267 = icmp slt i33 %266, 0
  %268 = or i1 %265, %267
  br i1 %268, label %269, label %270, !prof !2

269:                                              ; preds = %260
  call void @llvm.trap() #11
  unreachable

270:                                              ; preds = %260
  %271 = trunc i33 %266 to i32
  store i32 %271, i32* %261, align 4
  br label %272

272:                                              ; preds = %245, %255, %270
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %11, %"class.WTF::StringAppend.544"* nonnull byval(%"class.WTF::StringAppend.544") align 8 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %220)
  %273 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %11)
  %274 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %273, %"class.WTF::StringImpl"** %274, align 8
  %275 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %276 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %275, align 8
  %277 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %276, align 8
  call void %277(%"class.blink::ExceptionState"* %3, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %10) #11
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %274, align 8
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %272
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #11
  br label %293

293:                                              ; preds = %272, %289, %292
  %294 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %310, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  br i1 %301, label %304, label %306

304:                                              ; preds = %297
  %305 = add i32 %303, -1
  store i32 %305, i32* %302, align 4
  br label %306

306:                                              ; preds = %304, %297
  %307 = phi i32 [ %305, %304 ], [ %303, %297 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %295) #11
  br label %310

310:                                              ; preds = %309, %306, %293
  %311 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #11
  br label %327

327:                                              ; preds = %310, %323, %326
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %329 = icmp eq %"class.WTF::StringImpl"* %328, null
  br i1 %329, label %343, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %328) #11
  br label %343

343:                                              ; preds = %342, %339, %327
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %359, label %346

346:                                              ; preds = %343
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = load atomic i32, i32* %347 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  br i1 %350, label %353, label %355

353:                                              ; preds = %346
  %354 = add i32 %352, -1
  store i32 %354, i32* %351, align 4
  br label %355

355:                                              ; preds = %353, %346
  %356 = phi i32 [ %354, %353 ], [ %352, %346 ]
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %355
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #11
  br label %359

359:                                              ; preds = %343, %355, %358
  %360 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %360, align 8
  %362 = icmp eq %"class.WTF::StringImpl"* %361, null
  br i1 %362, label %376, label %363

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  br i1 %367, label %370, label %372

370:                                              ; preds = %363
  %371 = add i32 %369, -1
  store i32 %371, i32* %368, align 4
  br label %372

372:                                              ; preds = %370, %363
  %373 = phi i32 [ %371, %370 ], [ %369, %363 ]
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %372
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %361) #11
  br label %376

376:                                              ; preds = %359, %372, %375
  br i1 %78, label %402, label %377

377:                                              ; preds = %376
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %391

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  %390 = load i32, i32* %382, align 4
  br label %391

391:                                              ; preds = %386, %389
  %392 = phi i32 [ %387, %386 ], [ %390, %389 ]
  %393 = load atomic i32, i32* %378 monotonic, align 4
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %398

396:                                              ; preds = %391
  %397 = add i32 %392, -1
  store i32 %397, i32* %382, align 4
  br label %398

398:                                              ; preds = %396, %391
  %399 = phi i32 [ %397, %396 ], [ %392, %391 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  br label %402

402:                                              ; preds = %376, %398, %401
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %448

403:                                              ; preds = %21
  %404 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %16, align 8
  %405 = getelementptr inbounds %"class.blink::AudioParam", %"class.blink::AudioParam"* %1, i64 0, i32 3, i32 0, i32 0
  %406 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %405, align 8
  %407 = icmp eq %"class.blink::BaseAudioContext"* %404, %406
  br i1 %407, label %409, label %408

408:                                              ; preds = %403
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 12, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.45, i64 0, i64 0)) #11
  br label %448

409:                                              ; preds = %403
  %410 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %23, i64 0, i32 12
  %411 = call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %410, i32 %2) #11
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %411, i64 0, i32 0, i32 0, i32 0
  %413 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %412, align 8
  %414 = getelementptr inbounds %"class.blink::AudioParam", %"class.blink::AudioParam"* %1, i64 0, i32 2, i32 0
  %415 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %414, align 8
  call void @_ZN5blink15AudioNodeWiring7ConnectERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %413, %"class.blink::AudioParamHandler"* dereferenceable(208) %415) #11
  %416 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7, i32 0
  %417 = call dereferenceable(8) %"class.blink::Member.350"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.347"* %416, i32 %2) #11
  %418 = getelementptr inbounds %"class.blink::Member.350", %"class.blink::Member.350"* %417, i64 0, i32 0, i32 0
  %419 = load %"class.blink::HeapHashSet.352"*, %"class.blink::HeapHashSet.352"** %418, align 8
  %420 = icmp eq %"class.blink::HeapHashSet.352"* %419, null
  br i1 %420, label %421, label %434

421:                                              ; preds = %409
  %422 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64 24) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %422, i8 0, i64 20, i1 false) #11
  %423 = getelementptr inbounds i8, i8* %422, i64 -4
  %424 = bitcast i8* %423 to i16*
  %425 = load atomic i16, i16* %424 monotonic, align 2
  %426 = or i16 %425, 1
  store atomic i16 %426, i16* %424 release, align 2
  %427 = call dereferenceable(8) %"class.blink::Member.350"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.347"* %416, i32 %2) #11
  %428 = ptrtoint i8* %422 to i64
  %429 = bitcast %"class.blink::Member.350"* %427 to i64*
  store atomic i64 %428, i64* %429 monotonic, align 8
  %430 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %434, label %432

432:                                              ; preds = %421
  %433 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %422) #11
  br label %434

434:                                              ; preds = %409, %432, %421
  %435 = call dereferenceable(8) %"class.blink::Member.350"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.347"* %416, i32 %2) #11
  %436 = getelementptr inbounds %"class.blink::Member.350", %"class.blink::Member.350"* %435, i64 0, i32 0, i32 0
  %437 = load %"class.blink::HeapHashSet.352"*, %"class.blink::HeapHashSet.352"** %436, align 8
  %438 = getelementptr inbounds %"class.blink::HeapHashSet.352", %"class.blink::HeapHashSet.352"* %437, i64 0, i32 0, i32 0
  %439 = call { %"class.blink::Member.358"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.356"* %438, %"class.blink::AudioParam"** nonnull dereferenceable(8) %8, %"class.blink::AudioParam"** nonnull dereferenceable(8) %8) #11
  %440 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %22, align 8
  %441 = bitcast %"class.blink::AudioHandler"* %440 to void (%"class.blink::AudioHandler"*)***
  %442 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %441, align 8
  %443 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %442, i64 18
  %444 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %443, align 8
  call void %444(%"class.blink::AudioHandler"* %440) #11
  %445 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %446 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %445, align 8
  %447 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %8, align 8
  call void @_ZN5blink16AudioGraphTracer19DidConnectNodeParamEPNS_9AudioNodeEPNS_10AudioParamEj(%"class.blink::AudioGraphTracer"* %446, %"class.blink::AudioNode"* %0, %"class.blink::AudioParam"* %447, i32 %2) #11
  br label %448

448:                                              ; preds = %434, %408, %402, %20
  %449 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %15, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %449) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  ret void
}

declare void @_ZN5blink15AudioNodeWiring7ConnectERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #4

declare void @_ZN5blink16AudioGraphTracer19DidConnectNodeParamEPNS_9AudioNodeEPNS_10AudioParamEj(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*, %"class.blink::AudioParam"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode23DisconnectAllFromOutputEj(%"class.blink::AudioNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 0, i32 12
  %6 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %5, i32 %1) #11
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %7, align 8
  tail call void @_ZN5blink15AudioNodeOutput13DisconnectAllEv(%"class.blink::AudioNodeOutput"* %8) #11
  %9 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6, i32 0
  %10 = tail call dereferenceable(8) %"class.blink::Member.333"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.330"* %9, i32 %1) #11
  %11 = bitcast %"class.blink::Member.333"* %10 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7, i32 0
  %13 = tail call dereferenceable(8) %"class.blink::Member.350"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.347"* %12, i32 %1) #11
  %14 = bitcast %"class.blink::Member.350"* %13 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  ret void
}

declare void @_ZN5blink15AudioNodeOutput13DisconnectAllEv(%"class.blink::AudioNodeOutput"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9AudioNode31DisconnectFromOutputIfConnectedEjRS0_j(%"class.blink::AudioNode"*, i32, %"class.blink::AudioNode"* dereferenceable(168), i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %6 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %6, i64 0, i32 12
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %7, i32 %1) #11
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %2, i64 0, i32 5, i32 0
  %12 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %12, i64 0, i32 11
  %14 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.367"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.364"* %13, i32 %3) #11
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::AudioNodeInput"*, %"class.blink::AudioNodeInput"** %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink15AudioNodeWiring11IsConnectedERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %10, %"class.blink::AudioNodeInput"* dereferenceable(104) %16) #11
  br i1 %17, label %18, label %100

18:                                               ; preds = %4
  tail call void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %10, %"class.blink::AudioNodeInput"* dereferenceable(104) %16) #11
  %19 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6, i32 0
  %20 = tail call dereferenceable(8) %"class.blink::Member.333"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.330"* %19, i32 %1) #11
  %21 = getelementptr inbounds %"class.blink::Member.333", %"class.blink::Member.333"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::HeapHashSet.335"*, %"class.blink::HeapHashSet.335"** %21, align 8
  %23 = ptrtoint %"class.blink::AudioNode"* %2 to i64
  %24 = getelementptr inbounds %"class.blink::HeapHashSet.335", %"class.blink::HeapHashSet.335"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %24, align 8
  %26 = icmp eq %"class.blink::Member.341"* %25, null
  %27 = getelementptr inbounds %"class.blink::HeapHashSet.335", %"class.blink::HeapHashSet.335"* %22, i64 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  br i1 %26, label %90, label %29

29:                                               ; preds = %18
  %30 = add i32 %28, -1
  %31 = zext i32 %30 to i64
  %32 = shl i64 %23, 32
  %33 = xor i64 %32, -1
  %34 = add i64 %33, %23
  %35 = lshr i64 %34, 22
  %36 = xor i64 %35, %34
  %37 = shl i64 %36, 13
  %38 = xor i64 %37, -1
  %39 = add i64 %36, %38
  %40 = lshr i64 %39, 8
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, 9
  %43 = lshr i64 %42, 15
  %44 = xor i64 %43, %42
  %45 = shl i64 %44, 27
  %46 = xor i64 %45, -1
  %47 = add i64 %44, %46
  %48 = lshr i64 %47, 31
  %49 = xor i64 %48, %47
  %50 = trunc i64 %49 to i32
  %51 = and i32 %30, %50
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %25, i64 %52
  %54 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %54, align 8
  %56 = icmp eq %"class.blink::AudioNode"* %55, %2
  br i1 %56, label %85, label %57

57:                                               ; preds = %29
  %58 = xor i32 %50, -1
  %59 = lshr i32 %50, 23
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 12
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 7
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 20
  %68 = xor i32 %67, %66
  %69 = or i32 %68, 1
  %70 = zext i32 %69 to i64
  br label %71

71:                                               ; preds = %76, %57
  %72 = phi %"class.blink::AudioNode"* [ %55, %57 ], [ %83, %76 ]
  %73 = phi i64 [ %52, %57 ], [ %80, %76 ]
  %74 = phi i64 [ 0, %57 ], [ %78, %76 ]
  %75 = icmp eq %"class.blink::AudioNode"* %72, null
  br i1 %75, label %90, label %76

76:                                               ; preds = %71
  %77 = icmp eq i64 %74, 0
  %78 = select i1 %77, i64 %70, i64 %74
  %79 = add i64 %78, %73
  %80 = and i64 %79, %31
  %81 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %25, i64 %80
  %82 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %82, align 8
  %84 = icmp eq %"class.blink::AudioNode"* %83, %2
  br i1 %84, label %85, label %71

85:                                               ; preds = %76, %29
  %86 = phi %"class.blink::Member.341"* [ %53, %29 ], [ %81, %76 ]
  %87 = icmp eq %"class.blink::Member.341"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = zext i32 %28 to i64
  br label %93

90:                                               ; preds = %71, %85, %18
  %91 = zext i32 %28 to i64
  %92 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %25, i64 %91
  br label %93

93:                                               ; preds = %90, %88
  %94 = phi i64 [ %89, %88 ], [ %91, %90 ]
  %95 = phi %"class.blink::Member.341"* [ %86, %88 ], [ %92, %90 ]
  %96 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %25, i64 %94
  %97 = icmp eq %"class.blink::Member.341"* %96, %95
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::HeapHashSet.335", %"class.blink::HeapHashSet.335"* %22, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.339"* %99, %"class.blink::Member.341"* %95) #11
  br label %100

100:                                              ; preds = %98, %93, %4
  %101 = phi i1 [ false, %4 ], [ true, %93 ], [ true, %98 ]
  ret i1 %101
}

declare zeroext i1 @_ZN5blink15AudioNodeWiring11IsConnectedERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #4

declare void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_14AudioNodeInputE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioNodeInput"* dereferenceable(104)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9AudioNode31DisconnectFromOutputIfConnectedEjRNS_10AudioParamE(%"class.blink::AudioNode"*, i32, %"class.blink::AudioParam"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %5 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %5, i64 0, i32 12
  %7 = tail call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %6, i32 %1) #11
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::AudioParam", %"class.blink::AudioParam"* %2, i64 0, i32 2, i32 0
  %11 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %10, align 8
  %12 = tail call zeroext i1 @_ZN5blink15AudioNodeWiring11IsConnectedERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %9, %"class.blink::AudioParamHandler"* dereferenceable(208) %11) #11
  br i1 %12, label %13, label %96

13:                                               ; preds = %3
  %14 = load %"class.blink::AudioParamHandler"*, %"class.blink::AudioParamHandler"** %10, align 8
  tail call void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104) %9, %"class.blink::AudioParamHandler"* dereferenceable(208) %14) #11
  %15 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7, i32 0
  %16 = tail call dereferenceable(8) %"class.blink::Member.350"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.347"* %15, i32 %1) #11
  %17 = getelementptr inbounds %"class.blink::Member.350", %"class.blink::Member.350"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::HeapHashSet.352"*, %"class.blink::HeapHashSet.352"** %17, align 8
  %19 = ptrtoint %"class.blink::AudioParam"* %2 to i64
  %20 = getelementptr inbounds %"class.blink::HeapHashSet.352", %"class.blink::HeapHashSet.352"* %18, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %20, align 8
  %22 = icmp eq %"class.blink::Member.358"* %21, null
  %23 = getelementptr inbounds %"class.blink::HeapHashSet.352", %"class.blink::HeapHashSet.352"* %18, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  br i1 %22, label %86, label %25

25:                                               ; preds = %13
  %26 = add i32 %24, -1
  %27 = zext i32 %26 to i64
  %28 = shl i64 %19, 32
  %29 = xor i64 %28, -1
  %30 = add i64 %29, %19
  %31 = lshr i64 %30, 22
  %32 = xor i64 %31, %30
  %33 = shl i64 %32, 13
  %34 = xor i64 %33, -1
  %35 = add i64 %32, %34
  %36 = lshr i64 %35, 8
  %37 = xor i64 %36, %35
  %38 = mul i64 %37, 9
  %39 = lshr i64 %38, 15
  %40 = xor i64 %39, %38
  %41 = shl i64 %40, 27
  %42 = xor i64 %41, -1
  %43 = add i64 %40, %42
  %44 = lshr i64 %43, 31
  %45 = xor i64 %44, %43
  %46 = trunc i64 %45 to i32
  %47 = and i32 %26, %46
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %21, i64 %48
  %50 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %50, align 8
  %52 = icmp eq %"class.blink::AudioParam"* %51, %2
  br i1 %52, label %81, label %53

53:                                               ; preds = %25
  %54 = xor i32 %46, -1
  %55 = lshr i32 %46, 23
  %56 = add i32 %55, %54
  %57 = shl i32 %56, 12
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 7
  %60 = xor i32 %59, %58
  %61 = shl i32 %60, 2
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 20
  %64 = xor i32 %63, %62
  %65 = or i32 %64, 1
  %66 = zext i32 %65 to i64
  br label %67

67:                                               ; preds = %72, %53
  %68 = phi %"class.blink::AudioParam"* [ %51, %53 ], [ %79, %72 ]
  %69 = phi i64 [ %48, %53 ], [ %76, %72 ]
  %70 = phi i64 [ 0, %53 ], [ %74, %72 ]
  %71 = icmp eq %"class.blink::AudioParam"* %68, null
  br i1 %71, label %86, label %72

72:                                               ; preds = %67
  %73 = icmp eq i64 %70, 0
  %74 = select i1 %73, i64 %66, i64 %70
  %75 = add i64 %74, %69
  %76 = and i64 %75, %27
  %77 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %21, i64 %76
  %78 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %78, align 8
  %80 = icmp eq %"class.blink::AudioParam"* %79, %2
  br i1 %80, label %81, label %67

81:                                               ; preds = %72, %25
  %82 = phi %"class.blink::Member.358"* [ %49, %25 ], [ %77, %72 ]
  %83 = icmp eq %"class.blink::Member.358"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = zext i32 %24 to i64
  br label %89

86:                                               ; preds = %67, %81, %13
  %87 = zext i32 %24 to i64
  %88 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %21, i64 %87
  br label %89

89:                                               ; preds = %86, %84
  %90 = phi i64 [ %85, %84 ], [ %87, %86 ]
  %91 = phi %"class.blink::Member.358"* [ %82, %84 ], [ %88, %86 ]
  %92 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %21, i64 %90
  %93 = icmp eq %"class.blink::Member.358"* %92, %91
  br i1 %93, label %96, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::HeapHashSet.352", %"class.blink::HeapHashSet.352"* %18, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.356"* %95, %"class.blink::Member.358"* %91) #11
  br label %96

96:                                               ; preds = %94, %89, %3
  %97 = phi i1 [ false, %3 ], [ true, %89 ], [ true, %94 ]
  ret i1 %97
}

declare zeroext i1 @_ZN5blink15AudioNodeWiring11IsConnectedERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #4

declare void @_ZN5blink15AudioNodeWiring10DisconnectERNS_15AudioNodeOutputERNS_17AudioParamHandlerE(%"class.blink::AudioNodeOutput"* dereferenceable(104), %"class.blink::AudioParamHandler"* dereferenceable(208)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode10disconnectEv(%"class.blink::AudioNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %3 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %2, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %5, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %2, %"class.blink::BaseAudioContext"* %6) #11
  %7 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %8 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %8, i64 0, i32 12, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6, i32 0
  %14 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7, i32 0
  br label %24

15:                                               ; preds = %24, %1
  %16 = phi %"class.blink::AudioHandler"* [ %8, %1 ], [ %36, %24 ]
  %17 = bitcast %"class.blink::AudioHandler"* %16 to void (%"class.blink::AudioHandler"*)***
  %18 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %18, i64 18
  %20 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %19, align 8
  call void %20(%"class.blink::AudioHandler"* %16) #11
  %21 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %22 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %21, align 8
  call void @_ZN5blink16AudioGraphTracer18DidDisconnectNodesEPNS_9AudioNodeES2_jj(%"class.blink::AudioGraphTracer"* %22, %"class.blink::AudioNode"* %0, %"class.blink::AudioNode"* null, i32 0, i32 0) #11
  %23 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %4, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret void

24:                                               ; preds = %12, %24
  %25 = phi %"class.blink::AudioHandler"* [ %8, %12 ], [ %36, %24 ]
  %26 = phi i32 [ 0, %12 ], [ %35, %24 ]
  %27 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %25, i64 0, i32 12
  %28 = call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %27, i32 %26) #11
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %29, align 8
  call void @_ZN5blink15AudioNodeOutput13DisconnectAllEv(%"class.blink::AudioNodeOutput"* %30) #11
  %31 = call dereferenceable(8) %"class.blink::Member.333"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.330"* %13, i32 %26) #11
  %32 = bitcast %"class.blink::Member.333"* %31 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  %33 = call dereferenceable(8) %"class.blink::Member.350"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.347"* %14, i32 %26) #11
  %34 = bitcast %"class.blink::Member.350"* %33 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  %35 = add nuw i32 %26, 1
  %36 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %7, align 8
  %37 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %36, i64 0, i32 12, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %35, %38
  br i1 %39, label %24, label %15
}

declare void @_ZN5blink16AudioGraphTracer18DidDisconnectNodesEPNS_9AudioNodeES2_jj(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*, %"class.blink::AudioNode"*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode10disconnectEjRNS_14ExceptionStateE(%"class.blink::AudioNode"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %8, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %4, %"class.blink::BaseAudioContext"* %9) #11
  %10 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %11 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %11, i64 0, i32 12, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, %1
  br i1 %14, label %39, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = add i32 %13, -1
  %18 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i32 %1, i32 0, i32 0, i32 %17, i32 0)
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %21 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %20, align 8
  %22 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %21, align 8
  call void %22(%"class.blink::ExceptionState"* %2, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11
  br label %38

38:                                               ; preds = %15, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %57

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %11, i64 0, i32 12
  %41 = call dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"* %40, i32 %1) #11
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::AudioNodeOutput"*, %"class.blink::AudioNodeOutput"** %42, align 8
  call void @_ZN5blink15AudioNodeOutput13DisconnectAllEv(%"class.blink::AudioNodeOutput"* %43) #11
  %44 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 6, i32 0
  %45 = call dereferenceable(8) %"class.blink::Member.333"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.330"* %44, i32 %1) #11
  %46 = bitcast %"class.blink::Member.333"* %45 to i64*
  store atomic i64 0, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 7, i32 0
  %48 = call dereferenceable(8) %"class.blink::Member.350"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.347"* %47, i32 %1) #11
  %49 = bitcast %"class.blink::Member.350"* %48 to i64*
  store atomic i64 0, i64* %49 monotonic, align 8
  %50 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %10, align 8
  %51 = bitcast %"class.blink::AudioHandler"* %50 to void (%"class.blink::AudioHandler"*)***
  %52 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %52, i64 18
  %54 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %53, align 8
  call void %54(%"class.blink::AudioHandler"* %50) #11
  %55 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %56 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %55, align 8
  call void @_ZN5blink16AudioGraphTracer18DidDisconnectNodesEPNS_9AudioNodeES2_jj(%"class.blink::AudioGraphTracer"* %56, %"class.blink::AudioNode"* %0, %"class.blink::AudioNode"* null, i32 %1, i32 0) #11
  br label %57

57:                                               ; preds = %39, %38
  %58 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %7, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode10disconnectEPS0_RNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioNode"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %5 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %7, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %4, %"class.blink::BaseAudioContext"* %8) #11
  %9 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %10 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %10, i64 0, i32 12, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %48, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %1, i64 0, i32 5, i32 0
  %16 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %15, align 8
  br label %17

17:                                               ; preds = %14, %29
  %18 = phi %"class.blink::AudioHandler"* [ %10, %14 ], [ %30, %29 ]
  %19 = phi %"class.blink::AudioHandler"* [ %16, %14 ], [ %31, %29 ]
  %20 = phi i32 [ 0, %14 ], [ %33, %29 ]
  %21 = phi i32 [ 0, %14 ], [ %32, %29 ]
  %22 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %19, i64 0, i32 11, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %37

25:                                               ; preds = %29
  %26 = icmp eq i32 %32, 0
  br i1 %26, label %48, label %49

27:                                               ; preds = %37
  %28 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %9, align 8
  br label %29

29:                                               ; preds = %27, %17
  %30 = phi %"class.blink::AudioHandler"* [ %18, %17 ], [ %28, %27 ]
  %31 = phi %"class.blink::AudioHandler"* [ %19, %17 ], [ %44, %27 ]
  %32 = phi i32 [ %21, %17 ], [ %42, %27 ]
  %33 = add nuw i32 %20, 1
  %34 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %30, i64 0, i32 12, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %33, %35
  br i1 %36, label %17, label %25

37:                                               ; preds = %17, %37
  %38 = phi i32 [ %43, %37 ], [ 0, %17 ]
  %39 = phi i32 [ %42, %37 ], [ %21, %17 ]
  %40 = call zeroext i1 @_ZN5blink9AudioNode31DisconnectFromOutputIfConnectedEjRS0_j(%"class.blink::AudioNode"* %0, i32 %20, %"class.blink::AudioNode"* dereferenceable(168) %1, i32 %38)
  %41 = zext i1 %40 to i32
  %42 = add i32 %39, %41
  %43 = add nuw i32 %38, 1
  %44 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %15, align 8
  %45 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %44, i64 0, i32 11, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp ult i32 %43, %46
  br i1 %47, label %37, label %27

48:                                               ; preds = %3, %25
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 15, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0)) #11
  br label %56

49:                                               ; preds = %25
  %50 = bitcast %"class.blink::AudioHandler"* %30 to void (%"class.blink::AudioHandler"*)***
  %51 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %51, i64 18
  %53 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %52, align 8
  call void %53(%"class.blink::AudioHandler"* %30) #11
  %54 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %55 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %54, align 8
  call void @_ZN5blink16AudioGraphTracer18DidDisconnectNodesEPNS_9AudioNodeES2_jj(%"class.blink::AudioGraphTracer"* %55, %"class.blink::AudioNode"* %0, %"class.blink::AudioNode"* %1, i32 0, i32 0) #11
  br label %56

56:                                               ; preds = %49, %48
  %57 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %6, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %57) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode10disconnectEPS0_jRNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioNode"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.545", align 8
  %10 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %6, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %12, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %6, %"class.blink::BaseAudioContext"* %13) #11
  %14 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %15 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %15, i64 0, i32 12, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %2
  br i1 %18, label %19, label %25

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %1, i64 0, i32 5, i32 0
  %21 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %21, i64 0, i32 11, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %62, label %51

25:                                               ; preds = %4
  %26 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = add i32 %17, -1
  %28 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i32 %2, i32 0, i32 0, i32 %27, i32 0)
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %31 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %30, align 8
  %32 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %31, align 8
  call void %32(%"class.blink::ExceptionState"* %3, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %25, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %276

49:                                               ; preds = %51
  %50 = icmp eq i32 %56, 0
  br i1 %50, label %62, label %268

51:                                               ; preds = %19, %51
  %52 = phi i32 [ %57, %51 ], [ 0, %19 ]
  %53 = phi i32 [ %56, %51 ], [ 0, %19 ]
  %54 = call zeroext i1 @_ZN5blink9AudioNode31DisconnectFromOutputIfConnectedEjRS0_j(%"class.blink::AudioNode"* %0, i32 %2, %"class.blink::AudioNode"* dereferenceable(168) %1, i32 %52)
  %55 = zext i1 %54 to i32
  %56 = add i32 %53, %55
  %57 = add nuw i32 %52, 1
  %58 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %20, align 8
  %59 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %58, i64 0, i32 11, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp ult i32 %57, %60
  br i1 %61, label %51, label %49

62:                                               ; preds = %19, %49
  %63 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = bitcast %"class.WTF::StringAppend.545"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %67 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %68 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 32, i1 false) #11
  store i8* %66, i8** %67, align 8
  %70 = urem i32 %2, 10
  %71 = udiv i32 %2, 10
  %72 = trunc i32 %70 to i8
  %73 = or i8 %72, 48
  store i8 %73, i8* %66, align 1
  %74 = icmp ugt i32 %2, 9
  br i1 %74, label %75, label %90

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %76, i8** %67, align 8
  %77 = urem i32 %71, 10
  %78 = trunc i32 %77 to i8
  %79 = or i8 %78, 48
  store i8 %79, i8* %76, align 2
  %80 = icmp ugt i32 %2, 99
  br i1 %80, label %81, label %88

81:                                               ; preds = %75
  %82 = udiv i32 %2, 100
  %83 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %83, i8** %67, align 8
  %84 = urem i32 %82, 10
  %85 = trunc i32 %84 to i8
  %86 = or i8 %85, 48
  store i8 %86, i8* %83, align 1
  %87 = icmp ugt i32 %2, 999
  br i1 %87, label %92, label %101

88:                                               ; preds = %75
  %89 = ptrtoint i8* %76 to i64
  br label %104

90:                                               ; preds = %62
  %91 = ptrtoint i8* %66 to i64
  br label %104

92:                                               ; preds = %81, %92
  %93 = phi i32 [ %95, %92 ], [ %82, %81 ]
  %94 = load i8*, i8** %67, align 8
  %95 = udiv i32 %93, 10
  %96 = getelementptr inbounds i8, i8* %94, i64 -1
  store i8* %96, i8** %67, align 8
  %97 = urem i32 %95, 10
  %98 = trunc i32 %97 to i8
  %99 = or i8 %98, 48
  store i8 %99, i8* %96, align 1
  %100 = icmp ugt i32 %93, 99
  br i1 %100, label %92, label %101

101:                                              ; preds = %92, %81
  %102 = bitcast i8** %67 to i64*
  %103 = load i64, i64* %102, align 8
  br label %104

104:                                              ; preds = %101, %88, %90
  %105 = phi i64 [ %91, %90 ], [ %103, %101 ], [ %89, %88 ]
  %106 = ptrtoint i8* %69 to i64
  %107 = sub i64 %106, %105
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %68, align 8
  %109 = inttoptr i64 %105 to i8*
  %110 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %109, i32 %108) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #11
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %187, label %112

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %129

119:                                              ; preds = %112
  %120 = zext i32 %118 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #11
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %119
  call void @llvm.trap() #11
  unreachable

127:                                              ; preds = %119
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %117, align 4
  br label %129

129:                                              ; preds = %127, %112
  %130 = phi i32 [ %128, %127 ], [ %118, %112 ]
  %131 = load atomic i32, i32* %113 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %144

134:                                              ; preds = %129
  %135 = zext i32 %130 to i33
  %136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %135, i33 1) #11
  %137 = extractvalue { i33, i1 } %136, 1
  %138 = extractvalue { i33, i1 } %136, 0
  %139 = icmp slt i33 %138, 0
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %142, !prof !2

141:                                              ; preds = %134
  call void @llvm.trap() #11
  unreachable

142:                                              ; preds = %134
  %143 = trunc i33 %138 to i32
  store i32 %143, i32* %117, align 4
  br label %144

144:                                              ; preds = %142, %129
  %145 = phi i32 [ %143, %142 ], [ %130, %129 ]
  %146 = load atomic i32, i32* %113 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %144
  %150 = add i32 %145, -1
  store i32 %150, i32* %117, align 4
  br label %151

151:                                              ; preds = %149, %144
  %152 = phi i32 [ %150, %149 ], [ %145, %144 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  br label %155

155:                                              ; preds = %151, %154
  %156 = load atomic i32, i32* %113 monotonic, align 4, !noalias !23
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = load i32, i32* %117, align 4
  br i1 %158, label %160, label %170

160:                                              ; preds = %155
  %161 = zext i32 %159 to i33
  %162 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #11
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !2

167:                                              ; preds = %160
  call void @llvm.trap() #11, !noalias !23
  unreachable

168:                                              ; preds = %160
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %117, align 4, !noalias !23
  br label %170

170:                                              ; preds = %155, %168
  %171 = phi i32 [ %169, %168 ], [ %159, %155 ]
  %172 = bitcast %"class.WTF::StringAppend.545"* %9 to i64*
  store i64 ptrtoint ([9 x i8]* @.str.48 to i64), i64* %172, align 8, !alias.scope !23
  %173 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %173, align 8, !alias.scope !23
  %174 = load atomic i32, i32* %113 monotonic, align 4, !noalias !23
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %191

177:                                              ; preds = %170
  %178 = zext i32 %171 to i33
  %179 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %178, i33 1) #11
  %180 = extractvalue { i33, i1 } %179, 1
  %181 = extractvalue { i33, i1 } %179, 0
  %182 = icmp slt i33 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %185, !prof !2

184:                                              ; preds = %177
  call void @llvm.trap() #11, !noalias !23
  unreachable

185:                                              ; preds = %177
  %186 = trunc i33 %181 to i32
  store i32 %186, i32* %117, align 4, !noalias !23
  br label %191

187:                                              ; preds = %104
  %188 = bitcast %"class.WTF::StringAppend.545"* %9 to i64*
  store i64 ptrtoint ([9 x i8]* @.str.48 to i64), i64* %188, align 8, !alias.scope !23
  %189 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %189, align 8, !alias.scope !23
  %190 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.49, i64 0, i64 0), i8** %190, align 8, !alias.scope !23
  br label %203

191:                                              ; preds = %185, %170
  %192 = phi i32 [ %186, %185 ], [ %171, %170 ]
  %193 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.49, i64 0, i64 0), i8** %193, align 8, !alias.scope !23
  %194 = load atomic i32, i32* %113 monotonic, align 4, !noalias !23
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %191
  %198 = add i32 %192, -1
  store i32 %198, i32* %117, align 4, !noalias !23
  br label %199

199:                                              ; preds = %197, %191
  %200 = phi i32 [ %198, %197 ], [ %192, %191 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11, !noalias !23
  br label %203

203:                                              ; preds = %187, %199, %202
  %204 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.545"* nonnull %9)
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %205, align 8
  %206 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %207 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %206, align 8
  %208 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %207, align 8
  call void %208(%"class.blink::ExceptionState"* %3, i32 15, %"class.WTF::String"* nonnull dereferenceable(8) %8) #11
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %203
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #11
  br label %224

224:                                              ; preds = %203, %220, %223
  %225 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #11
  br label %241

241:                                              ; preds = %224, %237, %240
  br i1 %111, label %267, label %242

242:                                              ; preds = %241
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  %255 = load i32, i32* %247, align 4
  br label %256

256:                                              ; preds = %251, %254
  %257 = phi i32 [ %252, %251 ], [ %255, %254 ]
  %258 = load atomic i32, i32* %243 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %263

261:                                              ; preds = %256
  %262 = add i32 %257, -1
  store i32 %262, i32* %247, align 4
  br label %263

263:                                              ; preds = %261, %256
  %264 = phi i32 [ %262, %261 ], [ %257, %256 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  br label %267

267:                                              ; preds = %241, %263, %266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br label %268

268:                                              ; preds = %267, %49
  %269 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %14, align 8
  %270 = bitcast %"class.blink::AudioHandler"* %269 to void (%"class.blink::AudioHandler"*)***
  %271 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %271, i64 18
  %273 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %272, align 8
  call void %273(%"class.blink::AudioHandler"* %269) #11
  %274 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %275 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %274, align 8
  call void @_ZN5blink16AudioGraphTracer18DidDisconnectNodesEPNS_9AudioNodeES2_jj(%"class.blink::AudioGraphTracer"* %275, %"class.blink::AudioNode"* %0, %"class.blink::AudioNode"* %1, i32 %2, i32 0) #11
  br label %276

276:                                              ; preds = %268, %48
  %277 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %11, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %277) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.545"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.784"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #11
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %3, i8* %8) #11
  %9 = bitcast %"class.WTF::StringTypeAdapter.784"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %2, i8* %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.545"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #11
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.545"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.545"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #11
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.545"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #11
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode10disconnectEPS0_jjRNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioNode"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringAppend.544", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringAppend", align 8
  %14 = alloca %"class.WTF::StringAppend.544", align 8
  %15 = alloca %"class.WTF::StringAppend.545", align 8
  %16 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %9, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %18, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %9, %"class.blink::BaseAudioContext"* %19) #11
  %20 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %21 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %21, i64 0, i32 12, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp ugt i32 %23, %2
  br i1 %24, label %49, label %25

25:                                               ; preds = %5
  %26 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = add i32 %23, -1
  %28 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i32 %2, i32 0, i32 0, i32 %27, i32 0)
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %31 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %30, align 8
  %32 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %31, align 8
  call void %32(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %10) #11
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %25, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %462

49:                                               ; preds = %5
  %50 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %1, i64 0, i32 5, i32 0
  %51 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %51, i64 0, i32 11, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp ugt i32 %53, %3
  br i1 %54, label %79, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %57 = add i32 %53, -1
  %58 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i64 0, i64 0), i32 %3, i32 0, i32 0, i32 %57, i32 0)
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  %60 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %61 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %60, align 8
  %62 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %61, align 8
  call void %62(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %11) #11
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #11
  br label %78

78:                                               ; preds = %55, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %462

79:                                               ; preds = %49
  %80 = call zeroext i1 @_ZN5blink9AudioNode31DisconnectFromOutputIfConnectedEjRS0_j(%"class.blink::AudioNode"* %0, i32 %2, %"class.blink::AudioNode"* dereferenceable(168) %1, i32 %3)
  br i1 %80, label %454, label %81

81:                                               ; preds = %79
  %82 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = bitcast %"class.WTF::StringAppend"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %83) #11
  %84 = bitcast %"class.WTF::StringAppend.544"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #11
  %85 = bitcast %"class.WTF::StringAppend.545"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #11
  %86 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #11
  %87 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %88 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %89 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %90 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 32, i1 false) #11
  store i8* %87, i8** %88, align 8
  %91 = urem i32 %2, 10
  %92 = udiv i32 %2, 10
  %93 = trunc i32 %91 to i8
  %94 = or i8 %93, 48
  store i8 %94, i8* %87, align 1
  %95 = icmp ugt i32 %2, 9
  br i1 %95, label %96, label %111

96:                                               ; preds = %81
  %97 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %97, i8** %88, align 8
  %98 = urem i32 %92, 10
  %99 = trunc i32 %98 to i8
  %100 = or i8 %99, 48
  store i8 %100, i8* %97, align 2
  %101 = icmp ugt i32 %2, 99
  br i1 %101, label %102, label %109

102:                                              ; preds = %96
  %103 = udiv i32 %2, 100
  %104 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %104, i8** %88, align 8
  %105 = urem i32 %103, 10
  %106 = trunc i32 %105 to i8
  %107 = or i8 %106, 48
  store i8 %107, i8* %104, align 1
  %108 = icmp ugt i32 %2, 999
  br i1 %108, label %113, label %122

109:                                              ; preds = %96
  %110 = ptrtoint i8* %97 to i64
  br label %125

111:                                              ; preds = %81
  %112 = ptrtoint i8* %87 to i64
  br label %125

113:                                              ; preds = %102, %113
  %114 = phi i32 [ %116, %113 ], [ %103, %102 ]
  %115 = load i8*, i8** %88, align 8
  %116 = udiv i32 %114, 10
  %117 = getelementptr inbounds i8, i8* %115, i64 -1
  store i8* %117, i8** %88, align 8
  %118 = urem i32 %116, 10
  %119 = trunc i32 %118 to i8
  %120 = or i8 %119, 48
  store i8 %120, i8* %117, align 1
  %121 = icmp ugt i32 %114, 99
  br i1 %121, label %113, label %122

122:                                              ; preds = %113, %102
  %123 = bitcast i8** %88 to i64*
  %124 = load i64, i64* %123, align 8
  br label %125

125:                                              ; preds = %122, %109, %111
  %126 = phi i64 [ %112, %111 ], [ %124, %122 ], [ %110, %109 ]
  %127 = ptrtoint i8* %90 to i64
  %128 = sub i64 %127, %126
  %129 = trunc i64 %128 to i32
  store i32 %129, i32* %89, align 8
  %130 = inttoptr i64 %126 to i8*
  %131 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %130, i32 %129) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #11
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %208, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %150

140:                                              ; preds = %133
  %141 = zext i32 %139 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #11
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %140
  call void @llvm.trap() #11
  unreachable

148:                                              ; preds = %140
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %138, align 4
  br label %150

150:                                              ; preds = %148, %133
  %151 = phi i32 [ %149, %148 ], [ %139, %133 ]
  %152 = load atomic i32, i32* %134 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %165

155:                                              ; preds = %150
  %156 = zext i32 %151 to i33
  %157 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %156, i33 1) #11
  %158 = extractvalue { i33, i1 } %157, 1
  %159 = extractvalue { i33, i1 } %157, 0
  %160 = icmp slt i33 %159, 0
  %161 = or i1 %158, %160
  br i1 %161, label %162, label %163, !prof !2

162:                                              ; preds = %155
  call void @llvm.trap() #11
  unreachable

163:                                              ; preds = %155
  %164 = trunc i33 %159 to i32
  store i32 %164, i32* %138, align 4
  br label %165

165:                                              ; preds = %163, %150
  %166 = phi i32 [ %164, %163 ], [ %151, %150 ]
  %167 = load atomic i32, i32* %134 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %165
  %171 = add i32 %166, -1
  store i32 %171, i32* %138, align 4
  br label %172

172:                                              ; preds = %170, %165
  %173 = phi i32 [ %171, %170 ], [ %166, %165 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #11
  br label %176

176:                                              ; preds = %172, %175
  %177 = load atomic i32, i32* %134 monotonic, align 4, !noalias !26
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = load i32, i32* %138, align 4
  br i1 %179, label %181, label %191

181:                                              ; preds = %176
  %182 = zext i32 %180 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #11
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !2

188:                                              ; preds = %181
  call void @llvm.trap() #11, !noalias !26
  unreachable

189:                                              ; preds = %181
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %138, align 4, !noalias !26
  br label %191

191:                                              ; preds = %176, %189
  %192 = phi i32 [ %190, %189 ], [ %180, %176 ]
  %193 = bitcast %"class.WTF::StringAppend.545"* %15 to i64*
  store i64 ptrtoint ([9 x i8]* @.str.48 to i64), i64* %193, align 8, !alias.scope !26
  %194 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %194, align 8, !alias.scope !26
  %195 = load atomic i32, i32* %134 monotonic, align 4, !noalias !26
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %212

198:                                              ; preds = %191
  %199 = zext i32 %192 to i33
  %200 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %199, i33 1) #11
  %201 = extractvalue { i33, i1 } %200, 1
  %202 = extractvalue { i33, i1 } %200, 0
  %203 = icmp slt i33 %202, 0
  %204 = or i1 %201, %203
  br i1 %204, label %205, label %206, !prof !2

205:                                              ; preds = %198
  call void @llvm.trap() #11, !noalias !26
  unreachable

206:                                              ; preds = %198
  %207 = trunc i33 %202 to i32
  store i32 %207, i32* %138, align 4, !noalias !26
  br label %212

208:                                              ; preds = %125
  %209 = bitcast %"class.WTF::StringAppend.545"* %15 to i64*
  store i64 ptrtoint ([9 x i8]* @.str.48 to i64), i64* %209, align 8, !alias.scope !26
  %210 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %210, align 8, !alias.scope !26
  %211 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51, i64 0, i64 0), i8** %211, align 8, !alias.scope !26
  br label %224

212:                                              ; preds = %206, %191
  %213 = phi i32 [ %207, %206 ], [ %192, %191 ]
  %214 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51, i64 0, i64 0), i8** %214, align 8, !alias.scope !26
  %215 = load atomic i32, i32* %134 monotonic, align 4, !noalias !26
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %212
  %219 = add i32 %213, -1
  store i32 %219, i32* %138, align 4, !noalias !26
  br label %220

220:                                              ; preds = %218, %212
  %221 = phi i32 [ %219, %218 ], [ %213, %212 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #11, !noalias !26
  br label %224

224:                                              ; preds = %208, %220, %223
  %225 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %225) #11
  %226 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %227 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %228 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %229 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %225, i8 -86, i64 32, i1 false) #11
  store i8* %226, i8** %227, align 8
  %230 = urem i32 %3, 10
  %231 = udiv i32 %3, 10
  %232 = trunc i32 %230 to i8
  %233 = or i8 %232, 48
  store i8 %233, i8* %226, align 1
  %234 = icmp ugt i32 %3, 9
  br i1 %234, label %235, label %250

235:                                              ; preds = %224
  %236 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %236, i8** %227, align 8
  %237 = urem i32 %231, 10
  %238 = trunc i32 %237 to i8
  %239 = or i8 %238, 48
  store i8 %239, i8* %236, align 2
  %240 = icmp ugt i32 %3, 99
  br i1 %240, label %241, label %248

241:                                              ; preds = %235
  %242 = udiv i32 %3, 100
  %243 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %243, i8** %227, align 8
  %244 = urem i32 %242, 10
  %245 = trunc i32 %244 to i8
  %246 = or i8 %245, 48
  store i8 %246, i8* %243, align 1
  %247 = icmp ugt i32 %3, 999
  br i1 %247, label %252, label %261

248:                                              ; preds = %235
  %249 = ptrtoint i8* %236 to i64
  br label %264

250:                                              ; preds = %224
  %251 = ptrtoint i8* %226 to i64
  br label %264

252:                                              ; preds = %241, %252
  %253 = phi i32 [ %255, %252 ], [ %242, %241 ]
  %254 = load i8*, i8** %227, align 8
  %255 = udiv i32 %253, 10
  %256 = getelementptr inbounds i8, i8* %254, i64 -1
  store i8* %256, i8** %227, align 8
  %257 = urem i32 %255, 10
  %258 = trunc i32 %257 to i8
  %259 = or i8 %258, 48
  store i8 %259, i8* %256, align 1
  %260 = icmp ugt i32 %253, 99
  br i1 %260, label %252, label %261

261:                                              ; preds = %252, %241
  %262 = bitcast i8** %227 to i64*
  %263 = load i64, i64* %262, align 8
  br label %264

264:                                              ; preds = %261, %248, %250
  %265 = phi i64 [ %251, %250 ], [ %263, %261 ], [ %249, %248 ]
  %266 = ptrtoint i8* %229 to i64
  %267 = sub i64 %266, %265
  %268 = trunc i64 %267 to i32
  store i32 %268, i32* %228, align 8
  %269 = inttoptr i64 %265 to i8*
  %270 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %269, i32 %268) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %225) #11
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.544"* nonnull sret %14, %"class.WTF::StringAppend.545"* nonnull dereferenceable(24) %15, %"class.WTF::StringImpl"* %270)
  %271 = bitcast %"class.WTF::StringAppend.544"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %271)
  %272 = bitcast %"class.WTF::StringAppend.544"* %14 to i64*
  %273 = load i64, i64* %272, align 8, !noalias !29
  %274 = bitcast %"class.WTF::StringAppend.544"* %6 to i64*
  store i64 %273, i64* %274, align 8, !noalias !29
  %275 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8, !noalias !29
  %277 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %276, %"class.WTF::StringImpl"** %277, align 8, !noalias !29
  %278 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %278, label %296, label %279

279:                                              ; preds = %264
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %296

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  %287 = zext i32 %286 to i33
  %288 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %287, i33 1) #11
  %289 = extractvalue { i33, i1 } %288, 1
  %290 = extractvalue { i33, i1 } %288, 0
  %291 = icmp slt i33 %290, 0
  %292 = or i1 %289, %291
  br i1 %292, label %293, label %294, !prof !2

293:                                              ; preds = %284
  call void @llvm.trap() #11
  unreachable

294:                                              ; preds = %284
  %295 = trunc i33 %290 to i32
  store i32 %295, i32* %285, align 4
  br label %296

296:                                              ; preds = %294, %279, %264
  %297 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %6, i64 0, i32 0, i32 1
  %298 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %14, i64 0, i32 0, i32 1
  %299 = bitcast i8** %298 to i64*
  %300 = load i64, i64* %299, align 8, !noalias !29
  %301 = bitcast i8** %297 to i64*
  store i64 %300, i64* %301, align 8, !noalias !29
  %302 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %14, i64 0, i32 1, i32 0, i32 0
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8, !noalias !29
  %304 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %303, %"class.WTF::StringImpl"** %304, align 8, !noalias !29
  %305 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %305, label %323, label %306

306:                                              ; preds = %296
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %323

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = zext i32 %313 to i33
  %315 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %314, i33 1) #11
  %316 = extractvalue { i33, i1 } %315, 1
  %317 = extractvalue { i33, i1 } %315, 0
  %318 = icmp slt i33 %317, 0
  %319 = or i1 %316, %318
  br i1 %319, label %320, label %321, !prof !2

320:                                              ; preds = %311
  call void @llvm.trap() #11
  unreachable

321:                                              ; preds = %311
  %322 = trunc i33 %317 to i32
  store i32 %322, i32* %312, align 4
  br label %323

323:                                              ; preds = %296, %306, %321
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %13, %"class.WTF::StringAppend.544"* nonnull byval(%"class.WTF::StringAppend.544") align 8 %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %271)
  %324 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %13)
  %325 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %324, %"class.WTF::StringImpl"** %325, align 8
  %326 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %327 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %326, align 8
  %328 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %327, align 8
  call void %328(%"class.blink::ExceptionState"* %4, i32 15, %"class.WTF::String"* nonnull dereferenceable(8) %12) #11
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %323
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #11
  br label %344

344:                                              ; preds = %323, %340, %343
  %345 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %346, null
  br i1 %347, label %361, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  br i1 %352, label %355, label %357

355:                                              ; preds = %348
  %356 = add i32 %354, -1
  store i32 %356, i32* %353, align 4
  br label %357

357:                                              ; preds = %355, %348
  %358 = phi i32 [ %356, %355 ], [ %354, %348 ]
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %346) #11
  br label %361

361:                                              ; preds = %360, %357, %344
  %362 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  br i1 %369, label %372, label %374

372:                                              ; preds = %365
  %373 = add i32 %371, -1
  store i32 %373, i32* %370, align 4
  br label %374

374:                                              ; preds = %372, %365
  %375 = phi i32 [ %373, %372 ], [ %371, %365 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %363) #11
  br label %378

378:                                              ; preds = %361, %374, %377
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %380 = icmp eq %"class.WTF::StringImpl"* %379, null
  br i1 %380, label %394, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %379) #11
  br label %394

394:                                              ; preds = %393, %390, %378
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %395, null
  br i1 %396, label %410, label %397

397:                                              ; preds = %394
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %397
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %397
  %407 = phi i32 [ %405, %404 ], [ %403, %397 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %395) #11
  br label %410

410:                                              ; preds = %394, %406, %409
  %411 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %412 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %411, align 8
  %413 = icmp eq %"class.WTF::StringImpl"* %412, null
  br i1 %413, label %427, label %414

414:                                              ; preds = %410
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load atomic i32, i32* %415 monotonic, align 4
  %417 = and i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %412, i64 0, i32 0
  %420 = load i32, i32* %419, align 4
  br i1 %418, label %421, label %423

421:                                              ; preds = %414
  %422 = add i32 %420, -1
  store i32 %422, i32* %419, align 4
  br label %423

423:                                              ; preds = %421, %414
  %424 = phi i32 [ %422, %421 ], [ %420, %414 ]
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %412) #11
  br label %427

427:                                              ; preds = %410, %423, %426
  br i1 %132, label %453, label %428

428:                                              ; preds = %427
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load atomic i32, i32* %429 monotonic, align 4
  %431 = and i32 %430, 2
  %432 = icmp eq i32 %431, 0
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %434 = load i32, i32* %433, align 4
  br i1 %432, label %435, label %437

435:                                              ; preds = %428
  %436 = add i32 %434, -1
  store i32 %436, i32* %433, align 4
  br label %437

437:                                              ; preds = %435, %428
  %438 = phi i32 [ %436, %435 ], [ %434, %428 ]
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %442

440:                                              ; preds = %437
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #11
  %441 = load i32, i32* %433, align 4
  br label %442

442:                                              ; preds = %437, %440
  %443 = phi i32 [ %438, %437 ], [ %441, %440 ]
  %444 = load atomic i32, i32* %429 monotonic, align 4
  %445 = and i32 %444, 2
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %449

447:                                              ; preds = %442
  %448 = add i32 %443, -1
  store i32 %448, i32* %433, align 4
  br label %449

449:                                              ; preds = %447, %442
  %450 = phi i32 [ %448, %447 ], [ %443, %442 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #11
  br label %453

453:                                              ; preds = %427, %449, %452
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  br label %462

454:                                              ; preds = %79
  %455 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %20, align 8
  %456 = bitcast %"class.blink::AudioHandler"* %455 to void (%"class.blink::AudioHandler"*)***
  %457 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %456, align 8
  %458 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %457, i64 18
  %459 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %458, align 8
  call void %459(%"class.blink::AudioHandler"* %455) #11
  %460 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %461 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %460, align 8
  call void @_ZN5blink16AudioGraphTracer18DidDisconnectNodesEPNS_9AudioNodeES2_jj(%"class.blink::AudioGraphTracer"* %461, %"class.blink::AudioNode"* %0, %"class.blink::AudioNode"* %1, i32 %2, i32 %3) #11
  br label %462

462:                                              ; preds = %454, %453, %78, %48
  %463 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %17, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %463) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode10disconnectEPNS_10AudioParamERNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioParam"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %5 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %7, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %4, %"class.blink::BaseAudioContext"* %8) #11
  %9 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %10 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %10, i64 0, i32 12, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %27, label %16

14:                                               ; preds = %16
  %15 = icmp eq i32 %21, 0
  br i1 %15, label %27, label %28

16:                                               ; preds = %3, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %3 ]
  %18 = phi i32 [ %21, %16 ], [ 0, %3 ]
  %19 = call zeroext i1 @_ZN5blink9AudioNode31DisconnectFromOutputIfConnectedEjRNS_10AudioParamE(%"class.blink::AudioNode"* %0, i32 %17, %"class.blink::AudioParam"* dereferenceable(72) %1)
  %20 = zext i1 %19 to i32
  %21 = add i32 %18, %20
  %22 = add nuw i32 %17, 1
  %23 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %9, align 8
  %24 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %23, i64 0, i32 12, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %22, %25
  br i1 %26, label %16, label %14

27:                                               ; preds = %3, %14
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 15, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.53, i64 0, i64 0)) #11
  br label %35

28:                                               ; preds = %14
  %29 = bitcast %"class.blink::AudioHandler"* %23 to void (%"class.blink::AudioHandler"*)***
  %30 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %30, i64 18
  %32 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %31, align 8
  call void %32(%"class.blink::AudioHandler"* %23) #11
  %33 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %34 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %33, align 8
  call void @_ZN5blink16AudioGraphTracer22DidDisconnectNodeParamEPNS_9AudioNodeEPNS_10AudioParamEj(%"class.blink::AudioGraphTracer"* %34, %"class.blink::AudioNode"* %0, %"class.blink::AudioParam"* %1, i32 0) #11
  br label %35

35:                                               ; preds = %28, %27
  %36 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %6, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

declare void @_ZN5blink16AudioGraphTracer22DidDisconnectNodeParamEPNS_9AudioNodeEPNS_10AudioParamEj(%"class.blink::AudioGraphTracer"*, %"class.blink::AudioNode"*, %"class.blink::AudioParam"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9AudioNode10disconnectEPNS_10AudioParamEjRNS_14ExceptionStateE(%"class.blink::AudioNode"*, %"class.blink::AudioParam"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.545", align 8
  %10 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %6, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %12, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %6, %"class.blink::BaseAudioContext"* %13) #11
  %14 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %15 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %15, i64 0, i32 12, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %2
  br i1 %18, label %43, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = add i32 %17, -1
  %22 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i32 %2, i32 0, i32 0, i32 %21, i32 0)
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %25 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %24, align 8
  %26 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %25, align 8
  call void %26(%"class.blink::ExceptionState"* %3, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %19, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %259

43:                                               ; preds = %4
  %44 = call zeroext i1 @_ZN5blink9AudioNode31DisconnectFromOutputIfConnectedEjRNS_10AudioParamE(%"class.blink::AudioNode"* %0, i32 %2, %"class.blink::AudioParam"* dereferenceable(72) %1)
  br i1 %44, label %251, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  %47 = bitcast %"class.WTF::StringAppend.545"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #11
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 32, i1 false) #11
  store i8* %49, i8** %50, align 8
  %53 = urem i32 %2, 10
  %54 = udiv i32 %2, 10
  %55 = trunc i32 %53 to i8
  %56 = or i8 %55, 48
  store i8 %56, i8* %49, align 1
  %57 = icmp ugt i32 %2, 9
  br i1 %57, label %58, label %73

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %59, i8** %50, align 8
  %60 = urem i32 %54, 10
  %61 = trunc i32 %60 to i8
  %62 = or i8 %61, 48
  store i8 %62, i8* %59, align 2
  %63 = icmp ugt i32 %2, 99
  br i1 %63, label %64, label %71

64:                                               ; preds = %58
  %65 = udiv i32 %2, 100
  %66 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %66, i8** %50, align 8
  %67 = urem i32 %65, 10
  %68 = trunc i32 %67 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %66, align 1
  %70 = icmp ugt i32 %2, 999
  br i1 %70, label %75, label %84

71:                                               ; preds = %58
  %72 = ptrtoint i8* %59 to i64
  br label %87

73:                                               ; preds = %45
  %74 = ptrtoint i8* %49 to i64
  br label %87

75:                                               ; preds = %64, %75
  %76 = phi i32 [ %78, %75 ], [ %65, %64 ]
  %77 = load i8*, i8** %50, align 8
  %78 = udiv i32 %76, 10
  %79 = getelementptr inbounds i8, i8* %77, i64 -1
  store i8* %79, i8** %50, align 8
  %80 = urem i32 %78, 10
  %81 = trunc i32 %80 to i8
  %82 = or i8 %81, 48
  store i8 %82, i8* %79, align 1
  %83 = icmp ugt i32 %76, 99
  br i1 %83, label %75, label %84

84:                                               ; preds = %75, %64
  %85 = bitcast i8** %50 to i64*
  %86 = load i64, i64* %85, align 8
  br label %87

87:                                               ; preds = %84, %71, %73
  %88 = phi i64 [ %74, %73 ], [ %86, %84 ], [ %72, %71 ]
  %89 = ptrtoint i8* %52 to i64
  %90 = sub i64 %89, %88
  %91 = trunc i64 %90 to i32
  store i32 %91, i32* %51, align 8
  %92 = inttoptr i64 %88 to i8*
  %93 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %92, i32 %91) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #11
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %170, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %112

102:                                              ; preds = %95
  %103 = zext i32 %101 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #11
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %102
  call void @llvm.trap() #11
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %100, align 4
  br label %112

112:                                              ; preds = %110, %95
  %113 = phi i32 [ %111, %110 ], [ %101, %95 ]
  %114 = load atomic i32, i32* %96 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %127

117:                                              ; preds = %112
  %118 = zext i32 %113 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #11
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !2

124:                                              ; preds = %117
  call void @llvm.trap() #11
  unreachable

125:                                              ; preds = %117
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %100, align 4
  br label %127

127:                                              ; preds = %125, %112
  %128 = phi i32 [ %126, %125 ], [ %113, %112 ]
  %129 = load atomic i32, i32* %96 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = add i32 %128, -1
  store i32 %133, i32* %100, align 4
  br label %134

134:                                              ; preds = %132, %127
  %135 = phi i32 [ %133, %132 ], [ %128, %127 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #11
  br label %138

138:                                              ; preds = %134, %137
  %139 = load atomic i32, i32* %96 monotonic, align 4, !noalias !32
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = load i32, i32* %100, align 4
  br i1 %141, label %143, label %153

143:                                              ; preds = %138
  %144 = zext i32 %142 to i33
  %145 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #11
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !2

150:                                              ; preds = %143
  call void @llvm.trap() #11, !noalias !32
  unreachable

151:                                              ; preds = %143
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %100, align 4, !noalias !32
  br label %153

153:                                              ; preds = %138, %151
  %154 = phi i32 [ %152, %151 ], [ %142, %138 ]
  %155 = bitcast %"class.WTF::StringAppend.545"* %9 to i64*
  store i64 ptrtoint ([51 x i8]* @.str.54 to i64), i64* %155, align 8, !alias.scope !32
  %156 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %156, align 8, !alias.scope !32
  %157 = load atomic i32, i32* %96 monotonic, align 4, !noalias !32
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %174

160:                                              ; preds = %153
  %161 = zext i32 %154 to i33
  %162 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #11
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !2

167:                                              ; preds = %160
  call void @llvm.trap() #11, !noalias !32
  unreachable

168:                                              ; preds = %160
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %100, align 4, !noalias !32
  br label %174

170:                                              ; preds = %87
  %171 = bitcast %"class.WTF::StringAppend.545"* %9 to i64*
  store i64 ptrtoint ([51 x i8]* @.str.54 to i64), i64* %171, align 8, !alias.scope !32
  %172 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %172, align 8, !alias.scope !32
  %173 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i8** %173, align 8, !alias.scope !32
  br label %186

174:                                              ; preds = %168, %153
  %175 = phi i32 [ %169, %168 ], [ %154, %153 ]
  %176 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i8** %176, align 8, !alias.scope !32
  %177 = load atomic i32, i32* %96 monotonic, align 4, !noalias !32
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = add i32 %175, -1
  store i32 %181, i32* %100, align 4, !noalias !32
  br label %182

182:                                              ; preds = %180, %174
  %183 = phi i32 [ %181, %180 ], [ %175, %174 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #11, !noalias !32
  br label %186

186:                                              ; preds = %170, %182, %185
  %187 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.545"* nonnull %9)
  %188 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %187, %"class.WTF::StringImpl"** %188, align 8
  %189 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %190 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %189, align 8
  %191 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %190, align 8
  call void %191(%"class.blink::ExceptionState"* %3, i32 15, %"class.WTF::String"* nonnull dereferenceable(8) %8) #11
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #11
  br label %207

207:                                              ; preds = %186, %203, %206
  %208 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #11
  br label %224

224:                                              ; preds = %207, %220, %223
  br i1 %94, label %250, label %225

225:                                              ; preds = %224
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #11
  %238 = load i32, i32* %230, align 4
  br label %239

239:                                              ; preds = %234, %237
  %240 = phi i32 [ %235, %234 ], [ %238, %237 ]
  %241 = load atomic i32, i32* %226 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %239
  %245 = add i32 %240, -1
  store i32 %245, i32* %230, align 4
  br label %246

246:                                              ; preds = %244, %239
  %247 = phi i32 [ %245, %244 ], [ %240, %239 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #11
  br label %250

250:                                              ; preds = %224, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %259

251:                                              ; preds = %43
  %252 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %14, align 8
  %253 = bitcast %"class.blink::AudioHandler"* %252 to void (%"class.blink::AudioHandler"*)***
  %254 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %253, align 8
  %255 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %254, i64 18
  %256 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %255, align 8
  call void %256(%"class.blink::AudioHandler"* %252) #11
  %257 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %258 = load %"class.blink::AudioGraphTracer"*, %"class.blink::AudioGraphTracer"** %257, align 8
  call void @_ZN5blink16AudioGraphTracer22DidDisconnectNodeParamEPNS_9AudioNodeEPNS_10AudioParamEj(%"class.blink::AudioGraphTracer"* %258, %"class.blink::AudioNode"* %0, %"class.blink::AudioParam"* %1, i32 %2) #11
  br label %259

259:                                              ; preds = %251, %250, %42
  %260 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %11, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %260) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9AudioNode12channelCountEv(%"class.blink::AudioNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %3, i64 0, i32 19
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9AudioNode16channelCountModeEv(%"class.blink::AudioNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 0, i32 20
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %11 [
    i32 0, label %8
    i32 1, label %9
    i32 2, label %10
  ]

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i64 3) #11
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i64 11) #11
  br label %12

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), i64 8) #11
  br label %12

11:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0), i64 0) #11
  br label %12

12:                                               ; preds = %8, %9, %10, %11
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret %"class.WTF::StringImpl"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9AudioNode21channelInterpretationEv(%"class.blink::AudioNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = getelementptr inbounds %"class.blink::AudioHandler", %"class.blink::AudioHandler"* %4, i64 0, i32 21
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %10 [
    i32 0, label %8
    i32 1, label %9
  ]

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 8) #11
  br label %11

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #11
  br label %11

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.27, i64 0, i64 0), i64 0) #11
  br label %11

11:                                               ; preds = %8, %9, %10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9AudioNode13InterfaceNameEv(%"class.blink::AudioNode"* nocapture readnone) unnamed_addr #9 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names10kAudioNodeE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink9AudioNode19GetExecutionContextEv(%"class.blink::AudioNode"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %2, align 8
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %3) #11
  ret %"class.blink::ExecutionContext"* %4
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"*) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler22ProcessOnlyAudioParamsEj(%"class.blink::AudioHandler"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12AudioHandler24UpdatePullStatusIfNeededEv(%"class.blink::AudioHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #11
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink9AudioNode18GetWrapperTypeInfoEv(%"class.blink::AudioNode"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink9AudioNode18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #4

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #4

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #4

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #4

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #4

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #4

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.58, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.58, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #4

declare void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #4

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #11

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.58, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #11
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @_ZN5blink19DeferredTaskHandler4lockEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #12

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #4

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink9AudioNode18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %4 = icmp eq i8* %1, null
  br i1 %4, label %59, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = icmp eq %"class.blink::ThreadState"* %15, null
  br i1 %16, label %59, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %1, i64 -2
  %19 = bitcast i8* %18 to i16*
  %20 = load i16, i16* %19, align 2
  %21 = and i16 %20, 1
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %59

23:                                               ; preds = %17
  %24 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %3, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %25, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 112
  %27 = bitcast i8* %26 to %"class.blink::BaseAudioContext"**
  %28 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %27, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %3, %"class.blink::BaseAudioContext"* %28) #11
  %29 = getelementptr inbounds i8, i8* %1, i64 128
  %30 = bitcast i8* %29 to %"class.blink::AudioHandler"**
  %31 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %30, align 8
  %32 = bitcast %"class.blink::AudioHandler"* %31 to void (%"class.blink::AudioHandler"*)***
  %33 = load void (%"class.blink::AudioHandler"*)**, void (%"class.blink::AudioHandler"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %33, i64 2
  %35 = load void (%"class.blink::AudioHandler"*)*, void (%"class.blink::AudioHandler"*)** %34, align 8
  call void %35(%"class.blink::AudioHandler"* %31) #11
  %36 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %27, align 8
  %37 = bitcast %"class.blink::BaseAudioContext"* %36 to i1 (%"class.blink::BaseAudioContext"*)***
  %38 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %38, i64 29
  %40 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.blink::BaseAudioContext"* %36) #11
  %42 = load %"class.blink::BaseAudioContext"*, %"class.blink::BaseAudioContext"** %27, align 8
  br i1 %41, label %47, label %43

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %42, i64 0, i32 13
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %43, %23
  %48 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %42, i64 0, i32 12, i32 0
  %49 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %48, align 8
  %50 = load %"class.blink::AudioHandler"*, %"class.blink::AudioHandler"** %30, align 8
  store %"class.blink::AudioHandler"* null, %"class.blink::AudioHandler"** %30, align 8
  call void @_ZN5blink19DeferredTaskHandler25AddRenderingOrphanHandlerE13scoped_refptrINS_12AudioHandlerEE(%"class.blink::DeferredTaskHandler"* %49, %"class.blink::AudioHandler"* %50) #11
  br label %51

51:                                               ; preds = %43, %47
  %52 = getelementptr inbounds i8, i8* %1, i64 72
  %53 = bitcast i8* %52 to %"class.blink::InspectorHelperMixin"*
  %54 = bitcast i8* %52 to void (%"class.blink::InspectorHelperMixin"*)***
  %55 = load void (%"class.blink::InspectorHelperMixin"*)**, void (%"class.blink::InspectorHelperMixin"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::InspectorHelperMixin"*)*, void (%"class.blink::InspectorHelperMixin"*)** %55, i64 2
  %57 = load void (%"class.blink::InspectorHelperMixin"*)*, void (%"class.blink::InspectorHelperMixin"*)** %56, align 8
  call void %57(%"class.blink::InspectorHelperMixin"* %53) #11
  %58 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %25, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %58) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %59

59:                                               ; preds = %17, %12, %2, %51
  %60 = phi i1 [ true, %51 ], [ false, %17 ], [ false, %2 ], [ false, %12 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.209"*, %"struct.std::__1::pair.209"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #11
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.209"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.209"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.209"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !3

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.209"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.209"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.209"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.209"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #11
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.209"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !3

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.209"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #11
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.209"*, %"struct.std::__1::pair.209"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.209"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.209"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.209"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !3

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.209", %"struct.std::__1::pair.209"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.209"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.209"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.209"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.209"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #11
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.209"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.60, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #12

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_9AudioNodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_9AudioNodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_9AudioNodeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioNode"**
  %4 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %3, align 8
  %5 = icmp eq %"class.blink::AudioNode"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AudioNode", %"class.blink::AudioNode"* %4, i64 -1, i32 7, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::AudioNode"* null, %"class.blink::AudioNode"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #11
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #11
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink19DeferredTaskHandlerD1Ev(%"class.blink::DeferredTaskHandler"*) unnamed_addr #12

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #12

declare void @_ZN5blink14AudioNodeInputC1ERNS_12AudioHandlerE(%"class.blink::AudioNodeInput"*, %"class.blink::AudioHandler"* dereferenceable(136)) unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.364"*, %"class.std::__1::unique_ptr.367"* dereferenceable(8)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.367"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.367"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.367"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14AudioNodeInputENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.367"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.367"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.367"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.364"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.367"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.367"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.367"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.367"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14AudioNodeInputENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.367"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.367"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.364"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.367"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.367"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.367"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.367"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.367"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::AudioNodeInput"* null, %"class.blink::AudioNodeInput"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.367"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14AudioNodeInputENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.60, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN5blink15AudioNodeOutputC1EPNS_12AudioHandlerEj(%"class.blink::AudioNodeOutput"*, %"class.blink::AudioHandler"*, i32) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.375"*, %"class.std::__1::unique_ptr.378"* dereferenceable(8)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.378"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.378"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.378"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink15AudioNodeOutputENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([143 x i8], [143 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.375"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.378"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.378"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.378"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.375"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.375"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.378"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.378"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.378"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.378"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink15AudioNodeOutputENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([143 x i8], [143 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.375"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.378"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.378"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.375"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.375"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.378"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.378"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.378"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.378"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.378"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::AudioNodeOutput"* null, %"class.blink::AudioNodeOutput"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.378"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink15AudioNodeOutputENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.60, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.367"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14AudioNodeInputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.364"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.367"*, %"class.std::__1::unique_ptr.367"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.367"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.378"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.378"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink15AudioNodeOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.375"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.375", %"class.WTF::Vector.375"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.378"*, %"class.std::__1::unique_ptr.378"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.378"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.378"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #11
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #11
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #11
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #11
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.697* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.697* %16 to %"class.WTF::Vector.703"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.703"* %30, i16* nonnull dereferenceable(2) %3) #11
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #11
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.698"* %41, i8* nonnull dereferenceable(1) %4) #11
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.703"*, i16* dereferenceable(2)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.703"* %0, i32 %5) #11
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.703"* %0, i32 %5) #11
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.703"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.71, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.703"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.703"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.703"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.703"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.703"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.703"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #11
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.704"* %19, i16* nonnull %6) #11
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #11
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #11
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #11
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.704"* %53, i16* %48) #11
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.703"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.60, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.704"*, i16*) local_unnamed_addr #16 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.698"*, i8* dereferenceable(1)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.698"* %0, i32 %5) #11
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.698"* %0, i32 %5) #11
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.698"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.71, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.698"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.698"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.698"* %0, i32 %27) #11
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.698"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.698"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.698"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #11
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.699"* %18, i8* nonnull %6) #11
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #11
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.699"* %46, i8* %42) #11
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.698"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.698", %"class.WTF::Vector.698"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.60, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.699"*, i8*) local_unnamed_addr #16 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #11
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #12

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.298"*, %"class.blink::AudioChannel"*) local_unnamed_addr #16 comdat align 2 {
  %3 = bitcast %"class.blink::AudioChannel"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16BaseAudioContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BaseAudioContext"*
  %4 = bitcast i8* %1 to void (%"class.blink::BaseAudioContext"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BaseAudioContext"*, %"class.blink::Visitor"*)**, void (%"class.blink::BaseAudioContext"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BaseAudioContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::BaseAudioContext"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::BaseAudioContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::BaseAudioContext"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BaseAudioContext"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.333"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.333", %"class.blink::Member.333"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.333"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #11
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.341"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.341"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AudioNodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AudioNodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9AudioNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::AudioNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AudioNode"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.350"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.350", %"class.blink::Member.350"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.350"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #11
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.358"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.358"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10AudioParamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AudioParam"*
  tail call void @_ZNK5blink10AudioParam5TraceEPNS_7VisitorE(%"class.blink::AudioParam"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink10AudioParam5TraceEPNS_7VisitorE(%"class.blink::AudioParam"*, %"class.blink::Visitor"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.544"*, %"class.WTF::StringAppend.545"* byval(%"class.WTF::StringAppend.545") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.545"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.544"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.544"* byval(%"class.WTF::StringAppend.544") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.544"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #11
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.784", %"class.WTF::StringTypeAdapter.784"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.544"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.544"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.73, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.74, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.73, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.786", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.786"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.786"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.545"* %10, i8* %1) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.545"* %10) #11
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.787"* nonnull %30, i8* %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.544"* %5) #11
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.784"* nonnull %4, i8* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.786", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.786"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.786"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.545"* %10, i16* %1) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.545"* %10) #11
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.787"* nonnull %30, i16* %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.544"* %5) #11
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.784"* nonnull %4, i16* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.544"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.544", %"class.WTF::StringAppend.544"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.545"* %8) #11
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.545"* %8) #11
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.73, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.74, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.73, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.545"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.784", %"class.WTF::StringTypeAdapter.784"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.546"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.546"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.73, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.74, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.73, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.546"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.784", %"class.WTF::StringTypeAdapter.784"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.546", %"class.WTF::StringAppend.546"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.784"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.546", %"class.WTF::StringAppend.546"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.73, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.74, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.73, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.784"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.787"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.545"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.786", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.784"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.784"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.784"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.784", %"class.WTF::StringTypeAdapter.784"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.786"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.786"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.784"* nonnull %3, i8* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.787"* nonnull %34, i8* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.546"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.784"* nonnull %5, i8* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.784"*, i16*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.787"*, i16*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.545"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.786", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.784", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.784"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.784"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.784"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.784", %"class.WTF::StringTypeAdapter.784"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.784"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.786"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.545", %"class.WTF::StringAppend.545"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.786"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.784"* nonnull %3, i16* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.786", %"class.WTF::StringTypeAdapter.786"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.787"* nonnull %34, i16* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.546"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.784"* nonnull %5, i16* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.333"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.330"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.333"*, %"class.blink::Member.333"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.333", %"class.blink::Member.333"* %24, i64 %25
  ret %"class.blink::Member.333"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_6MemberINS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.75, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.76, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.5"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.341"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.339"*, %"class.blink::AudioNode"** dereferenceable(8), %"class.blink::AudioNode"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %4, align 8
  %6 = icmp eq %"class.blink::Member.341"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.339"* %0, %"class.blink::Member.341"* null)
  %9 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.341"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::AudioNode"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %40, align 8
  %42 = icmp eq %"class.blink::AudioNode"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::AudioNode"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::AudioNode"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.341"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.341"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::AudioNode"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::AudioNode"* %59, inttoptr (i64 -1 to %"class.blink::AudioNode"*)
  %67 = select i1 %66, %"class.blink::Member.341"* %60, %"class.blink::Member.341"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %73, align 8
  %75 = icmp eq %"class.blink::AudioNode"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.341"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.341"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.341"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %2, align 8
  %89 = ptrtoint %"class.blink::AudioNode"* %88 to i64
  %90 = bitcast %"class.blink::Member.341"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::AudioNode"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.341"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #11
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.339"* %0, %"class.blink::Member.341"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.341"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.341"*, i8 } undef, %"class.blink::Member.341"* %117, 0
  %119 = insertvalue { %"class.blink::Member.341"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.341"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.339"*, %"class.blink::Member.341"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.79, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.339"* %0, i32 %35, %"class.blink::Member.341"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.341"*
  %44 = call %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.339"* %0, %"class.blink::Member.341"* %43, i32 %40, %"class.blink::Member.341"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.341"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.341"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.339"*, i32, %"class.blink::Member.341"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.79, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %31, align 8
  %33 = icmp eq %"class.blink::Member.341"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.341"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.341"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.341"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.341"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.341"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.341"* %61, %"class.blink::Member.341"* %55
  %63 = bitcast %"class.blink::Member.341"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.341"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.341"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.339"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #11
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.341"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.339"* %0, %"class.blink::Member.341"* %42, i32 %1, %"class.blink::Member.341"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.341"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.341"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.341"* %87, %"class.blink::Member.341"* %82
  %89 = bitcast %"class.blink::Member.341"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.341"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.341"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.341"* %99, %"class.blink::Member.341"* %88
  %101 = bitcast %"class.blink::Member.341"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.341"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.341"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.341"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.339"*, %"class.blink::Member.341"*, i32, %"class.blink::Member.341"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.341"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.341"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.341"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.339"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.341"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.341"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.341"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.341"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.341"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.341"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.341"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.341"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %70, align 8
  %72 = icmp eq %"class.blink::AudioNode"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::AudioNode"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.341"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.341"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.341"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.341"* %93, null
  %95 = ptrtoint %"class.blink::Member.341"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::AudioNode"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::AudioNode"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::AudioNode"* %99, inttoptr (i64 -1 to %"class.blink::AudioNode"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.341"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::AudioNode"*, %"class.blink::AudioNode"** %113, align 8
  %115 = icmp eq %"class.blink::AudioNode"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.341"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.341"*, %"class.blink::Member.341"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.341", %"class.blink::Member.341"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.341"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.341"* %118, %"class.blink::Member.341"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.341"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.341"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.81, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([341 x i8], [341 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_9AudioNodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #4

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.350"* @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.347"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.350"*, %"class.blink::Member.350"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.350", %"class.blink::Member.350"* %24, i64 %25
  ret %"class.blink::Member.350"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([189 x i8], [189 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_6MemberINS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.358"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.356"*, %"class.blink::AudioParam"** dereferenceable(8), %"class.blink::AudioParam"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %4, align 8
  %6 = icmp eq %"class.blink::Member.358"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.356"* %0, %"class.blink::Member.358"* null)
  %9 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.358"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::AudioParam"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %40, align 8
  %42 = icmp eq %"class.blink::AudioParam"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::AudioParam"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::AudioParam"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.358"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.358"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::AudioParam"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::AudioParam"* %59, inttoptr (i64 -1 to %"class.blink::AudioParam"*)
  %67 = select i1 %66, %"class.blink::Member.358"* %60, %"class.blink::Member.358"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %73, align 8
  %75 = icmp eq %"class.blink::AudioParam"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.358"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.358"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.358"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %2, align 8
  %89 = ptrtoint %"class.blink::AudioParam"* %88 to i64
  %90 = bitcast %"class.blink::Member.358"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::AudioParam"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.358"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #11
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.356"* %0, %"class.blink::Member.358"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.358"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.358"*, i8 } undef, %"class.blink::Member.358"* %117, 0
  %119 = insertvalue { %"class.blink::Member.358"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.358"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.356"*, %"class.blink::Member.358"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.79, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.356"* %0, i32 %35, %"class.blink::Member.358"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.775"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.775"* %42 to %"class.blink::Member.358"*
  %44 = call %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.356"* %0, %"class.blink::Member.358"* %43, i32 %40, %"class.blink::Member.358"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.358"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.358"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.356"*, i32, %"class.blink::Member.358"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.79, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %31, align 8
  %33 = icmp eq %"class.blink::Member.358"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.358"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.775"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.775"* %44 to %"class.blink::Member.358"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.358"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.358"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.358"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.358"* %61, %"class.blink::Member.358"* %55
  %63 = bitcast %"class.blink::Member.358"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.358"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.358"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.356"* %0 to %"class.blink::HeapHashTableBacking.775"**
  store %"class.blink::HeapHashTableBacking.775"* %44, %"class.blink::HeapHashTableBacking.775"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.775", %"class.blink::HeapHashTableBacking.775"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #11
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.358"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.356"* %0, %"class.blink::Member.358"* %42, i32 %1, %"class.blink::Member.358"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.358"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.358"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.358"* %87, %"class.blink::Member.358"* %82
  %89 = bitcast %"class.blink::Member.358"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.358"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.358"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.358"* %99, %"class.blink::Member.358"* %88
  %101 = bitcast %"class.blink::Member.358"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.358"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.358"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.358"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.356"*, %"class.blink::Member.358"*, i32, %"class.blink::Member.358"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.358"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.358"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.358"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.356"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.358"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.358"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.358"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.358"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.358"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.358"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.358"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.358"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %70, align 8
  %72 = icmp eq %"class.blink::AudioParam"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::AudioParam"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.358"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.358"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.358"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.358"* %93, null
  %95 = ptrtoint %"class.blink::Member.358"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::AudioParam"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::AudioParam"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::AudioParam"* %99, inttoptr (i64 -1 to %"class.blink::AudioParam"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.358"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::AudioParam"*, %"class.blink::AudioParam"** %113, align 8
  %115 = icmp eq %"class.blink::AudioParam"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.358"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.358"*, %"class.blink::Member.358"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.358", %"class.blink::Member.358"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.358"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.358"* %118, %"class.blink::Member.358"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.358"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.358"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.775"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.81, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.775"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.775"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([346 x i8], [346 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_10AudioParamEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.339"*, %"class.blink::Member.341"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.341"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.339", %"class.WTF::HashTable.339"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #11
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #11
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_9AudioNodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #11
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member.341"*
  %47 = tail call %"class.blink::Member.341"* @_ZN3WTF9HashTableIN5blink6MemberINS1_9AudioNodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.339"* %0, %"class.blink::Member.341"* %46, i32 %43, %"class.blink::Member.341"* null) #11
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.356"*, %"class.blink::Member.358"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.358"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.356", %"class.WTF::HashTable.356"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #11
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #11
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking.775"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_10AudioParamEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #11
  %46 = bitcast %"class.blink::HeapHashTableBacking.775"* %45 to %"class.blink::Member.358"*
  %47 = tail call %"class.blink::Member.358"* @_ZN3WTF9HashTableIN5blink6MemberINS1_10AudioParamEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.356"* %0, %"class.blink::Member.358"* %46, i32 %43, %"class.blink::Member.358"* null) #11
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIDnEEvOT_(%"class.WTF::Vector.330"*, i8** dereferenceable(8)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.330"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.333"*, %"class.blink::Member.333"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.333", %"class.blink::Member.333"* %16, i64 %18
  %20 = bitcast %"class.blink::Member.333"* %19 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %2
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %25

25:                                               ; preds = %2, %23
  %26 = load i32, i32* %3, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.330"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.333"*, %"class.blink::Member.333"** %8, align 8
  %10 = icmp eq %"class.blink::Member.333"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.333"*, %"class.blink::Member.333"** %8, align 8
  %26 = icmp eq %"class.blink::Member.333"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.333"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.330"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_9AudioNodeEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.330"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.330"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.333"*, %"class.blink::Member.333"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.333"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.333"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.330"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.330"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.82, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.83, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS1_INS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEEENS5_12VectorTraitsISB_EEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS1_INS_9AudioNodeEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEEENS5_12VectorTraitsISB_EEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([405 x i8], [405 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HeapHashSetINS3_INS1_9AudioNodeEEENS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEENS_12VectorTraitsISC_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_9AudioNodeEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIDnEEvOT_(%"class.WTF::Vector.347"*, i8** dereferenceable(8)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.347"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.350"*, %"class.blink::Member.350"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.350", %"class.blink::Member.350"* %16, i64 %18
  %20 = bitcast %"class.blink::Member.350"* %19 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %2
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %25

25:                                               ; preds = %2, %23
  %26 = load i32, i32* %3, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.347"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.350"*, %"class.blink::Member.350"** %8, align 8
  %10 = icmp eq %"class.blink::Member.350"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.763"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.763"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.347"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.763", %"class.blink::HeapVectorBacking.763"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.350"*, %"class.blink::Member.350"** %8, align 8
  %26 = icmp eq %"class.blink::Member.350"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.350"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.63, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.347"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11HeapHashSetINS2_INS1_10AudioParamEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.347"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.347"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.347"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.763"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.763"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.350"*, %"class.blink::Member.350"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.763"* %17, null
  %23 = icmp ne %"class.blink::Member.350"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.350"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.347"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.763", %"class.blink::HeapVectorBacking.763"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.347"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.347"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.347", %"class.WTF::Vector.347"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.763", %"class.blink::HeapVectorBacking.763"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.82, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.763"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.83, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS1_INS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEEENS5_12VectorTraitsISB_EEE14AllocateObjectISE_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.763"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.763"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS1_INS_10AudioParamEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEEENS5_12VectorTraitsISB_EEE14AllocateObjectISE_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.5"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.5"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([411 x i8], [411 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11HeapHashSetINS3_INS1_10AudioParamEEENS_10MemberHashIS5_EENS_10HashTraitsIS6_EEEEEENS_12VectorTraitsISC_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11HeapHashSetINS2_INS_10AudioParamEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEENS6_12VectorTraitsISC_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!19 = distinct !{!19, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!31 = distinct !{!31, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!34 = distinct !{!34, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
