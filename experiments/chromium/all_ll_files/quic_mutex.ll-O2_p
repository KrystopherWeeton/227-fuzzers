; ModuleID = '../../net/third_party/quiche/src/quic/platform/api/quic_mutex.cc'
source_filename = "../../net/third_party/quiche/src/quic/platform/api/quic_mutex.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QuicReaderMutexLock" = type { %"class.quic::QuicMutex"* }
%"class.quic::QuicMutex" = type { %"class.quic::QuicLockImpl" }
%"class.quic::QuicLockImpl" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.quic::QuicWriterMutexLock" = type { %"class.quic::QuicMutex"* }

@_ZN4quic19QuicReaderMutexLockC1EPNS_9QuicMutexE = hidden unnamed_addr alias void (%"class.quic::QuicReaderMutexLock"*, %"class.quic::QuicMutex"*), void (%"class.quic::QuicReaderMutexLock"*, %"class.quic::QuicMutex"*)* @_ZN4quic19QuicReaderMutexLockC2EPNS_9QuicMutexE
@_ZN4quic19QuicReaderMutexLockD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicReaderMutexLock"*), void (%"class.quic::QuicReaderMutexLock"*)* @_ZN4quic19QuicReaderMutexLockD2Ev
@_ZN4quic19QuicWriterMutexLockC1EPNS_9QuicMutexE = hidden unnamed_addr alias void (%"class.quic::QuicWriterMutexLock"*, %"class.quic::QuicMutex"*), void (%"class.quic::QuicWriterMutexLock"*, %"class.quic::QuicMutex"*)* @_ZN4quic19QuicWriterMutexLockC2EPNS_9QuicMutexE
@_ZN4quic19QuicWriterMutexLockD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicWriterMutexLock"*), void (%"class.quic::QuicWriterMutexLock"*)* @_ZN4quic19QuicWriterMutexLockD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicMutex10WriterLockEv(%"class.quic::QuicMutex"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicMutex", %"class.quic::QuicMutex"* %0, i64 0, i32 0
  tail call void @_ZN4quic12QuicLockImpl10WriterLockEv(%"class.quic::QuicLockImpl"* %2) #3
  ret void
}

declare void @_ZN4quic12QuicLockImpl10WriterLockEv(%"class.quic::QuicLockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicMutex12WriterUnlockEv(%"class.quic::QuicMutex"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicMutex", %"class.quic::QuicMutex"* %0, i64 0, i32 0
  tail call void @_ZN4quic12QuicLockImpl12WriterUnlockEv(%"class.quic::QuicLockImpl"* %2) #3
  ret void
}

declare void @_ZN4quic12QuicLockImpl12WriterUnlockEv(%"class.quic::QuicLockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicMutex10ReaderLockEv(%"class.quic::QuicMutex"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicMutex", %"class.quic::QuicMutex"* %0, i64 0, i32 0
  tail call void @_ZN4quic12QuicLockImpl10ReaderLockEv(%"class.quic::QuicLockImpl"* %2) #3
  ret void
}

declare void @_ZN4quic12QuicLockImpl10ReaderLockEv(%"class.quic::QuicLockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic9QuicMutex12ReaderUnlockEv(%"class.quic::QuicMutex"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicMutex", %"class.quic::QuicMutex"* %0, i64 0, i32 0
  tail call void @_ZN4quic12QuicLockImpl12ReaderUnlockEv(%"class.quic::QuicLockImpl"* %2) #3
  ret void
}

declare void @_ZN4quic12QuicLockImpl12ReaderUnlockEv(%"class.quic::QuicLockImpl"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK4quic9QuicMutex16AssertReaderHeldEv(%"class.quic::QuicMutex"* nocapture) local_unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicReaderMutexLockC2EPNS_9QuicMutexE(%"class.quic::QuicReaderMutexLock"* nocapture, %"class.quic::QuicMutex"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicReaderMutexLock", %"class.quic::QuicReaderMutexLock"* %0, i64 0, i32 0
  store %"class.quic::QuicMutex"* %1, %"class.quic::QuicMutex"** %3, align 8
  %4 = getelementptr inbounds %"class.quic::QuicMutex", %"class.quic::QuicMutex"* %1, i64 0, i32 0
  tail call void @_ZN4quic12QuicLockImpl10ReaderLockEv(%"class.quic::QuicLockImpl"* %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicReaderMutexLockD2Ev(%"class.quic::QuicReaderMutexLock"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicReaderMutexLock", %"class.quic::QuicReaderMutexLock"* %0, i64 0, i32 0
  %3 = load %"class.quic::QuicMutex"*, %"class.quic::QuicMutex"** %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicMutex", %"class.quic::QuicMutex"* %3, i64 0, i32 0
  tail call void @_ZN4quic12QuicLockImpl12ReaderUnlockEv(%"class.quic::QuicLockImpl"* %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicWriterMutexLockC2EPNS_9QuicMutexE(%"class.quic::QuicWriterMutexLock"* nocapture, %"class.quic::QuicMutex"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicWriterMutexLock", %"class.quic::QuicWriterMutexLock"* %0, i64 0, i32 0
  store %"class.quic::QuicMutex"* %1, %"class.quic::QuicMutex"** %3, align 8
  %4 = getelementptr inbounds %"class.quic::QuicMutex", %"class.quic::QuicMutex"* %1, i64 0, i32 0
  tail call void @_ZN4quic12QuicLockImpl10WriterLockEv(%"class.quic::QuicLockImpl"* %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicWriterMutexLockD2Ev(%"class.quic::QuicWriterMutexLock"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicWriterMutexLock", %"class.quic::QuicWriterMutexLock"* %0, i64 0, i32 0
  %3 = load %"class.quic::QuicMutex"*, %"class.quic::QuicMutex"** %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicMutex", %"class.quic::QuicMutex"* %3, i64 0, i32 0
  tail call void @_ZN4quic12QuicLockImpl12WriterUnlockEv(%"class.quic::QuicLockImpl"* %4) #3
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
