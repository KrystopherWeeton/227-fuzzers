; ModuleID = '../../third_party/blink/renderer/platform/fonts/skia/sktypeface_factory.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/skia/sktypeface_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.sk_sp.6 = type { %class.SkFontConfigInterface* }
%class.SkFontConfigInterface = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.SkFontConfigInterface::FontIdentity" = type <{ i32, i32, %class.SkString, %class.SkFontStyle, [4 x i8] }>
%class.SkString = type { %class.sk_sp.7 }
%class.sk_sp.7 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.sk_sp.9 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18SkTypeface_Factory36FromFontConfigInterfaceIdAndTtcIndexEii(%class.sk_sp* noalias sret, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.6, align 8
  %5 = alloca %"struct.SkFontConfigInterface::FontIdentity", align 8
  %6 = bitcast %class.sk_sp.6* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  %7 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %4, i64 0, i32 0
  store %class.SkFontConfigInterface* inttoptr (i64 -6148914691236517206 to %class.SkFontConfigInterface*), %class.SkFontConfigInterface** %7, align 8
  call void @_ZN21SkFontConfigInterface9RefGlobalEv(%class.sk_sp.6* nonnull sret %4) #4
  %8 = bitcast %"struct.SkFontConfigInterface::FontIdentity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #4
  %9 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %5, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %5, i64 0, i32 2
  %13 = bitcast %class.SkString* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  %14 = getelementptr inbounds %"struct.SkFontConfigInterface::FontIdentity", %"struct.SkFontConfigInterface::FontIdentity"* %5, i64 0, i32 2
  call void @_ZN8SkStringC1Ev(%class.SkString* %14) #4
  store i32 328080, i32* %11, align 8
  store i32 %1, i32* %9, align 8
  store i32 %2, i32* %10, align 4
  %15 = load %class.SkFontConfigInterface*, %class.SkFontConfigInterface** %7, align 8
  %16 = bitcast %class.SkFontConfigInterface* %15 to void (%class.sk_sp*, %class.SkFontConfigInterface*, %"struct.SkFontConfigInterface::FontIdentity"*)***
  %17 = load void (%class.sk_sp*, %class.SkFontConfigInterface*, %"struct.SkFontConfigInterface::FontIdentity"*)**, void (%class.sk_sp*, %class.SkFontConfigInterface*, %"struct.SkFontConfigInterface::FontIdentity"*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.sk_sp*, %class.SkFontConfigInterface*, %"struct.SkFontConfigInterface::FontIdentity"*)*, void (%class.sk_sp*, %class.SkFontConfigInterface*, %"struct.SkFontConfigInterface::FontIdentity"*)** %17, i64 5
  %19 = load void (%class.sk_sp*, %class.SkFontConfigInterface*, %"struct.SkFontConfigInterface::FontIdentity"*)*, void (%class.sk_sp*, %class.SkFontConfigInterface*, %"struct.SkFontConfigInterface::FontIdentity"*)** %18, align 8
  call void %19(%class.sk_sp* sret %0, %class.SkFontConfigInterface* %15, %"struct.SkFontConfigInterface::FontIdentity"* nonnull dereferenceable(24) %5) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* %14) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #4
  %20 = load %class.SkFontConfigInterface*, %class.SkFontConfigInterface** %7, align 8
  %21 = icmp eq %class.SkFontConfigInterface* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkFontConfigInterface, %class.SkFontConfigInterface* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %class.SkFontConfigInterface* %20 to %class.SkRefCntBase*
  %28 = bitcast %class.SkFontConfigInterface* %20 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  call void %31(%class.SkRefCntBase* nonnull %27) #4
  br label %32

32:                                               ; preds = %3, %22, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN21SkFontConfigInterface9RefGlobalEv(%class.sk_sp.6* sret) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18SkTypeface_Factory23FromFilenameAndTtcIndexERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%class.sk_sp* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  tail call void @_ZN10SkTypeface12MakeFromFileEPKci(%class.sk_sp* sret %0, i8* %11, i32 %2) #4
  ret void
}

declare void @_ZN10SkTypeface12MakeFromFileEPKci(%class.sk_sp* sret, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18SkTypeface_Factory26FromFamilyNameAndFontStyleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERK11SkFontStyle(%class.sk_sp* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %class.SkFontStyle* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.9, align 8
  %5 = bitcast %class.sk_sp.9* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %4, i64 0, i32 0
  store %class.SkFontMgr* inttoptr (i64 -6148914691236517206 to %class.SkFontMgr*), %class.SkFontMgr** %6, align 8
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.9* nonnull sret %4) #4
  %7 = load %class.SkFontMgr*, %class.SkFontMgr** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  call void @_ZNK9SkFontMgr18legacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp* sret %0, %class.SkFontMgr* %7, i8* %15, i32 %17) #4
  %18 = load %class.SkFontMgr*, %class.SkFontMgr** %6, align 8
  %19 = icmp eq %class.SkFontMgr* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkFontMgr* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkFontMgr* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #4
  br label %30

30:                                               ; preds = %3, %20, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  ret void
}

declare void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.9* sret) local_unnamed_addr #2

declare void @_ZNK9SkFontMgr18legacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp* sret, %class.SkFontMgr*, i8*, i32) local_unnamed_addr #2

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
